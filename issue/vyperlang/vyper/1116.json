{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/1116",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/1116/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/1116/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/1116/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/1116",
  "id": 387197459,
  "node_id": "MDU6SXNzdWUzODcxOTc0NTk=",
  "number": 1116,
  "title": "Is Safe Remote Purchase vulnerable to a recursive call attack (answer: no, but let's keep things consistent) ?",
  "user": {
    "login": "sgryphon",
    "id": 339293,
    "node_id": "MDQ6VXNlcjMzOTI5Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sgryphon",
    "html_url": "https://github.com/sgryphon",
    "followers_url": "https://api.github.com/users/sgryphon/followers",
    "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
    "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
    "organizations_url": "https://api.github.com/users/sgryphon/orgs",
    "repos_url": "https://api.github.com/users/sgryphon/repos",
    "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sgryphon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 479554962,
      "node_id": "MDU6TGFiZWw0Nzk1NTQ5NjI=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/bug",
      "name": "bug",
      "color": "ee0701",
      "default": true,
      "description": "Bug that shouldn't change language semantics when fixed."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2018-12-04T09:40:43Z",
  "updated_at": "2018-12-06T13:49:49Z",
  "closed_at": "2018-12-06T13:49:49Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Version Information\r\n\r\n* vyper Version: latest (current docs)\r\n* OS: n/a\r\n* Python Version (python --version): n/a\r\n* Environment (output of `pip freeze`): n/a\r\n\r\n### What's your issue about?\r\n\r\nIn Vyper Safe Remote Purchase example, the buyer has put up an extra deposit, so it is in their interest to acknowledge the item was received.\r\n\r\n```\r\n@public\r\ndef received():\r\n    assert not self.unlocked #Is the item already purchased and pending confirmation\r\n        # from the buyer?\r\n    assert msg.sender == self.buyer\r\n    send(self.buyer, self.value) #Return the buyer's deposit (=value) to the buyer.\r\n    selfdestruct(self.seller) #Return the seller's deposit (=2*value)\r\n        # and the purchase price (=value) to the seller.\r\n```\r\n\t\t\r\nEarlier, in the auction example, it went to great lengths to describe the correct sequence of events:\r\n\r\n```\r\n    # 1. Conditions\r\n    # 2. Effects\r\n    # 3. Interaction\t\t\r\n```\r\n\t\t\r\nBut then in the Safe Remote Purchase example, does it not break those rules -- could the buyer not recursively call received(), inside a contract address that is receiving the send of the value?\r\n\r\nThen, because selfdestruct has not yet run, they can call received 4 times, leaving nothing for the seller?\r\n\r\n### How can it be fixed?\r\n\r\nFollow the 1/2/3 rules.\r\n\r\n#### Cute Animal Picture\r\n\r\n> put a cute animal picture here.\r\n\r\nUm.\r\n\r\n\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "jacqueswww",
    "id": 6917456,
    "node_id": "MDQ6VXNlcjY5MTc0NTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacqueswww",
    "html_url": "https://github.com/jacqueswww",
    "followers_url": "https://api.github.com/users/jacqueswww/followers",
    "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
    "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
    "repos_url": "https://api.github.com/users/jacqueswww/repos",
    "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/1116/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/1116/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444089267",
    "html_url": "https://github.com/vyperlang/vyper/issues/1116#issuecomment-444089267",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1116",
    "id": 444089267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDA4OTI2Nw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-04T12:52:14Z",
    "updated_at": "2018-12-04T12:56:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sgryphon @fubuloubu this example makes we wonder if there is room to build a `@run_once` decorator. Effectively  under the hood to have a toggled state variable with an assert. Maybe even `@run_only_once`.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444089267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444091641",
    "html_url": "https://github.com/vyperlang/vyper/issues/1116#issuecomment-444091641",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1116",
    "id": 444091641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDA5MTY0MQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-04T13:01:11Z",
    "updated_at": "2018-12-04T13:03:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sgryphon in this example would the contract not be destroyed one level deep? \r\n\r\n\r\n```\r\nreceived() -> send() -> received() -> selfdestruct\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444091641/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444115509",
    "html_url": "https://github.com/vyperlang/vyper/issues/1116#issuecomment-444115509",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1116",
    "id": 444115509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDExNTUwOQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-04T14:19:48Z",
    "updated_at": "2018-12-04T14:19:48Z",
    "author_association": "MEMBER",
    "body": "I think what he means is you could write a `buyer` contract that does this:\r\n\r\n```python\r\n@payable\r\ndef __default__():\r\n    self.srp.received()\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444115509/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444117475",
    "html_url": "https://github.com/vyperlang/vyper/issues/1116#issuecomment-444117475",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1116",
    "id": 444117475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDExNzQ3NQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-04T14:25:33Z",
    "updated_at": "2018-12-04T14:25:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu yes I understand that but `self.srp.received()` would then call `selfdestruct` which would destroy the contract ?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444117475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444120433",
    "html_url": "https://github.com/vyperlang/vyper/issues/1116#issuecomment-444120433",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1116",
    "id": 444120433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDEyMDQzMw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-04T14:34:14Z",
    "updated_at": "2018-12-04T14:35:58Z",
    "author_association": "MEMBER",
    "body": "@jacqueswww I'd rather have it be a `@multiple_calls_allowed` acknowledging that you have done the analysis and are okay with multiple calls to this method.\r\n\r\nThere could be some internal integer that tracks whether a method ID has been accessed by seeing if bit `n` is set (where `n` is the first byte of the method id). You would reset that bit at the end of every call, assuring that that function was not accessed again while it was running. This acts as sort of a bloom filter. The decorator would avoid this extra check.\r\n\r\nAt the end of *all* contract execution, the integer would be 0.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444120433/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444162338",
    "html_url": "https://github.com/vyperlang/vyper/issues/1116#issuecomment-444162338",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1116",
    "id": 444162338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDE2MjMzOA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-04T16:25:24Z",
    "updated_at": "2018-12-04T16:26:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu I am afraid that would be way to expensive gas wise, as one would need to use storage to persist between calls, or use an inconsistent ABI call spec that contains this using call data.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444162338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444164203",
    "html_url": "https://github.com/vyperlang/vyper/issues/1116#issuecomment-444164203",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1116",
    "id": 444164203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDE2NDIwMw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-04T16:30:30Z",
    "updated_at": "2018-12-04T16:34:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "The idea of `@run_once` or `@run_once(state_variable: bool)` would be to have a cleaner and more concise way of implementing this boilerplate:\r\n\r\n```python\r\nended: bool\r\n\r\n@public\r\ndef once():\r\n      assert self.ended == False\r\n      self.ended = True \r\n```\r\nI really like the idea of not having to even have to expose it to the programmer, can still be read via ABI using some convention like `function_name_ran_once`.\r\n```python\r\n@run_only_once\r\n@public\r\ndef once():\r\n     send() \r\n     selfdestruct()\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444164203/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444193275",
    "html_url": "https://github.com/vyperlang/vyper/issues/1116#issuecomment-444193275",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1116",
    "id": 444193275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDE5MzI3NQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-04T17:50:47Z",
    "updated_at": "2018-12-04T17:50:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu @sgryphon I just did a test myself, to make sure I understand the mechanics. However `assert msg.sender == self.buyer` stops the re-entry beautifully because the call is from the purchase contract at that point.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444193275/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444304527",
    "html_url": "https://github.com/vyperlang/vyper/issues/1116#issuecomment-444304527",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1116",
    "id": 444304527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDMwNDUyNw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-04T23:52:49Z",
    "updated_at": "2018-12-04T23:52:49Z",
    "author_association": "MEMBER",
    "body": "I would say the boilerplate doesn't actually solve anything, just makes it easier to solve if you are aware of it.\r\n\r\nAwareness is key!",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444304527/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
