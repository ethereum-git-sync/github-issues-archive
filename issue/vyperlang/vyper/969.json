{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/969",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/969/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/969/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/969/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/969",
  "id": 345441565,
  "node_id": "MDU6SXNzdWUzNDU0NDE1NjU=",
  "number": 969,
  "title": "Allow lesser length array to be passed to external calls.",
  "user": {
    "login": "jacqueswww",
    "id": 6917456,
    "node_id": "MDQ6VXNlcjY5MTc0NTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacqueswww",
    "html_url": "https://github.com/jacqueswww",
    "followers_url": "https://api.github.com/users/jacqueswww/followers",
    "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
    "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
    "repos_url": "https://api.github.com/users/jacqueswww/repos",
    "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 479554962,
      "node_id": "MDU6TGFiZWw0Nzk1NTQ5NjI=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/bug",
      "name": "bug",
      "color": "ee0701",
      "default": true,
      "description": "Bug that shouldn't change language semantics when fixed."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2018-07-28T11:30:52Z",
  "updated_at": "2019-07-22T15:57:49Z",
  "closed_at": "2019-07-22T15:57:49Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Version Information\r\n\r\nAllow an array of lesser length to be passed to functions.\r\n\r\n```python\r\ncontract A:\r\n    def test(b: address[4]): modifying\r\n...\r\na: address[2]\r\nA(x).test(a) \r\n```\r\n\r\nShould work.\r\n\r\n#### Cute Animal Picture\r\n![](https://static.boredpanda.com/blog/wp-content/uuuploads/cute-baby-animals/cute-baby-animals-31.jpg)",
  "closed_by": {
    "login": "jacqueswww",
    "id": 6917456,
    "node_id": "MDQ6VXNlcjY5MTc0NTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacqueswww",
    "html_url": "https://github.com/jacqueswww",
    "followers_url": "https://api.github.com/users/jacqueswww/followers",
    "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
    "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
    "repos_url": "https://api.github.com/users/jacqueswww/repos",
    "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/969/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/969/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/408613014",
    "html_url": "https://github.com/vyperlang/vyper/issues/969#issuecomment-408613014",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/969",
    "id": 408613014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODYxMzAxNA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-28T14:51:56Z",
    "updated_at": "2018-07-28T14:51:56Z",
    "author_association": "MEMBER",
    "body": "So the call will pad the array? How would it pad it? ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/408613014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/408864142",
    "html_url": "https://github.com/vyperlang/vyper/issues/969#issuecomment-408864142",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/969",
    "id": 408864142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODg2NDE0Mg==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-30T13:32:31Z",
    "updated_at": "2019-03-13T10:05:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "It would pad in the same way as an assignment would. Basically allowing this would save this boilerplate scenario:\r\n\r\na_list: address[10]\r\nb_list: address[2]\r\nb_list[1] = alist[1]\r\nb_list[2] = alist[2]",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/408864142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447066020",
    "html_url": "https://github.com/vyperlang/vyper/issues/969#issuecomment-447066020",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/969",
    "id": 447066020,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzA2NjAyMA==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T18:10:33Z",
    "updated_at": "2018-12-13T18:10:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jacqueswww @fubuloubu are we sure that we don't want this to be something that has to be a bit more explicit? Like by creating an internal function `extend(a, n, v=0)`, that takes two required parameters, and one optional parameter. \r\n\r\nThe first parameter \"a\" would be the input list to be extended, the second parameter \"n\" would be the number of entries to extend the given list by, and the third, optional, parameter \"v\" would be the value to extend with, which would have a default value of 0.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447066020/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447086633",
    "html_url": "https://github.com/vyperlang/vyper/issues/969#issuecomment-447086633",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/969",
    "id": 447086633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzA4NjYzMw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T19:16:21Z",
    "updated_at": "2018-12-13T19:17:37Z",
    "author_association": "MEMBER",
    "body": "@jakerockland we have default args already, which is what I think you're suggesting. It works pretty well.\r\n\r\nMy issue is that I might have a function that batches an operation (say, letting me mint up to 64 NFTs at once), but I have to give it something that is exactly the size required or the operation will fail.\r\n\r\nThis is more of an ABI thing to be honest, we need a way to specify the difference between something that has to be exactly length `N` and something that could be up to length `N` but might be less (e.g. \"max length\" is |N`). Especially important given ABIv2 and people writing EIPs that use dynamically sized arrays for their function arguments.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447086633/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447109149",
    "html_url": "https://github.com/vyperlang/vyper/issues/969#issuecomment-447109149",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/969",
    "id": 447109149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzEwOTE0OQ==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T20:26:35Z",
    "updated_at": "2018-12-13T20:27:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu What do you mean by you have default args already? What I was suggesting was a bit different than the language just supporting default args, the idea was a built-in function that allows you to easily extend an array of length A to length B.\r\n\r\nHere's a bit of example code to clarify:\r\n\r\n```python\r\n@private\r\ndef foo(bar: uint256[4]) -> uint256:\r\n    m: uint256 = 0\r\n    for i in range(4):\r\n        if bar[i] > m:\r\n            m = bar[i]\r\n    return m\r\n\r\n@public\r\ndef foobar() -> uint256:\r\n    a: uint256[2] = [1, 2]\r\n    b: uint256[4] = extend(a, 2)\r\n    m: uint256 = self.foo(b)\r\n    return m\r\n```\r\n\r\nOr just tweaking the original excerpt from @jacqueswww, something like:\r\n\r\n```python\r\ncontract A:\r\n    def test(b: address[4]): modifying\r\n...\r\na: address[2]\r\nA(x).test(extend(a, 2)) \r\n```\r\n\r\nHowever, given the use case you just described, I'm not sure how optimal my proposal is.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447109149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447131774",
    "html_url": "https://github.com/vyperlang/vyper/issues/969#issuecomment-447131774",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/969",
    "id": 447131774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzEzMTc3NA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T21:44:47Z",
    "updated_at": "2018-12-13T21:45:00Z",
    "author_association": "MEMBER",
    "body": "I think a way to show you what may be problematic is an example like this:\r\n```python\r\ndef foo(bar: uint256[4]) -> uint256:\r\n    m: uint256 = 0\r\n    for i in range(bar):\r\n        if i > m:\r\n            m = i\r\n    return m\r\n```\r\n\r\nHow do I pass something of size 2 to that that doesn't over-iterate on `bar`?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447131774/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447133690",
    "html_url": "https://github.com/vyperlang/vyper/issues/969#issuecomment-447133690",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/969",
    "id": 447133690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzEzMzY5MA==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T21:51:47Z",
    "updated_at": "2018-12-13T21:51:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh yeah that is definitely problematic, that’s actually a good example of why I’m thinking an extend function might be helpful. 😅\nOn Dec 13, 2018, 2:45 PM -0700, Bryant Eisenbach <notifications@github.com>, wrote:\n> I think a way to show you what may be problematic is an example like this:\n> def foo(bar: uint256[4]) -> uint256:\n>    m: uint256 = 0\n>    for i in range(bar):\n>        if i > m:\n>            m = i\n>    return m\n> How do I pass something of size two to that that doesn't over-iterate on bar?\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447133690/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447148155",
    "html_url": "https://github.com/vyperlang/vyper/issues/969#issuecomment-447148155",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/969",
    "id": 447148155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzE0ODE1NQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T22:43:44Z",
    "updated_at": "2018-12-13T22:47:17Z",
    "author_association": "MEMBER",
    "body": "I think the best case would be to write something that ends up looking a lot like what we do with `bytes[N]` (where there is a `len` variable). This would probably be something specific to input/output parameters only.\r\n\r\nMaybe something like `uint256[:len]` (up to `len` in size)? It parses...\r\n```python\r\n>>> ast.parse('def foo(a: uint256[:4]): pass')\r\n<_ast.Module at 0x7f7c9d4edba8>\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447148155/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447149689",
    "html_url": "https://github.com/vyperlang/vyper/issues/969#issuecomment-447149689",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/969",
    "id": 447149689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzE0OTY4OQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T22:49:37Z",
    "updated_at": "2018-12-13T22:51:00Z",
    "author_association": "MEMBER",
    "body": "We could also have that specify a min size:\r\n```python\r\ndef foo(a: uint256[2:4]):\r\n    for i in a:\r\n        # Runs a minimum of twice and a maximum of 4 times\r\n\r\n# Produces ABI type: 'uint256[]', with optionals 'min=2', and 'max=4'\r\n```\r\n\r\nProbably pretty insidious though maybe",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447149689/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447150467",
    "html_url": "https://github.com/vyperlang/vyper/issues/969#issuecomment-447150467",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/969",
    "id": 447150467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzE1MDQ2Nw==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T22:52:38Z",
    "updated_at": "2018-12-13T22:52:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hrm yeah haha I'm a bit torn, on one hand I think its an elegant way to handle these cases, on the other it does feel pretty magical/isn't the most intuitive to understand what is going on because in Python syntax that would be used for slicing, not type annotating, right?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447150467/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447153626",
    "html_url": "https://github.com/vyperlang/vyper/issues/969#issuecomment-447153626",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/969",
    "id": 447153626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzE1MzYyNg==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T23:05:21Z",
    "updated_at": "2018-12-13T23:05:21Z",
    "author_association": "MEMBER",
    "body": "Yup! Hopefully I've reframed the real problem I see better. It's not about making the parameter larger to fit, it's about allowing the parameter to be smaller in the first place.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447153626/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447245506",
    "html_url": "https://github.com/vyperlang/vyper/issues/969#issuecomment-447245506",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/969",
    "id": 447245506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzI0NTUwNg==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-14T07:57:53Z",
    "updated_at": "2018-12-14T07:57:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah the reframing is very helpful, thank you 😊I think we were talking past each other a bit but I'm on the same page now 😅\r\n\r\nGoing off your suggestion above, what're your thoughts on something like this:\r\n\r\n```python\r\ndef foo(a: uint256[2...4]):\r\n    for i in a:\r\n        # Runs a minimum of twice and a maximum of 4 times\r\n\r\n# Produces ABI type: 'uint256[]', with optionals 'min=2', and 'max=4'\r\n```\r\n\r\nCould pre-parse the `...` to `:` and then it parses fine. Also going about it this way would in-turn remove `...` from Vyper syntax which is probably a reasonable thing to do anyway as it seems better to make people use `pass`, which is much more explicit and readable and `...`.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/447245506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/494049627",
    "html_url": "https://github.com/vyperlang/vyper/issues/969#issuecomment-494049627",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/969",
    "id": 494049627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDA0OTYyNw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-20T16:02:27Z",
    "updated_at": "2019-05-20T16:05:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "We decided that we won't support auto padding. However the following syntax should work, if not - it should be implemented:\r\n```python\r\nb: uint256[2] = [1, 2]\r\na: uint256[10] = b\r\n```\r\nOR\r\n```python\r\nb: uint256[2] = [1, 2]\r\na: uint256[10] = extend(b, 8)\r\n```\r\nFor dynamic arrays we need to create a separate proposal.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/494049627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/494056823",
    "html_url": "https://github.com/vyperlang/vyper/issues/969#issuecomment-494056823",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/969",
    "id": 494056823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDA1NjgyMw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-20T16:21:56Z",
    "updated_at": "2019-05-20T16:21:56Z",
    "author_association": "MEMBER",
    "body": "Added proposal #1440 for dynamic arrays from this conversation",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/494056823/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
