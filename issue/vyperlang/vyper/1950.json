{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/1950",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/1950/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/1950/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/1950/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/1950",
  "id": 613576317,
  "node_id": "MDU6SXNzdWU2MTM1NzYzMTc=",
  "number": 1950,
  "title": "VIP: Symbol Table",
  "user": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 757250644,
      "node_id": "MDU6TGFiZWw3NTcyNTA2NDQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Approved",
      "name": "VIP: Approved",
      "color": "98f765",
      "default": false,
      "description": "VIP Approved"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "charles-cooper",
    "id": 3867501,
    "node_id": "MDQ6VXNlcjM4Njc1MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/charles-cooper",
    "html_url": "https://github.com/charles-cooper",
    "followers_url": "https://api.github.com/users/charles-cooper/followers",
    "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
    "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
    "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
    "repos_url": "https://api.github.com/users/charles-cooper/repos",
    "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
    "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2020-05-06T20:00:16Z",
  "updated_at": "2021-08-27T11:24:59Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\nOutput the storage slot and memory index mapping for Vyper variables\r\n\r\n## Motivation\r\nA Symbol Table is a mapping between variables and their corresponding register locations. It is helpful to tools like debuggers to have this information so that it can use human-readable names (from the source code) when querying data from dynamic execution. For Vyper, because the EVM has several different memory spaces (storage slots, program memory, and the stack) it would be helpful to provide all of these in a table when compiling a program. Tools like https://tenderly.dev/ use this for advanced debugging.\r\n\r\n## Specification\r\nTBD what format this would take, and the external API to access it.\r\n\r\n## Backwards Compatibility\r\nNo backwards compatibility issues.\r\n\r\n## Dependencies\r\nNo dependencies.\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/1950/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/1950/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/624862820",
    "html_url": "https://github.com/vyperlang/vyper/issues/1950#issuecomment-624862820",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1950",
    "id": 624862820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDg2MjgyMA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-06T20:07:54Z",
    "updated_at": "2020-05-06T20:07:54Z",
    "author_association": "MEMBER",
    "body": "Vyper is easy enough to obtain this info for from the source map (see: https://github.com/vyperlang/vyper-debug), but having this in place ensures we have support for this when more advanced optimizations of storage slots and/or memory (or using the stack) are in play.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/624862820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/626875565",
    "html_url": "https://github.com/vyperlang/vyper/issues/1950#issuecomment-626875565",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1950",
    "id": 626875565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjg3NTU2NQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-11T18:27:53Z",
    "updated_at": "2020-05-11T18:27:53Z",
    "author_association": "MEMBER",
    "body": "Meeting notes: @fubuloubu to define format",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/626875565/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/905772539",
    "html_url": "https://github.com/vyperlang/vyper/issues/1950#issuecomment-905772539",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1950",
    "id": 905772539,
    "node_id": "IC_kwDOBGDvrM41_P37",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-25T18:27:52Z",
    "updated_at": "2021-08-25T19:59:33Z",
    "author_association": "COLLABORATOR",
    "body": "We're going to need something a little more advanced than this if/when we implement tight packing of variables in storage, but this is a provisional format:\r\n\r\n```python\r\nbar: uint256\r\n\r\n@external\r\n@nonreentrant(\"lock\")\r\ndef foo():\r\n    foo: uint256 = 0\r\n```\r\n```json\r\n{\r\n  \"foo.lock\": {\r\n    \"type\": \"uint256\",\r\n    \"location\": \"storage\",\r\n    \"slot\": 0\r\n  },\r\n  \"bar\": {\r\n    \"type\": \"uint256\",\r\n    \"location\": \"storage\",\r\n    \"slot\": 1\r\n  }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/905772539/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/906788137",
    "html_url": "https://github.com/vyperlang/vyper/issues/1950#issuecomment-906788137",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1950",
    "id": 906788137,
    "node_id": "IC_kwDOBGDvrM42DH0p",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-26T22:34:46Z",
    "updated_at": "2021-08-26T22:34:46Z",
    "author_association": "COLLABORATOR",
    "body": "Thinking through this a bit more, the format for nonreentrant keys should not reference the function name because the same nonreentrant lock can be used on multiple functions. Instead, to make sure it is disambiguated from variables with the same name (in the below case, a variable like `baz: uint256`), in the exported layout the key would be `\"nonreentrant.<lock name>\"`.\r\n```python\r\nbar: uint256\r\n\r\n@external\r\n@nonreentrant(\"baz\")\r\ndef foo():\r\n    foo: uint256 = 0\r\n```\r\n```json\r\n{\r\n  \"nonreentrant.baz\": {\r\n    \"type\": \"nonreentrant lock\",\r\n    \"location\": \"storage\",\r\n    \"slot\": 0\r\n  },\r\n  \"bar\": {\r\n    \"type\": \"uint256\",\r\n    \"location\": \"storage\",\r\n    \"slot\": 1\r\n  }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/906788137/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/906798030",
    "html_url": "https://github.com/vyperlang/vyper/issues/1950#issuecomment-906798030",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1950",
    "id": 906798030,
    "node_id": "IC_kwDOBGDvrM42DKPO",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-26T23:00:48Z",
    "updated_at": "2021-08-26T23:00:48Z",
    "author_association": "MEMBER",
    "body": "should the type be an actual abi type, and then add a description field or something that let's us specify internal vs. user-defined storage?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/906798030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/906800130",
    "html_url": "https://github.com/vyperlang/vyper/issues/1950#issuecomment-906800130",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1950",
    "id": 906800130,
    "node_id": "IC_kwDOBGDvrM42DKwC",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-26T23:05:17Z",
    "updated_at": "2021-08-26T23:05:17Z",
    "author_association": "COLLABORATOR",
    "body": "> should the type be an actual abi type, and then add a description field or something that let's us specify internal vs. user-defined storage?\r\n\r\nYou mean the type of the lock?\r\n\r\nI thought about this but I'm not sure how I feel about advertising it's some specific type as it's not like something you would ever .. ABI encode or pass to a function or do anything you would with a normal ABI type. As far as the user is concerned it's magic, and internally it can be a bool or a bit or a bytes32 or what have you, especially if we decide to change the packing.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/906800130/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/907131931",
    "html_url": "https://github.com/vyperlang/vyper/issues/1950#issuecomment-907131931",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1950",
    "id": 907131931,
    "node_id": "IC_kwDOBGDvrM42Ebwb",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-27T11:24:59Z",
    "updated_at": "2021-08-27T11:24:59Z",
    "author_association": "MEMBER",
    "body": "> > should the type be an actual abi type, and then add a description field or something that let's us specify internal vs. user-defined storage?\r\n> \r\n> You mean the type of the lock?\r\n> \r\n> I thought about this but I'm not sure how I feel about advertising it's some specific type as it's not like something you would ever .. ABI encode or pass to a function or do anything you would with a normal ABI type. As far as the user is concerned it's magic, and internally it can be a bool or a bit or a bytes32 or what have you, especially if we decide to change the packing.\r\n\r\nso that type is the \"internal type\" then?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/907131931/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
