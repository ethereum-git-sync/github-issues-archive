{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/545",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/545/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/545/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/545/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/545",
  "id": 279437493,
  "node_id": "MDU6SXNzdWUyNzk0Mzc0OTM=",
  "number": 545,
  "title": "VIP: Implement lexical block level scoping in Viper",
  "user": {
    "login": "yzhang90",
    "id": 5641590,
    "node_id": "MDQ6VXNlcjU2NDE1OTA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5641590?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/yzhang90",
    "html_url": "https://github.com/yzhang90",
    "followers_url": "https://api.github.com/users/yzhang90/followers",
    "following_url": "https://api.github.com/users/yzhang90/following{/other_user}",
    "gists_url": "https://api.github.com/users/yzhang90/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/yzhang90/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yzhang90/subscriptions",
    "organizations_url": "https://api.github.com/users/yzhang90/orgs",
    "repos_url": "https://api.github.com/users/yzhang90/repos",
    "events_url": "https://api.github.com/users/yzhang90/events{/privacy}",
    "received_events_url": "https://api.github.com/users/yzhang90/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 757250644,
      "node_id": "MDU6TGFiZWw3NTcyNTA2NDQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Approved",
      "name": "VIP: Approved",
      "color": "98f765",
      "default": false,
      "description": "VIP Approved"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2017-12-05T16:20:35Z",
  "updated_at": "2018-01-29T15:26:09Z",
  "closed_at": "2018-01-29T15:26:09Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Preamble\r\n\r\n    VIP: <to be assigned>\r\n    Title: Implement lexical block-level scoping in Viper\r\n    Author: @yzhang90 @daejunpark @pdaian @grosu\r\n    Type: Standard Track\r\n    Status: Draft\r\n    Created: 2017-12-1\r\n\r\n\r\n## Simple Summary\r\nViper should correctly implement block-level scoping semantics while fully disallowing shadowing to avoid misleading and error-prone code.\r\n\r\n## Abstract\r\nThe semantics of variable scoping is very important for a programming language because the scoping determines how a (variable) name binds to the actual object. The current Viper compiler mixes different scoping approaches and makes it very hard to reason about programs. We propose uniform use of lexical block-level scoping.\r\n\r\n## Motivation\r\nThe principles behind Viper are security, simplicity and auditability.  However, the current scoping in Viper is not clear and can make the code misleading and error-prone.\r\n\r\nIn Viper, a local variable is accessible throughout the whole function after it is declared.\r\nFor example, in the following program, `b` is equal to `1` if `choice` is `true` and `0` otherwise. Even though `a` is declared and assigned inside `if`, it is still accessible after the `if` statement finishes:\r\n```\r\ndef foo(choice: bool):\r\n    if (choice):\r\n        a = 1\r\n    b = a\r\n```\r\nHowever, index variables are treated differently from other local variables.\r\nThe scope of index variables is the `for` loop and the index variables are not accessible outside the loop. For example, Viper rejects the following program:\r\n```\r\ndef foo():\r\n    for i in range(10):\r\n        pass\r\n    i += 1\r\n```\r\nWhat's more, an annotated assignment `a:num`, which normally also initializes `a` to `0`, is only executed once in the loop and thus `b` equals `10` in the end:\r\n```\r\ndef foo():\r\n    for i in range(10):\r\n        a:num\r\n        a += 1\r\n    b = a\r\n```\r\nWith the current scoping rules, a program which declares a variable inside the `if...then...else` branch or the `for` loop is **almost** equivalent to declaring the variable before the `if` statement or the `for` loop.  For instance,\r\n```\r\ndef foo(choice: bool) -> num:\r\n     if choice:\r\n         a = 1\r\n         return a\r\n     else:\r\n         b = 2\r\n         return a + b\r\n```\r\nis equivalent to\r\n```\r\ndef foo(choice: bool) -> num:\r\n     a: num\r\n     b: num\r\n     if choice:\r\n         a = 1\r\n         return a\r\n     else:\r\n         b = 2\r\n         return a + b\r\n```\r\nThe difference is that for the second program, one can negate the `choice` variable and swap the `then` and `else` branch, but you could not do the same thing for the first program (because `a` is not defined before expression `a + b`!).\r\n\r\nSituations like the above make it unnecessarily difficult to reason about programs and program equivalence.\r\nIn general, it is much more convenient to formally analyze/verify programs with block-scoped variables, because that allows for compositional reasoning without modifying the original program (e.g., without moving the variable declarations to the beginning of the method).  Compositional verification is very important in practice, because it allows us to decompose large proof obligations into smaller proof tasks and even do those in parallel.\r\n\r\n## Specification\r\n\r\n> Throughout the specification, `before`/`after` means lexically appears `before`/`after`. \r\n\r\nSince global variables have their own namespace `self.<variable name>`, we only specify the lexical block-level scoping rules for local variables inside a function declaration.\r\n\r\n### Variable declaration and initialization\r\n\r\nA variable can be declared only with a statement of the form `<varname>: <type> = <initial_value>`, which also initializes it.\r\nMoreover, a variable cannot be read or written unless it has been previously declared.\r\nThis is in sharp contrast with the current Viper compiler, which allows statements like `a:num` without explicit initialization to declare a variable and implicitly initialize it to zero, as well as statements like `a = 1` without explicit declaration of `a` to initialize, implicitly declaring `a` as a variable of a type inferred by the compiler.\r\nFunction parameters are special: they are not initialized when declared but when the function is called.\r\n\r\n### Block scope\r\n\r\nA block scope is created by a function declaration, a conditional `if` statement, or by a `for` loop statement.\r\n\r\n* function declaration\r\n`def foo(a:num): stmts` introduces a block scope.  The block scope is started with all the formal parameters (i.e, `a` in our case) declared and followed by `stmts`. The block scope ends when the function declaration finishes.\r\n\r\n* if statement:\r\nThere are two cases.\r\n`if(exp) then stmts` introduces 1 block scope and all the statements in the `then` branch are executed inside this block scope.\r\n`if(exp) then stmts1 else stmts2` introduce 2 block scopes. `stmts1` is executed in one block scope and `stmts2` is executed in the other. We say that the two block scopes are parallel.\r\n\r\n* for loop: `for i in exp: stmt` introduces 2 nested blocks, with the outer block declaring the index variable `i` and the inner block holding the loop body `stmt`. Introducing 2 nested blocks is necessary because `i` should be visible inside the loop body and `i` should be alive throughout the loop. However, any variable declared inside the loop body is only alive in the current loop iteraton.\r\n\r\n### Rules\r\n\r\n* Variables must be lexically declared (and initialized) before being used.\r\nFor example, the following program should be rejected\r\n```\r\ndef foo():\r\n    a += 1\r\n```\r\nand so should be the following\r\n```\r\ndef foo():\r\n    a = 1\r\n```\r\nbecause `a` is not declared.\r\nThe assignment's semantics is to *only* update an already declared variable, and *not* to \r\ndeclare the variable as well in case it was not declared before.\r\n\r\n* Variables must only be declared *once* inside a block.\r\nFor example, the following program should be rejected:\r\n```\r\ndef foo():\r\n    a:num = 1\r\n    a:num = 2\r\n```\r\nBut the following program is valid:\r\n```\r\ndef foo():\r\n    a:num = 1\r\n    a = 2\r\n```\r\n\r\n* Variables declared in one block must be freed when the block ends.\r\nFor example, the following program is valid:\r\n```\r\ndef foo(choice: bool):\r\n    if (choice):\r\n        a:num = 0\r\n        a += 1\r\n    else:\r\n        a:num = 1\r\n        a += 2\r\n```\r\n`a` should be 1 or 3 at the end of corresponding block depending on the value of `choice`, but none of the two declared `a` variables is visible outside of the conditional statement.\r\n\r\n* Blocks can be nested (e.g., you can declare an `if` inside a `for` loop).\r\nVariables declared in the outer-blocks are visible to the inner-blocks, but not the other way around.\r\nFor example,\r\n```\r\ndef foo(choice: bool):\r\n    a:num = 10\r\n    if (choice):\r\n        a += 1\r\n```\r\n`a` is 11 if `choice` is true.\r\n\r\nHowever, the following program is not allowed because `a` is declared in the `if` block and invisible to the outer-block:\r\n\r\n```\r\ndef foo(choice: bool):\r\n    if (choice):\r\n        a:num = 1\r\n    a += 1\r\n```\r\n\r\n* *No shadowing*: Shadowing is notoriously error-prone.\r\nFollowing good practices in other languages, we propose that blocks *cannot* be used for variable shadowing.\r\nFor example, the following program should be rejected because the `a` inside the if statement shadows the `a` outside.\r\n```\r\ndef foo(choice:bool):\r\n    a:num =0\r\n    if (choice):\r\n        a:bool = true\r\n```\r\nShadowing is so evil and correctness is so paramount in Viper, that we encourage the language designers to consider an event stronger discipline than in other languages.  We propose to even disallow programs like the following one:\r\n```\r\ndef foo(choice:bool):\r\n    if (choice):\r\n        a:bool = true\r\n    a:num = 0\r\n```\r\nIn java, similar programs are allowed, because, technically, the second declaration of `a` is totally orthogonal to the former, due to the block scoping of the former.\r\nBut Viper implementations, to save memory, may prefer to do variable hoisting to lift all declarations to the top of the block.\r\nThe program above does not allow hoisting the second declaration of `a`.\r\nA simple *all declared variables in any block are different* policy will give the language both clarity and performance, at a price for developers that in our view is not much to pay.  This change will also ease reasoning while auditing programs, reducing confusion between identically named variables in different scopes.\r\n\r\n## Backwards Compatibility\r\n\r\nThis change is backward compatible with some Viper programs.  This includes all programs that, for instance, declare variables at the beginning of their functions, or do not use blocks (or declarations in blocks) in their functions.  Some Viper programs will need to be minorly modified for compatibility with these new rules.\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n***",
  "closed_by": {
    "login": "DavidKnott",
    "id": 17552858,
    "node_id": "MDQ6VXNlcjE3NTUyODU4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17552858?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/DavidKnott",
    "html_url": "https://github.com/DavidKnott",
    "followers_url": "https://api.github.com/users/DavidKnott/followers",
    "following_url": "https://api.github.com/users/DavidKnott/following{/other_user}",
    "gists_url": "https://api.github.com/users/DavidKnott/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/DavidKnott/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/DavidKnott/subscriptions",
    "organizations_url": "https://api.github.com/users/DavidKnott/orgs",
    "repos_url": "https://api.github.com/users/DavidKnott/repos",
    "events_url": "https://api.github.com/users/DavidKnott/events{/privacy}",
    "received_events_url": "https://api.github.com/users/DavidKnott/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/545/reactions",
    "total_count": 3,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 3,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/545/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/349466626",
    "html_url": "https://github.com/vyperlang/vyper/issues/545#issuecomment-349466626",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/545",
    "id": 349466626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTQ2NjYyNg==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T22:44:22Z",
    "updated_at": "2017-12-05T22:44:22Z",
    "author_association": "MEMBER",
    "body": ":+1::+1:",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/349466626/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351894300",
    "html_url": "https://github.com/vyperlang/vyper/issues/545#issuecomment-351894300",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/545",
    "id": 351894300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTg5NDMwMA==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-15T02:18:02Z",
    "updated_at": "2017-12-15T02:18:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "> No shadowing: Shadowing is notoriously error-prone.\r\n\r\nAgree strongly. There should only be one instance of a given variable name allowed between a given scope and all of the scopes surrounding it. So:\r\n\r\nBAN:\r\n\r\n```\r\na: num\r\n\r\n@public\r\ndef foo():\r\n    a = 5\r\n```\r\n\r\nBAN:\r\n\r\n```\r\n@public\r\ndef foo():\r\n  a:num = 5\r\n  if block.timestamp % 2 == 1:\r\n      a:bool = True\r\n  else:\r\n      a:bool = False\r\n```\r\n\r\nBAN:\r\n\r\n```\r\n@public\r\ndef foo():\r\n  if block.timestamp % 2 == 1:\r\n      a:bool = True\r\n  else:\r\n      a:bool = False\r\n  a = False\r\n```\r\n\r\nALLOW:\r\n\r\n```\r\n@public\r\ndef foo():\r\n    for i in range(5):\r\n      x = 3\r\n    for i in range(8):\r\n      x = 5\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/351894300/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/352459091",
    "html_url": "https://github.com/vyperlang/vyper/issues/545#issuecomment-352459091",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/545",
    "id": 352459091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjQ1OTA5MQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T15:27:53Z",
    "updated_at": "2017-12-18T15:27:53Z",
    "author_association": "MEMBER",
    "body": "Meeting minutes:\r\n\r\nApprove!",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/352459091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/353258579",
    "html_url": "https://github.com/vyperlang/vyper/issues/545#issuecomment-353258579",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/545",
    "id": 353258579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzI1ODU3OQ==",
    "user": {
      "login": "yzhang90",
      "id": 5641590,
      "node_id": "MDQ6VXNlcjU2NDE1OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5641590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yzhang90",
      "html_url": "https://github.com/yzhang90",
      "followers_url": "https://api.github.com/users/yzhang90/followers",
      "following_url": "https://api.github.com/users/yzhang90/following{/other_user}",
      "gists_url": "https://api.github.com/users/yzhang90/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yzhang90/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yzhang90/subscriptions",
      "organizations_url": "https://api.github.com/users/yzhang90/orgs",
      "repos_url": "https://api.github.com/users/yzhang90/repos",
      "events_url": "https://api.github.com/users/yzhang90/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yzhang90/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T04:59:33Z",
    "updated_at": "2017-12-21T04:59:33Z",
    "author_association": "NONE",
    "body": "After discussing with @fubuloubu , we think `<varname>: <type>` should also be allowed and the variable will automatically be initialized to default value (zero value).",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/353258579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/353263615",
    "html_url": "https://github.com/vyperlang/vyper/issues/545#issuecomment-353263615",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/545",
    "id": 353263615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzI2MzYxNQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T05:44:55Z",
    "updated_at": "2017-12-21T05:44:55Z",
    "author_association": "MEMBER",
    "body": "Yeah, I think it's easy to pick up that not supplying a value means it's the Zero/Null value.\r\n\r\nWe need confirm doc entries on what those values are for each type",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/353263615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/353298128",
    "html_url": "https://github.com/vyperlang/vyper/issues/545#issuecomment-353298128",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/545",
    "id": 353298128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzI5ODEyOA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T09:10:52Z",
    "updated_at": "2017-12-21T09:10:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "On it :) ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/353298128/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
