{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/323",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/323/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/323/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/323/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/323",
  "id": 252756025,
  "node_id": "MDU6SXNzdWUyNTI3NTYwMjU=",
  "number": 323,
  "title": "FEATURE:  Additional mapping support methods",
  "user": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2017-08-24T23:07:48Z",
  "updated_at": "2019-02-06T15:53:49Z",
  "closed_at": "2019-02-06T15:53:48Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "It would be useful if mappings had methods for accessing members similar to Python e.g. `keys()`,`values()`, and `items()`. These methods would mean that the underlying mapping type would need to track storage allocation implicitly, so that membership can be obtained. Additionally, a `limit` parameter can control the amount of members these methods return so that gas usage can be controlled (the default would be to return all allocated members).\r\n\r\nUsage might look like (using crowdfunding example):\r\n```python\r\nfunders: wei_value[address]\r\n\r\n@constant\r\ndef is_funder(_addr: address) -> bool:\r\n    return _addr in self.funders.keys()\r\n\r\n@constant\r\ndef amt_raised() -> wei_value:\r\n    sum: wei_value\r\n    for value in self.funders.values():\r\n         sum += value\r\n    return sum # or return sum(self.funders.values()) if sum() exists\r\n\r\n# Not enough money was raised! Refund everyone\r\n# (max 30 people at a time to avoid gas limit issues)\r\ndef refund():\r\n    assert block.timestamp >= self.deadline and self.balance < self.goal\r\n    for funder, value in self.funders.items(limit=30):\r\n        send(funder, value)\r\n        funder = None # Removes value from self.funders (or maybe del funder)\r\n```",
  "closed_by": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/323/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/323/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/325078667",
    "html_url": "https://github.com/vyperlang/vyper/issues/323#issuecomment-325078667",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/323",
    "id": 325078667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTA3ODY2Nw==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-26T03:11:11Z",
    "updated_at": "2017-08-26T03:11:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "This would more than double gas costs. It would require the map to keep track of an array of all keys and keep it updated, so that you can go through the keys when needed. It would also substantially increase code complexity. In that specific case, you can always just manually make a `funders_list` array and push to it. IMO a better approach for these kinds of problems is the \"poke-based\" paradigm, where a user needs to poke the contract to refund themselves; this more clearly aligns gas incentives and keeps per-transaction gas requirements down.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/325078667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/325469630",
    "html_url": "https://github.com/vyperlang/vyper/issues/323#issuecomment-325469630",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/323",
    "id": 325469630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTQ2OTYzMA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-28T20:22:36Z",
    "updated_at": "2017-08-28T20:22:36Z",
    "author_association": "MEMBER",
    "body": "I agree with the poke-based paradigm, that is mostly what I was using when I writing examples as it is the cheapeast and puts the gas costs in the right place. In some examples it is more useful (e.g. refunding in the crowdunding example) or unavoidable (e.g. calculating any sort of global statistics over members in the map).\r\n\r\nDoes gas get consumed to read data? My understanding was that gas only actually got consumed when writing out data (hence the `constant` decorator). I agree it would be a substantial enough increase to gas cost for that datatype that it shouldn't be the default for a map, I don't see how overall gas costs would increase that substantially though. I think this suggestion has enough utility that it should be considered as a future feature implemented in some easier-to-use way than the current method of the `range` method for iterating an array.\r\n\r\nIf you think this idea has limited utility (i.e. the need to call transactions for all the members of a map in a clear way or compute global statistics is not common), then I will close this issue.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/325469630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/327061530",
    "html_url": "https://github.com/vyperlang/vyper/issues/323#issuecomment-327061530",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/323",
    "id": 327061530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzA2MTUzMA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-05T03:20:52Z",
    "updated_at": "2017-09-05T03:31:02Z",
    "author_association": "MEMBER",
    "body": "Another thought, can additional code used to track membership in the mapping (e.g. `funders_list`) be added as a compiler extension such that when the proposed feature is requested, a standard method to track the information is employed behind the scenes, which prevents easy mistakes from having to manually track entries (e.g. forgetting to add to the array when multiple methods update the mapping)?\r\n\r\nThis way, it is optional but standardized and only increases gas costs when necessary.\r\n\r\nUpdated example:\r\n```python\r\nfunders: public(wei_value[address])\r\n# Set public getter on mapping to return list of (k, v) pairs\r\n\r\n@constant\r\ndef is_funder(_addr: address) -> bool:\r\n    return _addr in self.funders.keys() # Evaluates to list of tracked keys\r\n\r\n# Note: self.balance should be the same number, but ignoring that for our example\r\n@constant\r\ndef amt_raised() -> wei_value:\r\n    sum: wei_value\r\n    # self.funders.values() evaluates to [self.funders[k] for k in self.funders.keys()]\r\n    for value in self.funders.values():\r\n         sum += value\r\n    return sum # or return sum(self.funders.values()) if sum() exists\r\n\r\n# Not enough money was raised! Refund a person\r\ndef refund(_funder: address):\r\n    assert block.timestamp >= self.deadline and self.balance < self.goal\r\n    assert is_funder(_funder)\r\n    send(funder, self.funders[_funder])\r\n    del self.funders[_funder] # Resets value in self.funders AND removes from tracking list\r\n```\r\nCall above using `[c.refund(f) for (f, _) in c.get_funders()]` which avoids gas estimate problems and refunds everyone all at once since the list of addresses is accessed as @constant (no gas) and the transactions are processed sequentially by the caller externally (e.g. all N transactions can be created at once externally instead of trying to put an upper bound on the estimate of the `range()` function in the contract, putting control in the user's hands to decide how much gas s/he can spend at once)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/327061530/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/461043944",
    "html_url": "https://github.com/vyperlang/vyper/issues/323#issuecomment-461043944",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/323",
    "id": 461043944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTA0Mzk0NA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T14:33:32Z",
    "updated_at": "2019-02-06T14:33:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu can this be closed?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/461043944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/461074807",
    "html_url": "https://github.com/vyperlang/vyper/issues/323#issuecomment-461074807",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/323",
    "id": 461074807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTA3NDgwNw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T15:53:48Z",
    "updated_at": "2019-02-06T15:53:48Z",
    "author_association": "MEMBER",
    "body": "Yeah, doesn't make sense to think about mappings this way, plus we have other better features/proposals (a la iterators, etc.) that will take care of the proposed here.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/461074807/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
