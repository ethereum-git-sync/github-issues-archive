{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/1468",
  "id": 451763934,
  "node_id": "MDU6SXNzdWU0NTE3NjM5MzQ=",
  "number": 1468,
  "title": "Bug: can't assert result of external calls to modifiable functions ",
  "user": {
    "login": "haydenadams",
    "id": 9343483,
    "node_id": "MDQ6VXNlcjkzNDM0ODM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9343483?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/haydenadams",
    "html_url": "https://github.com/haydenadams",
    "followers_url": "https://api.github.com/users/haydenadams/followers",
    "following_url": "https://api.github.com/users/haydenadams/following{/other_user}",
    "gists_url": "https://api.github.com/users/haydenadams/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/haydenadams/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/haydenadams/subscriptions",
    "organizations_url": "https://api.github.com/users/haydenadams/orgs",
    "repos_url": "https://api.github.com/users/haydenadams/repos",
    "events_url": "https://api.github.com/users/haydenadams/events{/privacy}",
    "received_events_url": "https://api.github.com/users/haydenadams/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 479554962,
      "node_id": "MDU6TGFiZWw0Nzk1NTQ5NjI=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/bug",
      "name": "bug",
      "color": "ee0701",
      "default": true,
      "description": "Bug that shouldn't change language semantics when fixed."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 18,
  "created_at": "2019-06-04T02:10:04Z",
  "updated_at": "2019-08-24T15:44:17Z",
  "closed_at": "2019-08-24T15:44:17Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Version Information\r\n\r\n* vyper Version (output of `vyper --version`): 0.1.0b10\r\n\r\n### What's your issue about?\r\nUpgrading Uniswap from vyper 0.1.0b4 to 0.1.0b10 and noticed my tests were failing on asserting external contract calls that return bools.\r\n\r\nThis fails (reverts):\r\n```python\r\nassert self.token.transferFrom(msg.sender, self, token_amount)\r\n```\r\n\r\nThis succeeds:\r\n```python\r\nsuccess: bool = self.token.transferFrom(msg.sender, self, token_amount)\r\nassert success\r\n```\r\n\r\nThe interface was defined as:\r\n```\r\ncontract Token():\r\n    def transferFrom(_from : address, _to : address, _value : uint256) -> bool: modifying\r\n\r\n```",
  "closed_by": {
    "login": "jacqueswww",
    "id": 6917456,
    "node_id": "MDQ6VXNlcjY5MTc0NTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacqueswww",
    "html_url": "https://github.com/jacqueswww",
    "followers_url": "https://api.github.com/users/jacqueswww/followers",
    "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
    "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
    "repos_url": "https://api.github.com/users/jacqueswww/repos",
    "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/1468/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/498515219",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-498515219",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 498515219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODUxNTIxOQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-04T04:19:57Z",
    "updated_at": "2019-06-04T04:19:57Z",
    "author_association": "MEMBER",
    "body": "Doesn't seem to be call data causing the issue:\r\n```python\r\n>>> import vyper\r\n>>> c_interface = vyper.compile_code(\"\"\"\r\ncontract Foo:\r\n    def baz() -> bool: modifying\r\n\r\nfoo: Foo\r\n\r\n@public\r\ndef __init__(_foo: address):\r\n    self.foo = Foo(_foo)\r\n\r\n@public\r\ndef call_foo():\r\n    assert self.foo.baz()\r\n\"\"\", output_formats=['abi', 'bytecode'])\r\n\r\n>>> foo_interface = vyper.compile_code(\"\"\"\r\n@public\r\ndef baz() -> bool:\r\n    return True\r\n\"\"\", output_formats=['abi', 'bytecode'])\r\n\r\n>>> from web3 import Web3, EthereumTesterProvider\r\n>>> w3 = Web3(EthereumTesterProvider())\r\n>>> txn_hash = w3.eth.contract(**foo_interface).constructor().transact()\r\n>>> address = w3.eth.waitForTransactionReceipt(txn_hash)['contractAddress']\r\n>>> foo = w3.eth.contract(address, **foo_interface)\r\n\r\n>>> txn_hash = w3.eth.contract(**c_interface).constructor(foo.address).transact()\r\n>>> address = w3.eth.waitForTransactionReceipt(txn_hash)['contractAddress']\r\n>>> contract = w3.eth.contract(address, **c_interface)\r\n\r\n>>> contract.functions.call_foo().transact()\r\nHexBytes('0x13583b7cb86379c320c2358df34a144e2e9f028aa1c8980af1ae14461f38deac')\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/498515219/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/499410926",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-499410926",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 499410926,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTQxMDkyNg==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-06T09:00:00Z",
    "updated_at": "2019-06-06T09:00:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Same bug as https://github.com/ethereum/vyper/issues/1377",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/499410926/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/501467384",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-501467384",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 501467384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTQ2NzM4NA==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-12T21:47:44Z",
    "updated_at": "2019-06-12T21:47:44Z",
    "author_association": "COLLABORATOR",
    "body": "I inspected the IR of both ways, and `assert <external call>` uses staticcall, then I remembered https://github.com/ethereum/vyper/issues/1150. So it is correct in using static call but incorrect in not weeding out the program.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/501467384/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/501471183",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-501471183",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 501471183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTQ3MTE4Mw==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-12T22:01:41Z",
    "updated_at": "2019-06-12T22:01:41Z",
    "author_association": "COLLABORATOR",
    "body": "It's not just having to do with the semantics of `assert`, the compiler does not catch calls to modifying functions in `@constant` functions, either. So instead of compile failure, get a runtime failure when the modifying function gets called within staticcall context. repro:\r\n\r\n```python\r\ncontract Token:\r\n    def transferFrom(_from : address, _to : address, _value : uint256) -> bool: modifying\r\n\r\ntoken: public(address)\r\n\r\n@public\r\n@constant\r\ndef passes() :\r\n    success: bool = Token(self.token).transferFrom(msg.sender, self, 37)\r\n    assert success\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/501471183/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/501475158",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-501475158",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 501475158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTQ3NTE1OA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-12T22:17:41Z",
    "updated_at": "2019-06-12T22:17:41Z",
    "author_association": "MEMBER",
    "body": "Good find!",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/501475158/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/501477136",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-501477136",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 501477136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTQ3NzEzNg==",
    "user": {
      "login": "haydenadams",
      "id": 9343483,
      "node_id": "MDQ6VXNlcjkzNDM0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9343483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haydenadams",
      "html_url": "https://github.com/haydenadams",
      "followers_url": "https://api.github.com/users/haydenadams/followers",
      "following_url": "https://api.github.com/users/haydenadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/haydenadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haydenadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haydenadams/subscriptions",
      "organizations_url": "https://api.github.com/users/haydenadams/orgs",
      "repos_url": "https://api.github.com/users/haydenadams/repos",
      "events_url": "https://api.github.com/users/haydenadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haydenadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-12T22:25:50Z",
    "updated_at": "2019-06-12T22:25:50Z",
    "author_association": "NONE",
    "body": "Just wanna add that forcing all ERC20 transfers into two lines (catch return and assert) is:\r\n\r\n1) much uglier\r\n2) more likely to lead to people forgetting to assert their transfers\r\n\r\nI'm hoping there can be a more elegant solution the issues with assert-ing functions that can modify state.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/501477136/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/501489475",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-501489475",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 501489475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTQ4OTQ3NQ==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-12T23:21:51Z",
    "updated_at": "2019-06-12T23:21:51Z",
    "author_association": "COLLABORATOR",
    "body": "That's true but the ERC20 standard having a return code is pretty much a historical artifact of not having REVERT at the time. Nowadays everybody just REVERTs if the transfer preconditions are not met.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/501489475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/501495721",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-501495721",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 501495721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTQ5NTcyMQ==",
    "user": {
      "login": "haydenadams",
      "id": 9343483,
      "node_id": "MDQ6VXNlcjkzNDM0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9343483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haydenadams",
      "html_url": "https://github.com/haydenadams",
      "followers_url": "https://api.github.com/users/haydenadams/followers",
      "following_url": "https://api.github.com/users/haydenadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/haydenadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haydenadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haydenadams/subscriptions",
      "organizations_url": "https://api.github.com/users/haydenadams/orgs",
      "repos_url": "https://api.github.com/users/haydenadams/repos",
      "events_url": "https://api.github.com/users/haydenadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haydenadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-12T23:51:16Z",
    "updated_at": "2019-06-12T23:51:16Z",
    "author_association": "NONE",
    "body": "Not asserting is not a solution here at all.\r\n\r\n- There are popular ERC20 contracts live today that do not REVERT\r\n- It's not part of the ERC20 standard that they have to revert\r\n- Any auditor ever will tell you to add asserts to ERC20 calls \r\n\r\nHistorically Vyper has tried to produce clean, easily audit-able code that is as difficult to mess up as possible. This seems like a bit of a departure. Imo, if there are alternate solutions such as only preventing modifying state on asserting internal function calls its worth exploring.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/501495721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/501498744",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-501498744",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 501498744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTQ5ODc0NA==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-13T00:05:32Z",
    "updated_at": "2019-06-13T00:06:06Z",
    "author_association": "COLLABORATOR",
    "body": "So I see a couple possibilities here\r\n\r\n1) Roll back VIP1150\r\n2) Go with `ret: bool = external_call(..); assert ret` and just steer users towards this usage\r\n3) Require users to put the result of function calls in a variable, that way they are less likely to forget\r\n\r\nI don't think that rolling back VIP1150 in part as suggested will work.\r\n\r\n> ... such as only preventing modifying state on asserting internal function calls ...\r\n\r\nThis is a semantic inconsistency which can lead to even subtler bugs. For instance, `assert other.external_call` where `external_call` calls a modifying function on `self`.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/501498744/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/501502344",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-501502344",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 501502344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTUwMjM0NA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-13T00:23:16Z",
    "updated_at": "2019-06-13T00:23:30Z",
    "author_association": "MEMBER",
    "body": "I think requiring the handling of return values will assuage your concern. As a sort of opt-out behavior, we can just have a blank assignment if you _really_ don't wait it, i.e. `_ = Foo(addr).ext_call()`\r\n\r\nIf the developer had a return call, they had it for a reason and you should probably handle it.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/501502344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/502205406",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-502205406",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 502205406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjIwNTQwNg==",
    "user": {
      "login": "haydenadams",
      "id": 9343483,
      "node_id": "MDQ6VXNlcjkzNDM0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9343483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haydenadams",
      "html_url": "https://github.com/haydenadams",
      "followers_url": "https://api.github.com/users/haydenadams/followers",
      "following_url": "https://api.github.com/users/haydenadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/haydenadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haydenadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haydenadams/subscriptions",
      "organizations_url": "https://api.github.com/users/haydenadams/orgs",
      "repos_url": "https://api.github.com/users/haydenadams/repos",
      "events_url": "https://api.github.com/users/haydenadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haydenadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-14T17:55:02Z",
    "updated_at": "2019-06-14T17:55:02Z",
    "author_association": "NONE",
    "body": "> If the developer had a return call, they had it for a reason and you should probably handle it.\r\n\r\nThe most common use case in Ethereum is ERC20 token transfers, and asserting `transfer` and `transferFrom` returned true is the standard and safe way of interacting with them.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/502205406/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/502217610",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-502217610",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 502217610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjIxNzYxMA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-14T18:32:35Z",
    "updated_at": "2019-06-14T18:33:16Z",
    "author_association": "MEMBER",
    "body": "Yes, so forcing developers to handle returns by setting to a local variable would solve the problem. The compiler could optimize it out if it's determined not to be necessary (but the opposite isn't true)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/502217610/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/502224200",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-502224200",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 502224200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjIyNDIwMA==",
    "user": {
      "login": "haydenadams",
      "id": 9343483,
      "node_id": "MDQ6VXNlcjkzNDM0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9343483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haydenadams",
      "html_url": "https://github.com/haydenadams",
      "followers_url": "https://api.github.com/users/haydenadams/followers",
      "following_url": "https://api.github.com/users/haydenadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/haydenadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haydenadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haydenadams/subscriptions",
      "organizations_url": "https://api.github.com/users/haydenadams/orgs",
      "repos_url": "https://api.github.com/users/haydenadams/repos",
      "events_url": "https://api.github.com/users/haydenadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haydenadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-14T18:53:07Z",
    "updated_at": "2019-06-14T18:53:07Z",
    "author_association": "NONE",
    "body": "yes but having to set a local variable is still significantly uglier and more verbose than just `assert token.transfer(address, amount)` imo",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/502224200/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/502225637",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-502225637",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 502225637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjIyNTYzNw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-14T18:57:47Z",
    "updated_at": "2019-06-14T18:59:55Z",
    "author_association": "MEMBER",
    "body": "I don't disagree, but we have to balance with the issues we found from allowing state-modifying functions in assert statements e.g. #1150.\r\n\r\nThis represents a compromise that, while a little annoying and uglier, improves security and also ensures devs are using other projects more effectively. It would actually be harder to misuse ERC20 in this case!\r\n\r\n---\r\n\r\nWe should turn this into a VIP if this is the path we want to take to solve this problem.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/502225637/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/502227920",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-502227920",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 502227920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjIyNzkyMA==",
    "user": {
      "login": "haydenadams",
      "id": 9343483,
      "node_id": "MDQ6VXNlcjkzNDM0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9343483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haydenadams",
      "html_url": "https://github.com/haydenadams",
      "followers_url": "https://api.github.com/users/haydenadams/followers",
      "following_url": "https://api.github.com/users/haydenadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/haydenadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haydenadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haydenadams/subscriptions",
      "organizations_url": "https://api.github.com/users/haydenadams/orgs",
      "repos_url": "https://api.github.com/users/haydenadams/repos",
      "events_url": "https://api.github.com/users/haydenadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haydenadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-14T19:05:18Z",
    "updated_at": "2019-06-14T19:05:18Z",
    "author_association": "NONE",
    "body": "Sure, but https://github.com/ethereum/vyper/issues/1150 seems like a very rare/minor edge case which is still not *that* confusing (although I agree not ideal) whereas external token transfers are the most common thing on Ethereum.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/502227920/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/502234904",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-502234904",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 502234904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjIzNDkwNA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-14T19:28:36Z",
    "updated_at": "2019-06-14T19:36:09Z",
    "author_association": "MEMBER",
    "body": "```python\r\nsuccess: bool = token.transfer(...)\r\nassert success\r\n```\r\nseems clearer, more understandable, and in line with the values of readability than:\r\n```python\r\nassert token.transfer(...)\r\n```\r\n\r\n---\r\n\r\nAlso _forcing_ the handling of return statements makes this clearer, as the compiler wouldn't let you compile the following:\r\n```python\r\ntoken.transfer(...) # unhandled return value!\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/502234904/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/502309783",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-502309783",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 502309783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjMwOTc4Mw==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-14T23:26:39Z",
    "updated_at": "2019-06-14T23:29:57Z",
    "author_association": "COLLABORATOR",
    "body": "> yes but having to set a local variable is still significantly uglier and more verbose than just `assert token.transfer(address, amount)` imo\r\n\r\nIf it's about aesthetics, the developer is entitled to write a beautifying function,\r\n```python\r\ndef beautifulTransfer(tok, to, amount) : \r\n    ok: bool = tok.transfer(to, amount)\r\n    assert ok\r\n```\r\n\r\nOr more generically,\r\n```python\r\ndef assert_allow_modify(expr: bool, fail_message: bytes32 = \"\") : \r\n    ok: bool = expr\r\n    assert ok, fail_message\r\n```\r\n\r\nAnd if there's demand, we could even put `assert_allow_modify` in the standard library or make it a language keyword. Or as mentioned above, we could roll back #1150. But I think correctness is much more important than subjective assessments of aesthetics. As @fubuloubu pointed out, forcing the developer to handle return values is actually a more direct and robust solution to 'developers sometimes forgetting to handle the return value' than making it easy to handle it on one line.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/502309783/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/507683651",
    "html_url": "https://github.com/vyperlang/vyper/issues/1468#issuecomment-507683651",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1468",
    "id": 507683651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzY4MzY1MQ==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-02T13:44:54Z",
    "updated_at": "2019-07-02T13:44:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Adding my 2 wei, I very much like requiring functions that return a value to have that value assigned to a parameter and throwing a warning at the very least if that value isn't used. As @fubuloubu mentioned above, I'm also I'm a big fan of blank assignment to make explicit where something is not used `_ = ...`",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/507683651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
