{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/3272",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/3272/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/3272/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/3272/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/3272",
  "id": 1578427405,
  "node_id": "I_kwDOBGDvrM5eFOQN",
  "number": 3272,
  "title": "Warning about unused function parameters and imports",
  "user": {
    "login": "pcaversaccio",
    "id": 25297591,
    "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pcaversaccio",
    "html_url": "https://github.com/pcaversaccio",
    "followers_url": "https://api.github.com/users/pcaversaccio/followers",
    "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
    "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
    "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
    "repos_url": "https://api.github.com/users/pcaversaccio/repos",
    "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4038638334,
      "node_id": "LA_kwDOBGDvrM7wuLr-",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/bug%20-%20UX",
      "name": "bug - UX",
      "color": "1D76DB",
      "default": false,
      "description": "a bug related to UX"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2023-02-09T18:56:09Z",
  "updated_at": "2023-02-13T12:36:19Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Also related to https://github.com/vyperlang/vyper/issues/2431. Can we make sure that the compiler issues a warning for unused imports and function parameters? I think it would be a good idea in order to improve the quality and cleanliness of the code.\r\n\r\n#### Example: Function Parameters\r\n\r\n```vyper\r\n@external\r\n@pure\r\ndef test(owner: uint256) -> uint256:\r\n    return 1\r\n```\r\n\r\nFor instance here, the compiler should issue a warning that `owner` is not used.\r\n\r\n#### Example: Imports\r\n\r\n```vyper\r\n# workhorse.vy\r\nstruct MyStruct:\r\n    addr: address\r\n\r\ninterface UseStruct:\r\n    def use_struct(x: MyStruct): nonpayable\r\n\r\n@internal\r\ndef utility_function1(x: uint256, y: uint256):\r\n    return x + y\r\n\r\n@internal\r\ndef utility_function2(addr: UseStruct):\r\n    addr.use_struct(MyStruct({x: self}))\r\n```\r\n\r\n```vyper\r\nimport workhorse\r\n\r\n@external\r\n@pure\r\ndef foo() -> uint256:\r\n    return 1\r\n```\r\n\r\nFor instance here, the compiler should issue a warning that `workhorse` is not used.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/3272/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/3272/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1425163749",
    "html_url": "https://github.com/vyperlang/vyper/issues/3272#issuecomment-1425163749",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3272",
    "id": 1425163749,
    "node_id": "IC_kwDOBGDvrM5U8kXl",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-10T04:39:20Z",
    "updated_at": "2023-02-10T04:39:20Z",
    "author_association": "MEMBER",
    "body": "> Also related to #2431. Can we make sure that the compiler issues a warning for unused imports and function parameters? I think it would be a good idea in order to improve the quality and cleanliness of the code.\r\n> \r\n> #### Example: Function Parameters\r\n> ```vyper\r\n> @external\r\n> @pure\r\n> def test(owner: uint256) -> uint256:\r\n>     return 1\r\n> ```\r\n> \r\n> For instance here, the compiler should issue a warning that `owner` is not used.\r\n\r\nI don't think I agree with this one as much, there are definitely times where you need to implement a specific interface, but a parameter isn't useful\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1425163749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1425467924",
    "html_url": "https://github.com/vyperlang/vyper/issues/3272#issuecomment-1425467924",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3272",
    "id": 1425467924,
    "node_id": "IC_kwDOBGDvrM5U9uoU",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-10T09:13:25Z",
    "updated_at": "2023-02-10T09:16:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I don't think I agree with this one as much, there are definitely times where you need to implement a specific interface, but a parameter isn't useful\r\n\r\nright, but this could be solved using the following syntax:\r\n\r\n```vyper\r\n@external\r\n@pure\r\ndef test(uint256) -> uint256:\r\n    return 1\r\n```\r\n\r\nNo named parameter (in this case `owner`) for the interface parameter you have to implement. In that case, the compiler does not issue a warning. The above syntax would currently throw a `NamespaceCollision` error. So the question is whether we should allow for it within function declarations.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1425467924/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1425820362",
    "html_url": "https://github.com/vyperlang/vyper/issues/3272#issuecomment-1425820362",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3272",
    "id": 1425820362,
    "node_id": "IC_kwDOBGDvrM5U_ErK",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-10T13:35:01Z",
    "updated_at": "2023-02-10T13:35:01Z",
    "author_association": "MEMBER",
    "body": "That requires modifying a fair bit of the processing path for args, and also really isn't python syntax\n\nA better way would be just prepend with `_` to ignore the warning ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1425820362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1425830677",
    "html_url": "https://github.com/vyperlang/vyper/issues/3272#issuecomment-1425830677",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3272",
    "id": 1425830677,
    "node_id": "IC_kwDOBGDvrM5U_HMV",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-10T13:43:43Z",
    "updated_at": "2023-02-10T13:43:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right makes sense to keep Python consistency. We could do both: using `_` as the variable name or prepending `_` to the variable name. In both cases the warning will be ignored. ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1425830677/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1427756909",
    "html_url": "https://github.com/vyperlang/vyper/issues/3272#issuecomment-1427756909",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3272",
    "id": 1427756909,
    "node_id": "IC_kwDOBGDvrM5VGddt",
    "user": {
      "login": "trocher",
      "id": 43437004,
      "node_id": "MDQ6VXNlcjQzNDM3MDA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/43437004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trocher",
      "html_url": "https://github.com/trocher",
      "followers_url": "https://api.github.com/users/trocher/followers",
      "following_url": "https://api.github.com/users/trocher/following{/other_user}",
      "gists_url": "https://api.github.com/users/trocher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trocher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trocher/subscriptions",
      "organizations_url": "https://api.github.com/users/trocher/orgs",
      "repos_url": "https://api.github.com/users/trocher/repos",
      "events_url": "https://api.github.com/users/trocher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trocher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-13T11:11:14Z",
    "updated_at": "2023-02-13T11:11:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Adding this as a note:\r\nWould probably have to think about preventing the use of `_` in other cases when this is implemented as currently, this compiles:\r\n```Vyper\r\n_: uint256\r\n@external\r\ndef test() -> uint256:\r\n    _:uint256 = 12\r\n    return _\r\n@external\r\ndef bar(_:uint256) -> (uint256,uint256):\r\n    return (_,self._)\r\n```\r\nMight also be good to prevent it anyway now that I think about it.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1427756909/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1427869939",
    "html_url": "https://github.com/vyperlang/vyper/issues/3272#issuecomment-1427869939",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3272",
    "id": 1427869939,
    "node_id": "IC_kwDOBGDvrM5VG5Dz",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-13T12:35:47Z",
    "updated_at": "2023-02-13T12:36:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Might also be good to prevent it anyway now that I think about it.\r\n\r\nYes good catch - `_` itself should be treated similarly as a reserved keyword. In any case, the library modules will be released as `0.4.0` if I understood correctly, so I assume such a slight breaking change should be ok.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1427869939/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
