{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/770",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/770/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/770/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/770/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/770",
  "id": 312725228,
  "node_id": "MDU6SXNzdWUzMTI3MjUyMjg=",
  "number": 770,
  "title": "VIP: Denote Static Call per Method in Contract Interface Definition",
  "user": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 757250644,
      "node_id": "MDU6TGFiZWw3NTcyNTA2NDQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Approved",
      "name": "VIP: Approved",
      "color": "98f765",
      "default": false,
      "description": "VIP Approved"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-04-09T23:42:55Z",
  "updated_at": "2018-06-06T14:50:21Z",
  "closed_at": "2018-06-06T14:50:21Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "# Preamble\r\nVIP: 770\r\nTitle: Denote Static Call per Method in Contract Interface Definition\r\nAuthor: @fubuloubu\r\nType: Standard Track\r\nStatus: Draft\r\nCreated: 2018-04-09\r\n\r\n\r\n## Simple Summary\r\nCurrent method of defining contract interfaces decides whether to static call all methods based on the usage of the `modifiable`/`static` keyword. Suggestion would make this per-method.\r\n\r\n## Abstract\r\nCurrently, to work with external contracts, one must supply a keyword denoting whether to make calls using `STATICCALL` opcode for ALL methods in a external contract variable, e.g.:\r\nhttps://github.com/ethereum/vyper/blob/22be6dbae5a767a2d5525deb7cc93c45860e1982/tests/parser/features/external_contracts/test_modifiable_external_contract_calls.py#L14-L18\r\n\r\nCurrent method assumes all methods are state modifiable if `modifiable` keyword is used when referring to a variable storing that contract's address. This means if you would like to safely interact with a contract that implements multiple methods, only some of which are state changing, you will need to define two variables to do so, or always call read-only methods with a regular `CALL` opcode.\r\n\r\nProposed method would make this per-method, as detailed in Specification.\r\n\r\n## Motivation\r\nThis increases utility of the contract interface mechanism, and increases transparency into which calls should be made statically, and which are allowed to modify state.\r\n\r\nUpdate per VIP #748 would make this syntax mesh much nicer than it currently will.\r\n\r\n## Specification\r\nProposed syntax would be (using Basic ERC20 interface standard):\r\n```python\r\ncontract ERC20Basic:\r\n    def balanceOf(_owner: address) -> uint256: static\r\n    def totalSupply() -> uint256: static\r\n    def transfer(_to: address, _amt: uint256) -> bool: modifying\r\n    # Other methods not implemented in interface are not callable\r\n\r\ntoken: ERC20Basic\r\n\r\n@constant\r\n@public\r\ndef tokenBalance() -> uint256:\r\n    return self.token.balanceOf(msg.sender)\r\n\r\n@public\r\ndef giveMeTokens():\r\n    self.token.transfer(msg.sender, self.tokenBalance())\r\n```\r\n\r\nWe could also change the `contract` keyword (which is a search/replace for `class`) into `interface`, which I think makes the purpose clearer for these external contract interface types.\r\n\r\n## Backwards Compatibility\r\nNot backwards compatible, modifies syntax for interface definitions\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)",
  "closed_by": {
    "login": "jacqueswww",
    "id": 6917456,
    "node_id": "MDQ6VXNlcjY5MTc0NTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacqueswww",
    "html_url": "https://github.com/jacqueswww",
    "followers_url": "https://api.github.com/users/jacqueswww/followers",
    "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
    "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
    "repos_url": "https://api.github.com/users/jacqueswww/repos",
    "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/770/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/770/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/383588627",
    "html_url": "https://github.com/vyperlang/vyper/issues/770#issuecomment-383588627",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/770",
    "id": 383588627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzU4ODYyNw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-23T14:09:34Z",
    "updated_at": "2018-04-23T14:09:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Approved, naming is still under consideration.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/383588627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
