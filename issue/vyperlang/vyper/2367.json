{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/2367",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/2367/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/2367/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/2367/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/2367",
  "id": 900079797,
  "node_id": "MDU6SXNzdWU5MDAwNzk3OTc=",
  "number": 2367,
  "title": "Multidimensional lists declaration is inverted",
  "user": {
    "login": "PinkFromTheFuture",
    "id": 6644773,
    "node_id": "MDQ6VXNlcjY2NDQ3NzM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6644773?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PinkFromTheFuture",
    "html_url": "https://github.com/PinkFromTheFuture",
    "followers_url": "https://api.github.com/users/PinkFromTheFuture/followers",
    "following_url": "https://api.github.com/users/PinkFromTheFuture/following{/other_user}",
    "gists_url": "https://api.github.com/users/PinkFromTheFuture/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PinkFromTheFuture/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PinkFromTheFuture/subscriptions",
    "organizations_url": "https://api.github.com/users/PinkFromTheFuture/orgs",
    "repos_url": "https://api.github.com/users/PinkFromTheFuture/repos",
    "events_url": "https://api.github.com/users/PinkFromTheFuture/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PinkFromTheFuture/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2021-05-24T22:54:21Z",
  "updated_at": "2021-07-19T19:50:38Z",
  "closed_at": "2021-07-19T19:50:38Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Version Information\r\n\r\n* vyper Version (output of `vyper --version`): 0.2.8\r\n* Python Version (output of `python --version`): 3.9.2\r\n\r\n### What's your issue about?\r\n\r\nI expect that when declaring multidimensional lists of two dimensions it would be like:\r\n`<variable_name : <Type>[<row>][<column>]`\r\nso then they can be accessed by:\r\n`variable_name[row][column]`\r\n\r\nHowever, it seems that the declaration is inverted so it's actually:\r\n`<variable_name : <Type>[<column>][<row>]`\r\nand then oddly, we access it the correct way:\r\n`variable_name[row][column]`\r\n\r\nThe only thing that the documentation says about Multidimensional lists is:\r\n\"Multidimensional lists are also possible.\"\r\n\r\nNo usage examples are provided, so I don't know if this is intended of not. A severe bug or it's like that by design and documentation is lacking.\r\n\r\nI would expect that it would work like in C:\r\n```\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    // declare and initialize an array of two dimentions:\r\n    int arr2d[2][4] = {  \r\n       {0, 0, 0, 0},\r\n       {0, 0, 0, 0},\r\n    };\r\n    \r\n    // prints the multidimentional array:\r\n    for (int i = 0; i < 2; i++)\r\n    {\r\n        for (int j = 0; j < 4; j++)\r\n        {\r\n            printf(\"%d \", arr2d[i][j]);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    // output: \r\n    // 0 0 0 0 \r\n    // 0 0 0 0 \r\n    \r\n    printf(\"\\n-------------\\n\\n\");\r\n    \r\n    // modify an element\r\n    arr2d[1][3] = 9;\r\n    \r\n    // prints the multidimentional array again:\r\n    for (int i = 0; i < 2; i++)\r\n    {\r\n        for (int j = 0; j < 4; j++)\r\n        {\r\n            printf(\"%d \", arr2d[i][j]);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    // output: \r\n    // 0 0 0 0 \r\n    // 0 0 0 9\r\n    \r\n    return 0;\r\n}\r\n```\r\n\r\nAnd the same implementation but on vyper would currently look like the following:\r\n```\r\narr2d: int128[4][2] = empty(int128[4][2])\r\n# the array above is not:\r\n# 0 0\r\n# 0 0\r\n# 0 0\r\n# 0 0\r\n\r\n# it's actually:\r\n# 0 0 0 0\r\n# 0 0 0 0\r\n\r\n# the line below would make it crash:\r\narr2d[3][1] = 9\r\n\r\n# the line below would work as if the array was declared as arr2d: int128[2][4]\r\narr2d[1][3] = 9\r\n# now it would print:\r\n# 0 0 0 0\r\n# 0 0 0 9\r\n\r\n```\r\n\r\n### How can it be fixed?\r\n\r\nThe semantics of array declaration should be inverted\r\n",
  "closed_by": {
    "login": "iamdefinitelyahuman",
    "id": 35276322,
    "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
    "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/iamdefinitelyahuman",
    "html_url": "https://github.com/iamdefinitelyahuman",
    "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
    "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
    "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
    "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
    "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
    "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/2367/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/2367/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/847492089",
    "html_url": "https://github.com/vyperlang/vyper/issues/2367#issuecomment-847492089",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2367",
    "id": 847492089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NzQ5MjA4OQ==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-25T02:59:27Z",
    "updated_at": "2021-05-25T02:59:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Vyper's array notation is modeled after Solidity: https://docs.soliditylang.org/en/v0.6.0/types.html#arrays\r\n\r\nI agree that this can be unintuitive when coming from other languages, and the documentation does not adequately address it.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/847492089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/847510644",
    "html_url": "https://github.com/vyperlang/vyper/issues/2367#issuecomment-847510644",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2367",
    "id": 847510644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NzUxMDY0NA==",
    "user": {
      "login": "PinkFromTheFuture",
      "id": 6644773,
      "node_id": "MDQ6VXNlcjY2NDQ3NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6644773?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PinkFromTheFuture",
      "html_url": "https://github.com/PinkFromTheFuture",
      "followers_url": "https://api.github.com/users/PinkFromTheFuture/followers",
      "following_url": "https://api.github.com/users/PinkFromTheFuture/following{/other_user}",
      "gists_url": "https://api.github.com/users/PinkFromTheFuture/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PinkFromTheFuture/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PinkFromTheFuture/subscriptions",
      "organizations_url": "https://api.github.com/users/PinkFromTheFuture/orgs",
      "repos_url": "https://api.github.com/users/PinkFromTheFuture/repos",
      "events_url": "https://api.github.com/users/PinkFromTheFuture/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PinkFromTheFuture/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-25T03:58:57Z",
    "updated_at": "2021-05-25T03:58:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK. Interesting.\r\n\r\nMaybe I am emotional about this because I lost 3 days of work debugging a code that didn't have a bug, but I believe that the notation should be changed to resemble python, after all vyper is supposed to be a pythonic language, not a soliditic language, right?\r\n\r\nEither way, the documentation should be updated to clearly indicate this fact.\r\n\r\nFrom my understanding, in vyper, the notation for the declaration is inverted but not the usage notation. Is this the same case for solidity?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/847510644/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/847512684",
    "html_url": "https://github.com/vyperlang/vyper/issues/2367#issuecomment-847512684",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2367",
    "id": 847512684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NzUxMjY4NA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-25T04:05:36Z",
    "updated_at": "2021-05-25T04:06:26Z",
    "author_association": "MEMBER",
    "body": "> I believe that the notation should be changed to resemble python, after all vyper is supposed to be a pythonic language, not a solidity-like language, right?\n\nUnfortunately, not that simple. We would lose all compatibility with Solidity code because they set the convention first. Same reasom why all ERCs are written in `camelCase` because they set the convention first.\n\nIf we were to set the convention over again, maybe we would do it this way, but the only real solution is to update the documentation around multi-level arrays.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/847512684/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/847513855",
    "html_url": "https://github.com/vyperlang/vyper/issues/2367#issuecomment-847513855",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2367",
    "id": 847513855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NzUxMzg1NQ==",
    "user": {
      "login": "PinkFromTheFuture",
      "id": 6644773,
      "node_id": "MDQ6VXNlcjY2NDQ3NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6644773?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PinkFromTheFuture",
      "html_url": "https://github.com/PinkFromTheFuture",
      "followers_url": "https://api.github.com/users/PinkFromTheFuture/followers",
      "following_url": "https://api.github.com/users/PinkFromTheFuture/following{/other_user}",
      "gists_url": "https://api.github.com/users/PinkFromTheFuture/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PinkFromTheFuture/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PinkFromTheFuture/subscriptions",
      "organizations_url": "https://api.github.com/users/PinkFromTheFuture/orgs",
      "repos_url": "https://api.github.com/users/PinkFromTheFuture/repos",
      "events_url": "https://api.github.com/users/PinkFromTheFuture/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PinkFromTheFuture/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-25T04:08:58Z",
    "updated_at": "2021-05-25T04:17:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am updating the docs right now and will make a push request. I am just testing what I wrote there.\r\n\r\nCan you confirm that it's only the declaration that is inverted but the usage is not?\r\n\r\n\r\nThis is what I wrote:\r\nMultidimensional lists are also possible. The notation for the declaration is reversed compared to some other languages, but the access notation is not reversed.\r\n\r\nA two dimensional list can be declared with ``_name: _ValueType[_Column_Integer][_Row_Integer]``. Elements can be accessed with ``_name: _ValueType[_Row_Integer][_Column_Integer]``\r\n\r\n.. code-block:: python\r\n\r\n    # Defining a list with 2 rows and 5 columns and set all values to 0\r\n    exampleList2D: int128[5][2] = empty(int128[5][2])\r\n\r\n    # Setting a value for row the first row (0) and last column (4)\r\n    exampleList2D[0][4] = 42\r\n\r\n    # Setting values\r\n    exampleList2D = [[10, 11, 12, 13, 14], [16, 17, 18, 19, 20]]\r\n\r\n    # Returning the value in row 0 column 4 (in this case 14)\r\n    return exampleList2D[0][4]",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/847513855/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/847943844",
    "html_url": "https://github.com/vyperlang/vyper/issues/2367#issuecomment-847943844",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2367",
    "id": 847943844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0Nzk0Mzg0NA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-25T15:00:44Z",
    "updated_at": "2021-05-25T15:00:44Z",
    "author_association": "MEMBER",
    "body": "I think maybe some of the confusion is in using \"row\" and \"column\". Whats really going on here is that the array definition is \"inner\" relative to other, e.g.\n\n```python\nv: uint256[2][5]  # size 5 array of `uint256[2]` arrays\n```\n\nBasically, 2 is inside 5.\n\nThis ends up looking \"backwards\" because when you access you access \"outside in\".\n\n```python\na: uint256[2] = v[3] # access `uint256[2]` array at index 3 of outer array\n```\n\nThe processing in these two different contexts is inverted, so when I define the variable I am defining a type `uint256[2][5]` which is a size 5 array of `uint256[2]` internal types, and when I access it i am going in the opposite direction",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/847943844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
