{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/370/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/370/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/370/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/370",
  "id": 261765481,
  "node_id": "MDU6SXNzdWUyNjE3NjU0ODE=",
  "number": 370,
  "title": "Fix voting example",
  "user": {
    "login": "DustinWehr",
    "id": 1623534,
    "node_id": "MDQ6VXNlcjE2MjM1MzQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1623534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/DustinWehr",
    "html_url": "https://github.com/DustinWehr",
    "followers_url": "https://api.github.com/users/DustinWehr/followers",
    "following_url": "https://api.github.com/users/DustinWehr/following{/other_user}",
    "gists_url": "https://api.github.com/users/DustinWehr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/DustinWehr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/DustinWehr/subscriptions",
    "organizations_url": "https://api.github.com/users/DustinWehr/orgs",
    "repos_url": "https://api.github.com/users/DustinWehr/repos",
    "events_url": "https://api.github.com/users/DustinWehr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/DustinWehr/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 18,
  "created_at": "2017-09-29T20:44:12Z",
  "updated_at": "2018-01-18T19:05:18Z",
  "closed_at": "2018-01-18T19:05:18Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### What's your issue about?\r\nThe problem is described here https://github.com/ethereum/viper/pull/302#issuecomment-326341764\r\n\r\n### How can it be fixed?\r\n\r\nI'm happy to help if @DavidKnott and @fubuloubu don't have the time.\r\n\r\n3 options, all of which still need some scrutiny:\r\n* @fubuloubu sketched a fix in two comments: [this change](https://github.com/ethereum/viper/pull/302#issuecomment-326353960) alone seemed like it'd work, but the resulting program is more restricted than the Solidity example.  [The second comment](https://github.com/ethereum/viper/pull/302#issuecomment-326357970) is about addressing that restriction. \r\n* [I wrote one](https://gist.github.com/DustinWehr/b4f3e0d3b1d29a55f4c3042e0485bd69) that differs more from @DavidKnott's.\r\n* [More complex version of the previous](https://gist.github.com/DustinWehr/d178b3a0b50dcb217a26ad1f26be82e1), including a cycle breaking capability. \r\n",
  "closed_by": {
    "login": "DavidKnott",
    "id": 17552858,
    "node_id": "MDQ6VXNlcjE3NTUyODU4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17552858?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/DavidKnott",
    "html_url": "https://github.com/DavidKnott",
    "followers_url": "https://api.github.com/users/DavidKnott/followers",
    "following_url": "https://api.github.com/users/DavidKnott/following{/other_user}",
    "gists_url": "https://api.github.com/users/DavidKnott/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/DavidKnott/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/DavidKnott/subscriptions",
    "organizations_url": "https://api.github.com/users/DavidKnott/orgs",
    "repos_url": "https://api.github.com/users/DavidKnott/repos",
    "events_url": "https://api.github.com/users/DavidKnott/events{/privacy}",
    "received_events_url": "https://api.github.com/users/DavidKnott/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/370/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/370/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/333331229",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-333331229",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 333331229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzMzMTIyOQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-30T19:39:46Z",
    "updated_at": "2017-09-30T19:39:46Z",
    "author_association": "MEMBER",
    "body": "I think in general the examples don't need to be fully realized, production code. Their point is more to show how much simpler and clearer Viper syntax is as examples on how to get started.\r\n\r\nThat being said, replicating some Solidity examples is important as a comparison.\r\n\r\nI didn't get a chance to look too deeply at what you did, but keep that in mind.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/333331229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/333333961",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-333333961",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 333333961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzMzMzk2MQ==",
    "user": {
      "login": "DavidKnott",
      "id": 17552858,
      "node_id": "MDQ6VXNlcjE3NTUyODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17552858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidKnott",
      "html_url": "https://github.com/DavidKnott",
      "followers_url": "https://api.github.com/users/DavidKnott/followers",
      "following_url": "https://api.github.com/users/DavidKnott/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidKnott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidKnott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidKnott/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidKnott/orgs",
      "repos_url": "https://api.github.com/users/DavidKnott/repos",
      "events_url": "https://api.github.com/users/DavidKnott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidKnott/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-30T20:28:40Z",
    "updated_at": "2017-09-30T20:28:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@DustinWehr It'd be great if you made a PR.  I second what @fubuloubu mentioned, it's a lot more important for people to understand examples and the viper syntax used then to have them be fully functionally.  Maybe you could make a pr with 2 voting examples a simple one and your more complex /  feature complete one?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/333333961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/335259073",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-335259073",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 335259073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTI1OTA3Mw==",
    "user": {
      "login": "DavidKnott",
      "id": 17552858,
      "node_id": "MDQ6VXNlcjE3NTUyODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17552858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidKnott",
      "html_url": "https://github.com/DavidKnott",
      "followers_url": "https://api.github.com/users/DavidKnott/followers",
      "following_url": "https://api.github.com/users/DavidKnott/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidKnott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidKnott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidKnott/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidKnott/orgs",
      "repos_url": "https://api.github.com/users/DavidKnott/repos",
      "events_url": "https://api.github.com/users/DavidKnott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidKnott/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-09T19:13:51Z",
    "updated_at": "2017-10-09T19:13:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@DustinWehr Are you working on this, if not I can do it this week.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/335259073/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/335358436",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-335358436",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 335358436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTM1ODQzNg==",
    "user": {
      "login": "DustinWehr",
      "id": 1623534,
      "node_id": "MDQ6VXNlcjE2MjM1MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1623534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DustinWehr",
      "html_url": "https://github.com/DustinWehr",
      "followers_url": "https://api.github.com/users/DustinWehr/followers",
      "following_url": "https://api.github.com/users/DustinWehr/following{/other_user}",
      "gists_url": "https://api.github.com/users/DustinWehr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DustinWehr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DustinWehr/subscriptions",
      "organizations_url": "https://api.github.com/users/DustinWehr/orgs",
      "repos_url": "https://api.github.com/users/DustinWehr/repos",
      "events_url": "https://api.github.com/users/DustinWehr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DustinWehr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-10T04:35:09Z",
    "updated_at": "2017-10-10T04:37:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@DavidKnott I can submit a PR in the morning. I wrote a version based on our discussion with @fubuloubu that should pass all the existing tests, and has all the essential features of the Solidity version. The only difference is that it moves the weight forwarding to a separate function `forward_weight`, which gets called by `delegate` once, but needs to get called more than once in the (presumably-rare) case of a delegation chain of length more than 10. \r\n\r\nI do have a question first. It is unclear to me when one should use assertions. These are several of the distinct uses:\r\n(1) Assert something that is always true if the contract code is correct. _In my experience this is the usual intent of an `assert` keyword_, at least in PLs that give you the option to turn them off. \r\n(2) Check something that is meant to be checked by the off-chain code, but that isn't actually problematic for correctness if it's false. As @fubuloubu pointed out, delegation cycles are an example of this, since a delegation cycle just spoils all those votes. \r\n(3) Prevent calls to functions that are not allowed by the contract, reverting all changes if any were made before the discovery.\r\n\r\nThere should be at least a distinct alias of `assert` for each of those uses. Otherwise you're preventing easy opportunities for the programmer to formally specify their intention.\r\n\r\nBut, I humbly suggest that (3) should have different semantics from (1) and (2). \r\n\r\n(1) Use `assert` only for this. These are always removed in production (main network).\r\n(2) Something like `should`, `usage_assert`, `weak_assert`, `client_assert`, `offchain_assert`**?** I dunno, I suck at naming. Anyway, the semantics is the same as (1), so these are also always removed in production. \r\n(3) Use `ensure`. These are never removed in production, since the proper functioning of the code depends on them.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/335358436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/335512278",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-335512278",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 335512278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTUxMjI3OA==",
    "user": {
      "login": "DustinWehr",
      "id": 1623534,
      "node_id": "MDQ6VXNlcjE2MjM1MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1623534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DustinWehr",
      "html_url": "https://github.com/DustinWehr",
      "followers_url": "https://api.github.com/users/DustinWehr/followers",
      "following_url": "https://api.github.com/users/DustinWehr/following{/other_user}",
      "gists_url": "https://api.github.com/users/DustinWehr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DustinWehr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DustinWehr/subscriptions",
      "organizations_url": "https://api.github.com/users/DustinWehr/orgs",
      "repos_url": "https://api.github.com/users/DustinWehr/repos",
      "events_url": "https://api.github.com/users/DustinWehr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DustinWehr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-10T15:31:03Z",
    "updated_at": "2017-10-10T15:31:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I never did get running tests working on my system... Can you run them (the existing tests) on this before I submit a PR? \r\nhttps://gist.github.com/DustinWehr/98c9310afab793588aa8e031f1d79aec",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/335512278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/335945300",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-335945300",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 335945300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTk0NTMwMA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-11T20:54:44Z",
    "updated_at": "2017-10-11T20:54:44Z",
    "author_association": "MEMBER",
    "body": "@DustinWehr I think you need a clearer example of what you're suggesting for `assert`, probably in a different issue. I sort of like the `require`/`assert` thing in solidity (like maybe 80% like it lol). In solidity, `require` means front end assumptions about inputs, and `assert` means the backend of calculations executed correctly. Your suggestion of `should` actually sounds like a great candidate for what you are describing in (1), but I don't really follow exactly what you mean there (e.g. `should` describes a scenario that can potentially be optimized away assuming formal correctness is verified for that contract).\r\n\r\nIn my (old) industry, we wrote requirements documents that had different types of requirements with different assumptions on implementation. `shall` was different than `will` or `should`. It's interesting to think of them as all essentially `assert` under the hood, but with different semantic contexts designed to help the auditor/reader understand the assumptions present.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/335945300/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/335983240",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-335983240",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 335983240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTk4MzI0MA==",
    "user": {
      "login": "DustinWehr",
      "id": 1623534,
      "node_id": "MDQ6VXNlcjE2MjM1MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1623534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DustinWehr",
      "html_url": "https://github.com/DustinWehr",
      "followers_url": "https://api.github.com/users/DustinWehr/followers",
      "following_url": "https://api.github.com/users/DustinWehr/following{/other_user}",
      "gists_url": "https://api.github.com/users/DustinWehr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DustinWehr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DustinWehr/subscriptions",
      "organizations_url": "https://api.github.com/users/DustinWehr/orgs",
      "repos_url": "https://api.github.com/users/DustinWehr/repos",
      "events_url": "https://api.github.com/users/DustinWehr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DustinWehr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-12T00:09:32Z",
    "updated_at": "2017-10-12T00:11:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh! How embarrassing... Thanks @fubuloubu. As you must have guessed, Viper is my first smart contract language; otherwise I would not have suggested inconsistent names. I'll open a more-thorough issue about it later.\r\n\r\nA quick response to your comments though: So `require` is (2) and `assert` is (3).\r\nYou understood what I meant by (1) (now `should`): `should A` means you believe that whenever the computation reaches that statement, `A` evaluates to true (and I forgot to mention `A` is side effect free). So it's something that should be provable. The compiler would ignore `should` statements, but a Viper interpreter (e.g. the python test runner) would stop immediately if the statement evaluates to false. ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/335983240/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336000411",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-336000411",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 336000411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjAwMDQxMQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-12T02:15:29Z",
    "updated_at": "2017-10-12T02:15:29Z",
    "author_association": "MEMBER",
    "body": "Your suggestion for `should` sort of sounds like a [Theorem Prover](https://en.wikipedia.org/wiki/Automated_theorem_proving). Like, you suggest putting `should A` statements in your code to assert some invariant that should never be false if the system is designed correctly?\r\n\r\nTypically, theorem provers work as having a separate model representing your intention as it's own system (aka a collection of requirements called \"theorems\" about your system's properties). You then take that system and formalize it to create a set of test cases showing all possible scenarios describing your system. Those test cases are run against the actual system to prove formal correctness of your system during actual operation (in this case, EVM Bytecode actually running on the EVM).\r\n\r\nThis is all part of the realm of Formal Verification, which is a very interesting subject (I took a course my last year in grad school). Ethereum/Smart Contract systems are a great application for this field of academic study both because it is so important to get the system to be provably correct, and because the smart contracts we create are actually pretty high-level and lend themselves well to being theorized against using these techniques. @pirapira is very active in this space. He has some musings you can read about [here](https://github.com/pirapira/ethereum-formal-verification-overview).\r\n\r\nIt would be an awesome feature for Viper to implement something in this regard, and probably speed along it's adoption (over Solidity). A few theorem provers out there can target Python (check out [Z3 Prover](https://github.com/Z3Prover/z3)), and since we're still operating on a subset of Python syntax (@DavidKnott, one reason to KEEP the Python AST), perhaps there might be an easy way to integrate this into the Viper compiler. It certainly is a big ask, but I think it is a big reward item.\r\n\r\nI hope that isn't TMI lol",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336000411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336002860",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-336002860",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 336002860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjAwMjg2MA==",
    "user": {
      "login": "DustinWehr",
      "id": 1623534,
      "node_id": "MDQ6VXNlcjE2MjM1MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1623534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DustinWehr",
      "html_url": "https://github.com/DustinWehr",
      "followers_url": "https://api.github.com/users/DustinWehr/followers",
      "following_url": "https://api.github.com/users/DustinWehr/following{/other_user}",
      "gists_url": "https://api.github.com/users/DustinWehr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DustinWehr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DustinWehr/subscriptions",
      "organizations_url": "https://api.github.com/users/DustinWehr/orgs",
      "repos_url": "https://api.github.com/users/DustinWehr/repos",
      "events_url": "https://api.github.com/users/DustinWehr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DustinWehr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-12T02:32:11Z",
    "updated_at": "2017-10-12T02:32:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not TMI. Formal Verification is a major part of my work with [Legalese](https://legalese.com). Our computational legal contracts will compile to EVM bytecode, probably via Viper. We expect to be in contact with Yoichi in the near future (if Virgil isn't already).",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336002860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336005893",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-336005893",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 336005893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjAwNTg5Mw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-12T02:53:13Z",
    "updated_at": "2017-10-12T02:55:50Z",
    "author_association": "MEMBER",
    "body": "@DustinWehr Very cool! Do you know/have experience with FV for Python? That post just got me thinking a little bit, and I think the current syntax of Viper can probably support any tool that was developed for Python without a large amount of modifications.\r\n\r\nPM me on gitter if you want to talk more about it!",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336005893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336006152",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-336006152",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 336006152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjAwNjE1Mg==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-12T02:54:57Z",
    "updated_at": "2017-10-12T02:54:57Z",
    "author_association": "MEMBER",
    "body": "P.S. I love the faux newspaper aesthetic to Legalese's website!",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336006152/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336048065",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-336048065",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 336048065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjA0ODA2NQ==",
    "user": {
      "login": "pirapira",
      "id": 44281,
      "node_id": "MDQ6VXNlcjQ0Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirapira",
      "html_url": "https://github.com/pirapira",
      "followers_url": "https://api.github.com/users/pirapira/followers",
      "following_url": "https://api.github.com/users/pirapira/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirapira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirapira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirapira/subscriptions",
      "organizations_url": "https://api.github.com/users/pirapira/orgs",
      "repos_url": "https://api.github.com/users/pirapira/repos",
      "events_url": "https://api.github.com/users/pirapira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirapira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-12T07:44:37Z",
    "updated_at": "2017-10-12T07:44:37Z",
    "author_association": "NONE",
    "body": "Meaow, meaow.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336048065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336278897",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-336278897",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 336278897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjI3ODg5Nw==",
    "user": {
      "login": "DavidKnott",
      "id": 17552858,
      "node_id": "MDQ6VXNlcjE3NTUyODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17552858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidKnott",
      "html_url": "https://github.com/DavidKnott",
      "followers_url": "https://api.github.com/users/DavidKnott/followers",
      "following_url": "https://api.github.com/users/DavidKnott/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidKnott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidKnott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidKnott/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidKnott/orgs",
      "repos_url": "https://api.github.com/users/DavidKnott/repos",
      "events_url": "https://api.github.com/users/DavidKnott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidKnott/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-12T21:34:14Z",
    "updated_at": "2017-10-12T21:34:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm looking into formal verification now, as @fubuloubu mentioned because we're using python syntax there are a bunch of cool tools at our fingertips :)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336278897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336328958",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-336328958",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 336328958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjMyODk1OA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-13T01:57:46Z",
    "updated_at": "2017-10-13T01:57:46Z",
    "author_association": "MEMBER",
    "body": "Actually less tools then I thought, but there are some. I was thinking about a Bounded Model Checker",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336328958/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336452264",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-336452264",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 336452264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjQ1MjI2NA==",
    "user": {
      "login": "DustinWehr",
      "id": 1623534,
      "node_id": "MDQ6VXNlcjE2MjM1MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1623534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DustinWehr",
      "html_url": "https://github.com/DustinWehr",
      "followers_url": "https://api.github.com/users/DustinWehr/followers",
      "following_url": "https://api.github.com/users/DustinWehr/following{/other_user}",
      "gists_url": "https://api.github.com/users/DustinWehr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DustinWehr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DustinWehr/subscriptions",
      "organizations_url": "https://api.github.com/users/DustinWehr/orgs",
      "repos_url": "https://api.github.com/users/DustinWehr/repos",
      "events_url": "https://api.github.com/users/DustinWehr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DustinWehr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-13T13:28:00Z",
    "updated_at": "2017-10-14T05:46:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "This sounds like the right path as far as programmer interface: https://www.reddit.com/r/ethdev/comments/737jik/anyone_experince_to_use_formal_specifications_eg/dnor1tp/?context=3\r\nIt is consistent with #397 \r\n\r\nThe lack of loops and recursion in Viper should be a huge benefit for FV. ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/336452264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/338509458",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-338509458",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 338509458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODUwOTQ1OA==",
    "user": {
      "login": "DustinWehr",
      "id": 1623534,
      "node_id": "MDQ6VXNlcjE2MjM1MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1623534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DustinWehr",
      "html_url": "https://github.com/DustinWehr",
      "followers_url": "https://api.github.com/users/DustinWehr/followers",
      "following_url": "https://api.github.com/users/DustinWehr/following{/other_user}",
      "gists_url": "https://api.github.com/users/DustinWehr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DustinWehr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DustinWehr/subscriptions",
      "organizations_url": "https://api.github.com/users/DustinWehr/orgs",
      "repos_url": "https://api.github.com/users/DustinWehr/repos",
      "events_url": "https://api.github.com/users/DustinWehr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DustinWehr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-22T21:11:46Z",
    "updated_at": "2017-10-22T21:11:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok with you guys if I change the meaning of the `weight` field, so it satisfies this invariant?\r\n(sum of `weight` over all voters) + (sum of `vote_count` over all proposals) = `voter_count` \r\n\r\nThis requires changing one of the test cases.\r\nThe Solidity example doesn't do this (i.e. never sets a voter's `weight` to 0 after counting it), because it's not necessary, but I think that's kind of counterintuitive.\r\n\r\nAlso, a question: is the address `0x0000000000000000000000000000000000000000` falsey, and is it the only falsey address?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/338509458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/338737874",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-338737874",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 338737874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODczNzg3NA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-23T17:36:41Z",
    "updated_at": "2017-10-23T17:36:41Z",
    "author_association": "MEMBER",
    "body": "Not sure I quite follow, but the invariant should be like \"the overall amount of votes available (whether used or not) stays the same\"\r\n\r\nIt would be cool as a way to define your own generated test cases in the source. Hmm....",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/338737874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/358748823",
    "html_url": "https://github.com/vyperlang/vyper/issues/370#issuecomment-358748823",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/370",
    "id": 358748823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODc0ODgyMw==",
    "user": {
      "login": "DavidKnott",
      "id": 17552858,
      "node_id": "MDQ6VXNlcjE3NTUyODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17552858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidKnott",
      "html_url": "https://github.com/DavidKnott",
      "followers_url": "https://api.github.com/users/DavidKnott/followers",
      "following_url": "https://api.github.com/users/DavidKnott/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidKnott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidKnott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidKnott/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidKnott/orgs",
      "repos_url": "https://api.github.com/users/DavidKnott/repos",
      "events_url": "https://api.github.com/users/DavidKnott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidKnott/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T19:05:18Z",
    "updated_at": "2018-01-18T19:05:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing as the voting example has been fixed, thanks again @DustinWehr ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/358748823/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
