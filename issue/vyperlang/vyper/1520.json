{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/1520",
  "id": 465415574,
  "node_id": "MDU6SXNzdWU0NjU0MTU1NzQ=",
  "number": 1520,
  "title": "VIP: vyper-json",
  "user": {
    "login": "alcuadrado",
    "id": 176499,
    "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alcuadrado",
    "html_url": "https://github.com/alcuadrado",
    "followers_url": "https://api.github.com/users/alcuadrado/followers",
    "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
    "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
    "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
    "repos_url": "https://api.github.com/users/alcuadrado/repos",
    "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 757250644,
      "node_id": "MDU6TGFiZWw3NTcyNTA2NDQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Approved",
      "name": "VIP: Approved",
      "color": "98f765",
      "default": false,
      "description": "VIP Approved"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 17,
  "created_at": "2019-07-08T19:11:17Z",
  "updated_at": "2019-09-10T16:08:25Z",
  "closed_at": "2019-09-10T16:08:25Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\n\r\nVyper should provide an interface for non-python-based tools to use.\r\n\r\n## Abstract\r\n\r\nThis VIP proposes the addition of another CLI tool: `vyper-json`. This tool will compile contracts, generating a structured JSON output containing everything needed to integrate Vyper, including errors.\r\n\r\n## Motivation\r\n\r\nSee #1492 \r\n\r\n## Specification\r\n\r\n\r\nThis section describes the input and output interfaces of `vyper-json`.\r\n\r\n### Input description\r\n\r\n`vyper-json` doesn't need any special input apart from a list of files to compile. \r\n\r\nAn example execution could be `vyper-json path/to/contract1.vy path/to/other.vy`\r\n\r\n#### Output description\r\n\r\n`vyper-json` outputs a single JSON object with one key of type `PATH` per input \r\nfile, associated with an object of type `OUTPUT`.\r\n\r\n`PATH` values should be absolute paths. If symlinks are present, they should not\r\nbe resolved, keeping the path closer to the user's input.\r\n\r\n`OUTPUT` values are objects with the following properties:\r\n  * `files`: An array of `PATH` values containing all the source files used to compile this contract. This is useful to implement things like cache, watchers, etc.\r\n  * `errors`: An array of `ERROR` objects. One per each fatal compilation error. This array must be empty if the compilation succeeded.\r\n  * `warnings`: An array of `ERROR` objects. One per each compilation warning. This array must be empty if no warning is emitted.\r\n  * `output`: An object containing `bytecode`, `bytecode_runtime`, `abi`, `source_map`, `method_identifiers` as returned by `vyper` when format `combined_json` is used. This value should be `null` if the compilation failed.\r\n\r\n`ERROR` objects must contain the following properties:\r\n  * `file`: A `PATH` value pointing to the file where the warning or error originated.\r\n  * `line`: The error/warning's line number.\r\n  * `column`: The error/warning's line column.\r\n  * `message`: An explanation of the warning/error.\r\n\r\n#### Example\r\n\r\nExecuting `vyper-json path/to/contract1.vy path/to/other.vy`\r\n\r\nshould output something like:\r\n\r\n```js\r\n{\r\n  \"/absolute/path/to/contract1.vy\": {\r\n    \"files\": [\"/absolute/path/to/contract1.vy\", \"/absolute/path/to/interface.vy\"],\r\n    \"errors\": [\r\n      {\r\n        \"file\": \"/absolute/path/to/contract1.vy\",\r\n        \"line\": 1,\r\n        \"column\": 20,\r\n        \"message\": \"A fatal error\"\r\n      }\r\n    ],\r\n    \"warnings\": [],\r\n    \"output\": null\r\n  },\r\n  \"/absolute/path/to/other.vy\": {\r\n    \"files\": [\"/absolute/path/to/other.vy\", \"/path/path/to/ERC20.vy\"],\r\n    \"errors\": [],\r\n    \"warnings\": [\r\n      {\r\n        \"file\": \"/absolute/path/to/other.vy\",\r\n        \"line\": 2,\r\n        \"column\": 30,\r\n        \"message\": \"A warning\"\r\n      }\r\n    ],\r\n    \"output\": { /* same as combined_json */ }\r\n  }\r\n}\r\n```\r\n\r\n## Backwards Compatibility\r\n\r\nThis VIP proposes the introduction of a new command-line tool, which should have no impact on the existing one. \r\n\r\n## Dependencies\r\n\r\nThis VIP has no dependencies.\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/1520/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/509357191",
    "html_url": "https://github.com/vyperlang/vyper/issues/1520#issuecomment-509357191",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
    "id": 509357191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTM1NzE5MQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-08T19:20:55Z",
    "updated_at": "2019-07-08T19:20:55Z",
    "author_association": "MEMBER",
    "body": "I like it, did good work specifying this. IIRC `solc`'s \"json mode\" requires the input to be a JSON string too. This would make it very easy to integrate with JavaScript tooling and web API endpoints.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/509357191/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/509358840",
    "html_url": "https://github.com/vyperlang/vyper/issues/1520#issuecomment-509358840",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
    "id": 509358840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTM1ODg0MA==",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-08T19:26:17Z",
    "updated_at": "2019-07-08T19:26:17Z",
    "author_association": "NONE",
    "body": "Yes, solidity's json mode expects a json containing everything it needs as input. \r\n\r\nThe problem with this approach is that in order to generate that json you need to parse the sources to get their imports and resolve them yourself. That's very problematic. Parsing correctly is not an easy task, and not having a standard imports resolution mechanism can lead to fragmentation in the tooling ecosystem.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/509358840/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/513347368",
    "html_url": "https://github.com/vyperlang/vyper/issues/1520#issuecomment-513347368",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
    "id": 513347368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzM0NzM2OA==",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-19T19:23:58Z",
    "updated_at": "2019-07-19T19:23:58Z",
    "author_association": "NONE",
    "body": "Some more info about Solidity's json input.\r\n\r\nThis last few days I've been working with the Etherscan's contract verification API and UI, and found that they now support using the standard json input. If it were supported in the API, that would solve lots of problems, as it contains all the info needed to reproduce a build. The key advantage is that it's self-contained in a single file. \r\n\r\nMy proposal for `vyper-json` doesn't have this property. \r\n\r\nI still think that making imports resolution a responsibility of 3rd party tools is very problematic. Maybe have an official tool or `vyper-json` working mode that generates a self-contained input would solve both problems.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/513347368/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/513406080",
    "html_url": "https://github.com/vyperlang/vyper/issues/1520#issuecomment-513406080",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
    "id": 513406080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzQwNjA4MA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-19T22:59:43Z",
    "updated_at": "2019-07-19T22:59:43Z",
    "author_association": "MEMBER",
    "body": "Hmm, yeah maybe if you supply all the sources via JSON input, you can have the compiler reference via those strings instead of loading file I/O. Handle it in the script",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/513406080/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/513500716",
    "html_url": "https://github.com/vyperlang/vyper/issues/1520#issuecomment-513500716",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
    "id": 513500716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzUwMDcxNg==",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-20T21:32:07Z",
    "updated_at": "2019-07-20T21:32:19Z",
    "author_association": "NONE",
    "body": "Maybe something like `vyper-json --prepare-input file.vy | vyper-json`?\r\n\r\nThe first call will take a file, and outputs a standarized json input with everything needed for compiling. That same json could be used for things like verifying the contract.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/513500716/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/513556469",
    "html_url": "https://github.com/vyperlang/vyper/issues/1520#issuecomment-513556469",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
    "id": 513556469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzU1NjQ2OQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-21T13:53:07Z",
    "updated_at": "2019-07-21T13:53:07Z",
    "author_association": "MEMBER",
    "body": "Sure, as a shortcut tool. I was saying that `vyper-json` could work like so:\r\n\r\n```json\r\n{\r\n  \"files\": {\r\n    \"path/to/file1.vy\": {\r\n      \"source\": \"# source code for file1...\"\r\n    },\r\n    \"path/to/file2.vy\": {\r\n      \"source\": \"from path.to.file1 import interface...\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nInternal to that script it would resolve the interfaces to the correct things.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/513556469/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514227148",
    "html_url": "https://github.com/vyperlang/vyper/issues/1520#issuecomment-514227148",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
    "id": 514227148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDIyNzE0OA==",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-23T14:11:08Z",
    "updated_at": "2019-07-23T14:11:08Z",
    "author_association": "NONE",
    "body": "> Sure, as a shortcut tool.\r\n\r\nYes, sure. It should return the errors (e.g. parsing errors when extracting the imports) in the same format that `vyper-json`.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/514227148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/516910748",
    "html_url": "https://github.com/vyperlang/vyper/issues/1520#issuecomment-516910748",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
    "id": 516910748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjkxMDc0OA==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-31T15:55:33Z",
    "updated_at": "2019-07-31T15:59:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "This functionality would be very useful to me, if nobody else is already working on it I'd be happy to start right away.\r\n\r\nTo minimize friction when integrating Vyper with existing tooling, I think it would be beneficial to format the output similarly to Solidity's [standard JSON output](https://solidity.readthedocs.io/en/v0.5.10/using-the-compiler.html#output-description).  It would look something like this:\r\n\r\n```js\r\n  {\r\n    // Optional: not present if no errors/warnings were encountered\r\n    \"errors\": [\r\n      {\r\n        \"sourceLocation\": {\r\n          \"file\": \"path/to/contract1.vy\",\r\n          \"start\": 1,\r\n          \"end\": 20\r\n        },\r\n        \"type\": \"TypeError\",\r\n        \"severity\": \"error\", // (\"error\" or \"warning\")\r\n        \"message\": \"A fatal error or warning\"\r\n      }\r\n    ],\r\n    \"sources\": {\r\n      \"path/to/contract1.vy\": {\r\n        \"ast\": {}\r\n      }\r\n    },\r\n    \"contracts\": {\r\n      \"path/to/contract1.vy\": {\r\n        \"ContractName\": {\r\n          \"abi\": [],\r\n          \"evm\": {\r\n            \"bytecode\": {\r\n              \"object\": \"\",\r\n              \"opcodes\": \"\",\r\n              \"sourceMap\": \"\"\r\n            },\r\n            \"deployedBytecode\": { \r\n              \"object\": \"\",\r\n              \"opcodes\": \"\",\r\n              \"sourceMap\": \"\"\r\n            },\r\n            \"methodIdentifiers\": {}\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n```\r\n\r\nI'm also happy to follow the previously discussed format. However the above approach will make my life easier down the line, and likely that of others looking to integrate Vyper where Solidity is already in use. Any thoughts?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/516910748/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/516922737",
    "html_url": "https://github.com/vyperlang/vyper/issues/1520#issuecomment-516922737",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
    "id": 516922737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjkyMjczNw==",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-31T16:27:30Z",
    "updated_at": "2019-07-31T16:27:30Z",
    "author_association": "NONE",
    "body": "My worry about using that format is that there are many things that don't really match between solc and vyper outputs. For example, ast and source maps have completely different formats.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/516922737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/516939515",
    "html_url": "https://github.com/vyperlang/vyper/issues/1520#issuecomment-516939515",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
    "id": 516939515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjkzOTUxNQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-31T17:14:19Z",
    "updated_at": "2019-07-31T17:14:19Z",
    "author_association": "MEMBER",
    "body": "There are a number of things that should/could be standardized between the two compilers, and I think this would be good first steps towards making that happen.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/516939515/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/517196717",
    "html_url": "https://github.com/vyperlang/vyper/issues/1520#issuecomment-517196717",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
    "id": 517196717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzE5NjcxNw==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-01T09:03:44Z",
    "updated_at": "2019-08-01T09:03:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "> My worry about using that format is that there are many things that don't really match between solc and vyper outputs. For example, ast and source maps have completely different formats.\r\n\r\nIndeed, some of the objects will need to be handled in different ways depending on if they're coming from vyper or solc. But not all of them.  A common format would allow a script that deploys bytecode, for example, to handle vyper or solc-based contracts via a single method.  More complex use cases will need to differentiate, but they can still start from the same place and diverge on a per-object basis as needed, rather than starting from two places and sometimes converging.\r\n\r\nI do think you raise a valid concern - we should not assume that the program processing the json is the same that generated it, so there needs to be an easy way to look at the data and know what to expect within the individual objects.  What if we include a field such as `\"compiler\": \"vyper-v0.1.0.-beta.11\"`?  That way we still have simplified integration, but can prevent the headaches caused by having to determine the compiler type through looking at how the source map is formatted.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/517196717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/517310938",
    "html_url": "https://github.com/vyperlang/vyper/issues/1520#issuecomment-517310938",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
    "id": 517310938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzMxMDkzOA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-01T14:26:08Z",
    "updated_at": "2019-08-01T14:26:08Z",
    "author_association": "MEMBER",
    "body": "I believe `compiler` is a field generated by the output json anyways (in Solidity's output)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/517310938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/517401724",
    "html_url": "https://github.com/vyperlang/vyper/issues/1520#issuecomment-517401724",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
    "id": 517401724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzQwMTcyNA==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-01T18:18:40Z",
    "updated_at": "2019-08-01T18:18:40Z",
    "author_association": "COLLABORATOR",
    "body": "> My worry about using that format is that there are many things that don't really match between solc and vyper outputs. For example, ast and source maps have completely different formats.\r\n\r\nI don't believe standardization is within the scope of the VIP process but should be an EIP.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/517401724/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/517435909",
    "html_url": "https://github.com/vyperlang/vyper/issues/1520#issuecomment-517435909",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
    "id": 517435909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzQzNTkwOQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-01T20:00:59Z",
    "updated_at": "2019-08-01T20:01:05Z",
    "author_association": "MEMBER",
    "body": "Well yes, totally, I'm just saying starting down this road will eventually create the _ability_ to standardize compiler interfaces for tools that use it, which would be best done in an EIP/ERC.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/517435909/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/518731038",
    "html_url": "https://github.com/vyperlang/vyper/issues/1520#issuecomment-518731038",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
    "id": 518731038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODczMTAzOA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-06T15:53:53Z",
    "updated_at": "2019-08-06T15:54:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note from meeting: make `vyper-json` as compliant to solc as possible.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/518731038/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/518731105",
    "html_url": "https://github.com/vyperlang/vyper/issues/1520#issuecomment-518731105",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
    "id": 518731105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODczMTEwNQ==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-06T15:54:02Z",
    "updated_at": "2019-08-06T15:54:02Z",
    "author_association": "COLLABORATOR",
    "body": "for reference: https://solidity.readthedocs.io/en/v0.5.10/using-the-compiler.html#input-description",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/518731105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/518780869",
    "html_url": "https://github.com/vyperlang/vyper/issues/1520#issuecomment-518780869",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1520",
    "id": 518780869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODc4MDg2OQ==",
    "user": {
      "login": "iamdefinitelyahuman",
      "id": 35276322,
      "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdefinitelyahuman",
      "html_url": "https://github.com/iamdefinitelyahuman",
      "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
      "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
      "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
      "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-06T18:06:29Z",
    "updated_at": "2019-08-06T18:06:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Will start work on this shortly",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/518780869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
