{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/3296",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/3296/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/3296/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/3296/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/3296",
  "id": 1592045413,
  "node_id": "I_kwDOBGDvrM5e5K9l",
  "number": 3296,
  "title": "Remove default parameters in built-in interfaces",
  "user": {
    "login": "pcaversaccio",
    "id": 25297591,
    "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pcaversaccio",
    "html_url": "https://github.com/pcaversaccio",
    "followers_url": "https://api.github.com/users/pcaversaccio/followers",
    "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
    "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
    "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
    "repos_url": "https://api.github.com/users/pcaversaccio/repos",
    "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2023-02-20T15:14:17Z",
  "updated_at": "2023-02-20T20:25:29Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Currently, some built-in interfaces (see e.g. [`ERC4626`](https://github.com/vyperlang/vyper/blob/master/vyper/builtins/interfaces/ERC4626.py)) use default parameters (can be used to autogenerate overloaded function selectors) but is not required by the interface definitions itself, and other interfaces (see e.g. [`ERC721`](https://github.com/vyperlang/vyper/blob/master/vyper/builtins/interfaces/ERC721.py)) don't define default parameters, for which it could make sense however (see e.g. `safeTransferFrom`). I would like to propose removing any default parameters from the built-in interfaces due to the following reasons:\r\n\r\n- consistency\r\n- it's not very well documented how overloading functions in Vyper work and thus very few people understand how to import built-in interfaces and use one of the overload versions\r\n\r\nLet me know what you think. In any case, we need to have consistent behavior.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/3296/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/3296/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1437285770",
    "html_url": "https://github.com/vyperlang/vyper/issues/3296#issuecomment-1437285770",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3296",
    "id": 1437285770,
    "node_id": "IC_kwDOBGDvrM5Vqz2K",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-20T16:31:30Z",
    "updated_at": "2023-02-20T16:31:30Z",
    "author_association": "MEMBER",
    "body": "One of the problems is that Vyper needs overloading in order to work with overloaded functions defined in ERC specs, like 721\r\n\r\nI would argue a shift to using definitions defined in ABI JSON files (or importing via a single package manifest containing all of them) would be beneficial to better support this since it natively supports overloading in a better way",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1437285770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1437292434",
    "html_url": "https://github.com/vyperlang/vyper/issues/3296#issuecomment-1437292434",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3296",
    "id": 1437292434,
    "node_id": "IC_kwDOBGDvrM5Vq1eS",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-20T16:37:19Z",
    "updated_at": "2023-02-20T16:37:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm all in for anything that supports natively overloading.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1437292434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1437295125",
    "html_url": "https://github.com/vyperlang/vyper/issues/3296#issuecomment-1437295125",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3296",
    "id": 1437295125,
    "node_id": "IC_kwDOBGDvrM5Vq2IV",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-20T16:39:45Z",
    "updated_at": "2023-02-20T16:39:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "> One of the problems is that Vyper needs overloading in order to work with overloaded functions defined in ERC specs, like 721\r\n\r\nSorry, I don't get that point - could you explain why in the `ERC721` we don't use that approach?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1437295125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1437320289",
    "html_url": "https://github.com/vyperlang/vyper/issues/3296#issuecomment-1437320289",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3296",
    "id": 1437320289,
    "node_id": "IC_kwDOBGDvrM5Vq8Rh",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-20T17:02:16Z",
    "updated_at": "2023-02-20T17:02:16Z",
    "author_association": "MEMBER",
    "body": "> > One of the problems is that Vyper needs overloading in order to work with overloaded functions defined in ERC specs, like 721\n> \n> Sorry, I don't get that point - could you explain why in the `ERC721` we don't use that approach?\n\nIn vyper, you can't have multiple functions with the same name ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1437320289/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1437332795",
    "html_url": "https://github.com/vyperlang/vyper/issues/3296#issuecomment-1437332795",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3296",
    "id": 1437332795,
    "node_id": "IC_kwDOBGDvrM5Vq_U7",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-20T17:11:47Z",
    "updated_at": "2023-02-20T17:12:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "> In vyper, you can't have multiple functions with the same name\r\n\r\nYeah that one I know - but I just realised how you meant it in the context of ERC721. But actually, something that I observed is that the `ERC721` interface doesn't work actually as intended in combination with `implements`. If you do something like the following (without `data: Bytes[1024]=b\"\"`), the compiler will not throw even though the overloaded function of `safeTransferFrom` (without `data` payload) is not implemented and therefore it doesn't implement the `ERC721` interface fully:\r\n\r\n```vyper\r\nfrom vyper.interfaces import ERC721\r\nimplements: ERC721\r\n\r\n@external\r\n@payable\r\ndef safeTransferFrom(owner: address, to: address, token_id: uint256, data: Bytes[1024]):\r\n    ...\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1437332795/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1437513455",
    "html_url": "https://github.com/vyperlang/vyper/issues/3296#issuecomment-1437513455",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3296",
    "id": 1437513455,
    "node_id": "IC_kwDOBGDvrM5Vrrbv",
    "user": {
      "login": "trocher",
      "id": 43437004,
      "node_id": "MDQ6VXNlcjQzNDM3MDA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/43437004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trocher",
      "html_url": "https://github.com/trocher",
      "followers_url": "https://api.github.com/users/trocher/followers",
      "following_url": "https://api.github.com/users/trocher/following{/other_user}",
      "gists_url": "https://api.github.com/users/trocher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trocher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trocher/subscriptions",
      "organizations_url": "https://api.github.com/users/trocher/orgs",
      "repos_url": "https://api.github.com/users/trocher/repos",
      "events_url": "https://api.github.com/users/trocher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trocher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-20T20:25:29Z",
    "updated_at": "2023-02-20T20:25:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "> > In vyper, you can't have multiple functions with the same name\r\n> \r\n> Yeah that one I know - but I just realised how you meant it in the context of ERC721. But actually, something that I observed is that the `ERC721` interface doesn't work actually as intended in combination with `implements`. If you do something like the following (without `data: Bytes[1024]=b\"\"`), the compiler will not throw even though the overloaded function of `safeTransferFrom` (without `data` payload) is not implemented and therefore it doesn't implement the `ERC721` interface fully:\r\n> \r\n> ```vyper\r\n> from vyper.interfaces import ERC721\r\n> implements: ERC721\r\n> \r\n> @external\r\n> @payable\r\n> def safeTransferFrom(owner: address, to: address, token_id: uint256, data: Bytes[1024]):\r\n>     ...\r\n> ```\r\n\r\nI believe the `implements` not intended behavior you describe should be documented here https://github.com/vyperlang/vyper/issues/3170",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1437513455/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
