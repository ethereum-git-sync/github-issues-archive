{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/2427",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/2427/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/2427/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/2427/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/2427",
  "id": 974044254,
  "node_id": "MDU6SXNzdWU5NzQwNDQyNTQ=",
  "number": 2427,
  "title": "VIP: Accessing deployed byte code",
  "user": {
    "login": "skellet0r",
    "id": 23556333,
    "node_id": "MDQ6VXNlcjIzNTU2MzMz",
    "avatar_url": "https://avatars.githubusercontent.com/u/23556333?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/skellet0r",
    "html_url": "https://github.com/skellet0r",
    "followers_url": "https://api.github.com/users/skellet0r/followers",
    "following_url": "https://api.github.com/users/skellet0r/following{/other_user}",
    "gists_url": "https://api.github.com/users/skellet0r/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/skellet0r/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/skellet0r/subscriptions",
    "organizations_url": "https://api.github.com/users/skellet0r/orgs",
    "repos_url": "https://api.github.com/users/skellet0r/repos",
    "events_url": "https://api.github.com/users/skellet0r/events{/privacy}",
    "received_events_url": "https://api.github.com/users/skellet0r/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 479554965,
      "node_id": "MDU6TGFiZWw0Nzk1NTQ5NjU=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/help%20wanted",
      "name": "help wanted",
      "color": "128A0C",
      "default": true,
      "description": null
    },
    {
      "id": 684449300,
      "node_id": "MDU6TGFiZWw2ODQ0NDkzMDA=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/Easy%20Pickings",
      "name": "Easy Pickings",
      "color": "0e8a16",
      "default": false,
      "description": "Used to denote issues that should be easy to implement"
    },
    {
      "id": 757250644,
      "node_id": "MDU6TGFiZWw3NTcyNTA2NDQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Approved",
      "name": "VIP: Approved",
      "color": "98f765",
      "default": false,
      "description": "VIP Approved"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-08-18T20:48:33Z",
  "updated_at": "2022-01-09T04:08:05Z",
  "closed_at": "2022-01-09T04:08:05Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\n\r\nAdd an additional member to the `address` type, `code`.\r\nThe `code` attribute allows developers in conjunction with the `slice` built-in to extract explicit portions of a deployed contract's byte-code to memory.\r\n\r\nEx.\r\n\r\n```python\r\n@external\r\ndef foo():\r\n    implementation: address = convert(slice(msg.sender.code, 15, 20), address)\r\n    assert implementation == 0xbFcF63294aD7105dEa65aA58F8AE5BE2D9d0952A\r\n    ...\r\n```\r\n\r\n## Motivation\r\n\r\nCurrently the `address` type has the members `codehash` (EXTCODEHASH) and `codesize` (EXTCODESIZE) for viewing the hash of a contract's bytecode, and length of a contract's bytecode, respectively. In many cases these two together along with the knowledge of how vyper creates minimal proxies is all that is needed for what I have envisioned.\r\n\r\nEssentially in the factory pattern, there isn't a way to verify the calling contract is an approved proxy unless it was previously built into the factory logic itself.\r\nOne way to go about this is to check the deployed byte code at the proxy address itself. For contract's deployed with vyper's `create_forwarder_to`, we can simply extract the implementation being used with `slice(_bytecode, 15, 20)` and then convert that to an address, and then validate it's the implementation we expect.\r\n\r\nAlthough the intended use case can be simulated by simply using `concat` along with the pre + post bytecode, the implementation address, and keccak, and then checking against the codehash of an address matches the expectation.  This would provide a much more clearer, readable way. \r\n\r\n## Specification\r\n\r\nThis VIP would simply allow the usage of `address.code` with the `slice` built-in. This would operate exactly the same as the recently added `msg.data` syntax.\r\n\r\n## Backwards Compatibility\r\n\r\nThis is completely backwards compatible.\r\n\r\n## References\r\n\r\n#2419\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": {
    "login": "charles-cooper",
    "id": 3867501,
    "node_id": "MDQ6VXNlcjM4Njc1MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/charles-cooper",
    "html_url": "https://github.com/charles-cooper",
    "followers_url": "https://api.github.com/users/charles-cooper/followers",
    "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
    "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
    "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
    "repos_url": "https://api.github.com/users/charles-cooper/repos",
    "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
    "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/2427/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/2427/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/901422948",
    "html_url": "https://github.com/vyperlang/vyper/issues/2427#issuecomment-901422948",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2427",
    "id": 901422948,
    "node_id": "IC_kwDOBGDvrM41up9k",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-18T20:53:18Z",
    "updated_at": "2021-08-18T20:53:18Z",
    "author_association": "COLLABORATOR",
    "body": "I was wondering when somebody would bring this up. Note that we don't use EXTCODECOPY anywhere but if we did this and wanted it to work on OVM we would have to implement that -- https://github.com/vyperlang/vyper/pull/2416/files#diff-8401049c99db99323e79f128a7ed875d909207a0484bddbe737ffb593194c3c0R527",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/901422948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
