{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/288",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/288/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/288/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/288/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/288",
  "id": 245958660,
  "node_id": "MDU6SXNzdWUyNDU5NTg2NjA=",
  "number": 288,
  "title": "How to search a variable-sized array",
  "user": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2017-07-27T08:06:27Z",
  "updated_at": "2017-07-29T20:40:58Z",
  "closed_at": "2017-07-29T20:40:58Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "@vbuterin I am writing a viper example contract for owning shares in a company. Since anyone can buy, the array of shareholders grows with each buy order from a new account. For discussion purposes, the signature of my array is `stockholders: {account: address, stock: num}[num]` and `num_stockholders` is initialized to zero in my contract creation.\r\n\r\nI tried: \r\n```\r\nfor i in range(self.num_stockholders):\r\n  if msg.sender == stockholders[i].account:\r\n    self.stockholders[i].stock += buy_order\r\n```\r\nwhich doesn't work because the compiler expects a non-zero, positive size for \"number of rounds\" in range. I can't reason my way out of this even given your crowdfunding example. The len can be zero, so does that mean this isn't possible to compile (search a variable-sized array)? How does my function get called again if my length exceeds the static number I'm using for \"rounds\" (30 in your example to avoid gas limit issues). Would appreciate any help you can provide.\r\n\r\nAdditionally, I think an easier, language-implemented way to obtain a member of or set a value in an array like this would be awesome. Something like `if msg.sender in stockholders::account` (e.g. list of values for one key in dict list) and `stockholders[account==msg.sender].stock += msg.value / price` (e.g. incr value for given key for matching item in list) would make it a lot easier to write more concise, readable code for a contract. I'm no programming language expert (especially not with EVM), but some means to represent these very common patterns would be super helpful and potentially optimizable in the bytecode I would think. I would like to write something like:\r\n```\r\n# If sender is on the books, increment their shares\r\nif msg.sender in stockholders::account:\r\n  self.stockholders[account==msg.sender].stock += msg.value / price\r\nelse:\r\n  # Add sender to the books with the amount of shares purchased\r\n  self.num_stockholders += 1\r\n  self.stockholders[self.num_stockholders] = {account: msg.sender, stock: msg.value / price}\r\n```",
  "closed_by": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/288/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/288/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/318309691",
    "html_url": "https://github.com/vyperlang/vyper/issues/288#issuecomment-318309691",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/288",
    "id": 318309691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODMwOTY5MQ==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-27T09:28:16Z",
    "updated_at": "2017-07-27T09:28:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think what you want is something like:\r\n\r\n```\r\nstockholders: address[num]\r\nnum_stockholders: num\r\nstockholder_reverse_lookup: num[address]\r\n\r\ndef add_to_shareholder_list():\r\n    assert <msg.sender is eligible>\r\n    self.stockholders[self.num_stockholders] = msg.sender\r\n    self.stockholder_reverse_lookup[msg.sender] = self.num_stockholders + 1\r\n    self.num_stockholders += 1\r\n\r\ndef lookup(addr: address) -> num:\r\n    return self.stockholder_reverse_lookup[addr] - 1\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/318309691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/318857927",
    "html_url": "https://github.com/vyperlang/vyper/issues/288#issuecomment-318857927",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/288",
    "id": 318857927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODg1NzkyNw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-29T20:40:58Z",
    "updated_at": "2017-07-29T20:40:58Z",
    "author_association": "MEMBER",
    "body": "I was looking at #270 and realized that these extra bookkeeping parameters weren't necessary, as I was trying to make an account -> value lookup, which would look something like this:\r\n```\r\nstockholders: {stock: num}[address]\r\n\r\ndef some_function(_stock: num):\r\n    # Check for existance\r\n    if self.stockholders[msg.sender]:\r\n        # Add value\r\n        self.stockholders[msg.sender].stock += _stock\r\n    else:\r\n        # Add new item to lookup (basically a dict of account: { properties } items)\r\n        self.stockholders[msg.sender] = {stock: _stock}\r\n```\r\nand for my case, that obviously reduces to:\r\n```\r\nstockholders: num[address]\r\ndef some_function(stock: num):\r\n    if self.stockholders[msg.sender]:\r\n        self.stockholders[msg.sender] += stock\r\n    else:\r\n        self.stockholders[msg.sender] = stock\r\n```\r\n\r\nJust wanted to note that there was a way better way of managing this kind of lookup than what was suggested, and that if multi-property lookups are desired, there was a nice method to do that.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/318857927/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
