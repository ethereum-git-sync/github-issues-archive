{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/1371",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/1371/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/1371/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/1371/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/1371",
  "id": 426569639,
  "node_id": "MDU6SXNzdWU0MjY1Njk2Mzk=",
  "number": 1371,
  "title": "VIP: Support for importing interfaces from EthPM packages.",
  "user": {
    "login": "pipermerriam",
    "id": 824194,
    "node_id": "MDQ6VXNlcjgyNDE5NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pipermerriam",
    "html_url": "https://github.com/pipermerriam",
    "followers_url": "https://api.github.com/users/pipermerriam/followers",
    "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
    "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
    "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
    "repos_url": "https://api.github.com/users/pipermerriam/repos",
    "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1723982050,
      "node_id": "MDU6TGFiZWwxNzIzOTgyMDUw",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Deferred",
      "name": "VIP: Deferred",
      "color": "c5def5",
      "default": false,
      "description": "VIP is not scheduled to move forward at this time"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2019-03-28T15:48:52Z",
  "updated_at": "2019-12-12T16:29:55Z",
  "closed_at": "2019-12-12T16:29:18Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\n\r\nIn Vyper the concept of a \"Contract Interface\" is a loose wrapper around the pre-existing concept of a contract ABI.  Since EthPM exposes contract ABI as a first class attribute Vyper should support the ability to import an interface directly from an EthPM package.\r\n\r\n## Abstract\r\n\r\nSupport for importing contract interfaces from EthPM packages.\r\n\r\n## Motivation\r\n\r\nThe EthPM package format provides a robust machine readable format for describing smart contracts.  Currently, if a Vyper developer wishes to interact with a contract which is being distributed by an EthPM package, they will have to either manually create an interface for the packaged contracts, or manually extract the ABI from the package.  Both of these are error prone and do not lend themselves to easy upgrades if a new version of the package is released.\r\n\r\nSupporting direct imports from EthPM packages would improve security and usability for contract developers.\r\n\r\n## Specification\r\n\r\n> Familiarity with the [EthPM specification](http://ethpm.github.io/ethpm-spec/package-spec.html) will be beneficial for understanding the following.\r\n\r\nThe EthPM spec contains a mapping of contract names to their type information under the top level key `\"contract_types\"`.  In the following example we assume that there is an `erc20.json` file located in a location that Vyper can find it.\r\n\r\nUsing this import statement as an example:\r\n\r\n```python\r\nfrom erc20.contract_types import ERC20\r\n```\r\n\r\nWhen vyper encounters an import statement like the above it would do the following.\r\n\r\n1. Check whether there is a file in one of the defined search locations named `erc20.json`\r\n2. Check the file is a valid EthPM package manifest \r\n    - [`py-ethpm`](https://github.com/ethpm/py-ethpm) contains an existing implementation of this validation.\r\n3. Check whether the manifest defines a `contract_types` key.\r\n4. Check whether the contract types define a contract type by the name `\"ERC20\"`\r\n5. Check whether the contract type named `\"ERC20\"`defines an `\"abi\"`.\r\n6. Use the defined contract ABI to construct a contract interface\r\n\r\n## Open Questions\r\n\r\n### Runtime bytecode checking.\r\n\r\nSince EthPM packages allow inclusion of the [runtime bytecode](http://ethpm.github.io/ethpm-spec/package-spec.html#runtime-bytecode-runtime-bytecode) it would be possible for vyper to include a pre-check of the `EXTCODEHASH` of the target contract prior to interaction at the cost of increased gas usage for external calls.\r\n\r\nIt is worth noting that this *could* give an illusion of security and should probably be addressed via a different mechanism.\r\n\r\n### Compatibility with future plans for import system\r\n\r\nThe semantics for how vyper negotiates imports is not well known to me (Piper).  It's unclear whether there is a cohesive plan for how vyper will handle imports, nor whether this syntax could make future development in this area more difficult.\r\n\r\nOne example might be if vyper ends up supporting some semblance of Solidity's library functionality.  If such functionality were introduced, then it's likely that the import semantics for that could look very similar which would require vyper to be capable of managing both concepts within the same import semantics.\r\n\r\n## Backwards Compatibility\r\n\r\nIt is unclear whether this will cause any backwards compatibility changes.  Vyper's existing support for importing directly from JSON documents will have to be adjusted to do some form of content negotiation to determine which approach to use.  This should be relatively straight forward and is not expected to be problematic.\r\n\r\n## Dependencies\r\n\r\nNo Dependencies\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/1371/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/1371/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/477806272",
    "html_url": "https://github.com/vyperlang/vyper/issues/1371#issuecomment-477806272",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1371",
    "id": 477806272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzgwNjI3Mg==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-28T23:21:30Z",
    "updated_at": "2019-03-28T23:21:30Z",
    "author_association": "MEMBER",
    "body": "Love ethPM support, definitely should consider how we could build this in to make working with ethPM manifests (and the libraries and frameworks that might support them) as easy as possible.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/477806272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/478059389",
    "html_url": "https://github.com/vyperlang/vyper/issues/1371#issuecomment-478059389",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1371",
    "id": 478059389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODA1OTM4OQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-29T16:18:26Z",
    "updated_at": "2019-03-29T16:18:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I took a stab at writing up the concept I've had in my head for how EthPM packages would be installed to disk.\r\n\r\nhttps://github.com/ethpm/py-ethpm/issues/150\r\n\r\nNot immediately relevant because importing directly from a file makes sense, but longer term if the above gets codified into a formal spec (aka ERC) then it would start to make sense for vyper to maintain some fort of `$PATH` concept that included whatever directory that ERC specified as well as having vyper know how to negotiate the directory structure properly.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/478059389/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/478085971",
    "html_url": "https://github.com/vyperlang/vyper/issues/1371#issuecomment-478085971",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1371",
    "id": 478085971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODA4NTk3MQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-29T17:35:49Z",
    "updated_at": "2019-03-29T17:35:49Z",
    "author_association": "MEMBER",
    "body": "I think another thing to keep in mind is that many tools that work this way maintain some sort of local \"installed packages\" directory. Truffle does this through `installed_contracts/` which I like to commit to my repo so that it is clear what code and version I am using. I would expect the same from any tool making use of this feature here.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/478085971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/478670533",
    "html_url": "https://github.com/vyperlang/vyper/issues/1371#issuecomment-478670533",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1371",
    "id": 478670533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODY3MDUzMw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-01T17:27:54Z",
    "updated_at": "2019-04-01T17:27:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've thought about whether this would be something that is intended to be committed to a codebase and I *think* the answer is that it doesn't matter (it's an implementation detail).  This is under the assumption that 1) the directory structure is well spec'd out and 2) that proper implementation of tools that consume this data involves an integrity check on the data before using it via verification of all of the content hashes.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/478670533/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480883421",
    "html_url": "https://github.com/vyperlang/vyper/issues/1371#issuecomment-480883421",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1371",
    "id": 480883421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDg4MzQyMQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-08T15:35:22Z",
    "updated_at": "2019-04-08T15:35:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "From meeting: whatever mechanism brings the contracts to vyper will be handled the same, and for vyper. And because we will be adding VYPER_PATHS to https://github.com/ethereum/vyper/issues/1367 we should be sorted.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480883421/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480917533",
    "html_url": "https://github.com/vyperlang/vyper/issues/1371#issuecomment-480917533",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1371",
    "id": 480917533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDkxNzUzMw==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-08T17:06:07Z",
    "updated_at": "2019-04-08T17:06:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry to miss the meesing.  Child-care fell through this morning.  I haven't written anything new up but I've been mulling over this concept intermittently and am making some progress on the concept.  I'll try to be at the next one.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480917533/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480950328",
    "html_url": "https://github.com/vyperlang/vyper/issues/1371#issuecomment-480950328",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1371",
    "id": 480950328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDk1MDMyOA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-08T18:29:41Z",
    "updated_at": "2019-04-08T18:29:41Z",
    "author_association": "MEMBER",
    "body": "@pipermerriam do you agree with our assessment that whatever mechanism we create to handle interface imports (and other related things) can handle ethPM use cases the same way, removing the need for an ethPM-specific featureset?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480950328/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480954341",
    "html_url": "https://github.com/vyperlang/vyper/issues/1371#issuecomment-480954341",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1371",
    "id": 480954341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDk1NDM0MQ==",
    "user": {
      "login": "pipermerriam",
      "id": 824194,
      "node_id": "MDQ6VXNlcjgyNDE5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pipermerriam",
      "html_url": "https://github.com/pipermerriam",
      "followers_url": "https://api.github.com/users/pipermerriam/followers",
      "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
      "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
      "repos_url": "https://api.github.com/users/pipermerriam/repos",
      "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-08T18:40:16Z",
    "updated_at": "2019-04-08T18:40:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu I *think* so, but I'm making some assumptions about what you mean.\r\n\r\nWould it be correct to say that when you say ethPM-specific features you are referring to extenal API type things since *internally* there will still have to be some ethpm-specific handling code to read the package data.  The user however writing a contract with import statements will not necessarily need to denote anything ethpm specific in their import statements.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480954341/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480983279",
    "html_url": "https://github.com/vyperlang/vyper/issues/1371#issuecomment-480983279",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1371",
    "id": 480983279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDk4MzI3OQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-08T19:57:11Z",
    "updated_at": "2019-04-08T19:57:11Z",
    "author_association": "MEMBER",
    "body": "I more mean that the higher level framework (whatever that is) will take care of ethPM-specific features (like package validation), and provide the compiler with \"dumb inputs\" (i.e. unaware of ethPM featuresets) such that this is not a concern at our compiler's API. I believe trying to do too much of the ethPM functionality may interrupt how it is used in different frameworks (like Truffle).",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480983279/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/565080950",
    "html_url": "https://github.com/vyperlang/vyper/issues/1371#issuecomment-565080950",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1371",
    "id": 565080950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTA4MDk1MA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-12T16:29:18Z",
    "updated_at": "2019-12-12T16:29:37Z",
    "author_association": "MEMBER",
    "body": "To refine this further, similar to how the vyper compiler cli will accept a json-encoded ABI interface from a file as an input, the vyper package itself allows passing a dict of ABI interfaces directly to it. This enables a framework to easily integrate itself with this functionality via one of the two methods.\r\n\r\nThis functionality is available in Vyper today, so this VIP can be considered obsolesced by that functionality. (Should have done this a while back)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/565080950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
