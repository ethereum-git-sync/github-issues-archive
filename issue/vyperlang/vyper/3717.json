{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/3717",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/3717/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/3717/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/3717/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/3717",
  "id": 2062768911,
  "node_id": "I_kwDOBGDvrM5681sP",
  "number": 3717,
  "title": "setval/getval dunder methods",
  "user": {
    "login": "charles-cooper",
    "id": 3867501,
    "node_id": "MDQ6VXNlcjM4Njc1MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/charles-cooper",
    "html_url": "https://github.com/charles-cooper",
    "followers_url": "https://api.github.com/users/charles-cooper/followers",
    "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
    "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
    "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
    "repos_url": "https://api.github.com/users/charles-cooper/repos",
    "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
    "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2024-01-02T18:06:44Z",
  "updated_at": "2024-01-02T21:12:50Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "_Originally posted by @fubuloubu in https://github.com/vyperlang/vyper/issues/3716#issuecomment-1873545832_\r\n\r\n```vyper\r\n# NOTE: Could be defined as an internal library type\r\n\r\nstruct Ledger(HashMap[address, uint256]):  # NOTE: could also add generic support over time\r\n# struct Ledger[K: vyper.traits.Hashable, V: vyper.traits.AddSubTrait](HashMap[K, V]): ...\r\n\r\n    # NOTE: We can add additional members to struct subclasses\r\n    total: uint256\r\n\r\n    # NOTE: `HashMap` subclasses `vyper.types.Mapping` and hashes the key for access\r\n    # NOTE: `vyper.types.Mapping` defines two methods: `__getval__` and `__setval__`\r\n    def mint(self, receiver: address, amount: uint256):  # NOTE: with generics, we could parametrize these inputs\r\n        self.total += amount  # NOTE: This is safemath\r\n        self.__setval__(\r\n            receiver,\r\n            # NOTE: This is safe because of the previous safe add\r\n            unsafe_add(self.__getval__(receiver), amount),\r\n        )\r\n\r\n    def transfer(self, owner: address, receiver: address, amount: uint256):\r\n        self.__setval__(\r\n            owner,\r\n            # NOTE: If underflow, then it should raise invalid operation\r\n            self.__getval__(owner) - amount,\r\n        )\r\n        self.__setval__(\r\n            receiver,\r\n            # NOTE: This is safe because of the underflow check and the property of conservation on `.total`\r\n            unsafe_add(self.__getval__(receiver), amount),\r\n        )\r\n\r\n    def burn(self, owner: address, amount: uint256):\r\n        self.__setval__(\r\n            owner,\r\n            # NOTE: If underflow, then it should raise invalid operation\r\n            self.__getval__(owner) - amount,\r\n        )\r\n        # NOTE: This is safe because of the underflow check and the property of conservation on `.total`\r\n        self.total = unsafe_sub(self.total, amount),\r\n\r\n    # NOTE: Should have someway of generating a `public` getter method\r\n```\r\n\r\nThen could be used like this:\r\n```vyper\r\nfrom vyper.types import Ledger\r\n\r\nbalanceOf: public(Ledger)\r\n# NOTE: export `totalSupply` public getter as `balanceOf.total`\r\n\r\n@external\r\ndef transfer(receiver: address, amount: uint256) -> bool:\r\n    self.balanceOf.transfer(msg.sender, receiver, amount)\r\n    log Transfer(msg.sender, receiver, amount)\r\n    return True\r\n\r\n...\r\n```\r\n\r\nKind of a nice side effect here is that the `.total` storage slot gets \"flattened\" into the struct            ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/3717/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/3717/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1874370501",
    "html_url": "https://github.com/vyperlang/vyper/issues/3717#issuecomment-1874370501",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/3717",
    "id": 1874370501,
    "node_id": "IC_kwDOBGDvrM5vuJ_F",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-02T18:08:41Z",
    "updated_at": "2024-01-02T18:09:55Z",
    "author_association": "MEMBER",
    "body": "in https://github.com/vyperlang/vyper/issues/3716#issuecomment-1874320513, @pcaversaccio suggests using dataclass-style annotations to mark dunder methods as available or not.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1874370501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
