{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/750",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/750/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/750/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/750/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/750",
  "id": 310768392,
  "node_id": "MDU6SXNzdWUzMTA3NjgzOTI=",
  "number": 750,
  "title": "VIP: Require compiler flag for nonstandard primitive types",
  "user": {
    "login": "dani-jozsef",
    "id": 6108136,
    "node_id": "MDQ6VXNlcjYxMDgxMzY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6108136?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dani-jozsef",
    "html_url": "https://github.com/dani-jozsef",
    "followers_url": "https://api.github.com/users/dani-jozsef/followers",
    "following_url": "https://api.github.com/users/dani-jozsef/following{/other_user}",
    "gists_url": "https://api.github.com/users/dani-jozsef/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dani-jozsef/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dani-jozsef/subscriptions",
    "organizations_url": "https://api.github.com/users/dani-jozsef/orgs",
    "repos_url": "https://api.github.com/users/dani-jozsef/repos",
    "events_url": "https://api.github.com/users/dani-jozsef/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dani-jozsef/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 751622094,
      "node_id": "MDU6TGFiZWw3NTE2MjIwOTQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Discussion",
      "name": "VIP: Discussion",
      "color": "000000",
      "default": false,
      "description": "Used to denote VIPs and more complex issues that are waiting discussion in a meeting"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-04-03T09:53:28Z",
  "updated_at": "2019-02-06T15:56:22Z",
  "closed_at": "2018-12-06T13:55:17Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Apparently Vyper has primitive types outside the ones discussed in the documentation. See #720 #722 apparently \"signed256\" was a thing, and now we have \"int256\", which is a type distinct from uint256.\r\n\r\nI get that sometime you may need these for interoperability with Solidity contracts, but it can be confusing, hurt auditability, and may result in the shit type system of Solidity slowly migrating over into Vyper.\r\n\r\n### How can it be fixed?\r\n\r\nI propose two measures to protect the integrity of Vyper from \"compatibility types\", while maintaining support for them in the cases when they are neded.\r\n\r\n1. Rename all \"compatibility\" types, prefixing them with COMPAT_ or compat_. So int256 should become COMPAT_int256.\r\n\r\n2. Throw compiler errors on these types, requiring a command line flag --allow-compat-types to compile source that makes use of them.\r\n\r\n#### Cute Animal Picture\r\n\r\n![Rainbow lorikeets](https://www.omlet.co.uk/images/originals/rainbow-lorikeet-pair.jpg)",
  "closed_by": {
    "login": "jacqueswww",
    "id": 6917456,
    "node_id": "MDQ6VXNlcjY5MTc0NTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacqueswww",
    "html_url": "https://github.com/jacqueswww",
    "followers_url": "https://api.github.com/users/jacqueswww/followers",
    "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
    "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
    "repos_url": "https://api.github.com/users/jacqueswww/repos",
    "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/750/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/750/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/378256534",
    "html_url": "https://github.com/vyperlang/vyper/issues/750#issuecomment-378256534",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/750",
    "id": 378256534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODI1NjUzNA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-03T13:49:08Z",
    "updated_at": "2018-04-03T13:49:08Z",
    "author_association": "MEMBER",
    "body": "We eventually need to support the full type system if we want to maintain full compatibility as an EVM language, that's why we renamed `num` to `int128`. I DON'T think this is a good idea with that consideration in mind. We currently only have full support for some basic types because it was easier to get things up and running with fewer types.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/378256534/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/378332078",
    "html_url": "https://github.com/vyperlang/vyper/issues/750#issuecomment-378332078",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/750",
    "id": 378332078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODMzMjA3OA==",
    "user": {
      "login": "dani-jozsef",
      "id": 6108136,
      "node_id": "MDQ6VXNlcjYxMDgxMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6108136?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dani-jozsef",
      "html_url": "https://github.com/dani-jozsef",
      "followers_url": "https://api.github.com/users/dani-jozsef/followers",
      "following_url": "https://api.github.com/users/dani-jozsef/following{/other_user}",
      "gists_url": "https://api.github.com/users/dani-jozsef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dani-jozsef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dani-jozsef/subscriptions",
      "organizations_url": "https://api.github.com/users/dani-jozsef/orgs",
      "repos_url": "https://api.github.com/users/dani-jozsef/repos",
      "events_url": "https://api.github.com/users/dani-jozsef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dani-jozsef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-03T17:30:50Z",
    "updated_at": "2018-04-03T17:33:13Z",
    "author_association": "NONE",
    "body": "[I'm not so sure about that...](http://lll-docs.readthedocs.io/en/latest/lll_abi.html)\r\n\r\n> Each of the elementary types listed in the ABI specification is represented in the call data as a 32 byte word.\r\n\r\nThe thing is, from what I gather, the ABI spec is the ABI spec, and the EVM is the EVM. The EVM knows 32-bit words, and that's it. The way Solidity does uint8 is by ignoring the 31 most significant bytes.\r\n\r\nI really don't see why supporting all these types as first class citizens would be necessary. Sure to interface with legacy contracts, but then you could always OR out the 31 msB's from a uint256, and effectively have a uint8.\r\n\r\nI think it's okay to guide the hand of the developers, and mark some ABI types as first class citizens, and all the others as \"well if you REALLY want them, but know that this is not Vyperic\".\r\n\r\nPacking structs is one (probably the ONLY) legitimate use for smaller types, but let's think a bit longer about that.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/378332078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/378367470",
    "html_url": "https://github.com/vyperlang/vyper/issues/750#issuecomment-378367470",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/750",
    "id": 378367470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODM2NzQ3MA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-03T19:26:08Z",
    "updated_at": "2018-04-03T19:27:11Z",
    "author_association": "MEMBER",
    "body": "My mistake, I misspoke about EVM compatibility, I more meant any compiled language that compiles to EVM. You're 100% right about packing structs and compatibility to standards like ERC20 being the only use of other types from our basic `int128` we use as a first class citizen. The way most staticly typed languages that compile to assembly operate in a similar fashion, by ignoring unused bits unless they can leverage it for optimizations i.e. packed structs.\r\n\r\nThe problem is that we are working with a fairly low-level language, and it's so much more complex because you're implementating such high level logic in the contract, so there's a bit of a disconnect there IMO.\r\n\r\nThe best thing that we could do long term is support all integer types, allowing for optimizations to save gas usage, but have a default like `int` (which aliases to `int128`) which everyone can use, unless they're looking to optimize.\r\n\r\nBut yeah, this is pretty complicated. Unless we built in a variable sized integer like python has and optimized the usage size based on some static analyzer to reduce gas usage, it's probably really up for debate what we support.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/378367470/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/378538748",
    "html_url": "https://github.com/vyperlang/vyper/issues/750#issuecomment-378538748",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/750",
    "id": 378538748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODUzODc0OA==",
    "user": {
      "login": "dani-jozsef",
      "id": 6108136,
      "node_id": "MDQ6VXNlcjYxMDgxMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6108136?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dani-jozsef",
      "html_url": "https://github.com/dani-jozsef",
      "followers_url": "https://api.github.com/users/dani-jozsef/followers",
      "following_url": "https://api.github.com/users/dani-jozsef/following{/other_user}",
      "gists_url": "https://api.github.com/users/dani-jozsef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dani-jozsef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dani-jozsef/subscriptions",
      "organizations_url": "https://api.github.com/users/dani-jozsef/orgs",
      "repos_url": "https://api.github.com/users/dani-jozsef/repos",
      "events_url": "https://api.github.com/users/dani-jozsef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dani-jozsef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T09:28:23Z",
    "updated_at": "2018-04-04T09:28:23Z",
    "author_association": "NONE",
    "body": "Btw, I've been wondering what the reason was behind using 128 bit integers for signed numbers (as opposed to 256 bit ones).\r\n\r\nWas it because they were originally named num128 and num256?\r\n\r\n---\r\n\r\nAs for ABI compatibility, a larger unsigned int will always be compatible with a smaller one (and a larger unsigned int too, in [0..MAXINT], as an uint8 is nothing but a uint256 that is smaller than 256...\r\n\r\nStructs... packing them can really introduce issues, it can be super dangerous... So I guess the code for that would have to be seriously audited.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/378538748/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/378639183",
    "html_url": "https://github.com/vyperlang/vyper/issues/750#issuecomment-378639183",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/750",
    "id": 378639183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODYzOTE4Mw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T15:20:37Z",
    "updated_at": "2018-04-04T15:20:37Z",
    "author_association": "MEMBER",
    "body": "Decimals are basically `int128` variables that use the remainder unused bit for storing the decimal portion. `int128` as the default type makes that conversion trivial.\r\n\r\nStruct packing would have to be an optimization feature, basically it would only get used if it were easy to prove no issues are being introduced.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/378639183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/379772647",
    "html_url": "https://github.com/vyperlang/vyper/issues/750#issuecomment-379772647",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/750",
    "id": 379772647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTc3MjY0Nw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-09T14:31:28Z",
    "updated_at": "2018-04-09T14:31:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "As discussed, we will look at this in detail (type systems, packing etc.) after beta launch.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/379772647/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444878182",
    "html_url": "https://github.com/vyperlang/vyper/issues/750#issuecomment-444878182",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/750",
    "id": 444878182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDg3ODE4Mg==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-06T13:55:17Z",
    "updated_at": "2018-12-06T13:55:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am closing this as int256 was removed, and this can be re-looked at if needed, I would rather opt for going in a direction of implementing the additional types if necessary (or a standardised convert on the function definition) - than half-baked compatiblity checks.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444878182/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
