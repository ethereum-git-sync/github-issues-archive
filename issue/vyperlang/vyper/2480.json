{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/2480",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/2480/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/2480/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/2480/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/2480",
  "id": 1020262853,
  "node_id": "I_kwDOBGDvrM48z_nF",
  "number": 2480,
  "title": "VIP: Allow declaring tuple types at the definition site",
  "user": {
    "login": "charles-cooper",
    "id": 3867501,
    "node_id": "MDQ6VXNlcjM4Njc1MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/charles-cooper",
    "html_url": "https://github.com/charles-cooper",
    "followers_url": "https://api.github.com/users/charles-cooper/followers",
    "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
    "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
    "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
    "repos_url": "https://api.github.com/users/charles-cooper/repos",
    "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
    "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-10-07T16:56:55Z",
  "updated_at": "2022-08-18T17:24:53Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\nSomething like this should compile:\r\n```python\r\n(a: bool, b: uint256) = True, 1\r\n```\r\n\r\n## Motivation\r\nExternal calls can return tuples. Let's say there is an interface like `def foo() -> (bool, uint256): view`\r\n\r\nCurrently the way to use it is\r\n```python\r\na: bool = False\r\nb: uint256 = 0\r\na, b = <some contract>.foo()\r\n```\r\n\r\nEverybody understands what is happening but it's not very ergonomic. This would be more ergonomic (and save a couple MSTOREs too):\r\n\r\n```python\r\n(a: bool, b: uint256) = <some contract>.foo()\r\n```\r\n\r\nI don't really see any downside to allowing this besides a bit more complexity in the type checker.\r\n\r\nWill also make https://github.com/vyperlang/vyper/issues/2400 easier to use, the pattern will be like follows:\r\n```python\r\n(success: bool, ret: Bytes[...]) = raw_call(<some contract>, ..., revert_on_failure=False)\r\n```\r\n\r\n## Backwards Compatibility\r\nBackwards compatible\r\n\r\n## Dependencies\r\n\r\n## References\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/2480/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/2480/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/938015338",
    "html_url": "https://github.com/vyperlang/vyper/issues/2480#issuecomment-938015338",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2480",
    "id": 938015338,
    "node_id": "IC_kwDOBGDvrM436Ppq",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-07T17:43:36Z",
    "updated_at": "2021-10-07T17:43:36Z",
    "author_association": "MEMBER",
    "body": "Note that this is currently invalid Python syntax (as of Python 3.8), so a custom parser would be needed.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/938015338/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/949754243",
    "html_url": "https://github.com/vyperlang/vyper/issues/2480#issuecomment-949754243",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2480",
    "id": 949754243,
    "node_id": "IC_kwDOBGDvrM44nBmD",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-22T15:52:32Z",
    "updated_at": "2021-10-22T15:52:32Z",
    "author_association": "COLLABORATOR",
    "body": "Assuming we had a custom parser, what would the ideal syntax be?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/949754243/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/949859920",
    "html_url": "https://github.com/vyperlang/vyper/issues/2480#issuecomment-949859920",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2480",
    "id": 949859920,
    "node_id": "IC_kwDOBGDvrM44nbZQ",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-22T18:13:47Z",
    "updated_at": "2021-10-22T18:13:55Z",
    "author_association": "MEMBER",
    "body": "I think the mentioned syntax or even just `a: bool, b: uint256 =... `",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/949859920/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/964450742",
    "html_url": "https://github.com/vyperlang/vyper/issues/2480#issuecomment-964450742",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2480",
    "id": 964450742,
    "node_id": "IC_kwDOBGDvrM45fFm2",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-09T19:08:01Z",
    "updated_at": "2021-11-09T19:08:01Z",
    "author_association": "COLLABORATOR",
    "body": "> I think the mentioned syntax or even just `a: bool, b: uint256 =... `\r\n\r\nOK I like this, with the caveat that if PEP484 ever gets updated to allow this (declaring tuple types at the definition site), for syntactic compatibility with python we should throw out our way of doing it in favor of the PEP484 way.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/964450742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1076994044",
    "html_url": "https://github.com/vyperlang/vyper/issues/2480#issuecomment-1076994044",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2480",
    "id": 1076994044,
    "node_id": "IC_kwDOBGDvrM5AMZ_8",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-24T02:06:52Z",
    "updated_at": "2022-03-24T02:08:20Z",
    "author_association": "COLLABORATOR",
    "body": "we can do this by adding a pre-parser rule which translates to valid python by mangling the identifiers together. for instance,\r\n\r\n```python\r\npreparser:\r\nx: int, y: int = 1, 1 => x___y: (int, int) = 1, 1\r\n```\r\n\r\nthen later in the analysis we can handle these mangled identifiers, e.g.\r\n```python\r\nast analysis:\r\nif Name.contains(\"___\")\r\n... handle tuple annotation like for t in Name.split(\"___\")...\r\n```\r\n\r\nh/t to @electriclilies for the idea of handling in the pre parser",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1076994044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1219746333",
    "html_url": "https://github.com/vyperlang/vyper/issues/2480#issuecomment-1219746333",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2480",
    "id": 1219746333,
    "node_id": "IC_kwDOBGDvrM5Is9od",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-18T17:24:52Z",
    "updated_at": "2022-08-18T17:24:52Z",
    "author_association": "COLLABORATOR",
    "body": "better solution for mangling! in the python AST, non-name nodes can be the target. see the docs https://docs.python.org/3/library/ast.html#ast.AnnAssign, especially that these examples are syntactically valid: `a.b: int`, `a[1]: int`.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1219746333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
