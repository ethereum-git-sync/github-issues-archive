{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/1093",
  "id": 383328108,
  "node_id": "MDU6SXNzdWUzODMzMjgxMDg=",
  "number": 1093,
  "title": "VIP: Specify basic type conversions",
  "user": {
    "login": "jakerockland",
    "id": 8602661,
    "node_id": "MDQ6VXNlcjg2MDI2NjE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jakerockland",
    "html_url": "https://github.com/jakerockland",
    "followers_url": "https://api.github.com/users/jakerockland/followers",
    "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
    "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
    "organizations_url": "https://api.github.com/users/jakerockland/orgs",
    "repos_url": "https://api.github.com/users/jakerockland/repos",
    "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jakerockland/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 757250644,
      "node_id": "MDU6TGFiZWw3NTcyNTA2NDQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Approved",
      "name": "VIP: Approved",
      "color": "98f765",
      "default": false,
      "description": "VIP Approved"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 24,
  "created_at": "2018-11-21T23:35:06Z",
  "updated_at": "2022-03-22T00:05:16Z",
  "closed_at": "2022-03-22T00:05:16Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\nA specification of expected behavior when converting between all basic Vyper types.\r\n\r\n## Abstract\r\nA table specifying the expected conversion behavior between basic types. Once adopted, this specification should be enforced at compile-time whenever possible and otherwise the compiler should add runtime checks to ensure that this conversion behavior is predictable.\r\n\r\nOnce we agree on a specificiation here, I can start a PR on the docs and start working on the implementation to meet the final spec. Given that is is a lot of text we may want a separate page in the docs specificying the conversion behavior that is linked to from the \"Built in Functions\" section in the docs.\r\n\r\n## Motivation\r\nIn playing around with Vyper's type conversion, I've already noted various bugs and quirks in the conversion behavior. \r\n\r\nPer @fubuloubu and I's conversation on #1072, I think it is necessary to have a specified and agreed upon expected behavior for type conversion, which we can add to the docs and then implement accordingly.\r\n\r\n## Specification\r\nAdd the following to the Vyper specification and documentation.\r\n\r\nFor the built-in convert function:\r\n\r\n```python\r\ndef convert(a, b) -> c:\r\n  \"\"\"\r\n  :param a: value to convert\r\n  :type a: either bool, decimal, int128, uint256, bytes32, or bytes\r\n  :param b: the destination type to convert to\r\n  :type b: type of either bool, decimal, int128, uint256, bytes32, or bytes\r\n\r\n  :output c: either bool, decimal, int128, uint256, bytes32, or bytes\r\n  \"\"\"\r\n```\r\n\r\nReferencing the following constant values:\r\n\r\n```python\r\nMAXNUM = 2**127 - 1\r\nMINNUM = -2**127\r\nMAXDECIMAL = (2**127 - 1) * 10000000000\r\nMINDECIMAL = (-2**127) * 10000000000\r\nMAX_UINT256 = 2**256 - 1\r\n```\r\n\r\nSpecified conversion behavior should be:\r\n\r\n| Output Type (b) | Input Type (a.type) | Allowed Inputs Values (a) | Additional Notes | Implemented? | Optimized? |\r\n| :--- | :--- | :---: | :--- | :---: | :---: |\r\n| bool | bool | N/A | Do not allow converting from/to the same type | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bool | decimal | MINDECIMAL...MAXDECIMAL | Has the effective conversion logic of: `return (a != 0.0)` | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bool | int128 | MINNUM...MAXNUM | Has the effective conversion logic of: `return (a != 0)` | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bool | uint256 | 0...MAX_UINT256 | Has the effective conversion logic of: `return (a != 0)` | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bool | bytes32 | (0x00 * 32)...(0xFF * 32) | Has the effective conversion logic of: `return (a != 0x00)` | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bool | bytes | bytes[1]...bytes[32] <br/> (0x00 * 1)...(0xFF * 32) | Has the effective conversion logic of: `return (a != 0x00)` | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bool | address | ZERO_ADDRESS...0xffffffffffffffffffffffffffffffffffffffff | Has the effective conversion logic of: return (a != ZERO_ADDRESS) | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| | | | | | |\r\n| decimal | bool | True / False | Result will be 0.0 or 1.0 | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| decimal | decimal | N/A | Do not allow converting from/to the same type | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| decimal | int128 | MINNUM...MAXNUM | | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| decimal | uint256 | 0...MAXDECIMAL | | <ul><li>- [x] </li></ul> | <ul><li>- [x] </li></ul> |\r\n| decimal | bytes32 | (0x00 * 32)...(0xFF * 32) | | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| decimal | bytes | bytes[1]...bytes[32] <br/> (0x00 * 1)...(0xFF * 32) | | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| decimal | address | ZERO_ADDRESS...0xffffffffffffffffffffffffffffffffffffffff | Has the effective conversion logic of first converting to `bytes[16]`, dropping the 4 most significant bytes, then converting to `decimal`<br/><br/>Output will be in range ((-2^127) * 10000000000)...((2^127 - 1) * 10000000000) | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| | | | | | |\r\n| int128 | bool | True / False | Result will be 0 or 1 | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| int128 | decimal | MINNUM...MAXNUM | Only allow input within `int128` supported range, truncates the decimal value | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| int128 | int128 | N/A | Do not allow converting from/to the same type | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| int128 | uint256 | 0...MAXNUM | | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| int128 | bytes32 | (0x00 * 32)...(0xFF * 32) | | <ul><li>- [x] </li></ul> | <ul><li>- [x] </li></ul> |\r\n| int128 | bytes | bytes[1]...bytes[32] <br/> (0x00 * 1)...(0xFF * 32) | | <ul><li>- [x] </li></ul> | <ul><li>- [x] </li></ul> |\r\n| int128 | address | ZERO_ADDRESS...0xffffffffffffffffffffffffffffffffffffffff | Has the effective conversion logic of first converting to `bytes[16]`, dropping the 4 most significant bytes, then converting to `int128`<br/><br/>Output will be in range (-2^127)...(2^127 - 1) | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| | | | | | |\r\n| uint256 | bool | True / False | Result will be 0 or 1 | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| uint256 | decimal | 0...MAXDECIMAL, truncates the decimal value | | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| uint256 | int128 | 0...MAXNUM | | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| uint256 | uint256 | N/A | Do not allow converting from/to the same type | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| uint256 | bytes32 | (0x00 * 32)...(0xFF * 32) | | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| uint256 | bytes | bytes[1]...bytes[32] <br/> (0x00 * 1)...(0xFF * 32) | | <ul><li>- [x] </li></ul> | <ul><li>- [x] </li></ul> |\r\n| uint256 | address | ZERO_ADDRESS...0xffffffffffffffffffffffffffffffffffffffff | Has the effective conversion logic of first converting to `bytes[20]`, then converting to `uint256`<br/><br/>Output will be in range 0...(2^160 - 1) | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| | | | | | |\r\n| bytes32 | bool | True / False | Result will be either (0x00 * 32) or (0x00 * 31 + 0x01) | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bytes32 | decimal | MINDECIMAL...MAXDECIMAL | Has the effective behavior of multiplying the decimal value by the decimal divisor `10000000000` and then converting that signed _integer_ value to a `bytes32` byte array. | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bytes32 | int128 | MINNUM...MAXNUM | | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bytes32 | uint256 | 0...MAX_UINT256 | | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bytes32 | bytes32 | N/A| Do not allow converting from/to the same type | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bytes32 | bytes | bytes[1]...bytes[32] <br/> (0x00 * 1)...(0xFF * 32) | Left-pad input `bytes` to size of 32 | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bytes32 | address | ZERO_ADDRESS...0xffffffffffffffffffffffffffffffffffffffff | Has the effective conversion logic of first converting to `bytes[20]`, then left-padding the remaining 12 bytes with `0x00` | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| | | | | | |\r\n| bytes | bool | True / False | Should return `bytes` array of length 1, `0x00` or `0x01` | <ul><li>- [ ] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bytes | decimal | MINDECIMAL...MAXDECIMAL | Should be minimum number of bytes required to represent equivalent `bytes32` representation (remove `0x00` left-padding) | <ul><li>- [ ] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bytes | int128 | MINNUM...MAXNUM | Should be minimum number of bytes required to represent equivalent `bytes32` representation (remove `0x00` left-padding) | <ul><li>- [ ] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bytes | uint256 | 0...MAX_UINT256 | Should be minimum number of bytes required to represent equivalent `bytes32` representation (remove `0x00` left-padding) | <ul><li>- [ ] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bytes | bytes32 | (0x00 * 32)...(0xFF * 32) | Should be minimum number of bytes required to represent equivalent `bytes32` representation (remove `0x00` left-padding) | <ul><li>- [ ] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bytes | bytes | N/A | Do not allow converting from/to the same type | <ul><li>- [x] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n| bytes | address | ZERO_ADDRESS...0xffffffffffffffffffffffffffffffffffffffff | Will always be a `bytes` array of length 20 | <ul><li>- [ ] </li></ul> | <ul><li>- [ ] </li></ul> |\r\n\r\n## Backwards Compatibility\r\nI believe this is fully backwards compatible. \r\n\r\nThere are some type conversions that were previously not allowed by Vyper that this proposes, in which case tests will need to be updated.\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": {
    "login": "charles-cooper",
    "id": 3867501,
    "node_id": "MDQ6VXNlcjM4Njc1MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/charles-cooper",
    "html_url": "https://github.com/charles-cooper",
    "followers_url": "https://api.github.com/users/charles-cooper/followers",
    "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
    "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
    "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
    "repos_url": "https://api.github.com/users/charles-cooper/repos",
    "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
    "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/1093/reactions",
    "total_count": 7,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 3,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/441394981",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-441394981",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 441394981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTM5NDk4MQ==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-24T20:53:08Z",
    "updated_at": "2018-11-24T20:53:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another nice thing, once we agree on a spec here, that can be implemented with the implementation of this VIP is ensuring that the compiled op-codes for various conversions are as efficient as possible.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/441394981/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/441899374",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-441899374",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 441899374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTg5OTM3NA==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-27T04:09:07Z",
    "updated_at": "2018-11-27T04:09:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I love it. And yes, definitely want the tightest EVM implementations for this important function.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/441899374/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/442740767",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-442740767",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 442740767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mjc0MDc2Nw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-29T08:00:56Z",
    "updated_at": "2018-11-29T08:00:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jakerockland So I was wondering about the `(remove 0x00 left-padding)` part, this is only useful if we convert from a literal right? Otherwise we do work that isn't required.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/442740767/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/442873921",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-442873921",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 442873921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mjg3MzkyMQ==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-29T15:25:36Z",
    "updated_at": "2018-11-29T15:25:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jacqueswww Yeah my thinking there was more of just a functional description rather than a description of the implementation.\r\n\r\n```python\r\n# The thinking was just that something like this should work.\r\n@public\r\ndef foo():\r\n    bar: bool = False\r\n    foobar: bytes[1] = convert(bar, bytes)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/442873921/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/443728704",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-443728704",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 443728704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzcyODcwNA==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T14:28:59Z",
    "updated_at": "2018-12-03T14:28:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note to self, add column for if implemented, add column for needs optimizing.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/443728704/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/443729166",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-443729166",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 443729166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzcyOTE2Ng==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T14:30:17Z",
    "updated_at": "2018-12-03T14:30:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Approved, just add WIP column so we can keep track of what's the state of each conversion :)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/443729166/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445406906",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-445406906",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 445406906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTQwNjkwNg==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-08T00:02:47Z",
    "updated_at": "2018-12-08T00:02:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "One thing I noticed is not currently part of this VIP is conversions to and from the address type. However, thinking about it more, I'm a bit conflicted about whether or not this should actually be part of the `convert` behavior. On one hand, I can understand treating `address` as a first-class citizen in the Vyper type world, and allowing it to be converted to-from any other basic type. I don't think this poses too much of a challenge in terms of producing weird edge case behavior, but it is hard to imagine wanting to convert an `address` to `decimal`.\r\n\r\nSome routes to approach this would be:\r\n\r\n1. Support converting to-from `address` to any other basic type, as all other types above.\r\n\r\n2. `address` is a special case within the `convert()` function and it can only be converted to-from types `uint256` and `bytes32` (this is partially supported right now—the current behavior allows converting to `address` only from `bytes32` but allows converting from `address` to both `uint256` and `bytes32`.\r\n\r\n3. We remove `address` from the `convert()` specification altogether and create a new built-in function(s) `bytes_from_address()`, `address_from_bytes()` that only allow one or two very specific conversions from `bytes` or `bytes32` to-from `address`.\r\n\r\nMy inclination is towards option (3), as one if they really wanted to do something silly could use the output of `bytes_from_address()` to then convert those bytes to `decimal` but the real important thing to support seems the bytes-to-address and address-to-bytes functionality.\r\n\r\nThoughts? @jacqueswww @fubuloubu @fulldecent @nrryuya @hskang9 ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445406906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445410131",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-445410131",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 445410131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTQxMDEzMQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-08T00:16:44Z",
    "updated_at": "2018-12-08T00:16:44Z",
    "author_association": "MEMBER",
    "body": "I like option 2 the best personally. There are some interesting non-intuitive use cases for being able to convert an address to bytes.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445410131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445410687",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-445410687",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 445410687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTQxMDY4Nw==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-08T00:21:02Z",
    "updated_at": "2018-12-08T00:21:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu Given that those use cases would be preserved with (3), curious if you could elaborate a bit on your preferring (2) over (3). My thought was that if `convert()` should be able to take in an input of any type in a given set of types and output any type within that set, so if `address` doesn't make sense for the set it deserves its own function.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445410687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445426147",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-445426147",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 445426147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTQyNjE0Nw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-08T03:22:28Z",
    "updated_at": "2018-12-08T03:22:28Z",
    "author_association": "MEMBER",
    "body": "I have another use case that would need to turn an address to a uint256 to compute the merkle tree keypath. There's probably too many random corner cases to draw a line in the sand on `address`.\r\n\r\nI think it's actually fine to allow a conversion from an address to any datatype if we consider the corner cases and pick \"normal\" options for them (i.e. \"address to boolean is True for any nonzero address\"). As long as the outcomes are laid out in the docs, I see no problems since `convert()` is pretty explicit what you're doing.\r\n\r\nYou don't have to implement all the different cases now though, that's why I like 2 best. I'm sure someone will come along and want the others eventually. It wouldn't be a breaking change to add them, as long as we don't change how they work once they are defined.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445426147/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445484882",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-445484882",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 445484882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTQ4NDg4Mg==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-08T19:46:08Z",
    "updated_at": "2018-12-10T06:28:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu I hear you, this makes sense to me. I do think we probably know enough though at this point to include `address` fully in the spec then since it does seem compelling to do conversions to-from `address` for all basic types.\r\n\r\nWhat're your thoughts on the following as a starting point (if this seems good I will propose something analogous for the X-to-address direction as well)?\r\n\r\n| Output Type (b) | Input Type (a.type) | Allowed Inputs Values (a) | Additional Notes |\r\n| :--- | :--- | :---: | :--- |\r\n| bool | address | ZERO_ADDRESS...0xffffffffffffffffffffffffffffffffffffffff | Has the effective conversion logic of: return (a != ZERO_ADDRESS) |\r\n| uint256 | address | ZERO_ADDRESS...0xffffffffffffffffffffffffffffffffffffffff | Has the effective conversion logic of first converting to `bytes[20]`, then converting to `uint256`<br/><br/>Output will be in range 0...(2^160 - 1) |\r\n| int128 | address | ZERO_ADDRESS...0xffffffffffffffffffffffffffffffffffffffff | Has the effective conversion logic of first converting to `bytes[16]`, dropping the 4 most significant bytes, then converting to `int128`<br/><br/>Output will be in range (-2^127)...(2^127 - 1) |\r\n| decimal | address | ZERO_ADDRESS...0xffffffffffffffffffffffffffffffffffffffff | Has the effective conversion logic of first converting to `bytes[16]`, dropping the 4 most significant bytes, then converting to `decimal`<br/><br/>Output will be in range ((-2^127) * 10000000000)...((2^127 - 1) * 10000000000) |\r\n| bytes32 | address | ZERO_ADDRESS...0xffffffffffffffffffffffffffffffffffffffff | Has the effective conversion logic of first converting to `bytes[20]`, then left-padding the remaining 12 bytes with `0x00` |\r\n| bytes | address | ZERO_ADDRESS...0xffffffffffffffffffffffffffffffffffffffff | Will always be a `bytes` array of length 20 |",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445484882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445488578",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-445488578",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 445488578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTQ4ODU3OA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-08T20:44:50Z",
    "updated_at": "2018-12-08T20:44:50Z",
    "author_association": "MEMBER",
    "body": "Pretty much looks good, except the conversion to `int128`/`decimal` is lossy (make a note of that, bits 128-160 are lost) and those conversions should not go negative because there is no analogous concept of a \"negative address\" so it would be weird to create one (aka \"bit 128 is the sign bit!\" ... \"but y tho?\")",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445488578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445489743",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-445489743",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 445489743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTQ4OTc0Mw==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-08T21:03:34Z",
    "updated_at": "2018-12-08T21:03:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hrmm, I feel like the address `0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF` _should_ be equal to -1 when converted to `int128` though, no? It seems odd for the behavior to be the same when converting to `int128` as it is when converting to `uint256`. \r\n\r\nEven though there isn't a concept of \"negative address\" per-se, it makes sense to me to treat conversions from addresses to number types to be a twos-complement conversion of the bytes. I see the point though that there isn't a negative address space, something seems off about basically treating all conversions from `address` type to a numeric type as unsigned regardless of if the output type is signed or not. \r\n\r\nHowever, we do do something similar already in the spec when converting `uint256` to `int128`... So I can see that reasoning for also only treating `address` to `int128`/`decimal` as an unsigned conversion, just want to dive a bit deeper and flesh that thought out.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445489743/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445493718",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-445493718",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 445493718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTQ5MzcxOA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-08T22:10:56Z",
    "updated_at": "2018-12-08T22:12:36Z",
    "author_association": "MEMBER",
    "body": "So the address `0x12345678FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF` is -1 but the address `0x214728597FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF` is 2^127-1?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445493718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445566992",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-445566992",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 445566992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTU2Njk5Mg==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-09T20:05:56Z",
    "updated_at": "2018-12-09T20:05:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hrm, I'm a big confused why `0x12345678FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF` would be -1:\r\n\r\n```\r\n$ python\r\n$ foo = b\"\\x12\" + b\"\\x34\" + b\"\\x56\" + b\"\\x78\" + b\"\\xff\" * 16\r\n$ int.from_bytes(foo, \"big\", signed=True)\r\n   103929005455909232654322135874226081670765740031\r\n```\r\n\r\nAnd why `0x214728597FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF` would be `2**127 - 1`:\r\n\r\n```\r\n$ python\r\n$ bar = b\"\\x21\" + b\"\\x47\" + b\"\\x28\" + b\"\\x59\" + b\"\\x7f\" + b\"\\xff\" * 15\r\n$ int.from_bytes(bar, \"big\", signed=True)\r\n   189983563292991488376601128892698858119187398655\r\n```\r\n\r\n`0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF` would be -1 though.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445566992/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445567977",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-445567977",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 445567977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTU2Nzk3Nw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-09T20:19:07Z",
    "updated_at": "2018-12-09T20:19:07Z",
    "author_association": "MEMBER",
    "body": "It depends on which part of the address you are going to ignore on conversion, and what part you are going to arbitrarily use for the sign bit. It's a 160 bit quantity, so you have to ignore some part of it to convert to a 127 bit (signed) quantity (as the integer portion), and if you make it a signed integer it is also an arbitrary distinction which bit you claim is the signed bit.\r\n\r\nIt's all arbitrary 🤣, so as long as you are consistent in the arbitrariness it's fine. ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445567977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445608761",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-445608761",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 445608761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTYwODc2MQ==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-10T01:13:21Z",
    "updated_at": "2018-12-10T01:13:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu Ah yes sorry I see now what I was overlooking 😅. Will need to think a bit more on this in terms of what arbitrariness makes the most sense 😂 ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445608761/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445701436",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-445701436",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 445701436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTcwMTQzNg==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-10T06:25:31Z",
    "updated_at": "2018-12-10T06:29:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu So after thinking about this a bit more (apologies again for my brain fart 😅), the arbitrariness that makes the most sense to me would be the lossy conversion of only paying attention to the first 16 bytes, which would give the behavior that you described above, where `0xXXXXXXXXFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF` is -1 and `0xXXXXXXXX7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF` is `2**127-1`. \r\n\r\nGiven that addresses are generated randomly, and so its not intuitive per-se when an address will be outside the range for `int128`/`decimal`, this approach seems better than one where we directly convert all 20 bytes and then clamp around the supported 16 byte values.\r\n\r\nI updated my comment above to clarify this as well. Thoughts? 😆 ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445701436/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445830260",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-445830260",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 445830260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTgzMDI2MA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-10T14:17:11Z",
    "updated_at": "2018-12-10T14:17:11Z",
    "author_association": "MEMBER",
    "body": "Sounds good to me!",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/445830260/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/506145311",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-506145311",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 506145311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjE0NTMxMQ==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-27T03:47:55Z",
    "updated_at": "2019-06-27T03:47:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've updated the above table to incorporate the discussed conversions _from_ the `address` type (haven't gone through and checked off which things are implemented and which still need to be done yet), next will be writing up specification for conversions _to_ `address` from all other types—then will verify what needs to be implemented and I'll start working on implementing both.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/506145311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/507945107",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-507945107",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 507945107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzk0NTEwNw==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-03T05:35:18Z",
    "updated_at": "2019-07-03T06:13:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Before adding it to the table above (and then moving to implementing it), I wanted to see if there were any thoughts on the following:\r\n\r\n| Output Type (b) | Input Type (a.type) | Allowed Inputs Values (a) | Additional Notes |\r\n| :--- | :--- | :---: | :--- |\r\n| address | bool | True / False | Result will be `ZERO_ADDRESS`, or `0x0000000000000000000000000000000000000001` |\r\n| address | decimal | MINDECIMAL...MAXDECIMAL | Has the effective behavior of converting the `decimal` value to `bytes32`, then trimming the 12 most significant bytes |\r\n| address | int128 | MINNUM...MAXNUM | Has the effective behavior of converting the `int128` value to `bytes32`, then trimming the 12 most significant bytes |\r\n| address | uint256 | 0...MAX_UINT256 | Has the effective behavior of converting the `uint256` value to `bytes32`, then trimming the 12 most significant bytes | \r\n| address | bytes32 | (0x00 * 32)...(0xFF * 32) | Has the effective behavior of trimming the 12 most significant bytes |\r\n| address | bytes | bytes[1]...bytes[32] <br/> (0x00 * 1)...(0xFF * 32) | Left-pads the byte-array with `0x00` to 20 bytes if the length of the array is less than 20, trims all but the 20 least significant bytes if the length is greater than 20 |\r\n| address | address | N/A | Do not allow converting from/to the same type |",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/507945107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/654402776",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-654402776",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 654402776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDQwMjc3Ng==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-06T18:42:03Z",
    "updated_at": "2020-07-06T18:42:03Z",
    "author_association": "MEMBER",
    "body": "@iamdefinitelyahuman I think this is solved with your docs updates?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/654402776/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/727473993",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-727473993",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 727473993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNzQ3Mzk5Mw==",
    "user": {
      "login": "jakerockland",
      "id": 8602661,
      "node_id": "MDQ6VXNlcjg2MDI2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8602661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakerockland",
      "html_url": "https://github.com/jakerockland",
      "followers_url": "https://api.github.com/users/jakerockland/followers",
      "following_url": "https://api.github.com/users/jakerockland/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakerockland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakerockland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakerockland/subscriptions",
      "organizations_url": "https://api.github.com/users/jakerockland/orgs",
      "repos_url": "https://api.github.com/users/jakerockland/repos",
      "events_url": "https://api.github.com/users/jakerockland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakerockland/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-15T04:22:54Z",
    "updated_at": "2020-11-15T04:22:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Though the updates to the [Type Conversions](https://vyper.readthedocs.io/en/stable/types.html#type-conversions) section of the docs are more accurately covered now with #2081, I think there are still some feature gaps compared against the proposed spec here (notably fully supporting `address` and `bytes` conversions in both directions).",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/727473993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1074541054",
    "html_url": "https://github.com/vyperlang/vyper/issues/1093#issuecomment-1074541054",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1093",
    "id": 1074541054,
    "node_id": "IC_kwDOBGDvrM5ADDH-",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-22T00:05:15Z",
    "updated_at": "2022-03-22T00:05:15Z",
    "author_association": "COLLABORATOR",
    "body": "superseded by #2507",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1074541054/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
