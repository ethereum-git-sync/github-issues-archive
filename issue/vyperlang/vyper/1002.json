{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/1002",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/1002/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/1002/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/1002/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/1002",
  "id": 351897456,
  "node_id": "MDU6SXNzdWUzNTE4OTc0NTY=",
  "number": 1002,
  "title": "VIP: Built-in Constants for time",
  "user": {
    "login": "osuketh",
    "id": 20852667,
    "node_id": "MDQ6VXNlcjIwODUyNjY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/20852667?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/osuketh",
    "html_url": "https://github.com/osuketh",
    "followers_url": "https://api.github.com/users/osuketh/followers",
    "following_url": "https://api.github.com/users/osuketh/following{/other_user}",
    "gists_url": "https://api.github.com/users/osuketh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/osuketh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/osuketh/subscriptions",
    "organizations_url": "https://api.github.com/users/osuketh/orgs",
    "repos_url": "https://api.github.com/users/osuketh/repos",
    "events_url": "https://api.github.com/users/osuketh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/osuketh/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 757250644,
      "node_id": "MDU6TGFiZWw3NTcyNTA2NDQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Approved",
      "name": "VIP: Approved",
      "color": "98f765",
      "default": false,
      "description": "VIP Approved"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-08-19T12:02:32Z",
  "updated_at": "2020-01-20T16:56:55Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "```\r\nVIP: 1002\r\nTitle: Builtin Constants for time\r\nAuthor: Osuke Sudo (@osuketh)\r\nType: Standard Track\r\nStatus: Draft\r\nCreated: 19-8-2018\r\n```\r\n\r\n## Simple Summary\r\nDefine built-in constants to express time\r\n\r\n## Abstract\r\nWe need built-in constants for time to increase readability.\r\n\r\n## Motivation\r\nAt this moment, we do not have built-in constants or time units for time, so for example, we need to write to express `3 weeks`:\r\n```\r\nthree_weeks: uint256 = 3 * 7 * 24 * 60 * 60\r\n```\r\nThis decreases readability.\r\n\r\n## Specification\r\nWe can define built-in constants for time like this. (I don't think we need `YEARS`)\r\n```\r\nMINUTES: uint256 = 60\r\nHOURS: uint256 = 60 * 60\r\nDAYS: uint256 = 24 * 60 * 60\r\nWEEKS: uint256 = 7 * 24 * 60 * 60\r\n```\r\nthen, we can express `3 weeks`:\r\n```\r\nthree_weeks: uint256 = 3 * WEEKS\r\n```\r\nor define suffixes after literal numbers like solidity.\r\n```\r\nthree_weeks: uint256 = 3 weeks\r\n```\r\n\r\n## Backwards Compatibility\r\nno expected compatibility errors\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/1002/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/1002/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/414139625",
    "html_url": "https://github.com/vyperlang/vyper/issues/1002#issuecomment-414139625",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1002",
    "id": 414139625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDEzOTYyNQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-19T16:38:09Z",
    "updated_at": "2018-08-19T16:38:09Z",
    "author_association": "MEMBER",
    "body": "An alternative to this proposal is a series of built-in units representing these types, and a conversion method that's easy to use.\r\n\r\n@jacqueswww what do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/414139625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/414428036",
    "html_url": "https://github.com/vyperlang/vyper/issues/1002#issuecomment-414428036",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1002",
    "id": 414428036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDQyODAzNg==",
    "user": {
      "login": "ben-kaufman",
      "id": 10667901,
      "node_id": "MDQ6VXNlcjEwNjY3OTAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/10667901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ben-kaufman",
      "html_url": "https://github.com/ben-kaufman",
      "followers_url": "https://api.github.com/users/ben-kaufman/followers",
      "following_url": "https://api.github.com/users/ben-kaufman/following{/other_user}",
      "gists_url": "https://api.github.com/users/ben-kaufman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ben-kaufman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ben-kaufman/subscriptions",
      "organizations_url": "https://api.github.com/users/ben-kaufman/orgs",
      "repos_url": "https://api.github.com/users/ben-kaufman/repos",
      "events_url": "https://api.github.com/users/ben-kaufman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ben-kaufman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T19:06:24Z",
    "updated_at": "2018-08-20T19:06:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fubuloubu I think maybe a function similar to the `convert` function? Something like this:\r\n`my_time_var: uint256(seconds) = time(3, \"weeks\") + time(5, \"minutes\")`\r\nI think it is good enough (but need a different name than my `time` suggestion), what do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/414428036/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/414430427",
    "html_url": "https://github.com/vyperlang/vyper/issues/1002#issuecomment-414430427",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1002",
    "id": 414430427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDQzMDQyNw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T19:15:02Z",
    "updated_at": "2018-08-20T19:46:39Z",
    "author_association": "MEMBER",
    "body": "That looks pretty good actually, but I was thinking something more like:\r\n```python\r\nmy_var_sec: uint256(seconds)\r\nmy_var_min: uint256(minutes)  # seconds // 60\r\n\r\ndef set_var():\r\n    self.my_var_sec = blk.timestamp  # Already in seconds\r\n    self.my_var_min = convert(blk.timestamp, minutes)  # Convert to minutes\r\n```\r\n\r\nJust what I was thinking about",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/414430427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/414433829",
    "html_url": "https://github.com/vyperlang/vyper/issues/1002#issuecomment-414433829",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1002",
    "id": 414433829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDQzMzgyOQ==",
    "user": {
      "login": "ben-kaufman",
      "id": 10667901,
      "node_id": "MDQ6VXNlcjEwNjY3OTAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/10667901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ben-kaufman",
      "html_url": "https://github.com/ben-kaufman",
      "followers_url": "https://api.github.com/users/ben-kaufman/followers",
      "following_url": "https://api.github.com/users/ben-kaufman/following{/other_user}",
      "gists_url": "https://api.github.com/users/ben-kaufman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ben-kaufman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ben-kaufman/subscriptions",
      "organizations_url": "https://api.github.com/users/ben-kaufman/orgs",
      "repos_url": "https://api.github.com/users/ben-kaufman/repos",
      "events_url": "https://api.github.com/users/ben-kaufman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ben-kaufman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T19:26:39Z",
    "updated_at": "2018-08-20T19:26:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's possible as well, but I'm just worried it might be confusing to deal with multiple units. \r\nI think we should keep it similar how we handle `wei` with `as_wei_value()`, but of course  other approaches might work here as well.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/414433829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/416240867",
    "html_url": "https://github.com/vyperlang/vyper/issues/1002#issuecomment-416240867",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1002",
    "id": 416240867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjI0MDg2Nw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-27T14:14:46Z",
    "updated_at": "2018-08-27T14:14:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "We discussed this, and we will investigate to change this VIP to a similar format such as `as_wei_value`.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/416240867/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/573376713",
    "html_url": "https://github.com/vyperlang/vyper/issues/1002#issuecomment-573376713",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1002",
    "id": 573376713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzM3NjcxMw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-12T02:56:19Z",
    "updated_at": "2020-01-12T03:07:05Z",
    "author_association": "MEMBER",
    "body": "Counter-proposal: create actual types (instead of hackish units)\r\n\r\n`timestamp` is fine, being an absolute unix timestamp (in seconds) but `timedelta` is really the problem. This proposal is basically looking for a richer api around the handling of delta times. So, let's add it! How does this look?\r\n\r\n```python\r\nfrom vyper.time import Timestamp, Second, Minute, Hour, Day, Week\r\n# Should consider Month and Year, but those have no standard definition,\r\n# which feels like a trap (365.25 Days a Year? 30.4375 Days a Month?)\r\n\r\nTHREE_WEEKS: constant(Week) = 3\r\n\r\n\r\ndeadline: public(Timestamp)  # uppercase `timestamp`\r\n# `deadline`'s public getter ABI returns: {\"type\": \"uint256\", \"unit\": \"Timestamp\"}\r\n\r\n\r\ndef __init__():\r\n    # Initialize `deadline` to `3 * 7 * 24 * 60 * 60` seconds after deployment\r\n    self.deadline = block.timestamp + THREE_WEEKS\r\n\r\n\r\ndef add_seconds(_time: Second):  # `Second` is basically `timedelta`\r\n    self.deadline += _time  # Adds `1 * _time` to `deadline`\r\n# `_time`'s ABI looks like: {\"name\": \"_time\", \"type\": \"uint256\", \"unit\": \"Second\"}\r\n\r\n\r\ndef add_minutes(_time: Minute):\r\n    self.deadline += _time  # Adds `60 * _time` to `deadline`\r\n# `_time`'s ABI looks like: {\"name\": \"_time\", \"type\": \"uint256\", \"unit\": \"Minute\"}\r\n\r\n\r\ndef add_hours(_time: Hour):\r\n    self.deadline += _time  # Adds `60 * 60 * _time` to `deadline`\r\n# `_time`'s ABI looks like: {\"name\": \"_time\", \"type\": \"uint256\", \"unit\": \"Hour\"}\r\n\r\n\r\ndef add_days(_time: Day):\r\n    self.deadline += _time  # Adds `24 * 60 * 60 * _time` to `deadline`\r\n# `_time`'s ABI looks like: {\"name\": \"_time\", \"type\": \"uint256\", \"unit\": \"Day\"}\r\n```\r\n\r\nIt might be a little too magical in the general case, but I think it looks quite nice. Don't you think?\r\n\r\n---\r\n\r\nEdit: We can consider this more broadly to implement units in a much nicer way, but then we need to allow people to create their own types from basic ones, some syntax like:\r\n```python\r\nMyCustomType: type(uint256)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/573376713/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/576353198",
    "html_url": "https://github.com/vyperlang/vyper/issues/1002#issuecomment-576353198",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1002",
    "id": 576353198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjM1MzE5OA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-20T16:43:10Z",
    "updated_at": "2020-01-20T16:56:55Z",
    "author_association": "MEMBER",
    "body": "The types can have a relationship with each other built using the following syntax:\r\n```python\r\nSecond: type(uint256)  # Base type is uint256\r\n\r\nMinute: type(60 * Second)  # same as Second, but with a constant relationship\r\n# Same as type Minute(Second): where __mul__/__div__ by a Second is `* 60`\r\n\r\ntype Timestamp(Second):  # Inherits second, but with special conversions\r\n    def __add__(self, other: Second) -> Timestamp:\r\n        return self + other\r\n    def __sub__(self, other: Timestamp) -> Timedelta:\r\n        assert self > other  # Result must be positive\r\n        return self - other\r\n    # __mul__ and __div__ are undefined, hence raise compiler exceptions\r\n```\r\n\r\n---\r\n\r\nPlease note this is very under-developed, but fully encodes the magic behind units into more explicit relationships",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/576353198/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
