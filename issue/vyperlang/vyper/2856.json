{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/2856",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/2856/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/2856/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/2856/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/2856",
  "id": 1235933783,
  "node_id": "I_kwDOBGDvrM5JqtpX",
  "number": 2856,
  "title": "VIP: syntactic distinction for external vs internal calls",
  "user": {
    "login": "charles-cooper",
    "id": 3867501,
    "node_id": "MDQ6VXNlcjM4Njc1MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/charles-cooper",
    "html_url": "https://github.com/charles-cooper",
    "followers_url": "https://api.github.com/users/charles-cooper/followers",
    "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
    "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
    "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
    "repos_url": "https://api.github.com/users/charles-cooper/repos",
    "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
    "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 757250644,
      "node_id": "MDU6TGFiZWw3NTcyNTA2NDQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Approved",
      "name": "VIP: Approved",
      "color": "98f765",
      "default": false,
      "description": "VIP Approved"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/vyperlang/vyper/milestones/4",
    "html_url": "https://github.com/vyperlang/vyper/milestone/4",
    "labels_url": "https://api.github.com/repos/vyperlang/vyper/milestones/4/labels",
    "id": 8047166,
    "node_id": "MI_kwDOBGDvrM4Aeso-",
    "number": 4,
    "title": "v0.4.0",
    "description": null,
    "creator": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 6,
    "closed_issues": 0,
    "state": "open",
    "created_at": "2022-06-03T16:44:20Z",
    "updated_at": "2023-05-24T15:51:35Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 3,
  "created_at": "2022-05-14T10:07:30Z",
  "updated_at": "2023-05-02T07:00:24Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\nAdd a syntactic distinction between internal and external calls. This could be in the form of a keyword, e.g. `await SomeInterface(msg.sender).foo()`. The keyword could also be `call`.\r\n\r\n## Motivation\r\nInternal and external calls have very different semantics. External calls invoke the `CALL` opcode and pass execution context to another (probably untrusted) contract, while internal calls are \"safe\" in that they just `JUMP` around the local contract. This is already reflected in the semantics of internal vs external calls, for instance external calls support the keywords `gas=, value=, skip_contract_check=, default_return_value=`, which are not supported for internal calls.\r\n\r\nRight now, it is relatively easy to tell visually whether a function call is an internal or external call, as internal calls will all use the `self` namespace (e.g. `self.foo()`, as opposed to `self.bar.foo()`). However, as we move towards a more complex module system in vyper (cf. https://github.com/vyperlang/vyper/issues/1954, https://github.com/vyperlang/vyper/issues/2431), it will become more difficult to tell at a glance whether any given call is internal or external, and will require referencing the definition of a function to determine if it is internal or external. This seems to go against vyper's goal of readability/auditability. It would also help the author of a contract, as it forces them to consider the consequences every time they call to an external contract. External calls are expensive to reason about, and the syntax should reflect that! Lastly, this VIP makes it easier to find all external calls made by a contract (which might be done during code review, audit or vulnerability scanning), as it can be done with simple text search.\r\n\r\nThis VIP proposes the use of the `await` keyword to signal that a call is external. This keyword is already familiar to Python programmers, and fits well with `await`'s cooperative multitasking semantics - \"this will pass execution control to something else, and we may get control back after it returns\".\r\n\r\n### Potential Drawbacks\r\n\r\nA drawback of this VIP is that it introduces a code reusability concern. For instance, if `HelperContract` is initially implemented as an internal module, called as follows\r\n```python\r\nself.helper_contract.foo()\r\n```\r\nbut then later due to code size issues, needs to be factored out into a separately deployed contract, any usages like the above would need to be changed to\r\n```python\r\nawait self.helper_contract.foo()\r\n```\r\nThis might be annoying to do. But, maybe this is a feature, not a bug(!), in that it forces the programmer to be explicit about the scope and execution context of the helper contract.\r\n\r\n## Specification\r\n\r\nCalls to external contracts are required to be prefixed with the `await` keyword. If it is not (or, conversely, if a call to an internal module is prefixed with `await`), a semantic or typechecker error should be thrown.\r\n\r\n## Backwards Compatibility\r\nUsers will need to syntactically update every call to an external contract.\r\n\r\n## Dependencies\r\n\r\n## References\r\n#1954, #2431 \r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/2856/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/2856/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1128127795",
    "html_url": "https://github.com/vyperlang/vyper/issues/2856#issuecomment-1128127795",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2856",
    "id": 1128127795,
    "node_id": "IC_kwDOBGDvrM5DPd0z",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-16T20:57:31Z",
    "updated_at": "2022-05-16T20:57:31Z",
    "author_association": "COLLABORATOR",
    "body": "meeting notes: approved, use `await` keyword, wait until next \"minor\" release. (may reconsider the keyword in the future if actual async calls are a thing, e.g. sharded execution)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1128127795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1187894208",
    "html_url": "https://github.com/vyperlang/vyper/issues/2856#issuecomment-1187894208",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2856",
    "id": 1187894208,
    "node_id": "IC_kwDOBGDvrM5GzdPA",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-18T17:36:59Z",
    "updated_at": "2022-07-18T17:37:32Z",
    "author_association": "COLLABORATOR",
    "body": "another even more exotic thought -- we could have all external fns be declared with `external def`, (and internal is the default visibility). this maps directly onto the python AsyncFunctionDef AST type (https://docs.python.org/3/library/ast.html#ast.AsyncFunctionDef, e.g. `async def foo(): ...`)\r\n\r\nthis starts to break down a bit though because in python, `await` is only allowed within `async` functions whereas in vyper, `await` would be allowed in any function.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1187894208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1530981399",
    "html_url": "https://github.com/vyperlang/vyper/issues/2856#issuecomment-1530981399",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2856",
    "id": 1530981399,
    "node_id": "IC_kwDOBGDvrM5bQOwX",
    "user": {
      "login": "scherrey",
      "id": 878591,
      "node_id": "MDQ6VXNlcjg3ODU5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/878591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scherrey",
      "html_url": "https://github.com/scherrey",
      "followers_url": "https://api.github.com/users/scherrey/followers",
      "following_url": "https://api.github.com/users/scherrey/following{/other_user}",
      "gists_url": "https://api.github.com/users/scherrey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scherrey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scherrey/subscriptions",
      "organizations_url": "https://api.github.com/users/scherrey/orgs",
      "repos_url": "https://api.github.com/users/scherrey/repos",
      "events_url": "https://api.github.com/users/scherrey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scherrey/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-02T07:00:24Z",
    "updated_at": "2023-05-02T07:00:24Z",
    "author_association": "NONE",
    "body": "Definitely don't care for 'await' being used in this regard because it strongly infers asynchronous semantics which are not present in the EVM. 'call' or 'send' (as in sending a msg to another actor/contract entity) seem closer semantically to me. I would also suggest that some variant of this could be used to represent delegate-style calls possibly but I obviously haven't thought that one through all the way.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/1530981399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
