{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/1181",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/1181/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/1181/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/1181/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/1181",
  "id": 396938722,
  "node_id": "MDU6SXNzdWUzOTY5Mzg3MjI=",
  "number": 1181,
  "title": "VIP: `msg.data`",
  "user": {
    "login": "nrryuya",
    "id": 22876645,
    "node_id": "MDQ6VXNlcjIyODc2NjQ1",
    "avatar_url": "https://avatars.githubusercontent.com/u/22876645?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nrryuya",
    "html_url": "https://github.com/nrryuya",
    "followers_url": "https://api.github.com/users/nrryuya/followers",
    "following_url": "https://api.github.com/users/nrryuya/following{/other_user}",
    "gists_url": "https://api.github.com/users/nrryuya/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nrryuya/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nrryuya/subscriptions",
    "organizations_url": "https://api.github.com/users/nrryuya/orgs",
    "repos_url": "https://api.github.com/users/nrryuya/repos",
    "events_url": "https://api.github.com/users/nrryuya/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nrryuya/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 479554964,
      "node_id": "MDU6TGFiZWw0Nzk1NTQ5NjQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/enhancement",
      "name": "enhancement",
      "color": "84b6eb",
      "default": true,
      "description": null
    },
    {
      "id": 757250644,
      "node_id": "MDU6TGFiZWw3NTcyNTA2NDQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Approved",
      "name": "VIP: Approved",
      "color": "98f765",
      "default": false,
      "description": "VIP Approved"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/vyperlang/vyper/milestones/2",
    "html_url": "https://github.com/vyperlang/vyper/milestone/2",
    "labels_url": "https://api.github.com/repos/vyperlang/vyper/milestones/2/labels",
    "id": 5624309,
    "node_id": "MDk6TWlsZXN0b25lNTYyNDMwOQ==",
    "number": 2,
    "title": "v0.3.0 Release",
    "description": "",
    "creator": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 4,
    "closed_issues": 11,
    "state": "open",
    "created_at": "2020-07-06T18:39:04Z",
    "updated_at": "2022-06-08T21:08:17Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 8,
  "created_at": "2019-01-08T14:47:12Z",
  "updated_at": "2021-04-09T16:42:54Z",
  "closed_at": "2021-04-09T16:42:54Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\nAdd support of `msg.data`, which returns the complete calldata.  This enables a proxy for an upgradable pattern.\r\n\r\n## Abstract\r\nAdd a new global variable `msg.data` similar to [the one of Solidity](https://solidity.readthedocs.io/en/v0.4.24/units-and-global-variables.html#block-and-transaction-properties).\r\n\r\n## Motivation\r\nThis enables a proxy for an upgradable pattern with which users don't need to take care of the proxy contract. See the example code below.\r\n\r\n## Specification\r\n`msg.data` returns a `bytes` which represents a complete calldata using CALLDATA opcode.\r\n\r\nThis is an example code of a proxy contract. (ref [OpenZeppelin Proxy.sol](https://github.com/zeppelinos/zos/blob/master/packages/lib/contracts/upgradeability/Proxy.sol))\r\n\r\nproxy contract\r\n```\r\nimplementation: public(address)\r\nowner: public(address)\r\n\r\n@public\r\ndef __default__():\r\n    assert msg.sender == self.owner\r\n    raw_call(self.implementation, msg.data, outsize=0, gas=0, delegate_call=True)\r\n    \r\n@public\r\ndef upgradeTo(_newAddr: address):\r\n    assert msg.sender == self.owner\r\n    self.implementation = _newAddr\r\n```\r\n\r\ndelegatee contract\r\n```\r\ndummyVal1: address\r\ndummyVal2: address\r\nappData1: public(uint256)\r\nappData2: public(bytes32)\r\n\r\n\r\n@public\r\ndef someFunc(_inp: uint256):\r\n    self.appData1 = _inp\r\n```\r\n(NOTE: `dummyVal`s are there to make up for the slots of the variables used only in the proxy. Instead, the slots of these variables are [explicitly set with inline assembly in Solidity](https://github.com/zeppelinos/zos/blob/master/packages/lib/contracts/upgradeability/UpgradeabilityProxy.sol#L48)). \r\n\r\n## Backwards Compatibility\r\nIt's a new feature and backward compatible.\r\n\r\n## Dependencies\r\nNone\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/1181/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/1181/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/452329219",
    "html_url": "https://github.com/vyperlang/vyper/issues/1181#issuecomment-452329219",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1181",
    "id": 452329219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjMyOTIxOQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T15:01:37Z",
    "updated_at": "2019-01-08T15:02:14Z",
    "author_association": "CONTRIBUTOR",
    "body": ":+1: exposing `msg.data` is something we need (other type of verifiers can use this too) and is implemented easily :)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/452329219/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/453143143",
    "html_url": "https://github.com/vyperlang/vyper/issues/1181#issuecomment-453143143",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1181",
    "id": 453143143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzE0MzE0Mw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-10T15:46:46Z",
    "updated_at": "2019-01-10T15:48:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I looked at the implementation of this and it gets a bit tricky with the fact that we do not allow any length `bytes` which means we would have to assert/throw if CALLDATASIZE is larger than the provided/set data type. Which means in vyper `msg.data` will probably have to the following rules:\r\n\r\n- Special case of raw_call() if used as follows: \r\n```python\r\nraw_call(self.implementation, msg.data, outsize=0, gas=msg.gas, delegate_call=True)  # no assertions occur\r\n```\r\n- In any other scenario the bytes will only be copied if msg.data.size <= maxlen e.g. in an assign:\r\n\r\n```python\r\na: bytes[1024] = msg.data  # will throw if  CALLDATASIZE > 1024 \r\n```\r\n\r\n\r\ncc @fubuloubu ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/453143143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/453179160",
    "html_url": "https://github.com/vyperlang/vyper/issues/1181#issuecomment-453179160",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1181",
    "id": 453179160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzE3OTE2MA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-10T17:19:41Z",
    "updated_at": "2019-01-10T17:19:41Z",
    "author_association": "MEMBER",
    "body": "What about if I use it directly? Would the accessor be the bound that would check for assert? What if I access multiple parts of it?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/453179160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/453217089",
    "html_url": "https://github.com/vyperlang/vyper/issues/1181#issuecomment-453217089",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1181",
    "id": 453217089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzIxNzA4OQ==",
    "user": {
      "login": "vbuterin",
      "id": 2230894,
      "node_id": "MDQ6VXNlcjIyMzA4OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2230894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbuterin",
      "html_url": "https://github.com/vbuterin",
      "followers_url": "https://api.github.com/users/vbuterin/followers",
      "following_url": "https://api.github.com/users/vbuterin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbuterin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbuterin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbuterin/subscriptions",
      "organizations_url": "https://api.github.com/users/vbuterin/orgs",
      "repos_url": "https://api.github.com/users/vbuterin/repos",
      "events_url": "https://api.github.com/users/vbuterin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbuterin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-10T19:12:16Z",
    "updated_at": "2019-01-10T19:12:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Special case of raw_call() if used as follows:\r\n\r\nThe problem with allowing this is that you lose the property of being able to calculate a precise bound on gas consumption.\r\n\r\nOne alternative proposal would be to allow `msg.data` ONLY in the form `slice(msg.data, x, y)` (ie. `msg.data` as an independent thing would not be legal, this would be an additional rule _in the definition of `slice`_)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/453217089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/453243089",
    "html_url": "https://github.com/vyperlang/vyper/issues/1181#issuecomment-453243089",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1181",
    "id": 453243089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzI0MzA4OQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-10T20:32:25Z",
    "updated_at": "2019-01-10T20:32:25Z",
    "author_association": "MEMBER",
    "body": "> The problem with allowing this is that you lose the property of being able to calculate a precise bound on gas consumption.\r\n\r\nI think we lose this with `raw_call` in general. If we make a call to a Solidity contract, I think all bets are off IIRC",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/453243089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/454503573",
    "html_url": "https://github.com/vyperlang/vyper/issues/1181#issuecomment-454503573",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1181",
    "id": 454503573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDUwMzU3Mw==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T18:41:34Z",
    "updated_at": "2019-01-15T18:41:34Z",
    "author_association": "COLLABORATOR",
    "body": "I think an issue with using slice is it makes it easier for the programmer to make mistakes, i.e. failing silently. Perhaps a middle ground is having the syntax be `msg.data[len]`, that way the length is always specified, and the runtime throws if there is a bounds check error.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/454503573/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/520630878",
    "html_url": "https://github.com/vyperlang/vyper/issues/1181#issuecomment-520630878",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1181",
    "id": 520630878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDYzMDg3OA==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-12T23:25:21Z",
    "updated_at": "2019-08-12T23:25:59Z",
    "author_association": "NONE",
    "body": "Utilizing `msg.data` is a path we are considering to help prevent potential validators from losing their deposits due to malformed calldata. Is this still something that is being considered for implementation in the near future?\r\n\r\nEDIT: see https://github.com/ethereum/eth2.0-specs/issues/1357",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/520630878/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/520650737",
    "html_url": "https://github.com/vyperlang/vyper/issues/1181#issuecomment-520650737",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1181",
    "id": 520650737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDY1MDczNw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-13T01:13:24Z",
    "updated_at": "2019-08-13T01:13:24Z",
    "author_association": "MEMBER",
    "body": "It's on the path for the next few months, but we're accepting contributions if anyone wants to get involved! It shouldn't be too difficult.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/520650737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
