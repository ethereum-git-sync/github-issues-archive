{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/1020",
  "id": 360137386,
  "node_id": "MDU6SXNzdWUzNjAxMzczODY=",
  "number": 1020,
  "title": "VIP: Signed Structs (EIP 712 Support)",
  "user": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 479554965,
      "node_id": "MDU6TGFiZWw0Nzk1NTQ5NjU=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/help%20wanted",
      "name": "help wanted",
      "color": "128A0C",
      "default": true,
      "description": null
    },
    {
      "id": 684449300,
      "node_id": "MDU6TGFiZWw2ODQ0NDkzMDA=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/Easy%20Pickings",
      "name": "Easy Pickings",
      "color": "0e8a16",
      "default": false,
      "description": "Used to denote issues that should be easy to implement"
    },
    {
      "id": 757250644,
      "node_id": "MDU6TGFiZWw3NTcyNTA2NDQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Approved",
      "name": "VIP: Approved",
      "color": "98f765",
      "default": false,
      "description": "VIP Approved"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 17,
  "created_at": "2018-09-14T02:48:46Z",
  "updated_at": "2022-04-13T20:05:18Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\nAllow defining a struct that contains a signature field such that there is a standard algorithm for performing ecrecover on it.\r\nWould be most useful with #1019 \r\n\r\n## Abstract\r\nIn constructions like Plasma, it is often useful to define a transaction data structure to manage the complexity of a transaction type and how it is used to validate logic in the contract. Having a struct type that can define an extra signature field which can be processed in a standard algorithm to recover the signer of the transaction would be very helpful to streamline the design of these algorithms without too much complexity in the contract.\r\n\r\n## Motivation\r\nWe want to make working with different constructions like Plasma as simple and expressive as possible. Primatives like working with signed transactions are very commonplace in this constructions, and we should support primitives like this as first class citizens to make it easier and safer to write these kinds of contracts.\r\n\r\n## Specification\r\nWe might define a structure as follows that contains a VRS signature with which recovery of the signing address can be performed via exclusion of the signature, hashing of the rest of the struct as an RLP encoded object, and performing `ecrecover(hash, r, s, v)` of the result.\r\nThe field that would contain this signature in this special struct would be denoted by `__sig__` .\r\n`get_signer(struct)` would be the function that performed this function to return the signer's address.\r\n```python\r\nstruct Transaction:\r\n    a: address\r\n    b: uint256\r\n    __sig__: VRS_SECP256K1  # Special type representing a VRS signature for a Secp256k1 signature\r\n...\r\n\r\n# Assert that the transaction's signer is the caller here.\r\nassert get_signer(transaction) == msg.sender\r\n...\r\n```\r\nThere might potentially be defined a custom type to represent a VRS signature, but should be extensible with other types for other signature methods that may be included later.\r\n\r\n## Backwards Compatibility\r\nThis would be fully backwards compatible as it is a new featureset that would be added.\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/1020/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/422775524",
    "html_url": "https://github.com/vyperlang/vyper/issues/1020#issuecomment-422775524",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
    "id": 422775524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjc3NTUyNA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-19T12:01:03Z",
    "updated_at": "2018-09-19T12:01:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Approved, dependency on #1019 .",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/422775524/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/431410758",
    "html_url": "https://github.com/vyperlang/vyper/issues/1020#issuecomment-431410758",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
    "id": 431410758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTQxMDc1OA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-19T15:54:32Z",
    "updated_at": "2018-10-19T15:54:32Z",
    "author_association": "MEMBER",
    "body": "Note: dependency is only recommended to make it easier to work with. This proposal stands alone.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/431410758/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/443343602",
    "html_url": "https://github.com/vyperlang/vyper/issues/1020#issuecomment-443343602",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
    "id": 443343602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzM0MzYwMg==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-30T21:22:49Z",
    "updated_at": "2018-11-30T21:22:49Z",
    "author_association": "COLLABORATOR",
    "body": "Linking to https://github.com/ethereum/EIPs/blob/c6a476b64d9dff50cd18f12d03bd552751956537/EIPS/eip-712.md for reference",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/443343602/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/443734979",
    "html_url": "https://github.com/vyperlang/vyper/issues/1020#issuecomment-443734979",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
    "id": 443734979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzczNDk3OQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T14:47:21Z",
    "updated_at": "2018-12-03T14:47:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "We will evaluate this one at implementation time, to _probably_ use EIP712 :)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/443734979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444631852",
    "html_url": "https://github.com/vyperlang/vyper/issues/1020#issuecomment-444631852",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
    "id": 444631852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDYzMTg1Mg==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-05T20:20:01Z",
    "updated_at": "2018-12-05T20:20:01Z",
    "author_association": "COLLABORATOR",
    "body": "After absorbing EIP712 a little more, it seems that this VIP and EIP712 are fairly closely aligned and we can follow the spec in EIP712 for hashing/signing structs. I that `__sig__` doesn't need to be part of the struct, but rather could be carried around as associated data. So for instance, following the analogy between `eth_sign` and `eth_signTypedData`, `ecrecover` for structs could look like `ecrecover_packed(digest_typed_data(MyDomain, struct), sig)` as in https://github.com/ethereum/EIPs/blob/f2d42c39e9318d4a706e1e06bacf09c9383a981e/assets/eip-712/Example.sol#L74.\r\n\r\nThe only thing in EIP712 which hasn't been considered yet for the scope of this VIP is the [domain separator struct](https://github.com/ethereum/EIPs/blob/f2d42c39e9318d4a706e1e06bacf09c9383a981e/EIPS/eip-712.md#definition-of-domainseparator). I propose a new keyword to help define this struct, `EIP712Domain`, and if/when EIP712 is broadly implemented we can change the keyword simply to `domain`. This keyword can be implemented similarly to `contract` and `struct`, and have the following syntax:\r\n```\r\nEIP712Domain MyDomain:\r\n    name: [string literal]\r\n    chainId: [uint256 literal]\r\n    verifyingContract: [address literal]\r\n    salt: [bytes32 literal]\r\n```\r\nAs in the EIP712 spec, the EIP712Domain definition must have one or more of those fields, but may omit unused fields. The EIP712Domain may have a name, which permits defining multiple domains in a single `.vy` file. This is allows the dapp developer to sign structs for multiple other contracts, or maintain multiple domains in a single contract. Additionally, I considered that a struct definition could include a domain so that `digest_typed_data` does not need to take a domain as a parameter, but to avoid complications around type-checking and usability, I think they should be defined and passed around completely separately.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444631852/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444689215",
    "html_url": "https://github.com/vyperlang/vyper/issues/1020#issuecomment-444689215",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
    "id": 444689215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDY4OTIxNQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-05T23:20:21Z",
    "updated_at": "2018-12-05T23:20:21Z",
    "author_association": "MEMBER",
    "body": "Mostly agree with that assessment, with a few caveats.\r\n\r\n---\r\n\r\n> \"[The signature can] be carried around as associated data.\"\r\n\r\nHow would this work in practice?\r\n\r\nMy idea with having the signature defined as part of the struct would be to allow signed transactions to be submitted as struct data inputs to functions that may use that transaction to verify or make an assertion about some larger action, like the Plasma exit use case (reference my code).\r\n\r\nI also wanted to make it easier to do core operations on these data structures, like recover the signing account, without having to directly handle the signature or anything. Something like `assert msg.sender == recover_account(signed_transaction)`",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/444689215/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/457321101",
    "html_url": "https://github.com/vyperlang/vyper/issues/1020#issuecomment-457321101",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
    "id": 457321101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzMyMTEwMQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T19:16:33Z",
    "updated_at": "2019-01-24T19:16:33Z",
    "author_association": "MEMBER",
    "body": "Linking to https://github.com/ethereum/EIPs/pull/712 for posterity",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/457321101/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480065326",
    "html_url": "https://github.com/vyperlang/vyper/issues/1020#issuecomment-480065326",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
    "id": 480065326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDA2NTMyNg==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-04T21:11:14Z",
    "updated_at": "2019-04-04T21:11:14Z",
    "author_association": "COLLABORATOR",
    "body": "A couple conclusions from gitter:\r\n`EIP712Domain` should also include `version` (of course!)\r\n`verifyingContract` should allow `self` as an option\r\n`chainId` should allow the chainId opcode as an option (dependent on EIP 1344)\r\n\r\nAlso, the contract should expose the domain separator values as public variables",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480065326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480075447",
    "html_url": "https://github.com/vyperlang/vyper/issues/1020#issuecomment-480075447",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
    "id": 480075447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDA3NTQ0Nw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-04T21:46:04Z",
    "updated_at": "2019-04-04T21:46:04Z",
    "author_association": "MEMBER",
    "body": "Should we allow `chainId` before EIP 1344 is implemented?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480075447/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480076260",
    "html_url": "https://github.com/vyperlang/vyper/issues/1020#issuecomment-480076260",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
    "id": 480076260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDA3NjI2MA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-04T21:48:54Z",
    "updated_at": "2019-04-04T21:48:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, rather safe than sorry.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480076260/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480089566",
    "html_url": "https://github.com/vyperlang/vyper/issues/1020#issuecomment-480089566",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
    "id": 480089566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDA4OTU2Ng==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-04T22:43:37Z",
    "updated_at": "2019-04-04T22:43:37Z",
    "author_association": "COLLABORATOR",
    "body": "One idea I have been toying with is to just let the user set any domains in\nthe constructor. However, then we need a way to determine which fields are\nset (since according to the spec fields can be nullable). Not just for\ncalculating the hash in contract, but also if we expose those fields to a\nuser agent. We could perhaps use 0 or the null string as sentinel values\nbut I am sure some user will want to use those values. Actually I think\nthis issue needs to be solved whether the domain fields are set in storage\nor the runtime code.\n\nOn Thu, Apr 4, 2019, 2:49 PM Jacques Wagener <notifications@github.com>\nwrote:\n\n> Yes, rather safe than sorry.\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereum/vyper/issues/1020#issuecomment-480076260>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ADsDbV29LIxbM67nJsiOF-wAxI1URAuuks5vdnNKgaJpZM4Woht2>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/480089566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/492460564",
    "html_url": "https://github.com/vyperlang/vyper/issues/1020#issuecomment-492460564",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
    "id": 492460564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjQ2MDU2NA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-15T00:37:27Z",
    "updated_at": "2019-05-15T00:37:27Z",
    "author_association": "MEMBER",
    "body": "Note: Cannot implement this manually without #1406",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/492460564/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/492806826",
    "html_url": "https://github.com/vyperlang/vyper/issues/1020#issuecomment-492806826",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
    "id": 492806826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjgwNjgyNg==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-15T20:15:01Z",
    "updated_at": "2019-05-15T20:15:01Z",
    "author_association": "COLLABORATOR",
    "body": "> Note: Cannot implement this manually without #1406\r\n\r\nReally? I figure you only need `abi.encode` in order to compute the EIP712 hash.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/492806826/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/492890978",
    "html_url": "https://github.com/vyperlang/vyper/issues/1020#issuecomment-492890978",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
    "id": 492890978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Mjg5MDk3OA==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-16T02:20:06Z",
    "updated_at": "2019-05-16T02:20:06Z",
    "author_association": "MEMBER",
    "body": "Yeah, that was my point haha. Without `abi.encode` I can't implement EIP712 in Vyper manually.\r\n\r\nThis VIP would add an additional syntax to shortcut the manual process. It could also get away with not leveraging `abi.encode` internally, which is why this proposal does not depend on #1406",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/492890978/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/492893015",
    "html_url": "https://github.com/vyperlang/vyper/issues/1020#issuecomment-492893015",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
    "id": 492893015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Mjg5MzAxNQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-16T02:31:52Z",
    "updated_at": "2019-05-30T20:52:37Z",
    "author_association": "MEMBER",
    "body": "What do we think of the following as a specification for this type of message signing and signature recovery, using EIP712:\r\n\r\n```python\r\nfrom vyper.messages import EIP712Domain, recover_message\r\nfrom vyper.signatures import VRS_SECP256K1  # (v, r, s) tuple type, 65 bytes\r\n\r\n# Can be any valid struct\r\n# (gets signed offline using EIP712 API with above domain)\r\nstruct Transaction:\r\n    a: address\r\n    b: uint256\r\n\r\n@public\r\ndef foo(txn: Transaction, sig: VRS_SECP256K1)\r\n    # Assert that the transaction's signer is the caller here.\r\n    myDomain: EIP712Domain = EIP712Domain({\r\n        name: [string literal]                        # optional unless no others\r\n        version: [string literal]                     # optional unless no others\r\n        chainId: [uint256 literal or variable]        # optional unless no others\r\n        verifyingContract: [address literal OR self]  # optional unless no others\r\n        salt: [bytes32 literal]                       # optional unless no others\r\n    })\r\n    assert recover_message(txn, sig, type=myDomain) == msg.sender\r\n    ...  # Stuff, now that we authenticated the signer\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/492893015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/519582756",
    "html_url": "https://github.com/vyperlang/vyper/issues/1020#issuecomment-519582756",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
    "id": 519582756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTU4Mjc1Ng==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-08T16:05:19Z",
    "updated_at": "2019-08-08T16:05:19Z",
    "author_association": "MEMBER",
    "body": "With the upcoming Istanbul hardfork, we should include support for EIP-1344 in this feature.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/519582756/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/546437779",
    "html_url": "https://github.com/vyperlang/vyper/issues/1020#issuecomment-546437779",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/1020",
    "id": 546437779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjQzNzc3OQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-25T17:17:01Z",
    "updated_at": "2019-10-25T17:17:01Z",
    "author_association": "MEMBER",
    "body": "Had another idea for syntax using decorators which I think would look much cleaner:\r\n\r\n```python\r\nfrom vyper.message import EIP712Domain, EIP712Message, eip712_recover\r\n\r\nEIP712Domain TransactionDomain:\r\n    name: \"My Protocol\"      # must be a string\r\n    version: \"1.0\"           # must be a string\r\n    chainId: tx.chain_id     # this or uint256 literal\r\n    verifyingContract: self  # this or address literal\r\n\r\n# By decorating with this datatype, this informs\r\n# the compiler to use the EIP712 Hashing strategy\r\n@EIP712Message(TransactionDomain)\r\nstruct Transaction:\r\n    a: address\r\n    b: uint256\r\n\r\n@public\r\ndef do_something(\r\n    # Hash via EIP712 hashing strategy because of EIP712Message decorator\r\n    _msg: Transaction,\r\n    # bytes[65] under the hood, note: web3py uses RSV convention... but precompile uses VRS\r\n    _sig: RSV_SECP256K1,\r\n) -> address:\r\n    # 1. Hash TransactionDomain and _msg together (3 hashes)\r\n    # 2. Extract _sig to r, s, v components\r\n    # 3. Run ecrecover precompile\r\n    return eip712_recover(_msg, _sig)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/546437779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
