{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/1972",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/1972/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/1972/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/1972/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/1972",
  "id": 618587058,
  "node_id": "MDU6SXNzdWU2MTg1ODcwNTg=",
  "number": 1972,
  "title": "Ideas for AST-level optimizations",
  "user": {
    "login": "iamdefinitelyahuman",
    "id": 35276322,
    "node_id": "MDQ6VXNlcjM1Mjc2MzIy",
    "avatar_url": "https://avatars.githubusercontent.com/u/35276322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/iamdefinitelyahuman",
    "html_url": "https://github.com/iamdefinitelyahuman",
    "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers",
    "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}",
    "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions",
    "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs",
    "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos",
    "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2179545631,
      "node_id": "MDU6TGFiZWwyMTc5NTQ1NjMx",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/Optimization",
      "name": "Optimization",
      "color": "6ac3c9",
      "default": false,
      "description": "Issues related to compiler optimization"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2020-05-14T23:04:37Z",
  "updated_at": "2020-09-15T12:51:15Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "This is a list of ideas for optimizations that could be implemented via AST modification.  Some of these ideas are probably bad. This is a living list, in no way finalized, and will likely change in the future.\r\n\r\n* in `__init__`, remove any assignments of `self.var = [zero value]`\r\n* when a storage variable is referenced more than once without being written to, create a memory variable\r\n* remove memory variables that are initialized but never used\r\n* for an `if` statement where both the `if` and `else` blocks end in a return, move the else block logic into the body of the parent block (note: potential scoping concerns)\r\n* convert `> 0` to `!= 0` for unsigned integer comparisons\r\n* if a memory variable is initialized and only referenced once, replace the reference with the right-hand side of the initialization\r\n* if the final node in a function body is a for loop, and the function returns `None`, replace any `return` statements inside the function with `break`\r\n* if constant folding results in `if True:` or `if False:` remove the block or the else block (consider scoping here)\r\n* within the context of a for loop, if there are multiple lookups of `some_long_array[i]` without any assignments, copy the value to a new memory value to save on lookups",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/1972/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/1972/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
