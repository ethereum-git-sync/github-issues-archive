{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/330",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/330/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/330/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/330/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/330",
  "id": 254826711,
  "node_id": "MDU6SXNzdWUyNTQ4MjY3MTE=",
  "number": 330,
  "title": "Fake return values from stack.",
  "user": {
    "login": "Dexaran",
    "id": 26142412,
    "node_id": "MDQ6VXNlcjI2MTQyNDEy",
    "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dexaran",
    "html_url": "https://github.com/Dexaran",
    "followers_url": "https://api.github.com/users/Dexaran/followers",
    "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
    "organizations_url": "https://api.github.com/users/Dexaran/orgs",
    "repos_url": "https://api.github.com/users/Dexaran/repos",
    "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dexaran/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 751622094,
      "node_id": "MDU6TGFiZWw3NTE2MjIwOTQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Discussion",
      "name": "VIP: Discussion",
      "color": "000000",
      "default": false,
      "description": "Used to denote VIPs and more complex issues that are waiting discussion in a meeting"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2017-09-02T17:59:10Z",
  "updated_at": "2018-06-19T15:20:29Z",
  "closed_at": "2018-06-19T15:17:41Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "In Solidity, if you call a function that does not return a value, assuming that it returns something, you will get fake return values from the stack. Not unassigned value or error.\r\n\r\nI think that it is a serious issue because we can't rely on return values at all. It would be better to throw an error or return unassigned values.\r\n\r\nI have described this in [solidity issue #2630](https://github.com/ethereum/solidity/issues/2630).\r\n```solidity\r\npragma solidity ^0.4.11;\r\n\r\ncontract test_receive\r\n{ \r\n// this contract is needed only for the other contract to compile - it's never actually called\r\n    function receive(address, uint256, bytes) returns (bool, uint256)\r\n   { \r\n        return (false, 222);\r\n    }\r\n} \r\n\r\ncontract test_cast\r\n{\r\n    uint public test_uint;\r\n    bool public test_bool;\r\n\r\n    function test(address addr, uint256 n) returns (uint256)\r\n    {\r\n        bytes memory _data;\r\n        var (_success, _back) = test_receive(addr).receive(addr, n, _data);\r\n        require(_success);\r\n        test_uint = _back;\r\n        test_bool = _success;\r\n        return _back;\r\n    }\r\n}\r\n\r\ncontract dummy\r\n  {\r\n    function() payable {  }\r\n}\r\n```\r\nIs here any possibility to avoid the same problem in Viper?",
  "closed_by": {
    "login": "jacqueswww",
    "id": 6917456,
    "node_id": "MDQ6VXNlcjY5MTc0NTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacqueswww",
    "html_url": "https://github.com/jacqueswww",
    "followers_url": "https://api.github.com/users/jacqueswww/followers",
    "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
    "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
    "repos_url": "https://api.github.com/users/jacqueswww/repos",
    "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/330/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/330/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/326766683",
    "html_url": "https://github.com/vyperlang/vyper/issues/330#issuecomment-326766683",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/330",
    "id": 326766683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjc2NjY4Mw==",
    "user": {
      "login": "DavidKnott",
      "id": 17552858,
      "node_id": "MDQ6VXNlcjE3NTUyODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17552858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidKnott",
      "html_url": "https://github.com/DavidKnott",
      "followers_url": "https://api.github.com/users/DavidKnott/followers",
      "following_url": "https://api.github.com/users/DavidKnott/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidKnott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidKnott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidKnott/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidKnott/orgs",
      "repos_url": "https://api.github.com/users/DavidKnott/repos",
      "events_url": "https://api.github.com/users/DavidKnott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidKnott/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-02T20:06:21Z",
    "updated_at": "2017-09-02T20:38:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Dexaran You're on it!  This is a huge problem, I think this problem will be easier to deal with once we have the functionality to make calls to other contracts in place.  Then I'll start by trying to come up with a failing test case similar to the one you made in Solidity.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/326766683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/326773123",
    "html_url": "https://github.com/vyperlang/vyper/issues/330#issuecomment-326773123",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/330",
    "id": 326773123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjc3MzEyMw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-02T22:42:39Z",
    "updated_at": "2017-09-02T22:42:39Z",
    "author_association": "MEMBER",
    "body": "As a fancier solution, implementing a basic verification stage type checking all return values in the function's control flow path would be useful to provide programmer feedback to a bad contract.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/326773123/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/396916734",
    "html_url": "https://github.com/vyperlang/vyper/issues/330#issuecomment-396916734",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/330",
    "id": 396916734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjkxNjczNA==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T12:16:43Z",
    "updated_at": "2018-06-13T12:16:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Adding this to Fix up the beta project, so some time can be taken to investigate and see if we can avoid this.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/396916734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397212967",
    "html_url": "https://github.com/vyperlang/vyper/issues/330#issuecomment-397212967",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/330",
    "id": 397212967,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzIxMjk2Nw==",
    "user": {
      "login": "haydenadams",
      "id": 9343483,
      "node_id": "MDQ6VXNlcjkzNDM0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9343483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haydenadams",
      "html_url": "https://github.com/haydenadams",
      "followers_url": "https://api.github.com/users/haydenadams/followers",
      "following_url": "https://api.github.com/users/haydenadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/haydenadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haydenadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haydenadams/subscriptions",
      "organizations_url": "https://api.github.com/users/haydenadams/orgs",
      "repos_url": "https://api.github.com/users/haydenadams/repos",
      "events_url": "https://api.github.com/users/haydenadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haydenadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T08:22:20Z",
    "updated_at": "2018-06-14T08:27:02Z",
    "author_association": "NONE",
    "body": "@jacqueswww  @DavidKnott  You should be careful here: https://github.com/ethereum/solidity/issues/4116\r\n\r\n\r\nMany ERC20 contracts including [OMG](https://etherscan.io/address/0xd26114cd6EE289AccF82350c8d8487fedB8A0C07#code) do not return booleans as specified in the ERC20 standard. If you have a contract with a common interface for all ERC20s that expects boolean return values for `transfer()`, `approve()`, and `transferFrom()` and enforce that any call using that interface has to return either True or False, all calls to the OMG token contract (and several other tokens) will revert. This is problematic for many DEX designs. \r\n\r\nEDIT: did some digging. Apparently its [at least 130 tokens](https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca) affected.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397212967/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397376289",
    "html_url": "https://github.com/vyperlang/vyper/issues/330#issuecomment-397376289",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/330",
    "id": 397376289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzM3NjI4OQ==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T17:32:08Z",
    "updated_at": "2018-06-14T17:32:08Z",
    "author_association": "MEMBER",
    "body": "Interfaces should be implemented exactly as designed, :100: agree on that. I am curious if the random stack value return influences this at all because sometimes the value will be non-zero, and that would be difficult to debug. Your suggestion to enforce call return values as the interface specifies should absolutely be enforced.\r\n\r\nI don't know if this solves the problem here though, as the OP notes it will return without throwing random values from the stack.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397376289/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397389874",
    "html_url": "https://github.com/vyperlang/vyper/issues/330#issuecomment-397389874",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/330",
    "id": 397389874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzM4OTg3NA==",
    "user": {
      "login": "haydenadams",
      "id": 9343483,
      "node_id": "MDQ6VXNlcjkzNDM0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9343483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haydenadams",
      "html_url": "https://github.com/haydenadams",
      "followers_url": "https://api.github.com/users/haydenadams/followers",
      "following_url": "https://api.github.com/users/haydenadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/haydenadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haydenadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haydenadams/subscriptions",
      "organizations_url": "https://api.github.com/users/haydenadams/orgs",
      "repos_url": "https://api.github.com/users/haydenadams/repos",
      "events_url": "https://api.github.com/users/haydenadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haydenadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T18:15:41Z",
    "updated_at": "2018-06-14T18:15:41Z",
    "author_association": "NONE",
    "body": "@fubuloubu I wasn't necessarily suggesting it. I was saying if it is enforced over 130 tokens currently on EtherDelta will no longer be able to be transferred using the standard ERC20 interface. ",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/397389874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/398437171",
    "html_url": "https://github.com/vyperlang/vyper/issues/330#issuecomment-398437171",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/330",
    "id": 398437171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODQzNzE3MQ==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-19T15:17:41Z",
    "updated_at": "2018-06-19T15:17:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I investigated this some more, and because we use `CALL` and don't have a in memory stack like solidity. In it's current iteration vyper can not have this issue.\r\nHowever this is something to consider when we make a decision with regards to #901 .",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/398437171/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
