{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/769",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/769/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/769/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/769/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/769",
  "id": 312698293,
  "node_id": "MDU6SXNzdWUzMTI2OTgyOTM=",
  "number": 769,
  "title": "VIP: Improve storage variable layout",
  "user": {
    "login": "daejunpark",
    "id": 5491770,
    "node_id": "MDQ6VXNlcjU0OTE3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5491770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/daejunpark",
    "html_url": "https://github.com/daejunpark",
    "followers_url": "https://api.github.com/users/daejunpark/followers",
    "following_url": "https://api.github.com/users/daejunpark/following{/other_user}",
    "gists_url": "https://api.github.com/users/daejunpark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/daejunpark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/daejunpark/subscriptions",
    "organizations_url": "https://api.github.com/users/daejunpark/orgs",
    "repos_url": "https://api.github.com/users/daejunpark/repos",
    "events_url": "https://api.github.com/users/daejunpark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/daejunpark/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 757250644,
      "node_id": "MDU6TGFiZWw3NTcyNTA2NDQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Approved",
      "name": "VIP: Approved",
      "color": "98f765",
      "default": false,
      "description": "VIP Approved"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2018-04-09T21:43:05Z",
  "updated_at": "2018-05-07T13:37:21Z",
  "closed_at": "2018-05-07T13:37:21Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Preamble\r\n\r\n```\r\nVIP: #769\r\nTitle: Improve storage variable layout\r\nAuthor: Daejun Park\r\nType: Standard Track \r\nStatus: Draft\r\nCreated: 2018-04-09\r\nRequires (*optional): <VIP number(s)>\r\nReplaces (*optional): <VIP number(s)>\r\n```\r\n\r\n### Simple Summary\r\n\r\nImprove the layout of dynamically-sized state variables in the storage, adopting [that of Solidity](http://solidity.readthedocs.io/en/v0.4.21/miscellaneous.html#layout-of-state-variables-in-storage).\r\n\r\n### Specification\r\n\r\nA map entry `m[k]` is stored at the location `hash(k . index(m))`, where \"`.`\" is byte-concatenation.\r\n\r\nA nested map entry's location can be defined recursively. For example, `m[k1][k2]` is stored at `hash(k2 . hash(k1 . index(m)))`\r\n\r\nA formal specification can be found [here](https://github.com/kframework/evm-semantics/blob/master/edsl.md#hashed-location-for-storage) (in progress).\r\n\r\n----\r\n\r\nBelow is a quick reference of `loc` that computes the storage location.\r\n\r\nLists:\r\n```\r\nloc(a[i])    =   #(a) + i\r\nloc(a[i][j]) = #(#(a) + i) + j\r\n```\r\n\r\nStructs:\r\n```\r\nloc(s.x)   =   #(s) + x\r\nloc(s.x.y) = #(#(s) + x) + y\r\n```\r\n\r\nMaps:\r\n```\r\nloc(m[k])    =   #(m . k)\r\nloc(m[k][l]) = #(#(m . k) . l)\r\n```\r\n\r\nIn general: (`E` is an arbitrary nested data structure, e.g., a list of structs of maps ...):\r\n```\r\nloc(E[i]) = #(loc(E)) + i    // list of ...\r\nloc(E.x)  = #(loc(E)) + x    // struct of ...\r\nloc(E[k]) = #(loc(E) . k)    // map of ...\r\n\r\nloc(a) = a                   // list name\r\nloc(s) = s                   // struct name\r\nloc(m) = m                   // map name\r\n```\r\n\r\nNOTE:\r\n * `#` denotes the `keccak256` hash.\r\n * `.` is byte-concatenation.\r\n * Assume there is the implicit `index` conversion for the list name `a`, the struct name `s`, the struct field names `x` and `y`, and the map name `m`.\r\n\r\n----\r\n\r\nRationale:\r\n\r\nThe number of elements (or fields) of a list (or a struct) is expected to be much smaller than the size of the storage address space. Thus, even if the elements (or the fields) are stored in a consecutive region of the storage, it is very unlikely the region is overlapped with the other regions, since the starting locations of the regions will be well distributed (well spread across the entire storage) by `keccak256`.\r\n\r\n### Motivation\r\n\r\nThe main difference from the current scheme is the use of `.` instead of `+` to compute the offset. This change is critical for avoiding potential collisions, since `.` is injective, while `+` is not due to the modulo arithmetic. (Note that this is orthogonal to the potential hash collision of `keccak256`.)\r\n",
  "closed_by": {
    "login": "jacqueswww",
    "id": 6917456,
    "node_id": "MDQ6VXNlcjY5MTc0NTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacqueswww",
    "html_url": "https://github.com/jacqueswww",
    "followers_url": "https://api.github.com/users/jacqueswww/followers",
    "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
    "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
    "repos_url": "https://api.github.com/users/jacqueswww/repos",
    "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/769/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/769/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/379911887",
    "html_url": "https://github.com/vyperlang/vyper/issues/769#issuecomment-379911887",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/769",
    "id": 379911887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTkxMTg4Nw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-09T22:21:06Z",
    "updated_at": "2018-04-09T22:21:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "As we've discussed this across many meetings, I have marked this as approved ;)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/379911887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/380466366",
    "html_url": "https://github.com/vyperlang/vyper/issues/769#issuecomment-380466366",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/769",
    "id": 380466366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDQ2NjM2Ng==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-11T14:11:36Z",
    "updated_at": "2018-04-11T14:12:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@daejunpark I started working on the above, can we just update the spec, the resulting lll comes out as follows (just order of concat is different):\r\n```\r\nself.a[1][3] = 131313\r\n```\r\n```\r\n [sstore, [sha3_64, [sha3_64, 0 <self.a>, 1], 3], 131313],\r\n```\r\nAlso please mention that list and structs also need to use the new method ;)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/380466366/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/380614904",
    "html_url": "https://github.com/vyperlang/vyper/issues/769#issuecomment-380614904",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/769",
    "id": 380614904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDYxNDkwNA==",
    "user": {
      "login": "daejunpark",
      "id": 5491770,
      "node_id": "MDQ6VXNlcjU0OTE3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5491770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daejunpark",
      "html_url": "https://github.com/daejunpark",
      "followers_url": "https://api.github.com/users/daejunpark/followers",
      "following_url": "https://api.github.com/users/daejunpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/daejunpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daejunpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daejunpark/subscriptions",
      "organizations_url": "https://api.github.com/users/daejunpark/orgs",
      "repos_url": "https://api.github.com/users/daejunpark/repos",
      "events_url": "https://api.github.com/users/daejunpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daejunpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-11T22:23:53Z",
    "updated_at": "2018-04-11T22:25:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jacqueswww that seems more natural to me. Indeed, I have no good idea why Solidity uses the swapped order. It would be great if you know Solidity developers and can ask them to confirm that there is no critical reason for choosing the swapped order.\r\n\r\nI'll update the spec as you suggested. Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/380614904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/380957681",
    "html_url": "https://github.com/vyperlang/vyper/issues/769#issuecomment-380957681",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/769",
    "id": 380957681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDk1NzY4MQ==",
    "user": {
      "login": "daejunpark",
      "id": 5491770,
      "node_id": "MDQ6VXNlcjU0OTE3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5491770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daejunpark",
      "html_url": "https://github.com/daejunpark",
      "followers_url": "https://api.github.com/users/daejunpark/followers",
      "following_url": "https://api.github.com/users/daejunpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/daejunpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daejunpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daejunpark/subscriptions",
      "organizations_url": "https://api.github.com/users/daejunpark/orgs",
      "repos_url": "https://api.github.com/users/daejunpark/repos",
      "events_url": "https://api.github.com/users/daejunpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daejunpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T22:01:28Z",
    "updated_at": "2018-04-12T22:01:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jacqueswww I think you can keep the current layout scheme for lists and structs.\r\n\r\nBelow is a quick reference of `loc` that computes the storage location.\r\n\r\nLists:\r\n```\r\nloc(a[i])    =   #(a) + i\r\nloc(a[i][j]) = #(#(a) + i) + j\r\n```\r\n\r\nStructs:\r\n```\r\nloc(s.x)   =   #(s) + x\r\nloc(s.x.y) = #(#(s) + x) + y\r\n```\r\n\r\nMaps:\r\n```\r\nloc(m[k])    =   #(m . k)\r\nloc(m[k][l]) = #(#(m . k) . l)\r\n```\r\n\r\nIn general: (`E` is an arbitrary nested data structure, e.g., a list of structs of maps ...):\r\n```\r\nloc(E[i]) = #(loc(E)) + i    // list of ...\r\nloc(E.x)  = #(loc(E)) + x    // struct of ...\r\nloc(E[k]) = #(loc(E) . k)    // map of ...\r\n\r\nloc(a) = a                   // list name\r\nloc(s) = s                   // struct name\r\nloc(m) = m                   // map name\r\n```\r\n\r\nNOTE:\r\n * `#` denotes the `keccak256` hash.\r\n * Assume there is the implicit `index` conversion for the list name `a`, the struct name `s`, the struct field names `x` and `y`, and the map name `m`.\r\n\r\n----\r\n\r\nRationale:\r\n\r\nThe number of elements (or fields) of a list (or a struct) is expected to be much smaller than the size of the storage address space. Thus, even if the elements (or the fields) are stored in a consecutive region of the storage, it is very unlikely the region is overlapped with the other regions, since the starting locations of the regions will be well distributed (well spread across the entire storage) by `keccak256`.\r\n\r\n----\r\n\r\nQuestion.\r\n\r\nCould you confirm that the above scheme for lists and structs is the same with the current implementation?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/380957681/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/381141177",
    "html_url": "https://github.com/vyperlang/vyper/issues/769#issuecomment-381141177",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/769",
    "id": 381141177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTE0MTE3Nw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-13T13:49:11Z",
    "updated_at": "2018-04-13T13:51:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@daejunpark I actually went and did the work on all structures yesterday. The other one to consider is a ByteArray, which uses the same scheme. Are we 100% it's safe to have those structures not to use the \r\n`#(#(m).k)` approach. What happens when we store a list, bytearray or struct within a map? Feels like in that scenario the risk is the same as using map of #(m) + k ?\r\nIf we are 100% abouth using it for maps only; I'll adapt it ;) as there is obviously a higher gas cost.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/381141177/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/381205485",
    "html_url": "https://github.com/vyperlang/vyper/issues/769#issuecomment-381205485",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/769",
    "id": 381205485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTIwNTQ4NQ==",
    "user": {
      "login": "daejunpark",
      "id": 5491770,
      "node_id": "MDQ6VXNlcjU0OTE3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5491770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daejunpark",
      "html_url": "https://github.com/daejunpark",
      "followers_url": "https://api.github.com/users/daejunpark/followers",
      "following_url": "https://api.github.com/users/daejunpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/daejunpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daejunpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daejunpark/subscriptions",
      "organizations_url": "https://api.github.com/users/daejunpark/orgs",
      "repos_url": "https://api.github.com/users/daejunpark/repos",
      "events_url": "https://api.github.com/users/daejunpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daejunpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-13T17:25:39Z",
    "updated_at": "2018-04-13T17:28:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jacqueswww I discussed with @yzhang90, we think that it seems to be safe, but not 100% sure to be honest (because I'm not an expert for the kaccak256 hash). Indeed, the above scheme is similar to that of Solidity.\r\n\r\nI think we need to have an extra discussion and confirmation of its safety with other experts (e.g., Solidity developers). Do you think the Solidity gitter channel is a good place for it? If so, I can initiate the discussion there.\r\n\r\n(BTW, you're so quick to develop. Sorry for making you go back and forth. I think you can leave what you already implemented for now, just in case you change the scheme again.)",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/381205485/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/381210023",
    "html_url": "https://github.com/vyperlang/vyper/issues/769#issuecomment-381210023",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/769",
    "id": 381210023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTIxMDAyMw==",
    "user": {
      "login": "jacqueswww",
      "id": 6917456,
      "node_id": "MDQ6VXNlcjY5MTc0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6917456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacqueswww",
      "html_url": "https://github.com/jacqueswww",
      "followers_url": "https://api.github.com/users/jacqueswww/followers",
      "following_url": "https://api.github.com/users/jacqueswww/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacqueswww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacqueswww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacqueswww/subscriptions",
      "organizations_url": "https://api.github.com/users/jacqueswww/orgs",
      "repos_url": "https://api.github.com/users/jacqueswww/repos",
      "events_url": "https://api.github.com/users/jacqueswww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacqueswww/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-13T17:40:54Z",
    "updated_at": "2018-04-13T17:40:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree, let's get this sorted before I develop it further ;) gitter channel should help yes. Also look for @chriseth in our channel directly I know he works on solidity as well.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/381210023/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/382558519",
    "html_url": "https://github.com/vyperlang/vyper/issues/769#issuecomment-382558519",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/769",
    "id": 382558519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjU1ODUxOQ==",
    "user": {
      "login": "daejunpark",
      "id": 5491770,
      "node_id": "MDQ6VXNlcjU0OTE3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5491770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daejunpark",
      "html_url": "https://github.com/daejunpark",
      "followers_url": "https://api.github.com/users/daejunpark/followers",
      "following_url": "https://api.github.com/users/daejunpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/daejunpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daejunpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daejunpark/subscriptions",
      "organizations_url": "https://api.github.com/users/daejunpark/orgs",
      "repos_url": "https://api.github.com/users/daejunpark/repos",
      "events_url": "https://api.github.com/users/daejunpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daejunpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-18T23:16:11Z",
    "updated_at": "2018-04-18T23:16:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just for a record, copy the gitter communication here:\r\n\r\n----\r\n\r\nDaejun Park @daejunpark 12:16\r\nHi @chriseth \r\nI have a question regarding the layout of state variables in storage:\r\nhttp://solidity.readthedocs.io/en/v0.4.21/miscellaneous.html#layout-of-state-variables-in-storage\r\n\r\n(It seems weird to ask about Solidity in Vyper channel, but this will help to improve the Vyper's layout scheme.)\r\n\r\nThe current scheme, for example, works as follows:\r\n\r\n* A dynamically-sized array element, `a[i]`, is stored at `keccak256(slot(a)) + i`.\r\n* A mapping entry, `m[k]` is stored at `keccak256(k . slot(m))`, where `.` is concatenation.\r\n\r\n\r\nNow, I have two questions:\r\n\r\nQ1. Is there a critical reason that the location scheme of dynamic arrays is different from that of mappings? In other word, what will happen if `a[i]` is stored at `keccak256(i . slot(a))`? I know it will consume more gas, but will it affect any security (or hash collision probability)?\r\n\r\n\r\nQ2. For a map entry location, is there any critical difference (in terms of security or hash distribution) between the following two?\r\n    `keccak256(k . slot(m))`\r\nvs\r\n    `keccak256(slot(m) . k)`\r\n\r\n----\r\n\r\nchriseth @chriseth 13:21\r\n@daejunpark dynamic arrays use a different scheme than mappings for efficiency. Using the same scheme as mappings reduces collision probability. We have to disallow large arrays because you can easily find collisions in storage otherwise. Another reason is also that if you use the same scheme, there is not a big reason to have arrays in general.\r\n\r\nfor the collisions see https://chriseth.github.io/notes/talks/safe_solidity/#/8\r\n\r\nFor Q2, I hope that keccak256 ensures that the order does not matter.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/382558519/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/382561812",
    "html_url": "https://github.com/vyperlang/vyper/issues/769#issuecomment-382561812",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/769",
    "id": 382561812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjU2MTgxMg==",
    "user": {
      "login": "daejunpark",
      "id": 5491770,
      "node_id": "MDQ6VXNlcjU0OTE3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5491770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daejunpark",
      "html_url": "https://github.com/daejunpark",
      "followers_url": "https://api.github.com/users/daejunpark/followers",
      "following_url": "https://api.github.com/users/daejunpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/daejunpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daejunpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daejunpark/subscriptions",
      "organizations_url": "https://api.github.com/users/daejunpark/orgs",
      "repos_url": "https://api.github.com/users/daejunpark/repos",
      "events_url": "https://api.github.com/users/daejunpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daejunpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-18T23:34:29Z",
    "updated_at": "2018-04-18T23:34:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jacqueswww It turns out (thanks to @chriseth ) that the current scheme for lists is somewhat necessary, otherwise there is no reason to have lists in addition to maps.\r\n\r\nBut we need to have a compile-time check to reject a very large list, which can be problematic for the same reason we discussed before.\r\n\r\nIt would be good to check the size of structs as well (although it is very unlikely to declare such a large struct).\r\n\r\nSo, are lists, structs, and maps all we have?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/382561812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/382634828",
    "html_url": "https://github.com/vyperlang/vyper/issues/769#issuecomment-382634828",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/769",
    "id": 382634828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjYzNDgyOA==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-19T07:14:31Z",
    "updated_at": "2018-04-19T07:14:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "In Solidity we issue warnings for large statically-sized arrays and we plan to remove the ability to arbitrarily increase the size of dynamically-sized arrays. If you have structures whose size in storage scales linearly with the amount of symbols required in source code, you should be fine, since there is still a lot of space in 2**256.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/382634828/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/382638316",
    "html_url": "https://github.com/vyperlang/vyper/issues/769#issuecomment-382638316",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/769",
    "id": 382638316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjYzODMxNg==",
    "user": {
      "login": "chriseth",
      "id": 9073706,
      "node_id": "MDQ6VXNlcjkwNzM3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriseth",
      "html_url": "https://github.com/chriseth",
      "followers_url": "https://api.github.com/users/chriseth/followers",
      "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
      "organizations_url": "https://api.github.com/users/chriseth/orgs",
      "repos_url": "https://api.github.com/users/chriseth/repos",
      "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriseth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-19T07:29:13Z",
    "updated_at": "2018-04-19T07:29:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Perhaps to clarify a little more: If you can only increase the length of a dynamically-sized structure by a single element, then the gas costs for that operation keep the structure small enough until the end of the universe.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/382638316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/383615479",
    "html_url": "https://github.com/vyperlang/vyper/issues/769#issuecomment-383615479",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/769",
    "id": 383615479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzYxNTQ3OQ==",
    "user": {
      "login": "daejunpark",
      "id": 5491770,
      "node_id": "MDQ6VXNlcjU0OTE3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5491770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daejunpark",
      "html_url": "https://github.com/daejunpark",
      "followers_url": "https://api.github.com/users/daejunpark/followers",
      "following_url": "https://api.github.com/users/daejunpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/daejunpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daejunpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daejunpark/subscriptions",
      "organizations_url": "https://api.github.com/users/daejunpark/orgs",
      "repos_url": "https://api.github.com/users/daejunpark/repos",
      "events_url": "https://api.github.com/users/daejunpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daejunpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-23T15:25:09Z",
    "updated_at": "2018-04-23T15:25:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @chriseth for your help! Now, we're clear what to do.",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/383615479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
