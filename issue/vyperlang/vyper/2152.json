{
  "url": "https://api.github.com/repos/vyperlang/vyper/issues/2152",
  "repository_url": "https://api.github.com/repos/vyperlang/vyper",
  "labels_url": "https://api.github.com/repos/vyperlang/vyper/issues/2152/labels{/name}",
  "comments_url": "https://api.github.com/repos/vyperlang/vyper/issues/2152/comments",
  "events_url": "https://api.github.com/repos/vyperlang/vyper/issues/2152/events",
  "html_url": "https://github.com/vyperlang/vyper/issues/2152",
  "id": 700616165,
  "node_id": "MDU6SXNzdWU3MDA2MTYxNjU=",
  "number": 2152,
  "title": "VIP: Configurations",
  "user": {
    "login": "fubuloubu",
    "id": 3859395,
    "node_id": "MDQ6VXNlcjM4NTkzOTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fubuloubu",
    "html_url": "https://github.com/fubuloubu",
    "followers_url": "https://api.github.com/users/fubuloubu/followers",
    "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
    "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
    "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
    "repos_url": "https://api.github.com/users/fubuloubu/repos",
    "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 751622094,
      "node_id": "MDU6TGFiZWw3NTE2MjIwOTQ=",
      "url": "https://api.github.com/repos/vyperlang/vyper/labels/VIP:%20Discussion",
      "name": "VIP: Discussion",
      "color": "000000",
      "default": false,
      "description": "Used to denote VIPs and more complex issues that are waiting discussion in a meeting"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-09-13T17:54:29Z",
  "updated_at": "2020-09-28T18:47:50Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\nBeing able to use one Vyper contract to create several different \"Configurations\", where only a few changes are made, helps reduce code duplication without the need for Inheritance or Composable Types\r\n\r\n## Motivation\r\nWhile working on [yEarn Vaults](https://github.com/iearn-finance/yearn-protocol/tree/master/contracts/vaults), I realized that there are often scenarios you want two contracts where there are only _slight_ differences between them.\r\n\r\nThe yWETH Vault is a great example of this, because it really only needs a few more functions to handle ETH as collateral (which is not an ERC20 token):\r\n```diff\r\n$ diff contracts/vaults/yVault.sol contracts/vaults/yWETH.sol\r\n10a11\r\n> import \"../../interfaces/weth/WETH.sol\";\r\n13c14,15\r\n< contract yVault is ERC20, ERC20Detailed {\r\n---\r\n> contract yWETH is ERC20, ERC20Detailed {\r\n86a89,104\r\n>     function depositETH() public payable {\r\n>        ....\r\n>     }\r\n> \r\n90a109,112\r\n>     function withdrawAllETH() external {\r\n>         withdrawETH(balanceOf(msg.sender));\r\n>     }\r\n> \r\n118a141,161\r\n>     // No rebalance implementation for lower fees and faster swaps \r\n>     function withdrawETH(uint _shares) public {\r\n>         ....\r\n>         }\r\n> \r\n>         WETH(address(token)).withdraw(r);\r\n>         address(msg.sender).transfer(r);\r\n>     }\r\n> \r\n120a164,169\r\n>     }\r\n> \r\n>     function () external payable {\r\n>         if (msg.sender != address(token)) {\r\n>             depositETH();\r\n>         }\r\n```\r\n\r\nFor Vyper, this could really reduce code reuse and also increase usability of Vyper with a really simple change (inspired by Rust's [Features](https://doc.rust-lang.org/cargo/reference/features.html)).\r\n\r\n## Specification\r\nThe specification would be a special comment type (trickier to support) or decorator (would require custom parser) that would essentially add (or remove) a function, state variable, struct, etc. from a \"default\" configuration. To the compiler, this would look like iterating compilation N times over each configuration in the set, and producing \"Contract Types\" for each configuration (similar to how Solidity allows multiple contracts per file) that the user could deploy depending on their needs.\r\n\r\nAs an example, think of the [OpenZeppelin ERC20 Token](https://github.com/OpenZeppelin/openzeppelin-contracts/tree/master/contracts/token/ERC20) set, basically you would be able to write this as one Vyper contract with several different configurations depending on whether you wanted Detailed, Mintable, Burnable, etc. (this would probably require a more complex \"matrix\"-style support over all possible configurations e.g. `--features Detailed,Mintable,Burnable`). A snippet of such a contract might look like (using decorator syntax):\r\n\r\n```python\r\n# Specify all valid configurations (for type safety)\r\nConfiguration config:  # name of configuration manager\r\n    # Assumes default exists (absence of name modifier)\r\n    Mintable\r\n    Burnable\r\n    Detailed\r\n\r\n# Appears in all configurations\r\ntotalSupply: public(uint256)\r\nbalanceOf: public(HashMap[address, uint256])\r\n\r\n# Only appears in the \"Mintable\" configuration\r\nwith config.Mintable:\r\n    minter: public(address)\r\n\r\n# Only appears in the \"Detailed\" configuration\r\nwith config.Detailed:\r\n    description: public(String[20])\r\n    symbol: public(String[5])\r\n    decimals: public(uint8)\r\n\r\n# Constructor args with the config marker do not appear in configurations that don't match\r\ndef __init__(\r\n     initial_supply: uint256,\r\n     description: String[20],\r\n     symbol: String[5],\r\n     decimals: uint8,\r\n):\r\n    # Only appears in the \"Detailed\" configuration\r\n    with config.Detailed:\r\n       self.description = description\r\n       self.symbol = symbol\r\n       self.decimals = decimals\r\n\r\n    # Only appears in the \"Mintable\" configuration\r\n    with config.Mintable:\r\n         self.minter = msg.sender\r\n\r\n    self.totalSupply = initial_supply\r\n    self.balanceOf[msg.sender] = initial_supply\r\n```\r\n\r\n## Backwards Compatibility\r\nFully backwards compatible, the absence of this feature should mean only 1 Configuration (the basic file)\r\n\r\n## Dependencies\r\nNo dependencies\r\n\r\n## References\r\n[Rust Feature Flags](https://www.worthe-it.co.za/blog/2018-11-18-compile-time-feature-flags-in-rust.html)\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/2152/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/vyperlang/vyper/issues/2152/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/692189101",
    "html_url": "https://github.com/vyperlang/vyper/issues/2152#issuecomment-692189101",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2152",
    "id": 692189101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjE4OTEwMQ==",
    "user": {
      "login": "charles-cooper",
      "id": 3867501,
      "node_id": "MDQ6VXNlcjM4Njc1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3867501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charles-cooper",
      "html_url": "https://github.com/charles-cooper",
      "followers_url": "https://api.github.com/users/charles-cooper/followers",
      "following_url": "https://api.github.com/users/charles-cooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/charles-cooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charles-cooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charles-cooper/subscriptions",
      "organizations_url": "https://api.github.com/users/charles-cooper/orgs",
      "repos_url": "https://api.github.com/users/charles-cooper/repos",
      "events_url": "https://api.github.com/users/charles-cooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charles-cooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-14T17:05:22Z",
    "updated_at": "2020-09-14T17:05:22Z",
    "author_association": "COLLABORATOR",
    "body": "so these are like cpp ifdef blocks?",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/692189101/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/692202406",
    "html_url": "https://github.com/vyperlang/vyper/issues/2152#issuecomment-692202406",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2152",
    "id": 692202406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjIwMjQwNg==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-14T17:30:36Z",
    "updated_at": "2020-09-14T17:30:36Z",
    "author_association": "MEMBER",
    "body": "Yeah kinda, a little more ergonomic as I based it off of what Rust does, which leverages scoping rules w/ decorators",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/692202406/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/700213417",
    "html_url": "https://github.com/vyperlang/vyper/issues/2152#issuecomment-700213417",
    "issue_url": "https://api.github.com/repos/vyperlang/vyper/issues/2152",
    "id": 700213417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDIxMzQxNw==",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-28T18:43:44Z",
    "updated_at": "2020-09-28T18:43:55Z",
    "author_association": "MEMBER",
    "body": "Meeting:\r\n- [ ] Figure out how to make this work for function arguments",
    "reactions": {
      "url": "https://api.github.com/repos/vyperlang/vyper/issues/comments/700213417/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
