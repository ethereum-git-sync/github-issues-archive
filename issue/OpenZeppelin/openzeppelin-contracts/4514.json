{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4514",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4514/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4514/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4514/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4514",
  "id": 1838224291,
  "node_id": "I_kwDOA9tCBs5tkROj",
  "number": 4514,
  "title": "Cryptographic contract provenance verification",
  "user": {
    "login": "ssadler",
    "id": 125019,
    "node_id": "MDQ6VXNlcjEyNTAxOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/125019?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssadler",
    "html_url": "https://github.com/ssadler",
    "followers_url": "https://api.github.com/users/ssadler/followers",
    "following_url": "https://api.github.com/users/ssadler/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssadler/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssadler/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssadler/subscriptions",
    "organizations_url": "https://api.github.com/users/ssadler/orgs",
    "repos_url": "https://api.github.com/users/ssadler/repos",
    "events_url": "https://api.github.com/users/ssadler/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssadler/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-08-06T14:11:36Z",
  "updated_at": "2023-08-06T14:13:05Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n\r\nI found a neat way to do contract provenance verification, ie, check that contract A was created by contract B using only cryptography.\r\n\r\nThe check works out to about 450 gas, is not revocable, and uses no additional storage. It also has a compact base class that can be easily included as part of any contract definition.\r\n\r\nThis is useful for \"multi stakeholder\" applications with centrally provisioned contracts, to verify that calling contracts are authentic, i.e., created by $yourContractAuthority.\r\n\r\n**üìù Details**\r\n\r\nThe implementation can be seen here: https://gist.github.com/ssadler/ff3b3456b8d55e1a2ae1497143f990df\r\n\r\nIs this something that OpenZeppelin would be interested in including? If so, could you outline what steps I should take to prepare it?\r\n\r\nAlso, is it a good candidate for submission as an ERC, or any other kind of interface standardization?\r\n\r\nMany thanks",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4514/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4514/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
