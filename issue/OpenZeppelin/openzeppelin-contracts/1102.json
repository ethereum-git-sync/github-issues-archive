{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102",
  "id": 343375024,
  "node_id": "MDU6SXNzdWUzNDMzNzUwMjQ=",
  "number": 1102,
  "title": "Obtaining the list of ERC721 tokenIds owned by an account",
  "user": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1000190804,
      "node_id": "MDU6TGFiZWwxMDAwMTkwODA0",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/documentation",
      "name": "documentation",
      "color": "1d76db",
      "default": true,
      "description": "Inline comments, guides, and examples."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 18,
  "created_at": "2018-07-22T04:06:16Z",
  "updated_at": "2022-12-05T17:17:30Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "ERC721 has no way to retrieve _all_ tokenIds owned by an account, such as the `tokensOf` function that was at some point part of the draft but removed before becoming final. We discussed bringing that function back in https://github.com/OpenZeppelin/openzeppelin-solidity/pull/856 but decided against it.\r\n\r\nThere is a function `tokenOfOwnerByIndex` that allows iterating the owned tokens one by one, but this will probably result in terrible performance and also suffers race conditions.\r\n\r\nIt's not clear what is the correct way for programs, including dapps, to retrieve all of the tokens owned by an account. It would be very useful if OpenZeppelin included documentation or helpers related to this task.\r\n\r\nThere was already a few proposals in the comments of https://github.com/OpenZeppelin/openzeppelin-solidity/pull/856, which I encourage those interested to read. There was mention of events, off-chain indexing (e.g. gnarly), JSON-RPC batching (apparently a non-solution), an auxiliary querier contract (https://github.com/OpenZeppelin/openzeppelin-solidity/pull/856#issuecomment-406768864), and even using said contract via `eth_call`.\r\n\r\nWe need some research done on the feasiblity of those approaches, their performance, as well as other alternatives, with the objective of making a recommendation to OpenZeppelin users and the ERC721 ecosystem in general. There may already be a solution out there that we haven't heard about!",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/777524044",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-777524044",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 777524044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzUyNDA0NA==",
    "user": {
      "login": "arpu",
      "id": 14173,
      "node_id": "MDQ6VXNlcjE0MTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arpu",
      "html_url": "https://github.com/arpu",
      "followers_url": "https://api.github.com/users/arpu/followers",
      "following_url": "https://api.github.com/users/arpu/following{/other_user}",
      "gists_url": "https://api.github.com/users/arpu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arpu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arpu/subscriptions",
      "organizations_url": "https://api.github.com/users/arpu/orgs",
      "repos_url": "https://api.github.com/users/arpu/repos",
      "events_url": "https://api.github.com/users/arpu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arpu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-11T14:52:47Z",
    "updated_at": "2021-02-11T14:52:47Z",
    "author_association": "NONE",
    "body": "Hey is there any recommendation now for this problem? ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/777524044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/777947923",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-777947923",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 777947923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3Nzk0NzkyMw==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-12T03:37:21Z",
    "updated_at": "2021-02-12T03:37:21Z",
    "author_association": "MEMBER",
    "body": "@arpu I'd suggest looking into [The Graph](https://thegraph.com/).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/777947923/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/779951805",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-779951805",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 779951805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTk1MTgwNQ==",
    "user": {
      "login": "arpu",
      "id": 14173,
      "node_id": "MDQ6VXNlcjE0MTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arpu",
      "html_url": "https://github.com/arpu",
      "followers_url": "https://api.github.com/users/arpu/followers",
      "following_url": "https://api.github.com/users/arpu/following{/other_user}",
      "gists_url": "https://api.github.com/users/arpu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arpu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arpu/subscriptions",
      "organizations_url": "https://api.github.com/users/arpu/orgs",
      "repos_url": "https://api.github.com/users/arpu/repos",
      "events_url": "https://api.github.com/users/arpu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arpu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-16T16:27:28Z",
    "updated_at": "2021-02-16T16:27:28Z",
    "author_association": "NONE",
    "body": "> @arpu I'd suggest looking into [The Graph](https://thegraph.com/).\r\n\r\nbut this is not client side and dezentral ? ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/779951805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/780628928",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-780628928",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 780628928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDYyODkyOA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-17T15:20:48Z",
    "updated_at": "2021-02-17T15:20:48Z",
    "author_association": "MEMBER",
    "body": "@arpu No, it isn't decentralized, at least not yet.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/780628928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/799623364",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-799623364",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 799623364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5OTYyMzM2NA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-15T17:54:52Z",
    "updated_at": "2021-03-15T17:55:12Z",
    "author_association": "MEMBER",
    "body": "I recently put together a script to show how this can be done by inspecting the events of the ERC721 contract, originally posted in https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2563#issuecomment-791979493. The code is for Ethers but can be easily ported to Web3.js.\r\n\r\n```javascript\r\nasync function listTokensOfOwner({ token: tokenAddress, account }) {\r\n  const token = await ethers.getContractAt(ERC721.abi, tokenAddress, ethers.provider);\r\n\r\n  console.error(await token.name(), 'tokens owned by', account);\r\n\r\n  const sentLogs = await token.queryFilter(\r\n    token.filters.Transfer(account, null),\r\n  );\r\n  const receivedLogs = await token.queryFilter(\r\n    token.filters.Transfer(null, account),\r\n  );\r\n\r\n  const logs = sentLogs.concat(receivedLogs)\r\n    .sort(\r\n      (a, b) =>\r\n        a.blockNumber - b.blockNumber ||\r\n        a.transactionIndex - b.TransactionIndex,\r\n    );\r\n\r\n  const owned = new Set();\r\n\r\n  for (const log of logs) {\r\n    const { from, to, tokenId } = log.args;\r\n    \r\n    if (addressEqual(to, account)) {\r\n      owned.add(tokenId.toString());\r\n    } else if (addressEqual(from, account)) {\r\n      owned.delete(tokenId.toString());\r\n    }\r\n  }\r\n\r\n  console.log([...owned].join('\\n'));\r\n};\r\n```\r\n\r\n![console output](https://user-images.githubusercontent.com/481465/110213055-29122980-7e7d-11eb-87b2-87e4338ea206.png)\r\n\r\nThe code is in [frangio/erc721-list](https://github.com/frangio/erc721-list).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/799623364/reactions",
      "total_count": 23,
      "+1": 17,
      "-1": 0,
      "laugh": 0,
      "hooray": 6,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/819051556",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-819051556",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 819051556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTA1MTU1Ng==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-13T20:59:57Z",
    "updated_at": "2021-04-13T20:59:57Z",
    "author_association": "MEMBER",
    "body": "@Amxx Is there a subgraph already made for this purpose?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/819051556/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/819055217",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-819055217",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 819055217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTA1NTIxNw==",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-13T21:06:33Z",
    "updated_at": "2021-04-13T21:09:40Z",
    "author_association": "COLLABORATOR",
    "body": "> @Amxx Is there a subgraph already made for this purpose?\r\n\r\nFor sure! https://thegraph.com/explorer/subgraph/amxx/eip721-subgraph\r\n\r\nAll token in a registry:\r\n```\r\n{\r\n  tokenRegistry(id: \"0x22c1f6050e56d2876009903609a2cc3fef83b415\") {\r\n    tokens {\r\n      identifier\r\n      owner {\r\n        id\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAll tokens held by a user (across all registries) :\r\n```\r\n{\r\n  account(id: \"0x7859821024e633c5dc8a4fcf86fc52e7720ce525\") {\r\n    tokens {\r\n      identifier\r\n      registry {\r\n        id\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nand many more ...",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/819055217/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/852243047",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-852243047",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 852243047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MjI0MzA0Nw==",
    "user": {
      "login": "gsyndromes",
      "id": 44989392,
      "node_id": "MDQ6VXNlcjQ0OTg5Mzky",
      "avatar_url": "https://avatars.githubusercontent.com/u/44989392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsyndromes",
      "html_url": "https://github.com/gsyndromes",
      "followers_url": "https://api.github.com/users/gsyndromes/followers",
      "following_url": "https://api.github.com/users/gsyndromes/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsyndromes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsyndromes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsyndromes/subscriptions",
      "organizations_url": "https://api.github.com/users/gsyndromes/orgs",
      "repos_url": "https://api.github.com/users/gsyndromes/repos",
      "events_url": "https://api.github.com/users/gsyndromes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsyndromes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-01T16:00:25Z",
    "updated_at": "2021-06-01T16:00:25Z",
    "author_association": "NONE",
    "body": "thanks for the code! i'm new around this ecosystem and I was wondering if you could give a quick rundown on how do I use the script? ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/852243047/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/852532573",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-852532573",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 852532573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MjUzMjU3Mw==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-01T22:41:11Z",
    "updated_at": "2021-06-01T22:41:11Z",
    "author_association": "MEMBER",
    "body": "@garysyndromes You can run it in a [Hardhat script](https://hardhat.org/guides/scripts.html). Take a look at the guides in the Hardhat documentation if you need to learn more about it. If you need more help please ask in the [OpenZeppelin forum](https://forum.openzeppelin.com).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/852532573/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1071006360",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-1071006360",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 1071006360,
    "node_id": "IC_kwDOA9tCBs4_1kKY",
    "user": {
      "login": "ricardoveritas",
      "id": 101817888,
      "node_id": "U_kgDOBhGeIA",
      "avatar_url": "https://avatars.githubusercontent.com/u/101817888?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ricardoveritas",
      "html_url": "https://github.com/ricardoveritas",
      "followers_url": "https://api.github.com/users/ricardoveritas/followers",
      "following_url": "https://api.github.com/users/ricardoveritas/following{/other_user}",
      "gists_url": "https://api.github.com/users/ricardoveritas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ricardoveritas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ricardoveritas/subscriptions",
      "organizations_url": "https://api.github.com/users/ricardoveritas/orgs",
      "repos_url": "https://api.github.com/users/ricardoveritas/repos",
      "events_url": "https://api.github.com/users/ricardoveritas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ricardoveritas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-17T15:52:44Z",
    "updated_at": "2022-03-17T15:52:44Z",
    "author_association": "NONE",
    "body": "Hello. I want to give some awards to specific token holders. For example 10k nfts on collection. But i want to give passcodes to 10 of these nft holders. I want this function on my contract. Token holders can put their tokenids to learn that they have passcodes or not. But i want this function only can run by 10 specific token owners. You can think that same as opensea unlockable content. Can you help me about this?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1071006360/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1089482107",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-1089482107",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 1089482107,
    "node_id": "IC_kwDOA9tCBs5A8C17",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-05T22:54:49Z",
    "updated_at": "2022-04-05T22:54:49Z",
    "author_association": "MEMBER",
    "body": "@ricardoveritas This is not the place for this question. Ask in the [OpenZeppelin Forum](https://forum.openzeppelin.com).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1089482107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1177324165",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-1177324165",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 1177324165,
    "node_id": "IC_kwDOA9tCBs5GLIqF",
    "user": {
      "login": "cheuaheichan",
      "id": 98401121,
      "node_id": "U_kgDOBd17YQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/98401121?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cheuaheichan",
      "html_url": "https://github.com/cheuaheichan",
      "followers_url": "https://api.github.com/users/cheuaheichan/followers",
      "following_url": "https://api.github.com/users/cheuaheichan/following{/other_user}",
      "gists_url": "https://api.github.com/users/cheuaheichan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cheuaheichan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cheuaheichan/subscriptions",
      "organizations_url": "https://api.github.com/users/cheuaheichan/orgs",
      "repos_url": "https://api.github.com/users/cheuaheichan/repos",
      "events_url": "https://api.github.com/users/cheuaheichan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cheuaheichan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-07T09:43:05Z",
    "updated_at": "2022-07-21T15:53:53Z",
    "author_association": "NONE",
    "body": "> https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-799623364\r\n\r\nHey, does this code also work on another network like for example Arbitrum? If so, how do I convert it?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1177324165/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1178079063",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-1178079063",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 1178079063,
    "node_id": "IC_kwDOA9tCBs5GOA9X",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-07T18:54:59Z",
    "updated_at": "2022-07-07T18:54:59Z",
    "author_association": "MEMBER",
    "body": "It works on any network with compatible JSON RPC, but you probably need an archive node. I don't know if this is available for Arbitrum. You should just try to run it and see what happens. There are no changes necessary, just [network configuration](https://hardhat.org/hardhat-runner/docs/config#networks-configuration).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1178079063/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1191117663",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-1191117663",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 1191117663,
    "node_id": "IC_kwDOA9tCBs5G_wNf",
    "user": {
      "login": "khank8476",
      "id": 43128049,
      "node_id": "MDQ6VXNlcjQzMTI4MDQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/43128049?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khank8476",
      "html_url": "https://github.com/khank8476",
      "followers_url": "https://api.github.com/users/khank8476/followers",
      "following_url": "https://api.github.com/users/khank8476/following{/other_user}",
      "gists_url": "https://api.github.com/users/khank8476/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khank8476/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khank8476/subscriptions",
      "organizations_url": "https://api.github.com/users/khank8476/orgs",
      "repos_url": "https://api.github.com/users/khank8476/repos",
      "events_url": "https://api.github.com/users/khank8476/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khank8476/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T07:01:12Z",
    "updated_at": "2022-07-21T15:54:09Z",
    "author_association": "NONE",
    "body": "> https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-799623364\r\n\r\nHello @frangio this is a lovely script, can this be done with erc1155, please can you share logic/code to do it with erc1155 TransferSingle and TransferBatch?\r\n\r\nThis will help me and many others with this problem.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1191117663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1191659799",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-1191659799",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 1191659799,
    "node_id": "IC_kwDOA9tCBs5HB0kX",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T15:54:26Z",
    "updated_at": "2022-07-21T15:54:37Z",
    "author_association": "MEMBER",
    "body": "Sorry I don't have the time to update it for ERC1155, I encourage others to adapt it and share it here. It shouldn't be too different.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1191659799/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1193084547",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-1193084547",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 1193084547,
    "node_id": "IC_kwDOA9tCBs5HHQaD",
    "user": {
      "login": "khank8476",
      "id": 43128049,
      "node_id": "MDQ6VXNlcjQzMTI4MDQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/43128049?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khank8476",
      "html_url": "https://github.com/khank8476",
      "followers_url": "https://api.github.com/users/khank8476/followers",
      "following_url": "https://api.github.com/users/khank8476/following{/other_user}",
      "gists_url": "https://api.github.com/users/khank8476/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khank8476/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khank8476/subscriptions",
      "organizations_url": "https://api.github.com/users/khank8476/orgs",
      "repos_url": "https://api.github.com/users/khank8476/repos",
      "events_url": "https://api.github.com/users/khank8476/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khank8476/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-23T08:11:48Z",
    "updated_at": "2022-07-23T08:12:43Z",
    "author_association": "NONE",
    "body": "Ok @frangio I understand, by the way, I created this based on your code.\r\n\r\n```\r\nasync function tokensOfOwner() {\r\n    const { ethereum } = window;\r\n    const provider = new ethers.providers.Web3Provider(ethereum);\r\n    const signer = provider.getSigner();\r\n    const token = new ethers.Contract(contractAddress, abi, signer);\r\n\r\n    const sentLogsSingle = await token.queryFilter(\r\n      token.filters.TransferSingle(null, walletAddress, null, null, null)\r\n    );\r\n\r\n    const receivedLogsSingle = await token.queryFilter(\r\n      token.filters.TransferSingle(null, null, walletAddress, null, null)\r\n    );\r\n\r\n    const sentLogsBatch = await token.queryFilter(\r\n      token.filters.TransferBatch(null, walletAddress, null, null, null)\r\n    );\r\n\r\n    const receivedLogsBatch = await token.queryFilter(\r\n      token.filters.TransferBatch(null, null, walletAddress, null, null)\r\n    );\r\n\r\n    const logs = sentLogsSingle\r\n      .concat(receivedLogsSingle)\r\n      .concat(sentLogsBatch)\r\n      .concat(receivedLogsBatch)\r\n      .sort(\r\n        (a, b) =>\r\n          a.blockNumber - b.blockNumber || a.transactionIndex - b.transactionIndex\r\n      );\r\n\r\n    const owned = new Set();\r\n\r\n    for (const {\r\n      args: { from, to, id, ids },\r\n    } of logs) {\r\n      if (addressEqual(to, walletAddress)) {\r\n        if (id) {\r\n          owned.add(id.toString());\r\n        } else if (ids) {\r\n          (ids.forEach(key => owned.add(key.toString())));\r\n        }\r\n      } else if (addressEqual(from, walletAddress)) {\r\n        if (id) {\r\n          owned.delete(id.toString());\r\n        } else if (ids) {\r\n          (ids.forEach(key => owned.delete(key.toString())));\r\n        }\r\n      }\r\n    }\r\n    return owned;\r\n  }\r\n\r\n  async function showTokensOfOwner() {\r\n    try {\r\n      console.log(\"tokens owned by\", walletAddress);\r\n      const owned = await tokensOfOwner();\r\n      console.log(owned);\r\n      setShowTokens([...owned].join(\"\\n\"));\r\n    }\r\n    catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n```\r\n\r\nThis code works well for erc1155 If the use case is NFTs only and has not considered SFTs and FTs for this code, maybe someone gets to benefit from it.\r\n\r\nsomeone can improve and share better code.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1193084547/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1337171428",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-1337171428",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 1337171428,
    "node_id": "IC_kwDOA9tCBs5Ps53k",
    "user": {
      "login": "nidhhoggr",
      "id": 650443,
      "node_id": "MDQ6VXNlcjY1MDQ0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/650443?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nidhhoggr",
      "html_url": "https://github.com/nidhhoggr",
      "followers_url": "https://api.github.com/users/nidhhoggr/followers",
      "following_url": "https://api.github.com/users/nidhhoggr/following{/other_user}",
      "gists_url": "https://api.github.com/users/nidhhoggr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nidhhoggr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nidhhoggr/subscriptions",
      "organizations_url": "https://api.github.com/users/nidhhoggr/orgs",
      "repos_url": "https://api.github.com/users/nidhhoggr/repos",
      "events_url": "https://api.github.com/users/nidhhoggr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nidhhoggr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-05T11:23:48Z",
    "updated_at": "2022-12-05T11:23:48Z",
    "author_association": "NONE",
    "body": "I wondering, is doing all that transfer event querying really more efficient than simply iterating through tokenOfOwnerByIndex? I guess the issue is with @frangio approach there are only 2 network requests being made, but do event queries perform in O(1) time like tokenOfOwnerByIndex does? Obviously the larger the balance of tokens the more inefficient  tokenOfOwnerByIndex iteration becomes but is there a specific tipping point? e.g. 5 iterations? ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1337171428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1337769692",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-1337769692",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1102",
    "id": 1337769692,
    "node_id": "IC_kwDOA9tCBs5PvL7c",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-05T17:17:30Z",
    "updated_at": "2022-12-05T17:17:30Z",
    "author_association": "MEMBER",
    "body": "@nidhhoggr Those are good questions that I'd invite someone to experiment with and share their results.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1337769692/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
