{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4745",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4745/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4745/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4745/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4745",
  "id": 1997242565,
  "node_id": "I_kwDOA9tCBs53C4DF",
  "number": 4745,
  "title": "ECDSA.recover(hash, signature) throwing invalid signature 'v' value\", whereas ECDSA.recover(hash, v, r, s) working",
  "user": {
    "login": "alfheimrShiven",
    "id": 50408041,
    "node_id": "MDQ6VXNlcjUwNDA4MDQx",
    "avatar_url": "https://avatars.githubusercontent.com/u/50408041?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alfheimrShiven",
    "html_url": "https://github.com/alfheimrShiven",
    "followers_url": "https://api.github.com/users/alfheimrShiven/followers",
    "following_url": "https://api.github.com/users/alfheimrShiven/following{/other_user}",
    "gists_url": "https://api.github.com/users/alfheimrShiven/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alfheimrShiven/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alfheimrShiven/subscriptions",
    "organizations_url": "https://api.github.com/users/alfheimrShiven/orgs",
    "repos_url": "https://api.github.com/users/alfheimrShiven/repos",
    "events_url": "https://api.github.com/users/alfheimrShiven/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alfheimrShiven/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-11-16T16:22:59Z",
  "updated_at": "2023-11-16T16:37:16Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "<!-- Briefly describe the issue you're experiencing. Tell us what you were trying to do and what happened instead. -->\r\nI'm trying to recover the signature object properties (uint8 v, bytes32 r, bytes32 s) from a signature hash. I'm creating the signature in Foundry as follows.\r\n\r\n```solidity\r\n function testLockRequestSignatureRecovery() external {\r\n        (address guardian, bytes guardianPK) = vm.getAddrAndKey(\"guardian\");\r\n        // SETUP\r\n        vm.startPrank(guardian);\r\n        bytes32 lockRequest = accountLock.createLockRequest(account);\r\n\r\n        (uint8 v, bytes32 r, bytes32 s) = vm.sign(guardianPK, lockRequest);\r\n        bytes memory signature = abi.encodePacked(v, r, s);\r\n        address guardianRecovered = ECDSA.recover(lockRequest, signature); // throws error \"ECDSA: invalid signature 'v' value\"\r\n\r\n        address guardianRecovered = ECDSA.recover(lockRequest, v, r, s); // works!\r\n```\r\n\r\n**üíª Environment**\r\nFramework: Foundry\r\n\r\n**üìù Details**\r\nWhen calling `ECDSA.recover(lockRequest, signature)` the ECDSA contract tries to first retrieve the `v, r, s` values from the `signature` using the `function tryRecover(bytes32 hash, bytes memory signature)` which further calls `tryRecover(hash, v, r, s)` which throws the error indicating invalid value of `v`, whereas if I bypass the `function tryRecover(bytes32 hash, bytes memory signature)` and directly call the `ECDSA.tryRecover(hash, v, r, s)` function, it works. That concludes that the value of `v` retrieved by `vm.sign(guardianPK, lockRequest)` is correct. I can even see it in my logs that `v = 27` which is a valid value:\r\n\r\n```zsh\r\nVM::sign(<pk>, 0x46a4a6b86560880572154cc245188597806bacb2ed65aa43fdd0c670c5f762dc) [staticcall]\r\n    ‚îÇ   ‚îî‚îÄ ‚Üê 27, 0x1b5ae0bf91052a8ac3cfbc285fb915cca056865a1db7b832b851e2907107540b, 0x01a519d1066a48c2f4e43fb12f35144065c7dc82ee057f284502d34908703ca5\r\n    ‚îî‚îÄ ‚Üê \"ECDSA: invalid signature 'v' value\"\r\n```\r\n\r\n**üî¢ Code to reproduce bug**\r\nhttps://github.com/alfheimrShiven/smart-wallet\r\n\r\n<!-- We will be able to better help if you provide a minimal example that triggers the bug. -->\r\n**üêûCmd to reproduce bug**\r\n`forge test --mt testLockRequestConcensysEvaluation -vvvv`",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4745/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4745/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1814815988",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4745#issuecomment-1814815988",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4745",
    "id": 1814815988,
    "node_id": "IC_kwDOA9tCBs5sK-T0",
    "user": {
      "login": "ernestognw",
      "id": 33379285,
      "node_id": "MDQ6VXNlcjMzMzc5Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/33379285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ernestognw",
      "html_url": "https://github.com/ernestognw",
      "followers_url": "https://api.github.com/users/ernestognw/followers",
      "following_url": "https://api.github.com/users/ernestognw/following{/other_user}",
      "gists_url": "https://api.github.com/users/ernestognw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ernestognw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ernestognw/subscriptions",
      "organizations_url": "https://api.github.com/users/ernestognw/orgs",
      "repos_url": "https://api.github.com/users/ernestognw/repos",
      "events_url": "https://api.github.com/users/ernestognw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ernestognw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-16T16:37:16Z",
    "updated_at": "2023-11-16T16:37:16Z",
    "author_association": "MEMBER",
    "body": "Hey @alfheimrShiven,\r\n\r\nHave you tried following the EIP-2098 format for short signatures?\r\n\r\nHere you have some [reference in Javascript from our tests](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/0053ee040a7ff1dbc39691c9e67a69f564930a88/test/utils/cryptography/ECDSA.test.js#L13). The thing is that you'll get an incompatible short signature just by doing `bytes memory signature = abi.encodePacked(v, r, s)` ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1814815988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
