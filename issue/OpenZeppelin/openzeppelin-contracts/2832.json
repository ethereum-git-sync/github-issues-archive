{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2832",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2832/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2832/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2832/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2832",
  "id": 974971550,
  "node_id": "MDU6SXNzdWU5NzQ5NzE1NTA=",
  "number": 2832,
  "title": "Add method to modify _operatorApprovals from derived contracts",
  "user": {
    "login": "chrisdotn",
    "id": 2820818,
    "node_id": "MDQ6VXNlcjI4MjA4MTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2820818?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chrisdotn",
    "html_url": "https://github.com/chrisdotn",
    "followers_url": "https://api.github.com/users/chrisdotn/followers",
    "following_url": "https://api.github.com/users/chrisdotn/following{/other_user}",
    "gists_url": "https://api.github.com/users/chrisdotn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chrisdotn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chrisdotn/subscriptions",
    "organizations_url": "https://api.github.com/users/chrisdotn/orgs",
    "repos_url": "https://api.github.com/users/chrisdotn/repos",
    "events_url": "https://api.github.com/users/chrisdotn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chrisdotn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-08-19T19:20:17Z",
  "updated_at": "2021-10-06T13:48:18Z",
  "closed_at": "2021-10-06T13:48:18Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nIt is impossible to extend ERC-1155 in a way that the derived contract is accessing the `_operatorApprovals`, because the mapping is `private` and there is no internal method to modify it. Thus, only the ERC1155 contract itself can set or unset approvals. This makes extensions like an ERC1155Permit impossible as they need a way to modify the approval mapping. The proposal is to add an internal function, which can be used in contracts extending ERC1155 to modify `_operatorApprovals`.\r\n\r\n**üìù Details**\r\nContracts extending ERC1155 need a way to modify `_operatorApprovals`. There are two options:\r\n1. Change `_operatorApprovals` visibility from `private` to `internal`\r\n2. Add an `internal` function to modify the mapping.\r\n\r\nThe proposal is for option two as it aligns well with ERC20, which has a similar setup: `private _allowances`, which can be modfied in derived contracts with `_approve(owner, spender, amount)`. \r\n\r\nThe function to be added to ERC1155 is this:\r\n\r\n```\r\nfunction _setApprovalForAll(address owner, address operator, bool approved) \r\n   internal virtual {\r\n  require(owner != operator, \"ERC1155: setting approval status for self\");\r\n  require(owner != address(0), \"ERC1155: approve from the zero address\");\r\n  require(operator != address(0), \"ERC1155: approve to the zero address\");\r\n\r\n  _operatorApprovals[owner][operator] = approved;\r\n  emit ApprovalForAll(owner, operator, approved);\r\n}\r\n```\r\nThe main difference to the existing `public setApprovalForAll(address operator, bool approved)` is that it allows to add approvals for other owners than `msg.sender`, which is necessary if we want to create an ERC1155Permit that would set approvals based on signatures. ",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2832/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2832/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/902958568",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2832#issuecomment-902958568",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2832",
    "id": 902958568,
    "node_id": "IC_kwDOA9tCBs410g3o",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-20T21:08:57Z",
    "updated_at": "2021-08-20T21:09:25Z",
    "author_association": "MEMBER",
    "body": "I agree with this, adding the internal function. We also need an internal `_setApprovalForAll` for ERC721. Would be ok to include both in the same PR.\r\n\r\nDoes anyone want to submit a PR for this?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/902958568/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
