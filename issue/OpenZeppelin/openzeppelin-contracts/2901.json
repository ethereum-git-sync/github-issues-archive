{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2901",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2901/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2901/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2901/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2901",
  "id": 1015752874,
  "node_id": "I_kwDOA9tCBs48iyiq",
  "number": 2901,
  "title": "Initializer must be reusable for upgrade Initializers",
  "user": {
    "login": "a-d-j-i",
    "id": 1459522,
    "node_id": "MDQ6VXNlcjE0NTk1MjI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1459522?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a-d-j-i",
    "html_url": "https://github.com/a-d-j-i",
    "followers_url": "https://api.github.com/users/a-d-j-i/followers",
    "following_url": "https://api.github.com/users/a-d-j-i/following{/other_user}",
    "gists_url": "https://api.github.com/users/a-d-j-i/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a-d-j-i/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a-d-j-i/subscriptions",
    "organizations_url": "https://api.github.com/users/a-d-j-i/orgs",
    "repos_url": "https://api.github.com/users/a-d-j-i/repos",
    "events_url": "https://api.github.com/users/a-d-j-i/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a-d-j-i/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-10-05T00:18:28Z",
  "updated_at": "2022-04-12T17:15:44Z",
  "closed_at": "2022-03-22T18:06:30Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**🧐 Motivation**\r\nAll upgradeables are taking some storage space to limit the execution if the Initializer twice. \r\nWhen you upgrade a contract you need to initialize the new variables and is a good idea to reuse the storage used by Initializer.\r\n\r\n**📝 Details**\r\nI created an example of the main idea in:  https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/pull/125/files\r\n",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2901/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2901/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944564202",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2901#issuecomment-944564202",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2901",
    "id": 944564202,
    "node_id": "IC_kwDOA9tCBs44TOfq",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-15T19:05:03Z",
    "updated_at": "2021-10-15T19:22:04Z",
    "author_association": "MEMBER",
    "body": "Thanks for the suggestion @a-d-j-i.\r\n\r\nLooking at your PR (https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/pull/125), I'm not a fan of the name `upgradeInit` but the name `reinitializer` may be good.\r\n\r\nThe idea would be that the modifier `reinitializer(n)` can run only once, and only if the contract isn't already initialized to a level m >= n. \r\n\r\n`initializer` would be the same as `reinitializer(1)`.\r\n\r\nOne thing I find interesting in your linked code is that the modifier uses the condition `require(_initializing || _upgradeLevel <= upgradeLevel)`. In other words, initializers from a lower level can still be invoked during a reinitializer of a higher level. This may sound undesirable but it actually solves a problem that we currently have: if, for example, someone upgrades an existing ERC20 to add ERC20Votes, they are not able to call `ERC20Votes_init` because it will see that the contract is already initialized. This is solved with `reinitializer` because the user can write the following function which would work:\r\n\r\n```solidity\r\nfunction initializeV2() reinitializer(2) public {\r\n    __ERC20VotesUpgradeable_init(...);\r\n}\r\n```\r\n\r\nOne challenge is that if we change Initializable it needs to be storage-compatible with the current version. This is technically doable because it currently has two booleans that could be converted into a `uint16`. However, the Upgrades Plugins would find that incompatible so we would need to figure out a way to make that work.\r\n\r\nWe should discuss this quite a bit more so please don't submit any PRs yet.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944564202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944618501",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2901#issuecomment-944618501",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2901",
    "id": 944618501,
    "node_id": "IC_kwDOA9tCBs44TbwF",
    "user": {
      "login": "a-d-j-i",
      "id": 1459522,
      "node_id": "MDQ6VXNlcjE0NTk1MjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1459522?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/a-d-j-i",
      "html_url": "https://github.com/a-d-j-i",
      "followers_url": "https://api.github.com/users/a-d-j-i/followers",
      "following_url": "https://api.github.com/users/a-d-j-i/following{/other_user}",
      "gists_url": "https://api.github.com/users/a-d-j-i/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/a-d-j-i/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/a-d-j-i/subscriptions",
      "organizations_url": "https://api.github.com/users/a-d-j-i/orgs",
      "repos_url": "https://api.github.com/users/a-d-j-i/repos",
      "events_url": "https://api.github.com/users/a-d-j-i/events{/privacy}",
      "received_events_url": "https://api.github.com/users/a-d-j-i/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-15T19:47:14Z",
    "updated_at": "2021-10-15T19:47:14Z",
    "author_association": "NONE",
    "body": "Ok, this was just an example, I will not insist with this PR.\r\nI just want the functionality. \r\nFinally maybe patch or patch Level is a possible name.\r\nThanks!!!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944618501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944626208",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2901#issuecomment-944626208",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2901",
    "id": 944626208,
    "node_id": "IC_kwDOA9tCBs44Tdog",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-15T20:01:46Z",
    "updated_at": "2021-10-15T20:01:46Z",
    "author_association": "MEMBER",
    "body": "Let's leave open for discussion.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944626208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
