{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3818",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3818/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3818/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3818/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3818",
  "id": 1453010855,
  "node_id": "I_kwDOA9tCBs5Wmy-n",
  "number": 3818,
  "title": "Add PaymentSplitter.payeesLength()",
  "user": {
    "login": "olehmisar",
    "id": 29802592,
    "node_id": "MDQ6VXNlcjI5ODAyNTky",
    "avatar_url": "https://avatars.githubusercontent.com/u/29802592?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/olehmisar",
    "html_url": "https://github.com/olehmisar",
    "followers_url": "https://api.github.com/users/olehmisar/followers",
    "following_url": "https://api.github.com/users/olehmisar/following{/other_user}",
    "gists_url": "https://api.github.com/users/olehmisar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/olehmisar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/olehmisar/subscriptions",
    "organizations_url": "https://api.github.com/users/olehmisar/orgs",
    "repos_url": "https://api.github.com/users/olehmisar/repos",
    "events_url": "https://api.github.com/users/olehmisar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/olehmisar/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-11-17T09:32:22Z",
  "updated_at": "2023-01-05T16:35:32Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n<!-- Is your feature request related to a specific problem? Is it just a crazy idea? Tell us about it! -->\r\nI want to list all payees of a `PaymentSplitter` contract.\r\n\r\n**üìù Details**\r\n<!-- Please describe your feature request in detail. -->\r\n`PaymentSplitter` has a `.payee(index)` method but it is hard to use it without knowing how many payees are there.\r\n\r\nConsider adding this to the `PaymentSplitter` contract:\r\n```solidity\r\nfunction payeesLength() public view returns (uint256) {\r\n  return _payees.length;\r\n}\r\n```\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contracts Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/CONTRIBUTING.md -->\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3818/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3818/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1319192149",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3818#issuecomment-1319192149",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3818",
    "id": 1319192149,
    "node_id": "IC_kwDOA9tCBs5OoUZV",
    "user": {
      "login": "JulissaDantes",
      "id": 8561085,
      "node_id": "MDQ6VXNlcjg1NjEwODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8561085?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JulissaDantes",
      "html_url": "https://github.com/JulissaDantes",
      "followers_url": "https://api.github.com/users/JulissaDantes/followers",
      "following_url": "https://api.github.com/users/JulissaDantes/following{/other_user}",
      "gists_url": "https://api.github.com/users/JulissaDantes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JulissaDantes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JulissaDantes/subscriptions",
      "organizations_url": "https://api.github.com/users/JulissaDantes/orgs",
      "repos_url": "https://api.github.com/users/JulissaDantes/repos",
      "events_url": "https://api.github.com/users/JulissaDantes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JulissaDantes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-17T20:57:40Z",
    "updated_at": "2022-11-17T20:57:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi,\r\n\r\nCan you add more details to the motivation? Whoever deploys the contracts provides the `payee` array, meaning, they already know how many are there, and the payees are only added during deployment. Although there would be other ways to get the total list (like listening to the contract `PayeeAdded`), I would like to know the exact use case `payeesLength` might be applied.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1319192149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1319262899",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3818#issuecomment-1319262899",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3818",
    "id": 1319262899,
    "node_id": "IC_kwDOA9tCBs5Oolqz",
    "user": {
      "login": "olehmisar",
      "id": 29802592,
      "node_id": "MDQ6VXNlcjI5ODAyNTky",
      "avatar_url": "https://avatars.githubusercontent.com/u/29802592?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olehmisar",
      "html_url": "https://github.com/olehmisar",
      "followers_url": "https://api.github.com/users/olehmisar/followers",
      "following_url": "https://api.github.com/users/olehmisar/following{/other_user}",
      "gists_url": "https://api.github.com/users/olehmisar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olehmisar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olehmisar/subscriptions",
      "organizations_url": "https://api.github.com/users/olehmisar/orgs",
      "repos_url": "https://api.github.com/users/olehmisar/repos",
      "events_url": "https://api.github.com/users/olehmisar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olehmisar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-17T22:00:05Z",
    "updated_at": "2022-11-17T22:02:29Z",
    "author_association": "NONE",
    "body": "I want to show the list of payees on a website. I can fetch each payee address one by one using `.payee(index)` but I need to know what is the last index, so I know when to stop. I want something like this:\r\n```ts\r\nasync function getPayees(paymentSplitter: PaymentSplitter): Promise<string[]> {\r\n  const len = await paymentSplitter.payeesLength(); // missing this\r\n  const payees: string[] = [];\r\n  for (let i = 0; i < len.toNumber(); i++) {\r\n    payees.push(await paymentSplitter.payee(i));\r\n  }\r\n  return payees;\r\n}",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1319262899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1372450591",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3818#issuecomment-1372450591",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3818",
    "id": 1372450591,
    "node_id": "IC_kwDOA9tCBs5Rze8f",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-05T16:35:32Z",
    "updated_at": "2023-01-05T16:35:32Z",
    "author_association": "MEMBER",
    "body": "Note that you can iterate until `payee` returns a zero address.\r\n\r\nIt might still make sense to add a getter for the length.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1372450591/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
