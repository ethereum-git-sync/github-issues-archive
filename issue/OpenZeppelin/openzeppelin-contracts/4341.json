{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4341",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4341/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4341/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4341/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4341",
  "id": 1751588031,
  "node_id": "I_kwDOA9tCBs5oZxy_",
  "number": 4341,
  "title": "ERC1155Supply conflicts with ERC1155Burnable",
  "user": {
    "login": "PhantomYdn",
    "id": 1199285,
    "node_id": "MDQ6VXNlcjExOTkyODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1199285?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PhantomYdn",
    "html_url": "https://github.com/PhantomYdn",
    "followers_url": "https://api.github.com/users/PhantomYdn/followers",
    "following_url": "https://api.github.com/users/PhantomYdn/following{/other_user}",
    "gists_url": "https://api.github.com/users/PhantomYdn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PhantomYdn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PhantomYdn/subscriptions",
    "organizations_url": "https://api.github.com/users/PhantomYdn/orgs",
    "repos_url": "https://api.github.com/users/PhantomYdn/repos",
    "events_url": "https://api.github.com/users/PhantomYdn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PhantomYdn/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-05-01T04:38:04Z",
  "updated_at": "2023-06-11T20:11:59Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "<!-- Briefly describe the issue you're experiencing. Tell us what you were trying to do and what happened instead. -->\r\n\r\nIf both features are enabled for a contract: an attempt to burn tokens leads to other revert reason than expected.\r\n\r\n<!-- Remember, this is not a place to ask for help debugging code. For that, we welcome you in the OpenZeppelin Community Forum: https://forum.openzeppelin.com/. -->\r\n\r\n**üíª Environment**\r\n\r\n<!-- Tell us what version of OpenZeppelin Contracts you're using, and how you're using it: Truffle, Remix, etc. -->\r\n\r\n* Hardhat\r\n* Ethers\r\n* Solidity 0.8.4\r\n\r\n**üìù Details**\r\n\r\n<!-- Describe the problem you have been experiencing in more detail. Include as much information as you think is relevant. Keep in mind that transactions can fail for many reasons; context is key here. -->\r\n\r\nThere is the following code in ERC1155BurnableUpgradeable:\r\n\r\n```solidity\r\nfunction _burn(\r\n        address from,\r\n        uint256 id,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n\r\n        emit TransferSingle(operator, from, address(0), id, amount);\r\n    }\r\n```\r\n\r\nSo `_beforeTokenTransfer` happens before `require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");`.\r\nBut function `ERC1155SupplyUpgradeable._beforeTokenTransfer` contains the following\r\n\r\n```solidity\r\nif (to == address(0)) {\r\n            for (uint256 i = 0; i < ids.length; ++i) {\r\n                _totalSupply[ids[i]] -= amounts[i];\r\n            }\r\n        }\r\n```\r\nAs a result the following error happen: `Error: VM Exception while processing transaction: reverted with panic code 0x11 (Arithmetic operation underflowed or overflowed outside of an unchecked block)`\r\nInsted of: `ERC1155: burn amount exceeds balance`\r\n\r\n**üî¢ Code to reproduce bug**\r\n\r\n<!-- We will be able to better help if you provide a minimal example that triggers the bug. -->\r\nCreate a contract 1155 which is burnable and support supply calcs. After attempt to burn more NFT than present - this error will happen.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4341/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4341/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1586323749",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4341#issuecomment-1586323749",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4341",
    "id": 1586323749,
    "node_id": "IC_kwDOA9tCBs5ejWEl",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-02T13:51:41Z",
    "updated_at": "2022-05-02T22:55:12Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @PhantomYdn \r\n\r\nFirst, I do believe that the behavior you are describing is not specific to the upgradeable contracts, and would also apply to the non-upgradeable version that is transpiled into the upgradeable version. If that is the case, we should open an issue to fix that [there](https://github.com/OpenZeppelin/openzeppelin-contracts), and as a result it would be transpiled to here.\r\n\r\nBefore we do that, I want to make sure I understand the issue correctly. \r\n\r\nIt appears that it is not an issue with a correct operation reverting (which would be critical) but rather with an incorrect operation falling with an unexpected error message. When someone transfers more than the total supply (which is obviously more than their balance), then the total supply decrement gives an arithmetical error BEFORE the balance is checked.\r\n\r\nDoes that interpretation/rewording match your issue?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1586323749/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1586323751",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4341#issuecomment-1586323751",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4341",
    "id": 1586323751,
    "node_id": "IC_kwDOA9tCBs5ejWEn",
    "user": {
      "login": "PhantomYdn",
      "id": 1199285,
      "node_id": "MDQ6VXNlcjExOTkyODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1199285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PhantomYdn",
      "html_url": "https://github.com/PhantomYdn",
      "followers_url": "https://api.github.com/users/PhantomYdn/followers",
      "following_url": "https://api.github.com/users/PhantomYdn/following{/other_user}",
      "gists_url": "https://api.github.com/users/PhantomYdn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PhantomYdn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PhantomYdn/subscriptions",
      "organizations_url": "https://api.github.com/users/PhantomYdn/orgs",
      "repos_url": "https://api.github.com/users/PhantomYdn/repos",
      "events_url": "https://api.github.com/users/PhantomYdn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PhantomYdn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-08T19:08:58Z",
    "updated_at": "2022-08-08T19:08:58Z",
    "author_association": "NONE",
    "body": "@Amxx - yes - your interpretation is correct. It's, IMHO, minor issue which might lead to misunderstandings and misinterpretation on 3rd party code.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1586323751/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
