{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3066",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3066/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3066/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3066/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3066",
  "id": 1091682709,
  "node_id": "I_kwDOA9tCBs5BEcGV",
  "number": 3066,
  "title": "Context.sol updated with msg.value",
  "user": {
    "login": "MaxflowO2",
    "id": 82993680,
    "node_id": "MDQ6VXNlcjgyOTkzNjgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/82993680?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaxflowO2",
    "html_url": "https://github.com/MaxflowO2",
    "followers_url": "https://api.github.com/users/MaxflowO2/followers",
    "following_url": "https://api.github.com/users/MaxflowO2/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaxflowO2/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaxflowO2/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaxflowO2/subscriptions",
    "organizations_url": "https://api.github.com/users/MaxflowO2/orgs",
    "repos_url": "https://api.github.com/users/MaxflowO2/repos",
    "events_url": "https://api.github.com/users/MaxflowO2/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaxflowO2/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-12-31T22:50:46Z",
  "updated_at": "2022-02-08T23:38:11Z",
  "closed_at": "2022-02-08T23:36:30Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n<!-- Is your feature request related to a specific problem? Is it just a crazy idea? Tell us about it! -->\r\nyes just one... in Context.sol we have internal getters for msg.sender and msg.data, but none for msg.value\r\n\r\n\r\n**üìù Details**\r\n<!-- Please describe your feature request in detail. -->\r\nadd these lines of code to Context.sol\r\n\r\n```\r\n    function _msgValue() internal view virtual returns (uint) {\r\n        return msg.value;\r\n    }\r\n```\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contracts Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/CONTRIBUTING.md -->\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3066/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3066/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1003970600",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3066#issuecomment-1003970600",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3066",
    "id": 1003970600,
    "node_id": "IC_kwDOA9tCBs4712Ao",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-03T09:38:23Z",
    "updated_at": "2022-01-03T09:38:23Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @MaxflowO2 \r\n\r\nThe reason for `_msgSender` and `_msgData` is that there are cases, such as with ERC2771 meta-transaction relaying, where the \"base\" values (`msg.sender` and `msg.data`) should not be used as is. AFAIK, there is no equivalent issue with `msg.value`.\r\n\r\nAlso, there are cases, such as when doing a multicall (by delegating to self in a loop), where the use of `msg.value` is dangerous, and I fear having a `_msgValue` would be interpreted as fixing that when it doesn't.\r\n\r\nDo you have a particular usecase in mind, maybe on some L2, or do you propose that only for completeness?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1003970600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1033171071",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3066#issuecomment-1033171071",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3066",
    "id": 1033171071,
    "node_id": "IC_kwDOA9tCBs49lPB_",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-08T23:38:11Z",
    "updated_at": "2022-02-08T23:38:11Z",
    "author_association": "MEMBER",
    "body": "Assuming it was proposed for completeness. But for now we don't have a use case that would require this.\r\n\r\nThe only thing that comes to mind is mocking values for testing, like we might need to do with block.timestamp and so on. But until we need this I don't think we should add it.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1033171071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
