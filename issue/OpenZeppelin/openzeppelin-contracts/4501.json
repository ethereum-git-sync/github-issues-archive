{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4501",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4501/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4501/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4501/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4501",
  "id": 1831764209,
  "node_id": "I_kwDOA9tCBs5tLoDx",
  "number": 4501,
  "title": " Calculation of some logarithms can be slightly optimized",
  "user": {
    "login": "vladyan18",
    "id": 13525908,
    "node_id": "MDQ6VXNlcjEzNTI1OTA4",
    "avatar_url": "https://avatars.githubusercontent.com/u/13525908?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vladyan18",
    "html_url": "https://github.com/vladyan18",
    "followers_url": "https://api.github.com/users/vladyan18/followers",
    "following_url": "https://api.github.com/users/vladyan18/following{/other_user}",
    "gists_url": "https://api.github.com/users/vladyan18/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vladyan18/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vladyan18/subscriptions",
    "organizations_url": "https://api.github.com/users/vladyan18/orgs",
    "repos_url": "https://api.github.com/users/vladyan18/repos",
    "events_url": "https://api.github.com/users/vladyan18/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vladyan18/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2023-08-01T17:53:03Z",
  "updated_at": "2023-08-01T20:44:21Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**üìù Details**\r\n<!-- Please describe your feature request in detail. -->\r\n\r\n### **Redundant shifts in \"ifs\"**\r\n`log2` and `log256` contain \"ifs\" which can be simplified:\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/5ae630684a0f57de400ef69499addab4c32ac8fb/contracts/utils/math/Math.sol#L270\r\n\r\nsuch conditions may be replaced by the following:\r\n```solidity\r\nif (value >= 2**128) {\r\n```\r\nAccording to my check, such a replacement saves about 40 gas (~12%) in the `log2`. \r\nOn the other hand, this may increase the bytecode of the contract due to the need to write large constants. Perhaps that is why the checks are implemented in their current form.\r\n\r\n### **Redundant variable on stack**\r\n\r\nLogarithm calculations contain a redundant variable:\r\n\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/5ae630684a0f57de400ef69499addab4c32ac8fb/contracts/utils/math/Math.sol#L268\r\n\r\nIf instead you use a named variable in the \"returns\" and remove the explicit return, then this can save on one or two opcodes (3-5 gas)\r\n\r\nNamed return value is used, for example, in `mulDiv`.\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contracts Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/CONTRIBUTING.md -->\r\n\r\n### **Can be done without branches**\r\n\r\nIn the steps of computing logarithms (`log2`, `log256`), you can get rid of logical branching. Example:\r\nhttps://github.com/cryptoalgebra/Algebra/blob/f43ae88856799e694170d5700d23c1657757ee9b/src/core/contracts/libraries/TickMath.sol#L83-L123\r\n\r\n\r\nFor 0 and 1 it will most likely be more expensive. But for other values, i think, cheaper. At the same time, of course, such code in assembly is less readable.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4501/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4501/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1660997245",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4501#issuecomment-1660997245",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4501",
    "id": 1660997245,
    "node_id": "IC_kwDOA9tCBs5jAM59",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-01T20:01:45Z",
    "updated_at": "2023-08-01T20:01:45Z",
    "author_association": "COLLABORATOR",
    "body": "**About the first part**\r\n\r\nAre you sure ? My measurement say otherwize. I believe it is because `gt` is an evm opcode, but gte isn't (so its a compiled to an `lt` + `not` with adds 3 gas). I'm pretty sure we tested the option you proposed and ended up rejecting it. Maybe the compiler evolved and its not more effective...",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1660997245/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1661000463",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4501#issuecomment-1661000463",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4501",
    "id": 1661000463,
    "node_id": "IC_kwDOA9tCBs5jANsP",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-01T20:03:58Z",
    "updated_at": "2023-08-01T20:03:58Z",
    "author_association": "COLLABORATOR",
    "body": "**About the second part**\r\n\r\nWe are not fans of relying on implicit variable declaration through named return type. If possible we avoid this. Ok, it can save 3~5 gas, but I'm not sure that is a significant saving that we want to compromise our guidelines for.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1661000463/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1661001925",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4501#issuecomment-1661001925",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4501",
    "id": 1661001925,
    "node_id": "IC_kwDOA9tCBs5jAODF",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-01T20:04:59Z",
    "updated_at": "2023-08-01T20:04:59Z",
    "author_association": "COLLABORATOR",
    "body": "**About the last part**\r\n\r\nWe value readability and auditability of the code. What is done in the link you shared doesn't really align with our best practices. In particular, if an error what to be made, we would not notice it.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1661001925/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1661052871",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4501#issuecomment-1661052871",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4501",
    "id": 1661052871,
    "node_id": "IC_kwDOA9tCBs5jAafH",
    "user": {
      "login": "vladyan18",
      "id": 13525908,
      "node_id": "MDQ6VXNlcjEzNTI1OTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/13525908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vladyan18",
      "html_url": "https://github.com/vladyan18",
      "followers_url": "https://api.github.com/users/vladyan18/followers",
      "following_url": "https://api.github.com/users/vladyan18/following{/other_user}",
      "gists_url": "https://api.github.com/users/vladyan18/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vladyan18/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vladyan18/subscriptions",
      "organizations_url": "https://api.github.com/users/vladyan18/orgs",
      "repos_url": "https://api.github.com/users/vladyan18/repos",
      "events_url": "https://api.github.com/users/vladyan18/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vladyan18/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-01T20:34:58Z",
    "updated_at": "2023-08-01T20:34:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Are you sure ? My measurement say otherwize. I believe it is because `gt` is an evm opcode, but gte isn't (so its a compiled to an `lt` + `not` with adds 3 gas). I'm pretty sure we tested the option you proposed and ended up rejecting it. Maybe the compiler evolved and its not more effective...\r\n\r\nYes, I know about opcodes. But lately I've noticed that \"ifs\" with `gte` are sometimes more efficient. Maybe more efficient optimizations and JUMPI opcode layout are used.\r\nI specifically checked three options: \r\n- old `if (value >> 128 > 0) { `\r\n- with gt `if (value > 2 ** 128 - 1) { ` (compiler will calculate constant)\r\n- with gte `if (value >= 2 ** 128) {`\r\nand i my results, gas is: gte < gt < old\r\n\r\nContract used for gas tests (0.8.20):\r\n```solidity\r\ncontract TestLog2 {\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 2 ** 128) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >=  2 ** 64) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 2 ** 32 ) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 2 ** 16) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >=  2 ** 8) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >=  2 ** 4) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >=  2 ** 2) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value > 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function log2Old(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    function gasCostLog(uint256 x) external view returns (uint256 res, uint256 gas) {\r\n        gas = gasleft();\r\n        res = log2(x);\r\n        gas -= gasleft();\r\n    }\r\n\r\n        function gasCostLogOld(uint256 x) external view returns (uint256 res, uint256 gas) {\r\n        gas = gasleft();\r\n        res = log2Old(x);\r\n        gas -= gasleft();\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1661052871/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1661059251",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4501#issuecomment-1661059251",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4501",
    "id": 1661059251,
    "node_id": "IC_kwDOA9tCBs5jAcCz",
    "user": {
      "login": "vladyan18",
      "id": 13525908,
      "node_id": "MDQ6VXNlcjEzNTI1OTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/13525908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vladyan18",
      "html_url": "https://github.com/vladyan18",
      "followers_url": "https://api.github.com/users/vladyan18/followers",
      "following_url": "https://api.github.com/users/vladyan18/following{/other_user}",
      "gists_url": "https://api.github.com/users/vladyan18/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vladyan18/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vladyan18/subscriptions",
      "organizations_url": "https://api.github.com/users/vladyan18/orgs",
      "repos_url": "https://api.github.com/users/vladyan18/repos",
      "events_url": "https://api.github.com/users/vladyan18/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vladyan18/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-01T20:39:19Z",
    "updated_at": "2023-08-01T20:39:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "The compiler reverses the condition (to `lt`) by swapping execution branches\r\n(Remix, assembly in compilation details)\r\n![image](https://github.com/OpenZeppelin/openzeppelin-contracts/assets/13525908/0247099b-053c-4f67-bc91-f3938a3b6e39)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1661059251/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1661065704",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4501#issuecomment-1661065704",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4501",
    "id": 1661065704,
    "node_id": "IC_kwDOA9tCBs5jAdno",
    "user": {
      "login": "vladyan18",
      "id": 13525908,
      "node_id": "MDQ6VXNlcjEzNTI1OTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/13525908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vladyan18",
      "html_url": "https://github.com/vladyan18",
      "followers_url": "https://api.github.com/users/vladyan18/followers",
      "following_url": "https://api.github.com/users/vladyan18/following{/other_user}",
      "gists_url": "https://api.github.com/users/vladyan18/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vladyan18/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vladyan18/subscriptions",
      "organizations_url": "https://api.github.com/users/vladyan18/orgs",
      "repos_url": "https://api.github.com/users/vladyan18/repos",
      "events_url": "https://api.github.com/users/vladyan18/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vladyan18/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-01T20:44:21Z",
    "updated_at": "2023-08-01T20:44:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "So, result with \"1025\" as input (Optimizer 200 runs, 0.8.20):\r\nold: 322\r\nwith gt: 298\r\nwith gte: 283",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1661065704/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
