{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3391",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3391/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3391/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3391/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3391",
  "id": 1224999218,
  "node_id": "I_kwDOA9tCBs5JBAEy",
  "number": 3391,
  "title": "Programmatic Deployments of Upgradeable Contracts",
  "user": {
    "login": "hickscorp",
    "id": 822933,
    "node_id": "MDQ6VXNlcjgyMjkzMw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/822933?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hickscorp",
    "html_url": "https://github.com/hickscorp",
    "followers_url": "https://api.github.com/users/hickscorp/followers",
    "following_url": "https://api.github.com/users/hickscorp/following{/other_user}",
    "gists_url": "https://api.github.com/users/hickscorp/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hickscorp/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hickscorp/subscriptions",
    "organizations_url": "https://api.github.com/users/hickscorp/orgs",
    "repos_url": "https://api.github.com/users/hickscorp/repos",
    "events_url": "https://api.github.com/users/hickscorp/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hickscorp/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-05-04T07:11:19Z",
  "updated_at": "2022-05-04T22:15:04Z",
  "closed_at": "2022-05-04T22:15:04Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "We are trying to allow our users to deploy contracts themselves directly from a Smart Contract method.\r\n\r\nWe thought about the problem and reached several conclusions and possible solutions:\r\n1. We could have a Web3 page which runs the deployments, via several transactions.\r\n1. We could also have a single Solidity method doing that.\r\n\r\nIn a nutshell, the user would never deploy an \"implementation\" contract - and instead would deploy their own proxy - thus allowing them to have a dedicated data segment, with all proxies pointing to the same implementation address. Does that make sense? Or should the implementation deployed as many times as we have users too?\r\n\r\nEither way, we would like to understand what our options are in terms of maintaining the `.openzeppelin/dev-${NET_ID}.json` file to track state. It seems that we would at least need the concept of a conventional backend?\r\n\r\nIf picking option 1, would it be possible to run deployments programmatically using Javascript - but then keep tracking the state of deployed things so that they could be upgraded later?\r\n\r\nOr for example for option 2, and given that we would be in a serverless environment, would it be possible to do something like:\r\n- Have a  `Stuff.deploySomething` method on one of our contracts.\r\n- Inside this method, there would be sequential steps to deploy a proxy, an implementation, and set up the proxy with the implementation's address.\r\n- The top-level contract (`Stuff`) would save the address of the deployed proxy and implementation in an internal data structure.\r\n- But at this point, how would we be able to still use the `oz` cli to interact with the deployed infrastructure? Could we, for example, get the state-tracking JSON file to reflect the state of the deployments locally, so that our developper could then use `oz upgrade`?\r\n- Is the `upgrades/contracts/application/App.sol` contract doing part of these things? Where can we find documentation on usage?\r\n\r\nDid anyone achieve something identical or similar? Is it something that could get documented in the OpenZeppelin docs - or at least a really clear overview of what happens under the hood when running `oz deploy` and / or `oz upgrade` (Eg what contracts are deployed, using what parameters, etc)?\r\n\r\nThanks!",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3391/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3391/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1117973556",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3391#issuecomment-1117973556",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3391",
    "id": 1117973556,
    "node_id": "IC_kwDOA9tCBs5Couw0",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-04T21:58:20Z",
    "updated_at": "2022-05-04T21:58:20Z",
    "author_association": "COLLABORATOR",
    "body": "> In a nutshell, the user would never deploy an \"implementation\" contract - and instead would deploy their own proxy - thus allowing them to have a dedicated data segment, with all proxies pointing to the same implementation address. Does that make sense? Or should the implementation deployed as many times as we have users too?\r\n\r\nIt makes sense. A lot of projects do that.\r\n\r\nI'd personnaly go for option 2. \r\n\r\nDepending on who is allowed to upgrade the proxy, the solution will be different. Its difficult to answer further without understanding you upgrade process. I any case I recommend you use the \"@openzeppelin/hardhat-upgrades\" plugin for hardhat. See the docs [here](https://docs.openzeppelin.com/upgrades-plugins/1.x/).\r\n\r\nAs a good example, you could check out [this registry](https://github.com/p00ls/contracts/blob/master/contracts/tokens/P00lsCreatorRegistry.sol) that deploys beacon proxy programmatically. The [migration script](https://github.com/p00ls/contracts/blob/master/migrations/phase1.js#L76-L110) does setup the beacon and build the manifest for that further upgrades can be done using the plugin.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1117973556/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1117984572",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3391#issuecomment-1117984572",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3391",
    "id": 1117984572,
    "node_id": "IC_kwDOA9tCBs5Coxc8",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-04T22:15:04Z",
    "updated_at": "2022-05-04T22:15:04Z",
    "author_association": "MEMBER",
    "body": "This is not a feature request or issue report so I'm closing. Feel free to continue a brief discussion here but the [OpenZeppelin Forum](https://forum.openzeppelin.com/) would be the best place to have this conversation.\r\n\r\nPlease note that the OpenZeppelin CLI is no longer maintained.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1117984572/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
