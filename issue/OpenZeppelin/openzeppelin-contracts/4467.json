{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4467",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4467/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4467/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4467/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4467",
  "id": 1810255461,
  "node_id": "I_kwDOA9tCBs5r5k5l",
  "number": 4467,
  "title": "Coding-simplification for functions `toString` and `toHexString`",
  "user": {
    "login": "barakman",
    "id": 7003246,
    "node_id": "MDQ6VXNlcjcwMDMyNDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barakman",
    "html_url": "https://github.com/barakman",
    "followers_url": "https://api.github.com/users/barakman/followers",
    "following_url": "https://api.github.com/users/barakman/following{/other_user}",
    "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
    "organizations_url": "https://api.github.com/users/barakman/orgs",
    "repos_url": "https://api.github.com/users/barakman/repos",
    "events_url": "https://api.github.com/users/barakman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barakman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-07-18T16:08:17Z",
  "updated_at": "2023-07-18T20:02:41Z",
  "closed_at": "2023-07-18T20:02:41Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**🧐 Motivation**\r\nCoding simplification\r\n\r\n**📝 Details**\r\nProposing a possible coding-simplification of [function toString](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol#L21-L44) and [function toHexString](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol#L53-L60):\r\n```\r\nfunction toString(uint256 x) internal pure returns (string memory) {\r\n    if (x > 0) {\r\n        string memory str;\r\n        while (x > 0) {\r\n            str = string(abi.encodePacked(uint8(x % 10 + 48), str));\r\n            x /= 10;\r\n        }\r\n        return str;\r\n    }\r\n    return \"0\";\r\n}\r\n\r\nfunction toHexString(uint256 x) internal pure returns (string memory) {\r\n    if (x > 0) {\r\n        string memory str;\r\n        while (x > 0) {\r\n            str = string(abi.encodePacked(uint8(x % 16 + (x % 16 < 10 ? 48 : 87)), str));\r\n            x /= 16;\r\n        }\r\n        return str;\r\n    }\r\n    return \"0\";\r\n}\r\n```\r\nIt might or might not be more gas-intense than the current implementation, but since these functions are designated primarily for testing and debugging rather than for actual deployment, I believe that the gas aspect is of low significance.",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4467/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4467/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1640920510",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4467#issuecomment-1640920510",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4467",
    "id": 1640920510,
    "node_id": "IC_kwDOA9tCBs5hznW-",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-18T20:02:41Z",
    "updated_at": "2023-07-18T20:02:41Z",
    "author_association": "COLLABORATOR",
    "body": "> It might or might not be more gas-intense than the current implementation, but since these functions are designated primarily for testing and debugging rather than for actual deployment, I believe that the gas aspect is of low significance.\r\n\r\nYou approach is significantly more gas-intensive. I ran a simple benchmark with `1247219572055125` as an integer, and your version was 4.5 times more expensive. That is an additional 350% ... and I believe this will only get worse with longer integers or a bigger memory offset.\r\nThis is because `str = abi.encodePacked(..., str)` copies everything and expand the memory for that.\r\n\r\nAlso, this function is used in actual deployments, see `ERC721.tokenURI`",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1640920510/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
