{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3784",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3784/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3784/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3784/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3784",
  "id": 1424689591,
  "node_id": "I_kwDOA9tCBs5U6wm3",
  "number": 3784,
  "title": "`block.timestamp` compatible Checkpoints",
  "user": {
    "login": "jaketimothy",
    "id": 2130930,
    "node_id": "MDQ6VXNlcjIxMzA5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2130930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jaketimothy",
    "html_url": "https://github.com/jaketimothy",
    "followers_url": "https://api.github.com/users/jaketimothy/followers",
    "following_url": "https://api.github.com/users/jaketimothy/following{/other_user}",
    "gists_url": "https://api.github.com/users/jaketimothy/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jaketimothy/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jaketimothy/subscriptions",
    "organizations_url": "https://api.github.com/users/jaketimothy/orgs",
    "repos_url": "https://api.github.com/users/jaketimothy/repos",
    "events_url": "https://api.github.com/users/jaketimothy/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jaketimothy/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4953777396,
      "node_id": "LA_kwDOA9tCBs8AAAABJ0Sk9A",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/area:%20governance",
      "name": "area: governance",
      "color": "E7DA84",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-10-26T21:01:24Z",
  "updated_at": "2023-02-24T18:59:35Z",
  "closed_at": "2023-02-24T18:59:12Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n\r\nCurrent implementation of Checkpoints is built for `block.number` based checkpointing.  Would love to generalize the utility to support `block.timestamp`.\r\n\r\nWould not be surprised if this has been discussed internally wrt timestamp based Governor and Votes features.  I see this as laying some groundwork to enable those features.\r\n\r\n**üìù Details**\r\n\r\nI see the following limitations to address\r\n\r\n- `uint32` creates unix epoch overflow in year 2106.  While not _urgent_, `uint64` would future-proof this.  `uint64` is also compatible with Timers, increasing composability.\r\n- `getAtBlock`, `getAtProbablyRecentBlock`, and `push` use `block.number` internally.\r\n\r\nWould this help `next-v5.0`?\r\n\r\nWith #2962 coming, is this going too far?\r\n```solidity\r\n    struct Checkpoint {\r\n        Timer _timer;\r\n        uint192 _value;\r\n    }\r\n```",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3784/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3784/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1293480211",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3784#issuecomment-1293480211",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3784",
    "id": 1293480211,
    "node_id": "IC_kwDOA9tCBs5NGPET",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-27T12:50:56Z",
    "updated_at": "2022-10-27T12:54:29Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @jaketimothy \r\n\r\nAs you can see, the current [checkpoint implementation](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Checkpoints.sol) include the `Trace224` and `Trace160` structures. They already provide the checkpoint mechanisms in a way that is not linked to \"block.number\".\r\n\r\nBefore we can have block.timestamp based governor we need to figure out the way Governor and Tokens are going to work together on using the same reference. My personal opinion is that the governor should not ever lookup the time, and should ask the token for that information. That way the governor would be oblivious, and the clock would be set by the token.\r\n\r\nThis is what I started to formalize in [EIP-5805](https://github.com/ethereum/EIPs/pull/5805). \r\n\r\nThe uint32 limitation doesn't feel like its an actual issue. I honestly don't think that 80 years is anything we should be concerned with. Ethereum did not exist 10 years ago, and the computers from 80 years ago where electromechanical enigma-braking machines. I'm sure we all want ethereum still be relevant in 80 years ... but if the name ethereum is, the reality it represent will definitely not be what we have right now, and I'd argue it would be foolish to build contracts today hoping the runtime they are based on is still the same in 80 years. (just try to install/start a windows game from the late 1990's and you'll see what I mean)\r\n\r\nfor the `getAtBlock`, `getAtProbablyRecentBlock`, etc, functions. we should use the new Trace224 with a lookup to the public `now()` function defined by EIP-5805. Anyone will be able to \"just\" overidde the `now()` function to use timestamp, block numbers, or anything they want ... and it should be good.\r\n\r\nSo the next step are:\r\n- clean up EIP-5805\r\n- have it \"accepted\" (not exactly sure what that means, finalization will take a long time, we may want to move forward faster than that)\r\n- update Votes to implement EIP-5805\r\n- update Governor to use EIP-5805 from the voting contract.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1293480211/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1294126512",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3784#issuecomment-1294126512",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3784",
    "id": 1294126512,
    "node_id": "IC_kwDOA9tCBs5NIs2w",
    "user": {
      "login": "jaketimothy",
      "id": 2130930,
      "node_id": "MDQ6VXNlcjIxMzA5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2130930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaketimothy",
      "html_url": "https://github.com/jaketimothy",
      "followers_url": "https://api.github.com/users/jaketimothy/followers",
      "following_url": "https://api.github.com/users/jaketimothy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaketimothy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaketimothy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaketimothy/subscriptions",
      "organizations_url": "https://api.github.com/users/jaketimothy/orgs",
      "repos_url": "https://api.github.com/users/jaketimothy/repos",
      "events_url": "https://api.github.com/users/jaketimothy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaketimothy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-27T21:55:50Z",
    "updated_at": "2022-10-27T21:55:50Z",
    "author_association": "NONE",
    "body": "> Before we can have block.timestamp based governor we need to figure out the way Governor and Tokens are going to work together on using the same reference. My personal opinion is that the governor should not ever lookup the time, and should ask the token for that information. That way the governor would be oblivious, and the clock would be set by the token.\r\n\r\nAgreed.  Since the token must be time aware, this design isolates timekeeping.\r\n\r\n> This is what I started to formalize in https://github.com/ethereum/EIPs/pull/5805.\r\n\r\nThank you for writing this EIP!\r\n\r\n> The uint32 limitation doesn't feel like its an actual issue...\r\n\r\nFair!  There was no such thing as unix epoch 80 years ago...  Our grandchildren can sort it out.\r\n\r\n> for the getAtBlock, getAtProbablyRecentBlock, etc, functions. we should use the new Trace224 with a lookup to the public now() function defined by EIP-5805. Anyone will be able to \"just\" overidde the now() function to use timestamp, block numbers, or anything they want ... and it should be good.\r\n\r\nI propose this become the scope of this feature request as a part of \"update Votes to implement EIP-5805\".  ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1294126512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1294126672",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3784#issuecomment-1294126672",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3784",
    "id": 1294126672,
    "node_id": "IC_kwDOA9tCBs5NIs5Q",
    "user": {
      "login": "jaketimothy",
      "id": 2130930,
      "node_id": "MDQ6VXNlcjIxMzA5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2130930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaketimothy",
      "html_url": "https://github.com/jaketimothy",
      "followers_url": "https://api.github.com/users/jaketimothy/followers",
      "following_url": "https://api.github.com/users/jaketimothy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaketimothy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaketimothy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaketimothy/subscriptions",
      "organizations_url": "https://api.github.com/users/jaketimothy/orgs",
      "repos_url": "https://api.github.com/users/jaketimothy/repos",
      "events_url": "https://api.github.com/users/jaketimothy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaketimothy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-27T21:55:57Z",
    "updated_at": "2022-10-27T21:55:57Z",
    "author_association": "NONE",
    "body": "What do you favor between passing in a reference to now() vs removing the now() check?  Something like\r\n\r\n```solidity\r\nfunction getAtTime(Trace224 storage self, IERC5805Now timekeeper, uint256 timepoint) internal view returns (uint256) {\r\n    require(timepoint < timekeeper.now(), \"Checkpoints: timepoint in past\");\r\n    uint32 key = SafeCast.toUint32(timepoint);\r\n```\r\n\r\nvs\r\n\r\n```solidity\r\nfunction getAtTime(Trace224 storage self, uint256 timepoint) internal view returns (uint256) {\r\n    uint32 key = SafeCast.toUint32(timepoint);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1294126672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1444267242",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3784#issuecomment-1444267242",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3784",
    "id": 1444267242,
    "node_id": "IC_kwDOA9tCBs5WFcTq",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-24T18:59:12Z",
    "updated_at": "2023-02-24T18:59:35Z",
    "author_association": "MEMBER",
    "body": "I believe this was fixed in https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3934.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1444267242/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
