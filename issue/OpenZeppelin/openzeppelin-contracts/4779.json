{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4779",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4779/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4779/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4779/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4779",
  "id": 2025601962,
  "node_id": "I_kwDOA9tCBs54vDuq",
  "number": 4779,
  "title": "Add `signum` Function to `SignedMath`",
  "user": {
    "login": "pcaversaccio",
    "id": 25297591,
    "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pcaversaccio",
    "html_url": "https://github.com/pcaversaccio",
    "followers_url": "https://api.github.com/users/pcaversaccio/followers",
    "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
    "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
    "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
    "repos_url": "https://api.github.com/users/pcaversaccio/repos",
    "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-12-05T08:33:01Z",
  "updated_at": "2023-12-05T10:00:48Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I was wondering, whether OZ should offer a proper `signum` function that returns the indication (`-1`, `0`, or `1`) of the sign of a 32-byte signed integer. Thoughts?\r\n\r\n## Example Implementation\r\n\r\n```solidity\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the indication of the sign of a 32-byte signed integer.\r\n     * @notice The function returns `-1` if `x < 0`, `0` if `x == 0`, and `1` if `x > 0`.\r\n     * For more details on finding the sign of a signed integer, please refer to:\r\n     * https://graphics.stanford.edu/~seander/bithacks.html#CopyIntegerSign.\r\n     */\r\n    function signum(int256 a) internal pure returns (int256 b) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            b := sub(sgt(a, 0), slt(a, 0))\r\n        }\r\n    }\r\n}\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4779/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4779/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
