{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3870",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3870/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3870/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3870/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3870",
  "id": 1492593120,
  "node_id": "I_kwDOA9tCBs5Y9yng",
  "number": 3870,
  "title": "a couple of suggestions for v5",
  "user": {
    "login": "novaknole",
    "id": 23176187,
    "node_id": "MDQ6VXNlcjIzMTc2MTg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/23176187?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/novaknole",
    "html_url": "https://github.com/novaknole",
    "followers_url": "https://api.github.com/users/novaknole/followers",
    "following_url": "https://api.github.com/users/novaknole/following{/other_user}",
    "gists_url": "https://api.github.com/users/novaknole/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/novaknole/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/novaknole/subscriptions",
    "organizations_url": "https://api.github.com/users/novaknole/orgs",
    "repos_url": "https://api.github.com/users/novaknole/repos",
    "events_url": "https://api.github.com/users/novaknole/events{/privacy}",
    "received_events_url": "https://api.github.com/users/novaknole/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1000230196,
      "node_id": "MDU6TGFiZWwxMDAwMjMwMTk2",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/breaking%20change",
      "name": "breaking change",
      "color": "b60205",
      "default": false,
      "description": "Changes that break backwards compatibility of the public API."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/11",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11/labels",
    "id": 7990184,
    "node_id": "MI_kwDOA9tCBs4Aeeuo",
    "number": 11,
    "title": "5.0",
    "description": null,
    "creator": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 43,
    "closed_issues": 21,
    "state": "open",
    "created_at": "2022-05-17T19:52:44Z",
    "updated_at": "2023-06-02T17:21:01Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 4,
  "created_at": "2022-12-12T19:26:24Z",
  "updated_at": "2023-01-03T21:07:38Z",
  "closed_at": "2023-01-03T21:07:38Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n<!-- Is your feature request related to a specific problem? Is it just a crazy idea? Tell us about it! -->\r\n\r\nI have a couple of questions/suggestions and as pointed out from the forum where I initially posted them, I also post them here.\r\n\r\n**Number 1:**\r\nCurrently, `upgradeToAndCall` seems to me `external virtual`. This causes a problem where I can't override it and call it inside my function.. E.x\r\n\r\n```\r\nfunction upgradeToAndCall(...) external override {\r\n    // my custom logic\r\n   super.upgradeToAndCall(); \r\n}\r\n```\r\n\r\nIn the above example, `super.upgradeToAndCall(); ` becomes not possible because of `external` visibility. I'd suggest making it public.\r\n\r\n**Number 2:** \r\n\r\nIf implementation passed to upgradeTo is the same as the currently set one, why do you still emit the event ? I understand that It could be the caller's responbility to not call `upgradeTo` if the addresses match, but I'd suggest not emitting the event if that still happens. Not a big deal, just an idea.\r\n\r\n**Number 3:**\r\n\r\nHopefuly, in `v5` version, we will see `reinitializer` to accept `uint256` instead of uint8. I understand why you did uint8 to allow compatibility and not breaking storage gap, but for v5, making it `uint256` is the right way to go.\r\n\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3870/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3870/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1369852129",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3870#issuecomment-1369852129",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3870",
    "id": 1369852129,
    "node_id": "IC_kwDOA9tCBs5Rpkjh",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T14:47:44Z",
    "updated_at": "2023-01-03T14:47:44Z",
    "author_association": "MEMBER",
    "body": "Thanks @novaknole!\r\n\r\n1. @Amxx Did we have a reason for making `upgradeToAndCall` external and not public? This is not a breaking change so we could change it before 5.0.\r\n2. This one might be controversial. Generally I would emit events if they don't represent a change. For example, an ERC20 `Transfer` event should be emitted even if the value is 0. There are places where we don't follow this guideline though, such as AccessControl's grant and revoke functions (we could revise those). In the case of the upgrade functions, I also think that the events should be emitted always, in particular because of the \"and call\" part, so that a reinitialization would become evident in the events.\r\n3. Interesting... We hadn't considered this yet. It still makes sense to pack both \"initializing\" and \"initialized version\" values in one slot, so we may do `uint248`.\r\n\r\nThese suggestions should be made into individual issues if we agree with them.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1369852129/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1369863520",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3870#issuecomment-1369863520",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3870",
    "id": 1369863520,
    "node_id": "IC_kwDOA9tCBs5RpnVg",
    "user": {
      "login": "novaknole",
      "id": 23176187,
      "node_id": "MDQ6VXNlcjIzMTc2MTg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/23176187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/novaknole",
      "html_url": "https://github.com/novaknole",
      "followers_url": "https://api.github.com/users/novaknole/followers",
      "following_url": "https://api.github.com/users/novaknole/following{/other_user}",
      "gists_url": "https://api.github.com/users/novaknole/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/novaknole/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/novaknole/subscriptions",
      "organizations_url": "https://api.github.com/users/novaknole/orgs",
      "repos_url": "https://api.github.com/users/novaknole/repos",
      "events_url": "https://api.github.com/users/novaknole/events{/privacy}",
      "received_events_url": "https://api.github.com/users/novaknole/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T14:58:03Z",
    "updated_at": "2023-01-03T14:58:03Z",
    "author_association": "NONE",
    "body": "Hey @frangio \r\n\r\n3. The reason I don't like `uint8` is that I can't integrate downgrading mechanism for plugins. For example, I wanted to use semantic versioning for plugin versions. Let's say I pushed 1.3.0 to the registry.  My framework would transform this 1.3.0 into the single integer automatically so users don't have to worry about what to put in reinitializer. Then I push 1.5.0, then I push 1.4.0. Problem is because of `uint8`, The possibilities of semantic versioning are not much. The last time I calculated, I could do max 4.7.7 due to 255 possibilities and I couldn't push 5.1.0 for example. `uint256` solves everything. `uint248` would be good as well.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1369863520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1369995371",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3870#issuecomment-1369995371",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3870",
    "id": 1369995371,
    "node_id": "IC_kwDOA9tCBs5RqHhr",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T16:50:01Z",
    "updated_at": "2023-01-03T16:50:12Z",
    "author_association": "COLLABORATOR",
    "body": "> Did we have a reason for making `upgradeToAndCall` external and not public? This is not a breaking change so we could change it before 5.0.\r\n\r\nNo particular reason. We can make it public.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1369995371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1370225604",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3870#issuecomment-1370225604",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3870",
    "id": 1370225604,
    "node_id": "IC_kwDOA9tCBs5Rq_vE",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T21:07:38Z",
    "updated_at": "2023-01-03T21:07:38Z",
    "author_association": "MEMBER",
    "body": "Closing in favor of https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3923 and https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3924.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1370225604/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
