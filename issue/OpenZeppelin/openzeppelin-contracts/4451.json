{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4451",
  "id": 1799341231,
  "node_id": "I_kwDOA9tCBs5rP8Sv",
  "number": 4451,
  "title": "ERC20 standard known issues.",
  "user": {
    "login": "Dexaran",
    "id": 26142412,
    "node_id": "MDQ6VXNlcjI2MTQyNDEy",
    "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dexaran",
    "html_url": "https://github.com/Dexaran",
    "followers_url": "https://api.github.com/users/Dexaran/followers",
    "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
    "organizations_url": "https://api.github.com/users/Dexaran/orgs",
    "repos_url": "https://api.github.com/users/Dexaran/repos",
    "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dexaran/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2023-07-11T16:45:14Z",
  "updated_at": "2023-07-13T01:55:59Z",
  "closed_at": "2023-07-12T13:04:35Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### ERC20 token standard known issues.\r\n\r\nAll this tokens are affected: https://github.com/OpenZeppelin/openzeppelin-contracts/tree/master/contracts/token/ERC20\r\n\r\nHere you can find a full description: https://dexaran820.medium.com/known-problems-of-erc20-token-standard-e98887b9532c\r\n\r\nLong story short: there is no transaction handling implementation for `transfer` function in ERC20 standard (it is the flaw of the standard as it must enforce it - it is a critical feature).\r\n\r\nOn 27 Dec, 2017 there were [$4 million worth of tokens lost](https://github.com/ethereum/eips/issues/223) due to this flaw of the standard.\r\n\r\nOn 9 Mar, 2023 there were about $12 million worth of tokens lost.\r\n\r\nAs of today there are about $30 millions worth of tokens lost.\r\n\r\nSince the tokens are not recoverable the amount can only increase and in fact it WILL increase over time.\r\n\r\n**üíª Environment**\r\n\r\nRemix or whatever environment you may use to compile contracts.\r\n\r\n**üìù Details**\r\n\r\nUsers of ERC-20 tokens can lose their tokens.\r\n\r\nI suggest:\r\n\r\n1. Implement a special security check that prevents sending of ERC-20 tokens where they must not be delivered. In particular the `transfer(...)` function must not be used to send tokens to ANY contracts (because contracts rely on approve+transferFrom as a depositing pattern).\r\n\r\n```\r\n    function transfer(address to, uint256 value) public virtual returns (bool) {\r\n        require(!Address.isContract(to), \"ERC20: transfer to contracts must be performed via approve+transferFrom pattern\");\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, value);\r\n        return true;\r\n    }\r\n```\r\n\r\n2. Add a corresponding paragraph to the documentation or code comments to warn the users and token developers about any potential issues. A warning that transferring tokens to contracts via `transfer(...)` func will result in a *deposit that will not be recognized by the recipient* i.e. the recipient CAN NOT KNOW that the deposit occured and it will not be credited as well as it can not be rejected by the recipient.\r\n\r\n3. Suggest implementing the `ERC20Rescure(...)` function in every contract which is supposed to work with tokens in order to extract any unintentionally deposited ERC20 tokens that were not recorded.\r\n\r\n```\r\n    // Rescue ERC20 tokens\r\n    function rescueERC20(address _token, uint256 _value) external {\r\n        require(msg.sender == ISoyFinanceFactory(factory).feeToSetter(), 'SoyFinance: FORBIDDEN');\r\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\r\n        _token.call(abi.encodeWithSelector(0xa9059cbb, msg.sender, _value));\r\n    }\r\n```\r\n\r\nIt is relevant and it often happens. Rescue missions are necessary for ERC20 tokens. For example AAVE handled it already https://twitter.com/AaveAave/status/1633126370166575104\r\n\r\n**üî¢ Code to reproduce bug**\r\n\r\nIt is a flaw of the standard, not any particular implementation so I suggest to add some features that may help to mitigate the consequences to some degree or at least lower the risks for end users.\r\n",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451/reactions",
    "total_count": 3,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1631467881",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4451#issuecomment-1631467881",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451",
    "id": 1631467881,
    "node_id": "IC_kwDOA9tCBs5hPjlp",
    "user": {
      "login": "RenanSouza2",
      "id": 28443115,
      "node_id": "MDQ6VXNlcjI4NDQzMTE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/28443115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RenanSouza2",
      "html_url": "https://github.com/RenanSouza2",
      "followers_url": "https://api.github.com/users/RenanSouza2/followers",
      "following_url": "https://api.github.com/users/RenanSouza2/following{/other_user}",
      "gists_url": "https://api.github.com/users/RenanSouza2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RenanSouza2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RenanSouza2/subscriptions",
      "organizations_url": "https://api.github.com/users/RenanSouza2/orgs",
      "repos_url": "https://api.github.com/users/RenanSouza2/repos",
      "events_url": "https://api.github.com/users/RenanSouza2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RenanSouza2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-11T20:29:30Z",
    "updated_at": "2023-07-11T20:29:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "1 - the isContract method is deprecated\r\n\r\n2 - uniswap expects you to transfer to it's contract throught transfer, not transferFrom so this would make any token that uses this non compatible with some defi projects\r\n\r\nmaybe this could be in an ERC20 extension? what do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1631467881/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1632493646",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4451#issuecomment-1632493646",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451",
    "id": 1632493646,
    "node_id": "IC_kwDOA9tCBs5hTeBO",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-12T13:04:35Z",
    "updated_at": "2023-07-12T13:04:35Z",
    "author_association": "COLLABORATOR",
    "body": "This is an issue with ERC20, but changing that behavior breaks more things than it fixes, because the resulting token won't be ERC20 compliant.\r\n\r\nMany alternatives have been proposed, mostly ERC223 and ERC777, they both have more issues than real benefit.\r\n\r\nOur code is following the standard, which ensures interoperability with DeFi. If another standard ever reach consensus in the community, we will implement it ... but so far all effort in that dirrection has failled.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1632493646/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1632546422",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4451#issuecomment-1632546422",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451",
    "id": 1632546422,
    "node_id": "IC_kwDOA9tCBs5hTq52",
    "user": {
      "login": "Dexaran",
      "id": 26142412,
      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dexaran",
      "html_url": "https://github.com/Dexaran",
      "followers_url": "https://api.github.com/users/Dexaran/followers",
      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
      "repos_url": "https://api.github.com/users/Dexaran/repos",
      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-12T13:37:14Z",
    "updated_at": "2023-07-12T13:41:17Z",
    "author_association": "NONE",
    "body": "2. And what about adding a warning \"If you transfer ERC-20 tokens to a contract it may result in unrecognized deposit that will not be handled on the recipients side.\" ?\r\n\r\n3. And what about `ERC20Rescue()` function?\r\n\r\nAlso the most common scenario is depositing tokens to another token contract. What if we can create a library of deployed ERC20 token contracts and disallow ERC20 transfers to this contracts? (Token must not be transferred to TOKEN CONTRACT because token contract is obviously not intended to receive tokens. It is intended to BE a token)\r\n\r\nYou are saying your contracts are secure:\r\n![ZeppelinSSecure](https://github.com/OpenZeppelin/openzeppelin-contracts/assets/26142412/73162546-a4b3-4fa6-b9cd-dfcce2fd51f5)\r\n\r\nbut your implementation of ERC-20 resulted in *$30 millions worth of tokens being lost*\r\n\r\nLet's do something? We certainly can.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1632546422/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1632629185",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4451#issuecomment-1632629185",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451",
    "id": 1632629185,
    "node_id": "IC_kwDOA9tCBs5hT_HB",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-12T14:25:32Z",
    "updated_at": "2023-07-12T14:25:32Z",
    "author_association": "COLLABORATOR",
    "body": "> Also the most common scenario is depositing tokens to another token contract. What if we can create a library of deployed ERC20 token contracts and disallow ERC20 transfers to this contracts? (Token must not be transferred to TOKEN CONTRACT because token contract is obviously not intended to receive tokens. It is intended to BE a token)\r\n\r\nThis part has been discussed and documented many times. Developpers that want to add that feature to their token can do it by overloading the `_beforeTokenTransfer` hook (in v4.x) or `_update` (in v5.0) to add an additional check.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1632629185/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1632637010",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4451#issuecomment-1632637010",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451",
    "id": 1632637010,
    "node_id": "IC_kwDOA9tCBs5hUBBS",
    "user": {
      "login": "Dexaran",
      "id": 26142412,
      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dexaran",
      "html_url": "https://github.com/Dexaran",
      "followers_url": "https://api.github.com/users/Dexaran/followers",
      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
      "repos_url": "https://api.github.com/users/Dexaran/repos",
      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-12T14:30:01Z",
    "updated_at": "2023-07-12T14:30:01Z",
    "author_association": "NONE",
    "body": ">This part has been discussed and documented many times. Developpers that want to add that feature to their token can do it by overloading the _beforeTokenTransfer hook (in v4.x) or _update (in v5.0) to add an additional check.\r\n\r\n\r\nWell, if you leave it up to token developers without highlighting a necessity of doing this with a big red banner \"It is necessary for security of your users\" - the problem will not be solved.\r\n\r\nNew tokens still suffer from the issue that was discussed millions of times. May be it is worth to highlight it a bit more.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1632637010/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633111711",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4451#issuecomment-1633111711",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451",
    "id": 1633111711,
    "node_id": "IC_kwDOA9tCBs5hV06f",
    "user": {
      "login": "izcoser",
      "id": 76838137,
      "node_id": "MDQ6VXNlcjc2ODM4MTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/76838137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izcoser",
      "html_url": "https://github.com/izcoser",
      "followers_url": "https://api.github.com/users/izcoser/followers",
      "following_url": "https://api.github.com/users/izcoser/following{/other_user}",
      "gists_url": "https://api.github.com/users/izcoser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izcoser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izcoser/subscriptions",
      "organizations_url": "https://api.github.com/users/izcoser/orgs",
      "repos_url": "https://api.github.com/users/izcoser/repos",
      "events_url": "https://api.github.com/users/izcoser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izcoser/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-12T19:44:57Z",
    "updated_at": "2023-07-12T19:44:57Z",
    "author_association": "NONE",
    "body": "This should be handled by wallet providers instead to avoid unnecessary bloat to the transfer function. Should be extremely simple for Metamask for example to add a warning \"are you sure you want to transfer to a contract?\".",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633111711/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633134519",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4451#issuecomment-1633134519",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451",
    "id": 1633134519,
    "node_id": "IC_kwDOA9tCBs5hV6e3",
    "user": {
      "login": "Dexaran",
      "id": 26142412,
      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dexaran",
      "html_url": "https://github.com/Dexaran",
      "followers_url": "https://api.github.com/users/Dexaran/followers",
      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
      "repos_url": "https://api.github.com/users/Dexaran/repos",
      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-12T20:04:14Z",
    "updated_at": "2023-07-12T20:04:14Z",
    "author_association": "NONE",
    "body": ">This should be handled by wallet providers instead to avoid unnecessary bloat to the transfer function. Should be extremely simple for Metamask for example to add a warning \"are you sure you want to transfer to a contract?\".\r\n\r\nThis is a good way to never solve a problem - delegate it to wallet devs. Back in 2017-2018 we discussed this and also concluded that it can be solved on the side of software that interacts with tokens.\r\n\r\nIn theory it should work. In practice it certainly doesn't because wallet devs are even less aware of an issue than contract devs.\r\n\r\nAnd it is certainly not possible to guarantee that all wallet developers in the future will always solve this problem. New wallets and new developers will emerge... so if the underlying technology has some sort of problems/vulnerabilities/security flaws - it will result in lost money.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633134519/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633151115",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4451#issuecomment-1633151115",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451",
    "id": 1633151115,
    "node_id": "IC_kwDOA9tCBs5hV-iL",
    "user": {
      "login": "izcoser",
      "id": 76838137,
      "node_id": "MDQ6VXNlcjc2ODM4MTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/76838137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izcoser",
      "html_url": "https://github.com/izcoser",
      "followers_url": "https://api.github.com/users/izcoser/followers",
      "following_url": "https://api.github.com/users/izcoser/following{/other_user}",
      "gists_url": "https://api.github.com/users/izcoser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izcoser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izcoser/subscriptions",
      "organizations_url": "https://api.github.com/users/izcoser/orgs",
      "repos_url": "https://api.github.com/users/izcoser/repos",
      "events_url": "https://api.github.com/users/izcoser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izcoser/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-12T20:18:14Z",
    "updated_at": "2023-07-12T20:18:14Z",
    "author_association": "NONE",
    "body": "> not possible to guarantee that all wallet developers in the future will always solve this problem\r\n\r\nNot a problem, people are free to choose a wallet that solves the problem.\r\nHow much does it cost for a dev to add a check for that in his wallet? An insignificant amount compared to what users would collectively pay in fees for that require statement.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633151115/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633161118",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4451#issuecomment-1633161118",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451",
    "id": 1633161118,
    "node_id": "IC_kwDOA9tCBs5hWA-e",
    "user": {
      "login": "Dexaran",
      "id": 26142412,
      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dexaran",
      "html_url": "https://github.com/Dexaran",
      "followers_url": "https://api.github.com/users/Dexaran/followers",
      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
      "repos_url": "https://api.github.com/users/Dexaran/repos",
      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-12T20:24:35Z",
    "updated_at": "2023-07-12T20:24:35Z",
    "author_association": "NONE",
    "body": "We can solve the problem on the standard level and it will ACTUALLY solve the problem.\r\n\r\nWhat I'm proposing here is to *mitigate* the problem with a better reference implementation and highlighting danger areas in the description and documentation of OpenZeppelin contracts. It WILL help to some degree.\r\n\r\nSaying \"everything is fine, let's do nothing and hope wallet devs will solve the problem\" WILL NOT solve the problem as you can see - we did it in 2017 and the amount of lost tokens grew from $4M to $30M.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633161118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633190768",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4451#issuecomment-1633190768",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451",
    "id": 1633190768,
    "node_id": "IC_kwDOA9tCBs5hWINw",
    "user": {
      "login": "izcoser",
      "id": 76838137,
      "node_id": "MDQ6VXNlcjc2ODM4MTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/76838137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izcoser",
      "html_url": "https://github.com/izcoser",
      "followers_url": "https://api.github.com/users/izcoser/followers",
      "following_url": "https://api.github.com/users/izcoser/following{/other_user}",
      "gists_url": "https://api.github.com/users/izcoser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izcoser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izcoser/subscriptions",
      "organizations_url": "https://api.github.com/users/izcoser/orgs",
      "repos_url": "https://api.github.com/users/izcoser/repos",
      "events_url": "https://api.github.com/users/izcoser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izcoser/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-12T20:44:04Z",
    "updated_at": "2023-07-12T20:44:04Z",
    "author_association": "NONE",
    "body": "How much is 30M as a percentage of all transaction volume? Does it justify making things more expensive for everyone else?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633190768/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633316569",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4451#issuecomment-1633316569",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451",
    "id": 1633316569,
    "node_id": "IC_kwDOA9tCBs5hWm7Z",
    "user": {
      "login": "sgitt-vassky",
      "id": 30172932,
      "node_id": "MDQ6VXNlcjMwMTcyOTMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/30172932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgitt-vassky",
      "html_url": "https://github.com/sgitt-vassky",
      "followers_url": "https://api.github.com/users/sgitt-vassky/followers",
      "following_url": "https://api.github.com/users/sgitt-vassky/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgitt-vassky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgitt-vassky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgitt-vassky/subscriptions",
      "organizations_url": "https://api.github.com/users/sgitt-vassky/orgs",
      "repos_url": "https://api.github.com/users/sgitt-vassky/repos",
      "events_url": "https://api.github.com/users/sgitt-vassky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgitt-vassky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-12T23:06:03Z",
    "updated_at": "2023-07-12T23:06:03Z",
    "author_association": "NONE",
    "body": "are we seriously discussing if 30M loss are a problem or not? if it would be stolen by hackers nobody will question if they needed to prevent it or not",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633316569/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633394049",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4451#issuecomment-1633394049",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451",
    "id": 1633394049,
    "node_id": "IC_kwDOA9tCBs5hW52B",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-13T01:11:33Z",
    "updated_at": "2023-07-13T01:11:33Z",
    "author_association": "MEMBER",
    "body": "We can improve documentation, but the two technical solutions that were proposed are not viable.\r\n\r\n1. There is no way we can add `require(!isContract(to))` in the `transfer` function. This would make the `transfer` function stop working when transfering tokens to smart contract wallets.\r\n2. I would love to provide a \"rescue\" function that works out of the box, but such a function needs to ensure it doesn't allow stealing tokens that actually belong to the protocol. The example implementation provided does not guarantee that at all.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633394049/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633421494",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4451#issuecomment-1633421494",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4451",
    "id": 1633421494,
    "node_id": "IC_kwDOA9tCBs5hXAi2",
    "user": {
      "login": "izcoser",
      "id": 76838137,
      "node_id": "MDQ6VXNlcjc2ODM4MTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/76838137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izcoser",
      "html_url": "https://github.com/izcoser",
      "followers_url": "https://api.github.com/users/izcoser/followers",
      "following_url": "https://api.github.com/users/izcoser/following{/other_user}",
      "gists_url": "https://api.github.com/users/izcoser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izcoser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izcoser/subscriptions",
      "organizations_url": "https://api.github.com/users/izcoser/orgs",
      "repos_url": "https://api.github.com/users/izcoser/repos",
      "events_url": "https://api.github.com/users/izcoser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izcoser/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-13T01:55:59Z",
    "updated_at": "2023-07-13T01:55:59Z",
    "author_association": "NONE",
    "body": "Well remembered. Smart contract wallets are pretty much going to become the standard in the future, one more reason why 1. is terrible.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633421494/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
