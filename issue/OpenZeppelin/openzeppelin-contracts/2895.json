{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2895",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2895/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2895/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2895/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2895",
  "id": 1013811644,
  "node_id": "I_kwDOA9tCBs48bYm8",
  "number": 2895,
  "title": "Clone factory returns teh same address even at different function call",
  "user": {
    "login": "israel-gonzalezmedina",
    "id": 74623552,
    "node_id": "MDQ6VXNlcjc0NjIzNTUy",
    "avatar_url": "https://avatars.githubusercontent.com/u/74623552?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/israel-gonzalezmedina",
    "html_url": "https://github.com/israel-gonzalezmedina",
    "followers_url": "https://api.github.com/users/israel-gonzalezmedina/followers",
    "following_url": "https://api.github.com/users/israel-gonzalezmedina/following{/other_user}",
    "gists_url": "https://api.github.com/users/israel-gonzalezmedina/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/israel-gonzalezmedina/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/israel-gonzalezmedina/subscriptions",
    "organizations_url": "https://api.github.com/users/israel-gonzalezmedina/orgs",
    "repos_url": "https://api.github.com/users/israel-gonzalezmedina/repos",
    "events_url": "https://api.github.com/users/israel-gonzalezmedina/events{/privacy}",
    "received_events_url": "https://api.github.com/users/israel-gonzalezmedina/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-10-01T22:28:29Z",
  "updated_at": "2021-10-03T19:25:37Z",
  "closed_at": "2021-10-03T14:59:59Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "<!-- Briefly describe the issue you're experiencing. Tell us what you were trying to do and what happened instead. -->\r\nI am implementing a clone factory base on the codes from openzeppelin workshop:\r\nhttps://github.com/OpenZeppelin/workshops/tree/master/02-contracts-clone\r\nthe thing is that every time I create a clone it returns the same address. If is a clone it should create a new contract and return at different  address right?\r\n<!-- Remember, this is not a place to ask for help debugging code. For that, we welcome you in the OpenZeppelin Community Forum: https://forum.openzeppelin.com/. -->\r\n\r\n**üíª Environment**\r\nUbuntu\r\nTruffle v5.4.13 (core: 5.4.13)\r\nSolidity - 0.8.7 (solc-js)\r\nNode v10.15.3\r\nWeb3.js v1.5.3\r\n<!-- Tell us what version of OpenZeppelin Contracts you're using, and how you're using it: Truffle, Remix, etc. -->\r\n\r\n**üìù Details**\r\n\r\n<!-- Describe the problem you have been experiencing in more detail. Include as much information as you think is relevant. Keep in mind that transactions can fail for many reasons; context is key here. -->\r\n\r\n**üî¢ Code to reproduce bug**\r\n```\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\r\n\r\nimport \"./MetaCoin.sol\";\r\n\r\ncontract MetaCoinFactory {\r\n\r\n    event UsersContractCreated(address);\t\r\n    address immutable tokenImplementation;\r\n\r\n    constructor(){\r\n        tokenImplementation = address(new MetaCoin());\r\n    }\r\n\r\n    function createToken() public returns (address) {\r\n        address clone = Clones.clone(tokenImplementation);\r\n        MetaCoin(clone).initialize(msg.sender);\r\n\t\temit UsersContractCreated(clone);\r\n        return clone;\r\n    }\r\n   }\r\n\r\n      // SPDX-License-Identifier: GPL-3.0\r\n      pragma solidity ^0.8.4;\r\n      \r\n      import \"./SafeMath.sol\";\r\n      \r\n      contract MetaCoin is SafeMath{\r\n\tmapping (address => uint) public balances;\r\n    bool private initialized;\r\n\r\n\tfunction initialize(address owner) public {\r\n\t\trequire(!initialized, \"Contract instance has already been initialized\");\r\n\t\tbalances[owner] = 100;\r\n\t}\r\n\r\n\tfunction sendCoin(address receiver, uint amount) public {\r\n\t\tbalances[msg.sender] = sub(balances[msg.sender], amount);\r\n\t\tbalances[receiver] = add(balances[receiver], amount);\r\n\t}\r\n\r\n\tfunction getBalance() public view returns (uint){\r\n\t\treturn balances[msg.sender];\r\n\t}\t\r\n    }\r\n```\r\n\r\n<!-- We will be able to better help if you provide a minimal example that triggers the bug. -->\r\n I test it with this code\r\n```\r\n   it(\"should get the address of the child contract\", async () => {\r\n    const metaCoinFactoryInstance = await MetaCoinFactory.deployed();\r\n    let user = accounts[1];\r\n    let address = await metaCoinFactoryInstance.createToken.call({ from: user });\r\n    console.log(address);\r\n    expect(address).contains(\"0x\");\r\n    user = accounts[2];\r\n    let address1 = await metaCoinFactoryInstance.createToken.call({ from: user });\r\n    console.log(address1);\r\n    expect(address1).contains(\"0x\"); \r\n    expect(address).not.equal(address1);  \r\n    });\r\n```",
  "closed_by": {
    "login": "israel-gonzalezmedina",
    "id": 74623552,
    "node_id": "MDQ6VXNlcjc0NjIzNTUy",
    "avatar_url": "https://avatars.githubusercontent.com/u/74623552?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/israel-gonzalezmedina",
    "html_url": "https://github.com/israel-gonzalezmedina",
    "followers_url": "https://api.github.com/users/israel-gonzalezmedina/followers",
    "following_url": "https://api.github.com/users/israel-gonzalezmedina/following{/other_user}",
    "gists_url": "https://api.github.com/users/israel-gonzalezmedina/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/israel-gonzalezmedina/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/israel-gonzalezmedina/subscriptions",
    "organizations_url": "https://api.github.com/users/israel-gonzalezmedina/orgs",
    "repos_url": "https://api.github.com/users/israel-gonzalezmedina/repos",
    "events_url": "https://api.github.com/users/israel-gonzalezmedina/events{/privacy}",
    "received_events_url": "https://api.github.com/users/israel-gonzalezmedina/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2895/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2895/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/932732882",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2895#issuecomment-932732882",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2895",
    "id": 932732882,
    "node_id": "IC_kwDOA9tCBs43mF_S",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-02T11:01:41Z",
    "updated_at": "2021-10-02T11:01:53Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @israel-gonzalezmedina \r\n\r\nWhen you do `createToken.call` you are simulating the result you would be getting is you created a token but you are not actually sending any transaction. [See the relevant doc](https://web3js.readthedocs.io/en/v1.2.11/web3-eth-contract.html#methods-mymethod-call).\r\n\r\nA consequence is that you test doesn't send transactions, doesn't change the blockchain state, and doesn't create a clone.\r\n\r\nFor testing that you should send real transactions with `createToken.send`",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/932732882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/932968406",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2895#issuecomment-932968406",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2895",
    "id": 932968406,
    "node_id": "IC_kwDOA9tCBs43m_fW",
    "user": {
      "login": "israel-gonzalezmedina",
      "id": 74623552,
      "node_id": "MDQ6VXNlcjc0NjIzNTUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/74623552?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/israel-gonzalezmedina",
      "html_url": "https://github.com/israel-gonzalezmedina",
      "followers_url": "https://api.github.com/users/israel-gonzalezmedina/followers",
      "following_url": "https://api.github.com/users/israel-gonzalezmedina/following{/other_user}",
      "gists_url": "https://api.github.com/users/israel-gonzalezmedina/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/israel-gonzalezmedina/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/israel-gonzalezmedina/subscriptions",
      "organizations_url": "https://api.github.com/users/israel-gonzalezmedina/orgs",
      "repos_url": "https://api.github.com/users/israel-gonzalezmedina/repos",
      "events_url": "https://api.github.com/users/israel-gonzalezmedina/events{/privacy}",
      "received_events_url": "https://api.github.com/users/israel-gonzalezmedina/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-03T14:59:59Z",
    "updated_at": "2021-10-03T14:59:59Z",
    "author_association": "NONE",
    "body": "I am sorry. You are right. Kind of embarrassing.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/932968406/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/933010940",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2895#issuecomment-933010940",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2895",
    "id": 933010940,
    "node_id": "IC_kwDOA9tCBs43nJ38",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-03T19:25:37Z",
    "updated_at": "2021-10-03T19:25:37Z",
    "author_association": "COLLABORATOR",
    "body": "Don't worry, we all make this kind of mistake at some point.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/933010940/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
