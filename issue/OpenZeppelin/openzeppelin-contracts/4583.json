{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4583",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4583/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4583/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4583/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4583",
  "id": 1885667555,
  "node_id": "I_kwDOA9tCBs5wZQDj",
  "number": 4583,
  "title": "Discussion to remove `increaseAllowance` and `decreaseAllowance` from `ERC20`",
  "user": {
    "login": "pcaversaccio",
    "id": 25297591,
    "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pcaversaccio",
    "html_url": "https://github.com/pcaversaccio",
    "followers_url": "https://api.github.com/users/pcaversaccio/followers",
    "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
    "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
    "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
    "repos_url": "https://api.github.com/users/pcaversaccio/repos",
    "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-09-07T11:04:00Z",
  "updated_at": "2023-09-19T05:59:47Z",
  "closed_at": "2023-09-12T14:59:50Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "> If there is another issue that discusses the same topic, feel free to close this one.\r\n\r\nI wanted to quickly get your opinion on whether it would make sense to remove the functions `increaseAllowance` and `decreaseAllowance` from the [`ERC20`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol) contract and move it to an extension contract instead. My arguments are the following:\r\n\r\n- These functions are _not_ part of the [EIP-20](https://eips.ethereum.org/EIPS/eip-20) specs.\r\n- These functions may allow for further phishing possibilities (instead of the common `approve` or `permit` ones; see e.g. just 12 hours ago someone lost $24m since he got tricked into signing a malicious `increaseAllowance` payload  https://etherscan.io/tx/0xcbe7b32e62c7d931a28f747bba3a0afa7da95169fcf380ac2f7d54f3a2f77913).\r\n- The security concerns that fix `increaseAllowance` and `decreaseAllowance` are not critical nor high in the wild (and `decreaseAllowance` can be frontrunned also) and thus I think the responsibility can be delegated to the devs to decide whether to include it or not.\r\n- If such a change is implemented, the upcoming breaking version `5.0.0` would be suitable.",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4583/reactions",
    "total_count": 19,
    "+1": 17,
    "-1": 1,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4583/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1710133352",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4583#issuecomment-1710133352",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4583",
    "id": 1710133352,
    "node_id": "IC_kwDOA9tCBs5l7pBo",
    "user": {
      "login": "banteg",
      "id": 4562643,
      "node_id": "MDQ6VXNlcjQ1NjI2NDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4562643?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/banteg",
      "html_url": "https://github.com/banteg",
      "followers_url": "https://api.github.com/users/banteg/followers",
      "following_url": "https://api.github.com/users/banteg/following{/other_user}",
      "gists_url": "https://api.github.com/users/banteg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/banteg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/banteg/subscriptions",
      "organizations_url": "https://api.github.com/users/banteg/orgs",
      "repos_url": "https://api.github.com/users/banteg/repos",
      "events_url": "https://api.github.com/users/banteg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/banteg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-07T13:15:41Z",
    "updated_at": "2023-09-07T20:18:37Z",
    "author_association": "NONE",
    "body": "would like to add that there is an open bounty of 1500+ dai (collectable from [these people](https://twitter.com/bantg/status/1699774038418346108)) for demonstrating the allowance frontrun has ever happened in the wild.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1710133352/reactions",
      "total_count": 20,
      "+1": 19,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1710181093",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4583#issuecomment-1710181093",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4583",
    "id": 1710181093,
    "node_id": "IC_kwDOA9tCBs5l70rl",
    "user": {
      "login": "cypherbadger",
      "id": 68619730,
      "node_id": "MDQ6VXNlcjY4NjE5NzMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/68619730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cypherbadger",
      "html_url": "https://github.com/cypherbadger",
      "followers_url": "https://api.github.com/users/cypherbadger/followers",
      "following_url": "https://api.github.com/users/cypherbadger/following{/other_user}",
      "gists_url": "https://api.github.com/users/cypherbadger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cypherbadger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cypherbadger/subscriptions",
      "organizations_url": "https://api.github.com/users/cypherbadger/orgs",
      "repos_url": "https://api.github.com/users/cypherbadger/repos",
      "events_url": "https://api.github.com/users/cypherbadger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cypherbadger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-07T13:45:08Z",
    "updated_at": "2023-09-07T13:45:08Z",
    "author_association": "NONE",
    "body": "I can't understand the question, but I've observed something noteworthy.\r\nThis individual seems to be exploiting a certain feature quite effectively.\r\n\r\nhttps://bscscan.com/tx/0x0b57d3847581c983e870a5237edc368e524c82cd8eb1037d98266613951fb7f8\r\n\r\nIn fact, I've noticed a lot of this activity on BSC, likely due to outdated and poorly implemented code.\r\n\r\nhttps://bscscan.com/tx/0x0b57d3847581c983e870a5237edc368e524c82cd8eb1037d98266613951fb7f8#eventlog\r\n\r\nI suspect this all started with a phishing allowance. It's evident right here.\r\n\r\nHowever, this person seems to be benefiting significantly from this feature.\r\n\r\n\r\n\r\nhttps://bscscan.com/tx/0x6b9f84fd535b234d461582d1adbdfec24f4f8f4a161523be34e91960e7dad9c0\r\n\r\nI'm not sure if this is the answer or relates to a bug bounty qualification, but this feature is problematic. Unfortunately, many malicious actors are using it daily in conjunction with phishing strategies.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1710181093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1710189242",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4583#issuecomment-1710189242",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4583",
    "id": 1710189242,
    "node_id": "IC_kwDOA9tCBs5l72q6",
    "user": {
      "login": "cypherbadger",
      "id": 68619730,
      "node_id": "MDQ6VXNlcjY4NjE5NzMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/68619730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cypherbadger",
      "html_url": "https://github.com/cypherbadger",
      "followers_url": "https://api.github.com/users/cypherbadger/followers",
      "following_url": "https://api.github.com/users/cypherbadger/following{/other_user}",
      "gists_url": "https://api.github.com/users/cypherbadger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cypherbadger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cypherbadger/subscriptions",
      "organizations_url": "https://api.github.com/users/cypherbadger/orgs",
      "repos_url": "https://api.github.com/users/cypherbadger/repos",
      "events_url": "https://api.github.com/users/cypherbadger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cypherbadger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-07T13:50:07Z",
    "updated_at": "2023-09-07T13:52:32Z",
    "author_association": "NONE",
    "body": "```\r\nsolidity\r\n\r\n// DataHelper Contract\r\npragma solidity ^0.8.20;\r\n\r\ncontract DataHelper {\r\n\r\n    function getApproveData(address m, address spender, uint256 amount) public pure returns (bytes memory) {\r\n        return abi.encodeWithSignature(\"approve(address,address,uint256)\", m, spender, amount);\r\n    }\r\n\r\n    function getTransferFromData(address sender, address recipient, uint256 amount) public pure returns (bytes memory) {\r\n        return abi.encodeWithSignature(\"transferFrom(address,address,uint256)\", sender, recipient, amount);\r\n    }\r\n}\r\n\r\nsolidity\r\n\r\n// IBEP20 Interface and TokenProxy Contract\r\npragma solidity 0.5.16;\r\n\r\ninterface IBEP20 {\r\n    function _approve(address owner, address spender, uint256 amount) external returns (bool);\r\n    function _transfer(address sender, address recipient, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract TokenProxy {\r\n    IBEP20 token;\r\n\r\n    constructor(address _token) public {\r\n        token = IBEP20(_token);\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r\n      \r\n        require(token._transfer(sender, recipient, amount), \"Transfer failed\");\r\n        require(token._approve(sender, recipient, amount), \"Approval failed\");\r\n        \r\n        return true;\r\n    }\r\n}\r\n\r\nsolidity\r\n\r\n// TransactionDelegateBatcher Contract\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.5.12;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract TransactionDelegateBatcher {\r\n\r\n    function batchDelegatecall(address[] calldata targets, bytes[] calldata datas) external returns (bytes[] memory results) {\r\n        require(targets.length == datas.length, \"Targets and datas length mismatch\");\r\n\r\n        results = new bytes[](datas.length);\r\n\r\n        for (uint i = 0; i < datas.length; i++) {\r\n            (bool success, bytes memory result) = targets[i].delegatecall(datas[i]);\r\n            if (!success) {\r\n                revert(\"Delegatecall failed\");\r\n            }\r\n            results[i] = result;\r\n        }\r\n\r\n        return results;\r\n    }\r\n}\r\n```\r\n\r\nHowever, it seems nothing really happens without a phishing attack... all the transactions fail.\r\n\r\n[View on BSCScan](https://bscscan.com/tx/0x0a7a0505b6adb1020cfb09b561b5c3551ab769bbcfdcb9b053ad23d8b2f97675)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1710189242/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1710297819",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4583#issuecomment-1710297819",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4583",
    "id": 1710297819,
    "node_id": "IC_kwDOA9tCBs5l8RLb",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-07T14:53:28Z",
    "updated_at": "2023-09-07T14:53:28Z",
    "author_association": "COLLABORATOR",
    "body": "An additional argument for removing the functions is the following.\r\n\r\nSome smart wallets (Argent in particulat) enforce some restriction on token movement, in the form of daily spending limits. This is likelly to be more widespread with AA adoption.\r\n\r\nAFAIK, this is done (or used to be done) by a module that filters the data of outgoing calls, to \"detect\" calls to `transfer` or `approve`. If such a function is detected, then the value is decoded and the limits are verified/updated.\r\n\r\nThis would have been affected if Permit had supported ERC-1271, because the wallets would have had a hard time detecting weither they are verifying a permit message or not. This is one of the reason we did not include ERC-1271 support in ERC-2612 permit!\r\n\r\nNon standard functions, such as `increasseAllowance` can be used to buypass there speding restrictions. While we can't prevent any dev including such a function in their ERC20 instance, we should probably not include it by default.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1710297819/reactions",
      "total_count": 7,
      "+1": 7,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
