{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3800",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3800/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3800/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3800/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3800",
  "id": 1435269397,
  "node_id": "I_kwDOA9tCBs5VjHkV",
  "number": 3800,
  "title": "Preventing vault price reset in ERC4626",
  "user": {
    "login": "daejunpark",
    "id": 5491770,
    "node_id": "MDQ6VXNlcjU0OTE3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5491770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/daejunpark",
    "html_url": "https://github.com/daejunpark",
    "followers_url": "https://api.github.com/users/daejunpark/followers",
    "following_url": "https://api.github.com/users/daejunpark/following{/other_user}",
    "gists_url": "https://api.github.com/users/daejunpark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/daejunpark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/daejunpark/subscriptions",
    "organizations_url": "https://api.github.com/users/daejunpark/orgs",
    "repos_url": "https://api.github.com/users/daejunpark/repos",
    "events_url": "https://api.github.com/users/daejunpark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/daejunpark/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4976342503,
      "node_id": "LA_kwDOA9tCBs8AAAABKJz15w",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/area:%20erc4626",
      "name": "area: erc4626",
      "color": "E7DA84",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/14",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/14",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/14/labels",
    "id": 8383880,
    "node_id": "MI_kwDOA9tCBs4Af-2I",
    "number": 14,
    "title": "4.9",
    "description": "",
    "creator": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 24,
    "state": "closed",
    "created_at": "2022-09-05T16:36:05Z",
    "updated_at": "2023-05-16T01:45:32Z",
    "due_on": null,
    "closed_at": "2023-05-16T01:45:32Z"
  },
  "comments": 5,
  "created_at": "2022-11-03T21:18:21Z",
  "updated_at": "2023-02-21T16:37:21Z",
  "closed_at": "2023-02-21T16:37:20Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n<!-- Is your feature request related to a specific problem? Is it just a crazy idea? Tell us about it! -->\r\n\r\nNew security feature recommendation preventing the ERC4626 vault price reset.\r\n\r\n**üìù Details**\r\n<!-- Please describe your feature request in detail. -->\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contracts Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/CONTRIBUTING.md -->\r\n\r\nI'm concerned with the _possibility_ of ERC4626 vaults being emptied during their lifecycle. This is because, once a vault is emptied, the conversion rate of shares (or the share price) is reset to the initial value (which is currently 1:1 by default). The change in the share price could be significant especially when the vault has generated a high yield until the reset (in which case the share price will be drastically decreased).\r\n\r\nThe sudden change in share price (especially the big price drop) could be a problem and may be exploited in some ecosystem where the vault is used as price oracle for other protocols.\r\n\r\nA potential exploit scenario is as follows:\r\n1. Adversaries create a vault, deposit a good amount of initial assets, and inflate the share price by \"donating\" more assets or generating a (fake) yield. (Say, the initial deposit is 10 ETH and the fake yield is 40 ETH, thus the inflated price is 5 = 50/10.)\r\n1. They register their vault for some lending protocols that admit arbitrary ERC4626 vault tokens as collateral and use the vault share's conversion rate as price oracle for their TWAP.\r\n1. Then, they wait until the lending protocols' TWAP fully reflects the inflated price.\r\n1. Then, they atomically withdraw all the assets from the vault (which immediately resets the conversion rate to the initial value 1:1), mint a lot of shares with the initial rate 1:1, and use them as collateral to borrow much more from the lending protocols while their TWAP is still high reflecting the inflated price. (Say, they mint 100 shares by depositing only 100 ETH after the vault is emptied, and use the 100 shares as collateral to borrow 250 ETH (assuming 200% collateralization ratio). This is possible because the 100 shares is valued at ~500 ETH at the moment since the TWAP is still (close to) 5 because it doesn't quickly reflect the sudden price drop. Then, the adversaries walk away with making a profit of 150 ETH.)\r\n\r\n**Recommendation**\r\n\r\nYou may add a requirement that, once a vault is initialized (and funded), the totalSupply must remain to be greater than a certain threshold (say 1 gwei = 10^9). This way, the conversion rate will be kept being track of, even in the case that (almost) all the shares have been redeemed.\r\n\r\nThis requirement could be made optional if it is too restrictive for some use cases.\r\n\r\n**Remark**\r\n\r\nNote that the above requirement implies the minimum initial deposit being greater than the threshold, which can also mitigate the price inflation front-running attack issue #3706.\r\n\r\nAlso note that step (1) in the above scenario is feasible even if the vault explicitly tracks of totalAssets, since the adversaries can still utilize the yield generating mechanism to increase totalAssets legitimately (in a similar way as described in https://www.rileyholterhus.com/writing/bunni by @rholterhus).\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3800/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3800/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1302706324",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3800#issuecomment-1302706324",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3800",
    "id": 1302706324,
    "node_id": "IC_kwDOA9tCBs5NpbiU",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-03T21:42:18Z",
    "updated_at": "2022-11-03T21:43:36Z",
    "author_association": "MEMBER",
    "body": "Thanks, this is interesting and we will consider it along with #3706. (We're actively discussing mitigations for #3706 and will be acting on that in the next 2 weeks.)\r\n\r\nIn the exploit described the adversary is the vault deployer so even if we implement a mitigation for this issue it's still something that ERC4626 integrators should consider in their threat model, as the adversary can simply use a non-OpenZeppelin implementation. An important exception for this is if the vault deployer is a factory (the vulnerable contract might even automatically whitelist all vaults created by the factory), in which case the adversary could be a user of the factory and that is something that we would want to protect our users against.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1302706324/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1302711352",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3800#issuecomment-1302711352",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3800",
    "id": 1302711352,
    "node_id": "IC_kwDOA9tCBs5Npcw4",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-03T21:44:38Z",
    "updated_at": "2022-11-03T21:44:38Z",
    "author_association": "MEMBER",
    "body": "Would it be an option to preserve the prior share price after the vault is emptied, instead of resetting to 1:1?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1302711352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1302724014",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3800#issuecomment-1302724014",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3800",
    "id": 1302724014,
    "node_id": "IC_kwDOA9tCBs5Npf2u",
    "user": {
      "login": "daejunpark",
      "id": 5491770,
      "node_id": "MDQ6VXNlcjU0OTE3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5491770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daejunpark",
      "html_url": "https://github.com/daejunpark",
      "followers_url": "https://api.github.com/users/daejunpark/followers",
      "following_url": "https://api.github.com/users/daejunpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/daejunpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daejunpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daejunpark/subscriptions",
      "organizations_url": "https://api.github.com/users/daejunpark/orgs",
      "repos_url": "https://api.github.com/users/daejunpark/repos",
      "events_url": "https://api.github.com/users/daejunpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daejunpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-03T22:01:17Z",
    "updated_at": "2022-11-03T22:01:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Would it be an option to preserve the prior share price after the vault is emptied, instead of resetting to 1:1?\r\n\r\nI think that could be also an option if the additional storage cost is acceptable.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1302724014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1314831990",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3800#issuecomment-1314831990",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3800",
    "id": 1314831990,
    "node_id": "IC_kwDOA9tCBs5OXr52",
    "user": {
      "login": "urica12",
      "id": 35583648,
      "node_id": "MDQ6VXNlcjM1NTgzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/35583648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/urica12",
      "html_url": "https://github.com/urica12",
      "followers_url": "https://api.github.com/users/urica12/followers",
      "following_url": "https://api.github.com/users/urica12/following{/other_user}",
      "gists_url": "https://api.github.com/users/urica12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/urica12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/urica12/subscriptions",
      "organizations_url": "https://api.github.com/users/urica12/orgs",
      "repos_url": "https://api.github.com/users/urica12/repos",
      "events_url": "https://api.github.com/users/urica12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/urica12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-15T06:24:31Z",
    "updated_at": "2022-11-15T13:58:39Z",
    "author_association": "NONE",
    "body": "Try to debug ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1314831990/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1438782046",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3800#issuecomment-1438782046",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3800",
    "id": 1438782046,
    "node_id": "IC_kwDOA9tCBs5VwhJe",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-21T16:37:20Z",
    "updated_at": "2023-02-21T16:37:20Z",
    "author_association": "MEMBER",
    "body": "Fixed by https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3979.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1438782046/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
