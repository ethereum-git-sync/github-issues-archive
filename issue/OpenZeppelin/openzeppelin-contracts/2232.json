{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2232",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2232/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2232/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2232/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2232",
  "id": 615438332,
  "node_id": "MDU6SXNzdWU2MTU0MzgzMzI=",
  "number": 2232,
  "title": "Override ERC721's _isApprovedOrOwner",
  "user": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-05-10T17:30:13Z",
  "updated_at": "2020-10-13T21:41:45Z",
  "closed_at": "2020-10-13T21:41:44Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "I have a usecase where ERC721 tokenId are smart contract address:\r\n- The owner of the token is the owner of the contract, and has a priviledge access to it (contract knows the registry address and reads ownership from it).\r\n- The owner of the token can transfer the ownership of the contract using ERC721 logic.\r\n\r\nWhat I'd like to add, is to give the possibility for the contract to perform registry operations on \"itself\". The most natural way I see to implement that is to overload `_isApprovedOrOwner`:\r\n\r\n```\r\nfunction _isApprovedOrOwner(address spender, uint256 tokenId) internal view override returns (bool) {\r\n    return ERC721._isApprovedOrOwner(spender, tokenId) || spender == address(uint160(tokenid));\r\n}\r\n```\r\n\r\nUnfortunatelly, this is not possible since `_isApprovedOrOwner` is not virtual.\r\n- Is there a better way to achieve what I'd like to implement using the existing codebase ?\r\n- Otherwize, would you consider making this function virtual ?",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2232/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2232/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/628061590",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2232#issuecomment-628061590",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2232",
    "id": 628061590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODA2MTU5MA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-13T15:19:37Z",
    "updated_at": "2020-05-13T20:40:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello @Amxx, thanks for reporting this!\r\n\r\nThis is the second valid request we've seen for `virtual view` functions (along with https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2154). We made those non-virtual thinking that a) we could always add `virtual` in the future, and b) it'd likely be hard to write an override without having access to the underlying state variables.\r\n\r\nHowever, in both cases we've seen valid alternatives for overrides, where users either delegate part of the implementation to the base contract (like here), o replace it with new behavior altogether. It's likely that we'll include some form of `virtual view` functions in the next release cycle.\r\n\r\nThe only thing that worries me slightly about these is that we'll need to carefuly examine the contracts to make sure that these functions are also used internally in all relevant places, instead of state variables being accessed directly. This would require refactoring some contracts (think `ERC20.balanceOf`), and will likely lead to slightly more expensive code due to how the Solidity optimizer works.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/628061590/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/708025149",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2232#issuecomment-708025149",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2232",
    "id": 708025149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODAyNTE0OQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-13T21:41:44Z",
    "updated_at": "2020-10-13T21:41:44Z",
    "author_association": "MEMBER",
    "body": "Closing in favor of #2154. I'll be collecting over there all the functions that have been requested to be made virtual.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/708025149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
