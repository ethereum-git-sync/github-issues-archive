{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3231",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3231/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3231/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3231/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3231",
  "id": 1155516358,
  "node_id": "I_kwDOA9tCBs5E38fG",
  "number": 3231,
  "title": "claimandDelegate function for compound-style delegation upon token claim",
  "user": {
    "login": "owocki",
    "id": 513929,
    "node_id": "MDQ6VXNlcjUxMzkyOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/513929?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/owocki",
    "html_url": "https://github.com/owocki",
    "followers_url": "https://api.github.com/users/owocki/followers",
    "following_url": "https://api.github.com/users/owocki/following{/other_user}",
    "gists_url": "https://api.github.com/users/owocki/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/owocki/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/owocki/subscriptions",
    "organizations_url": "https://api.github.com/users/owocki/orgs",
    "repos_url": "https://api.github.com/users/owocki/repos",
    "events_url": "https://api.github.com/users/owocki/events{/privacy}",
    "received_events_url": "https://api.github.com/users/owocki/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-03-01T16:01:42Z",
  "updated_at": "2022-03-08T08:35:56Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n<!-- Is your feature request related to a specific problem? Is it just a crazy idea? Tell us about it! -->\r\nGTC is a UNI fork.\r\n\r\nDuring the GTC drop, we enabled people to [delegate upon claim](https://github.com/gitcoinco/governance/blob/d5b71a46fff12d4445ff542f4a3943a0d76b1f1b/contracts/TokenDistributor.sol#L95-L146) which was a really effective way of setting the [initial distribution](https://twitter.com/owocki/status/1398282868741214215) of governance to have high [consent of the governed](https://en.wikipedia.org/wiki/Consent_of_the_governed#:~:text=In%20political%20philosophy%2C%20the%20phrase,that%20political%20power%20is%20exercised.).\r\n\r\nUpon conversation at Martin at ETHDenver, we realized that since the ENS drop did the same thing, this is a common functionality that future drops may want to use, and that therefore it would be a good idea to have a claimandDelegate() function in an upstream OpenZeppelin repo, so that people have this in the future. \r\n\r\n**üìù Details**\r\n<!-- Please describe your feature request in detail. -->\r\nI believe that this would be what would have to happen in the repo.\r\n\r\n1. Write a `claimandDelegate()` function into the repo.\r\n2. Done\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contracts Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/CONTRIBUTING.md -->\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3231/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3231/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1055618159",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3231#issuecomment-1055618159",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3231",
    "id": 1055618159,
    "node_id": "IC_kwDOA9tCBs4-63Rv",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-01T16:21:50Z",
    "updated_at": "2022-03-01T16:21:50Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @owocki \r\n\r\nI did hear about this \"delegate upon claim\" mechanism from the ENS team. This was indeed implemented [in their token](https://etherscan.io/address/0xc18360217d8f7ab5e7c516566761ea12ce7f9d72#code#F15#L59).\r\n\r\nAFAIK, we provide the primitives for it\r\n\r\n- `_delegate(address, address);`\r\n- `_mint(address, uint256);`\r\n- `_transfer(address, address, uint256);`\r\n\r\nIn order to go further, we would be defining a \"claim\" process, with a \"standard\" merkle tree format. IMO this is something that each team may want to customize, and we should \"just\" provide the tools for making that easy, without actually imposing a \"strict\" framework. I would argue that we are providing these tools. Maybe we are missing some, but I'm not sure what we are missing it a \"ready to use\" claim function.\r\n\r\n@frangio What do you think? Should we provide a ERC20MerkleDrop extension, that includes a `_delegate` call during the claim call ?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1055618159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1055620632",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3231#issuecomment-1055620632",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3231",
    "id": 1055620632,
    "node_id": "IC_kwDOA9tCBs4-634Y",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-01T16:24:24Z",
    "updated_at": "2022-03-02T08:57:01Z",
    "author_association": "COLLABORATOR",
    "body": "I just noticed that unlike ENS, your code uses a TokenDistributor that is NOT the token itself.\r\n\r\nFor these cases, you can either use a signed delegation message by the user ... or have the token expose a permissioned access to `_delegate` that only the distributor can call (I think this is not as nice in terms of security)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1055620632/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1061388158",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3231#issuecomment-1061388158",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3231",
    "id": 1061388158,
    "node_id": "IC_kwDOA9tCBs4_Q39-",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-08T04:15:03Z",
    "updated_at": "2022-03-08T04:15:03Z",
    "author_association": "MEMBER",
    "body": "Thanks for the suggestion @owocki! I thought the ENS distribution was really clever in how it guided users to set a delegate during claiming. I didn't know GTC had done the same thing previously.\r\n\r\nAs a side note, in my experience a big part of the ENS claim experience was the UI, which is not something OpenZeppelin Contracts can directly help with, but [OpenZeppelin Subgraphs](https://github.com/OpenZeppelin/openzeppelin-subgraphs/) definitely may be able to provide the building blocks. @Amxx Is there a way to query \"delegates\" sorted by delegated voting power?\r\n\r\nRegarding the contracts, I agree with @Amxx that we don't want to implement a very specific claim process that may not apply well to diverse user needs. But if there is a straightforward way to implement a claim process like this, and it looks like there is demand for this sort of contract, I think we should look into implementing it.\r\n\r\n> we should \"just\" provide the tools for making that easy\r\n\r\nThe question is if the tools we provide now make it easy enough. `MerkleProof` is very general, and there may be room for a more ready-made solution.\r\n\r\nI find the ENS model of building the claim function into the token itself nice and simple. Interestingly it doesn't use `_mint` but `_transfer` of a number of tokens minted at deployment (which are even sweeped away later). I wonder if this is a measure to limit the impact of a potential problem with the claim code. Separating the claiming concern in its own contract may be considered better design. Personally I'm not decided.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1061388158/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1061532747",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3231#issuecomment-1061532747",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3231",
    "id": 1061532747,
    "node_id": "IC_kwDOA9tCBs4_RbRL",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-08T08:35:55Z",
    "updated_at": "2022-03-08T08:35:55Z",
    "author_association": "COLLABORATOR",
    "body": "I don't have a live example to show, but using @openzeppelin/subgraph's \"voting\" module, the following query is possible\r\n\r\n```\r\nVotingContract(id: \"<address-of-the-contract-in-lowercase>\") {\r\n    delegation(first: 100, orderBy: \"value\", orderDirection: \"desc\") { // 100 biggest delegates\r\n        value // ‚Üê number of \"votes\" (wei)\r\n        account {\r\n            id // ‚Üê address of the delegate\r\n            delegationTo { // ‚Üê loop over all delegation to this delegate\r\n                delegator {\r\n                  id // ‚Üê address of the delegator\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1061532747/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
