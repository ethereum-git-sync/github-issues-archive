{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3318",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3318/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3318/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3318/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3318",
  "id": 1192207203,
  "node_id": "I_kwDOA9tCBs5HD6Nj",
  "number": 3318,
  "title": "Question about Non-zero address check for from and to address in different tokens.",
  "user": {
    "login": "slendermaan",
    "id": 21294029,
    "node_id": "MDQ6VXNlcjIxMjk0MDI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/21294029?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/slendermaan",
    "html_url": "https://github.com/slendermaan",
    "followers_url": "https://api.github.com/users/slendermaan/followers",
    "following_url": "https://api.github.com/users/slendermaan/following{/other_user}",
    "gists_url": "https://api.github.com/users/slendermaan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/slendermaan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/slendermaan/subscriptions",
    "organizations_url": "https://api.github.com/users/slendermaan/orgs",
    "repos_url": "https://api.github.com/users/slendermaan/repos",
    "events_url": "https://api.github.com/users/slendermaan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/slendermaan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-04-04T19:16:54Z",
  "updated_at": "2022-12-02T21:08:17Z",
  "closed_at": "2022-12-02T21:08:17Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**🧐 Motivation**\r\nWe all know that the ERC20 721 777 1155 contracts are describing and recording **burn** operation through the event to=0x0.\r\n\r\nAnd to prevent incomplete implementations by developers that would lead to some transfers also having burn functionality, leading to the risk of misleading off-chain facilities and balance supply (if it exists). openzeppelin team has restricted to and from not to be 0 addresses, which all makes sense.\r\n\r\nBut I'm not quite sure why from is also checked in this process, because as long as the 0x0 to address is checked. 0x0 from address is naturally required in the balance check.\r\n\r\nAnd I see that ERC20 ERC721 ERC1155 and ERC777 do not use the same standard Non-0x0 check for to and from address, some will ensure that both from and to are not 0 addresses, while some will not(ERC1155). Some will check in the bottom transfer method, while others will not(ERC777).\r\n\r\n**📝 Details**\r\nTherefore, I think there are the following optimization possibilities\r\n\r\n1. Should ERC20, ERC721, ERC1155 and ERC77 be unified in the to and from checks, and if the check for from not being 0 is unnecessary, should all of them be removed? if the check for from not being 0 is necessary, should ERC1155‘s None-0x0 from-address check be added?\r\n\r\n2. Should the check for from and to not be 0 be done in the bottom _move() method in ERC777 to better regulate the development of library users and provide higher security.\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3318/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3318/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1091928503",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3318#issuecomment-1091928503",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3318",
    "id": 1091928503,
    "node_id": "IC_kwDOA9tCBs5BFYG3",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-07T16:09:58Z",
    "updated_at": "2022-04-07T16:10:27Z",
    "author_association": "MEMBER",
    "body": "What do you mean by \"bottom\" methods?\r\n\r\n> some will not(ERC1155)\r\n\r\nWe noticed this recently and plan to add the checks we're missing for consistency.\r\n\r\nOne issue we have is that we want to check both `from` and `to` in the internal functions to see that they are not 0, because users can call the internal functions directly. This means that in the external function, even if we know that `from = msg.sender` is not 0, because we call the internal functions we will perform the check anyway.\r\n\r\nWe would appreciate benchmarks to understand if this is something worth reviewing. How much gas is saved if the checks are removed?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1091928503/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
