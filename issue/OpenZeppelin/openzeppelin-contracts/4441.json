{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4441",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4441/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4441/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4441/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4441",
  "id": 1795884412,
  "node_id": "I_kwDOA9tCBs5rCwV8",
  "number": 4441,
  "title": "ERC20Vesting: vesting functionality for ERC20 tokens",
  "user": {
    "login": "Keref",
    "id": 10669019,
    "node_id": "MDQ6VXNlcjEwNjY5MDE5",
    "avatar_url": "https://avatars.githubusercontent.com/u/10669019?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Keref",
    "html_url": "https://github.com/Keref",
    "followers_url": "https://api.github.com/users/Keref/followers",
    "following_url": "https://api.github.com/users/Keref/following{/other_user}",
    "gists_url": "https://api.github.com/users/Keref/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Keref/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Keref/subscriptions",
    "organizations_url": "https://api.github.com/users/Keref/orgs",
    "repos_url": "https://api.github.com/users/Keref/repos",
    "events_url": "https://api.github.com/users/Keref/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Keref/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2023-07-10T03:53:36Z",
  "updated_at": "2023-07-28T12:47:09Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nEscrowed tokens are omnipresent in DeFi, as governance, airdrops and liquidity mining use vesting to control dumping. I suggest adding an ERC20Vesting extension that easily allows vesting tokens.\r\n\r\n**üìù Details**\r\n\r\nVesting can be used in particular in combination with ERC20Wrapper.\r\nThe vesting schedule is linear by default but can be overriden (we use some exponential for our own vesting schedule).\r\nThe logic when withdrawing isn't fixed: the extension returns the amount already vested and the amount remaining, up to the implementation to choose whether to allow early unlock and which penalty to apply.\r\n\r\nI think it would make sense to add some additional virtual function to handle the data field, or to modify a schedule (eg, to allow partial withdrawal).\r\nThe function names differ from VestingWallet, maybe it would make sense to harmonize those.\r\nPlease give me feedback!\r\n\r\nDraft implementation: [https://github.com/Keref/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/ERC20Vesting.sol](https://github.com/Keref/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/ERC20Vesting.sol)",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4441/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4441/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1628619427",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4441#issuecomment-1628619427",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4441",
    "id": 1628619427,
    "node_id": "IC_kwDOA9tCBs5hEsKj",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-10T09:53:44Z",
    "updated_at": "2023-07-28T12:47:09Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @Keref \r\n\r\nAre you familiar with our [VestingWallet](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/finance/VestingWallet.sol) ? Can you tell us more about the usecases where it does not work for you ?\r\n\r\nMy first thought is that the vesting should be handled by a dedicated contract, and not by the token itself.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1628619427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1629025202",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4441#issuecomment-1629025202",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4441",
    "id": 1629025202,
    "node_id": "IC_kwDOA9tCBs5hGPOy",
    "user": {
      "login": "Keref",
      "id": 10669019,
      "node_id": "MDQ6VXNlcjEwNjY5MDE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/10669019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Keref",
      "html_url": "https://github.com/Keref",
      "followers_url": "https://api.github.com/users/Keref/followers",
      "following_url": "https://api.github.com/users/Keref/following{/other_user}",
      "gists_url": "https://api.github.com/users/Keref/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Keref/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Keref/subscriptions",
      "organizations_url": "https://api.github.com/users/Keref/orgs",
      "repos_url": "https://api.github.com/users/Keref/repos",
      "events_url": "https://api.github.com/users/Keref/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Keref/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-10T13:58:54Z",
    "updated_at": "2023-07-10T13:58:54Z",
    "author_association": "NONE",
    "body": "Hi, yes I'm aware. The vesting wallet is created to vest for 1 unique beneficiary provided in the constructor. This makes it only usable for initial distribution of tokens for, say, a VC who bought tokens early.\r\n\r\nWhat I'm proposing is an ERC20 extension that can be added to any token. It can be used to escrow governance tokens, in my case the esToken allows depositing Token, also extends a number of governance functions, and uses ERC20Vesting (we prefer vesting rather than the ve- model).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1629025202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1631774540",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4441#issuecomment-1631774540",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4441",
    "id": 1631774540,
    "node_id": "IC_kwDOA9tCBs5hQudM",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-12T02:54:56Z",
    "updated_at": "2023-07-12T02:54:56Z",
    "author_association": "MEMBER",
    "body": "The linked contract says its an extension of ERC20 but the contract doesn't extend ERC20 in any way. Can you clarify how the interaction is supposed to work with ERC20 balances?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1631774540/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1632143202",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4441#issuecomment-1632143202",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4441",
    "id": 1632143202,
    "node_id": "IC_kwDOA9tCBs5hSIdi",
    "user": {
      "login": "Keref",
      "id": 10669019,
      "node_id": "MDQ6VXNlcjEwNjY5MDE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/10669019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Keref",
      "html_url": "https://github.com/Keref",
      "followers_url": "https://api.github.com/users/Keref/followers",
      "following_url": "https://api.github.com/users/Keref/following{/other_user}",
      "gists_url": "https://api.github.com/users/Keref/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Keref/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Keref/subscriptions",
      "organizations_url": "https://api.github.com/users/Keref/orgs",
      "repos_url": "https://api.github.com/users/Keref/repos",
      "events_url": "https://api.github.com/users/Keref/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Keref/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-12T09:13:10Z",
    "updated_at": "2023-07-12T09:13:10Z",
    "author_association": "NONE",
    "body": "Indeed good feedback, the balance verification was in my mock contract. I [changed ERC20Vesting](https://github.com/Keref/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/ERC20Vesting.sol) to extend ERC20, and add some vesting function with balance check.\r\n\r\nA simple use case would be to extend ERC20Wrapper and ERC20Vesting, and to only allow withdrawal of vesting tokens (e.g only if vesting is over, or could burn the remaining like Radiant Protocol does).\r\n\r\nIn our case, our esToken extends ERC20Wrapper, ERC20Vesting, ERC20Votes, and tokens can be deposited for governance and rewards, with a 3 months unlock period (code isn't open source but will be soon, can share the link here when it is).\r\n\r\nIt can also extend a masterchef-like contract so that withdrawal takes 1 week.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1632143202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633189636",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4441#issuecomment-1633189636",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4441",
    "id": 1633189636,
    "node_id": "IC_kwDOA9tCBs5hWH8E",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-12T20:43:03Z",
    "updated_at": "2023-07-12T20:43:03Z",
    "author_association": "MEMBER",
    "body": "Are the tokens under vesting supposed to be transferable?\r\n\r\nWe need a clear description of what the feature is supposed to be so we can evaluate if it's a right fit for the library. If there is something like this out there please share the reference.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1633189636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1635306786",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4441#issuecomment-1635306786",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4441",
    "id": 1635306786,
    "node_id": "IC_kwDOA9tCBs5heM0i",
    "user": {
      "login": "Keref",
      "id": 10669019,
      "node_id": "MDQ6VXNlcjEwNjY5MDE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/10669019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Keref",
      "html_url": "https://github.com/Keref",
      "followers_url": "https://api.github.com/users/Keref/followers",
      "following_url": "https://api.github.com/users/Keref/following{/other_user}",
      "gists_url": "https://api.github.com/users/Keref/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Keref/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Keref/subscriptions",
      "organizations_url": "https://api.github.com/users/Keref/orgs",
      "repos_url": "https://api.github.com/users/Keref/repos",
      "events_url": "https://api.github.com/users/Keref/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Keref/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-14T05:43:56Z",
    "updated_at": "2023-07-14T05:48:05Z",
    "author_association": "NONE",
    "body": "Here's an attempt to clarify all:\r\nERC20Vesting is an ERC20 extension that allows controlling token flows through vesting. Vesting unlocks one or more functions (withdrawal, transfer, mint...)\r\n\r\n### Functionalities:\r\n- Restricted token transfer by default\r\n- Simultaneous vesting batches for each user (different amounts of tokens vesting with different start date)\r\n- Configurable vesting schedule (default function is linear unlock)\r\n- Extensible: contract can add properties indexed by vestingId \r\n\r\n### Example use cases:\r\n- **Escrowed governance token with vesting**: A typical use case is to extend a governance escrowed token (which already extends ERC20Wrapper and ERC20Votes) with ERC20Vesting, and override the ERC20Wrapper withdraw() to require _vesting()\r\n- **Weighted governance**: similar to escrowed governance, but with a ve- lockup flavor, depositing tokens with a longer lockup provides the depositor with additional governing power\r\n- **Vested rewards for liquidity mining**: instead of distributing Token (e.g through a \"masterchef\" or Aave incentive controller), distribute esToken, which in turn can be redeemed for Token after vesting. Rewards can be withdrawn early but with a penalty. This is used by e.g GMX and Radiant to control farm and dump.\r\n\r\nI added some mock contracts for each example use case [EsGovernanceTokenMock, VeGovernanceTokenMock, VestedMiningRewardsMock](https://github.com/Keref/openzeppelin-contracts/blob/master/contracts/mocks/token/ERC20VestingMock.sol) to showcase how to use and why this is useful as a general extension to include in OpenZeppelin. For example a ve- lockup model can then be implemented with less than 30 lines of code.\r\nThanks for your feedback! üôè\r\n\r\nEdit: btw there aren't test files because for our project we use Brownie tests, so I'd rather not duplicate unless there's actual interest in integrating ERC20Vesting in OpenZeppelin",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1635306786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1636016250",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4441#issuecomment-1636016250",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4441",
    "id": 1636016250,
    "node_id": "IC_kwDOA9tCBs5hg6B6",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-14T15:21:17Z",
    "updated_at": "2023-07-14T15:21:17Z",
    "author_association": "MEMBER",
    "body": "Great, thank you. We will leave this open for consideration.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1636016250/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
