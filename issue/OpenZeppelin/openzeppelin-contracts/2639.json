{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2639",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2639/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2639/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2639/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2639",
  "id": 865831445,
  "node_id": "MDU6SXNzdWU4NjU4MzE0NDU=",
  "number": 2639,
  "title": "Ownable should support setting the initial owner through its constructor",
  "user": {
    "login": "wighawag",
    "id": 790580,
    "node_id": "MDQ6VXNlcjc5MDU4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wighawag",
    "html_url": "https://github.com/wighawag",
    "followers_url": "https://api.github.com/users/wighawag/followers",
    "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
    "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
    "organizations_url": "https://api.github.com/users/wighawag/orgs",
    "repos_url": "https://api.github.com/users/wighawag/repos",
    "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wighawag/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1000230196,
      "node_id": "MDU6TGFiZWwxMDAwMjMwMTk2",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/breaking%20change",
      "name": "breaking change",
      "color": "b60205",
      "default": false,
      "description": "Changes that break backwards compatibility of the public API."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/11",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11/labels",
    "id": 7990184,
    "node_id": "MI_kwDOA9tCBs4Aeeuo",
    "number": 11,
    "title": "5.0",
    "description": null,
    "creator": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 31,
    "closed_issues": 45,
    "state": "open",
    "created_at": "2022-05-17T19:52:44Z",
    "updated_at": "2023-06-29T16:00:39Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 11,
  "created_at": "2021-04-23T07:28:52Z",
  "updated_at": "2023-06-08T19:48:08Z",
  "closed_at": "2023-06-08T19:48:07Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nCurrently Ownable force you to set the initial owner to be the msg sender. This brings a dependence on the account that deploy the contract, which is often not the same as the expected owner of the contract. For security it is often better to ensure the account making deployment do not have any responsibility.\r\n\r\nit also brings issue when you need to deploy the contract through a factory where the factory become the defacto owner of the contract.\r\n\r\nWhile contracts using `Ownable` could call `transferOwnership` this would trigger another event.\r\n\r\nIt would be better if Ownable constructor had a `owner` parameter so contract using Ownable can decide whose address is going to be the initial owner\r\n",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2639/reactions",
    "total_count": 7,
    "+1": 7,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2639/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/825471776",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2639#issuecomment-825471776",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2639",
    "id": 825471776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTQ3MTc3Ng==",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-23T07:56:30Z",
    "updated_at": "2021-04-23T07:56:30Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @wighawag \r\n\r\nThis feature has already been requested multiple times. In a perfect world, solidity would support optional arguments, and we would be able to use the provided value or fallback to initializing using msg.sender. Unfortunately, overloading constructor is not yet a thing.\r\n\r\nWhile the change you ask for is easy to do, and make a lot of sense, it would also be a breaking change. Any contract that uses Ownable right now (and there are many!) would not be compatible with the newer version, and this would require users to change their code. We want to avoid this, and we certainly cannot do such a change in a minor version.\r\n\r\nWe might possibly consider this for whenever we release contracts 5.0, but until then, calling `transferOwnership` in the constructor is the way to go. While it is true that there are 2 events, the 2 are consistent with the ownership logic, so they should not be to confusing for an outside observer.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/825471776/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/825497513",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2639#issuecomment-825497513",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2639",
    "id": 825497513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTQ5NzUxMw==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-23T08:36:02Z",
    "updated_at": "2021-04-23T08:36:02Z",
    "author_association": "NONE",
    "body": "Hi @Amxx \r\n\r\nThat's a shame we cannot have it sooner :) I have actually complained secretly about the issue for years :D\r\n\r\nI understand the backward compatibility requirement though, thanks for explaning.\r\n\r\nMy main use case for now is ProxyAdmin that I have to reimplement so I can specify the onwer at deployment time. it would great in version 5.0 that no assumption was made as to the role of msg.sender and that every contract that extends Ownable also allow users to pass the owner in their constructor transitively.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/825497513/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/825824430",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2639#issuecomment-825824430",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2639",
    "id": 825824430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTgyNDQzMA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-23T17:58:23Z",
    "updated_at": "2021-04-23T17:58:23Z",
    "author_association": "MEMBER",
    "body": "This is a duplicate of https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2402 (closed). See https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2402#issuecomment-780877304, although it has been summarized by @Amxx above.\r\n\r\nIs it possible for you to inherit `ProxyAdmin` and use `transferOwnership` in the constructor, without reimplementing the entire contract?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/825824430/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/825898509",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2639#issuecomment-825898509",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2639",
    "id": 825898509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTg5ODUwOQ==",
    "user": {
      "login": "wighawag",
      "id": 790580,
      "node_id": "MDQ6VXNlcjc5MDU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wighawag",
      "html_url": "https://github.com/wighawag",
      "followers_url": "https://api.github.com/users/wighawag/followers",
      "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
      "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
      "organizations_url": "https://api.github.com/users/wighawag/orgs",
      "repos_url": "https://api.github.com/users/wighawag/repos",
      "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wighawag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-23T20:19:38Z",
    "updated_at": "2021-04-23T20:21:42Z",
    "author_association": "NONE",
    "body": "@frangio yes this is possible but feel like a waste (even if small), it would also emit the OwnershipTransfer event twice.\r\n\r\nIt also prevent me from deploying such proxyAdmin directly through a create2 factory to ensure deterministic deployment\r\n\r\nEdit: my last point is not true if I use your suggestion of creating a contract inheriting ProxyAdmin though ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/825898509/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/827378862",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2639#issuecomment-827378862",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2639",
    "id": 827378862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNzM3ODg2Mg==",
    "user": {
      "login": "Manik-Jain",
      "id": 24981979,
      "node_id": "MDQ6VXNlcjI0OTgxOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/24981979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Manik-Jain",
      "html_url": "https://github.com/Manik-Jain",
      "followers_url": "https://api.github.com/users/Manik-Jain/followers",
      "following_url": "https://api.github.com/users/Manik-Jain/following{/other_user}",
      "gists_url": "https://api.github.com/users/Manik-Jain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Manik-Jain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Manik-Jain/subscriptions",
      "organizations_url": "https://api.github.com/users/Manik-Jain/orgs",
      "repos_url": "https://api.github.com/users/Manik-Jain/repos",
      "events_url": "https://api.github.com/users/Manik-Jain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Manik-Jain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-27T07:24:17Z",
    "updated_at": "2021-04-27T07:24:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi,\r\n\r\nPlease see PR : https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2647\r\n\r\nSuggestions are welcome to improve this",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/827378862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1249708837",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2639#issuecomment-1249708837",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2639",
    "id": 1249708837,
    "node_id": "IC_kwDOA9tCBs5KfQsl",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-16T19:04:12Z",
    "updated_at": "2022-09-16T19:04:12Z",
    "author_association": "MEMBER",
    "body": "Is this something we should do on a 5.0 release?\r\n\r\nDo we have other constructors that use `msg.sender`, and if so should we change them all to use an argument?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1249708837/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1253408868",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2639#issuecomment-1253408868",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2639",
    "id": 1253408868,
    "node_id": "IC_kwDOA9tCBs5KtYBk",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-21T08:58:07Z",
    "updated_at": "2022-09-21T08:58:07Z",
    "author_association": "COLLABORATOR",
    "body": "Its is always possible to call `_transferOwnership(admin)` in the constructor so I don't think its that critical\r\n\r\nBut yes, we should consider weither we want to change that for the next major.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1253408868/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1256732667",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2639#issuecomment-1256732667",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2639",
    "id": 1256732667,
    "node_id": "IC_kwDOA9tCBs5K6Df7",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-23T22:21:53Z",
    "updated_at": "2022-09-23T22:21:53Z",
    "author_association": "MEMBER",
    "body": "Yes, it can be worked around, but we should also see from a security and good defaults angle, like https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3720.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1256732667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1431714498",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2639#issuecomment-1431714498",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2639",
    "id": 1431714498,
    "node_id": "IC_kwDOA9tCBs5VVjrC",
    "user": {
      "login": "waynehoover",
      "id": 115143,
      "node_id": "MDQ6VXNlcjExNTE0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/115143?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/waynehoover",
      "html_url": "https://github.com/waynehoover",
      "followers_url": "https://api.github.com/users/waynehoover/followers",
      "following_url": "https://api.github.com/users/waynehoover/following{/other_user}",
      "gists_url": "https://api.github.com/users/waynehoover/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/waynehoover/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/waynehoover/subscriptions",
      "organizations_url": "https://api.github.com/users/waynehoover/orgs",
      "repos_url": "https://api.github.com/users/waynehoover/repos",
      "events_url": "https://api.github.com/users/waynehoover/events{/privacy}",
      "received_events_url": "https://api.github.com/users/waynehoover/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-15T17:14:32Z",
    "updated_at": "2023-02-15T17:15:32Z",
    "author_association": "NONE",
    "body": "> Its is always possible to call `_transferOwnership(admin)` in the constructor so I don't think its that critical\r\n> \r\n> But yes, we should consider weither we want to change that for the next major.\r\n\r\nIt's not possible to call it in the constructor if you are deploying a proxy contract. Because you can't use a constructor with a proxy.\r\n\r\nMy use case: deploying a transparent proxy contract through a create2 contract.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1431714498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1432720291",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2639#issuecomment-1432720291",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2639",
    "id": 1432720291,
    "node_id": "IC_kwDOA9tCBs5VZZOj",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-16T08:46:36Z",
    "updated_at": "2023-02-16T08:46:36Z",
    "author_association": "COLLABORATOR",
    "body": "> It's not possible to call it in the constructor if you are deploying a proxy contract. Because you can't use a constructor with a proxy.\r\n> \r\n> My use case: deploying a transparent proxy contract through a create2 contract.\r\n\r\nIn that case, your implementation should have an initializer, that you are going to call from the factory.\r\n\r\nExample:\r\n- [this factory creates a clone, and calls the initializer](https://github.com/Amxx/NonFungibleFinance/blob/master/solidity/contracts/VestingFactory.sol#L116-L117)\r\n- [the initializer is here](https://github.com/Amxx/NonFungibleFinance/blob/master/solidity/contracts/VestingFactory.sol#L18-L24) it could very well include a call to `_transferOwnership` is this was an ownable contract.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1432720291/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1583243119",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2639#issuecomment-1583243119",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2639",
    "id": 1583243119,
    "node_id": "IC_kwDOA9tCBs5eXl9v",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-08T19:48:07Z",
    "updated_at": "2023-06-08T19:48:07Z",
    "author_association": "COLLABORATOR",
    "body": "Fixed in #4267",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1583243119/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
