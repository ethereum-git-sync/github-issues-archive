{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1165",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1165/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1165/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1165/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1165",
  "id": 348571733,
  "node_id": "MDU6SXNzdWUzNDg1NzE3MzM=",
  "number": 1165,
  "title": "Exception Handling Code Redundancy",
  "user": {
    "login": "barakman",
    "id": 7003246,
    "node_id": "MDQ6VXNlcjcwMDMyNDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barakman",
    "html_url": "https://github.com/barakman",
    "followers_url": "https://api.github.com/users/barakman/followers",
    "following_url": "https://api.github.com/users/barakman/following{/other_user}",
    "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
    "organizations_url": "https://api.github.com/users/barakman/orgs",
    "repos_url": "https://api.github.com/users/barakman/repos",
    "events_url": "https://api.github.com/users/barakman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barakman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-08-08T04:34:16Z",
  "updated_at": "2018-08-08T10:19:03Z",
  "closed_at": "2018-08-08T10:19:03Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## üéâ Description\r\n\r\nThe following files are all designated for the same purpose of exception handling:\r\n- [EVMRevert.js](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/test/helpers/EVMRevert.js)\r\n- [EVMThrow.js](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/test/helpers/EVMThrow.js)\r\n- [assertJump.js](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/test/helpers/assertJump.js)\r\n- [assertRevert.js](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/test/helpers/assertRevert.js)\r\n- [expectThrow.js](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/test/helpers/expectThrow.js)\r\n\r\nThese files are used \"chaotically\" across the various testing scripts.\r\n\r\nI suggest a unified helper file called `exceptions.js` (or similar):\r\n```\r\nmodule.exports.errTypes = {\r\n    revert: \"revert\",\r\n    outOfGas: \"out of gas\",\r\n    invalidJump: \"invalid JUMP\",\r\n    invalidOpcode: \"invalid opcode\",\r\n    stackOverflow: \"stack overflow\",\r\n    stackUnderflow: \"stack underflow\",\r\n    staticStateChange: \"static state change\"\r\n}\r\n\r\nmodule.exports.tryCatch = async function(promise, errType) {\r\n    try {\r\n        await promise;\r\n        throw null;\r\n    }\r\n    catch (error) {\r\n        assert(error, \"Expected an error but did not get one\");\r\n        assert(error.message.startsWith(PREFIX + errType), \"Expected an error starting with '\" + PREFIX + errType + \"' but got '\" + error.message + \"' instead\");\r\n    }\r\n};\r\n\r\nconst PREFIX = \"VM Exception while processing transaction: \";\r\n```\r\n\r\nUsage example:\r\n```\r\nlet tryCatch = require(\"../exceptions.js\").tryCatch;\r\nlet errTypes = require(\"../exceptions.js\").errTypes;\r\n...\r\nawait tryCatch(myContract.func(arg1, arg2, arg3, {from: sender}), errTypes.revert);\r\n```\r\n\r\nNote that your `assertJump` is equivalent to my `invalidOpcode` (and not to my `invalidJump`), so take precautions if and when switching to my proposed scheme.\r\n\r\n<!-- Briefly describe the issue you are experiencing (or the feature you want to see added to OpenZeppelin). Tell us what you were trying to do and what happened instead. **Remember, this is _not_ a place to ask for help debugging code; for that, we welcome you in the [OpenZeppelin Slack Channel](https://slack.openzeppelin.org/).** -->\r\n\r\n- [ ] üêõ This is a bug report.\r\n- [x] üìà This is a feature request.\r\n\r\n<!-- Please check one of the above by placing an x in the box. -->",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1165/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1165/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/411358271",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1165#issuecomment-411358271",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1165",
    "id": 411358271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTM1ODI3MQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-08T10:19:03Z",
    "updated_at": "2018-08-08T10:19:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for noticing this @barakman! This is sort of a duplicate of #942, so I'm going to close it, but I like the fact that we seem to be aligned regarding what would be a better solution. Please take a look at that issue for previous discussion, and feel free to go ahead and open a PR if you want to tackle this yourself :)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/411358271/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
