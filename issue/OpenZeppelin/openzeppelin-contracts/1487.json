{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1487",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1487/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1487/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1487/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1487",
  "id": 374949220,
  "node_id": "MDU6SXNzdWUzNzQ5NDkyMjA=",
  "number": 1487,
  "title": "CrowdSale forcing token to be present on contract address rather than external account",
  "user": {
    "login": "rammuralidhar",
    "id": 8567394,
    "node_id": "MDQ6VXNlcjg1NjczOTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8567394?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rammuralidhar",
    "html_url": "https://github.com/rammuralidhar",
    "followers_url": "https://api.github.com/users/rammuralidhar/followers",
    "following_url": "https://api.github.com/users/rammuralidhar/following{/other_user}",
    "gists_url": "https://api.github.com/users/rammuralidhar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rammuralidhar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rammuralidhar/subscriptions",
    "organizations_url": "https://api.github.com/users/rammuralidhar/orgs",
    "repos_url": "https://api.github.com/users/rammuralidhar/repos",
    "events_url": "https://api.github.com/users/rammuralidhar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rammuralidhar/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-10-29T10:30:09Z",
  "updated_at": "2018-11-15T02:29:41Z",
  "closed_at": "2018-11-15T02:29:41Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "<!-- Briefly describe the issue you're experiencing. Tell us what you were trying to do and what happened instead. -->\r\nI have owner account which is an external account say \"0x7FA2B410267439169fD6bAd46d89f468125437C4\". I have initially loaded 120 TT into my owner account.\r\n\r\nWhen I deploy the contact the address for \"TutorialToken\" is \"0x77c6873d366f36c325aaa94be54ab2370ead630d\". MyCrowdSale contact is \"0x838b8e81d7de85e8f75f77801292b547d02\"\r\n\r\nSay I call buyToken from say account which has an address \"0x5b9C76903FA4Fd71C0B47a2C762C2C6675d65F43\". I have 100 ethers. I try to buy tokens for 1 Ether,\r\n\r\nThe MyCrowdSale buyToken always fails. The reason is that when safeTransfer is initiated on TutorialToken in CrowdSale.sol, the msg.sender is \"0x838b8e81d7de85e8f75f77801292b547d02\". This address does not have any TT tokens. \r\n\r\nMy question is that is it possible to use external account for crowdsale or should be always load the TT tokens into the contract address for MyCrowdSale.\r\n\r\n\r\n<!-- Remember, this is not a place to ask for help debugging code. For that, we welcome you in the OpenZeppelin Slack channel: https://slack.openzeppelin.org/. -->\r\n\r\n\r\n**üíª Environment**\r\n\r\n<!-- Tell us what version of OpenZeppelin you're using, and how you're using it: Truffle, Remix, etc. -->\r\nTruffle and tests written using Chai\r\n**üìù Details**\r\n\r\n<!-- Describe the problem you have been experiencing in more detail. Include as much information as you think is relevant. Keep in mind that transactions can fail for many reasons; context is key here. -->\r\n\r\n\r\n**üî¢ Code to reproduce bug**\r\n\r\n<!-- We will be able to better help if you provide a minimal example that triggers the bug. -->\r\npragma solidity ^0.4.23;\r\n\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol\";\r\n\r\ncontract TutorialToken is StandardToken {\r\n    string public name = \"TutorialToken\";\r\n    string public symbol = \"TT\";\r\n    uint8 public decimals = 2;\r\n    uint public INITIAL_SUPPLY = 12000;\r\n    \r\n    constructor() public {\r\n        totalSupply_ = INITIAL_SUPPLY;\r\n        balances[msg.sender] = INITIAL_SUPPLY;\r\n    }\r\n}\r\n\r\npragma solidity ^0.4.23;\r\n\r\nimport \"openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol\";\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\r\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\";\r\nimport \"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\";\r\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\";\r\nimport \"./TutorialToken.sol\";\r\n\r\ncontract MyCrowdSale is CappedCrowdsale {\r\n    constructor(uint256 _cap, uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet, address _token)\r\n    \t\tCrowdsale(_rate, _wallet, TutorialToken(_token))\r\n    \t\t\r\n    \t\tCappedCrowdsale(_cap) { \r\n    \t\t\r\n\t}\r\n}\r\n\r\nTestcase:\r\n\r\nvar chai = require('chai')\r\nvar chaiAsPromised = require('chai-as-promised')\r\nvar abi = require('ethereumjs-abi');\r\nchai.use(chaiAsPromised)\r\nconst { expect, assert } = chai\r\nconst TutorialToken = artifacts.require(\"TutorialToken\");\r\nconst MyCrowdSale = artifacts.require(\"MyCrowdSale\");\r\n\r\ncontract('Testing ERCs contract', function(accounts) {\r\n    let erc20Token\r\n    const ownerAccount = accounts[0]\r\n    \r\n    it(' test crowdsale', async () => {\r\n        const tutorialToken = await TutorialToken.new()\r\n        let myCrowdSale = await MyCrowdSale.new(100, new Date().getTime() - 1000, new Date().getTime() + 1000000, 1, accounts[5], tutorialToken.address);        \r\n\r\n        // !!!!!!!!!!!!!!!!!Note!!!!! this line needs to be present if the test case has to work which I feel is wrong\r\n        // transfer from ownerAccount to myCrowdSale.address. Is this correct ??\r\n        await tutorialToken.transfer(myCrowdSale.address, 100, {from: ownerAccount})\r\n        console.log(myCrowdSale.address + \" \" + tutorialToken.address);\r\n        console.log(await tutorialToken.balanceOf(accounts[0]));\r\n        expect(Number(await tutorialToken.balanceOf(accounts[2]))).to.equal(0)\r\n\r\n        await myCrowdSale.buyTokens(accounts[2], {value : 1, from: accounts[2]});\r\n        expect(Number(await tutorialToken.balanceOf(accounts[2]))).to.equal(1)\r\n\r\n    });\r\n\r\n})\r\n",
  "closed_by": {
    "login": "rammuralidhar",
    "id": 8567394,
    "node_id": "MDQ6VXNlcjg1NjczOTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8567394?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rammuralidhar",
    "html_url": "https://github.com/rammuralidhar",
    "followers_url": "https://api.github.com/users/rammuralidhar/followers",
    "following_url": "https://api.github.com/users/rammuralidhar/following{/other_user}",
    "gists_url": "https://api.github.com/users/rammuralidhar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rammuralidhar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rammuralidhar/subscriptions",
    "organizations_url": "https://api.github.com/users/rammuralidhar/orgs",
    "repos_url": "https://api.github.com/users/rammuralidhar/repos",
    "events_url": "https://api.github.com/users/rammuralidhar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rammuralidhar/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1487/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1487/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/435025148",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1487#issuecomment-435025148",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1487",
    "id": 435025148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTAyNTE0OA==",
    "user": {
      "login": "Aniket-Engg",
      "id": 30843294,
      "node_id": "MDQ6VXNlcjMwODQzMjk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/30843294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Aniket-Engg",
      "html_url": "https://github.com/Aniket-Engg",
      "followers_url": "https://api.github.com/users/Aniket-Engg/followers",
      "following_url": "https://api.github.com/users/Aniket-Engg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Aniket-Engg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Aniket-Engg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Aniket-Engg/subscriptions",
      "organizations_url": "https://api.github.com/users/Aniket-Engg/orgs",
      "repos_url": "https://api.github.com/users/Aniket-Engg/repos",
      "events_url": "https://api.github.com/users/Aniket-Engg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Aniket-Engg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-01T12:26:34Z",
    "updated_at": "2018-11-01T12:26:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "As per the functionality of `transfer` function, caller of it should have the tokens and this functionality cannot be manipulated otherwise it will affect normal token transfer too. \r\nFrom that point of view, you have to either transfer or approve allowance of tokens to crowdsale address.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/435025148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/438893733",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1487#issuecomment-438893733",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1487",
    "id": 438893733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODg5MzczMw==",
    "user": {
      "login": "rammuralidhar",
      "id": 8567394,
      "node_id": "MDQ6VXNlcjg1NjczOTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8567394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rammuralidhar",
      "html_url": "https://github.com/rammuralidhar",
      "followers_url": "https://api.github.com/users/rammuralidhar/followers",
      "following_url": "https://api.github.com/users/rammuralidhar/following{/other_user}",
      "gists_url": "https://api.github.com/users/rammuralidhar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rammuralidhar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rammuralidhar/subscriptions",
      "organizations_url": "https://api.github.com/users/rammuralidhar/orgs",
      "repos_url": "https://api.github.com/users/rammuralidhar/repos",
      "events_url": "https://api.github.com/users/rammuralidhar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rammuralidhar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T02:29:41Z",
    "updated_at": "2018-11-15T02:29:41Z",
    "author_association": "NONE",
    "body": "fair enough. closing this issue as it is the expected behaviour.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/438893733/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
