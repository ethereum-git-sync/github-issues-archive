{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/785",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/785/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/785/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/785/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/785",
  "id": 301664015,
  "node_id": "MDU6SXNzdWUzMDE2NjQwMTU=",
  "number": 785,
  "title": "📈 Make BurnableToken consistent w/ MintableToken (i.e. onlyOwner and burnFrom configurable)",
  "user": {
    "login": "mjdietzx",
    "id": 7217256,
    "node_id": "MDQ6VXNlcjcyMTcyNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mjdietzx",
    "html_url": "https://github.com/mjdietzx",
    "followers_url": "https://api.github.com/users/mjdietzx/followers",
    "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
    "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
    "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
    "repos_url": "https://api.github.com/users/mjdietzx/repos",
    "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": true,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-03-02T06:12:06Z",
  "updated_at": "2018-06-25T19:00:43Z",
  "closed_at": "2018-03-06T02:29:55Z",
  "author_association": "NONE",
  "active_lock_reason": "resolved",
  "body": "## 🎉 Description\r\n\r\n<!-- Briefly describe the issue you are experiencing (or the feature you want to see added to OpenZeppelin). Tell us what you were trying to do and what happened instead. **Remember, this is _not_ a place to ask for help debugging code; for that, we welcome you in the [OpenZeppelin Slack Channel](https://slack.openzeppelin.org/).** -->\r\n\r\n`MintableToken` has been improved such that only the original 'owner' of the contract can [mint tokens](https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/token/ERC20/MintableToken.sol#L31), and the `address` that receives the minted tokens can be chosen.\r\n\r\nI think it would be more standard/useful and improve consistency if `BurnableToken` had these features added as well (currently any address can burn a token, and it defaults to burning tokens from `msg.sender`.\r\n\r\n- [ ] 🐛 This is a bug report.\r\n- [x] 📈 This is a feature request.\r\n\r\n<!-- Please check one of the above by placing an x in the box. -->\r\n\r\n## 💻 Environment\r\n\r\nNext, we need to know what your environment looks like.\r\n\r\n- Which version of OpenZeppelin are you using? `master branch`\r\n- What network are you deploying to? testrpc? **Ganache**? Ropsten?\r\n- How are you deploying your OpenZeppelin-backed contracts? **truffle**? Remix? Let us know!\r\n\r\n## 🔢 Code To Reproduce Issue [ Good To Have ]\r\n\r\nThis is what a PR adding these features could look like (I will make this PR w/ associated unit-tests).\r\n\r\n```solidity\r\n/**\r\n * @title Burnable Token\r\n * @dev Token that can be irreversibly burned (destroyed).\r\n */\r\ncontract BurnableToken is BasicToken, Ownable {\r\n\r\n  event Burn(address indexed burner, uint256 value);\r\n\r\n  /**\r\n   * @dev Burns a specific amount of tokens.\r\n   * @param _from The address whose tokens will be burned.\r\n   * @param _value The amount of token to be burned.\r\n   */\r\n  function burn(address _from, uint256 _value) onlyOwner public {\r\n    require(_value <= balances[_from]);\r\n    // no need to require value <= totalSupply, since that would imply the\r\n    // sender's balance is greater than the totalSupply, which *should* be an assertion failure\r\n\r\n    balances[_from] = balances[_from].sub(_value);\r\n    totalSupply_ = totalSupply_.sub(_value);\r\n    Burn(_from, _value);\r\n    Transfer(_from, address(0), _value);\r\n  }\r\n}\r\n```\r\n",
  "closed_by": {
    "login": "mjdietzx",
    "id": 7217256,
    "node_id": "MDQ6VXNlcjcyMTcyNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mjdietzx",
    "html_url": "https://github.com/mjdietzx",
    "followers_url": "https://api.github.com/users/mjdietzx/followers",
    "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
    "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
    "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
    "repos_url": "https://api.github.com/users/mjdietzx/repos",
    "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/785/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/785/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/370633034",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/785#issuecomment-370633034",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/785",
    "id": 370633034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDYzMzAzNA==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T01:52:34Z",
    "updated_at": "2018-03-06T01:52:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure a publicly callable burn function to allow the owner of the token to burn anyone's tokens is a good idea. The mintable implementation makes sense because you can call `stopMinting` and remove the ability for anyone to mint more tokens. But that's not possible with burning because you want to be able to burn your own tokens at any time. I can't think of any case where I'd want the owner of a token contract to be able to burn my tokens at any time. Perhaps a better idea is to allow a burnable token to use the `approve()` feature for delegating the burning of one's tokens (but at the same time, it might be much more popular/necessary for contracts to enforce that potentially-burnable tokens must be escrowed to avoid people sending them away before they're burned).\r\n\r\nI'm not sure this is a feature, and if it is something that people want, it'd definitely need to be another inheritable version of `Token`. Regardless, I'm not sure if this is something that should be in OZ at all, since it's such a specific feature. Let me know if you think otherwise.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/370633034/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/370633411",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/785#issuecomment-370633411",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/785",
    "id": 370633411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDYzMzQxMQ==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T01:54:44Z",
    "updated_at": "2018-03-06T01:54:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, I see how this would be used in a situation where only another contract can be the owner of a token. This could be useful, but is almost definitely not something that should be on `BurnableToken` and should instead be in a token derivative called `ControlledToken` or something, where a contract can mint and burn at-will, constrained by its own programming.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/370633411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/370640176",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/785#issuecomment-370640176",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/785",
    "id": 370640176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDY0MDE3Ng==",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T02:29:55Z",
    "updated_at": "2018-03-06T02:29:55Z",
    "author_association": "NONE",
    "body": "Ah, I see. Yeah I agree, this definitely doesn't belong in BurnableToken. Thanks, will close this issue and corresponding PR!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/370640176/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/399924050",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/785#issuecomment-399924050",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/785",
    "id": 399924050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTkyNDA1MA==",
    "user": {
      "login": "liwei00wade",
      "id": 40479347,
      "node_id": "MDQ6VXNlcjQwNDc5MzQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/40479347?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liwei00wade",
      "html_url": "https://github.com/liwei00wade",
      "followers_url": "https://api.github.com/users/liwei00wade/followers",
      "following_url": "https://api.github.com/users/liwei00wade/following{/other_user}",
      "gists_url": "https://api.github.com/users/liwei00wade/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liwei00wade/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liwei00wade/subscriptions",
      "organizations_url": "https://api.github.com/users/liwei00wade/orgs",
      "repos_url": "https://api.github.com/users/liwei00wade/repos",
      "events_url": "https://api.github.com/users/liwei00wade/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liwei00wade/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-25T11:47:43Z",
    "updated_at": "2018-06-25T11:47:43Z",
    "author_association": "NONE",
    "body": "I don't know how to implemented this feature,\r\nCould you please give me an example.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/399924050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/399934900",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/785#issuecomment-399934900",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/785",
    "id": 399934900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTkzNDkwMA==",
    "user": {
      "login": "liwei00wade",
      "id": 40479347,
      "node_id": "MDQ6VXNlcjQwNDc5MzQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/40479347?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liwei00wade",
      "html_url": "https://github.com/liwei00wade",
      "followers_url": "https://api.github.com/users/liwei00wade/followers",
      "following_url": "https://api.github.com/users/liwei00wade/following{/other_user}",
      "gists_url": "https://api.github.com/users/liwei00wade/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liwei00wade/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liwei00wade/subscriptions",
      "organizations_url": "https://api.github.com/users/liwei00wade/orgs",
      "repos_url": "https://api.github.com/users/liwei00wade/repos",
      "events_url": "https://api.github.com/users/liwei00wade/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liwei00wade/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-25T12:30:38Z",
    "updated_at": "2018-06-25T12:30:38Z",
    "author_association": "NONE",
    "body": " this definitely doesn't belong in BurnableToken\r\n\r\nWhy ??\r\n\r\nhow to  write a ControlledToken ?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/399934900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/400059949",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/785#issuecomment-400059949",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/785",
    "id": 400059949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDA1OTk0OQ==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-25T19:00:35Z",
    "updated_at": "2018-06-25T19:00:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@liwei00wade simply extend `StandardToken` and add a method that allows the owner of a contract to burn tokens from anyone\r\n\r\n```\r\nfunction burnFrom(address _from, uint256 _amount) onlyOwner public {\r\n  _burn(_from, _amount);\r\n}\r\n```\r\n\r\nthat's it",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/400059949/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
