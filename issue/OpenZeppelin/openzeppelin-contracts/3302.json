{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3302",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3302/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3302/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3302/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3302",
  "id": 1186333323,
  "node_id": "I_kwDOA9tCBs5GtgKL",
  "number": 3302,
  "title": "ERC721: operator query for nonexistent token",
  "user": {
    "login": "ankit797",
    "id": 77437600,
    "node_id": "MDQ6VXNlcjc3NDM3NjAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/77437600?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ankit797",
    "html_url": "https://github.com/ankit797",
    "followers_url": "https://api.github.com/users/ankit797/followers",
    "following_url": "https://api.github.com/users/ankit797/following{/other_user}",
    "gists_url": "https://api.github.com/users/ankit797/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ankit797/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ankit797/subscriptions",
    "organizations_url": "https://api.github.com/users/ankit797/orgs",
    "repos_url": "https://api.github.com/users/ankit797/repos",
    "events_url": "https://api.github.com/users/ankit797/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ankit797/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-03-30T11:42:01Z",
  "updated_at": "2022-03-31T08:05:28Z",
  "closed_at": "2022-03-31T08:05:28Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "After deploy ERC-721 Contract, when I am trying to use transferFrom in createMarketItem function it's showing\r\nERC721: operator query for nonexistent token.\r\n```\r\n// minting contract\r\ncontract NewContract is ERC721URIStorage, Ownable {\r\n   using Counters for Counters.Counter;\r\n   Counters.Counter private _tokenIds;\r\n\r\n   constructor() ERC721(\"Ak Technical\", \"AKT\") {}\r\n\r\n   function mintNFT(address recipient, string memory tokenURI)\r\n      public\r\n      onlyOwner returns (uint256)\r\n   {\r\n      _tokenIds.increment();\r\n\r\n      uint256 newItemId = _tokenIds.current();\r\n      _mint(recipient, newItemId);\r\n      _setTokenURI(newItemId, tokenURI);\r\n      return newItemId;\r\n   }\r\n\r\n   function setTokenURI(uint256 tokenId, string memory _tokenURI) public  onlyOwner{\r\n      require(\r\n         _isApprovedOrOwner(_msgSender(), tokenId),\r\n         \"ERC721: transfer caller is not owner nor approved\"\r\n      );\r\n      _setTokenURI(tokenId, _tokenURI);\r\n   }\r\n\r\n   function getTokenCount() public view returns (uint256){\r\n      return _tokenIds.current();\r\n   }\r\n}\r\n\r\n\r\n\r\n// add sell nft contract\r\ncontract SellNFTs is ReentrancyGuard{   \r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _ItemIds;\r\n    Counters.Counter private _ItemSold;\r\n\r\n    // owner of contract\r\n    address payable owner;\r\n    // commison amount to creater of item\r\n    uint256 listingPrice = 0.025 ether;\r\n\r\n    // owner of this contract who is deploying this\r\n    constructor() {\r\n        owner = payable(msg.sender);\r\n    }\r\n\r\n    struct MarketItem {\r\n        uint ItemId;\r\n        address nftContract;\r\n        uint256 tokenId;\r\n        address payable seller;\r\n        address payable owner;\r\n        uint256 price;\r\n        bool sold;\r\n    }\r\n    // fetch market item using its id\r\n    mapping(uint256 => MarketItem) private idToMarketItem;\r\n\r\n    // having event when market item created\r\n    // this event going to match maketItem preety well\r\n    event MarketItemCreated (\r\n        uint indexed ItemId,\r\n        address indexed nftContract,\r\n        uint256 indexed tokenId,\r\n        address  seller,\r\n        address  owner,\r\n        uint256 price,\r\n        bool sold\r\n    );\r\n\r\n    // return listing price\r\n    function getListingPrice() public view returns (uint256) {\r\n        return listingPrice;\r\n    }\r\n    \r\n    // putting item on sell\r\n    // nonReentrant modifier prevents nonreentrant attack\r\n    function createMarketItem(address nftContract, uint256 tokenId, uint256 price) public payable nonReentrant {\r\n        require(price >0, \"Price must be at least 1 wei\");\r\n        // persion is sending listingPrice along with the transaction\r\n        require(msg.value == listingPrice, \"Price must be equal to listing price\");\r\n\r\n        _ItemIds.increment();\r\n        uint256 ItemId = _ItemIds.current();\r\n        \r\n        // creating market item\r\n        idToMarketItem[ItemId] = MarketItem(\r\n            ItemId,\r\n            nftContract,\r\n            tokenId,\r\n            payable(msg.sender),\r\n            // address(0) empty address\r\n            payable(address(this)),\r\n            price,\r\n            false\r\n        );\r\n\r\n        // transfer owner of this contract to it self\r\n        IERC721(nftContract).transferFrom(msg.sender, address(this), tokenId);\r\n\r\n\r\n        // emit market item\r\n        emit MarketItemCreated(\r\n            ItemId,\r\n            nftContract,\r\n            tokenId,\r\n            msg.sender,\r\n            address(this),\r\n            price,\r\n            false\r\n        );\r\n    }\r\n}\r\n```",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3302/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3302/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1083666830",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3302#issuecomment-1083666830",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3302",
    "id": 1083666830,
    "node_id": "IC_kwDOA9tCBs5Al3GO",
    "user": {
      "login": "mw2000",
      "id": 11898068,
      "node_id": "MDQ6VXNlcjExODk4MDY4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11898068?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mw2000",
      "html_url": "https://github.com/mw2000",
      "followers_url": "https://api.github.com/users/mw2000/followers",
      "following_url": "https://api.github.com/users/mw2000/following{/other_user}",
      "gists_url": "https://api.github.com/users/mw2000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mw2000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mw2000/subscriptions",
      "organizations_url": "https://api.github.com/users/mw2000/orgs",
      "repos_url": "https://api.github.com/users/mw2000/repos",
      "events_url": "https://api.github.com/users/mw2000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mw2000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-30T21:57:24Z",
    "updated_at": "2022-03-30T21:57:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Are you sure the token id is minted? Is this also deployed on a test net? If yes could you paste the txhash of the error",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1083666830/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1084100706",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3302#issuecomment-1084100706",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3302",
    "id": 1084100706,
    "node_id": "IC_kwDOA9tCBs5AnhBi",
    "user": {
      "login": "ankit797",
      "id": 77437600,
      "node_id": "MDQ6VXNlcjc3NDM3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/77437600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ankit797",
      "html_url": "https://github.com/ankit797",
      "followers_url": "https://api.github.com/users/ankit797/followers",
      "following_url": "https://api.github.com/users/ankit797/following{/other_user}",
      "gists_url": "https://api.github.com/users/ankit797/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ankit797/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ankit797/subscriptions",
      "organizations_url": "https://api.github.com/users/ankit797/orgs",
      "repos_url": "https://api.github.com/users/ankit797/repos",
      "events_url": "https://api.github.com/users/ankit797/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ankit797/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-31T05:46:06Z",
    "updated_at": "2022-03-31T05:46:06Z",
    "author_association": "NONE",
    "body": "right now, i am doing this on remix ide where first mint the token and then call createMarketPlace function",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1084100706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1084237372",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3302#issuecomment-1084237372",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3302",
    "id": 1084237372,
    "node_id": "IC_kwDOA9tCBs5AoCY8",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-31T08:05:28Z",
    "updated_at": "2022-03-31T08:05:28Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @ankit797\r\n\r\nThis kind of question is usually asked on the [openzeppelin forum](https://forum.openzeppelin.com/). Please use the search tool there, and ask a question in the right section if you don't find your answer.\r\n\r\nWe want to keep the repo's issue clean for bug reports & feature requests",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1084237372/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
