{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4791",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4791/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4791/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4791/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4791",
  "id": 2033965941,
  "node_id": "I_kwDOA9tCBs55O9t1",
  "number": 4791,
  "title": "Don't make `ERC2771Context` `_trustedForwarder` `immutable`",
  "user": {
    "login": "SKYBITDev3",
    "id": 141273631,
    "node_id": "U_kgDOCGuqHw",
    "avatar_url": "https://avatars.githubusercontent.com/u/141273631?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SKYBITDev3",
    "html_url": "https://github.com/SKYBITDev3",
    "followers_url": "https://api.github.com/users/SKYBITDev3/followers",
    "following_url": "https://api.github.com/users/SKYBITDev3/following{/other_user}",
    "gists_url": "https://api.github.com/users/SKYBITDev3/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SKYBITDev3/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SKYBITDev3/subscriptions",
    "organizations_url": "https://api.github.com/users/SKYBITDev3/orgs",
    "repos_url": "https://api.github.com/users/SKYBITDev3/repos",
    "events_url": "https://api.github.com/users/SKYBITDev3/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SKYBITDev3/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2023-12-09T17:58:39Z",
  "updated_at": "2023-12-15T21:09:44Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**🧐 Motivation**\r\nThe article [Arbitrary Address Spoofing Attack: ERC2771Context Multicall Public Disclosure](https://blog.openzeppelin.com/arbitrary-address-spoofing-vulnerability-erc2771context-multicall-public-disclosure) published 3d ago says:\r\n\r\n>Some custom ERC2771Context implementations allow setting a trusted forwarder. Doing so can prevent any gasless transaction from being executed, limiting any possible exploit.\r\n\r\nThere was some discussion about this at https://forum.openzeppelin.com/t/in-erc2771context-trustedforwarder-shouldnt-be-immutable/37523\r\n\r\n\r\n**📝 Details**\r\nReplace\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/6ba452dea4258afe77726293435f10baf2bed265/contracts/metatx/ERC2771Context.sol#L22-L23\r\n\r\nand \r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/dd26c99a2f66793ac22f3b5f3ef006b2f05af9de/contracts/metatx/ERC2771ContextUpgradeable.sol#L23-L24\r\n\r\nwith\r\n```solidity\r\naddress private _trustedForwarder;\r\n```\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4791/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4791/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1849977413",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4791#issuecomment-1849977413",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4791",
    "id": 1849977413,
    "node_id": "IC_kwDOA9tCBs5uRGpF",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-11T12:25:07Z",
    "updated_at": "2023-12-11T12:27:47Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @SKYBITDev3 \r\n\r\nThe forwarder is set to be immutable for two reasons:\r\n- loading the value from storage (as you propose) is significantly more espensive. It cost 2000 gas to \"warm up\" the slot, and 100 gas per access. Adding +2K gas to all ERC20 / ERC721 transfers is not something we feel like doing.\r\n- moving this value to storage's only value is the ability to update it. This brings advantages (in the case of a bug) but also risks. Moreover, it bring the question of governance. Having the ability to change that value is a tremendous responsability, and developpers should not take this lightly.\r\n\r\nIf a developper wants, its easy for them to create a new `Context` contract and use it in their codebase.\r\n\r\n```\r\nabstract contract ERC2771ContextStorage is ERC2771Context(address(0)) {\r\n    address private _trustedForwarderStorage;\r\n\r\n    constructor(address initialTrustedForwarder) {\r\n        _trustedForwarderStorage = initialTrustedForwarder;\r\n    }\r\n\r\n    function trustedForwarder() public view virtual override returns (address) {\r\n        return _trustedForwarderStorage;\r\n    }\r\n    \r\n    // some custom administration logic.\r\n}\r\n```\r\n\r\nWe are not providing this version because we don't want to create confusion has to which one should be used. We also feel like having an admin that can change the value is to big of a risk to have. In light of the recent events you may disagree.\r\n\r\nOur goal is to remove `Context` at some point. We did not do that in 5.0 because usage of ERC2771 is still very much a thing, particularly on L2s and sidechains. Hopefully Solidity will provide us with a better way to override msg.sender in the future.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1849977413/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1850598021",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4791#issuecomment-1850598021",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4791",
    "id": 1850598021,
    "node_id": "IC_kwDOA9tCBs5uTeKF",
    "user": {
      "login": "SKYBITDev3",
      "id": 141273631,
      "node_id": "U_kgDOCGuqHw",
      "avatar_url": "https://avatars.githubusercontent.com/u/141273631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SKYBITDev3",
      "html_url": "https://github.com/SKYBITDev3",
      "followers_url": "https://api.github.com/users/SKYBITDev3/followers",
      "following_url": "https://api.github.com/users/SKYBITDev3/following{/other_user}",
      "gists_url": "https://api.github.com/users/SKYBITDev3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SKYBITDev3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SKYBITDev3/subscriptions",
      "organizations_url": "https://api.github.com/users/SKYBITDev3/orgs",
      "repos_url": "https://api.github.com/users/SKYBITDev3/repos",
      "events_url": "https://api.github.com/users/SKYBITDev3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SKYBITDev3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-11T18:01:44Z",
    "updated_at": "2023-12-11T18:05:38Z",
    "author_association": "NONE",
    "body": "> having an admin that can change the value is to big of a risk to have. In light of the recent events you may disagree.\r\n\r\nSuch superuser risks are nothing new, as the same can be said about upgradeable contracts which have been around for a while and have been increasingly used.\r\n\r\nThe [Contracts Wizard](https://wizard.openzeppelin.com) generates this code when Roles and UUPS upgradeability are selected:\r\n\r\n```solidity\r\nfunction _authorizeUpgrade(address newImplementation)\r\n        internal\r\n        onlyRole(UPGRADER_ROLE)\r\n        override\r\n    {}\r\n```\r\n\r\nAccess Control used with **multisig** mitigates the risks, as multiple people need to agree for a sensitive function to execute.\r\n\r\nSo similarly, a function that updates the forwarder address can be protected with an admin role:\r\n\r\n```solidity\r\n    function setTrustedForwarder(address _forwarder) public onlyRole(ADMIN_ROLE) {\r\n```\r\n... and that role (strongly) should be granted exclusively to a multisig (and the role revoked from the initial admin).\r\n\r\nThe [TimelockController](https://docs.openzeppelin.com/contracts/5.x/api/governance#TimelockController) reduces the risks even further as it adds a protective delay before execution, so that action could be taken if it was found that the call was malicious.\r\n\r\nSo with these security options there shouldn't be so much worry about removing `immutable` from `_trustedForwarder`.\r\n\r\nYou could add notes that advise granting roles exclusively to a multisig in order to protect sensitive functions e.g. that perform an upgrade or update the forwarder address, withdraw tokens from the contract, etc.\r\n\r\nGas savings pale in significance to security issues, with the ability to easily change the forwarder when needed being much more valuable like what has happened over the past week.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1850598021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1850690215",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4791#issuecomment-1850690215",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4791",
    "id": 1850690215,
    "node_id": "IC_kwDOA9tCBs5uT0qn",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-11T18:53:07Z",
    "updated_at": "2023-12-11T18:54:49Z",
    "author_association": "COLLABORATOR",
    "body": "> Gas savings pale in significance to security issues\r\n\r\nPeople blame us for every single unit of gas that can be saved. Up to the point that we stopped emitting some (very usefull) events that are not strictly required by ERC. Maybe doing the change you propose would get some positive feedback in the short term ... and in 3 month time people will want us to change again to save gas.\r\n\r\n---\r\n\r\nOne more thing is that such a change would be breaking. If you upgrade from an implementation that uses an immutable variable, to one that use storage, storage will be set to 0 and you'll need a reinitializer. We have a strong policy of not doing such breaking change in minor versions ... and I suspect by the next major we will remove Context altogether.\r\n\r\nSo again, our only real option would be having 2 versions, which we don't want to do for the reason stated above.\r\n\r\nIf we were to provide a storage based version, it would probably use a mapping, to that multiple forwarder can be supported in parallele.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1850690215/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1850690747",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4791#issuecomment-1850690747",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4791",
    "id": 1850690747,
    "node_id": "IC_kwDOA9tCBs5uT0y7",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-11T18:53:29Z",
    "updated_at": "2023-12-11T18:53:29Z",
    "author_association": "COLLABORATOR",
    "body": "@ernestognw Do you think we should have a storage based version of ERC2771Context ?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1850690747/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1858153973",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4791#issuecomment-1858153973",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4791",
    "id": 1858153973,
    "node_id": "IC_kwDOA9tCBs5uwS31",
    "user": {
      "login": "ernestognw",
      "id": 33379285,
      "node_id": "MDQ6VXNlcjMzMzc5Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/33379285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ernestognw",
      "html_url": "https://github.com/ernestognw",
      "followers_url": "https://api.github.com/users/ernestognw/followers",
      "following_url": "https://api.github.com/users/ernestognw/following{/other_user}",
      "gists_url": "https://api.github.com/users/ernestognw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ernestognw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ernestognw/subscriptions",
      "organizations_url": "https://api.github.com/users/ernestognw/orgs",
      "repos_url": "https://api.github.com/users/ernestognw/repos",
      "events_url": "https://api.github.com/users/ernestognw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ernestognw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-15T16:32:44Z",
    "updated_at": "2023-12-15T16:32:44Z",
    "author_association": "MEMBER",
    "body": "> @ernestognw Do you think we should have a storage based version of ERC2771Context ?\r\n\r\nNo. But I think we can add a `virtual` getter for it.\r\n\r\nWe always kept it immutable given the risks of enabling a new forwarder arbitrarily and the gas overhead of loading the forwarder address from storage. The intention was that a contract will always have only 1 forwarder and if that's secure, then the ERC2771Context implementer will remain secure.\r\n\r\nTurned out the Multicall mistake made ERC2771Context insecure, but it doesn't have anything to do with the forwarder. In my opinion, the original assumption of 1 immutable forwarder per contract remains valid (and its benefits). But I do recognize the need of customizing it (or revoke it).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1858153973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1858266662",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4791#issuecomment-1858266662",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4791",
    "id": 1858266662,
    "node_id": "IC_kwDOA9tCBs5uwuYm",
    "user": {
      "login": "SKYBITDev3",
      "id": 141273631,
      "node_id": "U_kgDOCGuqHw",
      "avatar_url": "https://avatars.githubusercontent.com/u/141273631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SKYBITDev3",
      "html_url": "https://github.com/SKYBITDev3",
      "followers_url": "https://api.github.com/users/SKYBITDev3/followers",
      "following_url": "https://api.github.com/users/SKYBITDev3/following{/other_user}",
      "gists_url": "https://api.github.com/users/SKYBITDev3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SKYBITDev3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SKYBITDev3/subscriptions",
      "organizations_url": "https://api.github.com/users/SKYBITDev3/orgs",
      "repos_url": "https://api.github.com/users/SKYBITDev3/repos",
      "events_url": "https://api.github.com/users/SKYBITDev3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SKYBITDev3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-15T17:53:41Z",
    "updated_at": "2023-12-15T17:53:41Z",
    "author_association": "NONE",
    "body": "> 1 immutable forwarder per contract remains valid (and its benefits). But I do recognize the need of customizing it (or revoke it)\r\n\r\nSo how can the forwarder address be customized or revoked when needed if it's `immutable`?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1858266662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1858384262",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4791#issuecomment-1858384262",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4791",
    "id": 1858384262,
    "node_id": "IC_kwDOA9tCBs5uxLGG",
    "user": {
      "login": "ernestognw",
      "id": 33379285,
      "node_id": "MDQ6VXNlcjMzMzc5Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/33379285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ernestognw",
      "html_url": "https://github.com/ernestognw",
      "followers_url": "https://api.github.com/users/ernestognw/followers",
      "following_url": "https://api.github.com/users/ernestognw/following{/other_user}",
      "gists_url": "https://api.github.com/users/ernestognw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ernestognw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ernestognw/subscriptions",
      "organizations_url": "https://api.github.com/users/ernestognw/orgs",
      "repos_url": "https://api.github.com/users/ernestognw/repos",
      "events_url": "https://api.github.com/users/ernestognw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ernestognw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-15T19:28:05Z",
    "updated_at": "2023-12-15T19:28:18Z",
    "author_association": "MEMBER",
    "body": "> So how can the forwarder address be customized or revoked when needed if it's `immutable`?\r\n\r\nAdding a virtual function\r\n\r\n```solidity\r\ncontract ERC2771Forwarder {\r\n  address private immutable _trustedForwarder;\r\n\r\n  ...\r\n\r\n  function trustedForwarder() public view virtual returns (address) {\r\n    return _trustedForwarder;\r\n  }\r\n}\r\n```\r\n\r\nThis is non-breaking and allows for customization after an upgrade.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1858384262/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1858455472",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4791#issuecomment-1858455472",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4791",
    "id": 1858455472,
    "node_id": "IC_kwDOA9tCBs5uxcew",
    "user": {
      "login": "SKYBITDev3",
      "id": 141273631,
      "node_id": "U_kgDOCGuqHw",
      "avatar_url": "https://avatars.githubusercontent.com/u/141273631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SKYBITDev3",
      "html_url": "https://github.com/SKYBITDev3",
      "followers_url": "https://api.github.com/users/SKYBITDev3/followers",
      "following_url": "https://api.github.com/users/SKYBITDev3/following{/other_user}",
      "gists_url": "https://api.github.com/users/SKYBITDev3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SKYBITDev3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SKYBITDev3/subscriptions",
      "organizations_url": "https://api.github.com/users/SKYBITDev3/orgs",
      "repos_url": "https://api.github.com/users/SKYBITDev3/repos",
      "events_url": "https://api.github.com/users/SKYBITDev3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SKYBITDev3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-15T20:35:13Z",
    "updated_at": "2023-12-15T21:09:44Z",
    "author_association": "NONE",
    "body": "OK, though how about for non-upgradeable contracts? e.g.:\r\n\r\n```solidity\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.23;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/metatx/ERC2771Context.sol\";\r\n\r\ncontract MyToken is ERC20, AccessControl, ERC2771Context {\r\n    constructor(address adminAddress, address forwarderAddress) ERC20(\"MyToken\", \"MTK\")  ERC2771Context(forwarderAddress) {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, adminAddress);\r\n    }\r\n\r\n    function _contextSuffixLength()\r\n        internal\r\n        view\r\n        override(Context, ERC2771Context)\r\n        returns (uint256)\r\n    {\r\n        return super._contextSuffixLength();\r\n    }\r\n\r\n    function _msgSender()\r\n        internal\r\n        view\r\n        override(Context, ERC2771Context)\r\n        returns (address)\r\n    {\r\n        return super._msgSender();\r\n    }\r\n\r\n    function _msgData()\r\n        internal\r\n        view\r\n        override(Context, ERC2771Context)\r\n        returns (bytes calldata)\r\n    {\r\n        return super._msgData();\r\n    }\r\n\r\n    function setTrustedForwarder(\r\n        address _forwarder\r\n    ) public onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        _setTrustedForwarder(_forwarder);\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1858455472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
