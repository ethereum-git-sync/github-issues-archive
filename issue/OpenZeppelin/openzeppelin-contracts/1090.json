{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1090",
  "id": 342459480,
  "node_id": "MDU6SXNzdWUzNDI0NTk0ODA=",
  "number": 1090,
  "title": "Improve RBAC role type",
  "user": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1000207718,
      "node_id": "MDU6TGFiZWwxMDAwMjA3NzE4",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/contracts",
      "name": "contracts",
      "color": "1d76db",
      "default": false,
      "description": "Smart contract code."
    },
    {
      "id": 1000230196,
      "node_id": "MDU6TGFiZWwxMDAwMjMwMTk2",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/breaking%20change",
      "name": "breaking change",
      "color": "b60205",
      "default": false,
      "description": "Changes that break backwards compatibility of the public API."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/3",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/3",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/3/labels",
    "id": 3479517,
    "node_id": "MDk6TWlsZXN0b25lMzQ3OTUxNw==",
    "number": 3,
    "title": "v2.0",
    "description": "Stable API",
    "creator": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 173,
    "state": "closed",
    "created_at": "2018-07-06T21:03:31Z",
    "updated_at": "2018-11-14T19:32:38Z",
    "due_on": "2018-10-19T07:00:00Z",
    "closed_at": "2018-11-14T19:32:38Z"
  },
  "comments": 12,
  "created_at": "2018-07-18T19:24:20Z",
  "updated_at": "2018-09-07T10:16:52Z",
  "closed_at": "2018-09-07T10:16:52Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "As of v1.11.0, we're using [strings](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/release-v1.11.0/contracts/ownership/rbac/RBAC.sol#L20) as roles in RBAC. This can be problematic, because strings are [UTF-8 encoded](https://solidity.readthedocs.io/en/v0.4.24/types.html#dynamically-sized-byte-array) in Solidity. Therefore, the following is valid Solidity code, and looks correct at a first glance:\r\n\r\n```\r\ncontract Campaign is RBAC {\r\n  function () external payable {\r\n    require(msg.value > 1 ether);\r\n    addRole(msg.sender, \"backer\");\r\n  }\r\n\r\n  function doBackerStuff() public onlyRole(\"backerâ€‹\") {\r\n    ...\r\n  }\r\n}\r\n```\r\n\r\n`doBackerStuff`'s modifier, however, does not contain the original string: an invisible [ZERO WIDTH SPACE (U+200B)](https://www.fileformat.info/info/unicode/char/200b/index.htm) character has been added at the end, causing seemingly correct code to contain an (intentional?) bug.\r\n\r\nA suggested alternative is to use integers as role identifiers, which removes this issue entirely. Assigning new identifiers to a role becomes a highly arbitrary task however, since numbers don't convey any role information, as opposed to strings like 'admin', 'curator', 'minter', etc. This could be sidestepped by using the hash of the role string as the integer identifier, e.g., `uint256 public constant adminRole = 0x01ffc9a7...; // 0x01ffc9a... == keccak256('admin')`, at the cost of placing the extra burden of having to use this pattern on the library users.\r\n",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/406052729",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1090#issuecomment-406052729",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090",
    "id": 406052729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjA1MjcyOQ==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-18T19:49:43Z",
    "updated_at": "2018-07-18T19:49:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Personally a fan of the bytes4(keccak) approach, since it gives you both globally(ish) unique identifiers (no collisions) and also visually distinct identifiers. Doing the bytes4(keccak) process _is_ annoying, though, agreed.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/406052729/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/406063129",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1090#issuecomment-406063129",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090",
    "id": 406063129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjA2MzEyOQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-18T20:26:44Z",
    "updated_at": "2018-07-18T20:26:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I wonder how hard it'd be to make a collision in 32 bits (i.e. `bytes4(keccak('role1234'))` matching `bytes4(keccak('admin'))`); we might want to increase it to bytes8 (or higher?).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/406063129/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/406080235",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1090#issuecomment-406080235",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090",
    "id": 406080235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjA4MDIzNQ==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-18T21:28:45Z",
    "updated_at": "2018-07-18T21:29:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "ah true, let's just future-proof it with bytes8\r\n\r\nwith bytes4, there are about 65,000 unique ids (`sqrt(2^(8 * 4))`)\r\nwith bytes8, there are about 4,294,967,296 unique ids (`sqrt(2^(8 * 8))`)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/406080235/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/412167887",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1090#issuecomment-412167887",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090",
    "id": 412167887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjE2Nzg4Nw==",
    "user": {
      "login": "maraoz",
      "id": 287189,
      "node_id": "MDQ6VXNlcjI4NzE4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/287189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maraoz",
      "html_url": "https://github.com/maraoz",
      "followers_url": "https://api.github.com/users/maraoz/followers",
      "following_url": "https://api.github.com/users/maraoz/following{/other_user}",
      "gists_url": "https://api.github.com/users/maraoz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maraoz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maraoz/subscriptions",
      "organizations_url": "https://api.github.com/users/maraoz/orgs",
      "repos_url": "https://api.github.com/users/maraoz/repos",
      "events_url": "https://api.github.com/users/maraoz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maraoz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-10T18:30:38Z",
    "updated_at": "2018-08-10T18:30:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "amazing @nventuro !",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/412167887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/413203994",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1090#issuecomment-413203994",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090",
    "id": 413203994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzIwMzk5NA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-15T13:52:34Z",
    "updated_at": "2018-08-15T13:52:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "(see #1146 for some relevant discussion first, if you haven't)\r\n\r\nSo, I've tried out a couple of approaches, and am not entirely sure on which one we should pick moving forward. I've split this into multiple posts to make reading it easier.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/413203994/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/413204043",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1090#issuecomment-413204043",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090",
    "id": 413204043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzIwNDA0Mw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-15T13:52:43Z",
    "updated_at": "2018-08-15T14:11:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shrugs proposed keeping the current method, but replacing the string with a hash:\r\n\r\n```\r\ncontract MintableToken {\r\n  bytes32 public constant ROLE_MINTER = 0xf1b18b0abd8edbdba00557edd963301d3be0cba30d024e258df9c747cbbf5e42;\r\n\r\n  modifier hasMintPermission() {\r\n    checkRole(msg.sender, ROLE_MINTER);\r\n    _;\r\n  }\r\n\r\n  function addMinter(address _minter) public onlyAdmin {\r\n    addRole(_minter, ROLE_MINTER);\r\n  }\r\n\r\n  function removeMinter(address _minter) public onlyAdmin {\r\n    removeRole(_minter, ROLE_MINTER);\r\n  }\r\n}\r\n```\r\n\r\nThe main benefits of this approach stem from the ability to refer to the role with an identifier, allowing to not  declare the `hasMintPermission` modifier, since we can just use `hasRole(ROLE_MINTER)`. \r\n\r\nIt also makes role assignment easier, e.g. with an admin role:\r\n\r\n```\r\nfunction addGenericRole(address _account, bytes32 _role) public onlyAdmin {\r\n  addRole(_account, _role); // role can be ROLE_MINTER, ROLE_BURNER, etc\r\n}\r\n```\r\n\r\nFinally, role assignment during construction would also be somewhat straightforward:\r\n```\r\nconstructor(bytes32[] _roles, address[] _accounts) public {\r\n  require(_roles.length == _accounts.length);\r\n      \r\n  for (uint256 i = 0; i < _roles.length; ++i) {\r\n    addRole(_roles[i], _accounts[i])\r\n  }\r\n}\r\n```\r\n\r\nAnd once the experimental ABI encoder hits,\r\n```\r\nstruct Designator {\r\n  bytes32 roleId;\r\n  address[] accounts;\r\n}\r\n\r\nconstructor(Designator[] _designators) public {\r\n  for (uint256 i = 0; i < _designators.length; ++i) {\r\n    for (uint256 j = 0; j < _designators[i].accounts.length; ++j) {\r\n      addRole(_designators[i].roleId, _designators[i].accounts[j]);\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nA couple issues, though:\r\n  * The ids, though constant, are not part of the contract type (i.e. you can't do `MintableToken.MINTER_ROLE`): you need to (afaik) either a) have a deployed contract and call the getter on it, or b) manually copy the id. \r\n  * It is possible to assign addresses to roles that do nothing. In other words, every single possible role exists and is valid.\r\n  * Since everything is generic, adding validation rules for certain roles (e.g. only allow one admin, admin must be a deployed contract, etc.) becomes a bit cumbersome.\r\n\r\nNote that all three of these issues are also present in the `RBAC` contract.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/413204043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/413209760",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1090#issuecomment-413209760",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090",
    "id": 413209760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzIwOTc2MA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-15T14:10:46Z",
    "updated_at": "2018-08-15T14:33:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@frangio, on the other hand, suggested dropping `RBAC` and using the `Roles` library directly:\r\n\r\n```\r\ncontract MintableToken {\r\n  using Roles for Roles.Role;\r\n\r\n  Roles.Role private minters;\r\n\r\n  modifier hasMintPermission() {\r\n    minters.check(msg.sender);\r\n    _;\r\n  }\r\n\r\n  function addMinter(address _minter) internal {\r\n    minters.add(_minter);\r\n  }\r\n\r\n  function removeMinter(address _minter) internal {\r\n    minters.remove(_minter);\r\n  }\r\n}\r\n```\r\n\r\nBecause there's no way to refer to each role (except by their storage slot - more on that later), we'd need to provide specific functions for each role, e.g. `addMinter`, `addBurner`, `addAdmin`, etc., leading to repeated non-reusable code. Role initialization for contracts will multiple roles wouldn't be that bad though, save for the fact that we'd need to provide a distinct array argument for each role:\r\n\r\n```\r\nlibrary Roles {\r\n  function addMany(Role storage _role, address[] _accounts) {\r\n    for (uint256 i = 0; i < _accounts.length; ++i) {\r\n      add(_role, _accounts[i]);\r\n    }\r\n  }\r\n  ...\r\n}\r\n\r\ncontract MintableToken {\r\n  using Roles for Roles.Role;\r\n\r\n  Roles.Role private minters;\r\n\r\n  constructor(address[] _minters) {\r\n    minters.addMany(_minters);\r\n  }\r\n}\r\n\r\n// Same for BurnableToken\r\n\r\ncontract Derived is MintableToken, BurnableToken {\r\n  constructor(address[] _minters, address[] _burners) \r\n    public\r\n    MintableToken(_minters) \r\n    BurnableToken(_burners) \r\n  { }\r\n}\r\n```\r\n\r\nThis pattern also allows each base class to easily add custom validation rules in their constructor (e.g. only allow a certain number of address).\r\n\r\nOne of the issues with this is the need to have multiple arguments in the constructor, which stems from the fact that `public` and `external` functions cannot have arguments of `storage` location. However, if (once) Solidity [exposes the storage layout](https://github.com/ethereum/solidity/pull/4017), I believe it would be possible to pass the storage slot to a function, and have it cast it into a storage reference. While hacky, I like the underlying principle: the storage slot would in effect act as the id of the role, and would be both provisioned automatically and guarantee no collisions. They'd be contract specific, but I don't think this is an issue: I don't see a case where the roles have any meaning outside of a single contract. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/413209760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/413211607",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1090#issuecomment-413211607",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090",
    "id": 413211607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzIxMTYwNw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-15T14:17:12Z",
    "updated_at": "2018-08-15T14:17:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm currently leaning towards @frangio's proposal, because it is able to achieve the same goals as `RBAC` while doing away with the whole id -> role mapping, and provides easy to implement custom validations. I don't think our contracts will have so many roles for the associated issues to become a problem, and if they eventually do, we could at that point take another stab at this.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/413211607/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/413320483",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1090#issuecomment-413320483",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090",
    "id": 413320483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzMyMDQ4Mw==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-15T20:11:39Z",
    "updated_at": "2018-08-15T20:11:39Z",
    "author_association": "MEMBER",
    "body": "Great write up @nventuro! I really liked the second proposal. (I wouldn't say it's mine, though.)\r\n\r\nWould it be possible to run into a problem with having too many arrays in the constructor? There are some limits imposed by the Solidity compiler, right?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/413320483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/413584995",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1090#issuecomment-413584995",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090",
    "id": 413584995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzU4NDk5NQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T15:25:53Z",
    "updated_at": "2018-08-16T15:25:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes - though in Remix I managed to compile a constructor receiving 15 arguments of type `address[]`, which I think leaves us with plenty of headroom for now.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/413584995/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/413602199",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1090#issuecomment-413602199",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090",
    "id": 413602199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzYwMjE5OQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T16:18:32Z",
    "updated_at": "2018-08-16T16:18:32Z",
    "author_association": "MEMBER",
    "body": "Interesting. It doesn't depend on the length of the arrays, does it?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/413602199/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/413651801",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1090#issuecomment-413651801",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1090",
    "id": 413651801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzY1MTgwMQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T19:04:07Z",
    "updated_at": "2018-08-16T19:04:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "No, it depends on the _types_ of the arguments.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/413651801/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
