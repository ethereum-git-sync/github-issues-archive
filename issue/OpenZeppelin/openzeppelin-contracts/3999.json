{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3999",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3999/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3999/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3999/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3999",
  "id": 1556554353,
  "node_id": "I_kwDOA9tCBs5cxyJx",
  "number": 3999,
  "title": "Add new Bytes utility to decode `bytes memory`",
  "user": {
    "login": "chiro-hiro",
    "id": 8078873,
    "node_id": "MDQ6VXNlcjgwNzg4NzM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8078873?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chiro-hiro",
    "html_url": "https://github.com/chiro-hiro",
    "followers_url": "https://api.github.com/users/chiro-hiro/followers",
    "following_url": "https://api.github.com/users/chiro-hiro/following{/other_user}",
    "gists_url": "https://api.github.com/users/chiro-hiro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chiro-hiro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chiro-hiro/subscriptions",
    "organizations_url": "https://api.github.com/users/chiro-hiro/orgs",
    "repos_url": "https://api.github.com/users/chiro-hiro/repos",
    "events_url": "https://api.github.com/users/chiro-hiro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chiro-hiro/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-01-25T12:19:30Z",
  "updated_at": "2023-02-21T07:42:48Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nDecode data which was packed by `abi.encodePacked()` into a `bytes memory`\r\n\r\nhttps://github.com/ethereum/solidity/issues/6919\r\n\r\n**üìù Details**\r\n\r\n- Convert `bytes memory` to `bytes32[]`\r\n- Read sub `bytes memory` of input `bytes memeory`\r\n- Read `uint256`, `uint160`, `uint128`, `uint64`, `uint32`, `uint16` of input `bytes memory` at a given offset.\r\n\r\nPlease check #3998 for the detail, the pr is in `WIP`. I will complete the rest after this discussion is resolved.\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contracts Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/CONTRIBUTING.md -->\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3999/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3999/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1404289642",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3999#issuecomment-1404289642",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3999",
    "id": 1404289642,
    "node_id": "IC_kwDOA9tCBs5Ts8Jq",
    "user": {
      "login": "GrantHoffman",
      "id": 12550520,
      "node_id": "MDQ6VXNlcjEyNTUwNTIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/12550520?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GrantHoffman",
      "html_url": "https://github.com/GrantHoffman",
      "followers_url": "https://api.github.com/users/GrantHoffman/followers",
      "following_url": "https://api.github.com/users/GrantHoffman/following{/other_user}",
      "gists_url": "https://api.github.com/users/GrantHoffman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GrantHoffman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GrantHoffman/subscriptions",
      "organizations_url": "https://api.github.com/users/GrantHoffman/orgs",
      "repos_url": "https://api.github.com/users/GrantHoffman/repos",
      "events_url": "https://api.github.com/users/GrantHoffman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GrantHoffman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-25T22:07:32Z",
    "updated_at": "2023-01-25T22:07:32Z",
    "author_association": "NONE",
    "body": "How will this work, given that the encoded type is ambigious?\r\n\r\nAre you going to create a library?\r\n\r\n    uint256 offset = 0;\r\n    (uint256  myVar,  uint256 newOffset) =  decodePackedUint256(bytes)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1404289642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1405126692",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3999#issuecomment-1405126692",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3999",
    "id": 1405126692,
    "node_id": "IC_kwDOA9tCBs5TwIgk",
    "user": {
      "login": "chiro-hiro",
      "id": 8078873,
      "node_id": "MDQ6VXNlcjgwNzg4NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8078873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chiro-hiro",
      "html_url": "https://github.com/chiro-hiro",
      "followers_url": "https://api.github.com/users/chiro-hiro/followers",
      "following_url": "https://api.github.com/users/chiro-hiro/following{/other_user}",
      "gists_url": "https://api.github.com/users/chiro-hiro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chiro-hiro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chiro-hiro/subscriptions",
      "organizations_url": "https://api.github.com/users/chiro-hiro/orgs",
      "repos_url": "https://api.github.com/users/chiro-hiro/repos",
      "events_url": "https://api.github.com/users/chiro-hiro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chiro-hiro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-26T14:51:22Z",
    "updated_at": "2023-01-26T14:51:22Z",
    "author_association": "NONE",
    "body": "Here is an example of `Bytes.sol`, my implementation could be found in #3998 \r\n\r\n```solidity\r\npragma solidity ^0.8.0;\r\nimport \"./Bytes.sol\";\r\n\r\ncontract EncodingTx {\r\n    using Bytes for bytes;\r\n\r\n    function encodeTransaction(address from, address to, uint256 value, uint64 nonce) \r\n    public pure returns (bytes memory) {\r\n        return abi.encodePacked(from, to, nonce, value);\r\n    }\r\n    \r\n    function decodeTransaction(bytes memory input)\r\n    external pure returns(address from, address to, uint256 value, uint64 nonce){\r\n        uint256 offset;\r\n        uint160 uintAddress;\r\n        (uintAddress, offset) =  input.readUint160(0);\r\n        from = address(uintAddress);\r\n        (uintAddress, offset) =  input.readUint160(offset);\r\n        to = address(uintAddress);\r\n        (nonce, offset) =  input.readUint64(offset);\r\n        (value, offset) =  input.readUint256(offset);\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1405126692/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1405152087",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3999#issuecomment-1405152087",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3999",
    "id": 1405152087,
    "node_id": "IC_kwDOA9tCBs5TwOtX",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-26T15:08:59Z",
    "updated_at": "2023-01-26T15:08:59Z",
    "author_association": "COLLABORATOR",
    "body": "There already exist quite a few `Bytes` libraries. \r\n\r\nThe first one that comes to mind is [this one](https://github.com/GNSPS/solidity-bytes-utils/blob/master/contracts/BytesLib.sol).\r\n\r\nThere is also the [RLP reader](https://github.com/fx-portal/contracts/blob/main/contracts/lib/RLPReader.sol) that is used by polygon's FX Portal.\r\n\r\nI'm not sure we want to start yet another library for bytes manipulation. If we do, we'll need serious reasons to do so, and that start by studying the existing alternative. Unless there is something we can do better, I'm not sure why we should dedicate ressources to this.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1405152087/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1437987039",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3999#issuecomment-1437987039",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3999",
    "id": 1437987039,
    "node_id": "IC_kwDOA9tCBs5VtfDf",
    "user": {
      "login": "chiro-hiro",
      "id": 8078873,
      "node_id": "MDQ6VXNlcjgwNzg4NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8078873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chiro-hiro",
      "html_url": "https://github.com/chiro-hiro",
      "followers_url": "https://api.github.com/users/chiro-hiro/followers",
      "following_url": "https://api.github.com/users/chiro-hiro/following{/other_user}",
      "gists_url": "https://api.github.com/users/chiro-hiro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chiro-hiro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chiro-hiro/subscriptions",
      "organizations_url": "https://api.github.com/users/chiro-hiro/orgs",
      "repos_url": "https://api.github.com/users/chiro-hiro/repos",
      "events_url": "https://api.github.com/users/chiro-hiro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chiro-hiro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-21T07:42:47Z",
    "updated_at": "2023-02-21T07:42:47Z",
    "author_association": "NONE",
    "body": "This library provide the minimal utility to unpack the data which was packed by `abi.encodePacked()`. I'm preparing a PR in #3998.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1437987039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
