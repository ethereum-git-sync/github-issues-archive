{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2594",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2594/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2594/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2594/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2594",
  "id": 832643073,
  "node_id": "MDU6SXNzdWU4MzI2NDMwNzM=",
  "number": 2594,
  "title": "Improve ERC721 design for OpenSea proxy compatibility",
  "user": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2021-03-16T10:23:54Z",
  "updated_at": "2022-07-13T19:53:23Z",
  "closed_at": "2021-03-16T18:32:22Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "**🧐 Motivation**\r\n\r\nOpenSea encourages ERC721 developer to include an additional \"proxies\" approval to smoothen the user experience. This is made available in a [dedicated repo](https://github.com/ProjectOpenSea/opensea-creatures/blob/master/contracts/ERC721Tradable.sol#L64-L79) that is unfortunately still using solidity 0.5.0.\r\n\r\n**📝 Details**\r\n\r\nThe ERC721 tradable mechanism is implemented through a hardcoded `proxyRegistryAddress`\r\n\r\n```\r\ncontract ProxyRegistry {\r\n    mapping(address => OwnableDelegateProxy) public proxies;\r\n}\r\n```\r\n\r\nthat is used when checking approval for all:\r\n\r\n```\r\nfunction isApprovedForAll(address owner, address operator)\r\n    public\r\n    view\r\n    returns (bool)\r\n{\r\n    // Whitelist OpenSea proxy contract for easy trading.\r\n    ProxyRegistry proxyRegistry = ProxyRegistry(proxyRegistryAddress);\r\n    if (address(proxyRegistry.proxies(owner)) == operator) {\r\n        return true;\r\n    }\r\n     return super.isApprovedForAll(owner, operator);\r\n}\r\n```\r\n\r\nStill, reproducing this in our latest version (3.4.0 and 4.0) is made difficult by the restriction we enforce on virtual overloading:\r\n- in addition to being public, `isApprovedForAll` is used in 2 functions (`approve` and `_isApprovedOrOwner`). However, in both cases, we force the use on the base implementation, meaning that overloading `isApprovedForAll` has no effect on the contract behavior. (this create a \"gap\" between what the contract advertizes, and what it actually does, which I see as an issue)\r\n- we could also overload `_isApprovedOrOwner`, but this requires extra `ownerOf` calls, meaning unnecessary sload :/\r\n- even with both functions overloaded, `approve` would still not behave correctly, and would also need to be overloaded. Due to its design, this last overloading cannot rely on a super call, and must thus the entirely rewritten.\r\n\r\nWe can see that, while this update was almost trivial on early versions of contracts, the inheritance restrictions that are currently part of the codebase are a pain to work with, and are more likely to cause issues due to inconsistent behavior between functions than to actually protect end-users. Even advanced users can have a hard time realizing the complexity of it, particularly if they are used to import contracts and not have a deep look at it.\r\nHopefully, they have good exhaustive tests and see that before deploying.\r\n\r\nMy proposition would be, at least for the `isApprovedForAll`, to use the overloaded version of the public function for the internal logic. `ownerOf` is complex since it returns an address that is supposed to match the internal book keeping, but `isApprovedForAll` is just a boolean flag that IMO should be easily overloaded.\r\n\r\n\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2594/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2594/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/800184494",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2594#issuecomment-800184494",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2594",
    "id": 800184494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDE4NDQ5NA==",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-16T11:36:57Z",
    "updated_at": "2021-03-16T11:36:57Z",
    "author_association": "COLLABORATOR",
    "body": "Note: in ERC1155, isApprovedForAll is directly overidable... so we also have inconsistent coding behavior between our own contracts",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/800184494/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/800503813",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2594#issuecomment-800503813",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2594",
    "id": 800503813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDUwMzgxMw==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-16T18:27:03Z",
    "updated_at": "2021-03-16T18:27:03Z",
    "author_association": "MEMBER",
    "body": "A reminder for anyone overriding functions: people who wish to override should consult the source code to fully understand the impact it will have, and should consider whether they need to override additional functions to achieve the desired behavior.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/800503813/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/833307501",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2594#issuecomment-833307501",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2594",
    "id": 833307501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMzMwNzUwMQ==",
    "user": {
      "login": "Marxpark",
      "id": 16205245,
      "node_id": "MDQ6VXNlcjE2MjA1MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/16205245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marxpark",
      "html_url": "https://github.com/Marxpark",
      "followers_url": "https://api.github.com/users/Marxpark/followers",
      "following_url": "https://api.github.com/users/Marxpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marxpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marxpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marxpark/subscriptions",
      "organizations_url": "https://api.github.com/users/Marxpark/orgs",
      "repos_url": "https://api.github.com/users/Marxpark/repos",
      "events_url": "https://api.github.com/users/Marxpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marxpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-06T07:45:08Z",
    "updated_at": "2021-05-06T07:45:08Z",
    "author_association": "NONE",
    "body": "I've been working on a contract and can't find what the proxy address should be set to at deployment. Can someone point me into the right direction please?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/833307501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/833512553",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2594#issuecomment-833512553",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2594",
    "id": 833512553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMzUxMjU1Mw==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-06T13:13:50Z",
    "updated_at": "2021-05-06T13:13:50Z",
    "author_association": "MEMBER",
    "body": "@Marxpark I think this question is specific to OpenSea. Have you tried asking in [their Discord](https://discordapp.com/invite/ga8EJbv)?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/833512553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/915680620",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2594#issuecomment-915680620",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2594",
    "id": 915680620,
    "node_id": "IC_kwDOA9tCBs42lC1s",
    "user": {
      "login": "michael-stajer",
      "id": 1163483,
      "node_id": "MDQ6VXNlcjExNjM0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1163483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michael-stajer",
      "html_url": "https://github.com/michael-stajer",
      "followers_url": "https://api.github.com/users/michael-stajer/followers",
      "following_url": "https://api.github.com/users/michael-stajer/following{/other_user}",
      "gists_url": "https://api.github.com/users/michael-stajer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michael-stajer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michael-stajer/subscriptions",
      "organizations_url": "https://api.github.com/users/michael-stajer/orgs",
      "repos_url": "https://api.github.com/users/michael-stajer/repos",
      "events_url": "https://api.github.com/users/michael-stajer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michael-stajer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-09T01:08:37Z",
    "updated_at": "2021-09-09T01:08:37Z",
    "author_association": "NONE",
    "body": "> I've been working on a contract and can't find what the proxy address should be set to at deployment. Can someone point me into the right direction please?\r\n\r\nLook at the migration scripts in the OS repo -- the address is set at the time the contract is deploy through the constructor.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/915680620/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/930305080",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2594#issuecomment-930305080",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2594",
    "id": 930305080,
    "node_id": "IC_kwDOA9tCBs43c1Q4",
    "user": {
      "login": "michael-stajer",
      "id": 1163483,
      "node_id": "MDQ6VXNlcjExNjM0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1163483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michael-stajer",
      "html_url": "https://github.com/michael-stajer",
      "followers_url": "https://api.github.com/users/michael-stajer/followers",
      "following_url": "https://api.github.com/users/michael-stajer/following{/other_user}",
      "gists_url": "https://api.github.com/users/michael-stajer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michael-stajer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michael-stajer/subscriptions",
      "organizations_url": "https://api.github.com/users/michael-stajer/orgs",
      "repos_url": "https://api.github.com/users/michael-stajer/repos",
      "events_url": "https://api.github.com/users/michael-stajer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michael-stajer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-29T15:50:33Z",
    "updated_at": "2021-09-29T15:50:57Z",
    "author_association": "NONE",
    "body": "@DevonMartens In the repo posted in the OP's original issue, look at the migrations script 2_deploy_contracts.js, line 28: https://github.com/ProjectOpenSea/opensea-creatures/blob/f7257a043e82fae8251eec2bdde37a44fee474c4/migrations/2_deploy_contracts.js#L28 \r\n\r\nThat is where the actual opensea address is being injected (at deploy).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/930305080/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1002958475",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2594#issuecomment-1002958475",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2594",
    "id": 1002958475,
    "node_id": "IC_kwDOA9tCBs47x-6L",
    "user": {
      "login": "itinance",
      "id": 1758597,
      "node_id": "MDQ6VXNlcjE3NTg1OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1758597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/itinance",
      "html_url": "https://github.com/itinance",
      "followers_url": "https://api.github.com/users/itinance/followers",
      "following_url": "https://api.github.com/users/itinance/following{/other_user}",
      "gists_url": "https://api.github.com/users/itinance/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/itinance/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/itinance/subscriptions",
      "organizations_url": "https://api.github.com/users/itinance/orgs",
      "repos_url": "https://api.github.com/users/itinance/repos",
      "events_url": "https://api.github.com/users/itinance/events{/privacy}",
      "received_events_url": "https://api.github.com/users/itinance/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-30T10:07:35Z",
    "updated_at": "2021-12-30T10:07:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Specifically for use on Polygon, the official sample code will `revert` because the proxyAddresses do not point to a contract that meets the required interface. Instead\r\n\r\n        ProxyRegistry proxyRegistry = ProxyRegistry(proxyRegistryAddress);\r\n        if (address(proxyRegistry.proxies(_owner)) == _operator) {\r\n            return true;\r\n        }\r\n\r\nit has to be\r\n\r\n        if (_operator == proxyRegistryAddress) {\r\n            return true;\r\n        }\r\n\r\nwhile `proxyRegistryAddress` is the corresponding proxy address, which can be found here: https://docs.opensea.io/docs/polygon-basic-integration\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1002958475/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
