{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1656",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1656/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1656/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1656/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1656",
  "id": 415462845,
  "node_id": "MDU6SXNzdWU0MTU0NjI4NDU=",
  "number": 1656,
  "title": "Add redundant address guard to ERC20Migrator migrate function",
  "user": {
    "login": "nikeshnazareth",
    "id": 22266706,
    "node_id": "MDQ6VXNlcjIyMjY2NzA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/22266706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nikeshnazareth",
    "html_url": "https://github.com/nikeshnazareth",
    "followers_url": "https://api.github.com/users/nikeshnazareth/followers",
    "following_url": "https://api.github.com/users/nikeshnazareth/following{/other_user}",
    "gists_url": "https://api.github.com/users/nikeshnazareth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nikeshnazareth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nikeshnazareth/subscriptions",
    "organizations_url": "https://api.github.com/users/nikeshnazareth/orgs",
    "repos_url": "https://api.github.com/users/nikeshnazareth/repos",
    "events_url": "https://api.github.com/users/nikeshnazareth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nikeshnazareth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1000207718,
      "node_id": "MDU6TGFiZWwxMDAwMjA3NzE4",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/contracts",
      "name": "contracts",
      "color": "1d76db",
      "default": false,
      "description": "Smart contract code."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-02-28T06:09:12Z",
  "updated_at": "2019-03-02T15:36:37Z",
  "closed_at": "2019-03-02T15:36:37Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "This is just a code style issue and I'm not sure if it's intentional, but I'm mentioning it in case it's an oversight. \r\n\r\nConsider the `ERC20Migrator` `migrate` function:\r\nhttps://github.com/OpenZeppelin/openzeppelin-solidity/blob/a1f168be961b6c2f7592716864d7b9b104365476/contracts/drafts/ERC20Migrator.sol#L78-L87\r\n\r\nThis could be called before `beginMigration` is called, which means `_newToken` is not set (it defaults to zero). Such a call would (correctly) fail, because `_newToken.mint` is undefined.\r\n\r\nHowever, it seems to me that the OZ defensive programming style is to check preconditions and explicitly fail if they are not met. To that end, this function could have the guard:\r\n> `require(address(_newToken) != address(0));`\r\n\r\nI'm happy to make the PR if you agree",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1656/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1656/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/468338642",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1656#issuecomment-468338642",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1656",
    "id": 468338642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODMzODY0Mg==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-28T16:26:59Z",
    "updated_at": "2019-02-28T16:26:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for spotting this @nikeshnazareth! I agree with your assesment, an explicit check is better than our current behavior of relying on `call` failing.\r\n\r\nFor reference, the reason why `newToken` isn't set at construction time and `beginMigration` needs to exist, is that said token will be an `ERC20Mintable`, with `ERC20Migrator` set as a minter. This obviously cannot be done before creation (at least not without using `CREATE2` :stuck_out_tongue:).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/468338642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
