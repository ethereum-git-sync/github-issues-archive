{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1810",
  "id": 461081772,
  "node_id": "MDU6SXNzdWU0NjEwODE3NzI=",
  "number": 1810,
  "title": "EIP191: Signature validation in solidity",
  "user": {
    "login": "jMyles",
    "id": 311973,
    "node_id": "MDQ6VXNlcjMxMTk3Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/311973?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jMyles",
    "html_url": "https://github.com/jMyles",
    "followers_url": "https://api.github.com/users/jMyles/followers",
    "following_url": "https://api.github.com/users/jMyles/following{/other_user}",
    "gists_url": "https://api.github.com/users/jMyles/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jMyles/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jMyles/subscriptions",
    "organizations_url": "https://api.github.com/users/jMyles/orgs",
    "repos_url": "https://api.github.com/users/jMyles/repos",
    "events_url": "https://api.github.com/users/jMyles/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jMyles/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1000207718,
      "node_id": "MDU6TGFiZWwxMDAwMjA3NzE4",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/contracts",
      "name": "contracts",
      "color": "1d76db",
      "default": false,
      "description": "Smart contract code."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2019-06-26T16:57:33Z",
  "updated_at": "2021-03-10T15:31:33Z",
  "closed_at": "2021-03-10T15:31:33Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hey friends!  For the past few months, we at @NuCypher have been finding all the right places to insert effort in order to achieve basic signing and verifying of arbitrary payloads across wallets and dapps.  Last year, we sponsored a gitcoin bounty in order to close EIPs 191 and 712, which each deal with signing and verifying using wallet keys.\r\n\r\nNow that [EIP191](https://github.com/ethereum/EIPs/issues/191) has landed, we are looking for the best place to put the verification logic in solidity.\r\n\r\n**üßê Motivation**\r\n<!-- Is your feature request related to a specific problem? Is it just a crazy idea? Tell us about it! -->\r\nOn-chain verification of EIP191 signatures is clearly an essential piece of this puzzle, and we are trying to head off any new boilerplate solidity being sprayed all over every dapp codebase in the world.\r\n\r\n**üìù Details**\r\n<!-- Please describe your feature request in detail. -->\r\n\r\nMy colleagues @szotov and @cygnusv have already done most (perhaps all) of the legwork, here:\r\n\r\nhttps://github.com/nucypher/nucypher/blame/6cdfcf033270371660e4cb5b1dcebd169574e31c/nucypher/blockchain/eth/sol/source/contracts/lib/SignatureVerifier.sol\r\n\r\n(Note: This PR is subject to a subsequent rebase and thus might not be available at that URL.  In that event, you can see it at this gist: https://gist.github.com/jMyles/9526dee62674718ab97b93793ac45bfa)\r\n\r\nSo what do you think?  Is OpenZeppelin the right place for the canonical version of this logic?\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/CONTRIBUTING.md -->\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 2,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/505962622",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1810#issuecomment-505962622",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810",
    "id": 505962622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTk2MjYyMg==",
    "user": {
      "login": "cygnusv",
      "id": 2564234,
      "node_id": "MDQ6VXNlcjI1NjQyMzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2564234?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cygnusv",
      "html_url": "https://github.com/cygnusv",
      "followers_url": "https://api.github.com/users/cygnusv/followers",
      "following_url": "https://api.github.com/users/cygnusv/following{/other_user}",
      "gists_url": "https://api.github.com/users/cygnusv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cygnusv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cygnusv/subscriptions",
      "organizations_url": "https://api.github.com/users/cygnusv/orgs",
      "repos_url": "https://api.github.com/users/cygnusv/repos",
      "events_url": "https://api.github.com/users/cygnusv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cygnusv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-26T17:06:07Z",
    "updated_at": "2019-06-26T17:06:07Z",
    "author_association": "NONE",
    "body": "Correct link to `SignatureVerifier` with EIP191 logic:\r\nhttps://github.com/nucypher/nucypher/blame/4ea10a651ddf5452cd187d3070e5259133aea4ff/nucypher/blockchain/eth/sol/source/contracts/lib/SignatureVerifier.sol",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/505962622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/506021711",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1810#issuecomment-506021711",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810",
    "id": 506021711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjAyMTcxMQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-26T19:55:32Z",
    "updated_at": "2019-06-26T19:55:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey there Justin, great talking to you again!\r\n\r\nEIP191 definitely sounds like something we'd be interested in: we currently have a somewhat barebones [`ECDSA`](https://docs.openzeppelin.org/v2.3.0/api/cryptography#ecdsa) library to handle address recovery, but while working on projects with different signing needs, we've also come to the conclusion that some standard signing specification is required. Thank you for suggesting this!\r\n\r\nRegarding the EIP itself, you mentioned it 'has landed', but the EIP [is listed as a draft](https://eips.ethereum.org/EIPS/eip-191), and I didn't find any activity related to it since April 2018 - is this happening somewhere else that I'm not seeing?\r\n\r\nApart from the contract code, we should also have tests for such a module. If I recall correctly you mostly work with Python, whereas our test suite is written in JavaScript and truffle. We (or someone from the community) could probably take up the writing of the tests, but if you already have some test cases developed it'd be great if you could share them.\r\n\r\nFinally, I noticed your repo is licensed under AGPL-3.0, whereas we use the MIT license. Would you be willing to contribute your work to OpenZeppelin under this license?\r\n\r\nOnce again, thank you for this!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/506021711/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/506068651",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1810#issuecomment-506068651",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810",
    "id": 506068651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjA2ODY1MQ==",
    "user": {
      "login": "cygnusv",
      "id": 2564234,
      "node_id": "MDQ6VXNlcjI1NjQyMzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2564234?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cygnusv",
      "html_url": "https://github.com/cygnusv",
      "followers_url": "https://api.github.com/users/cygnusv/followers",
      "following_url": "https://api.github.com/users/cygnusv/following{/other_user}",
      "gists_url": "https://api.github.com/users/cygnusv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cygnusv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cygnusv/subscriptions",
      "organizations_url": "https://api.github.com/users/cygnusv/orgs",
      "repos_url": "https://api.github.com/users/cygnusv/repos",
      "events_url": "https://api.github.com/users/cygnusv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cygnusv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-26T22:30:33Z",
    "updated_at": "2019-06-26T22:31:15Z",
    "author_association": "NONE",
    "body": "Hi Nicol√°s,\r\nre: tests, we currently have a small test in Python:\r\nhttps://github.com/nucypher/nucypher/blame/4ea10a651ddf5452cd187d3070e5259133aea4ff/tests/blockchain/eth/contracts/lib/test_signature_verifier.py#L152\r\nIn case you're interested, I'd be glad to test this with your setting (JS + Truffle). \r\n\r\nre: license, I don't think that'd be a problem for us. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/506068651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/507336271",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1810#issuecomment-507336271",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810",
    "id": 507336271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzMzNjI3MQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-01T16:29:32Z",
    "updated_at": "2019-07-01T16:30:08Z",
    "author_association": "MEMBER",
    "body": "`SignatureVerifier` doesn't seem to provide anything specific to EIP 191, does it? It looks like essentially the same functionality that we have in [`ECDSA`](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/cryptography/ECDSA.sol).\r\n\r\nSince EIP 191 proposes an alternative to `personal_sign`, which we have encoded as [`ECDSA.toEthSignedMessageHash`](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/c9f328ef66251db7fac7c704dd6c5523fc53b0ab/contracts/cryptography/ECDSA.sol#L77), my understanding is that to support EIP 191 in OpenZeppelin we would have to provide an alternative to `toEthSignedMessageHash`, or one alternative per \"version\" in EIP 191.\r\n\r\nIt seems like [EIP 712](https://eips.ethereum.org/EIPS/eip-712) is the real deal here. I haven't dug into how it relates to EIP 191, but it seems like that's what we should be looking to support mainly. A lot of activity in [Ethereum Magicians](https://ethereum-magicians.org/t/eip-712-eth-signtypeddata-as-a-standard-for-machine-verifiable-and-human-readable-typed-data-signing/397).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/507336271/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/507339216",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1810#issuecomment-507339216",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810",
    "id": 507339216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzMzOTIxNg==",
    "user": {
      "login": "cygnusv",
      "id": 2564234,
      "node_id": "MDQ6VXNlcjI1NjQyMzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2564234?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cygnusv",
      "html_url": "https://github.com/cygnusv",
      "followers_url": "https://api.github.com/users/cygnusv/followers",
      "following_url": "https://api.github.com/users/cygnusv/following{/other_user}",
      "gists_url": "https://api.github.com/users/cygnusv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cygnusv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cygnusv/subscriptions",
      "organizations_url": "https://api.github.com/users/cygnusv/orgs",
      "repos_url": "https://api.github.com/users/cygnusv/repos",
      "events_url": "https://api.github.com/users/cygnusv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cygnusv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-01T16:37:53Z",
    "updated_at": "2019-07-01T16:37:53Z",
    "author_association": "NONE",
    "body": "Hi @frangio !\r\nThere was a mistake in @jMyles' original post. The correct link for `SignatureVerifier` is this one:\r\nhttps://github.com/nucypher/nucypher/blame/4ea10a651ddf5452cd187d3070e5259133aea4ff/nucypher/blockchain/eth/sol/source/contracts/lib/SignatureVerifier.sol\r\n\r\nIn particular, it provides support for versions 0 and E of EIP191.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/507339216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/509380211",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1810#issuecomment-509380211",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810",
    "id": 509380211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTM4MDIxMQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-08T20:31:26Z",
    "updated_at": "2019-07-08T20:36:58Z",
    "author_association": "MEMBER",
    "body": "@cygnusv Cool! That makes sense now. :slightly_smiling_face: \r\n\r\nWe have to decide what API we want for EIP 191 ~signing~ (edit:) encoding. My first thought is to add an EIP191 `library` with one function per signature version, and additionally to deprecate `ECDSA.toEthSignedMessageHash` in favor of it.\r\n\r\nThese are some initial names I came up with but I don't necessarily like them. Suggestions will be appreciated.\r\n\r\nUnresolved question: should these functions return the encoded `bytes` or its hash? Users will likely always hash these values afterwards, I think.\r\n\r\n```solidity\r\nlibrary EIP191Encoder {\r\n    // corresponds to eip 191 version 0x45, i.e. eth_personal_sign\r\n    function encodePersonal(bytes memory) internal returns (bytes memory);\r\n\r\n    // corresponds to eip 191 version 0x00\r\n    function encodeValidator(bytes memory) internal returns (bytes memory);\r\n}\r\n```\r\n\r\nIn the future, EIP 712 could be one additional function here, but it might have to be multiple functions, and in that case it could live in its own library.\r\n\r\n---\r\n\r\nNote: to be clear this issue is about _encoding_, and not signing. Signing should continue being handled by our `ECDSA` library.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/509380211/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/511544873",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1810#issuecomment-511544873",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810",
    "id": 511544873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTU0NDg3Mw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-15T19:52:33Z",
    "updated_at": "2019-07-15T19:52:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jMyles @cygnusv given that you've been working in and sponsoring development of EIPs 191 and 712, could you share what the current status of those are? I haven't been able to find relevant recent activity on the EIPs repo, and I'm worried we may be working with an outdated version of the spec.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/511544873/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/511735974",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1810#issuecomment-511735974",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810",
    "id": 511735974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTczNTk3NA==",
    "user": {
      "login": "cygnusv",
      "id": 2564234,
      "node_id": "MDQ6VXNlcjI1NjQyMzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2564234?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cygnusv",
      "html_url": "https://github.com/cygnusv",
      "followers_url": "https://api.github.com/users/cygnusv/followers",
      "following_url": "https://api.github.com/users/cygnusv/following{/other_user}",
      "gists_url": "https://api.github.com/users/cygnusv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cygnusv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cygnusv/subscriptions",
      "organizations_url": "https://api.github.com/users/cygnusv/orgs",
      "repos_url": "https://api.github.com/users/cygnusv/repos",
      "events_url": "https://api.github.com/users/cygnusv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cygnusv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-16T09:16:27Z",
    "updated_at": "2019-07-16T09:16:27Z",
    "author_association": "NONE",
    "body": "@frangio Those are good questions. It's true that the actual cryptographic signing only cares about what's the hash value to sign, so we here only have to worry about how to produce the hashes with the correct encoding. I agree with you that users only need the resulting hash, either for signing or verification, so I don't see much value in returning the encoded message, prior to hashing. \r\nWhat we did was a function that returns the hash of the proper encoded message according to a provided version. You can see it [here](https://github.com/nucypher/nucypher/blame/4ea10a651ddf5452cd187d3070e5259133aea4ff/nucypher/blockchain/eth/sol/source/contracts/lib/SignatureVerifier.sol#L100).\r\n\r\nSo I imagine something very similar to what you describe, but outputting directly the digests: \r\n```solidity\r\nlibrary EIP191Digest {\r\n    // corresponds to eip 191 version 0x45, i.e. eth_personal_sign\r\n    function digestPersonal(bytes memory) internal returns (bytes32 digest);\r\n\r\n    // corresponds to eip 191 version 0x00\r\n    function digestValidator(bytes memory) internal returns (bytes32 digest);\r\n}\r\n```\r\n@nventuro Although the status of both EIPs is \"draft\", both Geth and Parity already implement them. We will anyway ask around to see if there can be further advance on their status.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/511735974/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/511792279",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1810#issuecomment-511792279",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810",
    "id": 511792279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTc5MjI3OQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-16T12:20:19Z",
    "updated_at": "2019-07-16T12:20:19Z",
    "author_association": "MEMBER",
    "body": "@cygnusv Do you want to open a PR adding this new library? ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/511792279/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/532616720",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1810#issuecomment-532616720",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810",
    "id": 532616720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjYxNjcyMA==",
    "user": {
      "login": "3esmit",
      "id": 224810,
      "node_id": "MDQ6VXNlcjIyNDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/224810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3esmit",
      "html_url": "https://github.com/3esmit",
      "followers_url": "https://api.github.com/users/3esmit/followers",
      "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
      "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
      "organizations_url": "https://api.github.com/users/3esmit/orgs",
      "repos_url": "https://api.github.com/users/3esmit/repos",
      "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3esmit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-18T10:05:46Z",
    "updated_at": "2019-09-18T13:42:29Z",
    "author_association": "NONE",
    "body": "My suggestion: \r\n```solidity\r\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\r\n        return toERC191SignedMessage(byte(\"E\"), bytes(\"thereum Signed Message:\\n32\"), abi.encodePacked(hash));\r\n    }\r\n\r\n    function toERC191SignedMessage(bytes memory data) internal pure returns (bytes32) {\r\n        return toERC191SignedMessage(0x00, data);\r\n    }\r\n\r\n    function toERC191SignedMessage(byte version, bytes memory data) internal pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(byte(0x19), version, data));\r\n    }\r\n\r\n    function toERC191SignedMessage(byte version, bytes memory versionData, bytes memory data) internal pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(byte(0x19), version, versionData, data));\r\n    }\r\n```\r\n\r\nImplemented here\r\nhttps://github.com/status-im/account-contracts/blob/bcba3cad3677ed733ad70701be2d63c6fb87b9f3/contracts/cryptography/ECDSA.sol#L92-L102",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/532616720/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/735956410",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1810#issuecomment-735956410",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810",
    "id": 735956410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNTk1NjQxMA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-30T18:18:40Z",
    "updated_at": "2020-11-30T18:18:40Z",
    "author_association": "MEMBER",
    "body": "Are we aware of anyone using EIP 191 version `0x00`?\r\n\r\nI'm tempted to close this issue since we already have an implementation of version `0x45` in `ECDSA.toEthSignedMessageHash` (although it doesn't exactly belong in `ECDSA` it's where we put it originally), and EIP712 (version `0x01`) is too generic and thus very difficult for us to provide generic hashing/encoding helpers (I am about to push a helper to generate the domain separator, but that's as far as I can see it going).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/735956410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/795609421",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1810#issuecomment-795609421",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1810",
    "id": 795609421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NTYwOTQyMQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-10T15:31:33Z",
    "updated_at": "2021-03-10T15:31:33Z",
    "author_association": "MEMBER",
    "body": "We now have support for [EIP 712](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/5171e46c47bd6be781aa92315944ca37126d4a73/contracts/utils/cryptography/draft-EIP712.sol) signing, so I'm going to close this issue as resolved. Let us know if there is anything else about EIP191 that we should support.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/795609421/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
