{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4052",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4052/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4052/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4052/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4052",
  "id": 1589126143,
  "node_id": "I_kwDOA9tCBs5euCP_",
  "number": 4052,
  "title": "Include missing _cancel(uint256 proposal_id) in GovernorTimelockControl",
  "user": {
    "login": "sebsylvester",
    "id": 3374297,
    "node_id": "MDQ6VXNlcjMzNzQyOTc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3374297?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebsylvester",
    "html_url": "https://github.com/sebsylvester",
    "followers_url": "https://api.github.com/users/sebsylvester/followers",
    "following_url": "https://api.github.com/users/sebsylvester/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebsylvester/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebsylvester/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebsylvester/subscriptions",
    "organizations_url": "https://api.github.com/users/sebsylvester/orgs",
    "repos_url": "https://api.github.com/users/sebsylvester/repos",
    "events_url": "https://api.github.com/users/sebsylvester/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebsylvester/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 417782817,
      "node_id": "MDU6TGFiZWw0MTc3ODI4MTc=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/bug",
      "name": "bug",
      "color": "b60205",
      "default": true,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/14",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/14",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/14/labels",
    "id": 8383880,
    "node_id": "MI_kwDOA9tCBs4Af-2I",
    "number": 14,
    "title": "4.9",
    "description": "",
    "creator": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 24,
    "state": "closed",
    "created_at": "2022-09-05T16:36:05Z",
    "updated_at": "2023-05-16T01:45:32Z",
    "due_on": null,
    "closed_at": "2023-05-16T01:45:32Z"
  },
  "comments": 5,
  "created_at": "2023-02-17T10:28:20Z",
  "updated_at": "2023-02-24T17:12:11Z",
  "closed_at": "2023-02-22T09:00:43Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**🧐 Motivation**\r\nWhen using the Governor contract with the GovernorTimelockControl, one needs to override ```cancel(uint256 proposalId)``` because both Pending and Queued proposals must be cancellable. The problem is that it's not possible to invoke the inherited function ```_cancel(address[] memory targets, uint256[] memory values, bytes[] memory calldatas, bytes32 descriptionHash``` from inside the overidden public cancel function.\r\n    )\r\n\r\n**📝 Details**\r\nA solution would be to let the GovernorTimelockControl override both the internal _cancel functions it inherits from Governor, in which case the four-argument function simply forwards to the single-argument function (as is the case in the Governor contract). The logic currently inside _cancel would move to the new single-argument function.\r\n\r\nThe downside is that it's a breaking change for anyone using the GovernorTimelockControl.\r\nI will submit a PR with a link to this issue.",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4052/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4052/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1434504234",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4052#issuecomment-1434504234",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4052",
    "id": 1434504234,
    "node_id": "IC_kwDOA9tCBs5VgMwq",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T11:23:48Z",
    "updated_at": "2023-02-17T12:46:41Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @sebsylvester, and thank you for raising that issue !\r\n\r\nCurrently we have two different signatures for the internal `_cancel` function:\r\n\r\n```solidity \r\nfunction _cancel(address[] memory targets, uint256[] memory values, bytes[] memory calldatas, bytes32 descriptionHash);\r\nfunction _cancel(uint256 proposalId)\r\n```\r\n\r\nWe can see that the first one is \"just\" an alias to the second one. The second one was introduced in #3983 when we wanted to introduce a public `cancel` function. We used this new signature because that is the signature that compound uses.\r\n\r\n**We missed something important when doing so!**\r\n\r\nRight now, in master, we have\r\n\r\n```mermaid\r\nflowchart LR\r\n    id1{{\"cancel(uint256)\"}}\r\n    id2{{\"_cancel(uint256)\"}}\r\n    id3{{\"_cancel(address[],uint256[],bytes[],bytes32)\"}}\r\n    id1 --> id2\r\n    id3 --> id2\r\n```\r\n\r\nThis is good, except the public function completely skips the \"full params\" internal one.\r\n\r\nOn the other hand, we have 2 other contracts (beside the core `Governor.sol`) that deal with cancelation:\r\n\r\n- `GovernorTimelockCompound`\r\n- `GovernorTimelockControl`\r\n\r\nIn both cases we override the \"full params\" internal one, which means that in both cases the custom logic (that cancels on the timelock) is **NOT** executed when calling the public function.\r\n\r\nIn the case of `GovernorTimelockControl`, we don't actually need the full parameters, so we could rewrite `GovernorTimelockControl` to overide the simple `_cancel(uint256)` variant. That would work well, except maybe for some additional overrides that would have to be specified. That is what #4053 does.\r\n\r\nIn the case of `GovernorTimelockCompound` its way more complex, because cancelling on a `CompoundTimelock` requires the parameters ... that we don't store. This means that there is no way to have the public `cancel(uint256)` trigger the `CompoundTimelock.cancelTransaction` with the data we currently store.\r\n\r\nTLDR: the current implementation of the public cancel is not good. Fortunatelly it was never released but we need to fix that for 4.9",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1434504234/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1434513929",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4052#issuecomment-1434513929",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4052",
    "id": 1434513929,
    "node_id": "IC_kwDOA9tCBs5VgPIJ",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T11:33:12Z",
    "updated_at": "2023-02-17T12:46:06Z",
    "author_association": "COLLABORATOR",
    "body": "Also, its worrying (but logic) that the tests did not catch that:\r\n- the core tests where we added the public `cancel(uint256)` tests are not extensions aware.\r\n- the extensions tests are done using the internal `_cancel(address[],uint256[],bytes[],bytes32)` function.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1434513929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1435354280",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4052#issuecomment-1435354280",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4052",
    "id": 1435354280,
    "node_id": "IC_kwDOA9tCBs5VjcSo",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-17T22:34:56Z",
    "updated_at": "2023-02-17T22:50:29Z",
    "author_association": "MEMBER",
    "body": "I see 2 viable options:\r\n1. Change `cancel(uint256)` into `cancel(address[],uint256[],bytes[],bytes32)`.\r\n2. Add a storage mapping to `GovernorTimelockCompound` such that the `proposalId` can be mapped back to the proposal parameters.\r\n\r\nWe discussed how to implement option 2 without having redundant storage with `GovernorCompatibilityBravo`. Using a new module (\"`GovernorStorage`\") through inheritance is not a great option because it messes up the storage layout too much, an issue for upgradeable contracts. We could also do something a little nasty: have the mapping inline in `GovernorTimelockCompound` and define functions `_storeProposal` and `getActions`, such that if it is combined with the Bravo module, only one of the storage mappings gets used. This... works, but may be confusing.\r\n\r\nOur best option might be option 1, with a roadmap to having `cancel(uint256)` in a good way in 5.0. For example, introducing `GovernorStorage` and using it in both TimelockCompound and Bravo modules.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1435354280/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1444056274",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4052#issuecomment-1444056274",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4052",
    "id": 1444056274,
    "node_id": "IC_kwDOA9tCBs5WEozS",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-24T17:12:08Z",
    "updated_at": "2023-02-24T17:12:08Z",
    "author_association": "COLLABORATOR",
    "body": "Thank you again for raising that issue. As a small token of appreciation we would like to award you a contributor gitpoap!\r\n\r\n@gitpoap-bot @sebsylvester ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1444056274/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1444056399",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4052#issuecomment-1444056399",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4052",
    "id": 1444056399,
    "node_id": "IC_kwDOA9tCBs5WEo1P",
    "user": {
      "login": "gitpoap-bot[bot]",
      "id": 107228298,
      "node_id": "BOT_kgDOBmQsig",
      "avatar_url": "https://avatars.githubusercontent.com/in/209535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitpoap-bot%5Bbot%5D",
      "html_url": "https://github.com/apps/gitpoap-bot",
      "followers_url": "https://api.github.com/users/gitpoap-bot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/gitpoap-bot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitpoap-bot%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitpoap-bot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitpoap-bot%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/gitpoap-bot%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/gitpoap-bot%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/gitpoap-bot%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitpoap-bot%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2023-02-24T17:12:11Z",
    "updated_at": "2023-02-24T17:12:11Z",
    "author_association": "NONE",
    "body": "Congrats, @sebsylvester ! You've earned a GitPOAP for your contribution!\n\n\n[**GitPOAP: 2023 OpenZeppelin Contracts Contributor**](https://www.gitpoap.io/gp/866):\n\n\n<img alt=\"GitPOAP: 2023 OpenZeppelin Contracts Contributor GitPOAP Badge\" src=\"https://assets.poap.xyz/gitpoap3a-2023-openzeppelin-contracts-contributor-2022-logo-1671498366373.png\" height=\"200px\">\n\n\nHead to [gitpoap.io](https://www.gitpoap.io) & connect your GitHub account to mint!\n\nLearn more about GitPOAPs [here](https://medium.com/gitpoap/whats-a-gitpoap-72f1f5778c6/).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1444056399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
