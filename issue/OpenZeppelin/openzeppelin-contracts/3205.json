{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3205",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3205/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3205/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3205/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3205",
  "id": 1145032514,
  "node_id": "I_kwDOA9tCBs5EP89C",
  "number": 3205,
  "title": "Should the address that calling method burn be validated",
  "user": {
    "login": "Last-emo-boy",
    "id": 28626477,
    "node_id": "MDQ6VXNlcjI4NjI2NDc3",
    "avatar_url": "https://avatars.githubusercontent.com/u/28626477?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Last-emo-boy",
    "html_url": "https://github.com/Last-emo-boy",
    "followers_url": "https://api.github.com/users/Last-emo-boy/followers",
    "following_url": "https://api.github.com/users/Last-emo-boy/following{/other_user}",
    "gists_url": "https://api.github.com/users/Last-emo-boy/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Last-emo-boy/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Last-emo-boy/subscriptions",
    "organizations_url": "https://api.github.com/users/Last-emo-boy/orgs",
    "repos_url": "https://api.github.com/users/Last-emo-boy/repos",
    "events_url": "https://api.github.com/users/Last-emo-boy/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Last-emo-boy/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-02-20T14:17:44Z",
  "updated_at": "2022-03-01T23:33:59Z",
  "closed_at": "2022-03-01T23:33:59Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**🧐 Motivation**\r\nWhile reading function _burn i was wondering is this could be used maliciously\r\n\r\n**📝 Details**\r\n\r\n```\r\nfunction _burn(\r\n        address from,\r\n        uint256 id,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n\r\n        address operator = _msgSender();\r\n        uint256[] memory ids = _asSingletonArray(id);\r\n        uint256[] memory amounts = _asSingletonArray(amount);\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n\r\n        emit TransferSingle(operator, from, address(0), id, amount);\r\n\r\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n    }\r\n```\r\n\r\nIt seems to me that when the Burn method is called, there is no verification that the change of this ERC1155 tokens belongs to the caller. That is, theoretically anyone can Burn someone else's ERC1155 tokens, and for some careless developers, few will even think to add some detail to it.\r\ni mean maybe like \r\n\r\n`require(owner == msg.sender || operators.contains(msg.sender))`\r\n\r\nSo I was wondering if it was possible to validate msg.sender directly within the internal function.\r\n\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contracts Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/CONTRIBUTING.md -->\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3205/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3205/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1046309555",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3205#issuecomment-1046309555",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3205",
    "id": 1046309555,
    "node_id": "IC_kwDOA9tCBs4-XWqz",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-20T19:58:37Z",
    "updated_at": "2022-02-20T19:58:37Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @w33d-w33d \r\n\r\n`_burn` is an internal method. This means that it cannot just be called by anybody. It is designed to be used by external methods that implement the checks according to the design of the contract.\r\n\r\nYou could have instances that let anyone burn their own tokens, of tokens that they are approved to operate on. This is visible here:\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/ERC1155Burnable.sol#L15-L26\r\n\r\nOther logic might automatically burn tokens as part of more complex processes. The are unopinionated about these process, and we thus do not enforce any protection on the internal function so devs can be creative about when/how they use it.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1046309555/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
