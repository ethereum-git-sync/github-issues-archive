{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2705",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2705/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2705/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2705/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2705",
  "id": 910154358,
  "node_id": "MDU6SXNzdWU5MTAxNTQzNTg=",
  "number": 2705,
  "title": "[ERC1155] Provide IERC1155Enumerable interface to manipulate tokens of specified account",
  "user": {
    "login": "boqiu",
    "id": 35757521,
    "node_id": "MDQ6VXNlcjM1NzU3NTIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/35757521?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/boqiu",
    "html_url": "https://github.com/boqiu",
    "followers_url": "https://api.github.com/users/boqiu/followers",
    "following_url": "https://api.github.com/users/boqiu/following{/other_user}",
    "gists_url": "https://api.github.com/users/boqiu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/boqiu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/boqiu/subscriptions",
    "organizations_url": "https://api.github.com/users/boqiu/orgs",
    "repos_url": "https://api.github.com/users/boqiu/repos",
    "events_url": "https://api.github.com/users/boqiu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/boqiu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650860,
      "node_id": "MDU6TGFiZWw1MDM2NTA4NjA=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/feature",
      "name": "feature",
      "color": "b9db64",
      "default": false,
      "description": "New contracts, functions, or helpers."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2021-06-03T06:37:12Z",
  "updated_at": "2021-06-07T16:34:24Z",
  "closed_at": "2021-06-07T16:34:24Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nSupport token enumeration of **specified account** in ERC1155 standard contract.\r\n\r\n**üìù Details**\r\nOur dapp want to list tokens in a pagination view for a specified ERC1155 contract. So, we want 2 enumeration APIs as following:\r\n1. `tokenCountOf(address account) public view returns (uint256)`.\r\n2. `tokensOfByIndex(address account, uint256 offset, uint256 limit) public view returns (uint256[] memeory)`.\r\n\r\nWe strongly recommend to define such functions as a ERC1155 extension methods, so as to develop NFT exhibition alike dapp much easiler.\r\n\r\nMoreover, NFT images are usually required on UI page, so batch API to fetch URIs of multiple tokens is really helpful to reduce the times of RPC call (`eth_call`).\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/CONTRIBUTING.md -->\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2705/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2705/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/853836780",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2705#issuecomment-853836780",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2705",
    "id": 853836780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MzgzNjc4MA==",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-03T12:39:37Z",
    "updated_at": "2021-06-04T19:47:45Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @boqiu, and thank you for your issue.\r\n\r\nWhile this is technically possible to do, keeping enumerability information onchain is very expensive in terms of storage slot. If possible, given you security model, I would strongly encourage to build that information offchain. [I personally built a subgraph that can provide this kind of information for ERC1155 tokens](https://thegraph.com/explorer/subgraph/amxx/eip1155-subgraph)\r\n\r\nFor example, this query will give you the list and balance of all token held by address `0x005ff202c271d2419fb03ec873dedfe163a5ce36` on registry  `0x0143b6fa53832ca8622d2c4bfd753d0e5040b34c`\r\n\r\n```\r\n{  \r\n  balances(where: {\r\n    account: \"0x005ff202c271d2419fb03ec873dedfe163a5ce36\",\r\n    token_starts_with: \"0x0143b6fa53832ca8622d2c4bfd753d0e5040b34c\",\r\n    value_gt: 0,\r\n  }) {\r\n    token { identifier }\r\n    value\r\n  }\r\n}\r\n```\r\n\r\n> We strongly recommend to define such functions as a ERC1155 extension methods\r\n\r\nFeel free to start an ERC to standardize this interface. We, at OpenZeppelin, do implement a lot of ERCs, but its the community, with people like you, who come up with the standard. Check out EIP1 if you want to learn more about this process.\r\n\r\nFinally, for the batching off calls, I encourage you to use [Makerdao's multicall](https://github.com/makerdao/multicall), which is available on mainnet [here](https://etherscan.io/address/0xeefba1e63905ef1d7acba5a8513c70307c1ce441#contracts) and will let get the result of many view function using a single `eth_call`",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/853836780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/854302880",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2705#issuecomment-854302880",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2705",
    "id": 854302880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDMwMjg4MA==",
    "user": {
      "login": "boqiu",
      "id": 35757521,
      "node_id": "MDQ6VXNlcjM1NzU3NTIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35757521?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boqiu",
      "html_url": "https://github.com/boqiu",
      "followers_url": "https://api.github.com/users/boqiu/followers",
      "following_url": "https://api.github.com/users/boqiu/following{/other_user}",
      "gists_url": "https://api.github.com/users/boqiu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boqiu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boqiu/subscriptions",
      "organizations_url": "https://api.github.com/users/boqiu/orgs",
      "repos_url": "https://api.github.com/users/boqiu/repos",
      "events_url": "https://api.github.com/users/boqiu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boqiu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-04T02:08:24Z",
    "updated_at": "2021-06-04T02:10:16Z",
    "author_association": "NONE",
    "body": "@Amxx Thanks a lot for your quickly response. Yes, I totally agree that enumerability requires more storage cost. However, `IERC721Enumerable` is also expensive, why you (openzeppelin) choose to support by default? After all, it is an extension interface, and user could optional implement the interface according to their business. It makes sense to keep enumerability interface consistent for ERC721 and ERC1155.\r\n\r\nMoreover, the reason why I did not implement the enumerability offchain is that I just want to achieve server-less business model, in which case a single UI page is enough. As for the storage cost, it does not matter for a full node with data prune enabled.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/854302880/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/854707411",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2705#issuecomment-854707411",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2705",
    "id": 854707411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDcwNzQxMQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-04T13:01:39Z",
    "updated_at": "2021-06-04T13:12:03Z",
    "author_association": "MEMBER",
    "body": "> However, `IERC721Enumerable` is also expensive, why you (openzeppelin) choose to support by default?\r\n\r\nBecause it's part of the ERC721 spec. And we currently discourage using Enumerability in ERC721, which is why we removed it from the default `ERC721` contract in release 4.0.\r\n\r\n> Moreover, the reason why I did not implement the enumerability offchain is that I just want to achieve server-less business model, in which case a single UI page is enough.\r\n\r\nThis is understandable. But have you looked into using events to get this information? [Here is a snippet](https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1102#issuecomment-799623364) that does the same for a non-enumerable ERC721.\r\n\r\n> As for the storage cost, it does not matter for a full node with data prune enabled.\r\n\r\nWhat we mean by the storage cost is that adding enumerability greatly increases the gas cost of every transfer for your users. This is unrelated to whether the node is pruning data or not.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/854707411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/854713213",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2705#issuecomment-854713213",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2705",
    "id": 854713213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDcxMzIxMw==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-04T13:10:53Z",
    "updated_at": "2021-06-04T13:10:53Z",
    "author_association": "MEMBER",
    "body": "Note that using The Graph does not require that you run a server, so you can remain serverless and decentralized.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/854713213/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/856087889",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2705#issuecomment-856087889",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2705",
    "id": 856087889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NjA4Nzg4OQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-07T16:34:23Z",
    "updated_at": "2021-06-07T16:34:23Z",
    "author_association": "MEMBER",
    "body": "We're closing this issue because for the purposes of building a web application this should be solved by using events directly or events through The Graph. Both solutions are serverless-friendly.\r\n\r\nIf anyone has the need for ERC1155 enumerability on-chain, for the purposes of consuming this information in another smart contract, let us know and we can reconsider the feature request.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/856087889/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
