{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2622",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2622/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2622/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2622/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2622",
  "id": 849231080,
  "node_id": "MDU6SXNzdWU4NDkyMzEwODA=",
  "number": 2622,
  "title": "ERC1155 transfers should have internal function that doesn't check approvals",
  "user": {
    "login": "KaiRo-at",
    "id": 824140,
    "node_id": "MDQ6VXNlcjgyNDE0MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/824140?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KaiRo-at",
    "html_url": "https://github.com/KaiRo-at",
    "followers_url": "https://api.github.com/users/KaiRo-at/followers",
    "following_url": "https://api.github.com/users/KaiRo-at/following{/other_user}",
    "gists_url": "https://api.github.com/users/KaiRo-at/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KaiRo-at/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KaiRo-at/subscriptions",
    "organizations_url": "https://api.github.com/users/KaiRo-at/orgs",
    "repos_url": "https://api.github.com/users/KaiRo-at/repos",
    "events_url": "https://api.github.com/users/KaiRo-at/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KaiRo-at/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-04-02T13:51:57Z",
  "updated_at": "2021-04-19T20:26:19Z",
  "closed_at": "2021-04-19T20:26:19Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nI'm trying to implement a \"signed transfer\" function for an ERC1155 token (see https://etherscan.io/address/0x478059f577Cb739f0AF0f37A365DD069Ba5BD8Be#code line 2018 ff. for an ERC721 variant) - any user can call this function but needs a fitting signature to actually perform that transfer. In ERC721, this can easily be done by calling the internal `_safeTransfer()` function after checking that all the conditions for the transfer (signature, etc.) are met - but in ERC1155, the same functions that perform the actual transfer also check approval and so with OpenZeppelin 4.0.0, it's hard to implement this (there is a hack I could use but it's ugly). There may be other cases as well where you may want to transfer a token gated by other means than the traditional/standard approval process.\r\nAs an overriding contract is unable to access or manipulate the balances directly due to those being private to the OpenZeppelin implementation, it's also not an option to completely copy what the existing functions do into the overriding contract (and I would consider that a hack as well if it were possible).\r\n\r\n**üìù Details**\r\nTo solve this problem, the ERC1155 transfer functions (`safeTransferFrom`, `safeBatchTransferFrom`) should call additional internal functions that does the actual transfer operation and doesn't check approvals, following the same pattern as the OpenZeppelin ERC721 contract does. Note that this is just a code structuring question, as this would not be available to external callers directly, only to overriding contracts based on the OpenZeppelin implementation.\r\n\r\nI actually have a PR for this upcoming.",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2622/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2622/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/812564568",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2622#issuecomment-812564568",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2622",
    "id": 812564568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjU2NDU2OA==",
    "user": {
      "login": "KaiRo-at",
      "id": 824140,
      "node_id": "MDQ6VXNlcjgyNDE0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KaiRo-at",
      "html_url": "https://github.com/KaiRo-at",
      "followers_url": "https://api.github.com/users/KaiRo-at/followers",
      "following_url": "https://api.github.com/users/KaiRo-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/KaiRo-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KaiRo-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KaiRo-at/subscriptions",
      "organizations_url": "https://api.github.com/users/KaiRo-at/orgs",
      "repos_url": "https://api.github.com/users/KaiRo-at/repos",
      "events_url": "https://api.github.com/users/KaiRo-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KaiRo-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-02T14:52:59Z",
    "updated_at": "2021-04-06T10:44:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW, the \"hack\" I use in the mean time is as follows:\r\n```solidity\r\ncontract X  is ERC1155 {\r\n    bool private inSignedTransfer;\r\n    // [...]  \r\n\r\n    function isApprovedForAll(address _account, address _operator) public view override(ERC1155)  returns (bool)\r\n    {\r\n        return (inSignedTransfer || super.isApprovedForAll(_account, _operator));\r\n    }\r\n\r\n    function _beforeTokenTransfer(address _operator, address _from, address _to, uint256[] memory _ids, uint256[] memory _amounts, bytes memory _data)  internal override\r\n    {\r\n        // If we are in a signed transfer, turn the flag off here, as we did\r\n        // get through approval checks already and there's a theoretical chance\r\n        // that further code could do weird things, including the\r\n        // onERC1155Received() function of the recipient.\r\n        if (inSignedTransfer) {\r\n          inSignedTransfer = false;\r\n        }\r\n        super._beforeTokenTransfer(_operator, _from, _to, _ids, _amounts, _data);\r\n    }\r\n\r\n    function signedBatchTransfer(address _from, address _to, uint256[] memory _ids, uint256[] memory _amounts, bytes memory _signature)  public\r\n    {\r\n        // [...]\r\n        inSignedTransfer = true;\r\n        safeBatchTransferFrom(_from, _to, _ids, _amounts, \"\");\r\n        // This should already be false when we get here, otherwise re-entrancy caused issues.\r\n        if (inSignedTransfer) { revert(\"Invalid state.\"); }\r\n    }\r\n}\r\n```\r\n\r\nNow, this works, but I guess you will agree that while is should be safe and due to refunds probably not too bad on gas, it's really ugly.\r\n\r\nSo, I hope my PR for this can be taken as then we can do this pattern in a really decent fashion.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/812564568/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/814021349",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2622#issuecomment-814021349",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2622",
    "id": 814021349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDAyMTM0OQ==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-06T10:46:10Z",
    "updated_at": "2021-04-06T10:46:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @KaiRo-at !  Thanks for the suggestion, it is really appreciated.\r\n\r\nThe project owner will review your suggestion as soon as they can. \r\n\r\nPlease wait until we have discussed this idea before writing any code or submitting a Pull Request, so we can go through the design beforehand.  We don‚Äôt want you to waste your time!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/814021349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/822762257",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2622#issuecomment-822762257",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2622",
    "id": 822762257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMjc2MjI1Nw==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-19T20:26:19Z",
    "updated_at": "2021-04-19T20:26:19Z",
    "author_association": "MEMBER",
    "body": "Fixed in https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2636. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/822762257/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
