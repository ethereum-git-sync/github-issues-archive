{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2920",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2920/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2920/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2920/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2920",
  "id": 1033143523,
  "node_id": "I_kwDOA9tCBs49lITj",
  "number": 2920,
  "title": "make token fields internal",
  "user": {
    "login": "TrejGun",
    "id": 185285,
    "node_id": "MDQ6VXNlcjE4NTI4NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/185285?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TrejGun",
    "html_url": "https://github.com/TrejGun",
    "followers_url": "https://api.github.com/users/TrejGun/followers",
    "following_url": "https://api.github.com/users/TrejGun/following{/other_user}",
    "gists_url": "https://api.github.com/users/TrejGun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TrejGun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TrejGun/subscriptions",
    "organizations_url": "https://api.github.com/users/TrejGun/orgs",
    "repos_url": "https://api.github.com/users/TrejGun/repos",
    "events_url": "https://api.github.com/users/TrejGun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TrejGun/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-10-22T03:34:46Z",
  "updated_at": "2021-10-22T15:50:42Z",
  "closed_at": "2021-10-22T15:50:25Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n<!-- Is your feature request related to a specific problem? Is it just a crazy idea? Tell us about it! -->\r\nWe are developing contracts based on this awesome lib by adding more extensions and presets. Say we have an extension for chainlink and opensea as well as our own shared functions\r\n\r\nWe find it strange to not be able to access `_balances` and `_allowances ` from the base of ERC20 token. In fact, we can't extend this contract and had to copy it over to our codebase just with one change\r\n\r\nThe second thing is `_tokenIdTracker` from ERC721PresetMinterPauserAutoId and `_allTokens` from ERC721Enumerable, it is very useful but also private\r\n\r\n**üìù Details**\r\nplease make some of the private fields internal\r\nso far we are interested in these 4 but maybe the community can suggest more\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2920/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2920/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/949284425",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2920#issuecomment-949284425",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2920",
    "id": 949284425,
    "node_id": "IC_kwDOA9tCBs44lO5J",
    "user": {
      "login": "ernestognw",
      "id": 33379285,
      "node_id": "MDQ6VXNlcjMzMzc5Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/33379285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ernestognw",
      "html_url": "https://github.com/ernestognw",
      "followers_url": "https://api.github.com/users/ernestognw/followers",
      "following_url": "https://api.github.com/users/ernestognw/following{/other_user}",
      "gists_url": "https://api.github.com/users/ernestognw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ernestognw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ernestognw/subscriptions",
      "organizations_url": "https://api.github.com/users/ernestognw/orgs",
      "repos_url": "https://api.github.com/users/ernestognw/repos",
      "events_url": "https://api.github.com/users/ernestognw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ernestognw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-22T04:49:22Z",
    "updated_at": "2021-10-22T04:49:35Z",
    "author_association": "MEMBER",
    "body": "Why not just do `balanceOf(account)`, `allowance(spender, amount)`?\r\n\r\nI agree that `_allTokens` from ERC721Enumerable is an example of a more complex case, but maybe showing what you're trying to achieve might help.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/949284425/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/949293459",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2920#issuecomment-949293459",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2920",
    "id": 949293459,
    "node_id": "IC_kwDOA9tCBs44lRGT",
    "user": {
      "login": "TrejGun",
      "id": 185285,
      "node_id": "MDQ6VXNlcjE4NTI4NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/185285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TrejGun",
      "html_url": "https://github.com/TrejGun",
      "followers_url": "https://api.github.com/users/TrejGun/followers",
      "following_url": "https://api.github.com/users/TrejGun/following{/other_user}",
      "gists_url": "https://api.github.com/users/TrejGun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TrejGun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TrejGun/subscriptions",
      "organizations_url": "https://api.github.com/users/TrejGun/orgs",
      "repos_url": "https://api.github.com/users/TrejGun/repos",
      "events_url": "https://api.github.com/users/TrejGun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TrejGun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-22T05:14:23Z",
    "updated_at": "2021-10-22T05:14:23Z",
    "author_association": "NONE",
    "body": "Let's take an example of ERC721 if you like it more\r\n\r\n```sol\r\n    function getRandomNumber() public returns (bytes32 requestId) {\r\n        require(LINK.balanceOf(address(this)) >= fee, \"Not enough LINK\");\r\n        return requestRandomness(keyHash, fee);\r\n    }\r\n\r\n    function fulfillRandomness(bytes32 requestId, uint256 randomness) internal\r\n    override (VRFConsumerBase)\r\n    {\r\n        uint256 d3Result = randomness.mod(3);\r\n        _mintRandom(d3Result, queue[requestId]);\r\n        delete queue[requestId];\r\n    }\r\n\r\n    function _mintRandom(uint256 d3Result, address to) internal {\r\n        _mint(to, _tokenIdTracker.current());\r\n        _tokenIdTracker.increment();\r\n    }\r\n```\r\n\r\nin this case, we had to reimplement ERC721PresetMinterPauserAutoId to get access to _tokenIdTracker\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/949293459/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/949752613",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2920#issuecomment-949752613",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2920",
    "id": 949752613,
    "node_id": "IC_kwDOA9tCBs44nBMl",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-22T15:50:21Z",
    "updated_at": "2021-10-22T15:50:42Z",
    "author_association": "MEMBER",
    "body": "We use private variables to make sure their values are modified in a consistent way. For example, you should not be able to add an entry in ERC20 balances without also modifying total supply. This is not something we're willing to change in the foreseeable future.\r\n\r\nYou should be able to implement any correct behavior by using the internal functions provided by the contract. In the example above, you can use `_mint` or `_burn`.\r\n\r\nYou're also able to read these values using internal or public functions, such as `balanceOf`.\r\n\r\nIf there are specific things you can't accomplish using the internal functions we offer, please open an issue for that so we can add a new internal function!\r\n\r\n---\r\n\r\nFor the preset contracts in particular (e.g. ERC721PresetMinterPauserAutoId), you are encouraged to copy them and modify them to suit your needs.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/949752613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
