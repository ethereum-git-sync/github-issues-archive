{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2642",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2642/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2642/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2642/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2642",
  "id": 866939903,
  "node_id": "MDU6SXNzdWU4NjY5Mzk5MDM=",
  "number": 2642,
  "title": "TimelockController should support an immutable minimum delay baseline upon construction",
  "user": {
    "login": "alex448844",
    "id": 71418198,
    "node_id": "MDQ6VXNlcjcxNDE4MTk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/71418198?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alex448844",
    "html_url": "https://github.com/alex448844",
    "followers_url": "https://api.github.com/users/alex448844/followers",
    "following_url": "https://api.github.com/users/alex448844/following{/other_user}",
    "gists_url": "https://api.github.com/users/alex448844/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alex448844/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alex448844/subscriptions",
    "organizations_url": "https://api.github.com/users/alex448844/orgs",
    "repos_url": "https://api.github.com/users/alex448844/repos",
    "events_url": "https://api.github.com/users/alex448844/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alex448844/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2021-04-25T07:37:08Z",
  "updated_at": "2021-04-26T20:48:59Z",
  "closed_at": "2021-04-26T20:48:59Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**🧐 Motivation**\r\nI'm currently designing a system that will incorporate a `TimelockController` for multiple key contracts. Some operations on these contracts are potentially devastating if called in rapid succession, so a time delay is a perfect solution. A security issue that still remains is that proposers have the power to reduce the `minDelay` to 0, rendering the time lock useless. Even with the one time enforcement of the `minDelay` to reduce it to 0, it still is not great in my opinion that this would be the only time buffer between system participants and a potentially rogue admin.\r\n\r\n**📝 Details**\r\nIn keeping with the spirit of the contract, an even more trustless experience could be provided to system participants if there was an immutable minimum delay baseline, set on construction and enforced when attempting to lower `minDelay`.\r\n\r\nSpecifically,\r\n\r\nAdd `minDelayBaseline`, which is set once during construction. Add a `require` statement in `updateDelay` to check if `newDelay` is not less than `minDelayBaseline`.",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2642/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2642/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/826439913",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2642#issuecomment-826439913",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2642",
    "id": 826439913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNjQzOTkxMw==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-26T01:13:47Z",
    "updated_at": "2021-04-26T01:13:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @alex448844 !  Thanks for the suggestion, it is really appreciated.\r\n\r\nThe project owner will review your suggestion as soon as they can. \r\n\r\nPlease wait until we have discussed this idea before writing any code or submitting a Pull Request, so we can go through the design beforehand.  We don’t want you to waste your time!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/826439913/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/826607455",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2642#issuecomment-826607455",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2642",
    "id": 826607455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNjYwNzQ1NQ==",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-26T08:04:46Z",
    "updated_at": "2021-04-26T08:04:59Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @alex448844.\r\n\r\nThank you for issue, I can see how you would feel safer using a timelock where the delay has a lower bound. Before I discuss that particular point, you should keep in mind that changing the delay is only possible through the timelock itself. It is thus possible to set it to 0, but only after a duration equal to the old delay. While this operation can be considered dangerous, other operations might be even more (like transferring ownership of a contract). It is thus essential to watch/setup alerts on any timelock that you consider critical to your security.\r\n\r\nNow about the minimum minDelay. I understand that this is a feature that some people, like you, would want, while others might want to avoid the added complexity and cost. We try to address both use-cases by providing the simplest, and more modular version of the contract, which you can easily expand on. In fact, implementation this additional check is pretty easy to do on top of the existing contract.\r\n\r\n```\r\ncontract TimelockControllerExtended is TimelockController {\r\n  uint256 public immutable hardMinDelay;\r\n\r\n  constructor(uint256 minDelay, uint256 _hardMinDelay, address[] memory proposers, address[] memory executors)\r\n  TimelockController(minDelay, proposers, executors)\r\n  {\r\n    hardMinDelay = _hardMinDelay;\r\n  }\r\n\r\n  function updateDelay(uint256 newDelay) external virtual override {\r\n    require(newDelay >= hardMinDelay);\r\n    super.updateDelay(newDelay);\r\n  }\r\n}\r\n```\r\n\r\nIn the future, we might extend the TimelockController with additional features, just like the one you requested, by creating modules similar to what we have for ERC20 or ERC721.\r\n\r\nI hope this answers your issue.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/826607455/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/826615952",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2642#issuecomment-826615952",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2642",
    "id": 826615952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNjYxNTk1Mg==",
    "user": {
      "login": "alex448844",
      "id": 71418198,
      "node_id": "MDQ6VXNlcjcxNDE4MTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/71418198?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex448844",
      "html_url": "https://github.com/alex448844",
      "followers_url": "https://api.github.com/users/alex448844/followers",
      "following_url": "https://api.github.com/users/alex448844/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex448844/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex448844/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex448844/subscriptions",
      "organizations_url": "https://api.github.com/users/alex448844/orgs",
      "repos_url": "https://api.github.com/users/alex448844/repos",
      "events_url": "https://api.github.com/users/alex448844/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex448844/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-26T08:16:06Z",
    "updated_at": "2021-04-26T08:16:06Z",
    "author_association": "NONE",
    "body": "Thanks so much for the response @Amxx. I can understand how you would prefer to keep the contract minimal to support low costs and needs of all users. Your extended solution is perfect for my needs and I'll be using that :)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/826615952/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/827137481",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2642#issuecomment-827137481",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2642",
    "id": 827137481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNzEzNzQ4MQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-26T20:48:59Z",
    "updated_at": "2021-04-26T20:48:59Z",
    "author_association": "MEMBER",
    "body": "Glad it's been resolved!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/827137481/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
