{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3474",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3474/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3474/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3474/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3474",
  "id": 1270720449,
  "node_id": "I_kwDOA9tCBs5LvafB",
  "number": 3474,
  "title": "PaymentSplitter should use ReentrancyGuard's `nonReentrant` modifier on release() functions",
  "user": {
    "login": "btroia",
    "id": 368747,
    "node_id": "MDQ6VXNlcjM2ODc0Nw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/368747?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/btroia",
    "html_url": "https://github.com/btroia",
    "followers_url": "https://api.github.com/users/btroia/followers",
    "following_url": "https://api.github.com/users/btroia/following{/other_user}",
    "gists_url": "https://api.github.com/users/btroia/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/btroia/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/btroia/subscriptions",
    "organizations_url": "https://api.github.com/users/btroia/orgs",
    "repos_url": "https://api.github.com/users/btroia/repos",
    "events_url": "https://api.github.com/users/btroia/events{/privacy}",
    "received_events_url": "https://api.github.com/users/btroia/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-06-14T12:20:48Z",
  "updated_at": "2022-06-14T12:33:48Z",
  "closed_at": "2022-06-14T12:33:48Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "To prevent potential reentrant calls on the [PaymentSplitter](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/6766b2de3bd0473bb7107fd8f83ef8c83c5b1fb3/contracts/finance/PaymentSplitter.sol) contract's `release()` functions, shouldn't PaymentSplitter also inherit from the [ReentrancyGuard](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/security/ReentrancyGuard.sol) contract so that {nonReentrant} modifiers can be added to the `release()` functions?\r\n\r\n**ðŸ”¢ Code to reproduce bug**\r\n\r\nSee the following lines in [PaymentSplitter.sol](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/6766b2de3bd0473bb7107fd8f83ef8c83c5b1fb3/contracts/finance/PaymentSplitter.sol#L144)\r\n\r\n```\r\n    /**\r\n     * @dev Triggers a transfer to `account` of the amount of Ether they are owed, according to their percentage of the\r\n     * total shares and their previous withdrawals.\r\n     */\r\n    function release(address payable account) public virtual {\r\n        require(_shares[account] > 0, \"PaymentSplitter: account has no shares\");\r\n\r\n        uint256 payment = releasable(account);\r\n\r\n        require(payment != 0, \"PaymentSplitter: account is not due payment\");\r\n\r\n        _released[account] += payment;\r\n        _totalReleased += payment;\r\n\r\n        Address.sendValue(account, payment);\r\n        emit PaymentReleased(account, payment);\r\n    }\r\n\r\n    /**\r\n     * @dev Triggers a transfer to `account` of the amount of `token` tokens they are owed, according to their\r\n     * percentage of the total shares and their previous withdrawals. `token` must be the address of an IERC20\r\n     * contract.\r\n     */\r\n    function release(IERC20 token, address account) public virtual {\r\n        require(_shares[account] > 0, \"PaymentSplitter: account has no shares\");\r\n\r\n        uint256 payment = releasable(token, account);\r\n\r\n        require(payment != 0, \"PaymentSplitter: account is not due payment\");\r\n\r\n        _erc20Released[token][account] += payment;\r\n        _erc20TotalReleased[token] += payment;\r\n\r\n        SafeERC20.safeTransfer(token, account, payment);\r\n        emit ERC20PaymentReleased(token, account, payment);\r\n    }\r\n```",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3474/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3474/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1155124745",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3474#issuecomment-1155124745",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3474",
    "id": 1155124745,
    "node_id": "IC_kwDOA9tCBs5E2c4J",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-14T12:33:48Z",
    "updated_at": "2022-06-14T12:33:48Z",
    "author_association": "COLLABORATOR",
    "body": "As you can see, the payment splitter computes the releasable amount, and updates all the internal stores, BEFORE transferring the assets. If reentrancy was to happen, that would be after all the states are updated, which is safe.\r\n\r\nThe (good) design of the function means we don't need to prevent reentrancy to ensure security. Adding it would just increase gas cost.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1155124745/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
