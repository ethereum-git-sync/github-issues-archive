{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3837",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3837/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3837/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3837/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3837",
  "id": 1465410240,
  "node_id": "I_kwDOA9tCBs5XWGLA",
  "number": 3837,
  "title": "Consider defaulting the type of an asset to be address in ERC4626",
  "user": {
    "login": "s1monAF",
    "id": 113381576,
    "node_id": "U_kgDOBsIQyA",
    "avatar_url": "https://avatars.githubusercontent.com/u/113381576?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/s1monAF",
    "html_url": "https://github.com/s1monAF",
    "followers_url": "https://api.github.com/users/s1monAF/followers",
    "following_url": "https://api.github.com/users/s1monAF/following{/other_user}",
    "gists_url": "https://api.github.com/users/s1monAF/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/s1monAF/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/s1monAF/subscriptions",
    "organizations_url": "https://api.github.com/users/s1monAF/orgs",
    "repos_url": "https://api.github.com/users/s1monAF/repos",
    "events_url": "https://api.github.com/users/s1monAF/events{/privacy}",
    "received_events_url": "https://api.github.com/users/s1monAF/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-11-27T11:26:21Z",
  "updated_at": "2023-01-05T15:14:33Z",
  "closed_at": "2023-01-05T15:14:33Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "In [ERC4626](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/8f8fd84f1e60426a5e785d6b5b2524938271bb05/contracts/token/ERC20/extensions/ERC4626.sol#L33), the default type of `_asset` is `IERC20`. Although this can reduce casting, this is also limiting what can be done with `_asset`. In an application we are building, the `_asset` is actually `ERC1155` based structured financial products. With `_asset` being an ERC20 token, we are facing some difficulty adopting this standard. It would be great if it can be simplified to be of just an address type and let the implementation decide what to do with the address variable. A possible fix is given below. Luckily, `_asset` is not used in many occurrences.",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3837/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3837/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1328226042",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3837#issuecomment-1328226042",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3837",
    "id": 1328226042,
    "node_id": "IC_kwDOA9tCBs5PKx76",
    "user": {
      "login": "s1monAF",
      "id": 113381576,
      "node_id": "U_kgDOBsIQyA",
      "avatar_url": "https://avatars.githubusercontent.com/u/113381576?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s1monAF",
      "html_url": "https://github.com/s1monAF",
      "followers_url": "https://api.github.com/users/s1monAF/followers",
      "following_url": "https://api.github.com/users/s1monAF/following{/other_user}",
      "gists_url": "https://api.github.com/users/s1monAF/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s1monAF/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s1monAF/subscriptions",
      "organizations_url": "https://api.github.com/users/s1monAF/orgs",
      "repos_url": "https://api.github.com/users/s1monAF/repos",
      "events_url": "https://api.github.com/users/s1monAF/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s1monAF/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-27T11:28:31Z",
    "updated_at": "2022-11-27T11:32:28Z",
    "author_association": "NONE",
    "body": "```\r\nabstract contract ERC4626 is ERC20, IERC4626 {\r\n    using Math for uint256;\r\n\r\n    address private immutable _asset;\r\n    uint8 private immutable _decimals;\r\n\r\n    /**\r\n     * @dev Set the underlying asset contract. This must be an ERC20-compatible contract (ERC20 or ERC777).\r\n     */\r\n    constructor(address asset_) {\r\n        (bool success, uint8 assetDecimals) = _tryGetAssetDecimals(asset_);\r\n        _decimals = success ? assetDecimals : super.decimals();\r\n        _asset = asset_;\r\n    }\r\n\r\n    /**\r\n     * @dev Attempts to fetch the asset decimals. A return value of false indicates that the attempt failed in some way.\r\n     */\r\n    function _tryGetAssetDecimals(address asset_) private returns (bool, uint8) {\r\n        (bool success, bytes memory encodedDecimals) = asset_.call(\r\n            abi.encodeWithSelector(IERC20Metadata.decimals.selector)\r\n        );\r\n        if (success && encodedDecimals.length >= 32) {\r\n            uint256 returnedDecimals = abi.decode(encodedDecimals, (uint256));\r\n            if (returnedDecimals <= type(uint8).max) {\r\n                return (true, uint8(returnedDecimals));\r\n            }\r\n        }\r\n        return (false, 0);\r\n    }\r\n  ...\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1328226042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1343881829",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3837#issuecomment-1343881829",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3837",
    "id": 1343881829,
    "node_id": "IC_kwDOA9tCBs5QGgJl",
    "user": {
      "login": "TChairman",
      "id": 98551945,
      "node_id": "U_kgDOBd_IiQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/98551945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TChairman",
      "html_url": "https://github.com/TChairman",
      "followers_url": "https://api.github.com/users/TChairman/followers",
      "following_url": "https://api.github.com/users/TChairman/following{/other_user}",
      "gists_url": "https://api.github.com/users/TChairman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TChairman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TChairman/subscriptions",
      "organizations_url": "https://api.github.com/users/TChairman/orgs",
      "repos_url": "https://api.github.com/users/TChairman/repos",
      "events_url": "https://api.github.com/users/TChairman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TChairman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-09T05:49:24Z",
    "updated_at": "2022-12-09T05:49:24Z",
    "author_association": "NONE",
    "body": "Doesn't this break deposit/withdraw as well? And totalAssets? Feels like it might be easier to add ERC20 compatibility to your asset, but I could be wrong.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1343881829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1372346722",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3837#issuecomment-1372346722",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3837",
    "id": 1372346722,
    "node_id": "IC_kwDOA9tCBs5RzFli",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-05T15:14:33Z",
    "updated_at": "2023-01-05T15:14:33Z",
    "author_association": "MEMBER",
    "body": "It's one thing to use `address` instead of `IERC20` in the argument type, but it's a very different thing to add support for ERC1155 tokens.\r\n\r\nEIP-4626 clearly states that the asset must be an ERC20 token ([source](https://eips.ethereum.org/EIPS/eip-4626#asset)), so it is not possible to support ERC1155.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1372346722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
