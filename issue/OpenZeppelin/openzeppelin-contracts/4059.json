{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4059",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4059/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4059/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4059/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4059",
  "id": 1592536469,
  "node_id": "I_kwDOA9tCBs5e7C2V",
  "number": 4059,
  "title": "Remove `override` for functions from interfaces & further improvement suggestions (for `v5.0`)",
  "user": {
    "login": "pcaversaccio",
    "id": 25297591,
    "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pcaversaccio",
    "html_url": "https://github.com/pcaversaccio",
    "followers_url": "https://api.github.com/users/pcaversaccio/followers",
    "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
    "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
    "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
    "repos_url": "https://api.github.com/users/pcaversaccio/repos",
    "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/11",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11/labels",
    "id": 7990184,
    "node_id": "MI_kwDOA9tCBs4Aeeuo",
    "number": 11,
    "title": "5.0",
    "description": null,
    "creator": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 43,
    "closed_issues": 21,
    "state": "open",
    "created_at": "2022-05-17T19:52:44Z",
    "updated_at": "2023-06-02T17:21:01Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 8,
  "created_at": "2023-02-20T22:54:04Z",
  "updated_at": "2023-06-01T11:44:44Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**🧐 Motivation**\r\n\r\nAll the base implementation contracts use currently the `override` modifiers since Solidity requires the `override` keyword when implementing a function from a parent interface. @frangio once opened an issue [here](https://github.com/ethereum/solidity/issues/8281). A simple example:\r\n\r\n```solidity\r\nfunction totalSupply() public view virtual override returns (uint256) {\r\n    return _totalSupply;\r\n}\r\n``` \r\n\r\nSince Solidity [`0.8.8`](https://github.com/ethereum/solidity/releases/tag/v0.8.8) a function that overrides only a single interface function does not require the `override` modifier anymore. I wanted to quickly discuss what kind of Solidity version is planned for `v5` contracts as well as such a refactoring would be plausible if upgraded to solc `>=0.8.8`.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4059/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4059/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1437691667",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4059#issuecomment-1437691667",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4059",
    "id": 1437691667,
    "node_id": "IC_kwDOA9tCBs5VsW8T",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-21T00:15:28Z",
    "updated_at": "2023-02-21T00:15:28Z",
    "author_association": "MEMBER",
    "body": ">what kind of Solidity version is planned for v5\r\n\r\n0.8.8 is totally acceptable. I would be willing to go to a very recent version if it gets us good language features.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1437691667/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1438021398",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4059#issuecomment-1438021398",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4059",
    "id": 1438021398,
    "node_id": "IC_kwDOA9tCBs5VtncW",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-21T08:14:20Z",
    "updated_at": "2023-02-21T08:14:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "If this is the case, let me push that idea further - what about `0.8.18` (the latest version)? The reason why I would love to consider this version explicitly, it allows named parameters in mapping types which would increase readability imho. OZ contracts make extensive use of mappings, and this could be definitely a benefit:\r\n\r\n```solidity\r\nmapping(address owner => mapping(address spender => uint256 amount)) private _allowances;\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1438021398/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1540908732",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4059#issuecomment-1540908732",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4059",
    "id": 1540908732,
    "node_id": "IC_kwDOA9tCBs5b2Ga8",
    "user": {
      "login": "0xad1onchain",
      "id": 14832564,
      "node_id": "MDQ6VXNlcjE0ODMyNTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/14832564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xad1onchain",
      "html_url": "https://github.com/0xad1onchain",
      "followers_url": "https://api.github.com/users/0xad1onchain/followers",
      "following_url": "https://api.github.com/users/0xad1onchain/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xad1onchain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xad1onchain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xad1onchain/subscriptions",
      "organizations_url": "https://api.github.com/users/0xad1onchain/orgs",
      "repos_url": "https://api.github.com/users/0xad1onchain/repos",
      "events_url": "https://api.github.com/users/0xad1onchain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xad1onchain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T21:21:43Z",
    "updated_at": "2023-05-09T21:21:43Z",
    "author_association": "NONE",
    "body": "How about introducing type-safe bytecode encoding introduced in `0.8.11`?\r\n\r\n`SafeERC20.sol` builds bytecode via `abi.encodeWithSelector`\r\n```\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n ```\r\n \r\n Would propose changing this to `abi.encodeCall` which adds type checks for arguments passed for bytecode generation and would fail compilation if incorrect\r\n \r\n\r\n ```\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\r\n    }\r\n ```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1540908732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1570734989",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4059#issuecomment-1570734989",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4059",
    "id": 1570734989,
    "node_id": "IC_kwDOA9tCBs5dn4ON",
    "user": {
      "login": "balajipachai",
      "id": 32358081,
      "node_id": "MDQ6VXNlcjMyMzU4MDgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/32358081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/balajipachai",
      "html_url": "https://github.com/balajipachai",
      "followers_url": "https://api.github.com/users/balajipachai/followers",
      "following_url": "https://api.github.com/users/balajipachai/following{/other_user}",
      "gists_url": "https://api.github.com/users/balajipachai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/balajipachai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/balajipachai/subscriptions",
      "organizations_url": "https://api.github.com/users/balajipachai/orgs",
      "repos_url": "https://api.github.com/users/balajipachai/repos",
      "events_url": "https://api.github.com/users/balajipachai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/balajipachai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-31T18:43:26Z",
    "updated_at": "2023-05-31T18:43:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "> How about introducing type-safe bytecode encoding introduced in `0.8.11`?\r\n> \r\n> `SafeERC20.sol` builds bytecode via `abi.encodeWithSelector`\r\n> \r\n> ```\r\n>     function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n>         _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n>     }\r\n> ```\r\n> \r\n> Would propose changing this to `abi.encodeCall` which adds type checks for arguments passed for bytecode generation and would fail compilation if incorrect\r\n> \r\n> ```\r\n>    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n>        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\r\n>    }\r\n> ```\r\n\r\nThis is addressed in PR #4293 ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1570734989/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1570735872",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4059#issuecomment-1570735872",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4059",
    "id": 1570735872,
    "node_id": "IC_kwDOA9tCBs5dn4cA",
    "user": {
      "login": "balajipachai",
      "id": 32358081,
      "node_id": "MDQ6VXNlcjMyMzU4MDgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/32358081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/balajipachai",
      "html_url": "https://github.com/balajipachai",
      "followers_url": "https://api.github.com/users/balajipachai/followers",
      "following_url": "https://api.github.com/users/balajipachai/following{/other_user}",
      "gists_url": "https://api.github.com/users/balajipachai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/balajipachai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/balajipachai/subscriptions",
      "organizations_url": "https://api.github.com/users/balajipachai/orgs",
      "repos_url": "https://api.github.com/users/balajipachai/repos",
      "events_url": "https://api.github.com/users/balajipachai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/balajipachai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-31T18:44:12Z",
    "updated_at": "2023-05-31T18:44:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@frangio Any guidelines on how to proceed on this or is it been taken care internally?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1570735872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1570982196",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4059#issuecomment-1570982196",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4059",
    "id": 1570982196,
    "node_id": "IC_kwDOA9tCBs5do0k0",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-31T21:28:47Z",
    "updated_at": "2023-05-31T21:28:47Z",
    "author_association": "MEMBER",
    "body": "A PR is welcome. Our only concern is that for a review we need to know how to check that the change was done exhaustively.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1570982196/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1571853792",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4059#issuecomment-1571853792",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4059",
    "id": 1571853792,
    "node_id": "IC_kwDOA9tCBs5dsJXg",
    "user": {
      "login": "balajipachai",
      "id": 32358081,
      "node_id": "MDQ6VXNlcjMyMzU4MDgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/32358081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/balajipachai",
      "html_url": "https://github.com/balajipachai",
      "followers_url": "https://api.github.com/users/balajipachai/followers",
      "following_url": "https://api.github.com/users/balajipachai/following{/other_user}",
      "gists_url": "https://api.github.com/users/balajipachai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/balajipachai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/balajipachai/subscriptions",
      "organizations_url": "https://api.github.com/users/balajipachai/orgs",
      "repos_url": "https://api.github.com/users/balajipachai/repos",
      "events_url": "https://api.github.com/users/balajipachai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/balajipachai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-01T11:14:12Z",
    "updated_at": "2023-06-01T11:14:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "> A PR is welcome. Our only concern is that for a review we need to know how to check that the change was done exhaustively.\r\n\r\nShould we also consider named parameters for mapping types?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1571853792/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1571897509",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4059#issuecomment-1571897509",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4059",
    "id": 1571897509,
    "node_id": "IC_kwDOA9tCBs5dsUCl",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-01T11:44:44Z",
    "updated_at": "2023-06-01T11:44:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Since we extended the scope of this issue, I amended the title for clarity fyi.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1571897509/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
