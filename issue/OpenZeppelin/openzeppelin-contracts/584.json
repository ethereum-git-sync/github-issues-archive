{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/584",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/584/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/584/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/584/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/584",
  "id": 276937224,
  "node_id": "MDU6SXNzdWUyNzY5MzcyMjQ=",
  "number": 584,
  "title": "Error: VM Exception while processing transaction: revert",
  "user": {
    "login": "sc0Vu",
    "id": 10494397,
    "node_id": "MDQ6VXNlcjEwNDk0Mzk3",
    "avatar_url": "https://avatars.githubusercontent.com/u/10494397?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sc0Vu",
    "html_url": "https://github.com/sc0Vu",
    "followers_url": "https://api.github.com/users/sc0Vu/followers",
    "following_url": "https://api.github.com/users/sc0Vu/following{/other_user}",
    "gists_url": "https://api.github.com/users/sc0Vu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sc0Vu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sc0Vu/subscriptions",
    "organizations_url": "https://api.github.com/users/sc0Vu/orgs",
    "repos_url": "https://api.github.com/users/sc0Vu/repos",
    "events_url": "https://api.github.com/users/sc0Vu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sc0Vu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": true,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2017-11-27T08:35:46Z",
  "updated_at": "2018-03-26T04:26:48Z",
  "closed_at": "2017-11-27T21:18:23Z",
  "author_association": "NONE",
  "active_lock_reason": "resolved",
  "body": "While I use MintableToken and call the mint function from user that not owner of the contract, it always throw this error:  VM Exception while processing transaction: revert.\r\n\r\nI think is the modifier using require instead revert.\r\n\r\nMaybe is like this issue? https://github.com/trufflesuite/ganache-cli/issues/397\r\n\r\nos: win10\r\nethereumjs-testrpc: ^6.0.3\r\nTruffle: 4.0.0 (core: 4.0.0)\r\nSolidity: 0.4.18 (solc-js)",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/584/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/584/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/347265568",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/584#issuecomment-347265568",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/584",
    "id": 347265568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzI2NTU2OA==",
    "user": {
      "login": "nedodn",
      "id": 29645083,
      "node_id": "MDQ6VXNlcjI5NjQ1MDgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/29645083?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nedodn",
      "html_url": "https://github.com/nedodn",
      "followers_url": "https://api.github.com/users/nedodn/followers",
      "following_url": "https://api.github.com/users/nedodn/following{/other_user}",
      "gists_url": "https://api.github.com/users/nedodn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nedodn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nedodn/subscriptions",
      "organizations_url": "https://api.github.com/users/nedodn/orgs",
      "repos_url": "https://api.github.com/users/nedodn/repos",
      "events_url": "https://api.github.com/users/nedodn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nedodn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T17:49:47Z",
    "updated_at": "2017-11-27T17:49:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "The mint function has the modifier onlyOwner on it so that only the owner can call it. If you look at Ownable.sol where the modifier comes from, it consists of a require(msg.sender == owner) statement. If this statement is false, such as calling the mint function from a user that is not the owner, the require statement compiles to 0xfd which is the opcode for revert. That's why you get the revert exception.\r\n\r\nSee: https://ethereum.stackexchange.com/questions/15166/difference-between-require-and-assert-and-the-difference-between-revert-and-thro",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/347265568/reactions",
      "total_count": 7,
      "+1": 7,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/347331184",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/584#issuecomment-347331184",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/584",
    "id": 347331184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzMzMTE4NA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T21:18:23Z",
    "updated_at": "2017-11-27T21:18:23Z",
    "author_association": "MEMBER",
    "body": "Thanks for explaning @nedodn.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/347331184/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/352702363",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/584#issuecomment-352702363",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/584",
    "id": 352702363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjcwMjM2Mw==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T10:27:36Z",
    "updated_at": "2017-12-19T10:27:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "The best place for debugging things like this would be the #beginners channel in the open zeppelin slack.\r\n\r\nAre you including `Ownable` in your contract that you've written? I can't see the rest of the code, but you may not have set `owner` to anything. Likewise, if you are including `Ownable`, it already provides `onlyOwner` for you, so there's no need to overwrite it.\r\n\r\nThat said, there's not much way to debug this without the full contract.\r\n\r\n*Instead of replying here, please follow up in the OpenZeppelin slack #beginners channel for assistance*",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/352702363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/367729640",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/584#issuecomment-367729640",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/584",
    "id": 367729640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzcyOTY0MA==",
    "user": {
      "login": "pkoch",
      "id": 9627,
      "node_id": "MDQ6VXNlcjk2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pkoch",
      "html_url": "https://github.com/pkoch",
      "followers_url": "https://api.github.com/users/pkoch/followers",
      "following_url": "https://api.github.com/users/pkoch/following{/other_user}",
      "gists_url": "https://api.github.com/users/pkoch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pkoch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pkoch/subscriptions",
      "organizations_url": "https://api.github.com/users/pkoch/orgs",
      "repos_url": "https://api.github.com/users/pkoch/repos",
      "events_url": "https://api.github.com/users/pkoch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pkoch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-22T16:05:51Z",
    "updated_at": "2018-02-22T16:05:51Z",
    "author_association": "NONE",
    "body": "I was running into this because I didn't set a `from` address when testing a `MintableToken` (which is `Ownable`). Solved it by doing something like:\r\n```\r\nconst MyMintableToken = artifacts.require('./MyMintableToken.sol')\r\n\r\ncontract('MyMintableToken', ([owner, ...accounts]) => {\r\n  var instance\r\n  beforeEach('setup contract for each test', async () => {\r\n    instance = await MyMintableToken.new({from: owner})\r\n  })\r\n\r\n  it('should start with no tokens', async () => {\r\n    assert.equal(\r\n      (await instance.totalSupply()).toNumber(),\r\n      0,\r\n    )\r\n  })\r\n})\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/367729640/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/367870144",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/584#issuecomment-367870144",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/584",
    "id": 367870144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg3MDE0NA==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T00:31:39Z",
    "updated_at": "2018-02-23T00:31:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's odd. When you deploy a contract, the `web3.eth.defaultAccount` is used by default, and truffle automatically sets that in your testing environment. And because `Ownable` uses `msg.sender` to register the first owner, it shouldn't be necessary to specify `owner` as long as it's the first account in the list (the one that will deploy the contract).\r\n\r\nDoes the deploy itself succeed if you remove the `{ from: owner }` argument?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/367870144/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/367979666",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/584#issuecomment-367979666",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/584",
    "id": 367979666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzk3OTY2Ng==",
    "user": {
      "login": "pkoch",
      "id": 9627,
      "node_id": "MDQ6VXNlcjk2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pkoch",
      "html_url": "https://github.com/pkoch",
      "followers_url": "https://api.github.com/users/pkoch/followers",
      "following_url": "https://api.github.com/users/pkoch/following{/other_user}",
      "gists_url": "https://api.github.com/users/pkoch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pkoch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pkoch/subscriptions",
      "organizations_url": "https://api.github.com/users/pkoch/orgs",
      "repos_url": "https://api.github.com/users/pkoch/repos",
      "events_url": "https://api.github.com/users/pkoch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pkoch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T11:05:46Z",
    "updated_at": "2018-02-23T11:05:46Z",
    "author_association": "NONE",
    "body": "D'oh! You're absolutely right. Just tried with `await AChips.new()` instead, and it worked just fine! I must have had something else littering my setup.\r\n\r\nThanks for clarifying!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/367979666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/376007327",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/584#issuecomment-376007327",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/584",
    "id": 376007327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjAwNzMyNw==",
    "user": {
      "login": "lakamsani",
      "id": 3322496,
      "node_id": "MDQ6VXNlcjMzMjI0OTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3322496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lakamsani",
      "html_url": "https://github.com/lakamsani",
      "followers_url": "https://api.github.com/users/lakamsani/followers",
      "following_url": "https://api.github.com/users/lakamsani/following{/other_user}",
      "gists_url": "https://api.github.com/users/lakamsani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lakamsani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lakamsani/subscriptions",
      "organizations_url": "https://api.github.com/users/lakamsani/orgs",
      "repos_url": "https://api.github.com/users/lakamsani/repos",
      "events_url": "https://api.github.com/users/lakamsani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lakamsani/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-25T22:03:51Z",
    "updated_at": "2018-03-25T22:04:52Z",
    "author_association": "NONE",
    "body": "I 'm getting this error when trying a `StandardToken.transferFrom`. To set some context I have this OZ based [CrowdSale example](https://hashnode.com/post/the-2018-guide-to-writing-and-testing-real-world-crowdsale-contracts-cjcs8dfes00apmdwthw03c2jq) and unit tests all running on my laptop.  I 'm trying to add a new test for transferring tokens like this.\r\n```javascript\r\n\r\n  let contractInstance\r\n  let tokenInstance\r\n\r\n  beforeEach('Setup', async () => {\r\n    contractInstance = await HashnodeCrowdsale.deployed()\r\n    const tokenAddress = await contractInstance.token.call()\r\n    tokenInstance = HashnodeToken.at(tokenAddress)\r\n  })\r\n\r\nit('Token transfer', async () => {\r\n    const contractInstance = await HashnodeCrowdsale.deployed()\r\n    let ecoSystemBalance = await web3.eth.getBalance(accounts[9])\r\n\r\n\r\n    const owner = await hashToken.owner.call()\r\n    console.log(owner)\r\n    await tokenInstance.approve(accounts[4], 4)\r\n    console.log(await tokenInstance.allowance(owner, accounts[4]))\r\n    await tokenInstance.transferFrom(owner, accounts[4], 3)\r\n\r\n    let receiverBalance = await web3.eth.getBalance(accounts[4])\r\n    receiverBalance = receiverBalance.toNumber()\r\n\r\n    assert.equal(receiverBalance, 3, 'Transfer failed')\r\n  })\r\n```\r\nBut it fails like this:\r\n```bash\r\n0x2365bb623ec45da3c78578b6c4ecb645816d5a57\r\nBigNumber { s: 1, e: 0, c: [ 0 ] }\r\n\r\n    Events emitted during test:\r\n    ---------------------------\r\n\r\n    Approval(owner: <indexed>, spender: <indexed>, value: 4)\r\n\r\n    ---------------------------\r\n\r\nError: VM Exception while processing transaction: revert\r\n    at Object.InvalidResponse (node_modules/truffle-contract/node_modules/web3/lib/web3/errors.js:38:16)\r\n    at node_modules/truffle-contract/node_modules/web3/lib/web3/requestmanager.js:86:36\r\n    at node_modules/truffle-provider/wrapper.js:134:9\r\n    at XMLHttpRequest.request.onreadystatechange (node_modules/truffle-provider/node_modules/web3/lib/web3/httpprovider.js:128:7)\r\n    at XMLHttpRequestEventTarget.dispatchEvent (node_modules/xhr2/lib/xhr2.js:64:18)\r\n    at XMLHttpRequest._setReadyState (node_modules/xhr2/lib/xhr2.js:354:12)\r\n    at XMLHttpRequest._onHttpResponseEnd (node_modules/xhr2/lib/xhr2.js:509:12)\r\n    at IncomingMessage.<anonymous> (node_modules/xhr2/lib/xhr2.js:469:24)\r\n    at endReadableNT (_stream_readable.js:1055:12)\r\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\r\n    at process._tickCallback (internal/process/next_tick.js:180:9)\r\n```\r\n\r\nTried from Truffle console like this and it also [fails](https://rinkeby.etherscan.io/tx/0x701bcacb14064450f6488725788c3e97e90f5b16a7e49eed6e65587d4aed0a81):\r\n```bash\r\ntokenInstance.transferFrom(sourceAddr,destAddr,1)\r\n\r\n```\r\nOnce this works I 'm hoping to try this outside Truffle in a node.js/express server and better understand who owns the token contract and how to effect transfers. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/376007327/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/376042522",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/584#issuecomment-376042522",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/584",
    "id": 376042522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjA0MjUyMg==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-26T04:22:34Z",
    "updated_at": "2018-03-26T04:22:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "By default all transactions are signed with with first account in your accounts list. As such, your `await tokenInstance.transferFrom(owner, accounts[4], 3)` transaction is signed by `accounts[0]` not the account that was approved by `await tokenInstance.approve(accounts[4], 4)` (that line says that `accounts[4]` is allowed to move 4 tokens from `msg.sender`'s token balance.\r\n\r\nAnyway, your solution is probably to change the line to something like `token.transferFrom(owner, accounts[4], 4, { from: accounts[4] })`",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/376042522/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/376042978",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/584#issuecomment-376042978",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/584",
    "id": 376042978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjA0Mjk3OA==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-26T04:26:37Z",
    "updated_at": "2018-03-26T04:26:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "**I'm locking this issue**\r\n\r\nIt has very high SEO visibility for a very generic error message. This issue will never be the correct place to raise questions like this, as they will always need to be handled on a case-by-case basis. The correct forum for this error is probably stack overflow #ethereum or the OpenZeppelin slack (slack.openzeppelin.org) if using OpenZeppelin.\r\n\r\nIf you've found this page, here are some tips for debugging this error:\r\n- it just means that your transaction failed due to a revert\r\n- no, there's no more information. this is a known issue with the EVM and is being worked on\r\n  - `truffle`/`web3<1.0.0` is also Bad Software are doesn't tell you _which_ transaction caused the error\r\n  - this means that the only way to figure out which line is failing is to remove lines until they don't fail\r\n  - yes, it sucks, but this will get better with time. for now, sorry\r\n- my best advice is for you, the programmer, to \"become the EVM\" and manually execute the transaction in your head to see why it might have failed. You'll get much better at this over time, although ideally in the future you won't have to.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/376042978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
