{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2308",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2308/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2308/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2308/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2308",
  "id": 654458888,
  "node_id": "MDU6SXNzdWU2NTQ0NTg4ODg=",
  "number": 2308,
  "title": "Virtual Keyword Considered Harmful",
  "user": {
    "login": "ItsNickBarry",
    "id": 1500628,
    "node_id": "MDQ6VXNlcjE1MDA2Mjg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1500628?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ItsNickBarry",
    "html_url": "https://github.com/ItsNickBarry",
    "followers_url": "https://api.github.com/users/ItsNickBarry/followers",
    "following_url": "https://api.github.com/users/ItsNickBarry/following{/other_user}",
    "gists_url": "https://api.github.com/users/ItsNickBarry/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ItsNickBarry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ItsNickBarry/subscriptions",
    "organizations_url": "https://api.github.com/users/ItsNickBarry/orgs",
    "repos_url": "https://api.github.com/users/ItsNickBarry/repos",
    "events_url": "https://api.github.com/users/ItsNickBarry/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ItsNickBarry/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-07-10T02:13:24Z",
  "updated_at": "2020-07-13T05:26:03Z",
  "closed_at": "2020-07-13T05:26:03Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Virtual Keyword Considered Harmful\r\n\r\nThe paternalistic, oppressive, and anti-intellectual introduction of the `virtual` keyword to Solidity has, in a single stroke, made Solidity contract development libraries almost useless for non-trivial applications.  It behooves library maintainers to declare all functions `virtual` until, at least, the day that the Solidity compiler responds to the overriding of a non-virtual function with a warning rather than an error.\r\n\r\n## Is it dangerous to override view functions?\r\n\r\nNo.  @frangio provides an example in #2154 of problems that might result from `virtual` `view` functions, bit such issues are easy to avoid in practice.\r\n\r\nHere is an example of an `ERC20` `balanceOf` function which accounts for a theoretical `earnedInterest` value that may change over time.  It is gas-efficient, and turns the two calls of a claim/transfer pattern into just one: \r\n\r\n```solidity\r\nfunction balanceOf (address account) override public view returns (uint) {\r\n  return super(account) + earnedInterest(account);\r\n}\r\n\r\nfunction earnedInterest (address account) public view returns (uint) {\r\n  // TODO: return quantity of tokens earned which has not yet been minted\r\n}\r\n\r\nfunction _beforeTokenTransfer (address from, address to, uint amount) virtual override internal {\r\n  _mint(from, earnedInterest(from));\r\n\r\n  // TODO: clear earned interest to prevent double minting\r\n\r\n  super(from, to, amount);\r\n}\r\n```\r\n\r\nAny functions which truly rely on strict, known behavior of `view` functions may be able to bypass the problem entirely by specifying the contract name explicitly before a function call:\r\n\r\n```solidity\r\nfunction strictBalanceOf (address account) public view returns (uint) {\r\n  return ERC20.balanceOf(account);\r\n}\r\n```\r\n\r\n## EIP1167 Minimal Proxies\r\n\r\nSeveral OpenZeppelin contracts are currently completely incompatible with the `EIP1167` Minimal Proxy pattern.  `ERC20`, `ERC721`, and `EER1155` all rely on constructors to set their metadata, but proxy constructors are never called.  Previously, it would have been trivial to override these metadata `view` functions to point to storage variables accessible to an `initialize` function, but this is now impossible because such functions are not `virtual`.\r\n\r\nAdmittedly, this problem could also be solved by providing access to the storage variables declared in OpenZeppelin base contracts.  \r\n\r\n## [/ˈtɛstɪŋ/](https://en.wiktionary.org/wiki/testing)\r\n\r\nThe primary argument against end-user control over which functions may be overridden seems to be that OpenZeppelin contracts would not work as expected.  But who among us is here to deploy the OpenZeppelin `ERC20` reference implementation?  The object of relying on a third-party library is to expand upon it, to make innovations unanticipated by its authors.  And each of those innovations should be rigorously validated through comprehensive automated testing.\r\n\r\n## Copy and Paste?\r\n\r\nIndeed, one can simply copy and paste the OpenZeppelin contracts, whatever state they're in at the most recent commit.  Those who are [too clever for OpenZeppelin](https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2154#issuecomment-654453038) may resort to this (whether @KaiRo-at is indeed too clever for OpenZeppelin remains an OpenQuestion).\r\n\r\nThat's how Y2K happened.  This time, it will be worse.  It will be Y3K.\r\n\r\n___\r\n\r\n\\#Y3K\r\n\\#WebY3K\r\n\\#ClosedZeppelin\r\n\\#VirtuallyBreakingChanges",
  "closed_by": {
    "login": "abcoathup",
    "id": 28278242,
    "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/abcoathup",
    "html_url": "https://github.com/abcoathup",
    "followers_url": "https://api.github.com/users/abcoathup/followers",
    "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
    "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
    "organizations_url": "https://api.github.com/users/abcoathup/orgs",
    "repos_url": "https://api.github.com/users/abcoathup/repos",
    "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
    "received_events_url": "https://api.github.com/users/abcoathup/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2308/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2308/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/657365981",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2308#issuecomment-657365981",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2308",
    "id": 657365981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzM2NTk4MQ==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-13T05:26:03Z",
    "updated_at": "2020-07-13T05:26:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @ItsNickBarry,\r\n\r\nIn case you weren't aware, [OpenZeppelin Contracts Ethereum Package](https://github.com/OpenZeppelin/openzeppelin-contracts-ethereum-package) contains the same contracts as the vanilla OpenZeppelin Contracts, but modified for use with upgradeable contracts, so have initializer functions rather than constructors.\r\n\r\nAs for the discussion on making view functions virtual, I recommend contributing use cases to the comments of https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2154 to aid the discussion.\r\n\r\nI am closing this issue as a duplicate of https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2154",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/657365981/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
