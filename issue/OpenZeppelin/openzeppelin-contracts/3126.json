{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3126",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3126/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3126/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3126/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3126",
  "id": 1110532622,
  "node_id": "I_kwDOA9tCBs5CMWIO",
  "number": 3126,
  "title": "ProposalCreated event never emits signatures",
  "user": {
    "login": "GeraldHost",
    "id": 23342939,
    "node_id": "MDQ6VXNlcjIzMzQyOTM5",
    "avatar_url": "https://avatars.githubusercontent.com/u/23342939?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/GeraldHost",
    "html_url": "https://github.com/GeraldHost",
    "followers_url": "https://api.github.com/users/GeraldHost/followers",
    "following_url": "https://api.github.com/users/GeraldHost/following{/other_user}",
    "gists_url": "https://api.github.com/users/GeraldHost/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/GeraldHost/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/GeraldHost/subscriptions",
    "organizations_url": "https://api.github.com/users/GeraldHost/orgs",
    "repos_url": "https://api.github.com/users/GeraldHost/repos",
    "events_url": "https://api.github.com/users/GeraldHost/events{/privacy}",
    "received_events_url": "https://api.github.com/users/GeraldHost/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-01-21T14:30:38Z",
  "updated_at": "2022-01-21T15:18:57Z",
  "closed_at": "2022-01-21T15:09:20Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üíª Environment**\r\n\r\n`4.4.1`\r\n\r\n**üìù Details**\r\n\r\nIt seems that the ProposalCreated event will never emit signatures. I'm assuming that the intention was that this event should support signatures as to be use with the GovBravo compatibility module because `Governor.sol` doesn't support a propose method with signature strings.\r\n\r\n**üî¢ Code to reproduce bug**\r\n\r\nThe event interface is:\r\n```solidity\r\nevent ProposalCreated(\r\n    uint256 proposalId,\r\n    address proposer,\r\n    address[] targets,\r\n    uint256[] values,\r\n    string[] signatures,\r\n    bytes[] calldatas,\r\n    uint256 startBlock,\r\n    uint256 endBlock,\r\n    string description\r\n);\r\n```\r\n\r\nWhen the event is emitted from `Governor.propose` the signatures value is set to `new string[](targets.length)`. Which if I understand correctly will always just be an array of empty strings of length `targets.length`. \r\n\r\nThe GovernorBravo compatibility module then extends propose with this implementation.\r\n\r\n```solidity\r\nfunction propose(\r\n    address[] memory targets,\r\n    uint256[] memory values,\r\n    string[] memory signatures,\r\n    bytes[] memory calldatas,\r\n    string memory description\r\n) public virtual override returns (uint256) {\r\n    _storeProposal(_msgSender(), targets, values, signatures, calldatas, description);\r\n    return propose(targets, values, _encodeCalldata(signatures, calldatas), description);\r\n}\r\n```\r\nBecause the signatures are being encoded before getting passed `Governor.propose` the signatures will only ever be empty. \r\n\r\nI understand that I can get the signatures from the `_proposalDetails` mapping. It therefore seems like signatures can be removed from the event as it will never be populated? I can't see anywhere in the docs that explains why it should be there but perhaps there is a legit reason. \r\n",
  "closed_by": {
    "login": "GeraldHost",
    "id": 23342939,
    "node_id": "MDQ6VXNlcjIzMzQyOTM5",
    "avatar_url": "https://avatars.githubusercontent.com/u/23342939?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/GeraldHost",
    "html_url": "https://github.com/GeraldHost",
    "followers_url": "https://api.github.com/users/GeraldHost/followers",
    "following_url": "https://api.github.com/users/GeraldHost/following{/other_user}",
    "gists_url": "https://api.github.com/users/GeraldHost/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/GeraldHost/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/GeraldHost/subscriptions",
    "organizations_url": "https://api.github.com/users/GeraldHost/orgs",
    "repos_url": "https://api.github.com/users/GeraldHost/repos",
    "events_url": "https://api.github.com/users/GeraldHost/events{/privacy}",
    "received_events_url": "https://api.github.com/users/GeraldHost/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3126/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3126/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018568565",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3126#issuecomment-1018568565",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3126",
    "id": 1018568565,
    "node_id": "IC_kwDOA9tCBs48th91",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-21T14:43:23Z",
    "updated_at": "2022-01-21T14:43:23Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @GeraldHost \r\n\r\nAs you pointed out, our intention was to keep `GovernorBravo` compatibility, particularly for indexing services that watch events. For this reason, we are keeping the same event signature, with the same parameter, and leaving that empty. \r\n\r\nNote that a `ProposalCreated` with empty \"signatures\" is valid by `GovernorBravo`'s standard (signatures can be left empty which result in a similar behavior to our contracts).\r\n\r\nTLDR: even if we never populate it, we will keep this field for bravo compatibility.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018568565/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018594725",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3126#issuecomment-1018594725",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3126",
    "id": 1018594725,
    "node_id": "IC_kwDOA9tCBs48toWl",
    "user": {
      "login": "GeraldHost",
      "id": 23342939,
      "node_id": "MDQ6VXNlcjIzMzQyOTM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/23342939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GeraldHost",
      "html_url": "https://github.com/GeraldHost",
      "followers_url": "https://api.github.com/users/GeraldHost/followers",
      "following_url": "https://api.github.com/users/GeraldHost/following{/other_user}",
      "gists_url": "https://api.github.com/users/GeraldHost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GeraldHost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GeraldHost/subscriptions",
      "organizations_url": "https://api.github.com/users/GeraldHost/orgs",
      "repos_url": "https://api.github.com/users/GeraldHost/repos",
      "events_url": "https://api.github.com/users/GeraldHost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GeraldHost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-21T15:09:20Z",
    "updated_at": "2022-01-21T15:09:20Z",
    "author_association": "NONE",
    "body": "Okay makes sense. I wonder if it is worth adding a `Note:` in the comments about this parameter as even if you are just using the Governor without the bravo compatibility extension is it somewhat confusing. Either way I'm happy to close this issue based on your response.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018594725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018603123",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3126#issuecomment-1018603123",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3126",
    "id": 1018603123,
    "node_id": "IC_kwDOA9tCBs48tqZz",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-21T15:18:57Z",
    "updated_at": "2022-01-21T15:18:57Z",
    "author_association": "COLLABORATOR",
    "body": "The bravo compatibility is here to \"complete\" bravo compatibility. But even without this this module you are already getting a lot for bravo compatibility, events being the most important point (also, using block number instead of timestamp, same status enum, ...)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018603123/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
