{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/934",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/934/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/934/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/934/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/934",
  "id": 320671485,
  "node_id": "MDU6SXNzdWUzMjA2NzE0ODU=",
  "number": 934,
  "title": "Questions about burn() function in ",
  "user": {
    "login": "roschler",
    "id": 4660487,
    "node_id": "MDQ6VXNlcjQ2NjA0ODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4660487?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/roschler",
    "html_url": "https://github.com/roschler",
    "followers_url": "https://api.github.com/users/roschler/followers",
    "following_url": "https://api.github.com/users/roschler/following{/other_user}",
    "gists_url": "https://api.github.com/users/roschler/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/roschler/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/roschler/subscriptions",
    "organizations_url": "https://api.github.com/users/roschler/orgs",
    "repos_url": "https://api.github.com/users/roschler/repos",
    "events_url": "https://api.github.com/users/roschler/events{/privacy}",
    "received_events_url": "https://api.github.com/users/roschler/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2018-05-07T04:37:50Z",
  "updated_at": "2018-05-28T21:15:58Z",
  "closed_at": "2018-05-28T21:15:58Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I and too new to both Solidity coding and the Open Zeppelin library be forking anything in this great project and attempting a pull request.  But after reading this medium article that talks about your ERC721 implementation:\r\n\r\nhttps://medium.com/blockchannel/walking-through-the-erc721-full-implementation-72ad72735f3c\r\n\r\nI do have some questions about the _burn()_ function in this full implementation of the ERC721 standard.  If I should have simply posted this in the Open Zeppelin slack instead then my apologies in advance.  If so, please go ahead and close this issue and I will do exactly that.\r\n\r\nGiven the code for the burn() function below, taken from:\r\n\r\nhttps://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC721/ERC721Token.sol\r\n\r\n    function _burn(address _owner, uint256 _tokenId) internal {\r\n        super._burn(_owner, _tokenId);\r\n\r\n        // Clear metadata (if any)\r\n        if (bytes(tokenURIs[_tokenId]).length != 0) {\r\n        delete tokenURIs[_tokenId];\r\n        }\r\n\r\n        // Reorg all tokens array\r\n        uint256 tokenIndex = allTokensIndex[_tokenId];\r\n        uint256 lastTokenIndex = allTokens.length.sub(1);\r\n        uint256 lastToken = allTokens[lastTokenIndex];\r\n\r\n        allTokens[tokenIndex] = lastToken;\r\n        allTokens[lastTokenIndex] = 0;\r\n\r\n        allTokens.length--;\r\n        allTokensIndex[_tokenId] = 0;\r\n        allTokensIndex[lastToken] = tokenIndex;\r\n    }\r\n\r\nI have these two questions:\r\n\r\n1)  In the calculation of _lastTokenIndex_, why isn't there a check to see if _allTokens.length_ is 0, so that the subsequent subtraction operation _.sub(1)_ does not cause an arithmetic error resulting in a potentially invalid value for _lastTokenIndex_?\r\n\r\n2) Why is the decrement operator being used on _allTokens.length_ instead of the _sub(1)_ method and again, why is there no check to see if it is already zero first?\r\n\r\n",
  "closed_by": {
    "login": "come-maiz",
    "id": 617831,
    "node_id": "MDQ6VXNlcjYxNzgzMQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/617831?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/come-maiz",
    "html_url": "https://github.com/come-maiz",
    "followers_url": "https://api.github.com/users/come-maiz/followers",
    "following_url": "https://api.github.com/users/come-maiz/following{/other_user}",
    "gists_url": "https://api.github.com/users/come-maiz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/come-maiz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/come-maiz/subscriptions",
    "organizations_url": "https://api.github.com/users/come-maiz/orgs",
    "repos_url": "https://api.github.com/users/come-maiz/repos",
    "events_url": "https://api.github.com/users/come-maiz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/come-maiz/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/934/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/934/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/388067374",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/934#issuecomment-388067374",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/934",
    "id": 388067374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODA2NzM3NA==",
    "user": {
      "login": "nedodn",
      "id": 29645083,
      "node_id": "MDQ6VXNlcjI5NjQ1MDgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/29645083?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nedodn",
      "html_url": "https://github.com/nedodn",
      "followers_url": "https://api.github.com/users/nedodn/followers",
      "following_url": "https://api.github.com/users/nedodn/following{/other_user}",
      "gists_url": "https://api.github.com/users/nedodn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nedodn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nedodn/subscriptions",
      "organizations_url": "https://api.github.com/users/nedodn/orgs",
      "repos_url": "https://api.github.com/users/nedodn/repos",
      "events_url": "https://api.github.com/users/nedodn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nedodn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T14:18:39Z",
    "updated_at": "2018-05-10T14:59:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "1. If you look into the contracts that ERC721Token.sol inherits from, you'll see `using SafeMath for uint256;` in ERC721BasicToken.sol. The Safe Math library checks to make sure that the subtraction operation is valid and prevents an invalid value for `lastTokenIndex`, it would throw if `allTokens.length` was zero.\r\n\r\n2. Not sure why they switched to using the decrement operator here instead of using `.sub(1)`, but the previous use of `.sub(1)` checks that the value is greater than zero so they may not have felt it necessary to include it again.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/388067374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/388069691",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/934#issuecomment-388069691",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/934",
    "id": 388069691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODA2OTY5MQ==",
    "user": {
      "login": "roschler",
      "id": 4660487,
      "node_id": "MDQ6VXNlcjQ2NjA0ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4660487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roschler",
      "html_url": "https://github.com/roschler",
      "followers_url": "https://api.github.com/users/roschler/followers",
      "following_url": "https://api.github.com/users/roschler/following{/other_user}",
      "gists_url": "https://api.github.com/users/roschler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roschler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roschler/subscriptions",
      "organizations_url": "https://api.github.com/users/roschler/orgs",
      "repos_url": "https://api.github.com/users/roschler/repos",
      "events_url": "https://api.github.com/users/roschler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roschler/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T14:26:19Z",
    "updated_at": "2018-05-10T14:27:41Z",
    "author_association": "NONE",
    "body": "I see what you're saying about allTokens.length being protected at the operation level by SafeMath.  But that's not what I meant with my question about that.  I'm more concerned about what conditions would lead to attempting to do a \"sub(1)\" from _allTokens.length_ if it is _already_ zero length.  That seems to indicate a failure in the logic flow that needs handling rather than the simple protection of the _lastTokenIndex_ at the arithmetic level.\r\n\r\nIf not, then there are two distinct pathways that can lead to _lastTokenIndex_ resulting in a zero value:\r\n\r\n1) _allTokens_ has one element in it at the time of execution (length = 1)\r\n2) _allTokens_ is empty at the time of execution (length = 0)\r\n\r\n I just don't see how this could be \"logically sound\".  It would seem to be worthy at least of a protective _assert()_ that checks that the _allTokens_ is not of zero length, or there could be unintended consequences.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/388069691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/388079424",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/934#issuecomment-388079424",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/934",
    "id": 388079424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODA3OTQyNA==",
    "user": {
      "login": "nedodn",
      "id": 29645083,
      "node_id": "MDQ6VXNlcjI5NjQ1MDgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/29645083?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nedodn",
      "html_url": "https://github.com/nedodn",
      "followers_url": "https://api.github.com/users/nedodn/followers",
      "following_url": "https://api.github.com/users/nedodn/following{/other_user}",
      "gists_url": "https://api.github.com/users/nedodn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nedodn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nedodn/subscriptions",
      "organizations_url": "https://api.github.com/users/nedodn/orgs",
      "repos_url": "https://api.github.com/users/nedodn/repos",
      "events_url": "https://api.github.com/users/nedodn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nedodn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T14:57:53Z",
    "updated_at": "2018-05-10T14:57:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "If allTokens is empty at the time of execution, lastTokenIndex would not equal 0, the transaction would throw and be canceled. I may have not made that clear in my answer, it won't just fail the subtraction operation, it will cancel the entire transaction. I may be misunderstanding what you are asking though.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/388079424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/388104072",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/934#issuecomment-388104072",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/934",
    "id": 388104072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODEwNDA3Mg==",
    "user": {
      "login": "roschler",
      "id": 4660487,
      "node_id": "MDQ6VXNlcjQ2NjA0ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4660487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roschler",
      "html_url": "https://github.com/roschler",
      "followers_url": "https://api.github.com/users/roschler/followers",
      "following_url": "https://api.github.com/users/roschler/following{/other_user}",
      "gists_url": "https://api.github.com/users/roschler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roschler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roschler/subscriptions",
      "organizations_url": "https://api.github.com/users/roschler/orgs",
      "repos_url": "https://api.github.com/users/roschler/repos",
      "events_url": "https://api.github.com/users/roschler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roschler/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T16:17:13Z",
    "updated_at": "2018-05-10T16:17:13Z",
    "author_association": "NONE",
    "body": "@nedodn That's what I didn't think about, thanks.  My fault.  SafeMath.sub() will cancel the transaction if there is an attempt to subtract from an already zero value.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/388104072/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/392604555",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/934#issuecomment-392604555",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/934",
    "id": 392604555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjYwNDU1NQ==",
    "user": {
      "login": "come-maiz",
      "id": 617831,
      "node_id": "MDQ6VXNlcjYxNzgzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/617831?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/come-maiz",
      "html_url": "https://github.com/come-maiz",
      "followers_url": "https://api.github.com/users/come-maiz/followers",
      "following_url": "https://api.github.com/users/come-maiz/following{/other_user}",
      "gists_url": "https://api.github.com/users/come-maiz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/come-maiz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/come-maiz/subscriptions",
      "organizations_url": "https://api.github.com/users/come-maiz/orgs",
      "repos_url": "https://api.github.com/users/come-maiz/repos",
      "events_url": "https://api.github.com/users/come-maiz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/come-maiz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-28T21:15:58Z",
    "updated_at": "2018-05-28T21:15:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the answer @nedodn! I'm closing this one, but feel free to send more questions @roschler.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/392604555/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
