{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/438",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/438/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/438/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/438/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/438",
  "id": 256707985,
  "node_id": "MDU6SXNzdWUyNTY3MDc5ODU=",
  "number": 438,
  "title": "Implementation of `approve` method violates ERC20 standard",
  "user": {
    "login": "3sGgpQ8H",
    "id": 3917202,
    "node_id": "MDQ6VXNlcjM5MTcyMDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/3sGgpQ8H",
    "html_url": "https://github.com/3sGgpQ8H",
    "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
    "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
    "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
    "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
    "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
    "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
    "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2017-09-11T13:45:31Z",
  "updated_at": "2021-11-15T03:00:00Z",
  "closed_at": "2017-09-18T21:18:58Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Currently, `approve` method in `StandardToken.sol` does not allow to set allowance to non-zero value if current allowance is non-zero.  This directly violates ERC20 standard that says:\r\n\r\n> Allows _spender to withdraw from your account multiple times, up to the _value amount. If this function is called again it overwrites the current allowance with _value.\r\n\r\nEIP-20 pull request adds the following to the description of `approve` method:\r\n\r\n> NOTE: To prevent attack vectors like the one described here and discussed here, clients SHOULD make sure to create user interfaces in such a way that they set the allowance first to 0 before setting it to another value for the same spender. THOUGH The contract itself shouldn't enforce it, to allow backwards compatilibilty with contracts deployed before\r\n\r\nSo current implementation of `approve` in `StandardToken.sol` violates EIP-20 as well.",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/438/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/438/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/328814086",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/438#issuecomment-328814086",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/438",
    "id": 328814086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODgxNDA4Ng==",
    "user": {
      "login": "jakub-wojciechowski",
      "id": 27825272,
      "node_id": "MDQ6VXNlcjI3ODI1Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/27825272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakub-wojciechowski",
      "html_url": "https://github.com/jakub-wojciechowski",
      "followers_url": "https://api.github.com/users/jakub-wojciechowski/followers",
      "following_url": "https://api.github.com/users/jakub-wojciechowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakub-wojciechowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakub-wojciechowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakub-wojciechowski/subscriptions",
      "organizations_url": "https://api.github.com/users/jakub-wojciechowski/orgs",
      "repos_url": "https://api.github.com/users/jakub-wojciechowski/repos",
      "events_url": "https://api.github.com/users/jakub-wojciechowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakub-wojciechowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-12T10:40:08Z",
    "updated_at": "2017-09-12T10:40:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "As the ERC20 is formalized now I think we should strictly implement the specification. How about moving the additional security check that enforces 0 allowance to an additional `safeApprove` method and leaving the old `approve` to fully implement ERC20 specification?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/328814086/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/329156232",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/438#issuecomment-329156232",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/438",
    "id": 329156232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTE1NjIzMg==",
    "user": {
      "login": "phiferd",
      "id": 25631,
      "node_id": "MDQ6VXNlcjI1NjMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phiferd",
      "html_url": "https://github.com/phiferd",
      "followers_url": "https://api.github.com/users/phiferd/followers",
      "following_url": "https://api.github.com/users/phiferd/following{/other_user}",
      "gists_url": "https://api.github.com/users/phiferd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phiferd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phiferd/subscriptions",
      "organizations_url": "https://api.github.com/users/phiferd/orgs",
      "repos_url": "https://api.github.com/users/phiferd/repos",
      "events_url": "https://api.github.com/users/phiferd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phiferd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-13T12:46:33Z",
    "updated_at": "2017-09-13T12:47:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, I don't see how this check actually protects against the attack vector described:\r\n\r\n`require((_value == 0) || (allowed[msg.sender][_spender] == 0));` \r\n\r\nIn the scenario where Alice tries to update Bob's allowance from N to M, by the time the update to the allowance is processed, won't Bob's remaining allowance be 0 already (assuming his attack was successful), in which case the check will pass?  ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/329156232/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/329172399",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/438#issuecomment-329172399",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/438",
    "id": 329172399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTE3MjM5OQ==",
    "user": {
      "login": "3sGgpQ8H",
      "id": 3917202,
      "node_id": "MDQ6VXNlcjM5MTcyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3sGgpQ8H",
      "html_url": "https://github.com/3sGgpQ8H",
      "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
      "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
      "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
      "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
      "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
      "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-13T13:45:18Z",
    "updated_at": "2017-09-13T13:45:18Z",
    "author_association": "NONE",
    "body": "@phiferd This check tries to encourage Alice to change Bob's allowance from N to zero and then from zero to M, instead of changing it from N to M directly.  Many believe that this way is more safe because it makes it impossible for Bob to transfer N+M tokens.  Actually this way is only slightly safer, if safer at all.  Here is original attack scenario:\r\n\r\n1. Bob is allowed to transfer N Alice's tokens\r\n2. Alice publishes transaction that changes Bob's allowance to M\r\n3. Bob front runs Alice's transaction and transfers N Alice's tokens\r\n4. Alice's transaction is mined so now Bob is allowed to transfer M Alice's tokens\r\n5. Bob transfers M Alice's tokens\r\n\r\nFinally Bob have transferred N+M Alice's tokens that is more than Alice ever wanted to allow Bob to transfer.\r\n\r\nOnce the attack allows Bob to transfer N+M tokens at most, many think that if either N or M is zero, than Alice is safe.  That's why this check is here.  Actually, even if Alice would change allowance from N to zero and then from zero to M, Bob still may transfer N+M of her tokens.  Here is the scenario:\r\n\r\n1. Bob is allowed to transfer N Alice's tokens\r\n2. Alice publishes transaction that changes Bob's allowance to zero\r\n3. Bob front runs Alice's transaction and transfers N Alice's tokens\r\n4. Alice's transaction is mined\r\n5. Alice sees that her transaction was mined successfully, that Bob's allowance is now zero and that proper Approval event was logged.  This is exactly what she would see if Bob would not transfer any tokens from her, so she has no reason to think that Bob actually used his allowance before it was revoked\r\n6. Now Alice publishes transaction that changes Bob's allowance to M\r\n7. Alice's second transaction is mined so now Bob is allowed to transfer M Alice's tokens\r\n8. Bob transfers M Alice's tokens\r\n\r\nAgain. Bob got N+M tokens which is more that Alice ever wanted to allow him to transfer.\r\n\r\nOne may argue that at step 5 Alice should notice that her token balance was decreased and Transfer event was logged.  This is true, but if Bob had transferred tokens not to himself but to somebody else, then Transfer event will not be linked to Bob, and, if Alice's account is busy and many people are allowed to transfer from it, Alice may think that this transfer was probably performed by somebody else, not by Bob.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/329172399/reactions",
      "total_count": 17,
      "+1": 12,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 5,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/329181512",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/438#issuecomment-329181512",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/438",
    "id": 329181512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTE4MTUxMg==",
    "user": {
      "login": "phiferd",
      "id": 25631,
      "node_id": "MDQ6VXNlcjI1NjMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phiferd",
      "html_url": "https://github.com/phiferd",
      "followers_url": "https://api.github.com/users/phiferd/followers",
      "following_url": "https://api.github.com/users/phiferd/following{/other_user}",
      "gists_url": "https://api.github.com/users/phiferd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phiferd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phiferd/subscriptions",
      "organizations_url": "https://api.github.com/users/phiferd/orgs",
      "repos_url": "https://api.github.com/users/phiferd/repos",
      "events_url": "https://api.github.com/users/phiferd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phiferd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-13T14:15:35Z",
    "updated_at": "2017-09-13T14:15:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see.  So the check is not there to stop the attack, but rather just to encourage people to get in the habit of N -> 0 then 0 -> M?  \r\n\r\nI do agree that a CAS approach would be better as you suggested in your original doc, but understand that this would not meet the existing spec which is used by many contracts in the wild.  \r\n\r\n@jakub-wojciechowski if the intention is to create a safeApprove function (outside of the ERC20 spec), why not just include the CAS approach suggested by @mikhail-vladimirov?\r\n\r\n```\r\nfunction safeApprove(\r\n  address _spender,\r\n  uint256 _currentValue,\r\n  uint256 _value)\r\nreturns (bool success)\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/329181512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/329189315",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/438#issuecomment-329189315",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/438",
    "id": 329189315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTE4OTMxNQ==",
    "user": {
      "login": "jakub-wojciechowski",
      "id": 27825272,
      "node_id": "MDQ6VXNlcjI3ODI1Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/27825272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakub-wojciechowski",
      "html_url": "https://github.com/jakub-wojciechowski",
      "followers_url": "https://api.github.com/users/jakub-wojciechowski/followers",
      "following_url": "https://api.github.com/users/jakub-wojciechowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakub-wojciechowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakub-wojciechowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakub-wojciechowski/subscriptions",
      "organizations_url": "https://api.github.com/users/jakub-wojciechowski/orgs",
      "repos_url": "https://api.github.com/users/jakub-wojciechowski/repos",
      "events_url": "https://api.github.com/users/jakub-wojciechowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakub-wojciechowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-13T14:40:25Z",
    "updated_at": "2017-09-13T14:40:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi, @phiferd, we've kind of agreed to implement Compare And Swap in #437 \r\nThe discussion was very similar to the one above.\r\n\r\nI'm waiting a bit to hear opinions whether there is a point in having to separate `decrease` and `increase` methods for the approve function. I'd love to submit a PR with CAS asap.  ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/329189315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/329278087",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/438#issuecomment-329278087",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/438",
    "id": 329278087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTI3ODA4Nw==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-13T19:52:35Z",
    "updated_at": "2017-09-13T19:52:35Z",
    "author_association": "MEMBER",
    "body": "Thanks for chiming in, everyone. I agree we should remove the non-compliant line.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/329278087/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/957052302",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/438#issuecomment-957052302",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/438",
    "id": 957052302,
    "node_id": "IC_kwDOA9tCBs45C3WO",
    "user": {
      "login": "asdfzxh8",
      "id": 31856778,
      "node_id": "MDQ6VXNlcjMxODU2Nzc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/31856778?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asdfzxh8",
      "html_url": "https://github.com/asdfzxh8",
      "followers_url": "https://api.github.com/users/asdfzxh8/followers",
      "following_url": "https://api.github.com/users/asdfzxh8/following{/other_user}",
      "gists_url": "https://api.github.com/users/asdfzxh8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asdfzxh8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asdfzxh8/subscriptions",
      "organizations_url": "https://api.github.com/users/asdfzxh8/orgs",
      "repos_url": "https://api.github.com/users/asdfzxh8/repos",
      "events_url": "https://api.github.com/users/asdfzxh8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asdfzxh8/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-02T02:52:27Z",
    "updated_at": "2021-11-15T03:00:00Z",
    "author_association": "NONE",
    "body": "no such thing as encouragex or discourage etc, doesnt matter, ceptuxyuax, do, say, can do, say any nmw and any s perfect",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/957052302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
