{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2981",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2981/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2981/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2981/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2981",
  "id": 1059443117,
  "node_id": "I_kwDOA9tCBs4_JdGt",
  "number": 2981,
  "title": "Add Function `Math.abs`",
  "user": {
    "login": "barakman",
    "id": 7003246,
    "node_id": "MDQ6VXNlcjcwMDMyNDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barakman",
    "html_url": "https://github.com/barakman",
    "followers_url": "https://api.github.com/users/barakman/followers",
    "following_url": "https://api.github.com/users/barakman/following{/other_user}",
    "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
    "organizations_url": "https://api.github.com/users/barakman/orgs",
    "repos_url": "https://api.github.com/users/barakman/repos",
    "events_url": "https://api.github.com/users/barakman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barakman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2021-11-21T17:52:14Z",
  "updated_at": "2022-09-30T18:59:05Z",
  "closed_at": "2022-09-30T18:59:05Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**🧐 Motivation**\r\nA function which returns the absolute (and obviously unsigned) value of a signed value.\r\n\r\n**📝 Details**\r\n\r\nHere is the full work (as I am not authorized to post a Pull Request on your repository):\r\n\r\n**File `Math.sol`:**\r\n```\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n```\r\n**File `MathMock.sol`:**\r\n```\r\n    function abs(int256 n) public pure returns (uint256) {\r\n        return Math.abs(n);\r\n    }\r\n```\r\n**File `Math.test.js`:**\r\n```\r\nconst { MAX_UINT256, MAX_INT256, MIN_INT256 } = constants;\r\n...\r\n  describe('abs', function () {\r\n    for (const n of [MIN_INT256, MIN_INT256.addn(1), new BN('-1'), new BN('0'), new BN('1'), MAX_INT256.subn(1), MAX_INT256]) {\r\n      it(`correctly computes the absolute value of ${n}`, async function () {\r\n        expect(await this.math.abs(n)).to.be.bignumber.equal(n.abs());\r\n      });\r\n    }\r\n  });\r\n...\r\n```\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2981/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2981/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/976243051",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2981#issuecomment-976243051",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2981",
    "id": 976243051,
    "node_id": "IC_kwDOA9tCBs46MElr",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-23T08:11:15Z",
    "updated_at": "2021-11-23T08:11:15Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @barakman and thank you for this request.\r\n\r\nI'm not puzzled about what the return type should be. On the one end returning `int256` would allow doing something like `int256 y = -x.abs();` but on the other hand it would causes overflow when doing `type(int256).min.abs()`\r\n\r\nFor the record, I'm not sure you implementation would work with `type(int256).min`, this would have to be tested, or documented.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/976243051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/976370763",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2981#issuecomment-976370763",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2981",
    "id": 976370763,
    "node_id": "IC_kwDOA9tCBs46MjxL",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-23T10:18:28Z",
    "updated_at": "2021-11-23T10:19:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Amxx:\r\n1. It doesn't make sense to return an `int256` for a value which is **always non-negative**.\r\n2. It is not even possible, because `abs(-2**255) == 2**255`, which cannot be represented with `int256`.\r\n3. Everything is tested, including `abs(type(int256).min)`; please have a look at the (JS) code that I posted.\r\n\r\nThanks",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/976370763/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/976374953",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2981#issuecomment-976374953",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2981",
    "id": 976374953,
    "node_id": "IC_kwDOA9tCBs46Mkyp",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-23T10:23:43Z",
    "updated_at": "2021-11-23T10:23:43Z",
    "author_association": "COLLABORATOR",
    "body": "While it is true that abs will always return a positive value, I'm curious about actual use cases, and the fact that it might be used as part or signed arithmetic. I fear this might be seen as implicit casting and be confusing.\r\n\r\nMaybe that is just me.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/976374953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/976382715",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2981#issuecomment-976382715",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2981",
    "id": 976382715,
    "node_id": "IC_kwDOA9tCBs46Mmr7",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-23T10:33:58Z",
    "updated_at": "2021-11-23T10:38:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Amxx: IMHO, function `abs` should not be used for signed arithmetic **by its very definition**.\r\n\r\nWith regards to the specific example that you've given:\r\n```\r\nint256 y = -x.abs();\r\n```\r\nThe correct thing to do would be:\r\n```\r\nusing SafeCast for uint256;\r\nint256 y = -x.abs().toInt256();\r\n```\r\nWhich will revert for `x == type(int256).min` at the call to `toInt256`, but work correctly for all other values.\r\n\r\nTBH, for this specific example, I wouldn't even use `abs` to begin with, but rather, implement something like:\r\n```\r\nfunction neg(int256 n) internal pure returns (int256) {\r\n    return n <= 0 ? n : -n;\r\n}\r\n```\r\nAnd you can overload that function with:\r\n```\r\nfunction neg(uint256 n) internal pure returns (int256) {\r\n    return -n.toInt256();\r\n}\r\n```\r\nThe first function will never revert, the second function will revert for `x > type(int256).max`.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/976382715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/976387754",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2981#issuecomment-976387754",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2981",
    "id": 976387754,
    "node_id": "IC_kwDOA9tCBs46Mn6q",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-23T10:41:00Z",
    "updated_at": "2021-11-23T10:41:00Z",
    "author_association": "COLLABORATOR",
    "body": "Interresting, \r\n\r\nmaybe, there is a case for adding both abs() and neg() into the Math library",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/976387754/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/976510957",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2981#issuecomment-976510957",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2981",
    "id": 976510957,
    "node_id": "IC_kwDOA9tCBs46NF_t",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-23T13:11:20Z",
    "updated_at": "2021-11-23T13:11:20Z",
    "author_association": "MEMBER",
    "body": "@barakman You should be able to fork the repository and open a pull request. Are you not authorized to do this?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/976510957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/976517534",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2981#issuecomment-976517534",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2981",
    "id": 976517534,
    "node_id": "IC_kwDOA9tCBs46NHme",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-23T13:16:06Z",
    "updated_at": "2021-11-23T13:16:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@frangio : That I haven't tried (not since v2.0.0 anyway). I'll give it a try...",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/976517534/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/976566560",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2981#issuecomment-976566560",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2981",
    "id": 976566560,
    "node_id": "IC_kwDOA9tCBs46NTkg",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-23T13:52:12Z",
    "updated_at": "2021-11-23T13:52:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@frangio: Done (PR #2984).\r\n\r\nNote that I had a mistake in a comment in my original post:\r\n```\r\n// must be unchecked in order to support `n = type(int256).max`\r\n```\r\nWhich I now fixed to:\r\n```\r\n// must be unchecked in order to support `n = type(int256).min`\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/976566560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1263882552",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2981#issuecomment-1263882552",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2981",
    "id": 1263882552,
    "node_id": "IC_kwDOA9tCBs5LVVE4",
    "user": {
      "login": "heldersepu",
      "id": 545474,
      "node_id": "MDQ6VXNlcjU0NTQ3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/545474?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/heldersepu",
      "html_url": "https://github.com/heldersepu",
      "followers_url": "https://api.github.com/users/heldersepu/followers",
      "following_url": "https://api.github.com/users/heldersepu/following{/other_user}",
      "gists_url": "https://api.github.com/users/heldersepu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/heldersepu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/heldersepu/subscriptions",
      "organizations_url": "https://api.github.com/users/heldersepu/orgs",
      "repos_url": "https://api.github.com/users/heldersepu/repos",
      "events_url": "https://api.github.com/users/heldersepu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/heldersepu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-30T18:21:39Z",
    "updated_at": "2022-09-30T18:21:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "This should be closed PR was merged",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1263882552/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
