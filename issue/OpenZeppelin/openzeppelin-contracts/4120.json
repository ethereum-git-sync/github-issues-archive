{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4120",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4120/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4120/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4120/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4120",
  "id": 1623243449,
  "node_id": "I_kwDOA9tCBs5gwLq5",
  "number": 4120,
  "title": "Pause Mechanism for Smart Contract Functions",
  "user": {
    "login": "njrapidinnovation",
    "id": 68365436,
    "node_id": "MDQ6VXNlcjY4MzY1NDM2",
    "avatar_url": "https://avatars.githubusercontent.com/u/68365436?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/njrapidinnovation",
    "html_url": "https://github.com/njrapidinnovation",
    "followers_url": "https://api.github.com/users/njrapidinnovation/followers",
    "following_url": "https://api.github.com/users/njrapidinnovation/following{/other_user}",
    "gists_url": "https://api.github.com/users/njrapidinnovation/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/njrapidinnovation/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/njrapidinnovation/subscriptions",
    "organizations_url": "https://api.github.com/users/njrapidinnovation/orgs",
    "repos_url": "https://api.github.com/users/njrapidinnovation/repos",
    "events_url": "https://api.github.com/users/njrapidinnovation/events{/privacy}",
    "received_events_url": "https://api.github.com/users/njrapidinnovation/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2023-03-14T11:04:54Z",
  "updated_at": "2023-03-30T04:42:28Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nI am making a smart contract that has over 100 functions, some of which are dependent on each other. However, since the current open-zeppelin contracts only support full contract pausing and unpausing, I am unable to implement a pause mechanism for specific functions.\r\n\r\nI require the ability to pause a particular function, regardless of its visibility.\r\n\r\nFor example:\r\n\r\n```\r\nfunction test1(){\r\n  test2()\r\n}\r\n\r\nfunction test2(){\r\n} \r\n```\r\n\r\nIn the above function, if `test2` is paused and `test1` is called, it should `throw an error indicating that test2` is currently paused.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4120/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4120/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1468839862",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4120#issuecomment-1468839862",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4120",
    "id": 1468839862,
    "node_id": "IC_kwDOA9tCBs5XjLe2",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-14T21:01:39Z",
    "updated_at": "2023-03-14T21:01:39Z",
    "author_association": "MEMBER",
    "body": "Thanks for the suggestion. This is something we want to look into.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1468839862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1469244984",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4120#issuecomment-1469244984",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4120",
    "id": 1469244984,
    "node_id": "IC_kwDOA9tCBs5XkuY4",
    "user": {
      "login": "njrapidinnovation",
      "id": 68365436,
      "node_id": "MDQ6VXNlcjY4MzY1NDM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/68365436?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njrapidinnovation",
      "html_url": "https://github.com/njrapidinnovation",
      "followers_url": "https://api.github.com/users/njrapidinnovation/followers",
      "following_url": "https://api.github.com/users/njrapidinnovation/following{/other_user}",
      "gists_url": "https://api.github.com/users/njrapidinnovation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njrapidinnovation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njrapidinnovation/subscriptions",
      "organizations_url": "https://api.github.com/users/njrapidinnovation/orgs",
      "repos_url": "https://api.github.com/users/njrapidinnovation/repos",
      "events_url": "https://api.github.com/users/njrapidinnovation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njrapidinnovation/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-15T03:11:00Z",
    "updated_at": "2023-03-15T03:11:00Z",
    "author_association": "NONE",
    "body": "Thanks @frangio . I have created a solution using `msg.sig` but it fails during internal function calls. Is there any way to fetch the signature of the function which we are calling during internal call in the contract?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1469244984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1470077785",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4120#issuecomment-1470077785",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4120",
    "id": 1470077785,
    "node_id": "IC_kwDOA9tCBs5Xn5tZ",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-15T14:08:42Z",
    "updated_at": "2023-03-15T14:08:42Z",
    "author_association": "MEMBER",
    "body": "No, that's not possible. To pause internal functions selectively you may need to add some sort of identifier manually in the modifier.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1470077785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1470083422",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4120#issuecomment-1470083422",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4120",
    "id": 1470083422,
    "node_id": "IC_kwDOA9tCBs5Xn7Fe",
    "user": {
      "login": "njrapidinnovation",
      "id": 68365436,
      "node_id": "MDQ6VXNlcjY4MzY1NDM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/68365436?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njrapidinnovation",
      "html_url": "https://github.com/njrapidinnovation",
      "followers_url": "https://api.github.com/users/njrapidinnovation/followers",
      "following_url": "https://api.github.com/users/njrapidinnovation/following{/other_user}",
      "gists_url": "https://api.github.com/users/njrapidinnovation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njrapidinnovation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njrapidinnovation/subscriptions",
      "organizations_url": "https://api.github.com/users/njrapidinnovation/orgs",
      "repos_url": "https://api.github.com/users/njrapidinnovation/repos",
      "events_url": "https://api.github.com/users/njrapidinnovation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njrapidinnovation/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-15T14:12:12Z",
    "updated_at": "2023-03-15T14:14:00Z",
    "author_association": "NONE",
    "body": "Yeah I completely agree with you . Is there any way to fetch the signature of called function during internal calls ? I think it is available in stack but not able to find a way to fetch it.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1470083422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1473961557",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4120#issuecomment-1473961557",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4120",
    "id": 1473961557,
    "node_id": "IC_kwDOA9tCBs5X2t5V",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-17T14:50:46Z",
    "updated_at": "2023-03-17T14:50:46Z",
    "author_association": "MEMBER",
    "body": "Internally functions are not identified by their signature... They are compiled to a location in the code and the contract will simply do a JUMP into that location.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1473961557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1489089170",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4120#issuecomment-1489089170",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4120",
    "id": 1489089170,
    "node_id": "IC_kwDOA9tCBs5YwbKS",
    "user": {
      "login": "therealharpaljadeja",
      "id": 38040789,
      "node_id": "MDQ6VXNlcjM4MDQwNzg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38040789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/therealharpaljadeja",
      "html_url": "https://github.com/therealharpaljadeja",
      "followers_url": "https://api.github.com/users/therealharpaljadeja/followers",
      "following_url": "https://api.github.com/users/therealharpaljadeja/following{/other_user}",
      "gists_url": "https://api.github.com/users/therealharpaljadeja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/therealharpaljadeja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/therealharpaljadeja/subscriptions",
      "organizations_url": "https://api.github.com/users/therealharpaljadeja/orgs",
      "repos_url": "https://api.github.com/users/therealharpaljadeja/repos",
      "events_url": "https://api.github.com/users/therealharpaljadeja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/therealharpaljadeja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T18:21:44Z",
    "updated_at": "2023-03-29T18:21:44Z",
    "author_association": "NONE",
    "body": "wouldn't `test1` revert anyway when it arrives at `test2()` statement? ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1489089170/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1489680478",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4120#issuecomment-1489680478",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4120",
    "id": 1489680478,
    "node_id": "IC_kwDOA9tCBs5Yyrhe",
    "user": {
      "login": "njrapidinnovation",
      "id": 68365436,
      "node_id": "MDQ6VXNlcjY4MzY1NDM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/68365436?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njrapidinnovation",
      "html_url": "https://github.com/njrapidinnovation",
      "followers_url": "https://api.github.com/users/njrapidinnovation/followers",
      "following_url": "https://api.github.com/users/njrapidinnovation/following{/other_user}",
      "gists_url": "https://api.github.com/users/njrapidinnovation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njrapidinnovation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njrapidinnovation/subscriptions",
      "organizations_url": "https://api.github.com/users/njrapidinnovation/orgs",
      "repos_url": "https://api.github.com/users/njrapidinnovation/repos",
      "events_url": "https://api.github.com/users/njrapidinnovation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njrapidinnovation/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-30T04:42:28Z",
    "updated_at": "2023-03-30T04:42:28Z",
    "author_association": "NONE",
    "body": "@therealharpaljadeja it can if there is specific check for `test2` function signature inside `test1` . \r\n\r\nBut in case of many internal calls we have to make specific check for each function call signature which is not a good approach.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1489680478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
