{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3125",
  "id": 1109780203,
  "node_id": "I_kwDOA9tCBs5CJebr",
  "number": 3125,
  "title": "Remove runtime validation of ERC1967 slots in proxies",
  "user": {
    "login": "Jaime-Iglesias",
    "id": 22358726,
    "node_id": "MDQ6VXNlcjIyMzU4NzI2",
    "avatar_url": "https://avatars.githubusercontent.com/u/22358726?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Jaime-Iglesias",
    "html_url": "https://github.com/Jaime-Iglesias",
    "followers_url": "https://api.github.com/users/Jaime-Iglesias/followers",
    "following_url": "https://api.github.com/users/Jaime-Iglesias/following{/other_user}",
    "gists_url": "https://api.github.com/users/Jaime-Iglesias/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Jaime-Iglesias/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Jaime-Iglesias/subscriptions",
    "organizations_url": "https://api.github.com/users/Jaime-Iglesias/orgs",
    "repos_url": "https://api.github.com/users/Jaime-Iglesias/repos",
    "events_url": "https://api.github.com/users/Jaime-Iglesias/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Jaime-Iglesias/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/10",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/10",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/10/labels",
    "id": 7788276,
    "node_id": "MI_kwDOA9tCBs4Adtb0",
    "number": 10,
    "title": "4.7",
    "description": "",
    "creator": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 24,
    "state": "closed",
    "created_at": "2022-03-21T15:43:38Z",
    "updated_at": "2022-07-13T07:28:46Z",
    "due_on": "2022-06-29T07:00:00Z",
    "closed_at": "2022-07-13T07:28:46Z"
  },
  "comments": 12,
  "created_at": "2022-01-20T21:24:16Z",
  "updated_at": "2022-06-06T18:22:51Z",
  "closed_at": "2022-06-06T18:22:51Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Following up on the forum [discussion](https://forum.openzeppelin.com/t/release-candidate-for-contracts-4-5-open-review-period/22700/3) - thx for the answer and the note about abstract contracts and constructors Frangio!\r\n\r\nThe tl;dr is that I wanted to start a constructive discussion around the current implementation of ERC1967.\r\n\r\nParticularly, I feel that not validating the storage [slots](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/783ac759a902a7b4a218c2d026a77e6a26b6c42d/contracts/proxy/ERC1967/ERC1967Upgrade.sol#L28) at the `ERC1967Upgrade` contract level and simply delegating the validation on the contracts implementing it can lead to people forgetting about the validation or to people deliberately \"forgetting\" - to, perhaps, change one of the slots to create a storage clash.\r\n\r\nI understand this last scenario might be out of the scope of the intention of the library but I also like to think about the library as a place that people can reference to \"validate\" code they find in the wild so I think the validation could serve as a way to raise awareness about the perils of using unstructured storage.\r\n\r\nLooking forward to hearing your thoughts!",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018307276",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3125#issuecomment-1018307276",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125",
    "id": 1018307276,
    "node_id": "IC_kwDOA9tCBs48siLM",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-21T08:58:07Z",
    "updated_at": "2022-01-21T08:59:53Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @Jaime-Iglesias \r\n\r\nWhat do you mean when you say \r\n\r\n> validation the storage slots\r\n\r\nWhat would this \"validation\" look like? Is it checking the content of the slot? Is it recomputing the slot from the \"hash(...) -1\"?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018307276/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018308267",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3125#issuecomment-1018308267",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125",
    "id": 1018308267,
    "node_id": "IC_kwDOA9tCBs48siar",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-21T08:59:30Z",
    "updated_at": "2022-01-21T08:59:37Z",
    "author_association": "COLLABORATOR",
    "body": "Also, What do you mean by \r\n\r\n> people deliberately \"forgetting\" to change one of the slots\r\n\r\nWhat is there to change, that people would forget?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018308267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018311883",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3125#issuecomment-1018311883",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125",
    "id": 1018311883,
    "node_id": "IC_kwDOA9tCBs48sjTL",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-21T09:03:18Z",
    "updated_at": "2022-01-21T09:03:33Z",
    "author_association": "COLLABORATOR",
    "body": "Just to be sure, you understand that two contracts `A` and `B`, living at different addresses, can use the same slot without conflict, right?\r\n\r\nIf A writes to slot \"x\" and B read from the same slot \"x\", B will NOT be seeing the value stored by A, because each contract is in its own \"independent\" space.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018311883/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018765770",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3125#issuecomment-1018765770",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125",
    "id": 1018765770,
    "node_id": "IC_kwDOA9tCBs48uSHK",
    "user": {
      "login": "Jaime-Iglesias",
      "id": 22358726,
      "node_id": "MDQ6VXNlcjIyMzU4NzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22358726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jaime-Iglesias",
      "html_url": "https://github.com/Jaime-Iglesias",
      "followers_url": "https://api.github.com/users/Jaime-Iglesias/followers",
      "following_url": "https://api.github.com/users/Jaime-Iglesias/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaime-Iglesias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jaime-Iglesias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaime-Iglesias/subscriptions",
      "organizations_url": "https://api.github.com/users/Jaime-Iglesias/orgs",
      "repos_url": "https://api.github.com/users/Jaime-Iglesias/repos",
      "events_url": "https://api.github.com/users/Jaime-Iglesias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jaime-Iglesias/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-21T18:39:57Z",
    "updated_at": "2022-01-21T18:45:00Z",
    "author_association": "NONE",
    "body": "Hey @Amxx,\r\n\r\nThanks for the response,\r\n\r\n\r\n> Hello @Jaime-Iglesias\r\n> \r\n> What do you mean when you say\r\n> \r\n> > validation the storage slots\r\n> \r\n> What would this \"validation\" look like? Is it checking the content of the slot? Is it recomputing the slot from the \"hash(...) -1\"?\r\n\r\nI mean validating the slot was computed from \"hash of ... - 1\".\r\n\r\n> Also, What do you mean by\r\n> \r\n> > people deliberately \"forgetting\" to change one of the slots\r\n> \r\n> What is there to change, that people would forget?\r\n\r\nI think my message was not very clear there, apologies. I meant that a malicious actor implementing `ERC1967Upgrade` could deliberately decide not to validate the slot computation because they have actually changed the value to create a storage clash  - ofc this scenario might be out of the scope of the library, since it would imply that the code is not directly imported but copied and modified, but having the validation in the library could serve as a reference for people and raise awareness about that posibility.\r\n\r\n> Just to be sure, you understand that two contracts `A` and `B`, living at different addresses, can use the same slot without conflict, right?\r\n> \r\n> If A writes to slot \"x\" and B read from the same slot \"x\", B will NOT be seeing the value stored by A, because each contract is in its own \"independent\" space.\r\n\r\nNot sure I follow here...In this case `A` would be \"a contract implementing `ERC1967Upgrade`\" and `B` would be \"`ERC1967Upgrade` which is abstract and thus could not be instantiated\" unless I'm missing the point of what you are trying to arrive at.\r\n\r\nFurthermore, to my point - the comments on the code state \"validated in the constructor\" so I think it's fair to assume implementers of `ERC1967Upgrade` should be validating the slot computation or that looks like it would be the intention in the first place :D\r\n\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/783ac759a902a7b4a218c2d026a77e6a26b6c42d/contracts/proxy/ERC1967/ERC1967Upgrade.sol#L26",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018765770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018771609",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3125#issuecomment-1018771609",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125",
    "id": 1018771609,
    "node_id": "IC_kwDOA9tCBs48uTiZ",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-21T18:48:59Z",
    "updated_at": "2022-01-21T18:48:59Z",
    "author_association": "COLLABORATOR",
    "body": "> Furthermore, to my point - the comments on the code state \"validated in the constructor\" so I think it's fair to assume implementers of `ERC1967Upgrade` should be validating the slot computation or that looks like it would be the intention in the first place :D\r\n\r\nThis refers to this check here: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/783ac759a902a7b4a218c2d026a77e6a26b6c42d/contracts/proxy/ERC1967/ERC1967Proxy.sol#L23\r\n\r\nIMO, the issue you are raising is more related to the code packaging/distribution. Someone able to tamper with the source code of this library could add all sorts of backdoors. If it is possible to change the hardcoded slot value, it would also be possible to remove any security check we add that double-checks the value.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018771609/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018776796",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3125#issuecomment-1018776796",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125",
    "id": 1018776796,
    "node_id": "IC_kwDOA9tCBs48uUzc",
    "user": {
      "login": "Jaime-Iglesias",
      "id": 22358726,
      "node_id": "MDQ6VXNlcjIyMzU4NzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22358726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jaime-Iglesias",
      "html_url": "https://github.com/Jaime-Iglesias",
      "followers_url": "https://api.github.com/users/Jaime-Iglesias/followers",
      "following_url": "https://api.github.com/users/Jaime-Iglesias/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaime-Iglesias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jaime-Iglesias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaime-Iglesias/subscriptions",
      "organizations_url": "https://api.github.com/users/Jaime-Iglesias/orgs",
      "repos_url": "https://api.github.com/users/Jaime-Iglesias/repos",
      "events_url": "https://api.github.com/users/Jaime-Iglesias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jaime-Iglesias/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-21T18:57:06Z",
    "updated_at": "2022-01-21T23:46:47Z",
    "author_association": "NONE",
    "body": "\r\n> > Furthermore, to my point - the comments on the code state \"validated in the constructor\" so I think it's fair to assume implementers of `ERC1967Upgrade` should be validating the slot computation or that looks like it would be the intention in the first place :D\r\n> \r\n> This refers to this check here:\r\n> \r\n> https://github.com/OpenZeppelin/openzeppelin-contracts/blob/783ac759a902a7b4a218c2d026a77e6a26b6c42d/contracts/proxy/ERC1967/ERC1967Proxy.sol#L23\r\n> \r\n> IMO, the issue you are raising is more related to the code packaging/distribution. Someone able to tamper with the source code of this library could add all sorts of backdoors. If it is possible to change the hardcoded slot value, it would also be possible to remove any security check we add that double-checks the value.\r\n\r\nSo, although I can get behind the last statement, then this raises the question - why does `ERC1967Proxy` perform the validation if it's in-fact not needed?\r\n\r\nSo what I'm trying to say is, if the current implementation values performing the validation as stated here https://github.com/OpenZeppelin/openzeppelin-contracts/blob/783ac759a902a7b4a218c2d026a77e6a26b6c42d/contracts/proxy/ERC1967/ERC1967Proxy.sol#L23\r\nThen why delegate said validation to the implementer when that is error-prone (i.e people forgetting)\r\n\r\nNote that, as I mentioned, I think the validation should be done and should not be delegated to implementing contracts (for the reasons exposed) just want to dig into the reasoning behind how the current implementation works and why.\r\n\r\nHope that makes it more clear :D",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1018776796/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021206223",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3125#issuecomment-1021206223",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125",
    "id": 1021206223,
    "node_id": "IC_kwDOA9tCBs483l7P",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-25T13:55:21Z",
    "updated_at": "2022-01-25T13:55:21Z",
    "author_association": "MEMBER",
    "body": ">IMO, the issue you are raising is more related to the code packaging/distribution.\r\n\r\nHow so?\r\n\r\nWe have this check in ERC1967Proxy. It's leftover from the original code before refactoring. If we no longer think this check is necessary then we should remove it from ERC1967Proxy, and I think also from TransparentUpgradeableProxy.\r\n\r\nI would be ok with removing the check and just hardcoding the constant with a comment explaining what it is.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021206223/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021287410",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3125#issuecomment-1021287410",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125",
    "id": 1021287410,
    "node_id": "IC_kwDOA9tCBs4835vy",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-25T15:10:05Z",
    "updated_at": "2022-01-25T15:10:05Z",
    "author_association": "COLLABORATOR",
    "body": "What I understand is that issue would arise if someone was to modify the slot that is hardcoded in `ERC1967Upgrade.sol`. For that to happen, someone would have to tamper with this repo's code, possibly at the npm level.\r\n\r\nFor a check to work, the \"attacker\" would have to change the hardcoded value in `ERC1967Upgrade.sol` and **NOT** change the check's code. I find that unrealistic.\r\n\r\nIf it was up to me, we would remove the check in `ERC1967Proxy` (and any other proxy that does it). Not replace it. Remove it. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021287410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021339757",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3125#issuecomment-1021339757",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125",
    "id": 1021339757,
    "node_id": "IC_kwDOA9tCBs484Ght",
    "user": {
      "login": "Jaime-Iglesias",
      "id": 22358726,
      "node_id": "MDQ6VXNlcjIyMzU4NzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22358726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jaime-Iglesias",
      "html_url": "https://github.com/Jaime-Iglesias",
      "followers_url": "https://api.github.com/users/Jaime-Iglesias/followers",
      "following_url": "https://api.github.com/users/Jaime-Iglesias/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaime-Iglesias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jaime-Iglesias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaime-Iglesias/subscriptions",
      "organizations_url": "https://api.github.com/users/Jaime-Iglesias/orgs",
      "repos_url": "https://api.github.com/users/Jaime-Iglesias/repos",
      "events_url": "https://api.github.com/users/Jaime-Iglesias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jaime-Iglesias/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-25T16:00:14Z",
    "updated_at": "2022-01-25T16:04:11Z",
    "author_association": "NONE",
    "body": "I'm honestly still in favour of performing the check. Even if it's just as an additional security/regression check in case that, for example, a future version of the library accidentally changes one of the hardcoded values.\r\n\r\nOf course I would perform these checks at the `ERC1967Upgrade` constructor and not in contracts inheriting from it.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021339757/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021402849",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3125#issuecomment-1021402849",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125",
    "id": 1021402849,
    "node_id": "IC_kwDOA9tCBs484V7h",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-25T16:57:21Z",
    "updated_at": "2022-01-25T16:59:27Z",
    "author_association": "COLLABORATOR",
    "body": "IMO `ERC1967Upgrade` should not be a contract. It is, for all intent and purpose, a library.\r\n\r\nAFAIK, the only reason for it to be a contract is so that the event's description gets included in the final contract's ABI. Solidity is going to make that irrelevant.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021402849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021508013",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3125#issuecomment-1021508013",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125",
    "id": 1021508013,
    "node_id": "IC_kwDOA9tCBs484vmt",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-25T18:57:38Z",
    "updated_at": "2022-01-25T18:57:38Z",
    "author_association": "MEMBER",
    "body": "> Even if it's just as an additional security/regression check in case that, for example, a future version of the library accidentally changes one of the hardcoded values.\r\n\r\nThis is what the test suite is for though! This should be covered by the tests.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021508013/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021542212",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3125#issuecomment-1021542212",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3125",
    "id": 1021542212,
    "node_id": "IC_kwDOA9tCBs48439E",
    "user": {
      "login": "Jaime-Iglesias",
      "id": 22358726,
      "node_id": "MDQ6VXNlcjIyMzU4NzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22358726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jaime-Iglesias",
      "html_url": "https://github.com/Jaime-Iglesias",
      "followers_url": "https://api.github.com/users/Jaime-Iglesias/followers",
      "following_url": "https://api.github.com/users/Jaime-Iglesias/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaime-Iglesias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jaime-Iglesias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaime-Iglesias/subscriptions",
      "organizations_url": "https://api.github.com/users/Jaime-Iglesias/orgs",
      "repos_url": "https://api.github.com/users/Jaime-Iglesias/repos",
      "events_url": "https://api.github.com/users/Jaime-Iglesias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jaime-Iglesias/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-25T19:39:14Z",
    "updated_at": "2022-01-25T19:39:14Z",
    "author_association": "NONE",
    "body": "> > Even if it's just as an additional security/regression check in case that, for example, a future version of the library accidentally changes one of the hardcoded values.\r\n> \r\n> This is what the test suite is for though! This should be covered by the tests.\r\n\r\nThat makes sense.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021542212/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
