{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4698",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4698/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4698/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4698/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4698",
  "id": 1956019792,
  "node_id": "I_kwDOA9tCBs50ln5Q",
  "number": 4698,
  "title": "ERC2771Forwarder Type Hash Inconsistency",
  "user": {
    "login": "JaredBorders",
    "id": 44350516,
    "node_id": "MDQ6VXNlcjQ0MzUwNTE2",
    "avatar_url": "https://avatars.githubusercontent.com/u/44350516?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JaredBorders",
    "html_url": "https://github.com/JaredBorders",
    "followers_url": "https://api.github.com/users/JaredBorders/followers",
    "following_url": "https://api.github.com/users/JaredBorders/following{/other_user}",
    "gists_url": "https://api.github.com/users/JaredBorders/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JaredBorders/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JaredBorders/subscriptions",
    "organizations_url": "https://api.github.com/users/JaredBorders/orgs",
    "repos_url": "https://api.github.com/users/JaredBorders/repos",
    "events_url": "https://api.github.com/users/JaredBorders/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JaredBorders/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-10-22T19:10:39Z",
  "updated_at": "2023-10-23T18:54:33Z",
  "closed_at": "2023-10-23T18:54:32Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Summary \r\n\r\n`ERC2771Forwarder.ForwardRequestData` struct does not match `_FORWARD_REQUEST_TYPEHASH`\r\n\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/149e1b79fecb9db32f732c8c9f05ac2d8fa97471/contracts/metatx/ERC2771Forwarder.sol#L65\r\n\r\n## 💻 Environment\r\n\r\nv5.0.0\r\n\r\n## 📝 Details\r\n\r\nThe struct is defined as:\r\n\r\n```\r\nstruct ForwardRequestData {\r\n        address from;\r\n        address to;\r\n        uint256 value;\r\n        uint256 gas;\r\n        uint48 deadline;\r\n        bytes data;\r\n        bytes signature;\r\n}\r\n```\r\n\r\nand the type hash is defined as:\r\n\r\n```\r\nbytes32 internal constant _FORWARD_REQUEST_TYPEHASH =\r\n    keccak256(\r\n        \"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,uint48 deadline,bytes data)\"\r\n    );\r\n```\r\n\r\nThe type hash parameters should match the fields found in the struct.\r\n\r\n## 🔢 Code to reproduce bug\r\n\r\nN/A\r\n",
  "closed_by": {
    "login": "ernestognw",
    "id": 33379285,
    "node_id": "MDQ6VXNlcjMzMzc5Mjg1",
    "avatar_url": "https://avatars.githubusercontent.com/u/33379285?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ernestognw",
    "html_url": "https://github.com/ernestognw",
    "followers_url": "https://api.github.com/users/ernestognw/followers",
    "following_url": "https://api.github.com/users/ernestognw/following{/other_user}",
    "gists_url": "https://api.github.com/users/ernestognw/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ernestognw/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ernestognw/subscriptions",
    "organizations_url": "https://api.github.com/users/ernestognw/orgs",
    "repos_url": "https://api.github.com/users/ernestognw/repos",
    "events_url": "https://api.github.com/users/ernestognw/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ernestognw/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4698/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4698/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1774194577",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4698#issuecomment-1774194577",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4698",
    "id": 1774194577,
    "node_id": "IC_kwDOA9tCBs5pwA-R",
    "user": {
      "login": "ernestognw",
      "id": 33379285,
      "node_id": "MDQ6VXNlcjMzMzc5Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/33379285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ernestognw",
      "html_url": "https://github.com/ernestognw",
      "followers_url": "https://api.github.com/users/ernestognw/followers",
      "following_url": "https://api.github.com/users/ernestognw/following{/other_user}",
      "gists_url": "https://api.github.com/users/ernestognw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ernestognw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ernestognw/subscriptions",
      "organizations_url": "https://api.github.com/users/ernestognw/orgs",
      "repos_url": "https://api.github.com/users/ernestognw/repos",
      "events_url": "https://api.github.com/users/ernestognw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ernestognw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-22T20:45:26Z",
    "updated_at": "2023-10-22T20:45:26Z",
    "author_association": "MEMBER",
    "body": "Hey @JaredBorders, thanks for reporting. However, we don't see this mismatch as an issue. The `signature` value is not included because you'd require the signature to sign a message. And regarding the `nonce`, we discussed it during the 5.0 development and reached the following conclusions:\r\n\r\n1.  Including `nonce` in `ForwardRequestData` is redundant information because the nonce is a 1:1 relationship with the address.\r\n2. Removing `nonce` from `ForwardRequestData` reduced the calldata size, which is especially important for the `executeBatch` function.\r\n3. Given meta transactions are sponsored by an entity, it's in its best interest to save in calldata costs.\r\n4. The nonce can't be spoofed anyway because it needs to be included in the signed message (what the end user will see in metamask)\r\n\r\n> The type hash parameters should match the fields found in the struct.\r\n\r\nCan you elaborate on why they should? I'd be happy to hear if we're missing something with the design of the forwarder",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1774194577/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1775740202",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4698#issuecomment-1775740202",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4698",
    "id": 1775740202,
    "node_id": "IC_kwDOA9tCBs5p16Uq",
    "user": {
      "login": "JaredBorders",
      "id": 44350516,
      "node_id": "MDQ6VXNlcjQ0MzUwNTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/44350516?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JaredBorders",
      "html_url": "https://github.com/JaredBorders",
      "followers_url": "https://api.github.com/users/JaredBorders/followers",
      "following_url": "https://api.github.com/users/JaredBorders/following{/other_user}",
      "gists_url": "https://api.github.com/users/JaredBorders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JaredBorders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JaredBorders/subscriptions",
      "organizations_url": "https://api.github.com/users/JaredBorders/orgs",
      "repos_url": "https://api.github.com/users/JaredBorders/repos",
      "events_url": "https://api.github.com/users/JaredBorders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JaredBorders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-23T18:05:54Z",
    "updated_at": "2023-10-23T18:06:10Z",
    "author_association": "NONE",
    "body": ">  The signature value is not included because you'd require the signature to sign a message\r\n\r\nOkay, this makes sense to me. \r\n\r\n> Can you elaborate on why they should? I'd be happy to hear if we're missing something with the design of the forwarder\r\n\r\nI re-read EIP-712 and quoting from it: \r\n\r\n\"Definition: A struct type has valid identifier as name and contains zero or more member variables. Member variables have a member type and a name.\" \r\n\r\nThis does *seem* to support the concept of not including all member variables of a struct in its typehash. Leaving members out is uncommon in my experience, though, which is why I opened the issue. \r\n\r\n> conclusions 1 - 4\r\n\r\nThese make sense to me. However, including a nonce would allow for improved signer control over requests. \r\n\r\nFor example, if a nonce was included, it could be invalidated by the user *prior to execution*. Invalidation would require more logic though, and would subsequently increase the gas required to check that a *specific* nonce hasn't been used.\r\n\r\nThis is likely a trade-off that has already been considered, though. \r\n\r\n-----------\r\n\r\nI will wait for your response, but I think this issue can be closed. Thank you for your swift reply @ernestognw 🫡",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1775740202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1775828674",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4698#issuecomment-1775828674",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4698",
    "id": 1775828674,
    "node_id": "IC_kwDOA9tCBs5p2P7C",
    "user": {
      "login": "ernestognw",
      "id": 33379285,
      "node_id": "MDQ6VXNlcjMzMzc5Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/33379285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ernestognw",
      "html_url": "https://github.com/ernestognw",
      "followers_url": "https://api.github.com/users/ernestognw/followers",
      "following_url": "https://api.github.com/users/ernestognw/following{/other_user}",
      "gists_url": "https://api.github.com/users/ernestognw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ernestognw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ernestognw/subscriptions",
      "organizations_url": "https://api.github.com/users/ernestognw/orgs",
      "repos_url": "https://api.github.com/users/ernestognw/repos",
      "events_url": "https://api.github.com/users/ernestognw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ernestognw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-23T18:54:33Z",
    "updated_at": "2023-10-23T18:54:33Z",
    "author_association": "MEMBER",
    "body": "> This does seem to support the concept of not including all member variables of a struct in its typehash. Leaving members out is uncommon in my experience, though, which is why I opened the issue.\r\n\r\nYeah, also note that the definition also specifies that is not Solidity-specific and _aims to be agnostic to higher-level languages_. Not that our library is a different language but the standard allows us to play a bit with its definition, in reality, the definition of `𝕊` is an implicit subset of the `ForwardRequestData` struct.\r\n\r\nWe also named the struct `ForwardRequestData` to clearly differentiate it from the `𝕊` identifier, which is `ForwardRequest` (included in the `_FORWARD_REQUEST_TYPEHASH` encoding).\r\n\r\n> For example, if a nonce was included, it could be invalidated by the user prior to execution. Invalidation would require more logic though, and would subsequently increase the gas required to check that a specific nonce hasn't been used.\r\n\r\nRemember the [nonce is included in `𝕊` encoding](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/3e6c86392c97fbc30d3d20a378a6f58beba08eba/contracts/metatx/ERC2771Forwarder.sol#L229) but not in calldata. The user can still invalidate a transaction by relaying another transaction with the same nonce. The `Nonces` contract guarantees nonces can't be used more than once and it's [formally verified](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/3eb5cfb22a589a84805dc631cece72c5c10a35fa/certora/specs/Nonces.spec).\r\n\r\n> Thank you for your swift reply @ernestognw 🫡\r\n\r\nIt's a pleasure friend 🤓. Closing",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1775828674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
