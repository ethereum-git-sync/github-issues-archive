{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2963",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2963/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2963/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2963/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2963",
  "id": 1051722324,
  "node_id": "I_kwDOA9tCBs4-sAJU",
  "number": 2963,
  "title": "unchecked - what does it do?",
  "user": {
    "login": "nbawe",
    "id": 33641382,
    "node_id": "MDQ6VXNlcjMzNjQxMzgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/33641382?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nbawe",
    "html_url": "https://github.com/nbawe",
    "followers_url": "https://api.github.com/users/nbawe/followers",
    "following_url": "https://api.github.com/users/nbawe/following{/other_user}",
    "gists_url": "https://api.github.com/users/nbawe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nbawe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nbawe/subscriptions",
    "organizations_url": "https://api.github.com/users/nbawe/orgs",
    "repos_url": "https://api.github.com/users/nbawe/repos",
    "events_url": "https://api.github.com/users/nbawe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nbawe/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-11-12T08:50:39Z",
  "updated_at": "2021-11-17T11:34:35Z",
  "closed_at": "2021-11-17T11:34:35Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "In the case of the following function what does the `unchecked` do? Isn't `require` enough? The code originates from [ERC20.sol](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol).\r\n```\r\nfunction transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        unchecked {\r\n            _approve(sender, _msgSender(), currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n```",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2963/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2963/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/967057290",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2963#issuecomment-967057290",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2963",
    "id": 967057290,
    "node_id": "IC_kwDOA9tCBs45pB-K",
    "user": {
      "login": "julianmrodri",
      "id": 56316686,
      "node_id": "MDQ6VXNlcjU2MzE2Njg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/56316686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julianmrodri",
      "html_url": "https://github.com/julianmrodri",
      "followers_url": "https://api.github.com/users/julianmrodri/followers",
      "following_url": "https://api.github.com/users/julianmrodri/following{/other_user}",
      "gists_url": "https://api.github.com/users/julianmrodri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julianmrodri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julianmrodri/subscriptions",
      "organizations_url": "https://api.github.com/users/julianmrodri/orgs",
      "repos_url": "https://api.github.com/users/julianmrodri/repos",
      "events_url": "https://api.github.com/users/julianmrodri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julianmrodri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-12T12:04:30Z",
    "updated_at": "2021-11-12T12:05:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "By default Solidity now includes checks for underflow/overflow on arithmetic operations. But sometimes you can avoid them to save some gas if you are really sure the operation won't cause any underflow/overflow. \r\n\r\nIn this case because the `require` is already validating that `currentAllowance >= amount` then you don't need to check for underflow/overflow in the `_approve` (which substracts `amount` from `currentAllowance`).\r\n\r\nThe `unchecked` in this case is  an **optimization** in terms of gas, not mandatory to use but useful in cases like this.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/967057290/reactions",
      "total_count": 7,
      "+1": 7,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
