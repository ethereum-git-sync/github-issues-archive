{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2914",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2914/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2914/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2914/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2914",
  "id": 1027039462,
  "node_id": "I_kwDOA9tCBs49N2Dm",
  "number": 2914,
  "title": "Possible error in ECDSA.sol",
  "user": {
    "login": "grapevinegizmos",
    "id": 8684037,
    "node_id": "MDQ6VXNlcjg2ODQwMzc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8684037?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/grapevinegizmos",
    "html_url": "https://github.com/grapevinegizmos",
    "followers_url": "https://api.github.com/users/grapevinegizmos/followers",
    "following_url": "https://api.github.com/users/grapevinegizmos/following{/other_user}",
    "gists_url": "https://api.github.com/users/grapevinegizmos/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/grapevinegizmos/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/grapevinegizmos/subscriptions",
    "organizations_url": "https://api.github.com/users/grapevinegizmos/orgs",
    "repos_url": "https://api.github.com/users/grapevinegizmos/repos",
    "events_url": "https://api.github.com/users/grapevinegizmos/events{/privacy}",
    "received_events_url": "https://api.github.com/users/grapevinegizmos/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2021-10-15T03:23:05Z",
  "updated_at": "2021-10-15T19:54:24Z",
  "closed_at": "2021-10-15T14:23:40Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "<!-- Briefly describe the issue you're experiencing. Tell us what you were trying to do and what happened instead. -->\r\n\r\nIt appears that ECDSA.recover returns incorrect address for a signature created on the client side by ethers.SignerWithAddress.signMessage.\r\n\r\n\r\n<!-- Remember, this is not a place to ask for help debugging code. For that, we welcome you in the OpenZeppelin Community Forum: https://forum.openzeppelin.com/. -->\r\n\r\n**üíª Environment**\r\n\r\n<!-- Tell us what version of OpenZeppelin Contracts you're using, and how you're using it: Truffle, Remix, etc. -->\r\nSolidity 8.4\r\nethers.js version 5.4.7\r\nHardhat version 2.6.5\r\nRunning in VS Code locally with MetaMask 10.2.2\r\n\r\n**üìù Details**\r\n\r\nI am attempting to use ECDSA.recover to confirm that that a document string supplied to contract in a function call was in fact signed by the account of msg.sender.  I have been unable to find any error in the code below but perhaps I misusing the libraries somehow.\r\n\r\n<!-- Describe the problem you have been experiencing in more detail. Include as much information as you think is relevant. Keep in mind that transactions can fail for many reasons; context is key here. -->\r\n\r\nIt may the problem is that the signature produced by `ethers.SignerWithAddress.signMessage(msg)` isn't the kind of signature ECDSA is meant to work with, but I couldn't tell from the documentation.  \r\n\r\nI noted that the actual signature produced is a string 132 characters in length, but ECDSA.recover expects a signature of 65 bytes.  I noticed that apply `abi.encodePacked` to the signature reduces it length from 132 to 65, so I assume that is what you're supposed to do, but perhaps not since the function returns an address different than the address of the account singing the message. \r\n\r\n**üî¢ Code to reproduce bug**\r\n\r\n<!-- We will be able to better help if you provide a minimal example that triggers the bug. -->\r\nClient side code (Typescript):\r\n\r\n```            \r\n            let contract_address = await TokenHelper.deploy();\r\n            let hm = await ethers.getContractAt(\"HiveMind\", contract_address)\r\n            let message : string = \"check that this message was signed by account0\";\r\n            //hash the plain text message; \r\n            let messageHash = keccak256(utils.toUtf8Bytes(message));\r\n            //account0 signs the message;\r\n            let signature = await address0.signMessage(utils.toUtf8Bytes(messageHash));\r\n            //verify the message\r\n            let output = await hm.connect(address0.address).verifyMessage(message, signature);\r\n            console.log(`Actual address:    ${address0.address}`)\r\n            console.log(`Recovered address: ${output[0]} ${output[1]}`);\r\n            console.log(\"\");\r\n            console.log(\"ethers.js version\", ethers.version)      \r\n```\r\nOutput   \r\n\r\nTokenTest\r\n```\r\nActual address:    0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\r\nRecovered address: 0xB21D540039aB6A0F01b01c0b7bccdC887B67Bc56 false\r\nethers.js version ethers/5.4.7\r\n```\r\n\r\nContract Code:\r\n```\r\nfunction verifyMessage(string memory message, bytes memory signature) \r\n        public view  returns(address, bool) {\r\n        //hash the plain text message\r\n        bytes32 messagehash =  keccak256(bytes(message));\r\n        bytes memory sig = abi.encodePacked(signature);\r\n        address signeraddress = messagehash.toEthSignedMessageHash().recover(sig);\r\n              \r\n        if (msg.sender==signeraddress) {\r\n            //The message is authentic\r\n            return (signeraddress, true);\r\n        } else {\r\n            //msg.sender didnt sign this message.\r\n            return (signeraddress, false);\r\n        }\r\n    }\r\n```\r\n\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2914/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2914/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944070484",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2914#issuecomment-944070484",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2914",
    "id": 944070484,
    "node_id": "IC_kwDOA9tCBs44RV9U",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-15T07:38:56Z",
    "updated_at": "2021-10-15T07:38:56Z",
    "author_association": "COLLABORATOR",
    "body": "You shouldn't need to do `bytes memory sig = abi.encodePacked(signature);`  in the verify message. (it should actually not change anything, so that is not the main issue)\r\n\r\nNote that a 65 bytes long signature, when written in hex format, takes 132 chars (2 for the `0x` prefix, and 2 for each bytes written in hex)\r\n\r\nI'm not seeing anything obvious right now, but what I tell you with 99.9% certainty is that this library works, and that its most likely a minor mistake in the way you generate them.\r\n\r\nIn the repo tests you can see it working with strings using web3js ... and here is an example of it working with non-string messages:\r\n- sign: https://github.com/OpenZeppelin/workshops/blob/master/06-nft-merkle-drop/test/1-ERC721LazyMint.test.js#L31\r\n- verify: https://github.com/OpenZeppelin/workshops/blob/master/06-nft-merkle-drop/contracts/ERC721LazyMint.sol#L21-L38\r\n\r\nIf you just replace the hash of `(uint address)` in this example, with a hash of `string` should get something that works.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944070484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944071100",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2914#issuecomment-944071100",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2914",
    "id": 944071100,
    "node_id": "IC_kwDOA9tCBs44RWG8",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-15T07:40:01Z",
    "updated_at": "2021-10-15T07:40:01Z",
    "author_association": "COLLABORATOR",
    "body": "I would recommend you check the `messagehash` you are building on both side do match",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944071100/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944094000",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2914#issuecomment-944094000",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2914",
    "id": 944094000,
    "node_id": "IC_kwDOA9tCBs44Rbsw",
    "user": {
      "login": "grapevinegizmos",
      "id": 8684037,
      "node_id": "MDQ6VXNlcjg2ODQwMzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8684037?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grapevinegizmos",
      "html_url": "https://github.com/grapevinegizmos",
      "followers_url": "https://api.github.com/users/grapevinegizmos/followers",
      "following_url": "https://api.github.com/users/grapevinegizmos/following{/other_user}",
      "gists_url": "https://api.github.com/users/grapevinegizmos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grapevinegizmos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grapevinegizmos/subscriptions",
      "organizations_url": "https://api.github.com/users/grapevinegizmos/orgs",
      "repos_url": "https://api.github.com/users/grapevinegizmos/repos",
      "events_url": "https://api.github.com/users/grapevinegizmos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grapevinegizmos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-15T08:13:31Z",
    "updated_at": "2021-10-15T08:13:31Z",
    "author_association": "NONE",
    "body": "actually i did, and they do.\r\n\r\nSent from my iPhone\r\n\r\nOn Oct 15, 2021, at 12:40 AM, Hadrien Croubois ***@***.***> wrote:\r\n\r\nÔªø\r\n\r\nI would recommend you check the messagehash you are building on both side do match\r\n\r\n‚Äî\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub<https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2914#issuecomment-944071100>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ACCIEBNN57TBBQCMCVSIAGLUG7LF3ANCNFSM5GBBMAHQ>.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944094000/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944237115",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2914#issuecomment-944237115",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2914",
    "id": 944237115,
    "node_id": "IC_kwDOA9tCBs44R-o7",
    "user": {
      "login": "julianmrodri",
      "id": 56316686,
      "node_id": "MDQ6VXNlcjU2MzE2Njg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/56316686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julianmrodri",
      "html_url": "https://github.com/julianmrodri",
      "followers_url": "https://api.github.com/users/julianmrodri/followers",
      "following_url": "https://api.github.com/users/julianmrodri/following{/other_user}",
      "gists_url": "https://api.github.com/users/julianmrodri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julianmrodri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julianmrodri/subscriptions",
      "organizations_url": "https://api.github.com/users/julianmrodri/orgs",
      "repos_url": "https://api.github.com/users/julianmrodri/repos",
      "events_url": "https://api.github.com/users/julianmrodri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julianmrodri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-15T11:54:26Z",
    "updated_at": "2021-10-15T11:59:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you need to use ` ethers.utils.solidityKeccak256()` with `ethers.js`. Give it a shot,\r\n\r\nIf hashes `do` match. then try this sequence. I was able to work it out this way (different example but same tooling/contracts)\r\n\r\n```\r\nconst hash = ethers.utils.solidityKeccak256(\r\n        ['string'],\r\n        ['YOUR MESSAGE']\r\n    )\r\n\r\nconst sigHashBytes = ethers.utils.arrayify(hash)\r\nconst sig = await address0.signMessage(sigHashBytes)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944237115/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944336360",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2914#issuecomment-944336360",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2914",
    "id": 944336360,
    "node_id": "IC_kwDOA9tCBs44SW3o",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-15T14:13:57Z",
    "updated_at": "2021-10-15T14:13:57Z",
    "author_association": "MEMBER",
    "body": "`ethers.utils.solidityKeccak256` doesn't seem to be fixing it. I'm looking into it...",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944336360/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944343932",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2914#issuecomment-944343932",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2914",
    "id": 944343932,
    "node_id": "IC_kwDOA9tCBs44SYt8",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-15T14:23:40Z",
    "updated_at": "2021-10-15T14:31:38Z",
    "author_association": "MEMBER",
    "body": "Ok, @julianmrodri had the answer but it wasn't `solidityKeccak256`. :smile:\r\n\r\n@grapevinegizmos The problem is that you're signing `utils.toUtf8Bytes(messageHash)`, i.e. the string corresponding to the hex encoded message hash, as opposed to the actual bytes of the message hash.\r\n\r\nThe fix is to use `arrayify`:\r\n\r\n```\r\nawait address0.signMessage(utils.arrayify(messageHash))\r\n```\r\n\r\nI've confirmed that this recovers to the correct address.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944343932/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944622431",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2914#issuecomment-944622431",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2914",
    "id": 944622431,
    "node_id": "IC_kwDOA9tCBs44Tctf",
    "user": {
      "login": "grapevinegizmos",
      "id": 8684037,
      "node_id": "MDQ6VXNlcjg2ODQwMzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8684037?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grapevinegizmos",
      "html_url": "https://github.com/grapevinegizmos",
      "followers_url": "https://api.github.com/users/grapevinegizmos/followers",
      "following_url": "https://api.github.com/users/grapevinegizmos/following{/other_user}",
      "gists_url": "https://api.github.com/users/grapevinegizmos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grapevinegizmos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grapevinegizmos/subscriptions",
      "organizations_url": "https://api.github.com/users/grapevinegizmos/orgs",
      "repos_url": "https://api.github.com/users/grapevinegizmos/repos",
      "events_url": "https://api.github.com/users/grapevinegizmos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grapevinegizmos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-15T19:54:24Z",
    "updated_at": "2021-10-15T19:54:24Z",
    "author_association": "NONE",
    "body": "Many thanks @frangio @julianmrodri \r\n\r\nI was able to get it working.  If either of you are in a position to update the documentation on OpenZeppelin of how to actually use ECDSA I think it might save developers a lot of time to see an example like this of how to encode a message on the client side so that you can decode the signature within the contract.  Its not so obvious, as maybe you can see.  Thanks again.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/944622431/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
