{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/787",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/787/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/787/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/787/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/787",
  "id": 301965019,
  "node_id": "MDU6SXNzdWUzMDE5NjUwMTk=",
  "number": 787,
  "title": "TaxedToken implementation that charges a fee for token transfers",
  "user": {
    "login": "mjdietzx",
    "id": 7217256,
    "node_id": "MDQ6VXNlcjcyMTcyNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mjdietzx",
    "html_url": "https://github.com/mjdietzx",
    "followers_url": "https://api.github.com/users/mjdietzx/followers",
    "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
    "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
    "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
    "repos_url": "https://api.github.com/users/mjdietzx/repos",
    "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650860,
      "node_id": "MDU6TGFiZWw1MDM2NTA4NjA=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/feature",
      "name": "feature",
      "color": "b9db64",
      "default": false,
      "description": "New contracts, functions, or helpers."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-03-03T03:43:19Z",
  "updated_at": "2022-05-17T05:22:42Z",
  "closed_at": "2019-03-08T23:05:01Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## üéâ Description\r\n\r\n<!-- Briefly describe the issue you are experiencing (or the feature you want to see added to OpenZeppelin). Tell us what you were trying to do and what happened instead. **Remember, this is _not_ a place to ask for help debugging code; for that, we welcome you in the [OpenZeppelin Slack Channel](https://slack.openzeppelin.org/).** -->\r\n\r\nAn interesting erc20 token use-case that I keep seeing is a 'taxed' transfer (i.e. a small fee (for example 1%) is diverted to a `feeAccount` in `transfer`). I implemented this in a `TaxedToken.sol` contract w/ pretty thorough unit-tests. Would there be any interest in a PR w/ this functionality?\r\n\r\n- [ ] üêõ This is a bug report.\r\n- [x] üìà This is a feature request.\r\n\r\n<!-- Please check one of the above by placing an x in the box. -->\r\n\r\n## üî¢ Code To Reproduce Issue [ Good To Have ]\r\n\r\nPlease remember that with sample code it's easier to reproduce the bug and it's much faster to fix it.\r\n\r\n```solidity\r\n  /**\r\n   * @dev Transfer tokens to a specified address after diverting a fee to a central account.\r\n   * @param _to The receiving address.\r\n   * @param _value The number of tokens to transfer.\r\n   */\r\n  function transfer(address _to, uint256 _value) public returns (bool) {\r\n    require(_to != address(0));\r\n    require(_value <= balances[msg.sender]);\r\n    require(_value % (uint256(10) ** decimals) == 0);\r\n\r\n    uint fee = SafeMath.div(SafeMath.mul(_value, transferFeePercentage), 100);\r\n    uint taxedValue = SafeMath.sub(_value, fee);\r\n\r\n    // SafeMath.sub will throw if there is not enough balance.\r\n    balances[msg.sender] = SafeMath.sub(balances[msg.sender], _value);\r\n\r\n    balances[_to] = SafeMath.add(balances[_to], taxedValue);\r\n    Transfer(msg.sender, _to, taxedValue);\r\n    balances[feeAccount] = SafeMath.add(balances[feeAccount], fee);\r\n    Transfer(msg.sender, feeAccount, fee);\r\n\r\n    return true;\r\n  }\r\n```\r\n\r\n<!-- If your code is larger, consider linking us to a repo illustrating your issue. -->\r\n\r\n## üëç Other Information\r\n\r\n<!-- List any other information that is relevant to your issue. Error logs, related issues, suggestions on how to fix, Stack Overflow links, forum links, etc. -->\r\n\r\nhttps://ethereum.stackexchange.com/questions/30957/is-an-additional-transaction-fee-possible-in-the-erc20-token?rq=1\r\n",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/787/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/787/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/370121661",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/787#issuecomment-370121661",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/787",
    "id": 370121661,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDEyMTY2MQ==",
    "user": {
      "login": "nanmu42",
      "id": 8143068,
      "node_id": "MDQ6VXNlcjgxNDMwNjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8143068?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nanmu42",
      "html_url": "https://github.com/nanmu42",
      "followers_url": "https://api.github.com/users/nanmu42/followers",
      "following_url": "https://api.github.com/users/nanmu42/following{/other_user}",
      "gists_url": "https://api.github.com/users/nanmu42/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nanmu42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nanmu42/subscriptions",
      "organizations_url": "https://api.github.com/users/nanmu42/orgs",
      "repos_url": "https://api.github.com/users/nanmu42/repos",
      "events_url": "https://api.github.com/users/nanmu42/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nanmu42/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-03T05:49:31Z",
    "updated_at": "2018-03-03T05:49:31Z",
    "author_association": "NONE",
    "body": "Cool!\n\nPerhaps it would be better to make the cost equals to fee added to value?\n\nMichael Dietz <notifications@github.com> Êñº 2018Âπ¥3Êúà3Êó• ÈÄ±ÂÖ≠ ‰∏äÂçà11:43 ÂØ´ÈÅìÔºö\n\n> üéâ Description\n>\n> An interesting erc20 token use-case that I keep seeing is a 'taxed'\n> transfer (i.e. a small fee (for example 1%) is diverted to a feeAccount\n> in transfer). I implemented this in a TaxedToken.sol contract w/ pretty\n> thorough unit-tests. Would there be any interest in a PR w/ this\n> functionality?\n>\n>    - üêõ This is a bug report.\n>    - üìà This is a feature request.\n>\n> üî¢ Code To Reproduce Issue [ Good To Have ]\n>\n> Please remember that with sample code it's easier to reproduce the bug and\n> it's much faster to fix it.\n>\n>   /**   * @dev Transfer tokens to a specified address after diverting a fee to a central account.   * @param _to The receiving address.   * @param _value The number of tokens to transfer.   */\n>   function transfer(address _to, uint256 _value) public returns (bool) {\n>     require(_to != address(0));\n>     require(_value <= balances[msg.sender]);\n>     require(_value % (uint256(10) ** decimals) == 0);\n>\n>     uint fee = SafeMath.div(SafeMath.mul(_value, transferFeePercentage), 100);\n>     uint taxedValue = SafeMath.sub(_value, fee);\n>\n>     // SafeMath.sub will throw if there is not enough balance.\n>     balances[msg.sender] = SafeMath.sub(balances[msg.sender], _value);\n>\n>     balances[_to] = SafeMath.add(balances[_to], taxedValue);\n>     Transfer(msg.sender, _to, taxedValue);\n>     balances[feeAccount] = SafeMath.add(balances[feeAccount], fee);\n>     Transfer(msg.sender, feeAccount, fee);\n>\n>     return true;\n>   }\n>\n> üëç Other Information\n>\n>\n> https://ethereum.stackexchange.com/questions/30957/is-an-additional-transaction-fee-possible-in-the-erc20-token?rq=1\n>\n> ‚Äî\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OpenZeppelin/zeppelin-solidity/issues/787>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AHxA3F1cbr3-2twN7g82qGw2I2s1uVnJks5tahFdgaJpZM4Sawzc>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/370121661/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/471107053",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/787#issuecomment-471107053",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/787",
    "id": 471107053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTEwNzA1Mw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-08T23:05:01Z",
    "updated_at": "2019-03-08T23:05:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing due to inactivity.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/471107053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1128424531",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/787#issuecomment-1128424531",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/787",
    "id": 1128424531,
    "node_id": "IC_kwDOA9tCBs5DQmRT",
    "user": {
      "login": "zubin-madon",
      "id": 35947376,
      "node_id": "MDQ6VXNlcjM1OTQ3Mzc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/35947376?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zubin-madon",
      "html_url": "https://github.com/zubin-madon",
      "followers_url": "https://api.github.com/users/zubin-madon/followers",
      "following_url": "https://api.github.com/users/zubin-madon/following{/other_user}",
      "gists_url": "https://api.github.com/users/zubin-madon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zubin-madon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zubin-madon/subscriptions",
      "organizations_url": "https://api.github.com/users/zubin-madon/orgs",
      "repos_url": "https://api.github.com/users/zubin-madon/repos",
      "events_url": "https://api.github.com/users/zubin-madon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zubin-madon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-17T05:22:42Z",
    "updated_at": "2022-05-17T05:22:42Z",
    "author_association": "NONE",
    "body": "@mjdietzx could you please point me to the whole contract with the sales tax implemented? I am trying to write one for avalanche. I can't find `TaxedToken.sol`",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1128424531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
