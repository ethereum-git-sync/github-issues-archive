{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4011",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4011/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4011/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4011/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4011",
  "id": 1560832090,
  "node_id": "I_kwDOA9tCBs5dCGha",
  "number": 4011,
  "title": "Document Edge Case for `supportsERC165InterfaceUnchecked(..)`",
  "user": {
    "login": "YamenMerhi",
    "id": 86341666,
    "node_id": "MDQ6VXNlcjg2MzQxNjY2",
    "avatar_url": "https://avatars.githubusercontent.com/u/86341666?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/YamenMerhi",
    "html_url": "https://github.com/YamenMerhi",
    "followers_url": "https://api.github.com/users/YamenMerhi/followers",
    "following_url": "https://api.github.com/users/YamenMerhi/following{/other_user}",
    "gists_url": "https://api.github.com/users/YamenMerhi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/YamenMerhi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/YamenMerhi/subscriptions",
    "organizations_url": "https://api.github.com/users/YamenMerhi/orgs",
    "repos_url": "https://api.github.com/users/YamenMerhi/repos",
    "events_url": "https://api.github.com/users/YamenMerhi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/YamenMerhi/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650966,
      "node_id": "MDU6TGFiZWw1MDM2NTA5NjY=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0e8a16",
      "default": true,
      "description": "Low hanging fruit for new contributors to get involved!"
    },
    {
      "id": 1000190804,
      "node_id": "MDU6TGFiZWwxMDAwMTkwODA0",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/documentation",
      "name": "documentation",
      "color": "1d76db",
      "default": true,
      "description": "Inline comments, guides, and examples."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-01-28T11:56:52Z",
  "updated_at": "2023-02-03T19:15:43Z",
  "closed_at": "2023-02-03T19:15:43Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## What this issue is about ?\r\n\r\nThe `supportsERC165(..)` function when calling to check if an address supports a  specific interfaceId, according to the ERC165 specs, it will check whether the address queried is supporting the ERC165 interfaceId, the queried interfaceId, also will check that the address queried is not supporting the `0xffffffff` interfaceId.\r\n\r\nThe `supportsERC165InterfaceUnchecked(..)` function will check whether a specific address supports a single interfaceId, through ERC165. However, some addresses will return always true regardless if they support the interfaceId or not.\r\n\r\nThese are the precompile addresses `0x000..0000002`, `0x000..0000003`, and `0x000..0000004`. It's unclear to me why this behavior is happening. This issue was pointed out by Runtime verification auditors while doing some fuzzing tests.\r\n\r\n**üìù Details**\r\n\r\nThis happens only to `supportsERC165InterfaceUnchecked(..)`, because since the precompile addresses `0x000..0000002`, `0x000..0000003`, and `0x000..0000004` will return always true for all interfaceIds, it means that these addresses are also supporting the `0xffffffff` interfaceId. \r\n\r\nSince `supportsERC165(..)` checks that the address does not support `0xffffffff` interfaceId, then `supportsERC165(..)` is excluded from this behavior.\r\n\r\nThis issue is opened to add documentation to `supportsERC165InterfaceUnchecked(..)` function using natspec, to acknowledge this edge case, and also to make it easy for developers doing fuzzing tests using foundry, to identify why the tests are failing when lacking context that these addresses will always return true.   \r\n\r\n\r\n**üî¢ Code to reproduce bug**\r\n\r\nYou can call `supportsERC165InterfaceUnchecked(..)` on `0x000..0000002` , `0x000..0000003` and `0x000..0000004` addresses with any interfaceId to reproduce the case.\r\n\r\n```js\r\n\r\nconst precompiledAddress = [\r\n      \"0x0000000000000000000000000000000000000002\",\r\n      \"0x0000000000000000000000000000000000000003\",\r\n      \"0x0000000000000000000000000000000000000004\",\r\n    ];\r\n\r\n    for (let i = 0; i < precompiledAddress.length; i++) {\r\n      for (let ii = 0; ii < 100; ii++) {\r\n        const result = await contract.supportsERC165Interface(\r\n          precompiledAddress[i],\r\n          ethers.utils.hexlify(ethers.utils.randomBytes(4))\r\n        );\r\n        expect(result).to.be.true;\r\n      }\r\n    }\r\n```\r\n\r\nPlease let me know if it makes sense to add this to the function natspec.",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4011/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4011/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1408381508",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4011#issuecomment-1408381508",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4011",
    "id": 1408381508,
    "node_id": "IC_kwDOA9tCBs5T8jJE",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T10:37:24Z",
    "updated_at": "2023-01-30T10:37:24Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @YamenMerhi, and thank for the great example.\r\n\r\nThis function was introduced in #3339, after a lot of discussion concerning the fact that it should indeed not be used alone. I don't think we thought about the precompiles, which is a great example of why this function should not be used without also checking `0x01ffc9a7` and `0xffffffff`.\r\n\r\nI definitely agree that this could be documented better. Fell free to open a PR for that. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1408381508/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1408675205",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4011#issuecomment-1408675205",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4011",
    "id": 1408675205,
    "node_id": "IC_kwDOA9tCBs5T9q2F",
    "user": {
      "login": "YamenMerhi",
      "id": 86341666,
      "node_id": "MDQ6VXNlcjg2MzQxNjY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/86341666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YamenMerhi",
      "html_url": "https://github.com/YamenMerhi",
      "followers_url": "https://api.github.com/users/YamenMerhi/followers",
      "following_url": "https://api.github.com/users/YamenMerhi/following{/other_user}",
      "gists_url": "https://api.github.com/users/YamenMerhi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YamenMerhi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YamenMerhi/subscriptions",
      "organizations_url": "https://api.github.com/users/YamenMerhi/orgs",
      "repos_url": "https://api.github.com/users/YamenMerhi/repos",
      "events_url": "https://api.github.com/users/YamenMerhi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YamenMerhi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-30T13:59:38Z",
    "updated_at": "2023-01-30T13:59:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Amxx Sure, will do üëç ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1408675205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
