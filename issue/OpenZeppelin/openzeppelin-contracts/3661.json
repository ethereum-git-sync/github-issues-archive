{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3661",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3661/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3661/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3661/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3661",
  "id": 1355732708,
  "node_id": "I_kwDOA9tCBs5Qztbk",
  "number": 3661,
  "title": "Boolean expression Evaluator",
  "user": {
    "login": "njrapidinnovation",
    "id": 68365436,
    "node_id": "MDQ6VXNlcjY4MzY1NDM2",
    "avatar_url": "https://avatars.githubusercontent.com/u/68365436?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/njrapidinnovation",
    "html_url": "https://github.com/njrapidinnovation",
    "followers_url": "https://api.github.com/users/njrapidinnovation/followers",
    "following_url": "https://api.github.com/users/njrapidinnovation/following{/other_user}",
    "gists_url": "https://api.github.com/users/njrapidinnovation/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/njrapidinnovation/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/njrapidinnovation/subscriptions",
    "organizations_url": "https://api.github.com/users/njrapidinnovation/orgs",
    "repos_url": "https://api.github.com/users/njrapidinnovation/repos",
    "events_url": "https://api.github.com/users/njrapidinnovation/events{/privacy}",
    "received_events_url": "https://api.github.com/users/njrapidinnovation/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-08-30T12:58:47Z",
  "updated_at": "2022-09-01T07:43:12Z",
  "closed_at": "2022-09-01T07:43:12Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nEasy and Convenient way to evaluate a complex and dynamic boolean expression with precedence.\r\n\r\n**üìù Details**\r\n\r\nProvides method that can be used to evalute any Infix Notation Expression which\r\n\r\n*  consist of 1 and 0 as values .\r\n*  consist of a (&&) , o (||) , ( , ) as operators.\r\n*  precedence is also considered for LOGICAL AND (&&) and LOGICAL OR (||)\r\n*  function parameters are \r\n    *  String Array of 1 , 0 , o , a , ( , ) where o is Logical OR (||) and a is Logical AND (&&).\r\n    *  noOfValues i.e count of 1 and 0 in array.\r\n    *  noOfOperands i.e count of a, o, ( , ) in array.\r\n\r\n\r\nRelated to #3660 \r\n",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3661/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3661/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1231658181",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3661#issuecomment-1231658181",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3661",
    "id": 1231658181,
    "node_id": "IC_kwDOA9tCBs5JaZzF",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-30T13:18:50Z",
    "updated_at": "2022-08-30T13:18:50Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @njrapidinnovation \r\n\r\nCan you please explain what usecase you see for such a library ? Beyond the experimental aspect of \"it can be done in solidity\", I'm failing to see the actual point.\r\n\r\nKeep in mind that it may be fun for you to build, but if we merge it, we are committing ourselves to maintaining it.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1231658181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1232448434",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3661#issuecomment-1232448434",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3661",
    "id": 1232448434,
    "node_id": "IC_kwDOA9tCBs5Jdauy",
    "user": {
      "login": "njrapidinnovation",
      "id": 68365436,
      "node_id": "MDQ6VXNlcjY4MzY1NDM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/68365436?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njrapidinnovation",
      "html_url": "https://github.com/njrapidinnovation",
      "followers_url": "https://api.github.com/users/njrapidinnovation/followers",
      "following_url": "https://api.github.com/users/njrapidinnovation/following{/other_user}",
      "gists_url": "https://api.github.com/users/njrapidinnovation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njrapidinnovation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njrapidinnovation/subscriptions",
      "organizations_url": "https://api.github.com/users/njrapidinnovation/orgs",
      "repos_url": "https://api.github.com/users/njrapidinnovation/repos",
      "events_url": "https://api.github.com/users/njrapidinnovation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njrapidinnovation/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-31T04:29:43Z",
    "updated_at": "2022-08-31T05:57:05Z",
    "author_association": "NONE",
    "body": "Yeah sure @Amxx \r\n\r\nWe can calculate a result of nested if else logic.\r\n\r\nFor example :-\r\n\r\n```\r\n\r\n    if(c1){\r\n    }\r\n    else{\r\n       if(c1 || c2){\r\n       }\r\n       else{\r\n           if(c3 && ( c4 || c5)){\r\n           }\r\n       }\r\n    }\r\n\r\n    where c(1...5) are all boolean expressions\r\n\r\n    You can rewrite the above logic as\r\n\r\n    (c1 || (c1 || c2) || (c3 && (c4 || c5)))\r\n\r\n```\r\n\r\n```\r\n   \r\n   Pratical Application:-\r\n   \r\n   * You can make a conditional NFT renting platform where a user can choose different\r\n   criterias among the listed criterias to create an expression in order to rent a\r\n   NFT\r\n\r\n   * Like User Renting is Eligible until below expression returns true\r\n\r\n   * (time < 25th decemeber || price of NFT < 100usd) && (weather == summer)   \r\n\r\n   Or they can list out the criterias which the community want.   \r\n\r\n\r\n   Like a new way to provide collateral in order to rent a NFT.\r\n \r\n```\r\n\r\n  Basically using this one can build a platform in which services will work upon dynamic boolean expressions.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1232448434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1233725038",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3661#issuecomment-1233725038",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3661",
    "id": 1233725038,
    "node_id": "IC_kwDOA9tCBs5JiSZu",
    "user": {
      "login": "njrapidinnovation",
      "id": 68365436,
      "node_id": "MDQ6VXNlcjY4MzY1NDM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/68365436?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njrapidinnovation",
      "html_url": "https://github.com/njrapidinnovation",
      "followers_url": "https://api.github.com/users/njrapidinnovation/followers",
      "following_url": "https://api.github.com/users/njrapidinnovation/following{/other_user}",
      "gists_url": "https://api.github.com/users/njrapidinnovation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njrapidinnovation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njrapidinnovation/subscriptions",
      "organizations_url": "https://api.github.com/users/njrapidinnovation/orgs",
      "repos_url": "https://api.github.com/users/njrapidinnovation/repos",
      "events_url": "https://api.github.com/users/njrapidinnovation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njrapidinnovation/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-01T04:26:57Z",
    "updated_at": "2022-09-01T04:26:57Z",
    "author_association": "NONE",
    "body": "Hello @Amxx \r\nAny thoughts on the above use case?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1233725038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1233878219",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3661#issuecomment-1233878219",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3661",
    "id": 1233878219,
    "node_id": "IC_kwDOA9tCBs5Ji3zL",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-01T07:43:12Z",
    "updated_at": "2022-09-01T07:43:12Z",
    "author_association": "COLLABORATOR",
    "body": "Honestly I think its over complicated and not realistic. \r\n\r\nAnything like `weather == summer` would have to be encoded and the push into the array before getting processed..., and the other input would have to be validated somehow. It can possibly de done nicely, but again, I don't think this aligns with what we want to propose and maintain.\r\n\r\nI'll quote @frangio here:\r\n> However, these are experimental projects and OpenZeppelin Contracts is not the place for them. We try to focus on things that have proven value, and that will be generally useful.\r\n\r\nThat doesn't mean this shouldn't be studied further, just here is not the right place.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1233878219/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
