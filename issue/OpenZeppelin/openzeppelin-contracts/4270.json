{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4270",
  "id": 1721812176,
  "node_id": "I_kwDOA9tCBs5moMTQ",
  "number": 4270,
  "title": "The assembly in mulDiv is not marked as memory safe",
  "user": {
    "login": "thedavidmeister",
    "id": 629710,
    "node_id": "MDQ6VXNlcjYyOTcxMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/629710?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/thedavidmeister",
    "html_url": "https://github.com/thedavidmeister",
    "followers_url": "https://api.github.com/users/thedavidmeister/followers",
    "following_url": "https://api.github.com/users/thedavidmeister/following{/other_user}",
    "gists_url": "https://api.github.com/users/thedavidmeister/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/thedavidmeister/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/thedavidmeister/subscriptions",
    "organizations_url": "https://api.github.com/users/thedavidmeister/orgs",
    "repos_url": "https://api.github.com/users/thedavidmeister/repos",
    "events_url": "https://api.github.com/users/thedavidmeister/events{/privacy}",
    "received_events_url": "https://api.github.com/users/thedavidmeister/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/11",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11/labels",
    "id": 7990184,
    "node_id": "MI_kwDOA9tCBs4Aeeuo",
    "number": 11,
    "title": "5.0",
    "description": null,
    "creator": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 31,
    "closed_issues": 45,
    "state": "open",
    "created_at": "2022-05-17T19:52:44Z",
    "updated_at": "2023-06-29T16:00:39Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 12,
  "created_at": "2023-05-23T10:59:26Z",
  "updated_at": "2023-05-31T20:35:18Z",
  "closed_at": "2023-05-31T20:33:09Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\r\n\r\nThe `mulDiv` assembly is memory safe, but is not marked as such. This will cause the Solidity compiler to be more conservative than necessary when optimising code that includes `mulDiv`.\r\n\r\nI don't have any data, but as `mulDiv` is fairly low level math, it's probably safe to assume it's included in a lot of contracts downstream and quietly breaking optimisations for people without them realising it.\r\n\r\nhttps://docs.soliditylang.org/en/v0.8.13/assembly.html#memory-safety\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/issues/3336",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1560883199",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4270#issuecomment-1560883199",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270",
    "id": 1560883199,
    "node_id": "IC_kwDOA9tCBs5dCS__",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-24T10:41:29Z",
    "updated_at": "2023-05-24T10:41:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is correct. See this related discussion about PRBMath on the Solidity forum:\r\n\r\nhttps://forum.soliditylang.org/t/understanding-the-memory-safe-dialect/1481?u=paulrberg\r\n\r\nNearly all `assembly` blocks in PRBMath are marked as memory safe:\r\n\r\nhttps://github.com/PaulRBerg/prb-math/blob/97170d0f52de76edfb5fe63c5810a8705c3b0ea7/src/Common.sol#L387-L397",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1560883199/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1561134200",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4270#issuecomment-1561134200",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270",
    "id": 1561134200,
    "node_id": "IC_kwDOA9tCBs5dDQR4",
    "user": {
      "login": "thedavidmeister",
      "id": 629710,
      "node_id": "MDQ6VXNlcjYyOTcxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/629710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thedavidmeister",
      "html_url": "https://github.com/thedavidmeister",
      "followers_url": "https://api.github.com/users/thedavidmeister/followers",
      "following_url": "https://api.github.com/users/thedavidmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/thedavidmeister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thedavidmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thedavidmeister/subscriptions",
      "organizations_url": "https://api.github.com/users/thedavidmeister/orgs",
      "repos_url": "https://api.github.com/users/thedavidmeister/repos",
      "events_url": "https://api.github.com/users/thedavidmeister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thedavidmeister/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-24T13:19:02Z",
    "updated_at": "2023-05-24T13:23:50Z",
    "author_association": "NONE",
    "body": "@PaulRBerg as i understand it, the only way something can be memory unsafe is if it causes a read/write to the reserved range of memory from 0x40 through 0x80\r\n\r\n<img width=\"766\" alt=\"Screenshot 2023-05-24 at 17 17 30\" src=\"https://github.com/OpenZeppelin/openzeppelin-contracts/assets/629710/6d562d10-184b-4d7d-b5ab-8c8154052905\">\r\n\r\nSolidity docs say that in a very roundabout way \"all memory in scratch, or that is allocated by solidity or you, or memory that is after the allocated memory\".\r\n\r\nThere's a ton of probably \"unsafe\" stuff that you could do that doesn't violate \"memory-safe\" (i think), e.g.\r\n\r\n- allocating the free memory pointer to something that isn't a multiple of 0x20\r\n- referencing unallocated memory across multiple assembly blocks or across a jump\r\n- underflowing a memory pointer then attempting to read/write at ~infinity\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1561134200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1561178228",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4270#issuecomment-1561178228",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270",
    "id": 1561178228,
    "node_id": "IC_kwDOA9tCBs5dDbB0",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-24T13:42:17Z",
    "updated_at": "2023-05-24T13:42:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's not just that. Manipulation of reference-type variables outside of the inline assembly block could also be memory unsafe.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1561178228/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1561205452",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4270#issuecomment-1561205452",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270",
    "id": 1561205452,
    "node_id": "IC_kwDOA9tCBs5dDhrM",
    "user": {
      "login": "thedavidmeister",
      "id": 629710,
      "node_id": "MDQ6VXNlcjYyOTcxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/629710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thedavidmeister",
      "html_url": "https://github.com/thedavidmeister",
      "followers_url": "https://api.github.com/users/thedavidmeister/followers",
      "following_url": "https://api.github.com/users/thedavidmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/thedavidmeister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thedavidmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thedavidmeister/subscriptions",
      "organizations_url": "https://api.github.com/users/thedavidmeister/orgs",
      "repos_url": "https://api.github.com/users/thedavidmeister/repos",
      "events_url": "https://api.github.com/users/thedavidmeister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thedavidmeister/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-24T13:55:16Z",
    "updated_at": "2023-05-24T13:55:16Z",
    "author_association": "NONE",
    "body": "@PaulRBerg only if those reference-type variables subsequently access 0x40-0x80, right?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1561205452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1561230208",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4270#issuecomment-1561230208",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270",
    "id": 1561230208,
    "node_id": "IC_kwDOA9tCBs5dDnuA",
    "user": {
      "login": "thedavidmeister",
      "id": 629710,
      "node_id": "MDQ6VXNlcjYyOTcxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/629710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thedavidmeister",
      "html_url": "https://github.com/thedavidmeister",
      "followers_url": "https://api.github.com/users/thedavidmeister/followers",
      "following_url": "https://api.github.com/users/thedavidmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/thedavidmeister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thedavidmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thedavidmeister/subscriptions",
      "organizations_url": "https://api.github.com/users/thedavidmeister/orgs",
      "repos_url": "https://api.github.com/users/thedavidmeister/repos",
      "events_url": "https://api.github.com/users/thedavidmeister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thedavidmeister/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-24T14:06:57Z",
    "updated_at": "2023-05-24T14:06:57Z",
    "author_association": "NONE",
    "body": "i really want to get this right... i have a lot of assembly code 😅 ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1561230208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1567531789",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4270#issuecomment-1567531789",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270",
    "id": 1567531789,
    "node_id": "IC_kwDOA9tCBs5dbqMN",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-29T21:31:13Z",
    "updated_at": "2023-05-29T21:31:13Z",
    "author_association": "MEMBER",
    "body": "At first glance, there are no memory operations at all within these assembly blocks so they are trivially memory safe. The Solidity documentation [indicates](https://docs.soliditylang.org/en/latest/assembly.html#memory-safety) that this does not turn off any optimizations:\r\n\r\n> Therefore, moving stack variables to memory and additional memory optimizations are, by default, globally disabled in the presence of any inline assembly block that contains a memory operation or assigns to Solidity variables in memory.\r\n\r\nThis is also confirmed in the discussion linked by @PaulRBerg.\r\n\r\nShould we still place the memory-safe annotations then? My intuition tells me no, because it unnecessarily introduces a possible error.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1567531789/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1568030404",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4270#issuecomment-1568030404",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270",
    "id": 1568030404,
    "node_id": "IC_kwDOA9tCBs5ddj7E",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-30T08:51:20Z",
    "updated_at": "2023-05-30T08:51:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I understand the potential for making errors, but without memory safe annotations, OpenZeppelin users will have a harder time verifying their contracts formally (e.g. with SMTChecker).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1568030404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1568317746",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4270#issuecomment-1568317746",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270",
    "id": 1568317746,
    "node_id": "IC_kwDOA9tCBs5deqEy",
    "user": {
      "login": "thedavidmeister",
      "id": 629710,
      "node_id": "MDQ6VXNlcjYyOTcxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/629710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thedavidmeister",
      "html_url": "https://github.com/thedavidmeister",
      "followers_url": "https://api.github.com/users/thedavidmeister/followers",
      "following_url": "https://api.github.com/users/thedavidmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/thedavidmeister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thedavidmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thedavidmeister/subscriptions",
      "organizations_url": "https://api.github.com/users/thedavidmeister/orgs",
      "repos_url": "https://api.github.com/users/thedavidmeister/repos",
      "events_url": "https://api.github.com/users/thedavidmeister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thedavidmeister/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-30T12:05:54Z",
    "updated_at": "2023-05-30T12:05:54Z",
    "author_association": "NONE",
    "body": "actually i'm now confused by the solidity docs.. they say \"access\" a lot, without being clear about reads vs. writes.\r\n\r\nreading the `0x40` would be \"access\" to memory in a region outside what is specified as safe to access, which would make it memory unsafe, but without reading/writing `0x40` it isn't possible to do what the docs say is \"safe\" allocation\r\n\r\nthat seems more like a question for solidity though",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1568317746/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1569095067",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4270#issuecomment-1569095067",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270",
    "id": 1569095067,
    "node_id": "IC_kwDOA9tCBs5dhn2b",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-30T21:00:12Z",
    "updated_at": "2023-05-30T21:00:59Z",
    "author_association": "MEMBER",
    "body": "How does this affect SMTChecker? I'm going by Chris's comment:\r\n\r\n>Both your inline assembly blocks do not need an annotation and are still considered memory-safe by the compiler.\r\n\r\nThis is saying that the memory safety is implicit in the case of assembly blocks that don't use memory in any way. If the SMTChecker is affected by memory safety, I am assuming that it understands that these blocks are memory safe like the rest of the compiler.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1569095067/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1569102910",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4270#issuecomment-1569102910",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270",
    "id": 1569102910,
    "node_id": "IC_kwDOA9tCBs5dhpw-",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-30T21:06:08Z",
    "updated_at": "2023-05-30T21:06:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "> How does this affect SMTChecker?\r\n\r\nnevermind, I was confounding `assembly(\"memory-safe\")` annotations with [`@custom:smtchecker abstract-function-nondet`](https://docs.soliditylang.org/en/v0.8.20/smtchecker.html#natspec-function-abstraction). Sorry.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1569102910/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1570731531",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4270#issuecomment-1570731531",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270",
    "id": 1570731531,
    "node_id": "IC_kwDOA9tCBs5dn3YL",
    "user": {
      "login": "balajipachai",
      "id": 32358081,
      "node_id": "MDQ6VXNlcjMyMzU4MDgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/32358081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/balajipachai",
      "html_url": "https://github.com/balajipachai",
      "followers_url": "https://api.github.com/users/balajipachai/followers",
      "following_url": "https://api.github.com/users/balajipachai/following{/other_user}",
      "gists_url": "https://api.github.com/users/balajipachai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/balajipachai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/balajipachai/subscriptions",
      "organizations_url": "https://api.github.com/users/balajipachai/orgs",
      "repos_url": "https://api.github.com/users/balajipachai/repos",
      "events_url": "https://api.github.com/users/balajipachai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/balajipachai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-31T18:40:32Z",
    "updated_at": "2023-05-31T18:40:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems there's nothing has to be done on this, IMO we are good to close this.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1570731531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1570912074",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4270#issuecomment-1570912074",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4270",
    "id": 1570912074,
    "node_id": "IC_kwDOA9tCBs5dojdK",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-31T20:35:18Z",
    "updated_at": "2023-05-31T20:35:18Z",
    "author_association": "MEMBER",
    "body": "Got it. Closing this since the annotations are not necessary.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1570912074/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
