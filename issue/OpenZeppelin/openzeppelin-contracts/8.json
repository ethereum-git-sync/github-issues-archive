{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/8",
  "id": 172165903,
  "node_id": "MDU6SXNzdWUxNzIxNjU5MDM=",
  "number": 8,
  "title": "Whitelisting as function modifiers",
  "user": {
    "login": "maraoz",
    "id": 287189,
    "node_id": "MDQ6VXNlcjI4NzE4OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/287189?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maraoz",
    "html_url": "https://github.com/maraoz",
    "followers_url": "https://api.github.com/users/maraoz/followers",
    "following_url": "https://api.github.com/users/maraoz/following{/other_user}",
    "gists_url": "https://api.github.com/users/maraoz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maraoz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maraoz/subscriptions",
    "organizations_url": "https://api.github.com/users/maraoz/orgs",
    "repos_url": "https://api.github.com/users/maraoz/repos",
    "events_url": "https://api.github.com/users/maraoz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maraoz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650860,
      "node_id": "MDU6TGFiZWw1MDM2NTA4NjA=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/feature",
      "name": "feature",
      "color": "b9db64",
      "default": false,
      "description": "New contracts, functions, or helpers."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2016-08-19T16:07:58Z",
  "updated_at": "2018-05-11T01:30:05Z",
  "closed_at": "2018-05-11T01:29:40Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Implement function modifiers that only allow calls from a whitelist of addresses/contracts\nSee Whitelist at http://vessenes.com/we-need-some-best-practices-for-smart-contracts/\n",
  "closed_by": {
    "login": "come-maiz",
    "id": 617831,
    "node_id": "MDQ6VXNlcjYxNzgzMQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/617831?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/come-maiz",
    "html_url": "https://github.com/come-maiz",
    "followers_url": "https://api.github.com/users/come-maiz/followers",
    "following_url": "https://api.github.com/users/come-maiz/following{/other_user}",
    "gists_url": "https://api.github.com/users/come-maiz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/come-maiz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/come-maiz/subscriptions",
    "organizations_url": "https://api.github.com/users/come-maiz/orgs",
    "repos_url": "https://api.github.com/users/come-maiz/repos",
    "events_url": "https://api.github.com/users/come-maiz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/come-maiz/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315213334",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/8#issuecomment-315213334",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8",
    "id": 315213334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTIxMzMzNA==",
    "user": {
      "login": "rudygodoy",
      "id": 2400137,
      "node_id": "MDQ6VXNlcjI0MDAxMzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2400137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rudygodoy",
      "html_url": "https://github.com/rudygodoy",
      "followers_url": "https://api.github.com/users/rudygodoy/followers",
      "following_url": "https://api.github.com/users/rudygodoy/following{/other_user}",
      "gists_url": "https://api.github.com/users/rudygodoy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rudygodoy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rudygodoy/subscriptions",
      "organizations_url": "https://api.github.com/users/rudygodoy/orgs",
      "repos_url": "https://api.github.com/users/rudygodoy/repos",
      "events_url": "https://api.github.com/users/rudygodoy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rudygodoy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T21:56:03Z",
    "updated_at": "2017-07-13T21:56:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm working on this, by now I've created a separate project so that it's easier to test in isolation. I've implemented the white list as a switch so that addresses can be enabled/disabled at will, this would allow different use cases commented in the article. Once I feel comfortable about the implementation I'll integrate in my branch then do the PR. Comments are welcome.\r\n\r\nhttps://github.com/rudygodoy/whitelistToken/blob/master/contracts/WhitelistToken.sol#L12",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315213334/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315451731",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/8#issuecomment-315451731",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8",
    "id": 315451731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTQ1MTczMQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T19:51:31Z",
    "updated_at": "2017-07-14T19:51:50Z",
    "author_association": "MEMBER",
    "body": "Thanks @rudygodoy! The idea would be to provide general-purpose function modifiers that can be used in any smart contract. Not just a specific token implementationÌ£ like I saw in your repo; not sure if that was just to test the idea.\r\n\r\nI've begun experimenting with something very similar to this that allows more than one whitelist. Please see [my `feature/roles` branch](https://github.com/frangio/zeppelin-solidity/blob/feature/roles/contracts/Roles.sol). There are no examples though.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315451731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315796986",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/8#issuecomment-315796986",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8",
    "id": 315796986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTc5Njk4Ng==",
    "user": {
      "login": "rudygodoy",
      "id": 2400137,
      "node_id": "MDQ6VXNlcjI0MDAxMzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2400137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rudygodoy",
      "html_url": "https://github.com/rudygodoy",
      "followers_url": "https://api.github.com/users/rudygodoy/followers",
      "following_url": "https://api.github.com/users/rudygodoy/following{/other_user}",
      "gists_url": "https://api.github.com/users/rudygodoy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rudygodoy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rudygodoy/subscriptions",
      "organizations_url": "https://api.github.com/users/rudygodoy/orgs",
      "repos_url": "https://api.github.com/users/rudygodoy/repos",
      "events_url": "https://api.github.com/users/rudygodoy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rudygodoy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-17T15:56:43Z",
    "updated_at": "2017-07-17T15:56:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @frangio, yes I understand the goal it aims. Iâve built a token so that Iâm able to validate my implementation with the use cases commented in the article. \nI've also thought that this could be a lib, but my plan was to do that as the next improvement.\nRight now Iâm working on validating a third contract accessing the whitelisted-contract's functions. I believe that it would fit very well with the proxy libs.\n\n\n> On Jul 14, 2017, at 14:51, Francisco Giordano <notifications@github.com <mailto:notifications@github.com>> wrote:\n> \n> The idea would be to provide general-purpose function modifiers that can be used in any smart contract. Not just a specific token implementationÌ£ like I saw in your repo; not sure if that was just to test the idea.\n> \n> I've begun experimenting with something very similar to this that allows more than one whitelist. Please see my feature/roles branch <https://github.com/frangio/zeppelin-solidity/blob/feature/roles/contracts/Roles.sol>. There are no examples though.\n> \n> â\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub <https://github.com/OpenZeppelin/zeppelin-solidity/issues/8#issuecomment-315451731>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ACSfiYH_68WWc6IskzpYwwffIhdQCY0eks5sN8bEgaJpZM4Jontv>.\n> \n\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315796986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/355583043",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/8#issuecomment-355583043",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8",
    "id": 355583043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTU4MzA0Mw==",
    "user": {
      "login": "ajsantander",
      "id": 550409,
      "node_id": "MDQ6VXNlcjU1MDQwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/550409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsantander",
      "html_url": "https://github.com/ajsantander",
      "followers_url": "https://api.github.com/users/ajsantander/followers",
      "following_url": "https://api.github.com/users/ajsantander/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsantander/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsantander/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsantander/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsantander/orgs",
      "repos_url": "https://api.github.com/users/ajsantander/repos",
      "events_url": "https://api.github.com/users/ajsantander/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsantander/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T15:32:12Z",
    "updated_at": "2018-01-05T15:32:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "hey @rudygodoy \ndid you have any luck with this?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/355583043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/355619818",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/8#issuecomment-355619818",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8",
    "id": 355619818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTYxOTgxOA==",
    "user": {
      "login": "rudygodoy",
      "id": 2400137,
      "node_id": "MDQ6VXNlcjI0MDAxMzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2400137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rudygodoy",
      "html_url": "https://github.com/rudygodoy",
      "followers_url": "https://api.github.com/users/rudygodoy/followers",
      "following_url": "https://api.github.com/users/rudygodoy/following{/other_user}",
      "gists_url": "https://api.github.com/users/rudygodoy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rudygodoy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rudygodoy/subscriptions",
      "organizations_url": "https://api.github.com/users/rudygodoy/orgs",
      "repos_url": "https://api.github.com/users/rudygodoy/repos",
      "events_url": "https://api.github.com/users/rudygodoy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rudygodoy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T17:50:44Z",
    "updated_at": "2018-01-05T17:50:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi, I did. Itâs almost done. I plan to polish things out next week.\n\n> On Jan 5, 2018, at 10:32, Alejandro Santander <notifications@github.com> wrote:\n> \n> hey @rudygodoy <https://github.com/rudygodoy>\n> did you have any luck with this?\n> \n> â\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/OpenZeppelin/zeppelin-solidity/issues/8#issuecomment-355583043>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ACSfiSlBrOvBZlF2hmDIUY-hIJtuF0fPks5tHkCEgaJpZM4Jontv>.\n> \n\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/355619818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/356121501",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/8#issuecomment-356121501",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8",
    "id": 356121501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjEyMTUwMQ==",
    "user": {
      "login": "feulf",
      "id": 540035,
      "node_id": "MDQ6VXNlcjU0MDAzNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/540035?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/feulf",
      "html_url": "https://github.com/feulf",
      "followers_url": "https://api.github.com/users/feulf/followers",
      "following_url": "https://api.github.com/users/feulf/following{/other_user}",
      "gists_url": "https://api.github.com/users/feulf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/feulf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/feulf/subscriptions",
      "organizations_url": "https://api.github.com/users/feulf/orgs",
      "repos_url": "https://api.github.com/users/feulf/repos",
      "events_url": "https://api.github.com/users/feulf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/feulf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-08T22:48:38Z",
    "updated_at": "2018-01-08T22:48:38Z",
    "author_association": "NONE",
    "body": "Any update on this? I'm creating my own version, in my contract, could be nice to have it as a separate library as part of Zeppelin.\r\n\r\n```\r\n    mapping (address => bool) public whitelist;\r\n\r\n    modifier onlyWhitelistAddress() {\r\n        require(whitelist[msg.sender] == true);\r\n        _;\r\n    }\r\n      \r\n    function addWhitelistAddress (address _address) public onlyOwner{\r\n        whitelist[_address] = true;\r\n    }\r\n    \r\n    function removeWhitelistAddress (address _address) public onlyOwner{\r\n        whitelist[_address] = false;\r\n    }\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/356121501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/356127593",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/8#issuecomment-356127593",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8",
    "id": 356127593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjEyNzU5Mw==",
    "user": {
      "login": "rudygodoy",
      "id": 2400137,
      "node_id": "MDQ6VXNlcjI0MDAxMzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2400137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rudygodoy",
      "html_url": "https://github.com/rudygodoy",
      "followers_url": "https://api.github.com/users/rudygodoy/followers",
      "following_url": "https://api.github.com/users/rudygodoy/following{/other_user}",
      "gists_url": "https://api.github.com/users/rudygodoy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rudygodoy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rudygodoy/subscriptions",
      "organizations_url": "https://api.github.com/users/rudygodoy/orgs",
      "repos_url": "https://api.github.com/users/rudygodoy/repos",
      "events_url": "https://api.github.com/users/rudygodoy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rudygodoy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-08T23:17:28Z",
    "updated_at": "2018-01-08T23:18:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Implementation for a whitelist in a contract it's basically trivial, most of the proposals are pretty much alike. The issue comes with the integration part since we would like to have it as a reusable modifier. Given that, I'm sharing some of the challenges to direct the discussion towards a smooth implementation. \r\n\r\n- The whitelist data structure has to be in the scope of the contract, so \r\n- With regards to decoupling the modifier from the contracts that want to implement whitelisting for their functions, there must be a way for them to know how to access their locally-shared access data structure and, if that's the case\r\n- Developers would need to be aware of the previous assumptions, which can be overkill for OZ's goal of \"ready to play\" code base\r\n\r\nThe library's route could be useful for the shared data structure, however:\r\n- The access data structure will be shared, that's the way how libraries are deployed, which is not something people would like to have for their own contract's implementation, and\r\n- As with plain modifiers, the function modifier would need to know how to access that data structure\r\n  ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/356127593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/356162473",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/8#issuecomment-356162473",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8",
    "id": 356162473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjE2MjQ3Mw==",
    "user": {
      "login": "feulf",
      "id": 540035,
      "node_id": "MDQ6VXNlcjU0MDAzNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/540035?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/feulf",
      "html_url": "https://github.com/feulf",
      "followers_url": "https://api.github.com/users/feulf/followers",
      "following_url": "https://api.github.com/users/feulf/following{/other_user}",
      "gists_url": "https://api.github.com/users/feulf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/feulf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/feulf/subscriptions",
      "organizations_url": "https://api.github.com/users/feulf/orgs",
      "repos_url": "https://api.github.com/users/feulf/repos",
      "events_url": "https://api.github.com/users/feulf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/feulf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T02:40:27Z",
    "updated_at": "2018-01-09T02:40:27Z",
    "author_association": "NONE",
    "body": "Cool. I'll use my own implementation for now as I've to move forward with our MVP, but I'm looking forward to using the OpenZeppelin implementation.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/356162473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/365480102",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/8#issuecomment-365480102",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8",
    "id": 365480102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTQ4MDEwMg==",
    "user": {
      "login": "rudygodoy",
      "id": 2400137,
      "node_id": "MDQ6VXNlcjI0MDAxMzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2400137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rudygodoy",
      "html_url": "https://github.com/rudygodoy",
      "followers_url": "https://api.github.com/users/rudygodoy/followers",
      "following_url": "https://api.github.com/users/rudygodoy/following{/other_user}",
      "gists_url": "https://api.github.com/users/rudygodoy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rudygodoy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rudygodoy/subscriptions",
      "organizations_url": "https://api.github.com/users/rudygodoy/orgs",
      "repos_url": "https://api.github.com/users/rudygodoy/repos",
      "events_url": "https://api.github.com/users/rudygodoy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rudygodoy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T02:56:20Z",
    "updated_at": "2018-02-14T02:56:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm sharing my initial attempt, so people can comment. It works fine, no issues on remix as well. However, I'm having very weird issues with the integration tests for the `disable` and `check` methods for the skeleton contract (whitelisted). I haven't put much time debugging that problem. I'll keep you posted or just do the PR when everything is as I expect it to be.\r\n\r\n```\r\npragma solidity ^0.4.11;\r\n\r\nlibrary Whitelist {\r\n  \r\n  struct List {\r\n    mapping(address => bool) registry;\r\n  }\r\n  \r\n  function add(List storage list, address _addr)\r\n    internal\r\n  {\r\n    list.registry[_addr] = true;\r\n  }\r\n\r\n  function remove(List storage list, address _addr)\r\n    internal\r\n  {\r\n    list.registry[_addr] = false;\r\n  }\r\n\r\n  function check(List storage list, address _addr)\r\n    view\r\n    internal\r\n    returns (bool)\r\n  {\r\n    return list.registry[_addr];\r\n  }\r\n}\r\n\r\ncontract Whitelisted {\r\n\r\n  Whitelist.List private _list;\r\n  \r\n  modifier onlyWhitelisted() {\r\n    require(Whitelist.check(_list, msg.sender) == true);\r\n    _;\r\n  }\r\n\r\n  event AddressAdded(address _addr);\r\n  event AddressRemoved(address _addr);\r\n  \r\n  function Whitelisted()\r\n  public\r\n  {\r\n    Whitelist.add(_list, msg.sender);\r\n  }\r\n\r\n  function enable(address _addr)\r\n    public\r\n  {\r\n    Whitelist.add(_list, _addr);\r\n    AddressAdded(_addr);\r\n  }\r\n\r\n  function disable(address _addr)\r\n    public\r\n  {\r\n    Whitelist.remove(_list, _addr);\r\n    AddressRemoved(_addr);\r\n  }\r\n  \r\n  function isListed(address _addr)\r\n  public\r\n  view\r\n  returns (bool)\r\n  {\r\n      return Whitelist.check(_list, _addr);\r\n  }\r\n}\r\n\r\ncontract WhitelistToken is Whitelisted {\r\n\r\n  function onlyWhitelistedCanDo()\r\n    onlyWhitelisted\r\n    view\r\n    external\r\n  {    \r\n  }\r\n\r\n}\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/365480102/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/366233663",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/8#issuecomment-366233663",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8",
    "id": 366233663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjIzMzY2Mw==",
    "user": {
      "login": "cryptodegreeofficial",
      "id": 36413603,
      "node_id": "MDQ6VXNlcjM2NDEzNjAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/36413603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cryptodegreeofficial",
      "html_url": "https://github.com/cryptodegreeofficial",
      "followers_url": "https://api.github.com/users/cryptodegreeofficial/followers",
      "following_url": "https://api.github.com/users/cryptodegreeofficial/following{/other_user}",
      "gists_url": "https://api.github.com/users/cryptodegreeofficial/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cryptodegreeofficial/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cryptodegreeofficial/subscriptions",
      "organizations_url": "https://api.github.com/users/cryptodegreeofficial/orgs",
      "repos_url": "https://api.github.com/users/cryptodegreeofficial/repos",
      "events_url": "https://api.github.com/users/cryptodegreeofficial/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cryptodegreeofficial/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-16T13:22:57Z",
    "updated_at": "2018-02-16T13:22:57Z",
    "author_association": "NONE",
    "body": "hello can you help how to make this contract transferable?  I created a simple contract as practice.  Then when I try to send the token from creator wallet to another wallet it doesn't work.  It appears  the error like this ''cannot find the transfer events log checked sender  pls help. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/366233663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/388232762",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/8#issuecomment-388232762",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8",
    "id": 388232762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODIzMjc2Mg==",
    "user": {
      "login": "come-maiz",
      "id": 617831,
      "node_id": "MDQ6VXNlcjYxNzgzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/617831?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/come-maiz",
      "html_url": "https://github.com/come-maiz",
      "followers_url": "https://api.github.com/users/come-maiz/followers",
      "following_url": "https://api.github.com/users/come-maiz/following{/other_user}",
      "gists_url": "https://api.github.com/users/come-maiz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/come-maiz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/come-maiz/subscriptions",
      "organizations_url": "https://api.github.com/users/come-maiz/orgs",
      "repos_url": "https://api.github.com/users/come-maiz/repos",
      "events_url": "https://api.github.com/users/come-maiz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/come-maiz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-11T01:29:40Z",
    "updated_at": "2018-05-11T01:29:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is a simple [WhitelistedCrowdsale](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/v1.9.0/contracts/crowdsale/validation/WhitelistedCrowdsale.sol) that shows how to use modifiers to solve this, but is not a general solution for all contracts.\r\nThe [Role-Based Access Control contract has the onlyRole modifier](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/4a10f727c4756a8f6433f272a49e7a15db5e4b8f/contracts/ownership/rbac/RBAC.sol#L81) that generalizes this for all contracts and for many other use cases in addition to whitelists.\r\n\r\nI'm closing this issue. Please reopen if there's something missing.\r\n\r\n@shrugs would it make sense to update the WhitelistCrowdsale to use RBAC?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/388232762/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/388232813",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/8#issuecomment-388232813",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/8",
    "id": 388232813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODIzMjgxMw==",
    "user": {
      "login": "come-maiz",
      "id": 617831,
      "node_id": "MDQ6VXNlcjYxNzgzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/617831?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/come-maiz",
      "html_url": "https://github.com/come-maiz",
      "followers_url": "https://api.github.com/users/come-maiz/followers",
      "following_url": "https://api.github.com/users/come-maiz/following{/other_user}",
      "gists_url": "https://api.github.com/users/come-maiz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/come-maiz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/come-maiz/subscriptions",
      "organizations_url": "https://api.github.com/users/come-maiz/orgs",
      "repos_url": "https://api.github.com/users/come-maiz/repos",
      "events_url": "https://api.github.com/users/come-maiz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/come-maiz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-11T01:30:05Z",
    "updated_at": "2018-05-11T01:30:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cryptodegreeofficial check [Ownable](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/v1.9.0/contracts/ownership/Ownable.sol)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/388232813/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
