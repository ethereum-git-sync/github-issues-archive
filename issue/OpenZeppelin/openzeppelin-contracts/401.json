{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/401",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/401/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/401/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/401/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/401",
  "id": 252359037,
  "node_id": "MDU6SXNzdWUyNTIzNTkwMzc=",
  "number": 401,
  "title": "approve should not work on paused PausableToken",
  "user": {
    "login": "maraoz",
    "id": 287189,
    "node_id": "MDQ6VXNlcjI4NzE4OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/287189?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maraoz",
    "html_url": "https://github.com/maraoz",
    "followers_url": "https://api.github.com/users/maraoz/followers",
    "following_url": "https://api.github.com/users/maraoz/following{/other_user}",
    "gists_url": "https://api.github.com/users/maraoz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maraoz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maraoz/subscriptions",
    "organizations_url": "https://api.github.com/users/maraoz/orgs",
    "repos_url": "https://api.github.com/users/maraoz/repos",
    "events_url": "https://api.github.com/users/maraoz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maraoz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650966,
      "node_id": "MDU6TGFiZWw1MDM2NTA5NjY=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0e8a16",
      "default": true,
      "description": "Low hanging fruit for new contributors to get involved!"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2017-08-23T17:29:46Z",
  "updated_at": "2017-09-18T21:18:59Z",
  "closed_at": "2017-09-18T21:18:59Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Not 100% sure, but let's discuss",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/401/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/401/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/324766608",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/401#issuecomment-324766608",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/401",
    "id": 324766608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDc2NjYwOA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-24T21:47:25Z",
    "updated_at": "2017-08-24T21:47:25Z",
    "author_association": "MEMBER",
    "body": "My intuition is that `Pausable` should make all public non-constant functions stop working, except for some emergency mechanism that the owner can activate.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/324766608/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/325292689",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/401#issuecomment-325292689",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/401",
    "id": 325292689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTI5MjY4OQ==",
    "user": {
      "login": "pash7ka",
      "id": 2335215,
      "node_id": "MDQ6VXNlcjIzMzUyMTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2335215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pash7ka",
      "html_url": "https://github.com/pash7ka",
      "followers_url": "https://api.github.com/users/pash7ka/followers",
      "following_url": "https://api.github.com/users/pash7ka/following{/other_user}",
      "gists_url": "https://api.github.com/users/pash7ka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pash7ka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pash7ka/subscriptions",
      "organizations_url": "https://api.github.com/users/pash7ka/orgs",
      "repos_url": "https://api.github.com/users/pash7ka/repos",
      "events_url": "https://api.github.com/users/pash7ka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pash7ka/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-28T08:26:39Z",
    "updated_at": "2017-08-28T08:26:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "May be I'm wrong, but in my opinion purpose of PausableToken is to allow non-atomic or time-consuming tasks to be executed while balances are immutable.\r\nFor example, if you need to count votes this may require a few transactions because of gas limit. So you can pause transfers while you are counting. Or you may decide to pause during whole voting process to make things simple.\r\nBut in both this examples you don't need to pause approve, because it doesn't change balances.\r\n\r\nIs there an example where pausing approves is required?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/325292689/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/325387093",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/401#issuecomment-325387093",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/401",
    "id": 325387093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTM4NzA5Mw==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-28T15:29:58Z",
    "updated_at": "2017-08-28T15:30:48Z",
    "author_association": "MEMBER",
    "body": "@pash7ka I like your reasoning and it may be a good use case, but I don't think it's aligned with the purpose of `Pausable`.\r\n\r\nWe consider `Pausable` to be an [\"emergency stop\" mechanism](https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/lifecycle/Pausable.sol#L9). The problem with this mechanism is that one must manually add `whenNotPaused` modifiers to all the relevant functions. The `PausableToken` contract, then, is intended to be a `StandardToken` for which this job has already been done.\r\n\r\nIn this scenario, an example where pausing approves is required would be a `PausableToken` which has been extended with buggy logic that makes use of the approval data. What do you think of this?\r\n\r\nPausing transfers to \"make things simple\" for a task doesn't sound like a good idea to me. If token transfers were involved in some voting process I would extend the `transfer` function to log votes elsewhere if the contract is in a voting period.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/325387093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/329789938",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/401#issuecomment-329789938",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/401",
    "id": 329789938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTc4OTkzOA==",
    "user": {
      "login": "7flash",
      "id": 4569866,
      "node_id": "MDQ6VXNlcjQ1Njk4NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4569866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/7flash",
      "html_url": "https://github.com/7flash",
      "followers_url": "https://api.github.com/users/7flash/followers",
      "following_url": "https://api.github.com/users/7flash/following{/other_user}",
      "gists_url": "https://api.github.com/users/7flash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/7flash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/7flash/subscriptions",
      "organizations_url": "https://api.github.com/users/7flash/orgs",
      "repos_url": "https://api.github.com/users/7flash/repos",
      "events_url": "https://api.github.com/users/7flash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/7flash/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-15T13:55:53Z",
    "updated_at": "2017-09-15T13:55:53Z",
    "author_association": "NONE",
    "body": "Another user case is to freeze trading during the crowdsale. I think approve is an element of trading and it should be paused also.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/329789938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/329845769",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/401#issuecomment-329845769",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/401",
    "id": 329845769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTg0NTc2OQ==",
    "user": {
      "login": "pash7ka",
      "id": 2335215,
      "node_id": "MDQ6VXNlcjIzMzUyMTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2335215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pash7ka",
      "html_url": "https://github.com/pash7ka",
      "followers_url": "https://api.github.com/users/pash7ka/followers",
      "following_url": "https://api.github.com/users/pash7ka/following{/other_user}",
      "gists_url": "https://api.github.com/users/pash7ka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pash7ka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pash7ka/subscriptions",
      "organizations_url": "https://api.github.com/users/pash7ka/orgs",
      "repos_url": "https://api.github.com/users/pash7ka/repos",
      "events_url": "https://api.github.com/users/pash7ka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pash7ka/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-15T17:24:45Z",
    "updated_at": "2017-09-15T17:25:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@frangio I do understand the idea of PausableToken as a ready to use Pausable StandartToken. And you are right, somebody may use approval data and think it will be also paused.\r\nSo, after your explanation I'm fine with making approve() pausable.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/329845769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
