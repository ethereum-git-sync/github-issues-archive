{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3495",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3495/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3495/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3495/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3495",
  "id": 1278436460,
  "node_id": "I_kwDOA9tCBs5MM2Rs",
  "number": 3495,
  "title": "Support taxed tokens transfers in the ERC4626 contract",
  "user": {
    "login": "OxMarco",
    "id": 10283625,
    "node_id": "MDQ6VXNlcjEwMjgzNjI1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10283625?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/OxMarco",
    "html_url": "https://github.com/OxMarco",
    "followers_url": "https://api.github.com/users/OxMarco/followers",
    "following_url": "https://api.github.com/users/OxMarco/following{/other_user}",
    "gists_url": "https://api.github.com/users/OxMarco/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/OxMarco/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/OxMarco/subscriptions",
    "organizations_url": "https://api.github.com/users/OxMarco/orgs",
    "repos_url": "https://api.github.com/users/OxMarco/repos",
    "events_url": "https://api.github.com/users/OxMarco/events{/privacy}",
    "received_events_url": "https://api.github.com/users/OxMarco/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-06-21T13:16:57Z",
  "updated_at": "2022-06-24T16:34:04Z",
  "closed_at": "2022-06-24T16:34:04Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Scope**\r\nERC4626\r\n\r\n**Motivation**\r\nMake the standard more inclusive and usable across the hugely-diversified DeFi ecosystem by supporting taxed tokens transfers.\r\n\r\n**Description**\r\nImplement a token transfer library that takes into account tokens with transfer taxes or non-standard behaviours (example: a user calls `deposit(...amount = 10)` but the actual deposit is 9 _TKN_ because of a 10% transfer tax.\r\n\r\n**Example**\r\n```solidity\r\nfunction transferTokens(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal returns (uint256 originalBalance, uint256 received) {\r\n        if (token.balanceOf(from) < amount) revert TransferHelper__Insufficient_Token_Balance(from, address(token));\r\n\r\n        if (token.allowance(from, address(this)) < amount)\r\n            revert TransferHelper__Insufficient_Token_Allowance(from, address(this), address(token));\r\n\r\n        // computes transferred balance for tokens with tax on transfers\r\n        originalBalance = token.balanceOf(to);\r\n        token.safeTransferFrom(from, to, amount);\r\n\r\n        received = token.balanceOf(to) - originalBalance;\r\n    }\r\n```\r\n    \r\nNow instead of `SafeERC20.transferFrom(...)` one could use the function above using the `received` value instead of the user-inputted `amount`.\r\n\r\nSource: [TransferHelper.sol](https://github.com/Ithil-protocol/v1-core/blob/master/contracts/libraries/TransferHelper.sol)\r\n",
  "closed_by": {
    "login": "OxMarco",
    "id": 10283625,
    "node_id": "MDQ6VXNlcjEwMjgzNjI1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10283625?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/OxMarco",
    "html_url": "https://github.com/OxMarco",
    "followers_url": "https://api.github.com/users/OxMarco/followers",
    "following_url": "https://api.github.com/users/OxMarco/following{/other_user}",
    "gists_url": "https://api.github.com/users/OxMarco/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/OxMarco/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/OxMarco/subscriptions",
    "organizations_url": "https://api.github.com/users/OxMarco/orgs",
    "repos_url": "https://api.github.com/users/OxMarco/repos",
    "events_url": "https://api.github.com/users/OxMarco/events{/privacy}",
    "received_events_url": "https://api.github.com/users/OxMarco/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3495/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3495/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1161776633",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3495#issuecomment-1161776633",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3495",
    "id": 1161776633,
    "node_id": "IC_kwDOA9tCBs5FP035",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-21T13:50:20Z",
    "updated_at": "2022-06-21T13:50:20Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @OxMarco \r\n\r\nIndeed, the current ERC4626 implementation assumes that calling transferFrom with a given amount will transfer that amount of token to the receiver. Right now we don't claim compatibility support with non-standard ERC20. Maybe that should be clearer.\r\n\r\nSupport for non-standard ERC20 could possibly be partially improved using this, but that would not be enough:\r\n- how should the preview behave?\r\n- what about the mint function, which needs to predict the value to transfer to receive a given amount?\r\n- transfer also affects redeem and withdraw, ...\r\n\r\nAll in all, I believe that the changes you propose would only scratch the surface of what non-standard ERC20 support requires ... and that alone, is not enough. meanwhile, it makes operating on a \"normal\" ERC20 more expensive.\r\n\r\nSo I would personally not include that by default, but we should add more warnings about the assumption we make, and tell devs that want to interact with these tokens that they probably override many ERC4626 operations",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1161776633/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1162838737",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3495#issuecomment-1162838737",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3495",
    "id": 1162838737,
    "node_id": "IC_kwDOA9tCBs5FT4LR",
    "user": {
      "login": "OxMarco",
      "id": 10283625,
      "node_id": "MDQ6VXNlcjEwMjgzNjI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10283625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OxMarco",
      "html_url": "https://github.com/OxMarco",
      "followers_url": "https://api.github.com/users/OxMarco/followers",
      "following_url": "https://api.github.com/users/OxMarco/following{/other_user}",
      "gists_url": "https://api.github.com/users/OxMarco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OxMarco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OxMarco/subscriptions",
      "organizations_url": "https://api.github.com/users/OxMarco/orgs",
      "repos_url": "https://api.github.com/users/OxMarco/repos",
      "events_url": "https://api.github.com/users/OxMarco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OxMarco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-22T08:59:24Z",
    "updated_at": "2022-06-22T08:59:24Z",
    "author_association": "NONE",
    "body": "Ok I see your point and that makes sense. A possible way around would be to wrap transfers in an overridable internal function so that if someone wants to support non-standard ERC20, they can simply override it. What do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1162838737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1162859460",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3495#issuecomment-1162859460",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3495",
    "id": 1162859460,
    "node_id": "IC_kwDOA9tCBs5FT9PE",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-22T09:20:07Z",
    "updated_at": "2022-06-22T09:20:07Z",
    "author_association": "COLLABORATOR",
    "body": "I considered making the `_deposit` and `_withdraw` internal instead of private. Do you think that would be enough ?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1162859460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1164827954",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3495#issuecomment-1164827954",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3495",
    "id": 1164827954,
    "node_id": "IC_kwDOA9tCBs5Fbd0y",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-23T20:17:20Z",
    "updated_at": "2022-06-23T20:17:39Z",
    "author_association": "MEMBER",
    "body": "I'm okay with making `_deposit` and `_withdraw` internal. Wouldn't add special behavior for taxed tokens.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1164827954/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1165741468",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3495#issuecomment-1165741468",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3495",
    "id": 1165741468,
    "node_id": "IC_kwDOA9tCBs5Fe82c",
    "user": {
      "login": "OxMarco",
      "id": 10283625,
      "node_id": "MDQ6VXNlcjEwMjgzNjI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10283625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OxMarco",
      "html_url": "https://github.com/OxMarco",
      "followers_url": "https://api.github.com/users/OxMarco/followers",
      "following_url": "https://api.github.com/users/OxMarco/following{/other_user}",
      "gists_url": "https://api.github.com/users/OxMarco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OxMarco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OxMarco/subscriptions",
      "organizations_url": "https://api.github.com/users/OxMarco/orgs",
      "repos_url": "https://api.github.com/users/OxMarco/repos",
      "events_url": "https://api.github.com/users/OxMarco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OxMarco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T16:34:04Z",
    "updated_at": "2022-06-24T16:34:04Z",
    "author_association": "NONE",
    "body": "ok perfect, if that is not going to largely impact the gas costs I think it could be useful to implement them for flexibility",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1165741468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
