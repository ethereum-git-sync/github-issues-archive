{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488",
  "id": 375088414,
  "node_id": "MDU6SXNzdWUzNzUwODg0MTQ=",
  "number": 1488,
  "title": "What is the alternative for Claimable in v2.0.0?",
  "user": {
    "login": "barakman",
    "id": 7003246,
    "node_id": "MDQ6VXNlcjcwMDMyNDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barakman",
    "html_url": "https://github.com/barakman",
    "followers_url": "https://api.github.com/users/barakman/followers",
    "following_url": "https://api.github.com/users/barakman/following{/other_user}",
    "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
    "organizations_url": "https://api.github.com/users/barakman/orgs",
    "repos_url": "https://api.github.com/users/barakman/repos",
    "events_url": "https://api.github.com/users/barakman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barakman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650860,
      "node_id": "MDU6TGFiZWw1MDM2NTA4NjA=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/feature",
      "name": "feature",
      "color": "b9db64",
      "default": false,
      "description": "New contracts, functions, or helpers."
    },
    {
      "id": 1000207718,
      "node_id": "MDU6TGFiZWwxMDAwMjA3NzE4",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/contracts",
      "name": "contracts",
      "color": "1d76db",
      "default": false,
      "description": "Smart contract code."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 33,
  "created_at": "2018-10-29T15:57:17Z",
  "updated_at": "2022-09-01T15:46:47Z",
  "closed_at": "2022-09-01T15:46:47Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Not exactly a bug, for for those who have been using `Claimable` in earlier versions of OZ (for the purpose of `transferOwnership` followed by `claimOwnership`) - what are the options in v2.0.0?\r\n\r\nRelying solely on `Ownable.transferOwnership` lacks a safety mechanism for accidentally transferring the ownership to an incorrect address.\r\n\r\nAt present, the only alternative that I see is copying `Claimable.sol` from v.12.0 to my repo, fixing the `import \"./Ownable.sol\"` statement, and inheriting my contracts from `Claimable` instead of `Ownable`.\r\n\r\nThis is far from being a clean solution.\r\n\r\nAre there any alternatives?\r\n\r\nI've been reading something about roles ([issue 1274](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1274/commits), [issue 1146](https://github.com/OpenZeppelin/openzeppelin-solidity/issues/1146), [issue 1291](https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1291)).\r\n\r\nIs that possibly related?\r\n\r\nThanks",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/433995350",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-433995350",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 433995350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzk5NTM1MA==",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-29T17:09:54Z",
    "updated_at": "2018-10-29T17:11:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "UPDATE:\r\n\r\nThe alternative above is not even feasible because:\r\n1. The state variable `owner` has been renamed to `_onwer`\r\n2. The access-level of this variable has changed from `internal` to `private`\r\n\r\nThe second reason is much more critical of course, because it means that I cannot even fix `Claimable` in order to make it work with the current version of `Ownable`, i.e., I need to grab both contracts from v1.12.0 into my repo. To make it worse, the compiler doesn't like to see two different contracts with the same name (`Ownable` v1.12.0 and `Ownable` v.2.0.0), so I would need to rename the one that I take from v.1.12.0.\r\n\r\nI have looked into your `roles` folder, and it seems that any one of the contracts there can be used instead of `Ownable`.\r\n\r\nHowever:\r\n1. The gas cost on the `only` operation is higher, since you're using `mapping (address => bool)` instead of just `address`.\r\n2. If I lose the initial `owner`, then there is no way for me to trace it (again, due to the use of a `mapping`).\r\n3. There is still no support for claiming an ownership here.\r\n\r\nShould I just implement a designated `ClaimerRole` or something like that?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/433995350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/435098427",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-435098427",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 435098427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTA5ODQyNw==",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-01T16:26:40Z",
    "updated_at": "2018-11-01T16:30:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "UPDATE 2:\r\n\r\nI believe that it would have been better if you had left the `Ownable` and `Claimable` contracts in v.2.0.0, as they were in v1.12.0 (i.e., `address public owner` instead of `address private _owner`).\r\n\r\nIf I understand correctly, then the only alternative at this point is to implement my own custom contract using the `Roles` library. Here is how I solved it without implementing such a contract:\r\n\r\nStep 1 - added in file `package.json`:\r\n```\r\n  \"scripts\": {\r\n    \"postinstall\": \"node fix.js\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"download-file\": \"^0.1.5\"\r\n  }\r\n```\r\nStep 2 - added file `fix.js` next to file `package.json`:\r\n```\r\nlet download = require(\"download-file\");\r\n\r\nfor (let filename of [\"Ownable.sol\", \"Claimable.sol\"]) {\r\n    let url = \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v1.12.0/contracts/ownership/\" + filename;\r\n    let options = {directory: \"./node_modules/openzeppelin-solidity/contracts/ownership/\", filename: filename};\r\n    console.log(\"Fixing \" + options.directory + options.filename);\r\n    download(url, options, function(error) {if (error) throw error;});\r\n}\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/435098427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/435137513",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-435137513",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 435137513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTEzNzUxMw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-01T18:23:14Z",
    "updated_at": "2018-11-01T18:23:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey there @barakman! Thank you for bringing this up.\r\n\r\nThe reason why the `owner` state variable was made `private` is to prevent derived contracts from writing to it: this means that `Ownable` is the only contract that may modify it (via `transferOwnership`), making code easier to reason about and audit. We may add an `internal` method in the future for derived classes to use in a more controlled fashion, but that's not part of the 2.0 release.\r\n\r\nWhat I'm wondering is _why_ you need `Claimable` in the first place: we don't consider it to be very useful, and may even be an anti-pattern in some cases, which is why we got rid of it. Could you share some more information regarding your requirements? Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/435137513/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/435158708",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-435158708",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 435158708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTE1ODcwOA==",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-01T19:31:46Z",
    "updated_at": "2018-11-01T19:33:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nventuro: Hi.\r\n\r\nI understand your motivation in changing the access-level of the `owner` variable from `public` to `private`. In fact, I have realized this while applying your new coding conventions throughout our code, and ended up changing one of our `internal` variables to `private` for the exact same reason (emphasizing that this variable is not to be altered by any deriving contract).\r\n\r\nHowever, since the `claimOwnership` function is imperative in our off-chain activity, we must maintain a copy of the old contracts (`Ownable` and `Claimable` v1.12.0).\r\n\r\nTo elaborate a little more about this, some of our `onlyOwner` functions are very sensitive (security-wise), and we would like to impose multi-sig access on them.\r\n\r\nFor this purpose, we transfer the ownership of each relevant contract from ourselves (i.e., the deploying account) to a [`MultiSigWallet` contract](https://github.com/gnosis/MultiSigWallet/blob/master/contracts/MultiSigWallet.sol) which we deploy beforehand.\r\n\r\nAnd in order to ensure that we never accidentally transfer the ownership of a contract to the wrong address, we use the `transferOwnership` / `claimOwnership` mechanism that you have very nicely provided in v1.12.0.\r\n\r\nThanks.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/435158708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/440396469",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-440396469",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 440396469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDM5NjQ2OQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-20T19:14:40Z",
    "updated_at": "2018-11-20T19:14:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @barakman, \r\n\r\nI'm glad you're with us on the `private`/`internal` thing :)\r\n\r\nThe main reason behind `Claimable` no longer being a thing is that we're in the process of deprecating `Ownable`: we think having a single account with superpowers is too powerful, and doesn't fit some scenarios where some granularity regarding permissions is required (see #366).\r\n\r\nAs you noticed, our current access-control solution are the `Roles` contracts, which you _could_ use to achieve what you intend with these have two functions: `addRole` and `renounceRole`.\r\n1. `add` the multisig to the list of accounts with the role, from the original account\r\n2. Check the multisig actually has the role\r\n3. `renounce` the role from the original account\r\n\r\nI'd argue however that all `Claimable` is doing for you in the workflow you described is saving you from having to redeploy all of your contracts once you notice you've mistakenly transferred ownership to an erroneous account (I'm assuming, a non-existent account, i.e. one that will not be able to call `claim` before you fix your mistake and re-transfer ownership). Is there something I'm missing here?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/440396469/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/440665042",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-440665042",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 440665042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDY2NTA0Mg==",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T13:39:28Z",
    "updated_at": "2018-11-21T13:39:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nventuro: Hi.\r\n\r\nYes, your argument is accurate - if I transfer ownership of a contract to the wrong account (presumably a non-existing one, due to a typo for example), then I will need to redeploy the contract, and possibly a few other (related) contracts along with it.\r\n\r\nThis redeployment is equivalent to a *Fork* of our system, and we consider it pretty disastrous.\r\n\r\nThanks",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/440665042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/440707323",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-440707323",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 440707323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDcwNzMyMw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T15:33:38Z",
    "updated_at": "2018-11-21T15:33:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "As a general rule, if such a deployment may cause issues in your system, I'd advise you to take a look at the whole architecture: ideally, your contracts should be worthless and not meaningful until you start using them (presumably, after checking deployment was successful). \r\n\r\nThat said, if (temporarily) transferring ownership to a non-existent account doesn't bother you, `Roles` will give you similar behavior: since roles are not transferred but added, you can simply call `add` again on the right account, before renouncing. Behavior is not exactly the same since that wrong account will always have the role (unless you specify a removal mechanism), but I take it this doesn't worry you?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/440707323/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/453720597",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-453720597",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 453720597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzcyMDU5Nw==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-12T05:12:14Z",
    "updated_at": "2019-01-12T05:12:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "While I am a fan of RBAC for large projects, for small contracts it is _way_ overkill and adds a ton of unnecessary complexity (i.e., risk).  I encourage keeping Ownable/Claimable around while _also_ pursuing a RBAC system.  The landing page for my personal blog doesn't need RBAC, while by 100 engineer company certainly does.  IMO, Ownable/Claimable fill a different niche from an RBAC system and should not be deleted.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/453720597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454164004",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-454164004",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 454164004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDE2NDAwNA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T21:15:15Z",
    "updated_at": "2019-01-14T21:15:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MicahZoltu indeed, we think `Ownable` does a good job for small projects and quick proofs of concept, and because of that we decided that removing it was not a great idea. We did however switch our contracts (e.g. `ERC20Mintable`) so that they use the `Roles` solution.\r\n\r\nRegarding `Claimable`, what about it is it that you find needing? I've yet to find a compelling use case, but I'm not against adding these tiny bits of functionality if it ends up being useful.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454164004/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454184436",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-454184436",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 454184436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDE4NDQzNg==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T22:23:13Z",
    "updated_at": "2019-01-14T22:23:32Z",
    "author_association": "MEMBER",
    "body": "@MicahZoltu How would you feel if the replacement for the old `Claimable` was a contract that was used \"by composition\" instead of inheritance? I.e. setting the `owner` to be a intermediary/forwarder contract that handles the `transfer`+`claim` process. This could be reused for roles also.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454184436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454274174",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-454274174",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 454274174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDI3NDE3NA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T05:45:00Z",
    "updated_at": "2019-11-05T23:37:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nventuro I never use Ownable without Claimable, because Ownable alone makes it too easy to accidentally fat-finger-send-to-dev-null.\r\n\r\n@frangio If the target audience for Ownable/Claimable is \"simple contracts\", it feels like requiring a transitive owner is the opposite direction from what we want.  Now I have to author a second contract with passthrough functions to each of the `onlyOwner` functions on the contract (as well as some public functions most likely) and I need to have the infrastructure in place to ensure that the interfaces always line up, and when it comes time to deploy the deployment process is more complicated because I now need to deploy the main contract, then deploy the owner contract, then transfer ownership to the owner contract (a process during which I can still accidentally send-to-null).\r\n\r\nThe thing that makes Claimable nice (compared to something like RBAC) is that it is a relatively simple protection (dozens of lines of already-audited code) against catastrophic failure (sending contract to /dev/null).  It requires almost zero additional operational/infrastructure work over Ownable, while a full RBAC system or proxy contract requires notably more effort to maintain/manage.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454274174/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454571885",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-454571885",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 454571885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDU3MTg4NQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T22:12:42Z",
    "updated_at": "2019-01-15T22:12:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm, I could get behind those arguments. I take it though that by /dev/null you mean 'any random address' and not just the zero address, right? Arguably, as soon as you transfer ownership to another account it will be able to claim it, so you'd be relying on a) no-one having the private keys, or b) they not being fast enough.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454571885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454573475",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-454573475",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 454573475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDU3MzQ3NQ==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T22:18:15Z",
    "updated_at": "2019-01-15T22:18:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, zero address _is_ a common target as it is the default value for all local variables/parameters and easy to accidentally send to if you screw up your transaction creation.  However, fat-fingering is another common source of error that can lead to the contract going to an address that no one controls.\r\n\r\nI'm not worried about accidentally transferring to an address that someone does have the keys to.  While that is _possible_, it isn't the vector I'm worried about.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454573475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454640220",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-454640220",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 454640220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDY0MDIyMA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T03:37:55Z",
    "updated_at": "2019-01-16T03:37:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "What if we embedded the old `Claimable` into `Ownable`? That'd way it'd be less optional, and we could more easily suggest the recommended usage.\r\n\r\nGranted, we can't simply change how `Ownable`'s `transferOwnership` works, so we'd have to add a new method for it (`transferOwnershipWithConfirmation`? 😕).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454640220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454669504",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-454669504",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 454669504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDY2OTUwNA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T06:40:12Z",
    "updated_at": "2019-01-16T06:40:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would be fine with `Claimable` only and just never using `transferOwnership`.  Having them separate does allow one to _disable_ `transferOwnership`'s original functionality which is kind of nice, but not as important IMO.\r\n\r\nMy vote would be Ownable + Claimable, but would not fight against a single Ownable contract with a `confirmableTransferOwnership` function.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454669504/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/458259634",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-458259634",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 458259634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODI1OTYzNA==",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T19:05:02Z",
    "updated_at": "2019-01-28T19:06:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nventuro :\r\n\r\nIs this one due to be released any time soon?\r\n\r\nFollowing an (extremely thorough) audit, my workaround for fetching `Ownable 1.12.0` and `Claimable 1.12.0` (thus overriding `Ownable 2.0.0`) didn't quite \"go down well\" in the perspective of the auditer, who stated that \"This is a dangerous practice as it modifies openzeppelin-solidity in a potentially unexpected way\".\r\n\r\nThe auditer further recommends to add it explicitly to our system. We would highly prefer to avoid it, and to continue using your widely-used and thoroughly-verified `Ownable` / `Claimable` pair.\r\n\r\nIs there any chance that you reinstate them in the coming release?\r\n\r\nThanks again :)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/458259634/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/458319858",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-458319858",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 458319858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODMxOTg1OA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T22:03:40Z",
    "updated_at": "2019-01-28T22:03:40Z",
    "author_association": "MEMBER",
    "body": "@barakman We can't guarantee to release this soon. Given that, I'd recommend to implement `Claimable` from scratch yourself, and have it audited, as it should be a fairly small contract.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/458319858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/458485336",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-458485336",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 458485336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODQ4NTMzNg==",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T10:18:25Z",
    "updated_at": "2019-01-29T10:18:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@frangio:\r\nOf course, but we'd lose the \"widely-used and thoroughly-verified by the community\" feature.\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/458485336/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/466424599",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-466424599",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 466424599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjQyNDU5OQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-22T14:57:02Z",
    "updated_at": "2019-02-22T14:57:02Z",
    "author_association": "CONTRIBUTOR",
    "body": ">didn't quite \"go down well\" in the perspective of the auditer, who stated that \"This is a dangerous practice as it modifies openzeppelin-solidity in a potentially unexpected way\"\r\n\r\nA statement I wholeheartedly agree with :)\r\n\r\n@barakman We'll be exploring options soon (specially considering this shouldn't be such a big change), but I'm not sure yet regarding a release date, sorry.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/466424599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/466472782",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-466472782",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 466472782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjQ3Mjc4Mg==",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-22T17:13:13Z",
    "updated_at": "2019-02-22T17:13:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nventuro:\r\n\r\nI've already come to realize that even if you do reinstate `Claimable` back into the next version of OZ, it will be under solc v0.5.x.\r\n\r\nAnd since we've decided to stick with solc v0.4.x for the time being, it will probably yield some other \"collisions\" in our project.\r\n\r\nSo I have resolved the audit-warning by downloading `Ownable` and `Claimable` into a folder named `openzeppelin-solidity-v1.12.0` (instead of `openzeppelin-solidity`, which is the one created by `npm`).\r\n\r\nThis way, the following is achieved:\r\n1. OZ package installed by `npm` (openzeppelin-solidity v2.0.0) is not modified.\r\n2. Anyone reading the contracts is fully aware of the fact that `Ownable` and `Claimable` belong to `openzeppelin-solidity-v1.12.0` (because this string appears explicitly in the the `import` statements).\r\n3. Our project leverages from the fact that these modules are well-known open source, and have been verified thoroughly by the community (which would not be the case should we choose to implement them ourselves).\r\n\r\nOf course, if I am wrong in my initial assumption, and you do reinstate `Claimable` with a `pragma solidity 0.4.25` statement at the beginning of the file, then I would be happy to upgrade our OZ version from 2.0.0 to the newer version.\r\n\r\nThanks for your help :)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/466472782/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/533821441",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-533821441",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 533821441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzgyMTQ0MQ==",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-21T18:46:50Z",
    "updated_at": "2019-09-21T18:51:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Next version compatible implementation:\r\n```solidity\r\npragma solidity ^0.5.0;\r\n\r\nimport \"github.com/openzeppelin/openzeppelin-contracts/contracts/ownership/Ownable.sol\";\r\n\r\n\r\ncontract Claimable is Ownable {\r\n\r\n    address public pendingOwner;\r\n    \r\n    modifier onlyPendingOwner() {\r\n        require(_msgSender() == pendingOwner);\r\n        _;\r\n    }\r\n    \r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        pendingOwner = newOwner;\r\n    }\r\n    \r\n    function claimOwnership() public onlyPendingOwner {\r\n        _transferOwnership(pendingOwner);\r\n        delete pendingOwner;\r\n    }\r\n}\r\n```\r\n\r\n@nventuro do you think this worth Pull Request?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/533821441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/549839033",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-549839033",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 549839033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTgzOTAzMw==",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-05T14:10:47Z",
    "updated_at": "2019-11-05T14:10:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "^^ @nventuro? @frangio? @MicahZoltu?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/549839033/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550073553",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-550073553",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 550073553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA3MzU1Mw==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-05T23:39:49Z",
    "updated_at": "2019-11-05T23:42:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "~~@k06a That looks like the original implementation, so fine with me.~~",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550073553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550074192",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-550074192",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 550074192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA3NDE5Mg==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-05T23:42:17Z",
    "updated_at": "2019-11-05T23:42:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, actually there should be a `cancelTransfer` function that looks something like:\r\n```solidity\r\nfunction cancelOwnershipTransfer() public onlyOwner {\r\n    delete pendingOwner;\r\n}\r\n```\r\n\r\nYou _could_ transfer ownership to yourself (owner), but that feels dirty when your goal is to cancel an ownership transfer.\r\n\r\nAlso, there may be value in firing events for `transferOwnership` and `claimOwnership`.  If Ownable already fires an event in `_transferOwnership` then that is probably enough and only an event for `NewPendingOwner` (or similar name) is necessary.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550074192/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550171862",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-550171862",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 550171862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDE3MTg2Mg==",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T06:52:12Z",
    "updated_at": "2019-11-06T06:52:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MicahZoltu it seems more like `transferOwnership(0)` than transferring to self",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550171862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550173272",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-550173272",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 550173272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDE3MzI3Mg==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T06:56:55Z",
    "updated_at": "2019-11-06T06:56:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, good point.  You could do `transferOwnership(0)` to \"clear\" the pending transfer.  I feel like it would be more correct to have a `cancelTransfer` function, especially if events are added.\r\n\r\nFunnily enough, I believe this exact feedback is what I got from OpenZeppelin in a contract review that had `Claimable` functionality.  😁  We have gone full circle it seems.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550173272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550295609",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-550295609",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 550295609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDI5NTYwOQ==",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T12:51:31Z",
    "updated_at": "2019-11-06T12:51:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated implementation:\r\n\r\n```\r\npragma solidity ^0.5.0;\r\n\r\nimport \"github.com/openzeppelin/openzeppelin-contracts/contracts/ownership/Ownable.sol\";\r\n\r\n\r\ncontract Claimable is Ownable {\r\n\r\n    address public pendingOwner;\r\n\r\n    event NewPendingOwner(address index owner);\r\n\r\n    modifier onlyPendingOwner() {\r\n        require(_msgSender() == pendingOwner);\r\n        _;\r\n    }\r\n    \r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(pendingOwner == address(0));\r\n        pendingOwner = newOwner;\r\n        emit NewPendingOwner(newOwner);\r\n    }\r\n\r\n    function cancelTransferOwnership() public onlyOwner {\r\n        require(pendingOwner != address(0));\r\n        delete pendingOwner;\r\n        emit NewPendingOwner(address(0));\r\n    }\r\n    \r\n    function claimOwnership() public onlyPendingOwner {\r\n        _transferOwnership(msg.sender);\r\n        delete pendingOwner;\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550295609/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550513346",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-550513346",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 550513346,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDUxMzM0Ng==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T21:42:03Z",
    "updated_at": "2019-11-06T21:42:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there value in having a separate event for `CancelPendingOwner`?  I'm generally not a fan of magic numbers (in this case, `0` being a magic number for cancellation).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550513346/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550515499",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-550515499",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 550515499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDUxNTQ5OQ==",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T21:48:06Z",
    "updated_at": "2019-11-06T21:53:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "This comment makes sense because function `transferOwnership` does not require that `newOwner` is non-zero.\r\n\r\nOnce this function requires this condition (which it should IMO), emitting event `NewPendingOwner` in function `cancelTransferOwnership` actually makes sense, because this event is now emitted whenever the value of `pendingOwner` changes (indicating accurately the new value of `pendingOwner`).\r\n\r\nIn either case, there is nothing \"magical\" about 0 here (i.e., it is **not** used as a magic number).\r\n\r\n---\r\n\r\nAlternatively, instead of adding `require(newOwner != address(0))` in function `transferOwnership`, you could simply get rid of function `cancelTransferOwnership` altogether...\r\nBut I guess that's a design-decision (i.e., allowing the user to cancel by passing zero).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550515499/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550557658",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1488#issuecomment-550557658",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1488",
    "id": 550557658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDU1NzY1OA==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-07T00:04:11Z",
    "updated_at": "2019-11-07T00:04:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Currently, the value of `0` _is_ magic by nature of the fact that when there is no pending transfer, `pendingOwner == 0`.  I can appreciate that getting rid of that particular magic value is hard and probably not worth it, but I think we can at least make it so the magic value doesn't propagate out to the API/events as much as it does now.\r\n\r\nAdding `require(newOwner != 0)` to `transferOwnership(...)` and having a separate event for `NewPendingOwner` and `TransferCancelled` is probably the closest we can get to making it so API users don't have to know about the magic `0` value (where 0 means unset).  More than that and we would have to store a separate `pendingOwnerIsSet` boolean which I don't think is worth it.\r\n\r\nWe _could_ add a method for `hasPendingOwner` if we wanted to take it one step further to removing the need for users/integrators to understand that `0` is magic if we wanted, and this wouldn't have any impact on internal complexity or gas costs like having a separate `bool` flag would.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550557658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
