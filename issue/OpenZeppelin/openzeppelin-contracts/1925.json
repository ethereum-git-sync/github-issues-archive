{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1925",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1925/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1925/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1925/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1925",
  "id": 497765607,
  "node_id": "MDU6SXNzdWU0OTc3NjU2MDc=",
  "number": 1925,
  "title": "Unexpected results using SafeMath for uint128",
  "user": {
    "login": "bh2smith",
    "id": 11778116,
    "node_id": "MDQ6VXNlcjExNzc4MTE2",
    "avatar_url": "https://avatars.githubusercontent.com/u/11778116?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bh2smith",
    "html_url": "https://github.com/bh2smith",
    "followers_url": "https://api.github.com/users/bh2smith/followers",
    "following_url": "https://api.github.com/users/bh2smith/following{/other_user}",
    "gists_url": "https://api.github.com/users/bh2smith/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bh2smith/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bh2smith/subscriptions",
    "organizations_url": "https://api.github.com/users/bh2smith/orgs",
    "repos_url": "https://api.github.com/users/bh2smith/repos",
    "events_url": "https://api.github.com/users/bh2smith/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bh2smith/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2019-09-24T15:32:56Z",
  "updated_at": "2019-10-22T16:59:11Z",
  "closed_at": "2019-10-22T16:59:11Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "<!-- Briefly describe the issue you're experiencing. Tell us what you were trying to do and what happened instead. -->\r\n**Summary**\r\n\r\nTrying to use SafeMath for `uint128` should throw/ revert in situations when overflows happen! Same holds for overflows of any integer type that are not `uint256`\r\n\r\n**📝 Example**\r\n\r\n_Contract:_\r\n```\r\npragma solidity ^0.5.0;\r\n\r\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\r\n\r\ncontract BrokenSafeMath {\r\n    using SafeMath for uint128;\r\n\r\n    function unsafeAdd(uint128 a, uint128 b) public pure returns (uint128) {\r\n        return uint128(a.add(b));\r\n    }\r\n}\r\n```\r\n\r\n_unit test:_\r\n\r\n```js\r\nlet res = await contract.unsafeAdd.call(\"340282366920938463463374607431768211455\", 2)\r\n```\r\nyields a return value of `x = 1` (unexpected/should have reverted).\r\n\r\nThe problem seems to be with the upcasting of everything to `uint256` as seen in the following snippet.\r\n\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/54182bf31c78fb1b16dfdce40fc9a6a177cb3bca/contracts/math/SafeMath.sol#L26-L31\r\n\r\nAs far as I understand, this implies that SafeMath is only really \"safe\" for `uint256` and none of the other integer types.\r\n\r\n\r\n**💻 Environment**\r\nNot really applicable, but this appears to be the case for all versions. Particularly, I ran my examples with\r\n```\r\n    \"openzeppelin-solidity\": \"^2.3.0\",\r\n```\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1925/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1925/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/534773194",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1925#issuecomment-534773194",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1925",
    "id": 534773194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDc3MzE5NA==",
    "user": {
      "login": "Skyge",
      "id": 27282380,
      "node_id": "MDQ6VXNlcjI3MjgyMzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27282380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Skyge",
      "html_url": "https://github.com/Skyge",
      "followers_url": "https://api.github.com/users/Skyge/followers",
      "following_url": "https://api.github.com/users/Skyge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Skyge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Skyge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Skyge/subscriptions",
      "organizations_url": "https://api.github.com/users/Skyge/orgs",
      "repos_url": "https://api.github.com/users/Skyge/repos",
      "events_url": "https://api.github.com/users/Skyge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Skyge/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-24T22:28:08Z",
    "updated_at": "2019-09-24T22:28:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, you are right, `SafeMath` is only for `uint256` currently. So if you want to use it for `uint128`, maybe you should make corresponding changes: `uint256 => uint128`.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/534773194/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/534783870",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1925#issuecomment-534783870",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1925",
    "id": 534783870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDc4Mzg3MA==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-24T23:15:37Z",
    "updated_at": "2019-09-24T23:15:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @bh2smith,\r\n\r\nAs per @Skyge, SafeMath only supports uint256.\r\n\r\nSee the following issue for a discussion on supporting other types:\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/issues/1625",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/534783870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/534914315",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1925#issuecomment-534914315",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1925",
    "id": 534914315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDkxNDMxNQ==",
    "user": {
      "login": "bh2smith",
      "id": 11778116,
      "node_id": "MDQ6VXNlcjExNzc4MTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/11778116?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bh2smith",
      "html_url": "https://github.com/bh2smith",
      "followers_url": "https://api.github.com/users/bh2smith/followers",
      "following_url": "https://api.github.com/users/bh2smith/following{/other_user}",
      "gists_url": "https://api.github.com/users/bh2smith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bh2smith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bh2smith/subscriptions",
      "organizations_url": "https://api.github.com/users/bh2smith/orgs",
      "repos_url": "https://api.github.com/users/bh2smith/repos",
      "events_url": "https://api.github.com/users/bh2smith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bh2smith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-25T08:32:04Z",
    "updated_at": "2019-09-25T10:25:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the suggestions all, these were very helpful. Will probably start looking for or working on a `SafeCast` library that might look as follows. \r\n\r\n```\r\npragma solidity ^0.5.0;\r\n\r\nlibrary SafeCast {\r\n    function castU128(uint a) internal pure returns (uint128) {\r\n        require(a < 2**128, \"SafeCast: downcast overflow\");\r\n        return uint128(a);\r\n    }\r\n}\r\n```\r\n\r\nWould this be something that should/could be included here in the openzeppelin repo?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/534914315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/539138941",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1925#issuecomment-539138941",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1925",
    "id": 539138941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTEzODk0MQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-07T18:16:06Z",
    "updated_at": "2019-10-07T18:16:06Z",
    "author_association": "MEMBER",
    "body": "```solidity\r\nfunction unsafeAdd(uint128 a, uint128 b) public pure returns (uint128) {\r\n    return uint128(a.add(b));\r\n}\r\n```\r\n\r\nTo clarify, the dangerous operation here is not the `SafeMath` operation but the downcast to `uint128`. I think the casting library proposed by @bh2smith is the right way to approach this kind of thing.\r\n\r\nThank you for reporting and proposing a mitigation!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/539138941/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 2,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
