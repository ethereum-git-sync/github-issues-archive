{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3742",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3742/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3742/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3742/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3742",
  "id": 1392503609,
  "node_id": "I_kwDOA9tCBs5S_-s5",
  "number": 3742,
  "title": "Reduce contract size through error messages normalization",
  "user": {
    "login": "bogdan",
    "id": 122436,
    "node_id": "MDQ6VXNlcjEyMjQzNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/122436?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bogdan",
    "html_url": "https://github.com/bogdan",
    "followers_url": "https://api.github.com/users/bogdan/followers",
    "following_url": "https://api.github.com/users/bogdan/following{/other_user}",
    "gists_url": "https://api.github.com/users/bogdan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bogdan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bogdan/subscriptions",
    "organizations_url": "https://api.github.com/users/bogdan/orgs",
    "repos_url": "https://api.github.com/users/bogdan/repos",
    "events_url": "https://api.github.com/users/bogdan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bogdan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-09-30T14:09:57Z",
  "updated_at": "2022-12-02T00:53:37Z",
  "closed_at": "2022-12-02T00:53:37Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n<!-- Is your feature request related to a specific problem? Is it just a crazy idea? Tell us about it! -->\r\n\r\nContract size limit of 24KB on ETH mainnet is a big problem. We need to reduce contracts size as much as we can by optimizing error messages.\r\n\r\nUsing error codes is very inconvenient and backward incompatible option, so...\r\n\r\n**üìù Details**\r\n \r\nError messages is a significant contributor to the contract size that can easily be optimized (with backward compatibility) by putting that as a part of separated contract. This contract can even be shared for a whole network.\r\n\r\n**Solution**\r\n \r\nMove all error messages to a separated contract that will be used in other contracts:\r\n\r\n``` solidity\r\ncontract Errors {\r\n  mapping (uint256 => string) public errorMessages\r\n\r\n  addErrorMessage(message: string) {\r\n     messages[keccak256(message)] = message;\r\n  }\r\n  addErrorMessages(messages: string[]) {\r\n    ...\r\n  }\r\n  getManyByHash(hashes: uint256[]) {\r\n   ...\r\n  }\r\n}\r\n\r\n// Variant A: messages storage within the contract\r\ncontract ERC721 is Errors {\r\n     function balanceOf(address owner) public view virtual override returns (uint256) {\r\n        require(owner != address(0), errorMessages[0x388282]);\r\n        return _balances[owner];\r\n    }\r\n}\r\n\r\n// Variant B: shared messages storage for the whole network:\r\ncontract ERC721 {\r\n     constructor(errorMessagesAddress) {\r\n       errors = IErrors(errorMessagesAddress)\r\n    }\r\n     function balanceOf(address owner) public view virtual override returns (uint256) {\r\n        require(owner != address(0), errors.errorMessages[0x388282]);\r\n        return _balances[owner];\r\n    }\r\n}\r\n```\r\n\r\nNote that such a solution will not increase a gas cost of successful transaction but only the unsuccessful ones, which are pretty rare comparing to successful ones.\r\n\r\nShared contract approach can help people to safe gas when deploying to mainnet across the board.\r\n\r\n**Concerns**\r\n\r\nSuch a solution will make deployment procedure more complex as now error messages list would need to be uploaded separately in case it is not reused from a shared contract.\r\n\r\nShared contract would need to be maintained and updated with each version of the library for all supported networks by uploading new list of error messages. Deleting the old messages or versioning for each library version is not required.\r\n\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3742/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3742/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1263779007",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3742#issuecomment-1263779007",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3742",
    "id": 1263779007,
    "node_id": "IC_kwDOA9tCBs5LU7y_",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-30T16:27:50Z",
    "updated_at": "2022-09-30T16:27:50Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @bogdan \r\n\r\nThis approach needs storing error string in storage. This sound very expensive to set up. Considering custom errors are available since 0.8.4, I believe we should focus or effort in that direction. It both cheaper and more versatile than what your propose.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1263779007/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1263784571",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3742#issuecomment-1263784571",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3742",
    "id": 1263784571,
    "node_id": "IC_kwDOA9tCBs5LU9J7",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-30T16:33:57Z",
    "updated_at": "2022-09-30T16:34:08Z",
    "author_association": "MEMBER",
    "body": "@bogdan's proposal is to use a globally shared contract for error string decoding so the storage cost would be paid once upfront and not by the user.\r\n\r\nWhile I sort of like this idea, it's going to run into several problems:\r\n- Big operational overhead to deploy the Errors contract on multiple networks\r\n- Usability issues around the need to deploy the Errors contract in local dev networks, or in networks not supported by us\r\n- Lack of tooling and usability issues around distribution of address of the Errors contract in each network, and the need to configure it properly at deployment\r\n\r\nWe are much more likely to migrate to custom Solidity custom errors (#2839). I'm interested in learning more why you say they're inconvenient.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1263784571/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1263787738",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3742#issuecomment-1263787738",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3742",
    "id": 1263787738,
    "node_id": "IC_kwDOA9tCBs5LU97a",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-30T16:37:15Z",
    "updated_at": "2022-09-30T16:37:21Z",
    "author_association": "MEMBER",
    "body": "Balancer's approach to remove revert strings from the code is to use numeric codes along with a helper to generate a revert string with the ASCII number at runtime ([`BalancerErrors.sol`](https://github.com/balancer-labs/balancer-v2-monorepo/blob/2e08c0a54dfb6c42e39c9b1b83de2e84f10b8be5/pkg/interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol)) and documentation for the error codes online (https://dev.balancer.fi/references/error-codes).\r\n\r\nI don't think we prefer this approach to Solidity Custom Errors either.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1263787738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1334630838",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3742#issuecomment-1334630838",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3742",
    "id": 1334630838,
    "node_id": "IC_kwDOA9tCBs5PjNm2",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-02T00:53:37Z",
    "updated_at": "2022-12-02T00:53:37Z",
    "author_association": "MEMBER",
    "body": "We will be adopting Custom Errors for OpenZeppelin Contracts 5.0. See https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2839.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1334630838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
