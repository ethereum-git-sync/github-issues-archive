{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4465",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4465/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4465/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4465/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4465",
  "id": 1810005369,
  "node_id": "I_kwDOA9tCBs5r4n15",
  "number": 4465,
  "title": "using `AccessControlDefaultAdminRules` with `AccessControlEnumerable` results in many `Derived contract must override function` errors",
  "user": {
    "login": "SvenMeyer",
    "id": 25609,
    "node_id": "MDQ6VXNlcjI1NjA5",
    "avatar_url": "https://avatars.githubusercontent.com/u/25609?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SvenMeyer",
    "html_url": "https://github.com/SvenMeyer",
    "followers_url": "https://api.github.com/users/SvenMeyer/followers",
    "following_url": "https://api.github.com/users/SvenMeyer/following{/other_user}",
    "gists_url": "https://api.github.com/users/SvenMeyer/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SvenMeyer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SvenMeyer/subscriptions",
    "organizations_url": "https://api.github.com/users/SvenMeyer/orgs",
    "repos_url": "https://api.github.com/users/SvenMeyer/repos",
    "events_url": "https://api.github.com/users/SvenMeyer/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SvenMeyer/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-07-18T14:02:35Z",
  "updated_at": "2023-07-18T18:07:50Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Using `AccessControlDefaultAdminRules` or `AccessControlEnumerable` on its own looks straight forward.\r\nHowever if I derive from both, I get quite some error messages.\r\n\r\n`contract SecureContract is AccessControlDefaultAdminRules, AccessControlEnumerable, Pausable, ReentrancyGuard { ... }\r\n\r\n```\r\nDerived contract must override function \"_grantRole\". Two or more base classes define function with same name and parameter types.solidity(6480)\r\nDerived contract must override function \"_revokeRole\". Two or more base classes define function with same name and parameter types.solidity(6480)\r\nDerived contract must override function \"_setRoleAdmin\". Two or more base classes define function with same name and parameter types.solidity(6480)\r\nDerived contract must override function \"grantRole\". Two or more base classes define function with same name and parameter types.solidity(6480)\r\nDerived contract must override function \"renounceRole\". Two or more base classes define function with same name and parameter types.solidity(6480)\r\nDerived contract must override function \"revokeRole\". Two or more base classes define function with same name and parameter types.solidity(6480)\r\nDerived contract must override function \"supportsInterface\". Two or more base classes define function with same name and parameter types.solidity(6480)\r\n```\r\n\r\nEven if it is intented, I would be helpful the have example code in the documentation, however ideally just deriving from both should work and implement some reasonable default behaviour (if possible)",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4465/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4465/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1640709574",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4465#issuecomment-1640709574",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4465",
    "id": 1640709574,
    "node_id": "IC_kwDOA9tCBs5hyz3G",
    "user": {
      "login": "ernestognw",
      "id": 33379285,
      "node_id": "MDQ6VXNlcjMzMzc5Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/33379285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ernestognw",
      "html_url": "https://github.com/ernestognw",
      "followers_url": "https://api.github.com/users/ernestognw/followers",
      "following_url": "https://api.github.com/users/ernestognw/following{/other_user}",
      "gists_url": "https://api.github.com/users/ernestognw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ernestognw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ernestognw/subscriptions",
      "organizations_url": "https://api.github.com/users/ernestognw/orgs",
      "repos_url": "https://api.github.com/users/ernestognw/repos",
      "events_url": "https://api.github.com/users/ernestognw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ernestognw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-18T18:07:50Z",
    "updated_at": "2023-07-18T18:07:50Z",
    "author_association": "MEMBER",
    "body": "This is a good point and I agree it undermines the developer experience. However, I think the proposal has some nuances because neither Solidity nor us can define a default behavior for this because in order to disambiguate, one must assess the linearization order first.\r\n\r\nhttps://docs.soliditylang.org/en/v0.8.20/contracts.html#multiple-inheritance-and-linearization\r\n\r\nBasically, the order of execution of the clashing functions is determined by the order in which you put the inherited contracts, (i.e is not the same `is A, B` to `is B, A`).\r\n\r\nIn this particular case, I think the linearization order doesn't seem to cause issues so the only thing you should do is adding an `override (AccessControlDefaultAdminRules, AccessControlEnumerable)` to the clashing functions.\r\n\r\nCurious to know, how would you think it'd be best to orient users in this regard?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1640709574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
