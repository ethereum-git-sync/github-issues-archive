{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2193",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2193/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2193/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2193/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2193",
  "id": 600960839,
  "node_id": "MDU6SXNzdWU2MDA5NjA4Mzk=",
  "number": 2193,
  "title": "AccessControl _grantRole should be internal",
  "user": {
    "login": "alexroan",
    "id": 6523673,
    "node_id": "MDQ6VXNlcjY1MjM2NzM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6523673?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexroan",
    "html_url": "https://github.com/alexroan",
    "followers_url": "https://api.github.com/users/alexroan/followers",
    "following_url": "https://api.github.com/users/alexroan/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexroan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexroan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexroan/subscriptions",
    "organizations_url": "https://api.github.com/users/alexroan/orgs",
    "repos_url": "https://api.github.com/users/alexroan/repos",
    "events_url": "https://api.github.com/users/alexroan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexroan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-04-16T11:18:37Z",
  "updated_at": "2020-04-17T20:00:31Z",
  "closed_at": "2020-04-17T20:00:31Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n<!-- Is your feature request related to a specific problem? Is it just a crazy idea? Tell us about it! -->\r\n\r\nTo enable dynamic role management at runtime, an admin needs to be granted initially. The public function `grantRole()` requires than the admin role exists and there is already a bearer, so child contracts need to first be able to grant it.\r\n\r\nHaving `_grantRole()` as private blocks this.\r\n\r\n**üìù Details**\r\n<!-- Please describe your feature request in detail. -->\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/CONTRIBUTING.md -->\r\n\r\nExample of a Hierarchical structure using AccessControl here: https://github.com/HQ20/contracts/blob/master/contracts/access/Hierarchy.sol\r\n\r\n```\r\npragma solidity ^0.6.0;\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\n\r\n/**\r\n * @title Hierarchy\r\n * @author Alberto Cuesta Canada\r\n * @notice Implements a dynamic role structure for Roles\r\n */\r\ncontract Hierarchy is AccessControl {\r\n    event AdminRoleSet(bytes32 roleId, bytes32 adminRoleId);\r\n\r\n    /// @dev Add `root` as a member of the root role.\r\n    constructor (address root) public {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, root);\r\n    }\r\n\r\n    /// @dev Restricted to members of the role passed as a parameter.\r\n    modifier onlyMember(bytes32 roleId) {\r\n        require(hasRole(roleId, msg.sender), \"Restricted to members.\");\r\n        _;\r\n    }\r\n\r\n    /// @dev Create a new role with the specified admin role.\r\n    function addRole(bytes32 roleId, bytes32 adminRoleId)\r\n        public onlyMember(adminRoleId) {\r\n        _setRoleAdmin(roleId, adminRoleId);\r\n        emit AdminRoleSet(roleId, adminRoleId);\r\n    }\r\n}\r\n```\r\n\r\n`_grantRole()` in the constructor doesn't compile. Altering to internal will allow it.",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2193/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2193/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/614770465",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2193#issuecomment-614770465",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2193",
    "id": 614770465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDc3MDQ2NQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-16T16:52:17Z",
    "updated_at": "2020-04-16T16:52:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello @alexroan, thanks for opening this!\r\n\r\nThe function you'll want to use in your constructor is called [`_setupRole`](https://docs.openzeppelin.com/contracts/3.x-rc/api/access#AccessControl-_setupRole-bytes32-address-), and it can be used to achieve the result you're looking for. \r\n\r\nIt can currently only be called from the constructor, but that limitation is going away in https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2195. The reason why I still decided to give it a different name (instead of `_grantRole`) is that I don't want to place that much meaning on a single underscore character: the difference between `_grantRole` and `grantRole `is critical.\r\n\r\nThanks again!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/614770465/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
