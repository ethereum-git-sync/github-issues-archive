{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/66",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/66/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/66/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/66/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/66",
  "id": 188996709,
  "node_id": "MDU6SXNzdWUxODg5OTY3MDk=",
  "number": 66,
  "title": "Condition Oriented Programming?",
  "user": {
    "login": "se3000",
    "id": 573827,
    "node_id": "MDQ6VXNlcjU3MzgyNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/573827?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/se3000",
    "html_url": "https://github.com/se3000",
    "followers_url": "https://api.github.com/users/se3000/followers",
    "following_url": "https://api.github.com/users/se3000/following{/other_user}",
    "gists_url": "https://api.github.com/users/se3000/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/se3000/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/se3000/subscriptions",
    "organizations_url": "https://api.github.com/users/se3000/orgs",
    "repos_url": "https://api.github.com/users/se3000/repos",
    "events_url": "https://api.github.com/users/se3000/events{/privacy}",
    "received_events_url": "https://api.github.com/users/se3000/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2016-11-13T21:36:09Z",
  "updated_at": "2016-11-26T02:30:47Z",
  "closed_at": "2016-11-26T02:30:47Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Do you all have any thoughts on [Condition Oriented Programming](https://blog.ethcore.io/condition-oriented-programming-2/)? I've seen a couple places where branching logic is in the methods, most often something like `if (foo) throw;`. Which still seems like it could be pulled out into modifiers. Does Zeppelin have any stance on this pattern? \r\n\r\nIt definitely requires more code, and could be more expensive. But on the positive side, there is cleaner separation of concerns, limited complexity, and I think the expressiveness that comes with naming modifiers is very valuable.",
  "closed_by": {
    "login": "se3000",
    "id": 573827,
    "node_id": "MDQ6VXNlcjU3MzgyNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/573827?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/se3000",
    "html_url": "https://github.com/se3000",
    "followers_url": "https://api.github.com/users/se3000/followers",
    "following_url": "https://api.github.com/users/se3000/following{/other_user}",
    "gists_url": "https://api.github.com/users/se3000/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/se3000/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/se3000/subscriptions",
    "organizations_url": "https://api.github.com/users/se3000/orgs",
    "repos_url": "https://api.github.com/users/se3000/repos",
    "events_url": "https://api.github.com/users/se3000/events{/privacy}",
    "received_events_url": "https://api.github.com/users/se3000/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/66/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/66/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/260973201",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/66#issuecomment-260973201",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/66",
    "id": 260973201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDk3MzIwMQ==",
    "user": {
      "login": "maraoz",
      "id": 287189,
      "node_id": "MDQ6VXNlcjI4NzE4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/287189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maraoz",
      "html_url": "https://github.com/maraoz",
      "followers_url": "https://api.github.com/users/maraoz/followers",
      "following_url": "https://api.github.com/users/maraoz/following{/other_user}",
      "gists_url": "https://api.github.com/users/maraoz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maraoz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maraoz/subscriptions",
      "organizations_url": "https://api.github.com/users/maraoz/orgs",
      "repos_url": "https://api.github.com/users/maraoz/repos",
      "events_url": "https://api.github.com/users/maraoz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maraoz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-16T15:22:24Z",
    "updated_at": "2016-11-16T15:22:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh! Interesting concept. Still not convinced we want this, but I'll post it on slack to receive more feedback and thoughts from the community. Thanks for sharing!\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/260973201/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
