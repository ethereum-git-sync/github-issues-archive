{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2577",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2577/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2577/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2577/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2577",
  "id": 827953694,
  "node_id": "MDU6SXNzdWU4Mjc5NTM2OTQ=",
  "number": 2577,
  "title": "SafeTransfer does not validate return data length",
  "user": {
    "login": "pertsev",
    "id": 11399003,
    "node_id": "MDQ6VXNlcjExMzk5MDAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/11399003?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pertsev",
    "html_url": "https://github.com/pertsev",
    "followers_url": "https://api.github.com/users/pertsev/followers",
    "following_url": "https://api.github.com/users/pertsev/following{/other_user}",
    "gists_url": "https://api.github.com/users/pertsev/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pertsev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pertsev/subscriptions",
    "organizations_url": "https://api.github.com/users/pertsev/orgs",
    "repos_url": "https://api.github.com/users/pertsev/repos",
    "events_url": "https://api.github.com/users/pertsev/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pertsev/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-03-10T15:55:23Z",
  "updated_at": "2021-03-16T19:41:02Z",
  "closed_at": "2021-03-16T19:41:02Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/1ee939e7c4b2c1fe84e6f5b6a7c1ce5e7d91667f/contracts/token/ERC20/utils/SafeERC20.sol#L72-L75\r\n\r\nSafeTransfer does not validate return data length. The token can be a contract that has the transfer method but returns 2 or more arguments, so it's more reliable to check it like this\r\n```js\r\nif (returndata.length > 0) { // Return data is optional\r\n    require(data.length == 32, \"data length should be either 0 or 32 bytes\");\r\n    // solhint-disable-next-line max-line-length\r\n    require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n}\r\n```\r\nAlso, the token can return just one value with a different type (uint256 e.g) and it's going to be `true` after `abi.decode(returndata, (bool)`. So further validation can be applied \r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2577/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2577/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/796349141",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2577#issuecomment-796349141",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2577",
    "id": 796349141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NjM0OTE0MQ==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-11T01:20:21Z",
    "updated_at": "2021-03-11T01:20:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @pertsev!  Thanks for the suggestion, it is really appreciated.\r\n\r\nThe project owner will review your suggestion as soon as they can. \r\n\r\nPlease wait until we have discussed this idea before writing any code or submitting a Pull Request, so we can go through the design beforehand.  We donâ€™t want you to waste your time!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/796349141/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/800551708",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2577#issuecomment-800551708",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2577",
    "id": 800551708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDU1MTcwOA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-16T19:41:02Z",
    "updated_at": "2021-03-16T19:41:02Z",
    "author_association": "MEMBER",
    "body": "Hi @pertsev. Note that Solidity works the same way. If you call a function that you think returns a single `uint`, but it instead returns a pair of `uint`s, it will silently decode the first `uint` only.\r\n\r\nWe do not intend to add stricter semantics here, just support non-compliant ERC20 tokens that do not return the boolean value.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/800551708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
