{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/355",
  "id": 249517603,
  "node_id": "MDU6SXNzdWUyNDk1MTc2MDM=",
  "number": 355,
  "title": "Make tests run against Geth or Parity nodes",
  "user": {
    "login": "rstormsf",
    "id": 9360827,
    "node_id": "MDQ6VXNlcjkzNjA4Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9360827?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rstormsf",
    "html_url": "https://github.com/rstormsf",
    "followers_url": "https://api.github.com/users/rstormsf/followers",
    "following_url": "https://api.github.com/users/rstormsf/following{/other_user}",
    "gists_url": "https://api.github.com/users/rstormsf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rstormsf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rstormsf/subscriptions",
    "organizations_url": "https://api.github.com/users/rstormsf/orgs",
    "repos_url": "https://api.github.com/users/rstormsf/repos",
    "events_url": "https://api.github.com/users/rstormsf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rstormsf/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1000188800,
      "node_id": "MDU6TGFiZWwxMDAwMTg4ODAw",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/tests",
      "name": "tests",
      "color": "1d76db",
      "default": false,
      "description": "Test suite and helpers."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2017-08-11T01:16:23Z",
  "updated_at": "2022-12-02T21:24:58Z",
  "closed_at": "2022-12-02T21:24:48Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I am not sure how you trust `testrpc` but I'd expect all tests pass in `geth/parity` dev chains. For now, it only works if ran against testrpc. \r\nThere are 86 failures. \r\n1 that happens a lot is https://github.com/OpenZeppelin/zeppelin-solidity/blob/a344d42a00f47c82cb6ff1abbf39841114c362f6/test/helpers/expectThrow.js - doesn't work with the parity/geth.",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/321715140",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/355#issuecomment-321715140",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355",
    "id": 321715140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTcxNTE0MA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T01:38:34Z",
    "updated_at": "2017-08-11T01:38:34Z",
    "author_association": "MEMBER",
    "body": "Thank you for reporting this. We will have to look into it.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/321715140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/321722042",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/355#issuecomment-321722042",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355",
    "id": 321722042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTcyMjA0Mg==",
    "user": {
      "login": "rstormsf",
      "id": 9360827,
      "node_id": "MDQ6VXNlcjkzNjA4Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9360827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rstormsf",
      "html_url": "https://github.com/rstormsf",
      "followers_url": "https://api.github.com/users/rstormsf/followers",
      "following_url": "https://api.github.com/users/rstormsf/following{/other_user}",
      "gists_url": "https://api.github.com/users/rstormsf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rstormsf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rstormsf/subscriptions",
      "organizations_url": "https://api.github.com/users/rstormsf/orgs",
      "repos_url": "https://api.github.com/users/rstormsf/repos",
      "events_url": "https://api.github.com/users/rstormsf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rstormsf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T02:52:18Z",
    "updated_at": "2017-08-11T02:52:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "here is report https://rstormsf.github.io/zeppelin-test-report/mochawesome.html",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/321722042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/322951420",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/355#issuecomment-322951420",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355",
    "id": 322951420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjk1MTQyMA==",
    "user": {
      "login": "rstormsf",
      "id": 9360827,
      "node_id": "MDQ6VXNlcjkzNjA4Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9360827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rstormsf",
      "html_url": "https://github.com/rstormsf",
      "followers_url": "https://api.github.com/users/rstormsf/followers",
      "following_url": "https://api.github.com/users/rstormsf/following{/other_user}",
      "gists_url": "https://api.github.com/users/rstormsf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rstormsf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rstormsf/subscriptions",
      "organizations_url": "https://api.github.com/users/rstormsf/orgs",
      "repos_url": "https://api.github.com/users/rstormsf/repos",
      "events_url": "https://api.github.com/users/rstormsf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rstormsf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T02:25:25Z",
    "updated_at": "2017-08-17T02:26:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I believe it also has a lot to do with:\r\nit's only supported by testrpc I belive to quickly change block numbers, time, etc\r\nhttps://github.com/OpenZeppelin/zeppelin-solidity/blob/master/test/helpers/increaseTime.js\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/322951420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/324805042",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/355#issuecomment-324805042",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355",
    "id": 324805042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDgwNTA0Mg==",
    "user": {
      "login": "rstormsf",
      "id": 9360827,
      "node_id": "MDQ6VXNlcjkzNjA4Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9360827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rstormsf",
      "html_url": "https://github.com/rstormsf",
      "followers_url": "https://api.github.com/users/rstormsf/followers",
      "following_url": "https://api.github.com/users/rstormsf/following{/other_user}",
      "gists_url": "https://api.github.com/users/rstormsf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rstormsf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rstormsf/subscriptions",
      "organizations_url": "https://api.github.com/users/rstormsf/orgs",
      "repos_url": "https://api.github.com/users/rstormsf/repos",
      "events_url": "https://api.github.com/users/rstormsf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rstormsf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-25T02:09:07Z",
    "updated_at": "2017-08-25T02:09:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is my suggestion:\r\nHow about instead of relying on \r\n```\r\n  web3.currentProvider.sendAsync({\r\n        jsonrpc: '2.0',\r\n        method: 'evm_mine',\r\n        id: id+1,\r\n      }\r\n```\r\nwhich doesn't exist in parity/geth, we refactor every single occurence of `block.number` or `now` \r\nin methods like:\r\n```\r\nfunction getBlockNumber() public constant returns(uint256) {\r\n   return block.number;\r\n}\r\n\r\nfunction getTime() public constant returns(uint64) {\r\n  return now;\r\n}\r\n```\r\n\r\nthat would allows us to create MockContracts with 1 additional setter:\r\n\r\n```\r\nuint64 public fakeNow;\r\nuint64 public fakeBlockNumber;\r\n\r\nfunction getTime() public constant returns(uint64) {\r\n return fakeNow;\r\n}\r\n\r\nfunction setTime(uint64 _now) public {\r\n fakeNow = _now;\r\n}\r\n\r\nfunction getBlockNumber() public constant returns(uint256) {\r\nreturn fakeBlockNumber;\r\n}\r\n\r\nfunction setBlockNumber(uint256 _blockNumber) public {\r\nfakeBlockNumber = _blockNumber\r\n}\r\n```\r\n@frangio @maraoz comments? ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/324805042/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/324807896",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/355#issuecomment-324807896",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355",
    "id": 324807896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDgwNzg5Ng==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-25T02:31:08Z",
    "updated_at": "2017-08-25T02:31:08Z",
    "author_association": "MEMBER",
    "body": "It's an interesting proposal. Even if we don't migrate to it just now, I think it would make a nice addition to the library for people who want to run their tests on actual blockchains (which arguably should be everyone). Do you want to make a PR for it?\r\n\r\nDo you know how many of the failing tests are due to this? ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/324807896/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/324808448",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/355#issuecomment-324808448",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355",
    "id": 324808448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDgwODQ0OA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-25T02:35:32Z",
    "updated_at": "2017-08-25T02:35:32Z",
    "author_association": "MEMBER",
    "body": "Accidentally closed the issue, sorry.\r\n\r\nI would maybe rename `getTime` to `getBlockTimestamp`. And also add preconditions to only allow setting values in the future.\r\n\r\nIt would be nice to see how it will affect the codebase including the tests. I fear it will be too burdensome to have a new parent class for every contract that makes use of block numbers or timestamps.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/324808448/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/324811566",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/355#issuecomment-324811566",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355",
    "id": 324811566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDgxMTU2Ng==",
    "user": {
      "login": "rstormsf",
      "id": 9360827,
      "node_id": "MDQ6VXNlcjkzNjA4Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9360827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rstormsf",
      "html_url": "https://github.com/rstormsf",
      "followers_url": "https://api.github.com/users/rstormsf/followers",
      "following_url": "https://api.github.com/users/rstormsf/following{/other_user}",
      "gists_url": "https://api.github.com/users/rstormsf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rstormsf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rstormsf/subscriptions",
      "organizations_url": "https://api.github.com/users/rstormsf/orgs",
      "repos_url": "https://api.github.com/users/rstormsf/repos",
      "events_url": "https://api.github.com/users/rstormsf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rstormsf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-25T03:01:09Z",
    "updated_at": "2017-08-25T03:02:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@frangio thank you for your feedback.\r\nI will arrange a PR when I have time to see if I can fix all test cases. I will re-run the test suite since there is some new code/commits and I will report my results.\r\nI can consider that this approach will be approved, so I can give it a try to refactor all contracts. \r\n\r\n\r\nAlmost all non-helper, non-interface contract already has a relative MockContract. So I don't think it would be a problem. \r\nAgree on getBlockTimeStamp since `now = block.timestamp` in solidity (alias) \r\n\r\nFor setting values, sure, setters need to check \r\n`assert(_now > getBlockTimestamp())` ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/324811566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/327289165",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/355#issuecomment-327289165",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355",
    "id": 327289165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzI4OTE2NQ==",
    "user": {
      "login": "rstormsf",
      "id": 9360827,
      "node_id": "MDQ6VXNlcjkzNjA4Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9360827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rstormsf",
      "html_url": "https://github.com/rstormsf",
      "followers_url": "https://api.github.com/users/rstormsf/followers",
      "following_url": "https://api.github.com/users/rstormsf/following{/other_user}",
      "gists_url": "https://api.github.com/users/rstormsf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rstormsf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rstormsf/subscriptions",
      "organizations_url": "https://api.github.com/users/rstormsf/orgs",
      "repos_url": "https://api.github.com/users/rstormsf/repos",
      "events_url": "https://api.github.com/users/rstormsf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rstormsf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-05T20:10:43Z",
    "updated_at": "2017-09-05T20:12:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@frangio I found another problem:\r\ntestrpc would reject transaction and execution if there is broken condifion. For Example:\r\n`require(false)`\r\nso, right now, we use something like\r\n```\r\nawait assert.isRejected(contract.MethodThatWillThrow());\r\n```\r\nso, in geth mode, every transaction goes thru, and mined, whether it throws or not.\r\nso `chai-as-promised` becomes useless with geth and requires a significant amount of refactoring in order to support geth. \r\n\r\nAny ideas what could be done about it? ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/327289165/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/327327031",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/355#issuecomment-327327031",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355",
    "id": 327327031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzMyNzAzMQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-05T23:00:18Z",
    "updated_at": "2017-09-05T23:00:18Z",
    "author_association": "MEMBER",
    "body": "Hm, I had heard about that. We should define the necessary helper functions to abstract away the details.\r\n\r\nLast time I checked, given a mined transaction we can look at the used gas to infer whether it succeeded or failed. Maybe we can also use the `trace` RPC module...",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/327327031/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/327327315",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/355#issuecomment-327327315",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355",
    "id": 327327315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzMyNzMxNQ==",
    "user": {
      "login": "rstormsf",
      "id": 9360827,
      "node_id": "MDQ6VXNlcjkzNjA4Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9360827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rstormsf",
      "html_url": "https://github.com/rstormsf",
      "followers_url": "https://api.github.com/users/rstormsf/followers",
      "following_url": "https://api.github.com/users/rstormsf/following{/other_user}",
      "gists_url": "https://api.github.com/users/rstormsf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rstormsf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rstormsf/subscriptions",
      "organizations_url": "https://api.github.com/users/rstormsf/orgs",
      "repos_url": "https://api.github.com/users/rstormsf/repos",
      "events_url": "https://api.github.com/users/rstormsf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rstormsf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-05T23:01:52Z",
    "updated_at": "2017-09-06T00:07:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@frangio could you explain a bit more on how to read in geth if transaction was failed? \r\n\r\nI was also thinking of something like:\r\n\r\n```\r\n\r\nasync function shouldThrow(cb /* function */, params /* array */){\r\n  const networkId = web3.version.network;\r\n  let txReceipt;\r\n  if (networkId === '123' || networkId === '321') {\r\n    txReceipt = assert.isRejected(cb(...params));\r\n  } else {\r\n    txReceipt = cb(...params);\r\n  }\r\n  return txReceipt;\r\n}\r\n\r\n```\r\nthen in test:\r\n\r\n```\r\nawait shouldThrow(someContract.methodName, [0, '0x0039F22efB07A647557C7C5d17854CFD6D489eF3']);\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/327327315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/327571451",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/355#issuecomment-327571451",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355",
    "id": 327571451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzU3MTQ1MQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-06T18:22:54Z",
    "updated_at": "2017-09-06T18:22:54Z",
    "author_association": "MEMBER",
    "body": "We don't need to pass the method and params separately because method calls return promises. Something like [`expectThrow`](https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/test/helpers/expectThrow.js) except if the promise resolves successfully we have to get the transaction receipt or (if available) the trace to check whether the transaction actually succeeded or not.\r\n\r\nSorry I can't write a proof of concept myself at the moment.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/327571451/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/329010496",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/355#issuecomment-329010496",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355",
    "id": 329010496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTAxMDQ5Ng==",
    "user": {
      "login": "rstormsf",
      "id": 9360827,
      "node_id": "MDQ6VXNlcjkzNjA4Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9360827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rstormsf",
      "html_url": "https://github.com/rstormsf",
      "followers_url": "https://api.github.com/users/rstormsf/followers",
      "following_url": "https://api.github.com/users/rstormsf/following{/other_user}",
      "gists_url": "https://api.github.com/users/rstormsf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rstormsf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rstormsf/subscriptions",
      "organizations_url": "https://api.github.com/users/rstormsf/orgs",
      "repos_url": "https://api.github.com/users/rstormsf/repos",
      "events_url": "https://api.github.com/users/rstormsf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rstormsf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-12T23:15:16Z",
    "updated_at": "2017-09-12T23:15:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Still curious how to trace a tx in geth if it actually failed",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/329010496/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/471021506",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/355#issuecomment-471021506",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355",
    "id": 471021506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTAyMTUwNg==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-08T18:06:30Z",
    "updated_at": "2019-03-08T18:06:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "We've also discussed having contracts providing `msg` info, such as `msg.sender`, etc., to allow easier integration with metatx engines.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/471021506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/480959635",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/355#issuecomment-480959635",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355",
    "id": 480959635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDk1OTYzNQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-08T18:53:17Z",
    "updated_at": "2019-04-08T18:53:36Z",
    "author_association": "MEMBER",
    "body": "There is a PR in geth that might enable this soon. https://github.com/ethereum/go-ethereum/pull/16834",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/480959635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1335858104",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/355#issuecomment-1335858104",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/355",
    "id": 1335858104,
    "node_id": "IC_kwDOA9tCBs5Pn5O4",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-02T21:24:48Z",
    "updated_at": "2022-12-02T21:24:48Z",
    "author_association": "MEMBER",
    "body": "It is not easy and I don't think it's worth the effort to run our unit test suite against Geth. The test suite executes on the EthereumJS VM and I think it's very reasonable to assume that it is a compliant execution client.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1335858104/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
