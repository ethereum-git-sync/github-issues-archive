{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3659",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3659/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3659/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3659/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3659",
  "id": 1355013895,
  "node_id": "I_kwDOA9tCBs5Qw98H",
  "number": 3659,
  "title": "_isApprovedOrOwner approves a null spender",
  "user": {
    "login": "elv-serban",
    "id": 29080995,
    "node_id": "MDQ6VXNlcjI5MDgwOTk1",
    "avatar_url": "https://avatars.githubusercontent.com/u/29080995?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/elv-serban",
    "html_url": "https://github.com/elv-serban",
    "followers_url": "https://api.github.com/users/elv-serban/followers",
    "following_url": "https://api.github.com/users/elv-serban/following{/other_user}",
    "gists_url": "https://api.github.com/users/elv-serban/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/elv-serban/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/elv-serban/subscriptions",
    "organizations_url": "https://api.github.com/users/elv-serban/orgs",
    "repos_url": "https://api.github.com/users/elv-serban/repos",
    "events_url": "https://api.github.com/users/elv-serban/events{/privacy}",
    "received_events_url": "https://api.github.com/users/elv-serban/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-08-30T00:29:09Z",
  "updated_at": "2022-08-30T23:25:35Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "_isApprovedOrOwner approves a null spender:\r\n\r\n```\r\n   getApproved(tokenId) == spender\r\n```\r\n\r\nIt would be safer to check for a non-null spender or at a minimum document the requirement that the caller check for it.\r\n\r\n\r\n**üíª Environment**\r\n\r\nI have tested a relatively old version but the code hasn't changed in the latest:\r\n\r\n- solidity 0.6.16\r\n\r\n\r\n**üìù Details**\r\n\r\ngetApproved returns 0 when the approval doesn't exist.\r\n\r\n```\r\n    function getApproved(uint256 tokenId) public view returns (address) {\r\n        require(_exists(tokenId));\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n```\r\n\r\n`_isApprovedOrOwner` will return true if spender is address(0) and getApproved(tokenId) return 0\r\n\r\n```\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\r\n        address owner = ERC721.ownerOf(tokenId);\r\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\r\n    }\r\n```\r\n\r\n\r\n**üî¢ Code to reproduce bug**\r\n\r\nAny call with spender = address(0) will produce the problem.",
  "closed_by": {
    "login": "elv-serban",
    "id": 29080995,
    "node_id": "MDQ6VXNlcjI5MDgwOTk1",
    "avatar_url": "https://avatars.githubusercontent.com/u/29080995?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/elv-serban",
    "html_url": "https://github.com/elv-serban",
    "followers_url": "https://api.github.com/users/elv-serban/followers",
    "following_url": "https://api.github.com/users/elv-serban/following{/other_user}",
    "gists_url": "https://api.github.com/users/elv-serban/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/elv-serban/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/elv-serban/subscriptions",
    "organizations_url": "https://api.github.com/users/elv-serban/orgs",
    "repos_url": "https://api.github.com/users/elv-serban/repos",
    "events_url": "https://api.github.com/users/elv-serban/events{/privacy}",
    "received_events_url": "https://api.github.com/users/elv-serban/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3659/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3659/timeline",
  "performed_via_github_app": null,
  "state_reason": "reopened"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1231559886",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3659#issuecomment-1231559886",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3659",
    "id": 1231559886,
    "node_id": "IC_kwDOA9tCBs5JaBzO",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-30T11:51:58Z",
    "updated_at": "2022-08-30T11:51:58Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @elv-serban \r\n\r\nUnder what circumstances do you expect `spender` to be `address(0)`? In our codebase, `ERC721._isApprovedOrOwner` is always called with `_msgSender()` as its first argument. \r\n\r\nAdding this check will have a cost ... and many devs already think we are doing to much of these, leading to gas waste. I'd like to fully understand the logic that would have some dev call this function with address(0) and understand the resulting risks.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1231559886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1232045034",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3659#issuecomment-1232045034",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3659",
    "id": 1232045034,
    "node_id": "IC_kwDOA9tCBs5Jb4Pq",
    "user": {
      "login": "elv-serban",
      "id": 29080995,
      "node_id": "MDQ6VXNlcjI5MDgwOTk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/29080995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elv-serban",
      "html_url": "https://github.com/elv-serban",
      "followers_url": "https://api.github.com/users/elv-serban/followers",
      "following_url": "https://api.github.com/users/elv-serban/following{/other_user}",
      "gists_url": "https://api.github.com/users/elv-serban/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elv-serban/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elv-serban/subscriptions",
      "organizations_url": "https://api.github.com/users/elv-serban/orgs",
      "repos_url": "https://api.github.com/users/elv-serban/repos",
      "events_url": "https://api.github.com/users/elv-serban/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elv-serban/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-30T18:58:13Z",
    "updated_at": "2022-08-30T18:58:13Z",
    "author_association": "NONE",
    "body": "The exact use case we ran into was an extension of the ERC721 that calls `_isApprovedOrOwner()` with the result of `ecrecover()` which returns 0 for a non-matching signature, thus the `spender` == `address(0)`.\r\n\r\nThis use case is outside of the openzep code of course.\r\n\r\nI know an additional `require()` might be too big of a hammer in this case.  Maybe the best option is to add a comment stating what the caller is required to do or check since it is not immediately obvious reading the code.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1232045034/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1232166361",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3659#issuecomment-1232166361",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3659",
    "id": 1232166361,
    "node_id": "IC_kwDOA9tCBs5JcV3Z",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-30T21:04:19Z",
    "updated_at": "2022-08-30T21:04:19Z",
    "author_association": "COLLABORATOR",
    "body": "My recommendation would be to not use ecrecover directly. We have a ECDSA library for that.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1232166361/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1232257677",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3659#issuecomment-1232257677",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3659",
    "id": 1232257677,
    "node_id": "IC_kwDOA9tCBs5JcsKN",
    "user": {
      "login": "elv-serban",
      "id": 29080995,
      "node_id": "MDQ6VXNlcjI5MDgwOTk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/29080995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elv-serban",
      "html_url": "https://github.com/elv-serban",
      "followers_url": "https://api.github.com/users/elv-serban/followers",
      "following_url": "https://api.github.com/users/elv-serban/following{/other_user}",
      "gists_url": "https://api.github.com/users/elv-serban/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elv-serban/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elv-serban/subscriptions",
      "organizations_url": "https://api.github.com/users/elv-serban/orgs",
      "repos_url": "https://api.github.com/users/elv-serban/repos",
      "events_url": "https://api.github.com/users/elv-serban/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elv-serban/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-30T23:03:01Z",
    "updated_at": "2022-08-30T23:03:01Z",
    "author_association": "NONE",
    "body": "Yes agreed.  I still think it is worth adding a prerequisites or requirements section to the function comment when there is potential for mistakes like this but this is up to you.\r\n\r\nSince there are no code changes needed, let me close this and you can decide if there is a good way to document to avoid traps.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1232257677/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1232270949",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3659#issuecomment-1232270949",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3659",
    "id": 1232270949,
    "node_id": "IC_kwDOA9tCBs5JcvZl",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-30T23:25:19Z",
    "updated_at": "2022-08-30T23:25:33Z",
    "author_association": "MEMBER",
    "body": "This is an interesting case for keeping the checks against non-zero addresses in the code. It's definitely an easy mistake for devs to directly pass the result of `ecrecover` to functions without considering that it could return zero and have undesired consequences.\r\n\r\nPersonally, I would consider adding this check. I wonder how much additional runtime and deployment cost it adds, but I can't imagine it will be too much.\r\n\r\nWill reopen to continue the discussion.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1232270949/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
