{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3076",
  "id": 1093244116,
  "node_id": "I_kwDOA9tCBs5BKZTU",
  "number": 3076,
  "title": "Confusion around what's maintained, what's not, and compatibility of packages.",
  "user": {
    "login": "hickscorp",
    "id": 822933,
    "node_id": "MDQ6VXNlcjgyMjkzMw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/822933?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hickscorp",
    "html_url": "https://github.com/hickscorp",
    "followers_url": "https://api.github.com/users/hickscorp/followers",
    "following_url": "https://api.github.com/users/hickscorp/following{/other_user}",
    "gists_url": "https://api.github.com/users/hickscorp/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hickscorp/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hickscorp/subscriptions",
    "organizations_url": "https://api.github.com/users/hickscorp/orgs",
    "repos_url": "https://api.github.com/users/hickscorp/repos",
    "events_url": "https://api.github.com/users/hickscorp/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hickscorp/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2022-01-04T11:05:44Z",
  "updated_at": "2022-12-09T14:38:23Z",
  "closed_at": "2022-12-09T14:38:22Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Good morning,\r\n\r\nWe've been using OpenZeppelin for a while now and have deployed contracts relying on the upgrade pattern a few years ago, and have upgraded them several times ever since.\r\n\r\nLast year or so, we started using packages that require Solc to be `>= 8.0.0`, so we started patching OpenZeppelin headers in our `node_modules` folder using a `yarn build` script - so instead of having `pragma solidity >=0.4.24 <0.7.0;` in `initializable.sol`, we would have a requirement matching our `8.0.x` compiler.\r\n\r\nI have a question - and possibly an issue based on the answer:\r\n- Is there anything preventing `initializable.sol` to relax its requirements to `pragma solidity >=0.4.24 <0.9.0;`? The only problem that I could see would be around the `assembly { cs := extcodesize(self) }` call - with `0.8.0`, if I understood correctly, there's a problem with the reported size? But the problem disappears in `0.8.1` - is this statement correct?\r\n- If this last statement is correct, would it be possible to have this compiler version requirement bumped as suggested here - but instead with a warning in the documentation?",
  "closed_by": {
    "login": "JulissaDantes",
    "id": 8561085,
    "node_id": "MDQ6VXNlcjg1NjEwODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8561085?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JulissaDantes",
    "html_url": "https://github.com/JulissaDantes",
    "followers_url": "https://api.github.com/users/JulissaDantes/followers",
    "following_url": "https://api.github.com/users/JulissaDantes/following{/other_user}",
    "gists_url": "https://api.github.com/users/JulissaDantes/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JulissaDantes/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JulissaDantes/subscriptions",
    "organizations_url": "https://api.github.com/users/JulissaDantes/orgs",
    "repos_url": "https://api.github.com/users/JulissaDantes/repos",
    "events_url": "https://api.github.com/users/JulissaDantes/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JulissaDantes/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1005503195",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3076#issuecomment-1005503195",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076",
    "id": 1005503195,
    "node_id": "IC_kwDOA9tCBs477sLb",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-05T09:07:33Z",
    "updated_at": "2022-01-05T09:08:06Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @hickscorp \r\n\r\nSolidity versions are breaking change. You cannot just simply take any 0.6.x or 0.7.x contract and mark it as 0.8.x. Stuff will break.\r\n\r\nOpenzeppelin provides different versions of its contract depending on which solidity version you use\r\n\r\n- @openzeppelin/contracts 3.x uses solidity 0.6.x (old, but still receiving security updates) \r\n- @openzeppelin/contracts 3.x-solc-0.7 uses solidity 0.7.x (old, but still receiving security updates) \r\n- @openzeppelin/contracts 4.x uses solidity 0.8.x (latest version, actively concerned)\r\n\r\nYou should choose the version of openzeppelin contract that matches your solidity requirements, and not try to modify the contract pragma ... as this can lead to unexpected behavior.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1005503195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1005600279",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3076#issuecomment-1005600279",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076",
    "id": 1005600279,
    "node_id": "IC_kwDOA9tCBs478D4X",
    "user": {
      "login": "hickscorp",
      "id": 822933,
      "node_id": "MDQ6VXNlcjgyMjkzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/822933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hickscorp",
      "html_url": "https://github.com/hickscorp",
      "followers_url": "https://api.github.com/users/hickscorp/followers",
      "following_url": "https://api.github.com/users/hickscorp/following{/other_user}",
      "gists_url": "https://api.github.com/users/hickscorp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hickscorp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hickscorp/subscriptions",
      "organizations_url": "https://api.github.com/users/hickscorp/orgs",
      "repos_url": "https://api.github.com/users/hickscorp/repos",
      "events_url": "https://api.github.com/users/hickscorp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hickscorp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-05T11:21:15Z",
    "updated_at": "2022-01-05T11:24:33Z",
    "author_association": "NONE",
    "body": "Good morning @Amxx and thanks a lot for explaining.\r\n\r\nIn this case - is there a way to re-deploy the contracts compiled using a newer version to a new address and keeping the data segment of the proxy?\r\n\r\nTo make things a bit clearer - we started using features that at that time were experimental (for example having data structure and not just scalars) as return values.\r\nSo we will thought that it would be fairly important to migrate to the compiler that accepted these features as stable when possible.\r\n\r\nAlso - imagine a contract deployed a while ago using solidity 0.7. If we want to upgrade to solc 0.8 - can we simply have the OpenZeppelin version bumped accordingly, or would this break too, for the existing / deployed contracts?\r\nWhat we're not 100% clear about is upgrading - given a contract already deployed - can we upgrade that contract using a newer version of Solc and OpenZeppelin?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1005600279/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1007327057",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3076#issuecomment-1007327057",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076",
    "id": 1007327057,
    "node_id": "IC_kwDOA9tCBs48CpdR",
    "user": {
      "login": "hickscorp",
      "id": 822933,
      "node_id": "MDQ6VXNlcjgyMjkzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/822933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hickscorp",
      "html_url": "https://github.com/hickscorp",
      "followers_url": "https://api.github.com/users/hickscorp/followers",
      "following_url": "https://api.github.com/users/hickscorp/following{/other_user}",
      "gists_url": "https://api.github.com/users/hickscorp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hickscorp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hickscorp/subscriptions",
      "organizations_url": "https://api.github.com/users/hickscorp/orgs",
      "repos_url": "https://api.github.com/users/hickscorp/repos",
      "events_url": "https://api.github.com/users/hickscorp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hickscorp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T11:12:19Z",
    "updated_at": "2022-01-07T11:48:41Z",
    "author_association": "NONE",
    "body": "A quick bump on this - we are not finding documentation around this topic - Solc version upgrade.\r\nWe're in a state where we already upgraded our compiler and upgraded smart contracts live without problem - but now we've put things in stand-by as it feels like we need to understand more.\r\n\r\n- If we upgrade Solc **and** OpenZeppelin on an existing project, would it work? Or are we \"stuck\" forever with the versions used for the very first deploy?\r\n- Also - if we actually made that mistake - would you say that we should rollback to previous versions?\r\n\r\nJust so our situation is clearer - when we updated to Solc 0.8.x, we also upgraded OZ dependencies, such as:\r\n\r\n```\r\n    \"@openzeppelin/cli\": \"^2.5.2\",\r\n    \"@openzeppelin/contracts\": \"^4.4.0\",\r\n    \"@openzeppelin/contracts-ethereum-package\": \"^3.0.0\",\r\n    \"@openzeppelin/upgrades\": \"^2.5.2\",\r\n```\r\n\r\nBut again - we already had deployed this on-chain - and the contract upgradability is provided by `@openzeppelin/upgrades` as it was the only way by then. Is it an issue?\r\n\r\nMaybe this is where we should have started the discussion :) We actually are using `@openzeppelin/contracts` at `4.4.0`. But we're getting the pragma warning, as `@openzeppelin/upgrades/contracts/Initializable.sol` has a requirement on Solc being `<7.0.0`. So which `@openzeppelin/upgrades` version should we use - and most importantly - can we update it as we now use Solc 0.8.x? We understand that `@openzeppelin/upgrades` is not developed anymore so shall we switch to an OpenZeppelin plugin as suggested [here](https://docs.openzeppelin.com/upgrades-plugins/1.x/)?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1007327057/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1007420809",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3076#issuecomment-1007420809",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076",
    "id": 1007420809,
    "node_id": "IC_kwDOA9tCBs48DAWJ",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T13:47:58Z",
    "updated_at": "2022-01-07T13:48:05Z",
    "author_association": "COLLABORATOR",
    "body": "There are a lot of things here:\r\n\r\n- You cannot change the code of a \"normal\" contract that is already deployed onchain. If your contract is upgradeable, you can have the proxy point to a new instance (which is doing an upgrade) ... and we made sure that we have backward compatibility between OpenZeppelin 3.x and 4.x, so you could technically do such an upgrade if you need to add new features in your contracts.\r\n\r\n- Contract compiled with solidity 0.8.x, 0.7.x, 0.6.x (and even earlier version) CAN interact with one another. If you have a contract created with solidity 0.6.x, you can create another contract with soldity 0.8.x and have it interact with it (call functions, ...). You'll been the interface available, but that shouldn't be a major issue.\r\n\r\n- The current packages are:\r\n  - @openzeppelin/contracts → \"vanilla\" contracts (4.4.1 is for solidity 0.8.x)\r\n  - @openzeppelin/contracts-upgradeable → the upgradeable version of the contracts (4.4.1 is for solidity 0.8.x)\r\n  - @openzeppelin/hardhat-upgrades → hardhat plugin for doing upgrades\r\n  - @openzeppelin/truffle-upgrades → truffle plugin for doing upgrades\r\n  \r\nThe `***-plugins` are really just tooling to create deployment/upgrade scripts with all the necessary checks. The `contracts` and `contracts-upgradeable` are what you use to write your smart-contract in the first place.\r\n  ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1007420809/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1007477626",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3076#issuecomment-1007477626",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076",
    "id": 1007477626,
    "node_id": "IC_kwDOA9tCBs48DON6",
    "user": {
      "login": "hickscorp",
      "id": 822933,
      "node_id": "MDQ6VXNlcjgyMjkzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/822933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hickscorp",
      "html_url": "https://github.com/hickscorp",
      "followers_url": "https://api.github.com/users/hickscorp/followers",
      "following_url": "https://api.github.com/users/hickscorp/following{/other_user}",
      "gists_url": "https://api.github.com/users/hickscorp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hickscorp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hickscorp/subscriptions",
      "organizations_url": "https://api.github.com/users/hickscorp/orgs",
      "repos_url": "https://api.github.com/users/hickscorp/repos",
      "events_url": "https://api.github.com/users/hickscorp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hickscorp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T15:03:21Z",
    "updated_at": "2022-01-07T15:04:47Z",
    "author_association": "NONE",
    "body": "Hi @Amxx Hadrien, and thanks a lot again for taking the time.\r\n\r\nWe are really familiar with the underlying concepts (Eg the fact that you can't upgrade code on chain, what you do is upgrade the implementation, and the proxy delegates to it and runs it \"atop\" the proxy data segment). This is very clear but thanks for a recap ;)\r\n\r\nIdeally, we don't want to move to any OpenZeppelin plugin - we're happy with what we have and how things work. We actually do not use `@openzeppelin/contracts` at all except for a few ERC20 interfaces - today we removed the dependency and simply declared these interfaces as part of our own project - all good.\r\n\r\nWhat we use however is `@openzeppelin/upgrades`. We cannot update to plugins because during the upgrade process it finds what it calls `legacy libraries in our manifest`. We won't go that route.\r\n\r\nThe problem that I think we have is the fact that we upgraded Solc several times manually (From `0.5.x` all the way to `0.8.x`) - to a point where `Initializable.sol` won't compile anymore because of the Solc version requirement. But when looking at `initializable.sol` code, we realised that the only potential breaking point is `assembly { cs := extcodesize(self) }`, which however would never be called unless deploying a **new** contract (it's in a guard for the initializer). This is why we thought that patching the pragma was OK.\r\n\r\nThe other problem we spotted was that in `@openzeppelin/upgrades`, all files are marked `pragma solidity ^0.5.0;` (Eg `AdminUpgradeabilityProxy.sol` etc) - but we don't know if there's no upper limit because it would simply work, or if it is because `@openzeppelin/upgrades` wasn't updated for a very long time.\r\n\r\nSo in a nutshell - patching `Initializable.sol` still seems fine - doesn't it?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1007477626/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1007504806",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3076#issuecomment-1007504806",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076",
    "id": 1007504806,
    "node_id": "IC_kwDOA9tCBs48DU2m",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T15:38:53Z",
    "updated_at": "2022-01-07T15:39:14Z",
    "author_association": "COLLABORATOR",
    "body": "`@openzeppelin/upgrades` is not supported anymore (it was deprecated before I even joined OZ 😄). It was replaced by the upgrades plugin, which contains the tooling for managing upgrades but not the contracts. This is why I was mentioning the plugins.\r\n\r\n`Initializable.sol` is now provided as part of our contract libraries. Note that this files received a recent changes.\r\nThe relevant version that you may be interested in are:\r\n\r\n- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.4.1/contracts/proxy/utils/Initializable.sol (0.8.x latest)\r\n- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.4.0/contracts/proxy/utils/Initializable.sol (0.8.x historical)\r\n- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2-solc-0.7/contracts/proxy/Initializable.sol (0.7.x)\r\n- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/proxy/Initializable.sol (0.6.x)\r\n\r\nConsidering this contract has no constructor, you can indeed create a version that has a looser pragma that will support a wide range of compilers from 0.5.x to 0.8.x and package it with your code.\r\n\r\n`AdminUpgradeabilityProxy` was renamed/replaced with `TransparentUpgradeableProxy` that you can also find in 0.6.x, 0.7.x and 0.8.x variations directly in the `@openzeppelin/contracts` package.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1007504806/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1007597243",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3076#issuecomment-1007597243",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076",
    "id": 1007597243,
    "node_id": "IC_kwDOA9tCBs48Dra7",
    "user": {
      "login": "hickscorp",
      "id": 822933,
      "node_id": "MDQ6VXNlcjgyMjkzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/822933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hickscorp",
      "html_url": "https://github.com/hickscorp",
      "followers_url": "https://api.github.com/users/hickscorp/followers",
      "following_url": "https://api.github.com/users/hickscorp/following{/other_user}",
      "gists_url": "https://api.github.com/users/hickscorp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hickscorp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hickscorp/subscriptions",
      "organizations_url": "https://api.github.com/users/hickscorp/orgs",
      "repos_url": "https://api.github.com/users/hickscorp/repos",
      "events_url": "https://api.github.com/users/hickscorp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hickscorp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T17:35:24Z",
    "updated_at": "2022-01-07T17:35:24Z",
    "author_association": "NONE",
    "body": "This is very helpful, and I'm sure will also be of use for future users. Thank you very much for your candor @Amxx Hadrian!\r\n\r\nOur final choice is to stick with `@openzeppelin/upgrades` for now - as we are not using anything else from the OpenZeppelin suite except for the cli - and we're happy with it.\r\n\r\nAt some point, we will see if we can migrate to `@openzeppelin/contracts` and use that other `Initializable.sol` contract.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1007597243/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1117037519",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3076#issuecomment-1117037519",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076",
    "id": 1117037519,
    "node_id": "IC_kwDOA9tCBs5ClKPP",
    "user": {
      "login": "hickscorp",
      "id": 822933,
      "node_id": "MDQ6VXNlcjgyMjkzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/822933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hickscorp",
      "html_url": "https://github.com/hickscorp",
      "followers_url": "https://api.github.com/users/hickscorp/followers",
      "following_url": "https://api.github.com/users/hickscorp/following{/other_user}",
      "gists_url": "https://api.github.com/users/hickscorp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hickscorp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hickscorp/subscriptions",
      "organizations_url": "https://api.github.com/users/hickscorp/orgs",
      "repos_url": "https://api.github.com/users/hickscorp/repos",
      "events_url": "https://api.github.com/users/hickscorp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hickscorp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-04T08:10:11Z",
    "updated_at": "2022-05-04T09:16:00Z",
    "author_association": "NONE",
    "body": "@Amxx I'm going to revive this thread, as we are starting a new project and we're again a bit confused. I've just opened an issue (more of a \"what do you guys think\") here: https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3391\r\n\r\nRelated to it, there are a few other questions - but I think these other questions have their place here instead.\r\n\r\n[...]\r\n\r\nIt could be that we need to use is `ProxyFactory`, as explained on various (outdated?) sources... But it seems that `ProxyFactory` is deprecated (as it lives in the `@openzeppelin/upgrades` package, and I remember @Amxx saying that it )?\r\n\r\nWhat should be the dependency we use for our brand new project then - and if the only thing we're interested in is upgradeability features - probably `@openzeppelin/contracts`?\r\n\r\nIt's still very confusing - in the sense that when we install `@openzeppelin/cli`, the deprecated `@openzeppelin/upgrades` packages gets also added - but apparently it's too old? Is `@openzeppelin/cli` even still a thing, or should we ideally scratch using it, and do everything using `@openzeppelin/truffle-upgrades` programmatically?\r\n\r\nOn the OpenZeppelin SDK main repo, it says that the OpenZeppelin SDK isn't actively deployed anymore - and to use Upgrade Plugins. But if we decide to go for the `@openzeppelin/truffle-upgrades`, then the `Initializable.sol` file we would need to use is not usable, as we use `solc 0.8.x`... Also, `@openzeppelin/truffle-upgrades` relies on `@openzeppelin/upgrades-core`, itself with the same issue for us - its `Initializable.sol` declares `pragma solidity >=0.4.24 <0.7.0;`.\r\n\r\nAll in all, I'm super confused around all this. We use Truffle mainly for the test framework - we don't use their migrations - and we were relying on the `oz` CLI to deploy and upgrade stuff. For that new project, we don't have to use Truffle - but it's still not clear what the requirements are to be able to use a maintained version of OpenZeppelin Upgradeability features... And if we use Truffle, then we can also forget about linking against libraries, unless using `/// @custom:oz-upgrades-unsafe-allow external-library-linking`... So any guidance would really be appreciated here :)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1117037519/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1117945522",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3076#issuecomment-1117945522",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076",
    "id": 1117945522,
    "node_id": "IC_kwDOA9tCBs5Con6y",
    "user": {
      "login": "cruzdanilo",
      "id": 216636,
      "node_id": "MDQ6VXNlcjIxNjYzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/216636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cruzdanilo",
      "html_url": "https://github.com/cruzdanilo",
      "followers_url": "https://api.github.com/users/cruzdanilo/followers",
      "following_url": "https://api.github.com/users/cruzdanilo/following{/other_user}",
      "gists_url": "https://api.github.com/users/cruzdanilo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cruzdanilo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cruzdanilo/subscriptions",
      "organizations_url": "https://api.github.com/users/cruzdanilo/orgs",
      "repos_url": "https://api.github.com/users/cruzdanilo/repos",
      "events_url": "https://api.github.com/users/cruzdanilo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cruzdanilo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-04T21:15:38Z",
    "updated_at": "2022-05-04T21:15:38Z",
    "author_association": "NONE",
    "body": "> * ... and we made sure that we have backward compatibility between OpenZeppelin 3.x and 4.x, so you could technically do such an upgrade if you need to add new features in your contracts.\r\n\r\n@Amxx can you expand on that? it doesn't seem to hold true for all contracts. i had a big issue upgrading `ERC721`/`ERC721Enumerable` from v3 to v4 because the storage layout changed. fortunately, i discovered it while still on testnet, but it could be disastrous.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1117945522/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1117967564",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3076#issuecomment-1117967564",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076",
    "id": 1117967564,
    "node_id": "IC_kwDOA9tCBs5CotTM",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-04T21:48:37Z",
    "updated_at": "2022-05-04T21:48:37Z",
    "author_association": "COLLABORATOR",
    "body": "@hickscorp \r\n\r\nBoth `@openzeppelin/upgrades` and `@openzeppelin/cli` are deprecated. Right now OpenZeppeling doesn't provide a self-standing SDK for deploying contracts.\r\n\r\nOur recommendation is to use truffle or hardhat (I'd personally go for hardhat), with our contract and plugins. For reference, [this](https://github.com/Amxx/amxx-hre/blob/master/package.json#L20-L35) is my goto package for new hacks/projects. I then usually build custom deployment hardhat scripts using `ethers` and `@openzeppelin/hardhat-upgrades`.\r\n\r\nNow about `Initializable.sol` in `@openzeppelin/upgrades-core`, its here for backwards compatibility, because some people might still rely on it being there (IMO they shouldn't).\r\n\r\nIMO:\r\n- all you contracts dependencies should be on `@openzeppelin/contracts` and `@openzeppelin/contracts-upgradeable`.\r\n- you should not try to get OZ contracts from anywhere else, unless its technological debt that you are carrying forward.\r\n- the upgrades plugin will deploy proxies compiled with 0.8.2 (if I remember correctly) that are pre-packages, you don't need to worry about them\r\n- the upgrades plugin might internally use some older contracts for testing, you should just ignore them if you see them in your dependency tree.\r\n\r\nFor the actual dependency hell:\r\n- If you depend on our contracts, they don't come with any dependency, so your are good here.\r\n- If you use our plugins, \r\n  - the hardhat version gets \"@openzeppelin/upgrades-core\", \"chalk\" and \"proper-lockfile\"\r\n  - the truffle version gets \"@openzeppelin/upgrades-core\", \"@truffle/contract\", \"chalk\", \"solidity-ast\"\r\n    - that will carry a lot, but I would say its part of working with truffle\r\n  - the \"@openzeppelin/upgrades-core\" gets 8 packages, which IMO are not that bad.\r\n\r\nI would say that if you are using truffle/web3.js, and feel like you are in dependency hell, its probably not really because of us.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1117967564/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1117968427",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3076#issuecomment-1117968427",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076",
    "id": 1117968427,
    "node_id": "IC_kwDOA9tCBs5Cotgr",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-04T21:49:58Z",
    "updated_at": "2022-05-04T21:50:23Z",
    "author_association": "COLLABORATOR",
    "body": "@cruzdanilo\r\n\r\n> i had a big issue upgrading `ERC721`/`ERC721Enumerable` from v3 to v4 because the storage layout changed. fortunately\r\n\r\nCould you please open an issue about that, explaining what your upgrade was, and what issue you ran into? I think this deserves its very own topic.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1117968427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1117992813",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3076#issuecomment-1117992813",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076",
    "id": 1117992813,
    "node_id": "IC_kwDOA9tCBs5Cozdt",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-04T22:29:19Z",
    "updated_at": "2022-05-04T22:29:19Z",
    "author_association": "MEMBER",
    "body": "To clarify on `Initializable.sol`: this contract is now included in the OpenZeppelin Contracts packages: `@openzeppelin/contracts` and `@openzeppelin/contracts-upgradeable`.\r\n\r\n\"Dependency hell\" is not a good name for this discussion. Please try to make it actionable.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1117992813/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1120456201",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3076#issuecomment-1120456201",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076",
    "id": 1120456201,
    "node_id": "IC_kwDOA9tCBs5CyM4J",
    "user": {
      "login": "hickscorp",
      "id": 822933,
      "node_id": "MDQ6VXNlcjgyMjkzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/822933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hickscorp",
      "html_url": "https://github.com/hickscorp",
      "followers_url": "https://api.github.com/users/hickscorp/followers",
      "following_url": "https://api.github.com/users/hickscorp/following{/other_user}",
      "gists_url": "https://api.github.com/users/hickscorp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hickscorp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hickscorp/subscriptions",
      "organizations_url": "https://api.github.com/users/hickscorp/orgs",
      "repos_url": "https://api.github.com/users/hickscorp/repos",
      "events_url": "https://api.github.com/users/hickscorp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hickscorp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-08T17:21:37Z",
    "updated_at": "2022-05-08T17:23:08Z",
    "author_association": "NONE",
    "body": "@amxx Thanks a lot for taking the time, it helps a lot. I'm sure it will also clarify the situation for others.\r\n@frangio you are absolutely right - this was a mis-naming on my end when I created the issue a long time ago - my bad. I will edit it to suit better the problem I was trying to clarify.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1120456201/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1344386672",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3076#issuecomment-1344386672",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3076",
    "id": 1344386672,
    "node_id": "IC_kwDOA9tCBs5QIbZw",
    "user": {
      "login": "JulissaDantes",
      "id": 8561085,
      "node_id": "MDQ6VXNlcjg1NjEwODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8561085?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JulissaDantes",
      "html_url": "https://github.com/JulissaDantes",
      "followers_url": "https://api.github.com/users/JulissaDantes/followers",
      "following_url": "https://api.github.com/users/JulissaDantes/following{/other_user}",
      "gists_url": "https://api.github.com/users/JulissaDantes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JulissaDantes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JulissaDantes/subscriptions",
      "organizations_url": "https://api.github.com/users/JulissaDantes/orgs",
      "repos_url": "https://api.github.com/users/JulissaDantes/repos",
      "events_url": "https://api.github.com/users/JulissaDantes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JulissaDantes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-09T14:38:22Z",
    "updated_at": "2022-12-09T14:38:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "This seems resolved",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1344386672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
