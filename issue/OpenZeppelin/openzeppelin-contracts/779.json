{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/779",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/779/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/779/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/779/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/779",
  "id": 300883785,
  "node_id": "MDU6SXNzdWUzMDA4ODM3ODU=",
  "number": 779,
  "title": "Add optional Operators extension for ERC721",
  "user": {
    "login": "buhrmi",
    "id": 51177,
    "node_id": "MDQ6VXNlcjUxMTc3",
    "avatar_url": "https://avatars.githubusercontent.com/u/51177?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/buhrmi",
    "html_url": "https://github.com/buhrmi",
    "followers_url": "https://api.github.com/users/buhrmi/followers",
    "following_url": "https://api.github.com/users/buhrmi/following{/other_user}",
    "gists_url": "https://api.github.com/users/buhrmi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/buhrmi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/buhrmi/subscriptions",
    "organizations_url": "https://api.github.com/users/buhrmi/orgs",
    "repos_url": "https://api.github.com/users/buhrmi/repos",
    "events_url": "https://api.github.com/users/buhrmi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/buhrmi/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-02-28T04:03:22Z",
  "updated_at": "2018-03-04T09:33:52Z",
  "closed_at": "2018-03-04T09:33:52Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## 🎉 Description\r\n\r\nWith ERC721 slowly being finalized, we found that \"operators\" are a desired feature. It's not going to be included in the standard, but it's a nice optional extension. I've added some crude code below that extends the ERC721Token contract with operators. Please let me know your thoughts.\r\n\r\n- [ ] 🐛 This is a bug report.\r\n- [ ] 📈 This is a feature request.\r\n\r\n## 👍 Other Information\r\n\r\n```\r\npragma solidity ^0.4.18;\r\n\r\nimport \"./ERC721Token.sol\";\r\n\r\n/**\r\n * @title OperatedToken\r\n * Implements the optional Operator extension.\r\n */\r\ncontract OperatedToken is ERC721Token {\r\n  event AuthorizedOperator(address indexed _owner, address indexed _operator);\r\n  event RevokedOperator(address indexed _owner, address indexed _operator);\r\n    \r\n  mapping(address => mapping(address => bool)) internal tokenOperators;\r\n  \r\n  /**\r\n  * @dev Guarantees msg.sender is owner or operator of the given token\r\n  * @param _tokenId uint256 ID of the token to validate its ownership belongs to msg.sender\r\n  */\r\n  modifier onlyOwnerOrOperatorOf(uint256 _tokenId) {\r\n    require(ownerOf(_tokenId) == msg.sender || isOperatorFor(msg.sender, ownerOf(_tokenId)));\r\n    _;\r\n  }\r\n\r\n  function authorizeOperator(address _operator) public {\r\n    tokenOperators[msg.sender][_operator] = true;\r\n    AuthorizedOperator(msg.sender, _operator);\r\n  }\r\n\r\n  function revokeOperator(address _operator) public {\r\n    tokenOperators[msg.sender][_operator] = false;\r\n    RevokedOperator(msg.sender, _operator);\r\n  }\r\n\r\n  function isOperatorFor(address _operator, address _owner) public constant returns (bool) {\r\n    return tokenOperators[_owner][_operator];\r\n  }\r\n\r\n  /**\r\n  * @dev Transfers the ownership of a given token ID to another address\r\n  * @param _to address to receive the ownership of the given token ID\r\n  * @param _tokenId uint256 ID of the token to be transferred\r\n  */\r\n  function transfer(address _to, uint256 _tokenId) public onlyOwnerOrOperatorOf(_tokenId) {\r\n    clearApprovalAndTransfer(msg.sender, _to, _tokenId);\r\n  }\r\n\r\n  /**\r\n  * @dev Approves another address to claim for the ownership of the given token ID\r\n  * @param _to address to be approved for the given token ID\r\n  * @param _tokenId uint256 ID of the token to be approved\r\n  */\r\n  function approve(address _to, uint256 _tokenId) public onlyOwnerOrOperatorOf(_tokenId) {\r\n    address owner = ownerOf(_tokenId);\r\n    require(_to != owner);\r\n    if (approvedFor(_tokenId) != 0 || _to != 0) {\r\n      tokenApprovals[_tokenId] = _to;\r\n      Approval(owner, _to, _tokenId);\r\n    }\r\n  }\r\n}\r\n```\r\n",
  "closed_by": {
    "login": "buhrmi",
    "id": 51177,
    "node_id": "MDQ6VXNlcjUxMTc3",
    "avatar_url": "https://avatars.githubusercontent.com/u/51177?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/buhrmi",
    "html_url": "https://github.com/buhrmi",
    "followers_url": "https://api.github.com/users/buhrmi/followers",
    "following_url": "https://api.github.com/users/buhrmi/following{/other_user}",
    "gists_url": "https://api.github.com/users/buhrmi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/buhrmi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/buhrmi/subscriptions",
    "organizations_url": "https://api.github.com/users/buhrmi/orgs",
    "repos_url": "https://api.github.com/users/buhrmi/repos",
    "events_url": "https://api.github.com/users/buhrmi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/buhrmi/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/779/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/779/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/370209214",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/779#issuecomment-370209214",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/779",
    "id": 370209214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDIwOTIxNA==",
    "user": {
      "login": "eordano",
      "id": 42750,
      "node_id": "MDQ6VXNlcjQyNzUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/42750?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eordano",
      "html_url": "https://github.com/eordano",
      "followers_url": "https://api.github.com/users/eordano/followers",
      "following_url": "https://api.github.com/users/eordano/following{/other_user}",
      "gists_url": "https://api.github.com/users/eordano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eordano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eordano/subscriptions",
      "organizations_url": "https://api.github.com/users/eordano/orgs",
      "repos_url": "https://api.github.com/users/eordano/repos",
      "events_url": "https://api.github.com/users/eordano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eordano/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-04T07:53:10Z",
    "updated_at": "2018-03-04T07:53:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "With the recent changes to 841, these are now disguised as `setApprovalForAll`. I'd suggest we close this issue.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/370209214/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/370214811",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/779#issuecomment-370214811",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/779",
    "id": 370214811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDIxNDgxMQ==",
    "user": {
      "login": "buhrmi",
      "id": 51177,
      "node_id": "MDQ6VXNlcjUxMTc3",
      "avatar_url": "https://avatars.githubusercontent.com/u/51177?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buhrmi",
      "html_url": "https://github.com/buhrmi",
      "followers_url": "https://api.github.com/users/buhrmi/followers",
      "following_url": "https://api.github.com/users/buhrmi/following{/other_user}",
      "gists_url": "https://api.github.com/users/buhrmi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buhrmi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buhrmi/subscriptions",
      "organizations_url": "https://api.github.com/users/buhrmi/orgs",
      "repos_url": "https://api.github.com/users/buhrmi/repos",
      "events_url": "https://api.github.com/users/buhrmi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buhrmi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-04T09:33:52Z",
    "updated_at": "2018-03-04T09:33:52Z",
    "author_association": "NONE",
    "body": "makes sense. Will work on a new implementation.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/370214811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
