{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3145",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3145/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3145/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3145/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3145",
  "id": 1117295214,
  "node_id": "I_kwDOA9tCBs5CmJJu",
  "number": 3145,
  "title": "Add a safePermit function for ensuring reverting calls to ERC20.permit()",
  "user": {
    "login": "hjorthjort",
    "id": 8545447,
    "node_id": "MDQ6VXNlcjg1NDU0NDc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8545447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjorthjort",
    "html_url": "https://github.com/hjorthjort",
    "followers_url": "https://api.github.com/users/hjorthjort/followers",
    "following_url": "https://api.github.com/users/hjorthjort/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjorthjort/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjorthjort/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjorthjort/subscriptions",
    "organizations_url": "https://api.github.com/users/hjorthjort/orgs",
    "repos_url": "https://api.github.com/users/hjorthjort/repos",
    "events_url": "https://api.github.com/users/hjorthjort/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjorthjort/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/10",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/10",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/10/labels",
    "id": 7788276,
    "node_id": "MI_kwDOA9tCBs4Adtb0",
    "number": 10,
    "title": "4.7",
    "description": "",
    "creator": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 24,
    "state": "closed",
    "created_at": "2022-03-21T15:43:38Z",
    "updated_at": "2022-07-13T07:28:46Z",
    "due_on": "2022-06-29T07:00:00Z",
    "closed_at": "2022-07-13T07:28:46Z"
  },
  "comments": 5,
  "created_at": "2022-01-28T11:25:41Z",
  "updated_at": "2022-06-07T15:17:02Z",
  "closed_at": "2022-06-07T15:17:02Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nThe Multichain/AnySwap exploits were caused by smart contracts incorrectly assuming that a failed `permit` call would always revert. This is similar to how a smart contract might assume that calls to `transfer` or `approve` will revert if they fail. For this, OpenZeppelin's `SafeERC20` library has the `safeTransfer`, `safeTransferFrom`, `safeApprove`, etc.\r\n \r\n**üìù Details**\r\n[ERC2612](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2612.md) `permit` functions do not return any value to indicate success, they only revert. However, a \"phantom function\"  call behaves exactly like a successful call, unless state is inspected.\r\n\r\nERC2612 tokens maintain and expose a mapping of nonces, and a successful call to `permit` MUST increment the nonce of the owner address. This state update can be observed to ensure that a permit function has successfully been called.\r\n\r\nThe suggested file for this would be `contracts/token/ERC20/utils/SafeERC20Permit.sol`.\r\n\r\n```solidity\r\nimport \"../extensions/draft-IERC20Permit.sol\";\r\n\r\nlibrary SafeERC20Permit {\r\n\r\n    function safePermit(\r\n        IERC20Permit token,\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal {\r\n        uint256 nonce = token.nonces(owner);\r\n        token.permit(owner, spender, value, deadline, v, r, s);\r\n        uint256 newNonce = token.nonces(owner);\r\n        require (newNonce == nonce + 1, \"SafeERC20Permit: permit did not succeed\");\r\n    }\r\n}\r\n```",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3145/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3145/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1024590110",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3145#issuecomment-1024590110",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3145",
    "id": 1024590110,
    "node_id": "IC_kwDOA9tCBs49EgEe",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-28T19:58:11Z",
    "updated_at": "2022-01-28T19:58:11Z",
    "author_association": "MEMBER",
    "body": "Thanks for sharing the idea @hjorthjort. I think it makes sense to have a `safePermit` and your suggested mplementation looks good to me. I'd like to hear other opinions as well.\r\n\r\nIt's worth noting that if permit is a phantom function then `token.nonces(owner)` is likely going to revert anyway because the returndata will be empty and won't decode to a uint.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1024590110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1027220749",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3145#issuecomment-1027220749",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3145",
    "id": 1027220749,
    "node_id": "IC_kwDOA9tCBs49OiUN",
    "user": {
      "login": "duckki",
      "id": 3218836,
      "node_id": "MDQ6VXNlcjMyMTg4MzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3218836?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duckki",
      "html_url": "https://github.com/duckki",
      "followers_url": "https://api.github.com/users/duckki/followers",
      "following_url": "https://api.github.com/users/duckki/following{/other_user}",
      "gists_url": "https://api.github.com/users/duckki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duckki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duckki/subscriptions",
      "organizations_url": "https://api.github.com/users/duckki/orgs",
      "repos_url": "https://api.github.com/users/duckki/repos",
      "events_url": "https://api.github.com/users/duckki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duckki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-01T19:44:55Z",
    "updated_at": "2022-02-01T19:44:55Z",
    "author_association": "NONE",
    "body": "I think it's a good protective measure to call nonces (if `permit()` call returned no value). However, I don't think it's feasible to verify the correctness of external token (by checking nonce before and after). Just calling once is enough to avoid undefined `permit` issue.\r\nAlso, adding a bool return value to the `permit` specification would help optimize `safePermit` implementions like this:\r\n```solidity\r\n    // Note: Pseudo-code\r\n    function safePermit( ... ) {\r\n        (success, data) = token.call(permit's hash, owner, spender, value, deadline, v, r, s);\r\n        if (data.length == 0) {\r\n            // compatibility mode\r\n            // double check whether the token actually implements ERC-2612's `nonces` function.\r\n            token.nonces(owner); // The return value is intentionally ignored.\r\n        }\r\n        else {\r\n            // If \"permit()\" call returns a bool value, we can avoid making another external call.\r\n            require( abi.decode(data, (bool)), ...); // check the return value.\r\n        }\r\n    }\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1027220749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1027858407",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3145#issuecomment-1027858407",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3145",
    "id": 1027858407,
    "node_id": "IC_kwDOA9tCBs49Q9_n",
    "user": {
      "login": "hjorthjort",
      "id": 8545447,
      "node_id": "MDQ6VXNlcjg1NDU0NDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8545447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hjorthjort",
      "html_url": "https://github.com/hjorthjort",
      "followers_url": "https://api.github.com/users/hjorthjort/followers",
      "following_url": "https://api.github.com/users/hjorthjort/following{/other_user}",
      "gists_url": "https://api.github.com/users/hjorthjort/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hjorthjort/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hjorthjort/subscriptions",
      "organizations_url": "https://api.github.com/users/hjorthjort/orgs",
      "repos_url": "https://api.github.com/users/hjorthjort/repos",
      "events_url": "https://api.github.com/users/hjorthjort/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hjorthjort/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-02T11:46:28Z",
    "updated_at": "2022-02-02T11:46:28Z",
    "author_association": "NONE",
    "body": "Thanks for the suggestion.\r\n\r\nI think it's unlikely to expect the `permit` specification to be updated. But if we can, then great!\r\n\r\nI'm not a big fan of the \"if the call succeeds then the function is implemented\" approach. It is generally *not* safe to assume a function will revert if it is not specifically implemented. Relying on contracts to not return any value for specific calls (instead of checking their semantic specification) feels like kicking the can down the road. But, I know this approach is used in `safeTransfer` for ERC20s, so maybe that makes sense as a consistency measure. But `safeTransfer` on ERC721s actually performs an external `call` (way more dangerous and costly).\r\n\r\nIn the case of EIP-2612 we have a simple measure in the fact that the semantics of nonces are extremely clear. In EIP-20 there is plenty of room for interpretation on how the contract should be updated. I think that since here we have a way to be more safe at a small gas cost, we should.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1027858407/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1075262331",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3145#issuecomment-1075262331",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3145",
    "id": 1075262331,
    "node_id": "IC_kwDOA9tCBs5AFzN7",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-22T14:35:53Z",
    "updated_at": "2022-03-22T14:35:53Z",
    "author_association": "COLLABORATOR",
    "body": "I wonder why you would check the nonce (needs two read) rather than checking the allowance (only one read needed).\r\n\r\nAfter all, I'm not sure we care about the nonce behavior (might work differently) as long as the approval is set correctly, right?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1075262331/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1075475542",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3145#issuecomment-1075475542",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3145",
    "id": 1075475542,
    "node_id": "IC_kwDOA9tCBs5AGnRW",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-22T18:22:17Z",
    "updated_at": "2022-03-22T18:22:17Z",
    "author_association": "MEMBER",
    "body": "Checking allowance is not enough to veify that a permit was used successfully, because the allowance may just happen to be the same value contained in the permit.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1075475542/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
