{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3216",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3216/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3216/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3216/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3216",
  "id": 1147215898,
  "node_id": "I_kwDOA9tCBs5EYSAa",
  "number": 3216,
  "title": "TimelockController 'salt' is unrecoverable yet required for execution ",
  "user": {
    "login": "0x0scion",
    "id": 96502796,
    "node_id": "U_kgDOBcCEDA",
    "avatar_url": "https://avatars.githubusercontent.com/u/96502796?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0x0scion",
    "html_url": "https://github.com/0x0scion",
    "followers_url": "https://api.github.com/users/0x0scion/followers",
    "following_url": "https://api.github.com/users/0x0scion/following{/other_user}",
    "gists_url": "https://api.github.com/users/0x0scion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0x0scion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0x0scion/subscriptions",
    "organizations_url": "https://api.github.com/users/0x0scion/orgs",
    "repos_url": "https://api.github.com/users/0x0scion/repos",
    "events_url": "https://api.github.com/users/0x0scion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0x0scion/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "JulissaDantes",
    "id": 8561085,
    "node_id": "MDQ6VXNlcjg1NjEwODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8561085?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JulissaDantes",
    "html_url": "https://github.com/JulissaDantes",
    "followers_url": "https://api.github.com/users/JulissaDantes/followers",
    "following_url": "https://api.github.com/users/JulissaDantes/following{/other_user}",
    "gists_url": "https://api.github.com/users/JulissaDantes/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JulissaDantes/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JulissaDantes/subscriptions",
    "organizations_url": "https://api.github.com/users/JulissaDantes/orgs",
    "repos_url": "https://api.github.com/users/JulissaDantes/repos",
    "events_url": "https://api.github.com/users/JulissaDantes/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JulissaDantes/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "JulissaDantes",
      "id": 8561085,
      "node_id": "MDQ6VXNlcjg1NjEwODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8561085?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JulissaDantes",
      "html_url": "https://github.com/JulissaDantes",
      "followers_url": "https://api.github.com/users/JulissaDantes/followers",
      "following_url": "https://api.github.com/users/JulissaDantes/following{/other_user}",
      "gists_url": "https://api.github.com/users/JulissaDantes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JulissaDantes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JulissaDantes/subscriptions",
      "organizations_url": "https://api.github.com/users/JulissaDantes/orgs",
      "repos_url": "https://api.github.com/users/JulissaDantes/repos",
      "events_url": "https://api.github.com/users/JulissaDantes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JulissaDantes/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/14",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/14",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/14/labels",
    "id": 8383880,
    "node_id": "MI_kwDOA9tCBs4Af-2I",
    "number": 14,
    "title": "4.9",
    "description": "",
    "creator": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 24,
    "state": "closed",
    "created_at": "2022-09-05T16:36:05Z",
    "updated_at": "2023-05-16T01:45:32Z",
    "due_on": null,
    "closed_at": "2023-05-16T01:45:32Z"
  },
  "comments": 6,
  "created_at": "2022-02-22T18:03:52Z",
  "updated_at": "2023-01-27T18:47:46Z",
  "closed_at": "2023-01-27T18:47:45Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "When scheduling a transaction using the `TimelockController`, one is required to provide a `salt` to distinguish otherwise identical transactions. The `salt` parameter is not emitted in the `CallScheduled` event which makes it impossible to recover. Yet `salt` is required for executing the scheduled transaction transaction, ~~even though it isn't necessary and more gas efficient if `id` is used instead~~.\r\n\r\n**üíª Environment**\r\n\r\nOpenzeppelin v4.5.0  / hardhat\r\n\r\n**üìù Details**\r\n\r\n`salt` is missing from the `CallScheduled` event: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/458697be32f41946e1ab66e946c7cf373c79577d/contracts/governance/TimelockController.sol#L35\r\n\r\n`salt` is required for the `execute` & `executeBatch` calls: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/458697be32f41946e1ab66e946c7cf373c79577d/contracts/governance/TimelockController.sol#L267\r\n\r\n~~Instead of `salt` the `execute` methods should be consuming the hashed operation (`id`) directly, since that id is readily available via event data. This would also save on gas since there is no need to re-run the hashing operation.~~\r\n\r\nHappy to submit a PR\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3216/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3216/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1048245298",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3216#issuecomment-1048245298",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3216",
    "id": 1048245298,
    "node_id": "IC_kwDOA9tCBs4-evQy",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-22T21:49:21Z",
    "updated_at": "2022-02-22T21:49:21Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @0x0scion and thanks for raising this issue\r\n\r\n> Instead of `salt` the `execute` methods should be consuming the hashed operation (`id`) directly, since that id is readily available via event data. This would also save on gas since there is no need to re-run the hashing operation.\r\n\r\nIf we don't run the hashing operation, how do we check that the other parameters (target, value, data) match the id that was scheduled? If we don't check that, you could possibly use any scheduled operation's id with unrelated params, and execute another operation.\r\n\r\nIt's true that the salt not being present in the event is disturbing. I wonder how we missed that / if we had a reason for not including it.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1048245298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1048999290",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3216#issuecomment-1048999290",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3216",
    "id": 1048999290,
    "node_id": "IC_kwDOA9tCBs4-hnV6",
    "user": {
      "login": "0x0scion",
      "id": 96502796,
      "node_id": "U_kgDOBcCEDA",
      "avatar_url": "https://avatars.githubusercontent.com/u/96502796?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x0scion",
      "html_url": "https://github.com/0x0scion",
      "followers_url": "https://api.github.com/users/0x0scion/followers",
      "following_url": "https://api.github.com/users/0x0scion/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x0scion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x0scion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x0scion/subscriptions",
      "organizations_url": "https://api.github.com/users/0x0scion/orgs",
      "repos_url": "https://api.github.com/users/0x0scion/repos",
      "events_url": "https://api.github.com/users/0x0scion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x0scion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-23T16:59:36Z",
    "updated_at": "2022-02-23T17:03:22Z",
    "author_association": "NONE",
    "body": "> If we don't run the hashing operation, how do we check that the other parameters (target, value, data) match the id that was scheduled? If we don't check that, you could possibly use any scheduled operation's id with unrelated params, and execute another operation.\r\n\r\nAh, yes, did not think this through all the way - striking out that suggestion above.\r\nSo just a matter of `salt` not being in the event.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1048999290/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1055240213",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3216#issuecomment-1055240213",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3216",
    "id": 1055240213,
    "node_id": "IC_kwDOA9tCBs4-5bAV",
    "user": {
      "login": "ashwinYardi",
      "id": 43699109,
      "node_id": "MDQ6VXNlcjQzNjk5MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/43699109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ashwinYardi",
      "html_url": "https://github.com/ashwinYardi",
      "followers_url": "https://api.github.com/users/ashwinYardi/followers",
      "following_url": "https://api.github.com/users/ashwinYardi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ashwinYardi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ashwinYardi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ashwinYardi/subscriptions",
      "organizations_url": "https://api.github.com/users/ashwinYardi/orgs",
      "repos_url": "https://api.github.com/users/ashwinYardi/repos",
      "events_url": "https://api.github.com/users/ashwinYardi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ashwinYardi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-01T09:55:25Z",
    "updated_at": "2022-03-01T09:55:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "> If we don't run the hashing operation, how do we check that the other parameters (target, value, data) match the id that was scheduled? If we don't check that, you could possibly use any scheduled operation's id with unrelated params, and execute another operation.\r\n\r\n@Amxx @0x0scion Hey guys! I was wondering, doesn't this logic also apply to `cancel` method? `cancel` method, at the moment, only accepts `id` as a param. So, its totally possible that, proposer can possibly cancel any other scheduled operation with unrelated params.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1055240213/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1055247452",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3216#issuecomment-1055247452",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3216",
    "id": 1055247452,
    "node_id": "IC_kwDOA9tCBs4-5cxc",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-01T10:00:42Z",
    "updated_at": "2022-03-01T10:00:42Z",
    "author_association": "COLLABORATOR",
    "body": "@ashwinYardi Cancel doesn't have other params. It just cancels the proposal that has a given ID.\r\n\r\nWe could have required the cancel call to send all the details, hash them, and cancel that, but it would have been more expensive, and not safer.\r\n\r\nIn short\r\n- execute: we are actually executing, so we need the execution details and we have to validate them;\r\n- cancel: we are just internally canceling, we don't need the execution details. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1055247452/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1055983877",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3216#issuecomment-1055983877",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3216",
    "id": 1055983877,
    "node_id": "IC_kwDOA9tCBs4-8QkF",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-01T23:50:51Z",
    "updated_at": "2022-03-01T23:50:51Z",
    "author_association": "MEMBER",
    "body": "So we need to emit the `salt` in an event, but we can't change the existing event because it changes the event selector, which is a little concerning because any monitoring infrastructure in place will not see the new event.\r\n\r\nWe can emit the salt in a new event `ProposalSalt(uint256 indexed proposalId, bytes32 salt)`.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1055983877/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1397753418",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3216#issuecomment-1397753418",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3216",
    "id": 1397753418,
    "node_id": "IC_kwDOA9tCBs5TUAZK",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T23:49:26Z",
    "updated_at": "2023-01-19T23:49:26Z",
    "author_association": "MEMBER",
    "body": "I would assume it's common to use salt=0. Feels like we could emit the event only when it isn't 0.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1397753418/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
