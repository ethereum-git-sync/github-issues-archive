{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1711",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1711/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1711/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1711/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1711",
  "id": 430194885,
  "node_id": "MDU6SXNzdWU0MzAxOTQ4ODU=",
  "number": 1711,
  "title": "ECDSA.sol recover() returns different address than ecrecover()",
  "user": {
    "login": "jdowning100",
    "id": 26939949,
    "node_id": "MDQ6VXNlcjI2OTM5OTQ5",
    "avatar_url": "https://avatars.githubusercontent.com/u/26939949?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jdowning100",
    "html_url": "https://github.com/jdowning100",
    "followers_url": "https://api.github.com/users/jdowning100/followers",
    "following_url": "https://api.github.com/users/jdowning100/following{/other_user}",
    "gists_url": "https://api.github.com/users/jdowning100/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jdowning100/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jdowning100/subscriptions",
    "organizations_url": "https://api.github.com/users/jdowning100/orgs",
    "repos_url": "https://api.github.com/users/jdowning100/repos",
    "events_url": "https://api.github.com/users/jdowning100/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jdowning100/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1034168915,
      "node_id": "MDU6TGFiZWwxMDM0MTY4OTE1",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/question",
      "name": "question",
      "color": "fcef8d",
      "default": true,
      "description": "Compilation errors, reverts on transactions, design questions."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-04-07T21:32:02Z",
  "updated_at": "2022-01-13T20:30:51Z",
  "closed_at": "2019-04-08T17:47:09Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "<!-- Briefly describe the issue you're experiencing. Tell us what you were trying to do and what happened instead. -->\r\nI may be going crazy, but it seems like ECDSA.recover() and ecrecover() return different addresses.\r\n\r\n**üî¢ Code to reproduce bug**\r\nHere's what I get from web3.accounts.sign():\r\n```\r\n{ message: 'This is a signed message',\r\n  messageHash:\r\n   '0x7aa10675d70f58a5e7427fdc02dfd8207ec1c637163aa974382c683fea3df843',\r\n  v: '0x1b',\r\n  r:\r\n   '0xf0150782e269d731548e9fe92eadd90e6178bcd7d2c948b2583e132020f8b44d',\r\n  s:\r\n   '0x23c27ecea23c7d9579807b2f574430fb5be4266ab50945c1c509bf04212d1294',\r\n  signature:\r\n   '0xf0150782e269d731548e9fe92eadd90e6178bcd7d2c948b2583e132020f8b44d23c27ecea23c7d9579807b2f574430fb5be4266ab50945c1c509bf04212d12941b' }\r\n```\r\n\r\n\r\nHere's the solidity code: \r\n\r\n```\r\nfunction verify(bytes32 hash, bytes memory signature) public view returns (address){\r\n        return ECDSA.recover(hash, signature);\r\n    }\r\n    \r\n```\r\n  ```\r\n  function testRecovery(bytes32 h, uint8 v, bytes32 r, bytes32 s) public view returns (address) {\r\n        bytes32 prefixedHash = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", h));\r\n        address addr = ecrecover(prefixedHash, v, r, s);\r\n\r\n        return addr;\r\n    }\r\n```\r\n**üìù Details**\r\n![Screenshot from 2019-04-07 16-25-23](https://user-images.githubusercontent.com/26939949/55690035-d575c900-5951-11e9-8937-0cbbbac4f67a.png)\r\nIs this even possible? I thought keccak was collision-resistant!\r\n<!-- Remember, this is not a place to ask for help debugging code. For that, we welcome you in the Zeppelin Forum: https://forum.zeppelin.solutions/. -->\r\n\r\n**üíª Environment**\r\n\r\n<!-- Tell us what version of OpenZeppelin you're using, and how you're using it: Truffle, Remix, etc. -->\r\n\r\nLatest OpenZeppelin, solidity 0.5.0, local Ethereum (pre-Constantinople, not mainnet, if that matters)\r\n\r\n<!-- Describe the problem you have been experiencing in more detail. Include as much information as you think is relevant. Keep in mind that transactions can fail for many reasons; context is key here. -->\r\n\r\n\r\n\r\n<!-- We will be able to better help if you provide a minimal example that triggers the bug. -->\r\n",
  "closed_by": {
    "login": "jdowning100",
    "id": 26939949,
    "node_id": "MDQ6VXNlcjI2OTM5OTQ5",
    "avatar_url": "https://avatars.githubusercontent.com/u/26939949?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jdowning100",
    "html_url": "https://github.com/jdowning100",
    "followers_url": "https://api.github.com/users/jdowning100/followers",
    "following_url": "https://api.github.com/users/jdowning100/following{/other_user}",
    "gists_url": "https://api.github.com/users/jdowning100/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jdowning100/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jdowning100/subscriptions",
    "organizations_url": "https://api.github.com/users/jdowning100/orgs",
    "repos_url": "https://api.github.com/users/jdowning100/repos",
    "events_url": "https://api.github.com/users/jdowning100/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jdowning100/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1711/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1711/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/480906805",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1711#issuecomment-480906805",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1711",
    "id": 480906805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDkwNjgwNQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-08T16:36:24Z",
    "updated_at": "2019-04-08T16:36:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello @jdowning100! I believe the issue is that you're recovering two different hashed messages: in the `ECDSA` test you provide the same `hash` value as you do for `h` in the `ecrecover` test, but this second one doesn't expect a hash like `ECDSA` does, but a message instead (which it then hashes).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/480906805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/480934096",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1711#issuecomment-480934096",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1711",
    "id": 480934096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDkzNDA5Ng==",
    "user": {
      "login": "jdowning100",
      "id": 26939949,
      "node_id": "MDQ6VXNlcjI2OTM5OTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/26939949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdowning100",
      "html_url": "https://github.com/jdowning100",
      "followers_url": "https://api.github.com/users/jdowning100/followers",
      "following_url": "https://api.github.com/users/jdowning100/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdowning100/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdowning100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdowning100/subscriptions",
      "organizations_url": "https://api.github.com/users/jdowning100/orgs",
      "repos_url": "https://api.github.com/users/jdowning100/repos",
      "events_url": "https://api.github.com/users/jdowning100/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdowning100/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-08T17:47:01Z",
    "updated_at": "2019-04-08T17:47:01Z",
    "author_association": "NONE",
    "body": "> Hello @jdowning100! I believe the issue is that you're recovering two different hashed messages: in the `ECDSA` test you provide the same `hash` value as you do for `h` in the `ecrecover` test, but this second one doesn't expect a hash like `ECDSA` does, but a message instead (which it then hashes).\r\n\r\nThat's actually not true - ecrecover() expects a hash of the message: https://github.com/ethereum/solidity/blob/develop/docs/units-and-global-variables.rst#mathematical-and-cryptographic-functions\r\nBut anyways, I discovered what I did wrong. The ECDSA contract has a function toEthSignedMessageHash() for prefixing the message hash with the proper \"\\x19Ethereum Signed Message:\\n32\" prefix but the function is unused. When I call toEthSignedMessageHash(hash) in recover() it works. \r\n(I should also note that web3.eth.accounts.sign adds the prefix, while web3.eth.sign does not, which is totally ridiculous)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/480934096/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/481022446",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1711#issuecomment-481022446",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1711",
    "id": 481022446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTAyMjQ0Ng==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-08T21:53:23Z",
    "updated_at": "2019-04-08T21:53:51Z",
    "author_association": "CONTRIBUTOR",
    "body": ">That's actually not true - ecrecover() expects a hash of the message\r\n\r\nYes, my bad - what I meant is that _your test function_ expected the hash (since `ECDSA.recover` does no hashing or prefixing).\r\n\r\n> (I should also note that web3.eth.accounts.sign adds the prefix, while web3.eth.sign does not, which is totally ridiculous)\r\n\r\nJeez, this sort of thing doesn't even surprise me any more, but still.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/481022446/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1010300573",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1711#issuecomment-1010300573",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1711",
    "id": 1010300573,
    "node_id": "IC_kwDOA9tCBs48N_ad",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-11T19:40:45Z",
    "updated_at": "2022-01-11T19:44:18Z",
    "author_association": "NONE",
    "body": "@jdowning100 @nventuro  hey, i am stuck on the same problem as you. So was the following code the solution ?\r\n`    \r\n\r\nfunction getSigner(bytes memory _sig, bytes32 _amount) public view returns(address)\r\n{\r\n      address temp = _amount.toEthSignedMessageHash().recover(_sig);\r\n      return temp;\r\n}\r\n\r\n`\r\nI have tried this code. But I am getting a different address from the one with which I signed my message.\r\nCould you check it out ?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1010300573/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1012492609",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1711#issuecomment-1012492609",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1711",
    "id": 1012492609,
    "node_id": "IC_kwDOA9tCBs48WWlB",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-13T20:30:51Z",
    "updated_at": "2022-01-13T20:30:51Z",
    "author_association": "MEMBER",
    "body": "@maksimjeet20566 Please create a topic in [our forum](forum.openzeppelin.com/) and share the code that you're using to generate and verify the signature.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1012492609/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
