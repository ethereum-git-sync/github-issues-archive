{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745",
  "id": 442592083,
  "node_id": "MDU6SXNzdWU0NDI1OTIwODM=",
  "number": 1745,
  "title": "ERC721 \"automatic\" token URI",
  "user": {
    "login": "abcoathup",
    "id": 28278242,
    "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/abcoathup",
    "html_url": "https://github.com/abcoathup",
    "followers_url": "https://api.github.com/users/abcoathup/followers",
    "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
    "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
    "organizations_url": "https://api.github.com/users/abcoathup/orgs",
    "repos_url": "https://api.github.com/users/abcoathup/repos",
    "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
    "received_events_url": "https://api.github.com/users/abcoathup/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650860,
      "node_id": "MDU6TGFiZWw1MDM2NTA4NjA=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/feature",
      "name": "feature",
      "color": "b9db64",
      "default": false,
      "description": "New contracts, functions, or helpers."
    },
    {
      "id": 1000207718,
      "node_id": "MDU6TGFiZWwxMDAwMjA3NzE4",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/contracts",
      "name": "contracts",
      "color": "1d76db",
      "default": false,
      "description": "Smart contract code."
    },
    {
      "id": 1000230196,
      "node_id": "MDU6TGFiZWwxMDAwMjMwMTk2",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/breaking%20change",
      "name": "breaking change",
      "color": "b60205",
      "default": false,
      "description": "Changes that break backwards compatibility of the public API."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/8",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/8",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/8/labels",
    "id": 4174606,
    "node_id": "MDk6TWlsZXN0b25lNDE3NDYwNg==",
    "number": 8,
    "title": "v3.0",
    "description": "",
    "creator": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 19,
    "state": "closed",
    "created_at": "2019-03-26T18:50:56Z",
    "updated_at": "2020-06-18T23:23:01Z",
    "due_on": null,
    "closed_at": "2020-06-18T23:23:01Z"
  },
  "comments": 19,
  "created_at": "2019-05-10T08:09:01Z",
  "updated_at": "2020-04-15T18:39:34Z",
  "closed_at": "2020-04-15T18:39:34Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nCurrent ERC721 minting with token URI requires manually specifying the URI per token.\r\n\r\nTo reduce gas cost, the OpenSea example uses concatenation of a base token URI and the tokenID. ([`TradeableERC721Token.sol`](https://github.com/ProjectOpenSea/opensea-creatures/blob/15a27aab9d7ffb9860faab27a8127f8eae9eb297/contracts/TradeableERC721Token.sol))\r\n\r\n**üìù Details**\r\n\r\nWe want to provide an ERC721 extension `ERC721DefaultURI` with a base URI parameter, which overrides `ERC721Metadata`'s `tokenURI()` with the concatenation. To discuss the API please comment on the [forum thread about this](https://forum.zeppelin.solutions/t/add-support-for-erc721-token-uri-concatenation-of-base-token-uri-and-tokenid/566/2).\r\n\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/511085285",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-511085285",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 511085285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTA4NTI4NQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-13T03:51:08Z",
    "updated_at": "2019-07-13T03:51:08Z",
    "author_association": "MEMBER",
    "body": "Note that for concatenation of the base URI with the tokenId string we will use `abi.encodePacked`.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/511085285/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/511143905",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-511143905",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 511143905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTE0MzkwNQ==",
    "user": {
      "login": "logeekal",
      "id": 7485038,
      "node_id": "MDQ6VXNlcjc0ODUwMzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7485038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/logeekal",
      "html_url": "https://github.com/logeekal",
      "followers_url": "https://api.github.com/users/logeekal/followers",
      "following_url": "https://api.github.com/users/logeekal/following{/other_user}",
      "gists_url": "https://api.github.com/users/logeekal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/logeekal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/logeekal/subscriptions",
      "organizations_url": "https://api.github.com/users/logeekal/orgs",
      "repos_url": "https://api.github.com/users/logeekal/repos",
      "events_url": "https://api.github.com/users/logeekal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/logeekal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-13T18:28:24Z",
    "updated_at": "2019-07-13T18:28:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "As discussed in #1163 , I can take this up.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/511143905/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/512905604",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-512905604",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 512905604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjkwNTYwNA==",
    "user": {
      "login": "pointtoken",
      "id": 31048320,
      "node_id": "MDQ6VXNlcjMxMDQ4MzIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/31048320?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pointtoken",
      "html_url": "https://github.com/pointtoken",
      "followers_url": "https://api.github.com/users/pointtoken/followers",
      "following_url": "https://api.github.com/users/pointtoken/following{/other_user}",
      "gists_url": "https://api.github.com/users/pointtoken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pointtoken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pointtoken/subscriptions",
      "organizations_url": "https://api.github.com/users/pointtoken/orgs",
      "repos_url": "https://api.github.com/users/pointtoken/repos",
      "events_url": "https://api.github.com/users/pointtoken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pointtoken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-18T17:11:03Z",
    "updated_at": "2019-07-18T17:11:03Z",
    "author_association": "NONE",
    "body": "@logeekal Will your implementation make the baseTokenURI settable? I think this would be good, in the event that the URL needs to change. Is this code in a branch anywhere? ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/512905604/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/513140610",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-513140610",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 513140610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzE0MDYxMA==",
    "user": {
      "login": "logeekal",
      "id": 7485038,
      "node_id": "MDQ6VXNlcjc0ODUwMzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7485038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/logeekal",
      "html_url": "https://github.com/logeekal",
      "followers_url": "https://api.github.com/users/logeekal/followers",
      "following_url": "https://api.github.com/users/logeekal/following{/other_user}",
      "gists_url": "https://api.github.com/users/logeekal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/logeekal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/logeekal/subscriptions",
      "organizations_url": "https://api.github.com/users/logeekal/orgs",
      "repos_url": "https://api.github.com/users/logeekal/repos",
      "events_url": "https://api.github.com/users/logeekal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/logeekal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-19T08:22:53Z",
    "updated_at": "2019-07-19T08:22:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello @pointtoken, I will start implementation today so no code branch as of now.  And I am assuming that it should be settable so that everyone can set there own URI probably in constructor of their contract so that they do not have to do that with every mint operation.\r\n\r\nWhat do you think @abcoathup, In Blockhorses I see that you have hard-coded it, so to be generic I also think it should be settable as well.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/513140610/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/513149270",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-513149270",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 513149270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzE0OTI3MA==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-19T08:49:59Z",
    "updated_at": "2019-07-19T08:49:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @logeekal \r\n\r\nI agree, I think that a private `_baseTokenURI` state variable should be set in the constructor via a parameter.\r\n\r\nThere should also be an internal setter function, so tokens inheriting from this contract can create a mechanism to change the _baseTokenURI as required.  \r\n\r\nIn [PeepethBadges.sol](https://github.com/peepeth/badges/blob/master/contracts/PeepethBadges.sol) we had the private state variable `_baseTokenURI` that was set in the constructor, (though not via a parameter).  We also had a mechanism for the owner to change the baseTokenURI, and I could see some projects wanting this ability to have some Role have the ability to change the baseTokenURI.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/513149270/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/513296689",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-513296689",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 513296689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzI5NjY4OQ==",
    "user": {
      "login": "pointtoken",
      "id": 31048320,
      "node_id": "MDQ6VXNlcjMxMDQ4MzIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/31048320?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pointtoken",
      "html_url": "https://github.com/pointtoken",
      "followers_url": "https://api.github.com/users/pointtoken/followers",
      "following_url": "https://api.github.com/users/pointtoken/following{/other_user}",
      "gists_url": "https://api.github.com/users/pointtoken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pointtoken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pointtoken/subscriptions",
      "organizations_url": "https://api.github.com/users/pointtoken/orgs",
      "repos_url": "https://api.github.com/users/pointtoken/repos",
      "events_url": "https://api.github.com/users/pointtoken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pointtoken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-19T16:41:48Z",
    "updated_at": "2019-07-19T16:41:48Z",
    "author_association": "NONE",
    "body": "Once one embraces the idea of offchain metadata for an NFT, one is embracing the idea that the NFT has data which could change. As such, the URL itself of the metadata needs to be change-able. Classic example: the company that created the contract gets sold or folds or who knows what, and the the metadata server itself is no longer available. There could be a scenario where a new metadata server is deployed, thus the need to update the tokenURI, keeping the NFT's metadata URL to be accessed onchain. Otherwise, that contract become much less usable for people who hold the actual NFT.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/513296689/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/513297881",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-513297881",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 513297881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzI5Nzg4MQ==",
    "user": {
      "login": "pointtoken",
      "id": 31048320,
      "node_id": "MDQ6VXNlcjMxMDQ4MzIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/31048320?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pointtoken",
      "html_url": "https://github.com/pointtoken",
      "followers_url": "https://api.github.com/users/pointtoken/followers",
      "following_url": "https://api.github.com/users/pointtoken/following{/other_user}",
      "gists_url": "https://api.github.com/users/pointtoken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pointtoken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pointtoken/subscriptions",
      "organizations_url": "https://api.github.com/users/pointtoken/orgs",
      "repos_url": "https://api.github.com/users/pointtoken/repos",
      "events_url": "https://api.github.com/users/pointtoken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pointtoken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-19T16:45:39Z",
    "updated_at": "2019-07-19T16:45:39Z",
    "author_association": "NONE",
    "body": "Here's some code, although there may be better ways now:\r\n\r\n`   string public tokenURIPrefix = \"https://api.nft.com/\";\r\n\r\n    function updateTokenURIPrefix(string newPrefix) external onlyOwner {\r\n        tokenURIPrefix = newPrefix;\r\n    }\r\n\r\n function tokenURI(uint256 _tokenId) public view returns (string) {\r\n        return string(abi.encodePacked(tokenURIPrefix,uint2str(_tokenId)));\r\n    }\r\n  \r\n    function uint2str(uint i) internal pure returns (string) {\r\n        if (i == 0) return \"0\";\r\n        uint j = i;\r\n        uint length;\r\n        while (j != 0){\r\n            length++;\r\n            j /= 10;\r\n        }\r\n\r\n        bytes memory bstr = new bytes(length);\r\n    \r\n        uint k = length - 1;\r\n        while (i != 0){\r\n            bstr[k--] = byte(48 + i % 10);\r\n            i /= 10;\r\n        }\r\n    \r\n        return string(bstr);\r\n    \r\n    }\r\n`",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/513297881/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/513386101",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-513386101",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 513386101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzM4NjEwMQ==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-19T21:36:42Z",
    "updated_at": "2019-07-19T21:36:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @pointtoken \r\n\r\nThere is already a Strings library in drafts with a `fromUint256` function.\r\nhttps://github.com/OpenZeppelin/openzeppelin-solidity/blob/c5c0e22c8963971381ba8e68198cf3ef0131ae3e/contracts/drafts/Strings.sol#L13\r\n\r\nI suggest that the `_tokenURIPrefix` state variable be private (and hence have an underscore) and that the setter `_updateTokenURIPrefix` be internal.\r\n\r\nThat way, inheriting contracts have the option to create an `updateTokenURIPrefix` function if they desire, with whatever Role or Owner they prefer to use.  Projects can also choose not to have an update.\r\n\r\nI agree that having metadata off chain and based on a URI rather than being content addressable means that the metadata is centralized.\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/513386101/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/514736120",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-514736120",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 514736120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDczNjEyMA==",
    "user": {
      "login": "pointtoken",
      "id": 31048320,
      "node_id": "MDQ6VXNlcjMxMDQ4MzIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/31048320?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pointtoken",
      "html_url": "https://github.com/pointtoken",
      "followers_url": "https://api.github.com/users/pointtoken/followers",
      "following_url": "https://api.github.com/users/pointtoken/following{/other_user}",
      "gists_url": "https://api.github.com/users/pointtoken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pointtoken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pointtoken/subscriptions",
      "organizations_url": "https://api.github.com/users/pointtoken/orgs",
      "repos_url": "https://api.github.com/users/pointtoken/repos",
      "events_url": "https://api.github.com/users/pointtoken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pointtoken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T17:58:26Z",
    "updated_at": "2019-07-24T17:58:26Z",
    "author_association": "NONE",
    "body": "ok, as long that it is easy to make public and settable by an owner of the contract",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/514736120/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/530504286",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-530504286",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 530504286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDUwNDI4Ng==",
    "user": {
      "login": "pointtoken",
      "id": 31048320,
      "node_id": "MDQ6VXNlcjMxMDQ4MzIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/31048320?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pointtoken",
      "html_url": "https://github.com/pointtoken",
      "followers_url": "https://api.github.com/users/pointtoken/followers",
      "following_url": "https://api.github.com/users/pointtoken/following{/other_user}",
      "gists_url": "https://api.github.com/users/pointtoken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pointtoken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pointtoken/subscriptions",
      "organizations_url": "https://api.github.com/users/pointtoken/orgs",
      "repos_url": "https://api.github.com/users/pointtoken/repos",
      "events_url": "https://api.github.com/users/pointtoken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pointtoken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-11T18:22:30Z",
    "updated_at": "2019-09-11T18:22:30Z",
    "author_association": "NONE",
    "body": "Just curious the status of this feature @abcoathup @logeekal -- timeframe when it might get merged to master?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/530504286/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/530725396",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-530725396",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 530725396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDcyNTM5Ng==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-12T08:36:25Z",
    "updated_at": "2019-09-12T08:36:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pointtoken I haven't done any more beyond the Strings library.  I would love to see this implemented.\r\n\r\n@logeekal are you still working on this?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/530725396/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/543416745",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-543416745",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 543416745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzQxNjc0NQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-18T00:00:20Z",
    "updated_at": "2019-10-18T00:00:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nachomazzara from Decentraland commented that it is currently not possible for users to easily implement this feature (which they need) due to `tokenURI()` being `external`, which makes it impossible to call the base implementation via `super`. The workaround they've found is to override `_setTokenURI` and use a separate mapping, which is far from ideal and will probably be disallowed once Solidity 0.6.0 comes out. \r\n\r\nIf @logeekal will not end up tackling this, someone else should do it: we already have a concrete design proposal, and many users would be benefited by this feature.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/543416745/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/543550023",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-543550023",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 543550023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzU1MDAyMw==",
    "user": {
      "login": "logeekal",
      "id": 7485038,
      "node_id": "MDQ6VXNlcjc0ODUwMzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7485038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/logeekal",
      "html_url": "https://github.com/logeekal",
      "followers_url": "https://api.github.com/users/logeekal/followers",
      "following_url": "https://api.github.com/users/logeekal/following{/other_user}",
      "gists_url": "https://api.github.com/users/logeekal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/logeekal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/logeekal/subscriptions",
      "organizations_url": "https://api.github.com/users/logeekal/orgs",
      "repos_url": "https://api.github.com/users/logeekal/repos",
      "events_url": "https://api.github.com/users/logeekal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/logeekal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-18T06:51:35Z",
    "updated_at": "2019-10-18T06:51:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I apologize that I completely forgot about this and got involved in other task. I will take it up next week and get back with updates.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/543550023/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/543689572",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-543689572",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 543689572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzY4OTU3Mg==",
    "user": {
      "login": "nachomazzara",
      "id": 7549152,
      "node_id": "MDQ6VXNlcjc1NDkxNTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7549152?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nachomazzara",
      "html_url": "https://github.com/nachomazzara",
      "followers_url": "https://api.github.com/users/nachomazzara/followers",
      "following_url": "https://api.github.com/users/nachomazzara/following{/other_user}",
      "gists_url": "https://api.github.com/users/nachomazzara/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nachomazzara/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nachomazzara/subscriptions",
      "organizations_url": "https://api.github.com/users/nachomazzara/orgs",
      "repos_url": "https://api.github.com/users/nachomazzara/repos",
      "events_url": "https://api.github.com/users/nachomazzara/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nachomazzara/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-18T11:34:14Z",
    "updated_at": "2019-10-18T11:38:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "To put in here what we thought (omit non-changed code): \r\n\r\n```solidity\r\npragma solidity ^0.5.0;\r\n\r\nimport \"../../GSN/Context.sol\";\r\nimport \"./ERC721.sol\";\r\nimport \"./IERC721Metadata.sol\";\r\nimport \"../../introspection/ERC165.sol\";\r\n\r\ncontract ERC721Metadata is Context, ERC165, ERC721, IERC721Metadata {\r\n    //...\r\n    \r\n    // Base Token URI\r\n    string private _baseTokenURI;\r\n\r\n    //...\r\n    \r\n    // **PROPOSED CHANGE**: \r\n    // - `external` to `public` (Allow 'super')\r\n    // - Concat baseURI with tokenURI\r\n    function tokenURI(uint256 tokenId) public view returns (string memory) { \r\n        return string(abi.encodePacked(_baseTokenURI, _tokenURI(tokenId)));\r\n    }\r\n    \r\n\r\n    /**\r\n     * @dev Internal returns an URI for a given token ID.\r\n     * Throws if the token ID does not exist. May return an empty string.\r\n     * @param tokenId uint256 ID of the token to query\r\n     */\r\n    function _tokenURI(uint256 tokenId) internal view returns (string memory) { \r\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\r\n        return _tokenURIs[tokenId];\r\n    }\r\n    \r\n    /**\r\n     * @dev Internal function to set the base token URI.\r\n     * @param uri string base URI to assign\r\n     */\r\n    function _setBaseTokenURI(string memory uri) internal {\r\n        _baseTokenURI = uri;\r\n    }\r\n}\r\n```\r\n\r\nIt continues following the  `_INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;`.\r\n\r\nThe idea is not only to use the `tokenId` as the `path` for the URI as used [here](https://github.com/ProjectOpenSea/opensea-creatures/blob/15a27aab9d7ffb9860faab27a8127f8eae9eb297/contracts/TradeableERC721Token.sol#L59) but just to have full control of what to save.\r\n\r\n`_setBaseTokenURI` should be exposed to authorized users. \r\n\r\nI'm wondering if we should emit an event once the `baseTokenURI` is changed. Indexers can be reactive to this, updating all the metadata references.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/543689572/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/546734447",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-546734447",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 546734447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjczNDQ0Nw==",
    "user": {
      "login": "nachomazzara",
      "id": 7549152,
      "node_id": "MDQ6VXNlcjc1NDkxNTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7549152?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nachomazzara",
      "html_url": "https://github.com/nachomazzara",
      "followers_url": "https://api.github.com/users/nachomazzara/followers",
      "following_url": "https://api.github.com/users/nachomazzara/following{/other_user}",
      "gists_url": "https://api.github.com/users/nachomazzara/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nachomazzara/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nachomazzara/subscriptions",
      "organizations_url": "https://api.github.com/users/nachomazzara/orgs",
      "repos_url": "https://api.github.com/users/nachomazzara/repos",
      "events_url": "https://api.github.com/users/nachomazzara/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nachomazzara/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-27T21:07:38Z",
    "updated_at": "2019-10-27T21:07:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added a [PR](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/1970)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/546734447/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/546799406",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-546799406",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 546799406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Njc5OTQwNg==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-28T05:45:12Z",
    "updated_at": "2019-10-28T05:45:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @nachomazzara,\r\n\r\nThank you :pray:\r\n\r\nThis solution gives flexibility, e.g. allows saving an IPFS hash, with the base URI being an IPFS gateway URI, where the base URI can be changed to support a change of IPFS gateway.\r\n\r\nAn example ERC721 token using this functionality as I envisaged could then be:\r\n (perhaps we need to add a SimpleERC721Token.sol to examples?).\r\n```\r\npragma solidity ^0.5.0;\r\n\r\nimport \"../token/ERC721/ERC721Full.sol\";\r\nimport \"../token/ERC721/ERC721Mintable.sol\";\r\nimport \"../drafts/Strings.sol\";\r\n\r\n/**\r\n * @title MyERC721\r\n */\r\ncontract MyERC721 is ERC721Full, ERC721Mintable {\r\n    constructor () public ERC721Mintable() ERC721Full(\"MyERC721\", \"MY721\") {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n        _setBaseTokenURI(\"https://baseUri/\");\r\n    }\r\n\r\n    /**\r\n     * @dev Function to mint tokens\r\n     * @param to The address that will receive the minted tokens.\r\n     * @return A boolean that indicates if the operation was successful.\r\n     */\r\n    function mint(address to) public onlyMinter returns (bool) {\r\n        uint256 tokenId = totalSupply().add(1);\r\n        _mint(to, tokenId);\r\n        return true;\r\n    }\r\n\r\n    function tokenURI(uint256 tokenId) public view returns (string memory) {\r\n        require(_exists(tokenId), \"MyERC721: URI query for nonexistent token\");\r\n        return string(abi.encodePacked(_baseTokenURI(), Strings.fromUint256(tokenId)));\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/546799406/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/555935350",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-555935350",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 555935350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTkzNTM1MA==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-20T10:12:22Z",
    "updated_at": "2019-11-20T10:12:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Reopening as #1970 doesn't implement an \"automatic\" token URI. (but is the basis for adding this functionality.\r\n\r\ne.g.:\r\n```\r\nfunction tokenURI(uint256 tokenId) public view returns (string memory) {\r\n     return string(abi.encodePacked(baseTokenURI(), Strings.fromUint256(tokenId)));\r\n}\r\n```\r\n\r\nShould we be creating an `ERC721AutomaticTokenURI` contract or is there a better way to handle this? (e.g. creating an example of how to implement?)\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/555935350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/606067222",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-606067222",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 606067222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNjA2NzIyMg==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-30T15:24:33Z",
    "updated_at": "2020-03-30T15:24:33Z",
    "author_association": "MEMBER",
    "body": "As mentioned in #2154, we want to bundle this by default in `ERC721`.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/606067222/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/611971447",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1745#issuecomment-611971447",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1745",
    "id": 611971447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTk3MTQ0Nw==",
    "user": {
      "login": "KaiRo-at",
      "id": 824140,
      "node_id": "MDQ6VXNlcjgyNDE0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KaiRo-at",
      "html_url": "https://github.com/KaiRo-at",
      "followers_url": "https://api.github.com/users/KaiRo-at/followers",
      "following_url": "https://api.github.com/users/KaiRo-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/KaiRo-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KaiRo-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KaiRo-at/subscriptions",
      "organizations_url": "https://api.github.com/users/KaiRo-at/orgs",
      "repos_url": "https://api.github.com/users/KaiRo-at/repos",
      "events_url": "https://api.github.com/users/KaiRo-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KaiRo-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-10T10:13:36Z",
    "updated_at": "2020-04-10T10:13:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW, I proposed a PR for this in #2174 based on the great work @frangio did in #1970.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/611971447/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
