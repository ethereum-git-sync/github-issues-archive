{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2784",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2784/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2784/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2784/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2784",
  "id": 950083800,
  "node_id": "MDU6SXNzdWU5NTAwODM4MDA=",
  "number": 2784,
  "title": "ERC721: static call for ownerOf function",
  "user": {
    "login": "fulldecent",
    "id": 382183,
    "node_id": "MDQ6VXNlcjM4MjE4Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fulldecent",
    "html_url": "https://github.com/fulldecent",
    "followers_url": "https://api.github.com/users/fulldecent/followers",
    "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
    "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
    "organizations_url": "https://api.github.com/users/fulldecent/orgs",
    "repos_url": "https://api.github.com/users/fulldecent/repos",
    "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fulldecent/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2021-07-21T20:27:14Z",
  "updated_at": "2022-10-25T10:00:03Z",
  "closed_at": "2021-10-06T00:35:42Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "In the ERC721 contract, the `ownerOf` function is defined as `virtual` which allows implementations to change this function.\r\n\r\nBut invocations of this function do NOT call with virtual dispatch (i.e. they use `ERC721.ownerOf`).\r\n\r\nThis creates the possibility somebody will override it and it will stop working.\r\n\r\nProposed solutions:\r\n\r\n1. Remove `virtual`—because the ownership is tightly coupled with other implementation details. This is a \"breaking change\", whatever, file this under \"Will say's it's okay\".\r\n2. Use virtual dispatch (`s/ERC721\\.//g`)—this might be inconsistent and confusing\r\n\r\n---\r\n\r\nP.S., in the past, other ERC721 functions were called without virtual dispatch and it created a security problem risk. This affects past versions of OZC. I'm not sure if those versions are still supported (see https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2759). I have seen an implementation in the wild that is vulnerable as a result of this.",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2784/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2784/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/885130584",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2784#issuecomment-885130584",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2784",
    "id": 885130584,
    "node_id": "IC_kwDOA9tCBs40wgVY",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-22T18:15:05Z",
    "updated_at": "2021-07-22T18:16:22Z",
    "author_association": "MEMBER",
    "body": "Please see https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2154 for extensive prior discussion, in particular https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2154#issuecomment-767781070:\r\n\r\n>Note that in many cases overriding a function will not imply that other functions in the contract will automatically adapt to the overridden definitions. For example, overriding `ERC20.balanceOf` does not guarantee that that balance is available for transferring. However, it will generaly be possible to obtain the desired behavior by overriding other functions in the contract, in this case `ERC20._transfer`. Understand that this limitation was necessary to keep the contracts simple and consistent, but it means that the responsibility to ensure correctness when functions are overriden will be on the users and not on the OpenZeppelin maintainers. People who wish to override should consult the source code to fully understand the impact it will have, and should consider whether they need to override additional functions to achieve the desired behavior.\r\n\r\nThe reason it's built this way is that it's otherwise impossible for us to assure internal consistency of our contract if `ERC721.ownerOf` can be anything other than the owner we have in storage. The burden of guaranteeing internal consistency is moved to the developer who wishes to override in these niche cases.\r\n\r\n---\r\n\r\n> in the past, other ERC721 functions were called without virtual dispatch and it created a security problem risk. This affects past versions of OZC\r\n\r\nCan you please give detail about this?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/885130584/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/885175782",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2784#issuecomment-885175782",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2784",
    "id": 885175782,
    "node_id": "IC_kwDOA9tCBs40wrXm",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-22T19:27:51Z",
    "updated_at": "2021-10-06T00:42:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree that providing this power is useful. And at the same time, of course, we are making a risk of somebody doing something wrong.\r\n\r\nMaybe a nice way to handle this is to provide \"subclassing\" notes everywhere we allow subclassing.\r\n\r\nA good example of developer subclassing notes for an object-oriented language is the documentation for Swift. Please search the web with `\"Subclassing Notes\" site:https://developer.apple.com/documentation` to see how this looks.\r\n\r\n---\r\n\r\nOf course. I sent detail to you by email. I can create a new issue for that when needed.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/885175782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/935151872",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2784#issuecomment-935151872",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2784",
    "id": 935151872,
    "node_id": "IC_kwDOA9tCBs43vUkA",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-06T00:35:42Z",
    "updated_at": "2021-10-06T00:35:42Z",
    "author_association": "MEMBER",
    "body": "Closing this issue for reasons explained in my previous comment: \"The burden of guaranteeing internal consistency [when ownerOf is overriden] is moved to the developer who wishes to override in these niche cases.\"\r\n\r\nThe specific case of `isApprovedForAll` in Contracts 3.x is tracked in https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2792.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/935151872/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1289490856",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2784#issuecomment-1289490856",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2784",
    "id": 1289490856,
    "node_id": "IC_kwDOA9tCBs5M3BGo",
    "user": {
      "login": "matthiasgeihs",
      "id": 62935430,
      "node_id": "MDQ6VXNlcjYyOTM1NDMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/62935430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthiasgeihs",
      "html_url": "https://github.com/matthiasgeihs",
      "followers_url": "https://api.github.com/users/matthiasgeihs/followers",
      "following_url": "https://api.github.com/users/matthiasgeihs/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthiasgeihs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthiasgeihs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthiasgeihs/subscriptions",
      "organizations_url": "https://api.github.com/users/matthiasgeihs/orgs",
      "repos_url": "https://api.github.com/users/matthiasgeihs/repos",
      "events_url": "https://api.github.com/users/matthiasgeihs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthiasgeihs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-24T19:23:39Z",
    "updated_at": "2022-10-24T19:23:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@frangio\r\n\r\nI came upon this issue when dealing with the following: I'd like to have an ERC721 contract where initially a fixed number (100+) of tokens are assigned to the contract owner. To do this in a gas-efficient way, the idea is to override `ownerOf` such that it returns the contract owner in case the token is not in `_owners`.\r\n\r\nNow this does not work because the OZC `ERC721` implementation uses `ERC721.ownerOf` internally, and not `ownerOf` (the overridden function).\r\n\r\nWhat's the purpose of making `ownerOf` overridable when, at the same time, the core contract is forced to use the original implementation?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1289490856/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1289816674",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2784#issuecomment-1289816674",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2784",
    "id": 1289816674,
    "node_id": "IC_kwDOA9tCBs5M4Qpi",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-25T00:31:21Z",
    "updated_at": "2022-10-25T00:31:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@matthiasgeihs Thank you for checking in. There are some implementations you can study which are doing that approach:\r\n\r\n- [Su Squares](https://github.com/su-squares/ethereum-contract/blob/master/contracts/ERC721.sol) implements where the first 10,000 NFT are transferred to the contract owner at time of deployment.\r\n- [ERC721a](https://www.erc721a.org/) includes a batch transfer function you can use at time of contract deployment.\r\n\r\nYou can use both of those ideas while still employing OpenZeppelin Contracts, it's just nice to see how others have done it.\r\n\r\nSpecifically regarding OZC and your proposed implementation, please ensure you are testing that `YourContract.ownerOf` (the external call) will throw for tokens that have not been minted. (Unless you are minting exactly 2^256 tokens at deployment.) This is a requirement of ERC-721.\r\n\r\nIf you would like to review your work together live, you can join my weekly call, please see https://phor.net/#hour, follow, and add yourself into the schedule.\r\n\r\nBased on what we learn, if we find anything that affects OZC and specifically the `virtual` part of `ownerOf` subclassing, then we can report back our findings here.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1289816674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1289856308",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2784#issuecomment-1289856308",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2784",
    "id": 1289856308,
    "node_id": "IC_kwDOA9tCBs5M4aU0",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-25T01:27:08Z",
    "updated_at": "2022-10-25T01:28:08Z",
    "author_association": "MEMBER",
    "body": "@matthiasgeihs For efficient batch minting please see our new [ERC721Consecutive](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0-rc.2/contracts/token/ERC721/extensions/ERC721Consecutive.sol) contract. It is included in 4.8, to be released next week, but already available in a release candidate. It will allow you to mint 100+ tokens in the constructor.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1289856308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1289894192",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2784#issuecomment-1289894192",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2784",
    "id": 1289894192,
    "node_id": "IC_kwDOA9tCBs5M4jkw",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-25T02:31:21Z",
    "updated_at": "2022-10-25T02:31:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks good. Thank you @frangio for restricting it to the constructor not just documenting that caveat!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1289894192/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1290295672",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2784#issuecomment-1290295672",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2784",
    "id": 1290295672,
    "node_id": "IC_kwDOA9tCBs5M6Fl4",
    "user": {
      "login": "matthiasgeihs",
      "id": 62935430,
      "node_id": "MDQ6VXNlcjYyOTM1NDMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/62935430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthiasgeihs",
      "html_url": "https://github.com/matthiasgeihs",
      "followers_url": "https://api.github.com/users/matthiasgeihs/followers",
      "following_url": "https://api.github.com/users/matthiasgeihs/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthiasgeihs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthiasgeihs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthiasgeihs/subscriptions",
      "organizations_url": "https://api.github.com/users/matthiasgeihs/orgs",
      "repos_url": "https://api.github.com/users/matthiasgeihs/repos",
      "events_url": "https://api.github.com/users/matthiasgeihs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthiasgeihs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-25T10:00:02Z",
    "updated_at": "2022-10-25T10:00:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @frangio for pointing out ERC721Consecutive. That was exactly what I needed. (Looks like you have included the necessary modification to ERC721 in https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3311.)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1290295672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
