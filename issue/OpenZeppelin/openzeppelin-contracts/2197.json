{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2197",
  "id": 602145556,
  "node_id": "MDU6SXNzdWU2MDIxNDU1NTY=",
  "number": 2197,
  "title": "Add \"fromAddress\" to utils/Strings.sol",
  "user": {
    "login": "WyseNynja",
    "id": 624221,
    "node_id": "MDQ6VXNlcjYyNDIyMQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/WyseNynja",
    "html_url": "https://github.com/WyseNynja",
    "followers_url": "https://api.github.com/users/WyseNynja/followers",
    "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
    "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
    "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
    "repos_url": "https://api.github.com/users/WyseNynja/repos",
    "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
    "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650860,
      "node_id": "MDU6TGFiZWw1MDM2NTA4NjA=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/feature",
      "name": "feature",
      "color": "b9db64",
      "default": false,
      "description": "New contracts, functions, or helpers."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2020-04-17T18:05:15Z",
  "updated_at": "2021-12-01T02:35:50Z",
  "closed_at": "2021-11-29T10:43:58Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n\r\nI am trying to get more useful revert messages in my contracts and being able to format uint256 as a string has been really helpful. It would be nice if the other types had this, too. For now, I only need `fromAddress`.\r\n\r\n**üìù Details**\r\n\r\nThere are a couple (slightly outdated) implementations here: https://ethereum.stackexchange.com/questions/8346/convert-address-to-string",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/615400815",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2197#issuecomment-615400815",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197",
    "id": 615400815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTQwMDgxNQ==",
    "user": {
      "login": "WyseNynja",
      "id": 624221,
      "node_id": "MDQ6VXNlcjYyNDIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WyseNynja",
      "html_url": "https://github.com/WyseNynja",
      "followers_url": "https://api.github.com/users/WyseNynja/followers",
      "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
      "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
      "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
      "repos_url": "https://api.github.com/users/WyseNynja/repos",
      "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-17T18:35:46Z",
    "updated_at": "2020-05-07T18:53:38Z",
    "author_association": "NONE",
    "body": "I tried all the methods on that stackexchange link and only one (by k06a and Aliaksandr Adzinets) worked for me:\r\n\r\n```\r\n    function toString(address x) internal pure returns (string memory) {\r\n        bytes32 value = bytes32(uint256(x));\r\n        bytes memory alphabet = \"0123456789abcdef\";\r\n\r\n        bytes memory str = new bytes(42);\r\n        str[0] = '0';\r\n        str[1] = 'x';\r\n        for (uint i = 0; i < 20; i++) {\r\n            str[2+i*2] = alphabet[uint(uint8(value[i + 12] >> 4))];\r\n            str[3+i*2] = alphabet[uint(uint8(value[i + 12] & 0x0f))];\r\n        }\r\n        return string(str);\r\n    }\r\n```\r\n\r\nI don't know how efficient this is gas-wise, but that doesn't matter for my current purposes.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/615400815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/616899941",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2197#issuecomment-616899941",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197",
    "id": 616899941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNjg5OTk0MQ==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-21T01:42:51Z",
    "updated_at": "2020-04-21T01:42:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @WyseNynja!  Thanks for the suggestion, it is really appreciated.\r\n\r\nThe project owner should review your suggestion during the next week. \r\n\r\nPlease wait until we have discussed this idea before writing any code or submitting a Pull Request, so we can go through the design beforehand.  We don‚Äôt want you to waste your time!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/616899941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/617275856",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2197#issuecomment-617275856",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197",
    "id": 617275856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzI3NTg1Ng==",
    "user": {
      "login": "WyseNynja",
      "id": 624221,
      "node_id": "MDQ6VXNlcjYyNDIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WyseNynja",
      "html_url": "https://github.com/WyseNynja",
      "followers_url": "https://api.github.com/users/WyseNynja/followers",
      "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
      "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
      "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
      "repos_url": "https://api.github.com/users/WyseNynja/repos",
      "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-21T16:41:56Z",
    "updated_at": "2020-04-21T16:41:56Z",
    "author_association": "NONE",
    "body": "You're welcome, and thank you! I'm using that code for now since it works. I'll let your team improve the design.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/617275856/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/618628858",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2197#issuecomment-618628858",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197",
    "id": 618628858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODYyODg1OA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-23T19:54:13Z",
    "updated_at": "2020-04-23T19:54:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could you share a short snippet of how you're using this to create nicer error messages?\r\n\r\nI'd rather see tooling move in a direction where we can retrieve values directly without having to convert them to strings inside the EVM (!), though I guess there's not much harm in having such a helper. I wonder how easy it'd be to create these messages though.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/618628858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/619136289",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2197#issuecomment-619136289",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197",
    "id": 619136289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTEzNjI4OQ==",
    "user": {
      "login": "WyseNynja",
      "id": 624221,
      "node_id": "MDQ6VXNlcjYyNDIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WyseNynja",
      "html_url": "https://github.com/WyseNynja",
      "followers_url": "https://api.github.com/users/WyseNynja/followers",
      "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
      "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
      "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
      "repos_url": "https://api.github.com/users/WyseNynja/repos",
      "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-24T17:07:59Z",
    "updated_at": "2020-05-07T18:54:36Z",
    "author_association": "NONE",
    "body": "This is what I'm doing for now. I just wanted useful reverts in dev so I'm not caring about gas efficiency at all.\r\n\r\n```\r\nif (ending_vault_balance < starting_vault_balance) {\r\n  uint256 decreased_amount = starting_vault_balance - ending_vault_balance;\r\n  string memory err = string(abi.encodePacked(\"Vault balance of \", address(borrow_token).toString(), \" did not increase. Decreased by \", decreased_amount.toString()));\r\n  revert(err);\r\n}\r\n```\r\n\r\nThis one mostly works, but theres some bytes at the front of call_returned that I don't know how to deal with. That's a separate issue though.\r\n\r\n```\r\n(bool success, bytes memory call_returned) = action_address.call{value: action_value}(actions[i].data);\r\n\r\nif (!success) {\r\n    string memory err = string(abi.encodePacked(\"on call #\", i.toString(),\" to \", action_address.toString(), \" with \", action_value.toString(), \" ETH failed: '\", string(call_returned), \"'\"));\r\n    revert(err);\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/619136289/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/624901376",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2197#issuecomment-624901376",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197",
    "id": 624901376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDkwMTM3Ng==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-06T21:29:58Z",
    "updated_at": "2020-05-06T21:29:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello @WyseNynja, sorry to have left you hanging. \r\n\r\nEven if usefulness of this feature is unclear, we think it might make sense to include it in the OpenZeppelin Contracts library to provide users with the flexibility to perform these sort of tasks. We arrived at a similar conclusion in https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1795 (which is rather relevant here).\r\n\r\nUnfortunately, we don't have enough bandwidth to properly include features that will likely go unsed, with the associated tests, documentation and maintenance tasks, and think our effors will have a larger impact in areas where there's larger evidence of community demand. Head to our [roadmap](https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2207) to learn about what we're currently working on.\r\n\r\nI'll keep this issue open as a space for people to discuss this and related features - if we find interesting use cases where such as thing is needed, then we can carry on work and think how to best support them from the Contracts library.\r\n\r\nThank you very much for your work and suggestions @WyseNynja!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/624901376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/625435695",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2197#issuecomment-625435695",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197",
    "id": 625435695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTQzNTY5NQ==",
    "user": {
      "login": "WyseNynja",
      "id": 624221,
      "node_id": "MDQ6VXNlcjYyNDIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WyseNynja",
      "html_url": "https://github.com/WyseNynja",
      "followers_url": "https://api.github.com/users/WyseNynja/followers",
      "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
      "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
      "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
      "repos_url": "https://api.github.com/users/WyseNynja/repos",
      "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-07T18:54:30Z",
    "updated_at": "2020-05-07T18:57:02Z",
    "author_association": "NONE",
    "body": "That makes sense. For now, I have a `Strings2.sol` that is simple enough to add the same way that I add OpenZepplin's Strings.sol\r\n\r\n```\r\npragma solidity 0.6.7;\r\n\r\nlibrary Strings2 {\r\n    function toString(address x) internal pure returns (string memory) {\r\n        bytes32 value = bytes32(uint256(x));\r\n        bytes memory alphabet = \"0123456789abcdef\";\r\n\r\n        bytes memory str = new bytes(42);\r\n        str[0] = '0';\r\n        str[1] = 'x';\r\n        for (uint i = 0; i < 20; i++) {\r\n            str[2+i*2] = alphabet[uint(uint8(value[i + 12] >> 4))];\r\n            str[3+i*2] = alphabet[uint(uint8(value[i + 12] & 0x0f))];\r\n        }\r\n        return string(str);\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/625435695/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/625436021",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2197#issuecomment-625436021",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197",
    "id": 625436021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTQzNjAyMQ==",
    "user": {
      "login": "WyseNynja",
      "id": 624221,
      "node_id": "MDQ6VXNlcjYyNDIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WyseNynja",
      "html_url": "https://github.com/WyseNynja",
      "followers_url": "https://api.github.com/users/WyseNynja/followers",
      "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
      "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
      "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
      "repos_url": "https://api.github.com/users/WyseNynja/repos",
      "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-07T18:55:11Z",
    "updated_at": "2020-05-07T18:55:11Z",
    "author_association": "NONE",
    "body": "Oops. I mis-clicked.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/625436021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/629583340",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2197#issuecomment-629583340",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197",
    "id": 629583340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTU4MzM0MA==",
    "user": {
      "login": "ItsNickBarry",
      "id": 1500628,
      "node_id": "MDQ6VXNlcjE1MDA2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ItsNickBarry",
      "html_url": "https://github.com/ItsNickBarry",
      "followers_url": "https://api.github.com/users/ItsNickBarry/followers",
      "following_url": "https://api.github.com/users/ItsNickBarry/following{/other_user}",
      "gists_url": "https://api.github.com/users/ItsNickBarry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ItsNickBarry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ItsNickBarry/subscriptions",
      "organizations_url": "https://api.github.com/users/ItsNickBarry/orgs",
      "repos_url": "https://api.github.com/users/ItsNickBarry/repos",
      "events_url": "https://api.github.com/users/ItsNickBarry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ItsNickBarry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-16T03:51:48Z",
    "updated_at": "2020-05-16T03:51:48Z",
    "author_association": "NONE",
    "body": "I have a situation where `n` contracts may be deployed and linked to a corresponding `ERC20` contract.  Users may hold tokens from any number of these `ERC20` contracts.\r\n\r\nThe token metadata is generated using the string representation of the address of the linked contract.  Something like `string(abi.encodePacked('Linked: ', address(_linkedContract).toString()))`.\r\n\r\nThis isn't the ideal UI feature, but compare it to Uniswap's tokens, for example, each of which is nondescriptly named \"Uniswap V1 (UNI-V1)\".",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/629583340/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/631005323",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2197#issuecomment-631005323",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197",
    "id": 631005323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTAwNTMyMw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-19T18:37:17Z",
    "updated_at": "2020-05-19T18:37:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for sharing your use case @ItsNickBarry! That's very interesting.\r\n\r\nA slight issue with this is that the addresses wouldn't be [checksummed](https://eips.ethereum.org/EIPS/eip-55). It doesn't seem like it'd be terribly hard to implement the checksum, though we'd have to hash the address and access its bits, requiring some masking.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/631005323/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/981513782",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2197#issuecomment-981513782",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197",
    "id": 981513782,
    "node_id": "IC_kwDOA9tCBs46gLY2",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-29T10:43:58Z",
    "updated_at": "2021-11-29T10:43:58Z",
    "author_association": "COLLABORATOR",
    "body": "This is resolved by [this function](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol#L56).\r\n\r\n```string fromAddress = toHexString(uint256(uint160(myAddress), 20)```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/981513782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/983228098",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2197#issuecomment-983228098",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2197",
    "id": 983228098,
    "node_id": "IC_kwDOA9tCBs46mt7C",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-01T02:35:43Z",
    "updated_at": "2021-12-01T02:35:50Z",
    "author_association": "MEMBER",
    "body": "@Amxx What do you think about adding an override for `toHexString` so a user could simply write `toHexString(myAddress)`?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/983228098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
