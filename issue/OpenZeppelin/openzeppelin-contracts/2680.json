{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2680",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2680/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2680/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2680/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2680",
  "id": 895352321,
  "node_id": "MDU6SXNzdWU4OTUzNTIzMjE=",
  "number": 2680,
  "title": "Add ceiling division to math library",
  "user": {
    "login": "nlordell",
    "id": 4210206,
    "node_id": "MDQ6VXNlcjQyMTAyMDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4210206?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nlordell",
    "html_url": "https://github.com/nlordell",
    "followers_url": "https://api.github.com/users/nlordell/followers",
    "following_url": "https://api.github.com/users/nlordell/following{/other_user}",
    "gists_url": "https://api.github.com/users/nlordell/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nlordell/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nlordell/subscriptions",
    "organizations_url": "https://api.github.com/users/nlordell/orgs",
    "repos_url": "https://api.github.com/users/nlordell/repos",
    "events_url": "https://api.github.com/users/nlordell/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nlordell/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-05-19T11:57:52Z",
  "updated_at": "2021-05-20T13:53:31Z",
  "closed_at": "2021-05-20T13:53:31Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n\r\nThis FR proposes adding a `ceilDiv` method to the `Math.sol` library for performing division that rounds up instead of truncating (standard integer division).\r\n\r\n**üìù Details**\r\n\r\nCeiling division is fairly easy to implement, and can either be done with:\r\n- `(a + b - 1) / b`\r\n- `a / b + uint(a % b != 0)`\r\n\r\nThe second implementation is probably desired, as it does not overflow for large `a` and `b` where the result would fit in a 256-bit integer.\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2680/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2680/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/844382971",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2680#issuecomment-844382971",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2680",
    "id": 844382971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDM4Mjk3MQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-19T18:58:37Z",
    "updated_at": "2021-05-19T18:58:37Z",
    "author_association": "MEMBER",
    "body": "@nlordell This sounds reasonable but would you mind sharing an example of a situation where you would use this method?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/844382971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/844462557",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2680#issuecomment-844462557",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2680",
    "id": 844462557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDQ2MjU1Nw==",
    "user": {
      "login": "nlordell",
      "id": 4210206,
      "node_id": "MDQ6VXNlcjQyMTAyMDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4210206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nlordell",
      "html_url": "https://github.com/nlordell",
      "followers_url": "https://api.github.com/users/nlordell/followers",
      "following_url": "https://api.github.com/users/nlordell/following{/other_user}",
      "gists_url": "https://api.github.com/users/nlordell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nlordell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nlordell/subscriptions",
      "organizations_url": "https://api.github.com/users/nlordell/orgs",
      "repos_url": "https://api.github.com/users/nlordell/repos",
      "events_url": "https://api.github.com/users/nlordell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nlordell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-19T20:50:22Z",
    "updated_at": "2021-05-19T20:50:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sure! The particular one we used this for (which prompted upstreaming this change) was for computing executed buy amounts given an input sell amount and rational price.\r\n\r\nFor example, if you were to compute a buy amount that a user would receive given some input sell amount and price fraction:\r\n```solidity\r\nfunction computeBuyAmount(\r\n    uint256 sellAmount,\r\n    uint256 priceNumerator,\r\n    uint256 priceDenominator\r\n) returns (uint256) {\r\n  return (sellAmount * priceNumerator).ceilDiv(priceDenominator);\r\n}\r\n```\r\n\r\nImplementing this rounding up instead of down makes rounding go in favour of the user. For example, if a user would sell a very small amount with a price <1 (i.e. `priceNumerator < priceDenominator`), then the buy amount would compute to 0.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/844462557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/844588731",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2680#issuecomment-844588731",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2680",
    "id": 844588731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDU4ODczMQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-20T00:29:38Z",
    "updated_at": "2021-05-20T00:29:38Z",
    "author_association": "MEMBER",
    "body": "Hm, I think there is probably a place for `ceilDiv` but I'm not sure that's a good one.\r\n\r\nIt's generally recommended to always round in favor of the contract, for security reasons. Otherwise, it can leave the contract with a \"negative\" balance, which can result in future transactions failing due to insufficient balance.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/844588731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/844880446",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2680#issuecomment-844880446",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2680",
    "id": 844880446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDg4MDQ0Ng==",
    "user": {
      "login": "nlordell",
      "id": 4210206,
      "node_id": "MDQ6VXNlcjQyMTAyMDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4210206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nlordell",
      "html_url": "https://github.com/nlordell",
      "followers_url": "https://api.github.com/users/nlordell/followers",
      "following_url": "https://api.github.com/users/nlordell/following{/other_user}",
      "gists_url": "https://api.github.com/users/nlordell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nlordell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nlordell/subscriptions",
      "organizations_url": "https://api.github.com/users/nlordell/orgs",
      "repos_url": "https://api.github.com/users/nlordell/repos",
      "events_url": "https://api.github.com/users/nlordell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nlordell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-20T08:55:41Z",
    "updated_at": "2021-05-20T08:55:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "> It's generally recommended to always round in favor of the contract, for security reasons.\r\n\r\nSo specifically, in our case, we are dealing with orders that are signed by users off-chain and executed by a third party. This means that, rounding in favour of the user makes more sense here as they are \"passively\" trading, and could get taken advantage of by the third party if rounding was done in favour of the SC. The following could happen to partially fillable orders using truncated division in that case (in pseudo-code):\r\n\r\n```solidity\r\nuint256 epsilonSellAmount = // largest sell amount that would compute the a buy amount of 0 because of truncating division\r\nwhile (orderNotCompletelyFilled()) {\r\n    partiallyFillOrder(epsilonSellAmout);\r\n}\r\n```\r\n\r\nThis isn't super convenient, as this would be very gas expensive, but this essentially would drain the entire order sell amount of a user and provide 0 buy amount. Additionally, the epsilon sell amount could be worth ~1 cent if tokens like GUSD (with `decimals = 2`) are involved.\r\n\r\n> Otherwise, it can leave the contract with a \"negative\" balance, which can result in future transactions failing due to insufficient balance.\r\n\r\nIn our case, the SC doesn't rely on existing balances so this isn't a concern. For an AMM that pools balances, I completely agree with this statement.\r\n\r\nHowever, even in that case, there is still a place for ceiling division. Imagine an AMM where you can specify an order with a maximum sell amount and limit price fraction. Ceiling division could be used to compute the minimum buy amount given some executed sell amount:\r\n\r\n```solidity\r\nfunction swap(\r\n    uint256 maxSellAmount,\r\n    uint256 priceNumerator,\r\n    uint256 priceDenominator\r\n) returns (uint256) {\r\n  (uint256 sellAmount, uint256 buyAmount) = swapUpTo(maxSellAmount);\r\n  // here sellAmount <= maxSellAmount\r\n  uint256 minBuyAmount = (sellAmount * priceNumerator).ceilDiv(priceDenominator);\r\n  require(buyAmount >= minBuyAmount);\r\n}\r\n```\r\n\r\nHere the ceiling division is used to protect the user from price movement, while making sure that the \"minimum buy amount\" computation still rounds in their favour (regardless of how the actual buy amount is computed).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/844880446/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/844886474",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2680#issuecomment-844886474",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2680",
    "id": 844886474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDg4NjQ3NA==",
    "user": {
      "login": "nlordell",
      "id": 4210206,
      "node_id": "MDQ6VXNlcjQyMTAyMDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4210206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nlordell",
      "html_url": "https://github.com/nlordell",
      "followers_url": "https://api.github.com/users/nlordell/followers",
      "following_url": "https://api.github.com/users/nlordell/following{/other_user}",
      "gists_url": "https://api.github.com/users/nlordell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nlordell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nlordell/subscriptions",
      "organizations_url": "https://api.github.com/users/nlordell/orgs",
      "repos_url": "https://api.github.com/users/nlordell/repos",
      "events_url": "https://api.github.com/users/nlordell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nlordell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-20T09:02:58Z",
    "updated_at": "2021-05-20T09:02:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "As a side note:\r\n\r\nWe love and use OZ contracts, and added this to the math library in our project. The issue and PR was more in the spirit: \"hey! we added this to our vendorred OZ math library! feel free to add it if you think it's useful and will help others\". That being said, if you think its scope is too narrow to be included here, that's a totally valid reason to close this issue (and PR), for which I don't have any strong arguments against.\r\n\r\nJust wanted to share some code we found useful :smile:.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/844886474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/845140088",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2680#issuecomment-845140088",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2680",
    "id": 845140088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTE0MDA4OA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-20T13:49:00Z",
    "updated_at": "2021-05-20T13:49:00Z",
    "author_association": "MEMBER",
    "body": "\r\n> In our case, the SC doesn't rely on existing balances so this isn't a concern. For an AMM that pools balances, I completely agree with this statement.\r\n\r\nGot it. Thanks for the detailed explanation!\r\n\r\nThanks for contributing!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/845140088/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
