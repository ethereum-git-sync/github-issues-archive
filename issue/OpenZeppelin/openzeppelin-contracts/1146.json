{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1146",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1146/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1146/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1146/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1146",
  "id": 347134169,
  "node_id": "MDU6SXNzdWUzNDcxMzQxNjk=",
  "number": 1146,
  "title": "Migrate Ownable to Roles",
  "user": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1000207718,
      "node_id": "MDU6TGFiZWwxMDAwMjA3NzE4",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/contracts",
      "name": "contracts",
      "color": "1d76db",
      "default": false,
      "description": "Smart contract code."
    },
    {
      "id": 1000230196,
      "node_id": "MDU6TGFiZWwxMDAwMjMwMTk2",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/breaking%20change",
      "name": "breaking change",
      "color": "b60205",
      "default": false,
      "description": "Changes that break backwards compatibility of the public API."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/3",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/3",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/3/labels",
    "id": 3479517,
    "node_id": "MDk6TWlsZXN0b25lMzQ3OTUxNw==",
    "number": 3,
    "title": "v2.0",
    "description": "Stable API",
    "creator": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 173,
    "state": "closed",
    "created_at": "2018-07-06T21:03:31Z",
    "updated_at": "2018-11-14T19:32:38Z",
    "due_on": "2018-10-19T07:00:00Z",
    "closed_at": "2018-11-14T19:32:38Z"
  },
  "comments": 10,
  "created_at": "2018-08-02T18:57:51Z",
  "updated_at": "2018-09-07T10:16:52Z",
  "closed_at": "2018-09-07T10:16:52Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "With the 2.0 release coming soon, we want to stabilize as much of our API as possible, and in the process reduce the attack surface of our contracts. It's been pointed out that `RBACOwnable` is very similar to `Ownable` and could easily replace it, providing future extensibility, at the cost of added complexity.\r\n\r\nWe need to decide whether to keep both contracts or remove `Ownable` altogether from the codebase (which would impact some contracts like `Heritable`). I personally think this duplication is a mistake, which has caused the `owner` concept to extend to places where it doesn't belong (e.g. `Mintable`), and that we'd benefit greatly from the role semantics (`minter`, `burner`, etc.). This would also mean dropping the `RBAC` prefix from multiple contracts, since that's our standard role solution (e.g. `RBACOwnable` and `RBACMintable` would simply be `Ownable` and `Mintable`).\r\n\r\nThis is a place to discuss whether or not we want to do this: if consensus is reached and we decide to move forward, we'll also need to settle on a design for the affected contracts (like `Inheritable`).\r\n\r\nResolves https://github.com/OpenZeppelin/zeppelin-solidity/issues/366.",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1146/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1146/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/410043226",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1146#issuecomment-410043226",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1146",
    "id": 410043226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDA0MzIyNg==",
    "user": {
      "login": "come-maiz",
      "id": 617831,
      "node_id": "MDQ6VXNlcjYxNzgzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/617831?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/come-maiz",
      "html_url": "https://github.com/come-maiz",
      "followers_url": "https://api.github.com/users/come-maiz/followers",
      "following_url": "https://api.github.com/users/come-maiz/following{/other_user}",
      "gists_url": "https://api.github.com/users/come-maiz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/come-maiz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/come-maiz/subscriptions",
      "organizations_url": "https://api.github.com/users/come-maiz/orgs",
      "repos_url": "https://api.github.com/users/come-maiz/repos",
      "events_url": "https://api.github.com/users/come-maiz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/come-maiz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-02T19:36:39Z",
    "updated_at": "2018-08-02T19:36:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am in favor of replacing Ownable with RBACOwnable. For people who feel strongly about using the simple Ownable, they can always install a pre-2.0 version of openzeppelin-solidity. And I think this is a momento to start thinking about extensibility and more interesting use cases for ethereum contracts. This is what an API designed on top of RBAC give us.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/410043226/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/410062543",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1146#issuecomment-410062543",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1146",
    "id": 410062543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDA2MjU0Mw==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-02T20:46:05Z",
    "updated_at": "2018-08-02T20:46:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm in favor of switching to RBAC as described.\r\n\r\nOnly concern is that Ownable as a \"single account that has admin permissions with minimal code\" is a useful concept. Perhaps we could change it to `WithAdmin` and include it in a folder like `//contracts/access/minimal/WithAdmin.sol`?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/410062543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/410565088",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1146#issuecomment-410565088",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1146",
    "id": 410565088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDU2NTA4OA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-06T01:29:33Z",
    "updated_at": "2018-08-06T01:29:33Z",
    "author_association": "MEMBER",
    "body": "I'm in favor of replacing `Ownable` with `RBAC` and more granular roles. I'm not quite convinced that we should make everything `RBACOwnable` instead, because it doesn't make permissions more granular. (By the way, `RBACOwnable` is not merged yet. It's in #1020.)\r\n\r\nTo explain a bit further, the idea here is to change all the contracts that currently provide `onlyOwner` functionality, to instead define a specific _role_ and use something like an `only(role)` modifier. So, for example, `MintableToken` would have a `minter` role, and `PausableToken` would have a `pauser` (?) role. These roles can then be assigned via `RBAC` to different sets of accounts.\r\n\r\nThere are a couple of outstanding problems that we need to resolve.\r\n\r\n1) #1090\r\n2) Provide a way to nicely declare and/or manage who is assigned to what roles.\r\n\r\nRegarding the second point. Currently `RBAC` only provides `internal` functions and the user must design and include via inheritance their own role management scheme. This is not a very good experience. We should provide something out of the box. The complexity of having different roles shows here in that it's not trivial to design a universal API for it.\r\n\r\nA first alternative is to have a `role admin` role who can dynamically add and remove roles to accounts. This feels like going back to `Ownable` but the admin can give up its role once everything is set up.\r\n\r\nAnother one is to have something like a \"role descriptor\" `RBAC` constructor argument that encodes the addresses assigned to each role, and potentially an admin that can change that during the contract lifetime.\r\n\r\nThese are just some ideas.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/410565088/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/411420218",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1146#issuecomment-411420218",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1146",
    "id": 411420218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTQyMDIxOA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-08T14:12:59Z",
    "updated_at": "2018-08-08T14:12:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "The current proposed changeset is as follows:\r\n * Solve #1090 \r\n * Provide some sort of role-initialization in RBAC constructor (array of roles with addresses for each?)\r\n * Provide some sort of RBACWithAdmin mixin, a role that is able to add other roles, and give it up\r\n * Migrate all role-related uses of `Ownable` to `RBAC` (e.g. `MintableToken`, `Pausable`, etc)\r\n * Introduce a new concept (we don't have a name for it yet, we internally call it 'true ownership') with a behavior similar to `Ownable`'s (minus `transferOwnership`), and use it to model the relationships between 'main' contracts and their 'auxiliary' contracts (e.g. `PullPayment` and its `Escrow`)\r\n * Keep `Ownable` in OpenZeppelin (though no contracts will use it), to both ease the transition and provide a contract that is useful for quick and dirty prototyping, probably with a comment describing the new alternate systems (roles and true ownership)\r\n * Remove `Heritable` and other `Ownable`-related contracts, possibly providing role-based alternatives (when applicable)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/411420218/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/411492321",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1146#issuecomment-411492321",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1146",
    "id": 411492321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTQ5MjMyMQ==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-08T17:44:40Z",
    "updated_at": "2018-08-08T17:44:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@frangio \r\n\r\n> Regarding the second point. Currently RBAC only provides internal functions and the user must design and include via inheritance their own role management scheme. This is not a very good experience. We should provide something out of the box.\r\n\r\nI'm not sure there's a default behavior that is both universally useful and not a security concern. Something like RBACWithAdmin is useful out of the box, but defining the management API of your access control layer is very much an application-specific problem. It feels like the best middle ground i stuff like RBACOwnable, RBACMintable, RBACHeritable, etc etc where we pre-code the access control layer CRUD operations for specific applications of RBAC.\r\n\r\n@nventuro \r\n\r\n> Provide some sort of role-initialization in RBAC constructor (array of roles with addresses for each?)\r\n\r\nprobably the best option before abiencoderv2 ships\r\n\r\n> Introduce a new concept (we don't have a name for it yet, we internally call it 'true ownership') with a behavior similar to Ownable's (minus transferOwnership), and use it to model the relationships between 'main' contracts and their 'auxiliary' contracts (e.g. PullPayment and its Escrow)\r\n\r\nwhat about \"pinned\"? i.e. \"escrow is pinned to pull payment.\"\r\nor maybe \"pegged\"?\r\nor maybe \"tracked\"?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/411492321/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/411583784",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1146#issuecomment-411583784",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1146",
    "id": 411583784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTU4Mzc4NA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-08T23:15:55Z",
    "updated_at": "2018-08-08T23:16:06Z",
    "author_association": "MEMBER",
    "body": ">I'm not sure there's a default behavior that is both universally useful and not a security concern.\r\n\r\nI definitely agree. The thing that's missing that would be universally useful and secure is a way to set up an initial assignment of roles on deployment. It's one of the points that @nventuro wrote down though.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/411583784/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/411584019",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1146#issuecomment-411584019",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1146",
    "id": 411584019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTU4NDAxOQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-08T23:17:14Z",
    "updated_at": "2018-08-08T23:17:14Z",
    "author_association": "MEMBER",
    "body": "Regarding names for \"true ownership\"... what about `Private`?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/411584019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/411596988",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1146#issuecomment-411596988",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1146",
    "id": 411596988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTU5Njk4OA==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T00:25:06Z",
    "updated_at": "2018-08-09T00:25:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "\"private owner\" could work..\r\n\r\nWe could take a term from the military and use \"commander\": escrow's commander is pull payment.\r\n\r\nOr from computing and use \"master/slave\": escrow is slave to pull payment.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/411596988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/412480545",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1146#issuecomment-412480545",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1146",
    "id": 412480545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjQ4MDU0NQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T10:54:00Z",
    "updated_at": "2018-08-13T10:54:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not a fan of 'commander', the other contract isn't really taking commands IMO. Also, the industry has [moved a bit away](https://en.wikipedia.org/wiki/Master/slave_(technology)#Terminology_concerns) from the 'master/slave/ terminology, since it doesn't evoke the happiest feelings.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/412480545/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/412615575",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1146#issuecomment-412615575",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1146",
    "id": 412615575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjYxNTU3NQ==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T18:21:07Z",
    "updated_at": "2018-08-13T18:21:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yup yup. The perspective on that master/slave terminology is a little odd, but those arguments have been well documented.\r\n\r\nHow about we keep `Owner` for the master/slave scenario and change `Owner` to `Manager` for the other case?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/412615575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
