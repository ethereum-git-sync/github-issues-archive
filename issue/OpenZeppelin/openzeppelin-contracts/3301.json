{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3301",
  "id": 1184379764,
  "node_id": "I_kwDOA9tCBs5GmDN0",
  "number": 3301,
  "title": "ERC1155Supply: Add totalSupply() function that returns overall supply count",
  "user": {
    "login": "philipSKYBIT",
    "id": 70418730,
    "node_id": "MDQ6VXNlcjcwNDE4NzMw",
    "avatar_url": "https://avatars.githubusercontent.com/u/70418730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/philipSKYBIT",
    "html_url": "https://github.com/philipSKYBIT",
    "followers_url": "https://api.github.com/users/philipSKYBIT/followers",
    "following_url": "https://api.github.com/users/philipSKYBIT/following{/other_user}",
    "gists_url": "https://api.github.com/users/philipSKYBIT/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/philipSKYBIT/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/philipSKYBIT/subscriptions",
    "organizations_url": "https://api.github.com/users/philipSKYBIT/orgs",
    "repos_url": "https://api.github.com/users/philipSKYBIT/repos",
    "events_url": "https://api.github.com/users/philipSKYBIT/events{/privacy}",
    "received_events_url": "https://api.github.com/users/philipSKYBIT/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/11",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11/labels",
    "id": 7990184,
    "node_id": "MI_kwDOA9tCBs4Aeeuo",
    "number": 11,
    "title": "5.0",
    "description": null,
    "creator": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 31,
    "closed_issues": 45,
    "state": "open",
    "created_at": "2022-05-17T19:52:44Z",
    "updated_at": "2023-06-29T16:00:39Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 15,
  "created_at": "2022-03-29T06:40:23Z",
  "updated_at": "2023-01-31T02:30:29Z",
  "closed_at": "2023-01-31T02:30:28Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n[ERC1155Supply](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol) only counts by token ID. In some cases we may want a general overall count of all tokens that have been minted under the contract. e.g. etherscan and polygonscan tries to call `totalSupply()` when showing information about an NFT, and shows an error on the page if it failed.\r\n\r\n![image](https://user-images.githubusercontent.com/70418730/160549007-4e049561-814a-4084-a9c8-fb0052bccab3.png)\r\n\r\n\r\n**üìù Details**\r\nHaving only a count for each token ID in `ERC1155Supply` means to get an overall total count, options are:\r\n\r\n- loop through all minted token IDs and call `totalSupply(id)`\r\n- or not use `ERC1155Supply` and within the ERC1155 contract:\r\n-- use [Counters](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Counters.sol). But `Counters` cannot increment by more than 1, which we'd want after a batch mint. Here is an issue about this: https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3296\r\n-- or just use `uint256` instead of both `ERC1155Supply` and `Counters`\r\n\r\nI still want to use `ERC1155Supply` as its purpose is supply tracking. I propose to add overloaded function `totalSupply()` that returns the overall count.\r\n\r\nSome code that could be added are:\r\n\r\n```uint256 private _totalSupplyAll;```\r\n\r\n```solidity\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        return _totalSupplyAll;\r\n    }\r\n```\r\nIn `_beforeTokenTransfer`:\r\n```solidity\r\n        if (from == address(0)) {\r\n            for (uint256 i = 0; i < ids.length; ++i) {\r\n                _totalSupply[ids[i]] += amounts[i];\r\n                _totalSupplyAll += amounts[i];\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            for (uint256 i = 0; i < ids.length; ++i) {\r\n                _totalSupply[ids[i]] -= amounts[i];\r\n                _totalSupplyAll -= amounts[i];\r\n            }\r\n        }\r\n```",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1081593756",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3301#issuecomment-1081593756",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301",
    "id": 1081593756,
    "node_id": "IC_kwDOA9tCBs5Ad8-c",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-29T08:40:37Z",
    "updated_at": "2022-03-29T08:40:37Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @philipSKYBIT \r\n\r\nIf someone wanted to track the overall token supply, the best way would indeed be to have a `uint256 _totalSupplyAll` variable, that gets incremented in the `_beforeTokenTransfer` hook. \r\n\r\nThe reason why we don't have it is:\r\n- When we received a request for `totalSupply` support in ERC1155, what was requested was a totalSupply per ID\r\n- We have not, so far, seen any usecase for a totalSupplyAll.\r\n- *A developer can easily add that himself if he/she needs it*\r\n- Bundling it with `ERC1155Supply` would make this module even more expensive to use. Why pay for both if you possibly only need one?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1081593756/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1090995053",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3301#issuecomment-1090995053",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301",
    "id": 1090995053,
    "node_id": "IC_kwDOA9tCBs5BB0Nt",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-07T01:52:15Z",
    "updated_at": "2022-04-07T01:52:15Z",
    "author_association": "MEMBER",
    "body": "To be fair, this variable would only get read/written on mints and burns, so I wouldn't entirely rule out adding `totalSupply()` in `ERC1155Supply`.\r\n\r\nBefore agreeing, I would like to understand the motivation a little more. What page on Etherscan tries to access this function?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1090995053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1094235987",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3301#issuecomment-1094235987",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301",
    "id": 1094235987,
    "node_id": "IC_kwDOA9tCBs5BOLdT",
    "user": {
      "login": "philipSKYBIT",
      "id": 70418730,
      "node_id": "MDQ6VXNlcjcwNDE4NzMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/70418730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/philipSKYBIT",
      "html_url": "https://github.com/philipSKYBIT",
      "followers_url": "https://api.github.com/users/philipSKYBIT/followers",
      "following_url": "https://api.github.com/users/philipSKYBIT/following{/other_user}",
      "gists_url": "https://api.github.com/users/philipSKYBIT/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/philipSKYBIT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/philipSKYBIT/subscriptions",
      "organizations_url": "https://api.github.com/users/philipSKYBIT/orgs",
      "repos_url": "https://api.github.com/users/philipSKYBIT/repos",
      "events_url": "https://api.github.com/users/philipSKYBIT/events{/privacy}",
      "received_events_url": "https://api.github.com/users/philipSKYBIT/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-10T10:04:57Z",
    "updated_at": "2022-04-10T11:12:29Z",
    "author_association": "NONE",
    "body": "> What page on Etherscan tries to access this function?\r\n\r\nOn the Etherscan token page e.g.:\r\nhttps://etherscan.io/token/0xddb149ae8e6635df01a530da1e46921bd78dc385\r\nhttps://etherscan.io/token/0x341a1c534248966c4b6afad165b98daed4b964ef\r\n\r\nIt's the same on Polygonscan.\r\n\r\nWe want to be able to show total supply minted so far on a minting dapp page.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1094235987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1095176918",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3301#issuecomment-1095176918",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301",
    "id": 1095176918,
    "node_id": "IC_kwDOA9tCBs5BRxLW",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-11T15:11:24Z",
    "updated_at": "2022-04-11T15:11:24Z",
    "author_association": "MEMBER",
    "body": "@philipSKYBIT Can you confirm on a testnet Etherscan that if there is a `totalSupply()` method in an ERC1155 token Etherscan will show its value properly?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1095176918/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1096585568",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3301#issuecomment-1096585568",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301",
    "id": 1096585568,
    "node_id": "IC_kwDOA9tCBs5BXJFg",
    "user": {
      "login": "philipSKYBIT",
      "id": 70418730,
      "node_id": "MDQ6VXNlcjcwNDE4NzMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/70418730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/philipSKYBIT",
      "html_url": "https://github.com/philipSKYBIT",
      "followers_url": "https://api.github.com/users/philipSKYBIT/followers",
      "following_url": "https://api.github.com/users/philipSKYBIT/following{/other_user}",
      "gists_url": "https://api.github.com/users/philipSKYBIT/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/philipSKYBIT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/philipSKYBIT/subscriptions",
      "organizations_url": "https://api.github.com/users/philipSKYBIT/orgs",
      "repos_url": "https://api.github.com/users/philipSKYBIT/repos",
      "events_url": "https://api.github.com/users/philipSKYBIT/events{/privacy}",
      "received_events_url": "https://api.github.com/users/philipSKYBIT/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-12T11:11:28Z",
    "updated_at": "2022-04-12T11:11:28Z",
    "author_association": "NONE",
    "body": "https://goerli.etherscan.io/token/0xfA7644E6204B2eeA4C46762Bf82a9570a2054eE8\r\n\r\nI minted 2 tokens, and etherscan correctly shows 2 as total supply.\r\n\r\nI had created and imported `ERC1155SupplyWithAll.sol` which is my modified version of `ERC1155Supply.sol`:\r\n```solidity\r\n// SPDX-License-Identifier: MIT\r\n// Modified version of OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/ERC1155Supply.sol) - added totalSupply overall\r\n\r\npragma solidity ^0.8.0;\r\n\r\n// import \"../ERC1155.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\n\r\n/**\r\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\r\n *\r\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\r\n * clearly identified. Note: While a totalSupply of 1 might mean the\r\n * corresponding is an NFT, there is no guarantees that no other token with the\r\n * same id are not going to be minted.\r\n */\r\nabstract contract ERC1155SupplyWithAll is ERC1155 {\r\n    mapping(uint256 => uint256) private _totalSupply;\r\n    uint256 private _totalSupplyAll;\r\n\r\n    /**\r\n     * @dev Total amount of tokens in with a given id.\r\n     */\r\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\r\n        return _totalSupply[id];\r\n    }\r\n\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        return _totalSupplyAll;\r\n    }\r\n\r\n    /**\r\n     * @dev Indicates whether any token exist with a given id, or not.\r\n     */\r\n    function exists(uint256 id) public view virtual returns (bool) {\r\n        return totalSupply(id) > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev See {ERC1155-_beforeTokenTransfer}.\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual override {\r\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        if (from == address(0)) {\r\n            for (uint256 i = 0; i < ids.length; ++i) {\r\n                _totalSupply[ids[i]] += amounts[i];\r\n                _totalSupplyAll += amounts[i];\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            for (uint256 i = 0; i < ids.length; ++i) {\r\n                _totalSupply[ids[i]] -= amounts[i];\r\n                _totalSupplyAll -= amounts[i];\r\n            }\r\n        }\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1096585568/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1264872251",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3301#issuecomment-1264872251",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301",
    "id": 1264872251,
    "node_id": "IC_kwDOA9tCBs5LZGs7",
    "user": {
      "login": "apecollector",
      "id": 100589991,
      "node_id": "U_kgDOBf7hpw",
      "avatar_url": "https://avatars.githubusercontent.com/u/100589991?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apecollector",
      "html_url": "https://github.com/apecollector",
      "followers_url": "https://api.github.com/users/apecollector/followers",
      "following_url": "https://api.github.com/users/apecollector/following{/other_user}",
      "gists_url": "https://api.github.com/users/apecollector/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apecollector/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apecollector/subscriptions",
      "organizations_url": "https://api.github.com/users/apecollector/orgs",
      "repos_url": "https://api.github.com/users/apecollector/repos",
      "events_url": "https://api.github.com/users/apecollector/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apecollector/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-03T03:07:34Z",
    "updated_at": "2022-10-03T04:25:30Z",
    "author_association": "NONE",
    "body": "Would really be good if this was considered, I think the current supply makes the contract seem broken or non-standard conforming when viewing on etherscan:\r\n\r\n<img width=\"450\" alt=\"Screen Shot 2022-10-03 at 10 06 42 AM\" src=\"https://user-images.githubusercontent.com/100589991/193494687-1b1aef48-0996-4448-af16-4e26b3d7298f.png\">\r\n\r\nAlso I can confirm that with a `totalSupply()` method it shows the total tokens:\r\n\r\n<img width=\"291\" alt=\"Screen Shot 2022-10-03 at 11 25 09 AM\" src=\"https://user-images.githubusercontent.com/100589991/193501431-328fe78d-ef90-42e1-9183-65b8484d2a0b.png\">\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1264872251/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1270688838",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3301#issuecomment-1270688838",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301",
    "id": 1270688838,
    "node_id": "IC_kwDOA9tCBs5LvSxG",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-06T20:56:24Z",
    "updated_at": "2022-10-06T20:56:24Z",
    "author_association": "MEMBER",
    "body": "Feel free to submit a pull request with this change to ERC1155Supply.\r\n\r\nNote that the code submitted by @philipSKYBIT above is suboptimal because the global supply is updated once for each token in the batch transfer, we should optimize this by accumulating in one variable and writing to storage just once.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1270688838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1396866365",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3301#issuecomment-1396866365",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301",
    "id": 1396866365,
    "node_id": "IC_kwDOA9tCBs5TQn09",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T12:02:24Z",
    "updated_at": "2023-01-19T12:32:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Since I just recently implemented the `ERC1155` token in Vyper I was also considering this option but I would like to share a big caveat here (not sure whether this was already discussed; at least not in this issue) that I arrived at when thinking about it. The variable `_totalSupplyAll` is of type `uint256`, meaning that the overall supply **across all** `ids` cannot exceed `type(uint256).max` (in order to make that theoretically work we would need a `uint512` type; probably practically something like `uint328` would be enough :)). I feel like this is important to consider before a decision is made to implement that feature.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1396866365/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1396927596",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3301#issuecomment-1396927596",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301",
    "id": 1396927596,
    "node_id": "IC_kwDOA9tCBs5TQ2xs",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T12:51:32Z",
    "updated_at": "2023-01-19T12:51:32Z",
    "author_association": "COLLABORATOR",
    "body": "Yes @pcaversaccio, this is something we have identified. [See this comment on the PR](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3962#pullrequestreview-1251172008).\r\n\r\nDo you feel like this constraint would be cause real issues, or will it remain mostly theoretical. Said differently, do you know any ERC1155 contract where the supply as large enough for this value to overflow ?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1396927596/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1397013376",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3301#issuecomment-1397013376",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301",
    "id": 1397013376,
    "node_id": "IC_kwDOA9tCBs5TRLuA",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T13:52:18Z",
    "updated_at": "2023-01-19T13:52:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "awesome - thx for the link. So am personally not aware of any `ERC1155` contract which would be close enough to exceed the total supply of `2**256-1`. Maybe it's time to run some Dune analytics :-). What I however feel is that new contract features should be _future-proof_. Since `ERC1155` has efficient minting it could be reasonable that maybe for certain, yet unknown use cases, the threshold will be breached. Or in other words, I would consider this caveat as a rather low-risk issue in the current environment but since we live in an immutable world, decisions made now can have long-lasting impacts and we're not aware of the market dynamics in 1 month, 1 year or so on (NFTs were not even part of the Ethereum White Paper iirc). ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1397013376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1397041460",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3301#issuecomment-1397041460",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301",
    "id": 1397041460,
    "node_id": "IC_kwDOA9tCBs5TRSk0",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T14:12:05Z",
    "updated_at": "2023-01-19T14:12:37Z",
    "author_association": "MEMBER",
    "body": "In any case this will never be included by default so users can make an informed decision if they decide to use this functionality with what it entails.\n\nI had also proposed to make the total supply number saturate at the max and cause the getter to revert from then on. This would be acceptable if the function is only used off chain but can't be sure about that.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1397041460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1397071574",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3301#issuecomment-1397071574",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301",
    "id": 1397071574,
    "node_id": "IC_kwDOA9tCBs5TRZ7W",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T14:33:24Z",
    "updated_at": "2023-01-19T14:33:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "> so users can make an informed decision\r\n\r\nI wish this was true - how many times will people simply go to OpenZeppelin Wizard, and enable \"Supply Tracking\" because they read \"Keeps track of total supply of tokens.\" which sounds like a good feature to have and that's it...\r\n\r\nReverting with a nice message or custom error would be indeed informative but who knows how people will interact in the future.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1397071574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1397485086",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3301#issuecomment-1397485086",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301",
    "id": 1397485086,
    "node_id": "IC_kwDOA9tCBs5TS-4e",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T19:18:24Z",
    "updated_at": "2023-01-19T19:18:24Z",
    "author_association": "MEMBER",
    "body": "We're with you, making a library without footguns is definitely part of our design philosophy, but at some point we need to treat users like adults too. :sweat_smile: In this particular case, the reasoning for me is that this is unlikely to be a problem. If it was likely, say it capped the supply to a low number, then I would not be okay with it.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1397485086/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1398106297",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3301#issuecomment-1398106297",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301",
    "id": 1398106297,
    "node_id": "IC_kwDOA9tCBs5TVWi5",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-20T09:10:37Z",
    "updated_at": "2023-01-20T09:10:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "> we need to treat users like adults too. \r\n\r\nFair enough üòé - but just for the sake of history, I hereby make a bet that at some time in the future there will be a case where an overflow will happen and it will pose a problem (think of `totalSupply` is used as part of a weird fee calculation somewhere :-D; they will be surprised if at some point the calculation will revert or wrap, depending on the implementation). But overall I agree with you that at some point you guys need to accept certain tradeoffs. I think actually that the most important part is already done - there is an issue documenting this behavior as well as proper documentation will explain this design pattern. I actually like that you don't want to include it in `4.9.0` since it's kind of a breaking change.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1398106297/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1409652959",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3301#issuecomment-1409652959",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3301",
    "id": 1409652959,
    "node_id": "IC_kwDOA9tCBs5UBZjf",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-31T02:30:28Z",
    "updated_at": "2023-01-31T02:30:28Z",
    "author_association": "MEMBER",
    "body": "Fixed by https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3962 in `next-v5.0`.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1409652959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
