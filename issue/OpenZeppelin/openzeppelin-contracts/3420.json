{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3420",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3420/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3420/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3420/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3420",
  "id": 1239855385,
  "node_id": "I_kwDOA9tCBs5J5rEZ",
  "number": 3420,
  "title": "ERC20 access modifiers",
  "user": {
    "login": "Rinnekioku",
    "id": 76428367,
    "node_id": "MDQ6VXNlcjc2NDI4MzY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/76428367?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Rinnekioku",
    "html_url": "https://github.com/Rinnekioku",
    "followers_url": "https://api.github.com/users/Rinnekioku/followers",
    "following_url": "https://api.github.com/users/Rinnekioku/following{/other_user}",
    "gists_url": "https://api.github.com/users/Rinnekioku/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Rinnekioku/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Rinnekioku/subscriptions",
    "organizations_url": "https://api.github.com/users/Rinnekioku/orgs",
    "repos_url": "https://api.github.com/users/Rinnekioku/repos",
    "events_url": "https://api.github.com/users/Rinnekioku/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Rinnekioku/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-05-18T12:04:37Z",
  "updated_at": "2022-05-18T14:32:45Z",
  "closed_at": "2022-05-18T13:18:22Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**🧐 Motivation**\r\nImprove UX and make contracts more flexible\r\n\r\n**📝 Details**\r\nI would suggest to restrict \r\n\r\nthis\r\n```\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    ...\r\n}\r\n```\r\nto this\r\n```\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) internal _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) internal _allowances;\r\n\r\n    uint256 internal _totalSupply;\r\n\r\n    string internal _name;\r\n    string internal _symbol;\r\n\r\n    ...\r\n}\r\n```\r\nbecause it allows us not to write unnecessary boilerplates of code, if I want to add something to hook ```_beforeTokenTransfer``` I can't modify balances in it, but in my case I need to do it and that makes me to implement a lot of unnecessary, instead we can change ```private``` to ```internal``` and problems would be solved and this also would not affect a lot\r\n\r\nThanks\r\n",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3420/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3420/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1130007284",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3420#issuecomment-1130007284",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3420",
    "id": 1130007284,
    "node_id": "IC_kwDOA9tCBs5DWor0",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-18T13:18:14Z",
    "updated_at": "2022-05-18T13:18:14Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @Rinnekioku \r\n\r\n[This has already been discussed multiple times, both for ERC20 and for other contracts.](https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3388#issuecomment-1117366857)\r\n\r\n> This has been asked multiple times before. Our state variables are private so we can make sure invariants are maintained. For example, the owners mapping shouldn't be modified without also emitting Transfer events, and we make sure of this by keeping the variable private and allowing modification only through the internal interface _mint, _transfer, and so on.\r\n> \r\n> If these internal functions are not enough to implement a particular use case we expect to hear about it so we can consider extending the internal interface appropriately.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1130007284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1130072232",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3420#issuecomment-1130072232",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3420",
    "id": 1130072232,
    "node_id": "IC_kwDOA9tCBs5DW4io",
    "user": {
      "login": "Rinnekioku",
      "id": 76428367,
      "node_id": "MDQ6VXNlcjc2NDI4MzY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/76428367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rinnekioku",
      "html_url": "https://github.com/Rinnekioku",
      "followers_url": "https://api.github.com/users/Rinnekioku/followers",
      "following_url": "https://api.github.com/users/Rinnekioku/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rinnekioku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rinnekioku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rinnekioku/subscriptions",
      "organizations_url": "https://api.github.com/users/Rinnekioku/orgs",
      "repos_url": "https://api.github.com/users/Rinnekioku/repos",
      "events_url": "https://api.github.com/users/Rinnekioku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rinnekioku/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-18T14:13:09Z",
    "updated_at": "2022-05-18T14:13:09Z",
    "author_association": "NONE",
    "body": "I want to do it because I want to mint coins only once and have fixed emission of tokens, I know that I can use mint to add tokens, but in my case it would make some strange actions of smart contract behavior ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1130072232/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1130095920",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3420#issuecomment-1130095920",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3420",
    "id": 1130095920,
    "node_id": "IC_kwDOA9tCBs5DW-Uw",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-18T14:32:45Z",
    "updated_at": "2022-05-18T14:32:45Z",
    "author_association": "COLLABORATOR",
    "body": ">I want to mint coins only once and have fixed emission of tokens\r\n\r\nThere are many ways to do that without needing to change the codebase:\r\n- You can put `_mint()` in the constructor to and then have the _mint function not used anywhere else\r\n- You could use the \"ERC20Capped\" extension if you are more into limiting the supply, but minting multiple times\r\n\r\nWritting directly into balances means you might forget to update the totalSupply ... or you might forget to trigger an event ... this is basically what we are preventing. If you want to change the balance, then you HAVE to call either _mint, _burn or _transfer, which will update the totalSupply accordingly, and emit the events other systems are relying on.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1130095920/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
