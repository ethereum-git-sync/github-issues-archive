{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/50",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/50/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/50/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/50/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/50",
  "id": 186805621,
  "node_id": "MDU6SXNzdWUxODY4MDU2MjE=",
  "number": 50,
  "title": "Superuser: Upgradeable security for Smart Contracts",
  "user": {
    "login": "federicobond",
    "id": 138426,
    "node_id": "MDQ6VXNlcjEzODQyNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/138426?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/federicobond",
    "html_url": "https://github.com/federicobond",
    "followers_url": "https://api.github.com/users/federicobond/followers",
    "following_url": "https://api.github.com/users/federicobond/following{/other_user}",
    "gists_url": "https://api.github.com/users/federicobond/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/federicobond/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/federicobond/subscriptions",
    "organizations_url": "https://api.github.com/users/federicobond/orgs",
    "repos_url": "https://api.github.com/users/federicobond/repos",
    "events_url": "https://api.github.com/users/federicobond/events{/privacy}",
    "received_events_url": "https://api.github.com/users/federicobond/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650860,
      "node_id": "MDU6TGFiZWw1MDM2NTA4NjA=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/feature",
      "name": "feature",
      "color": "b9db64",
      "default": false,
      "description": "New contracts, functions, or helpers."
    },
    {
      "id": 503650966,
      "node_id": "MDU6TGFiZWw1MDM2NTA5NjY=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0e8a16",
      "default": true,
      "description": "Low hanging fruit for new contributors to get involved!"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2016-11-02T13:49:53Z",
  "updated_at": "2018-06-03T23:14:31Z",
  "closed_at": "2018-06-03T23:14:31Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**Scenario:** you create a small crowdsale for your widget and it becomes really popular very quickly. Now there is a million dollar price tag on the poorly secured private key you used to deploy your contract and you start sleeping badly at night. Nobody worth their salt would secure a million dollars in a hot wallet.\r\n\r\nLuckily, you remember that your contract inherits from `Superuser`, so next morning you generate a key in cold storage and take note of its address. You then use your owner account to `configureSuperuser(address)` and your sleep improves again because any sensitive method is using the `requireSuperuser` modifier. This modifier ensures that `msg.sender` is the superuser or (in case no superuser is configured, the owner). BOOM! Upgradeable security and peace of mind.\r\n\r\nI will have a working implementation later today. Feel free to leave any feedback.\r\n\r\n**UPDATE:** As was pointed out in the Slack channel, this is not a good example, as you can just transfer the ownership of the contract. A better example is when you want to keep a hot key for performing managerial actions but have a cold storage key as superuser in case the hot key is compromised.",
  "closed_by": {
    "login": "shrugs",
    "id": 1535001,
    "node_id": "MDQ6VXNlcjE1MzUwMDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/shrugs",
    "html_url": "https://github.com/shrugs",
    "followers_url": "https://api.github.com/users/shrugs/followers",
    "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
    "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
    "organizations_url": "https://api.github.com/users/shrugs/orgs",
    "repos_url": "https://api.github.com/users/shrugs/repos",
    "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
    "received_events_url": "https://api.github.com/users/shrugs/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/50/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/50/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/257900269",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/50#issuecomment-257900269",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/50",
    "id": 257900269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzkwMDI2OQ==",
    "user": {
      "login": "maraoz",
      "id": 287189,
      "node_id": "MDQ6VXNlcjI4NzE4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/287189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maraoz",
      "html_url": "https://github.com/maraoz",
      "followers_url": "https://api.github.com/users/maraoz/followers",
      "following_url": "https://api.github.com/users/maraoz/following{/other_user}",
      "gists_url": "https://api.github.com/users/maraoz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maraoz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maraoz/subscriptions",
      "organizations_url": "https://api.github.com/users/maraoz/orgs",
      "repos_url": "https://api.github.com/users/maraoz/repos",
      "events_url": "https://api.github.com/users/maraoz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maraoz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-02T15:29:46Z",
    "updated_at": "2016-11-02T15:29:46Z",
    "author_association": "CONTRIBUTOR",
    "body": ":+1: nice idea. Maybe the example is not the best, true, but I see the value\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/257900269/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/355555846",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/50#issuecomment-355555846",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/50",
    "id": 355555846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTU1NTg0Ng==",
    "user": {
      "login": "ajsantander",
      "id": 550409,
      "node_id": "MDQ6VXNlcjU1MDQwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/550409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsantander",
      "html_url": "https://github.com/ajsantander",
      "followers_url": "https://api.github.com/users/ajsantander/followers",
      "following_url": "https://api.github.com/users/ajsantander/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsantander/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsantander/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsantander/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsantander/orgs",
      "repos_url": "https://api.github.com/users/ajsantander/repos",
      "events_url": "https://api.github.com/users/ajsantander/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsantander/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T13:35:00Z",
    "updated_at": "2018-01-05T13:35:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@federicobond would you like to make a PR to explore this idea?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/355555846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/355563391",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/50#issuecomment-355563391",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/50",
    "id": 355563391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTU2MzM5MQ==",
    "user": {
      "login": "federicobond",
      "id": 138426,
      "node_id": "MDQ6VXNlcjEzODQyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/federicobond",
      "html_url": "https://github.com/federicobond",
      "followers_url": "https://api.github.com/users/federicobond/followers",
      "following_url": "https://api.github.com/users/federicobond/following{/other_user}",
      "gists_url": "https://api.github.com/users/federicobond/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/federicobond/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/federicobond/subscriptions",
      "organizations_url": "https://api.github.com/users/federicobond/orgs",
      "repos_url": "https://api.github.com/users/federicobond/repos",
      "events_url": "https://api.github.com/users/federicobond/events{/privacy}",
      "received_events_url": "https://api.github.com/users/federicobond/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T14:11:00Z",
    "updated_at": "2018-01-05T14:11:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not sure if the use case is general enough to warrant its inclusion in Zeppelin, but here are my updated thoughts on it:\r\n\r\nA Superuser contract would inherit from Ownable. The superuser variable in this contract points to an address whose key should be kept in a cold wallet and never used for any other purpose. If there is a security breach and someone gets access to the owner key, this can be used as a last resort to regain control of the contract, transferring the ownership back to the original owner.\r\n\r\n```\r\ncontract Superuser is Ownable {\r\n    address public superuser;\r\n    function setOwner(); // can only be called by superuser\r\n    function transferSuperuser(); // can be called by superuser or owner if superuser is not defined\r\n}\r\n```\r\nThis could be useful if owner key must be used on a regular basis for administrative purposes.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/355563391/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/386486329",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/50#issuecomment-386486329",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/50",
    "id": 386486329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjQ4NjMyOQ==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T01:44:49Z",
    "updated_at": "2018-05-04T01:44:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "This could/should be implemented with RBAC.sol now that it's available :)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/386486329/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/388241443",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/50#issuecomment-388241443",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/50",
    "id": 388241443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODI0MTQ0Mw==",
    "user": {
      "login": "come-maiz",
      "id": 617831,
      "node_id": "MDQ6VXNlcjYxNzgzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/617831?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/come-maiz",
      "html_url": "https://github.com/come-maiz",
      "followers_url": "https://api.github.com/users/come-maiz/followers",
      "following_url": "https://api.github.com/users/come-maiz/following{/other_user}",
      "gists_url": "https://api.github.com/users/come-maiz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/come-maiz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/come-maiz/subscriptions",
      "organizations_url": "https://api.github.com/users/come-maiz/orgs",
      "repos_url": "https://api.github.com/users/come-maiz/repos",
      "events_url": "https://api.github.com/users/come-maiz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/come-maiz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-11T02:30:37Z",
    "updated_at": "2018-05-11T02:30:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@federicobond still sounds relevant to me. Having two owners instead of one, good deal. \r\nAs @shrugs, now this is a lot easier. Maybe you can make a PR and then we discuss there if it makes sense to add it to openzeppelin, or we should just make a post to document how to do it. Are you still interested in helping with this?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/388241443/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/390425059",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/50#issuecomment-390425059",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/50",
    "id": 390425059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDQyNTA1OQ==",
    "user": {
      "login": "pmosse",
      "id": 6408341,
      "node_id": "MDQ6VXNlcjY0MDgzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6408341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmosse",
      "html_url": "https://github.com/pmosse",
      "followers_url": "https://api.github.com/users/pmosse/followers",
      "following_url": "https://api.github.com/users/pmosse/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmosse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmosse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmosse/subscriptions",
      "organizations_url": "https://api.github.com/users/pmosse/orgs",
      "repos_url": "https://api.github.com/users/pmosse/repos",
      "events_url": "https://api.github.com/users/pmosse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmosse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-19T18:50:47Z",
    "updated_at": "2018-05-19T18:50:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey,\r\n\r\nIf we implement the Superuser contract with RBAC, instead of having a single superuser we would have an unlimited number of them, by creating the superuser role. Do you think this is okay in a practical scenario? Besides that, we should make sure that superusers can only be set once (either in the constructor or with a setSuperusers function). Once they are set, the owner shouldn't be able to modify them as the owner's account could get compromised in the future.\r\nThis could be implemented by following a similar idea to the Whitelist contract and creating the setSuperusers (onlyOwner and onlyIfSuperusersUndefined) and transferOwnership (onlySuperuser) functions.\r\n\r\nIf we only want a single superuser, then maybe a contract inheriting just from Ownable should be enough, following @federicobond's idea.\r\n\r\nLet me know your thoughts and I can work in a PR.\r\n\r\n(You should know I am doing my first steps in OZ and Blokchain in general :) )\r\n\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/390425059/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/390436823",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/50#issuecomment-390436823",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/50",
    "id": 390436823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDQzNjgyMw==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-19T22:29:05Z",
    "updated_at": "2018-05-19T22:29:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can have the only function allowed to change superusers be `transferSuperuser()` which will unset the previous super user and then assign the new super user.\r\n\r\n```solidity\r\ncontract Superuser is Ownable, RBAC {\r\n  ROLE_SUPERUSER = \"superuser\";\r\n\r\n  modifier onlySuperuser() {\r\n    checkRole(msg.sender, ROLE_SUPERUSER);\r\n    _;\r\n  }\r\n\r\n  constructor () {\r\n    addRole(msg.sender, ROLE_SUPERUSER);\r\n  }\r\n\r\n  function transferSuperuser(address _newSuperuser) onlySuperuser() {\r\n    removeRole(msg.sender, ROLE_SUPERUSER);\r\n    addRole(_newSuperuser, ROLE_SUPERUSER);\r\n  }\r\n}\r\n```\r\n\r\nthat's pseudo code, but it seems to be the gist of it. This is pretty much how I implemented `RBACOwnable` in a pending PR to OZ.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/390436823/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/390436912",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/50#issuecomment-390436912",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/50",
    "id": 390436912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDQzNjkxMg==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-19T22:30:48Z",
    "updated_at": "2018-05-19T22:30:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Implementing single-address roles in rbac is relatively straightforward. the only difference between RBAC with \"only one person can have this role\" and something like `Ownable` is that the user's address isn't directly accessible in the contract; the callee must know an address in order to call `hasRole` and see if that address actually does have that role.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/390436912/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
