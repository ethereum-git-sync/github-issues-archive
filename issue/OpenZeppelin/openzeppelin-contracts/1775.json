{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1775",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1775/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1775/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1775/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1775",
  "id": 449285832,
  "node_id": "MDU6SXNzdWU0NDkyODU4MzI=",
  "number": 1775,
  "title": "Use mutator methods internally for Eternal Storage",
  "user": {
    "login": "daniellehrner",
    "id": 6727189,
    "node_id": "MDQ6VXNlcjY3MjcxODk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6727189?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/daniellehrner",
    "html_url": "https://github.com/daniellehrner",
    "followers_url": "https://api.github.com/users/daniellehrner/followers",
    "following_url": "https://api.github.com/users/daniellehrner/following{/other_user}",
    "gists_url": "https://api.github.com/users/daniellehrner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/daniellehrner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/daniellehrner/subscriptions",
    "organizations_url": "https://api.github.com/users/daniellehrner/orgs",
    "repos_url": "https://api.github.com/users/daniellehrner/repos",
    "events_url": "https://api.github.com/users/daniellehrner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/daniellehrner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1000207718,
      "node_id": "MDU6TGFiZWwxMDAwMjA3NzE4",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/contracts",
      "name": "contracts",
      "color": "1d76db",
      "default": false,
      "description": "Smart contract code."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-05-28T13:58:11Z",
  "updated_at": "2019-05-29T10:57:17Z",
  "closed_at": "2019-05-28T19:09:18Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nCurrently all variables in the smart contracts are directly accessed. While this is the most straight-forward approach and keeps the code simple, it prevents using alternative storage approaches like [eternal storage](https://fravoll.github.io/solidity-patterns/eternal_storage.html).\r\n\r\n**üìù Details**\r\nThere are different approaches for smart contract upgradability. One of them is the mentioned eternal storage pattern, which stores the data of a contract in another contract, which allows the upgrade of the \"logic smart contract\" without loosing the data of its previous version.\r\nCurrently openzeppelin-solidity does not allow this approach, because there is no way to change the underlying storage of the contracts. By using `internal` getters, setters and deleters a contract can extend the existing one and overwrite these methods to use an alternative storage approach.\r\nAs this would be a purely internal change, it should not introduce any breaking changes. I understand that the effort for it would be quite high, but I would be willing to offer my help there.",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1775/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1775/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/496579007",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1775#issuecomment-496579007",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1775",
    "id": 496579007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjU3OTAwNw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-28T15:58:16Z",
    "updated_at": "2019-05-28T15:58:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello @daniellehrner, thank you bringing this up!\r\n\r\nWe've actually considered supporting these patterns for the aforementioned reasons, but sadly never got around to.\r\n\r\nHave you performed any gas measurements comparing accessing a field directly, versus calling a `private` function that accesses the storage slot via a hash? I'd expect the cost of the SLOAD/SSTORE to dwarf the rest of the operation, but I've been wrong before :stuck_out_tongue: ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/496579007/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/496593651",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1775#issuecomment-496593651",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1775",
    "id": 496593651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjU5MzY1MQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-28T16:37:05Z",
    "updated_at": "2019-05-28T16:37:05Z",
    "author_association": "MEMBER",
    "body": "The reason our state variables are private is to provide stronger guarantees with respect to consistency of the state, by encapsulating all the changes to those variables in the contract that defines them. Providing these internal setters would be counter to that purpose, it breaks encapsulation.\r\n\r\nIf someone is interested in the modifying our contracts to use Eternal Storage or something similar, I would encourage them to clone the contracts and modify the code, because we can't guarantee that that will be safe to do.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/496593651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/496619662",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1775#issuecomment-496619662",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1775",
    "id": 496619662,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjYxOTY2Mg==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-28T17:47:55Z",
    "updated_at": "2019-05-28T17:47:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Perhaps I misunderstood @daniellehrner's intent (there word `internal` has been used somewhat loosely), but from what I gathered, the idea behind this request is not to expose the storage slots, but to have all internal variables use fixed storage slots, bypassing the compiler's slot allocation algorithm (therefore achieving upgrade safety, at least regarding storage layout).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/496619662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/496648828",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1775#issuecomment-496648828",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1775",
    "id": 496648828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjY0ODgyOA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-28T19:09:18Z",
    "updated_at": "2019-05-28T19:09:18Z",
    "author_association": "MEMBER",
    "body": "Yeah I think you misunderstood. :slightly_smiling_face: As mentioned in the issue the request is for the following specifically:\r\n\r\n>internal getters, setters and deleters a contract can extend the existing one and overwrite these methods to use an alternative storage approach\r\n\r\nWe won't do this due to what I mentioned above:\r\n\r\n>Providing these internal setters would be counter to that purpose, it breaks encapsulation.\r\n\r\nThanks for the suggestion regardless @daniellehrner! ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/496648828/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/496888299",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1775#issuecomment-496888299",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1775",
    "id": 496888299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Njg4ODI5OQ==",
    "user": {
      "login": "daniellehrner",
      "id": 6727189,
      "node_id": "MDQ6VXNlcjY3MjcxODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6727189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daniellehrner",
      "html_url": "https://github.com/daniellehrner",
      "followers_url": "https://api.github.com/users/daniellehrner/followers",
      "following_url": "https://api.github.com/users/daniellehrner/following{/other_user}",
      "gists_url": "https://api.github.com/users/daniellehrner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daniellehrner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daniellehrner/subscriptions",
      "organizations_url": "https://api.github.com/users/daniellehrner/orgs",
      "repos_url": "https://api.github.com/users/daniellehrner/repos",
      "events_url": "https://api.github.com/users/daniellehrner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daniellehrner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-29T10:57:17Z",
    "updated_at": "2019-05-29T10:57:17Z",
    "author_association": "NONE",
    "body": "@nventuro @frangio Thanks for taking the time to explain, why it does not make sense to you.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/496888299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
