{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3221",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3221/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3221/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3221/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3221",
  "id": 1151193015,
  "node_id": "I_kwDOA9tCBs5Enc-3",
  "number": 3221,
  "title": "Provide a modifier to prevent calling from another contract.",
  "user": {
    "login": "themez",
    "id": 1323793,
    "node_id": "MDQ6VXNlcjEzMjM3OTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1323793?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/themez",
    "html_url": "https://github.com/themez",
    "followers_url": "https://api.github.com/users/themez/followers",
    "following_url": "https://api.github.com/users/themez/following{/other_user}",
    "gists_url": "https://api.github.com/users/themez/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/themez/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/themez/subscriptions",
    "organizations_url": "https://api.github.com/users/themez/orgs",
    "repos_url": "https://api.github.com/users/themez/repos",
    "events_url": "https://api.github.com/users/themez/events{/privacy}",
    "received_events_url": "https://api.github.com/users/themez/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-02-26T04:27:46Z",
  "updated_at": "2022-03-02T02:45:58Z",
  "closed_at": "2022-02-26T21:43:58Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n<!-- Is your feature request related to a specific problem? Is it just a crazy idea? Tell us about it! -->\r\nA lots of contract security issues need to be exploited by calling from another contract, so we often protect our contract by preventing contract calling some critical functions.\r\n\r\n\r\n**üìù Details**\r\n<!-- Please describe your feature request in detail. -->\r\n\r\nWe can provide a modifier to do this check, although `address.code.length == 0` do the same effect, that cost more gas.\r\n```\r\nmodifier callerIsUser() {\r\n     require(tx.origin == msg.sender, 'The caller is another contract.');\r\n      _;\r\n}\r\n\r\nfunction mint() public callerIsUser {\r\n  ...\r\n}\r\n```\r\n\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contracts Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/CONTRIBUTING.md -->\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3221/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3221/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1052660504",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3221#issuecomment-1052660504",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3221",
    "id": 1052660504,
    "node_id": "IC_kwDOA9tCBs4-vlMY",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-26T21:43:58Z",
    "updated_at": "2022-02-26T21:43:58Z",
    "author_association": "MEMBER",
    "body": "As explained at length in the documentation for `Address.isContract`, it is not a good idea to use a modifier like this.\r\n\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/abdb20a6bdb1700d58ea9e01b7471dafdef52a68/contracts/utils/Address.sol#L10-L35",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1052660504/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1054979765",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3221#issuecomment-1054979765",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3221",
    "id": 1054979765,
    "node_id": "IC_kwDOA9tCBs4-4ba1",
    "user": {
      "login": "themez",
      "id": 1323793,
      "node_id": "MDQ6VXNlcjEzMjM3OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1323793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/themez",
      "html_url": "https://github.com/themez",
      "followers_url": "https://api.github.com/users/themez/followers",
      "following_url": "https://api.github.com/users/themez/following{/other_user}",
      "gists_url": "https://api.github.com/users/themez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/themez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/themez/subscriptions",
      "organizations_url": "https://api.github.com/users/themez/orgs",
      "repos_url": "https://api.github.com/users/themez/repos",
      "events_url": "https://api.github.com/users/themez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/themez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-01T03:56:39Z",
    "updated_at": "2022-03-01T03:57:16Z",
    "author_association": "NONE",
    "body": "@frangio \r\nThe documentation listed some conditions `address.code.length` failing to  detect a contract address against EOA address.\r\nHowever as far as I know, `tx.origin == msg.sender` works well at these conditions.\r\n\r\nAnd for the reason: \"It breaks composability\", I believe situations exist that a contract owner do want a contract to do some interaction such as NFT token initial minting(it would break fairness).\r\n\r\nPlease let me know how do you think.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1054979765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1055239365",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3221#issuecomment-1055239365",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3221",
    "id": 1055239365,
    "node_id": "IC_kwDOA9tCBs4-5azF",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-01T09:54:56Z",
    "updated_at": "2022-03-01T09:54:56Z",
    "author_association": "COLLABORATOR",
    "body": "Some users don't use EOA. They use Argent, Gnosis, or any other smart-contract-based wallets.\r\nBy forcing `tx.origin == msg.sender` you are preventing these users for interacting with you. I would not call that fair.\r\n\r\nI am yet to see a case where using such a modifier was really needed. All usages I've seen so far were trying to mitigate \"bad\" design decisions.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1055239365/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1055865815",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3221#issuecomment-1055865815",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3221",
    "id": 1055865815,
    "node_id": "IC_kwDOA9tCBs4-7zvX",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-01T21:16:32Z",
    "updated_at": "2022-03-01T21:16:32Z",
    "author_association": "MEMBER",
    "body": "I assume the issue with NFT minting is using a contract to mint a batch? Isn't it also possible for a buyer to submit a flashbots bundle to mint a batch using an EOA? I believe fairness needs to be achieved in some other way.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1055865815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1056085520",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3221#issuecomment-1056085520",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3221",
    "id": 1056085520,
    "node_id": "IC_kwDOA9tCBs4-8pYQ",
    "user": {
      "login": "themez",
      "id": 1323793,
      "node_id": "MDQ6VXNlcjEzMjM3OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1323793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/themez",
      "html_url": "https://github.com/themez",
      "followers_url": "https://api.github.com/users/themez/followers",
      "following_url": "https://api.github.com/users/themez/following{/other_user}",
      "gists_url": "https://api.github.com/users/themez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/themez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/themez/subscriptions",
      "organizations_url": "https://api.github.com/users/themez/orgs",
      "repos_url": "https://api.github.com/users/themez/repos",
      "events_url": "https://api.github.com/users/themez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/themez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-02T02:45:14Z",
    "updated_at": "2022-03-02T02:45:58Z",
    "author_association": "NONE",
    "body": "I got your points now, thanks @Amxx @frangio \r\nI might use `tx.origin == msg.sender` to exclude contract user or even real smart wallet users sometimes, for example in some case I'll just use block.timestamp as random seed instead of VRF which is expensive.\r\nBut I understand your concern for including such a modifier in library.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1056085520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
