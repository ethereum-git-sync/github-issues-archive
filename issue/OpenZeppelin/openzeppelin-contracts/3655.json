{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3655",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3655/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3655/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3655/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3655",
  "id": 1352582186,
  "node_id": "I_kwDOA9tCBs5QnsQq",
  "number": 3655,
  "title": "Feature Request: ERC-721 and 1155 Transfer Block-Lists for certain contracts",
  "user": {
    "login": "sterlingcrispin",
    "id": 2976761,
    "node_id": "MDQ6VXNlcjI5NzY3NjE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2976761?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sterlingcrispin",
    "html_url": "https://github.com/sterlingcrispin",
    "followers_url": "https://api.github.com/users/sterlingcrispin/followers",
    "following_url": "https://api.github.com/users/sterlingcrispin/following{/other_user}",
    "gists_url": "https://api.github.com/users/sterlingcrispin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sterlingcrispin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sterlingcrispin/subscriptions",
    "organizations_url": "https://api.github.com/users/sterlingcrispin/orgs",
    "repos_url": "https://api.github.com/users/sterlingcrispin/repos",
    "events_url": "https://api.github.com/users/sterlingcrispin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sterlingcrispin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2022-08-26T18:05:51Z",
  "updated_at": "2022-08-29T17:10:08Z",
  "closed_at": "2022-08-26T21:03:07Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I'm leaving this up for posterity but I'm obviously wrong on this one, I posted this in an emotional state reacting to what I felt like was an unjust situation, but long term this would case more problems than it solves and create more unjust situations.\r\n\r\nmy bad\r\n\r\nAlso, I'm getting roasted on twitter (maybe fair) but  [a core ERC721A dev had already come to the same conclusion](https://twitter.com/cygaar_dev/status/1563186676771405830) I did and wrote their own implementation as an example. This might be ideologically the wrong direction, but I'm a lone crazy person for coming to this conclusion \r\n\r\n**üßê Motivation**\r\nRecent actions by SudoSwap and now X2Y2 marketplaces are aggressively moving towards circumventing the NFT royalty system, which has largely been an honor system up until this point. Creators of NFTs should be given tools to easily cut off bad actors and control how their tokens are used. \r\n\r\n[EIP-2981 ](https://eips.ethereum.org/EIPS/eip-2981) is one step towards addressing this problem, but royalties will remain optional. Because of this, I suggest a transfer-level block list should become an adopted standard.\r\n\r\nBeyond the royalty issue, generally speaking, creators should be given more control over who is allowed to operate on their tokens. The concept of permissionless tokens is nice in theory, but bad actors do exist, and giving creators control to cut them off is important.\r\n\r\n**üìù Details**\r\nI recommend editing the Open Zeppelin ERC-721 and ERC-1155 contracts to easily allow creators to define block-listed addresses. For example, when `beforeTokenTransfer` is called, the function would iterate through blocked addresses and require that the `msg.sender` was not equal to one of these blocked addresses.\r\n\r\nHere's one example in a contract inheriting from OpenZeppelin's ERC-721 contract, showing how a block list might be implemented. I'm sure there are better ways, but I really think this needs to become a part of the core OpenZeppelin contracts\r\n\r\nThis code isn't mean to be a literal solution but just a conversation starter, I know it isn't the optimal code\r\n\r\n    address[] public blockedAddrs;\r\n\r\n    function populateBlockedAddrs(address[] memory addrs) public onlyOwner{\r\n        blockedAddrs = addrs;\r\n    }\r\n    \r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) internal virtual override(ERC721, ERC721Enumerable) {\r\n        uint256 limit = blockedAddrs.length;\r\n        uint256 i = 0;\r\n        while(i < limit){\r\n            require(msg.sender != blockedAddrs[i], \"blocked address\");\r\n            unchecked {\r\n                i++;\r\n            }\r\n        }\r\n        super._beforeTokenTransfer(from, to, tokenId);\r\n    }\r\n\r\n\r\nHere's another suggestion someone made along the same lines\r\n\r\nhttps://twitter.com/cygaar_dev/status/1563186676771405830\r\n\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contracts Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/CONTRIBUTING.md -->\r\n\r\n\r\nThanks for the consideration ",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3655/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 2,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3655/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1228865119",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3655#issuecomment-1228865119",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3655",
    "id": 1228865119,
    "node_id": "IC_kwDOA9tCBs5JPv5f",
    "user": {
      "login": "sterlingcrispin",
      "id": 2976761,
      "node_id": "MDQ6VXNlcjI5NzY3NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2976761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sterlingcrispin",
      "html_url": "https://github.com/sterlingcrispin",
      "followers_url": "https://api.github.com/users/sterlingcrispin/followers",
      "following_url": "https://api.github.com/users/sterlingcrispin/following{/other_user}",
      "gists_url": "https://api.github.com/users/sterlingcrispin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sterlingcrispin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sterlingcrispin/subscriptions",
      "organizations_url": "https://api.github.com/users/sterlingcrispin/orgs",
      "repos_url": "https://api.github.com/users/sterlingcrispin/repos",
      "events_url": "https://api.github.com/users/sterlingcrispin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sterlingcrispin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-26T19:49:22Z",
    "updated_at": "2022-08-26T19:49:22Z",
    "author_association": "NONE",
    "body": "One argument I've seen against this is that it shouldn't be always-on by default. I totally agree with that. There should be a way to specify as the deployer of a contract if you want this functionality or not.\r\n\r\nMaybe it becomes a true-false variable during deployment in the constructor or something.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1228865119/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1228933626",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3655#issuecomment-1228933626",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3655",
    "id": 1228933626,
    "node_id": "IC_kwDOA9tCBs5JQAn6",
    "user": {
      "login": "gwendall",
      "id": 329887,
      "node_id": "MDQ6VXNlcjMyOTg4Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/329887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwendall",
      "html_url": "https://github.com/gwendall",
      "followers_url": "https://api.github.com/users/gwendall/followers",
      "following_url": "https://api.github.com/users/gwendall/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwendall/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwendall/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwendall/subscriptions",
      "organizations_url": "https://api.github.com/users/gwendall/orgs",
      "repos_url": "https://api.github.com/users/gwendall/repos",
      "events_url": "https://api.github.com/users/gwendall/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwendall/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-26T20:46:20Z",
    "updated_at": "2022-08-26T20:47:25Z",
    "author_association": "NONE",
    "body": "Very needed - I actually wrote an extension for that a few weeks ago:\r\nhttps://github.com/gwendall/erc721-transfer-control/blob/main/contracts/extensions/ERC721TransferControl.sol",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1228933626/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1228945926",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3655#issuecomment-1228945926",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3655",
    "id": 1228945926,
    "node_id": "IC_kwDOA9tCBs5JQDoG",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-26T21:03:07Z",
    "updated_at": "2022-08-26T21:03:07Z",
    "author_association": "MEMBER",
    "body": "As you've both shown, it's already possible and easy to extend a token with this functionality, so it's not necessary to include it as a core feature of the library.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1228945926/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1229020110",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3655#issuecomment-1229020110",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3655",
    "id": 1229020110,
    "node_id": "IC_kwDOA9tCBs5JQVvO",
    "user": {
      "login": "sterlingcrispin",
      "id": 2976761,
      "node_id": "MDQ6VXNlcjI5NzY3NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2976761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sterlingcrispin",
      "html_url": "https://github.com/sterlingcrispin",
      "followers_url": "https://api.github.com/users/sterlingcrispin/followers",
      "following_url": "https://api.github.com/users/sterlingcrispin/following{/other_user}",
      "gists_url": "https://api.github.com/users/sterlingcrispin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sterlingcrispin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sterlingcrispin/subscriptions",
      "organizations_url": "https://api.github.com/users/sterlingcrispin/orgs",
      "repos_url": "https://api.github.com/users/sterlingcrispin/repos",
      "events_url": "https://api.github.com/users/sterlingcrispin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sterlingcrispin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-26T22:43:39Z",
    "updated_at": "2022-08-26T22:43:39Z",
    "author_association": "NONE",
    "body": "Yeah I totally get that, you're right.\r\n\r\nFor posterity I think that artist created NFTs with royalties, and NFTs that are fully unrestricted bearer assets, are potentially diverging things. There's so many contexts for an ERC-721 token that baking this context into a core feature of a library doesn't really make sense. \r\n\r\nI posted this feature request in an emotional reaction and in hindsight this isn't the right solution ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1229020110/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1230566338",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3655#issuecomment-1230566338",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3655",
    "id": 1230566338,
    "node_id": "IC_kwDOA9tCBs5JWPPC",
    "user": {
      "login": "johnnyshankman",
      "id": 6632701,
      "node_id": "MDQ6VXNlcjY2MzI3MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6632701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johnnyshankman",
      "html_url": "https://github.com/johnnyshankman",
      "followers_url": "https://api.github.com/users/johnnyshankman/followers",
      "following_url": "https://api.github.com/users/johnnyshankman/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnnyshankman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johnnyshankman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnnyshankman/subscriptions",
      "organizations_url": "https://api.github.com/users/johnnyshankman/orgs",
      "repos_url": "https://api.github.com/users/johnnyshankman/repos",
      "events_url": "https://api.github.com/users/johnnyshankman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johnnyshankman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-29T16:47:37Z",
    "updated_at": "2022-08-29T16:50:28Z",
    "author_association": "NONE",
    "body": "@sterlingcrispin great response. just wanted to mention, we'd have to do more than just block transfers to avoid listings. We also have to block AND remove their status as `approved` ie override `setApprovalForAll` etc.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1230566338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1230570077",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3655#issuecomment-1230570077",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3655",
    "id": 1230570077,
    "node_id": "IC_kwDOA9tCBs5JWQJd",
    "user": {
      "login": "johnnyshankman",
      "id": 6632701,
      "node_id": "MDQ6VXNlcjY2MzI3MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6632701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johnnyshankman",
      "html_url": "https://github.com/johnnyshankman",
      "followers_url": "https://api.github.com/users/johnnyshankman/followers",
      "following_url": "https://api.github.com/users/johnnyshankman/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnnyshankman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johnnyshankman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnnyshankman/subscriptions",
      "organizations_url": "https://api.github.com/users/johnnyshankman/orgs",
      "repos_url": "https://api.github.com/users/johnnyshankman/repos",
      "events_url": "https://api.github.com/users/johnnyshankman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johnnyshankman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-29T16:49:59Z",
    "updated_at": "2022-08-29T17:10:08Z",
    "author_association": "NONE",
    "body": "@gwendall that applies to your extension as well. you'll want to block the approvals for those specific blacklisted addresses to avoid listings ever appearing in the first place. it's a horrible UX to have your collector not realize a listing is impossible to buy until they actually try to buy it (and the tx fails).\r\n\r\ni've implemented this before in soulbound contracts like below:\r\nhttps://etherscan.io/address/0x1b23d0f0f6dc3547c1b6945152acbfd6eaad85b0#code",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1230570077/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1230570715",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3655#issuecomment-1230570715",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3655",
    "id": 1230570715,
    "node_id": "IC_kwDOA9tCBs5JWQTb",
    "user": {
      "login": "sterlingcrispin",
      "id": 2976761,
      "node_id": "MDQ6VXNlcjI5NzY3NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2976761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sterlingcrispin",
      "html_url": "https://github.com/sterlingcrispin",
      "followers_url": "https://api.github.com/users/sterlingcrispin/followers",
      "following_url": "https://api.github.com/users/sterlingcrispin/following{/other_user}",
      "gists_url": "https://api.github.com/users/sterlingcrispin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sterlingcrispin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sterlingcrispin/subscriptions",
      "organizations_url": "https://api.github.com/users/sterlingcrispin/orgs",
      "repos_url": "https://api.github.com/users/sterlingcrispin/repos",
      "events_url": "https://api.github.com/users/sterlingcrispin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sterlingcrispin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-29T16:50:38Z",
    "updated_at": "2022-08-29T16:50:38Z",
    "author_association": "NONE",
    "body": "@johnnyshankman  yeah totally --[ Cygaar had another approach](https://twitter.com/cygaar_dev/status/1563186676771405830) and I've seen a dozen other people imagine other solutions to this , so I'm not alone in thinking this might be desirable. Although at this point I think block lists is not the correct direction. The solution is probably a mix of stuff like EIP-2981 that makes royalties more supported in code, and game theory stuff that incentivizes cooperation.  ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1230570715/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1230590587",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3655#issuecomment-1230590587",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3655",
    "id": 1230590587,
    "node_id": "IC_kwDOA9tCBs5JWVJ7",
    "user": {
      "login": "johnnyshankman",
      "id": 6632701,
      "node_id": "MDQ6VXNlcjY2MzI3MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6632701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johnnyshankman",
      "html_url": "https://github.com/johnnyshankman",
      "followers_url": "https://api.github.com/users/johnnyshankman/followers",
      "following_url": "https://api.github.com/users/johnnyshankman/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnnyshankman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johnnyshankman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnnyshankman/subscriptions",
      "organizations_url": "https://api.github.com/users/johnnyshankman/orgs",
      "repos_url": "https://api.github.com/users/johnnyshankman/repos",
      "events_url": "https://api.github.com/users/johnnyshankman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johnnyshankman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-29T17:09:31Z",
    "updated_at": "2022-08-29T17:09:31Z",
    "author_association": "NONE",
    "body": "@sterlingcrispin totally agreed longterm about the incentivized approach, as well as preferring this functionality an extension instead of built into the standard. interesting convo here! glad you proposed this, got my gears turning.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1230590587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
