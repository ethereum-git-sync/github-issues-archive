{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/692",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/692/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/692/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/692/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/692",
  "id": 289788994,
  "node_id": "MDU6SXNzdWUyODk3ODg5OTQ=",
  "number": 692,
  "title": "Improve encapsulation in the Heritable contract",
  "user": {
    "login": "ajsantander",
    "id": 550409,
    "node_id": "MDQ6VXNlcjU1MDQwOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/550409?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ajsantander",
    "html_url": "https://github.com/ajsantander",
    "followers_url": "https://api.github.com/users/ajsantander/followers",
    "following_url": "https://api.github.com/users/ajsantander/following{/other_user}",
    "gists_url": "https://api.github.com/users/ajsantander/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ajsantander/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ajsantander/subscriptions",
    "organizations_url": "https://api.github.com/users/ajsantander/orgs",
    "repos_url": "https://api.github.com/users/ajsantander/repos",
    "events_url": "https://api.github.com/users/ajsantander/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ajsantander/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650966,
      "node_id": "MDU6TGFiZWw1MDM2NTA5NjY=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0e8a16",
      "default": true,
      "description": "Low hanging fruit for new contributors to get involved!"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2018-01-18T21:54:20Z",
  "updated_at": "2018-02-06T23:09:57Z",
  "closed_at": "2018-01-26T21:21:43Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "`heir` is public _and_ has a setter [`setHeir`](https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/ownership/Heritable.sol#L46)\r\n\r\nSince we are providing a setter, we should also provide a getter and make `heir` private. It ensures that inheriting contracts cannot modify the `heir` in an unintended way.\r\n\r\nThis is a general practice we are starting to adopt in all OpenZeppelin, i.e. more extensive use of private contract variables.\r\n\r\nWe may want to consider this for `heartbeatTimeout` and `timeOfDeath` as well.\r\n\r\n@azavalla something that might interest you?",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/692/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/692/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/359178319",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/692#issuecomment-359178319",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/692",
    "id": 359178319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTE3ODMxOQ==",
    "user": {
      "login": "trejas",
      "id": 4763901,
      "node_id": "MDQ6VXNlcjQ3NjM5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4763901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trejas",
      "html_url": "https://github.com/trejas",
      "followers_url": "https://api.github.com/users/trejas/followers",
      "following_url": "https://api.github.com/users/trejas/following{/other_user}",
      "gists_url": "https://api.github.com/users/trejas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trejas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trejas/subscriptions",
      "organizations_url": "https://api.github.com/users/trejas/orgs",
      "repos_url": "https://api.github.com/users/trejas/repos",
      "events_url": "https://api.github.com/users/trejas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trejas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-20T15:15:09Z",
    "updated_at": "2018-01-20T15:15:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should the getters be accessible only to the owner of the contract, or should they be publicly accessible?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/359178319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/359196011",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/692#issuecomment-359196011",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/692",
    "id": 359196011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTE5NjAxMQ==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-20T19:28:23Z",
    "updated_at": "2018-01-20T19:28:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "The getter should be public, imo.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/359196011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/359671795",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/692#issuecomment-359671795",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/692",
    "id": 359671795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTY3MTc5NQ==",
    "user": {
      "login": "azavalla",
      "id": 7092991,
      "node_id": "MDQ6VXNlcjcwOTI5OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7092991?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/azavalla",
      "html_url": "https://github.com/azavalla",
      "followers_url": "https://api.github.com/users/azavalla/followers",
      "following_url": "https://api.github.com/users/azavalla/following{/other_user}",
      "gists_url": "https://api.github.com/users/azavalla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/azavalla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/azavalla/subscriptions",
      "organizations_url": "https://api.github.com/users/azavalla/orgs",
      "repos_url": "https://api.github.com/users/azavalla/repos",
      "events_url": "https://api.github.com/users/azavalla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/azavalla/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-23T04:18:27Z",
    "updated_at": "2018-01-23T04:18:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Reducing the public API of the contracts minimizes the number of guarantees we have to make to the code using our contract (thus reducing the places where we have to watch out for compatibility issues), giving us more freedom to change -private- implementation details.\r\n\r\nAlso, being a framework focused on security, it makes sense to try and avoid having developers extending a contract in an unintended way. But to be honest, I'm not sure making members private provides you _that much safety_ in the face of a inheriting contracts making an _unintended_ use. Explicitly overriding a method/variable is a conscious decision. I guess it makes sense if you add logic to the setter to check an invariant.\r\n\r\nThe cost you pay is extendability. We are restricting the library only to the _intended_ use cases, i.e. the ones we can imagine right now.\r\n\r\nIMHO, given OZ is an open source library, if there's doubts about the appropiate visibility, we should choose the less strict approach if we want to promote people using and extending OZ. This way we wont promote people copy-pasting a contract just because they had a slightly different use case we couldn't think of.\r\n\r\n`contract Heritable`, likewise most of OZ contracts, is designed to be inheritable. I think the approach in the general case should be:\r\n\"Are you sure that a subclass will never want to override this method ? Make it private, else make it internal or public (and document it accordingly).\"\r\n\r\n@ajsantander what do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/359671795/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/360907547",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/692#issuecomment-360907547",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/692",
    "id": 360907547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDkwNzU0Nw==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-26T21:21:43Z",
    "updated_at": "2018-01-26T21:21:43Z",
    "author_association": "MEMBER",
    "body": "Fixed in #702.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/360907547/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/362812988",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/692#issuecomment-362812988",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/692",
    "id": 362812988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjgxMjk4OA==",
    "user": {
      "login": "azavalla",
      "id": 7092991,
      "node_id": "MDQ6VXNlcjcwOTI5OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7092991?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/azavalla",
      "html_url": "https://github.com/azavalla",
      "followers_url": "https://api.github.com/users/azavalla/followers",
      "following_url": "https://api.github.com/users/azavalla/following{/other_user}",
      "gists_url": "https://api.github.com/users/azavalla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/azavalla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/azavalla/subscriptions",
      "organizations_url": "https://api.github.com/users/azavalla/orgs",
      "repos_url": "https://api.github.com/users/azavalla/repos",
      "events_url": "https://api.github.com/users/azavalla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/azavalla/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-03T14:24:13Z",
    "updated_at": "2018-02-03T14:24:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@frangio any thoughts on [this](https://github.com/OpenZeppelin/zeppelin-solidity/issues/692#issuecomment-359671795) ?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/362812988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/363595039",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/692#issuecomment-363595039",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/692",
    "id": 363595039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzU5NTAzOQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-06T23:01:07Z",
    "updated_at": "2018-02-06T23:01:07Z",
    "author_association": "MEMBER",
    "body": "We agree that there's a trade-off between extensibility and security.\r\n\r\n>I guess it makes sense if you add logic to the setter to check an invariant.\r\n\r\nYeah, in fact, this is aligned with the reasoning behind this issue. In this case it was not checking an invariant that we wanted to enforce, but emitting the event `HeirChanged` and the `heartbeat` whenever the state variable is changed. It's true that if a state variable didn't have any sort of additional logic necessary when modified, or invariants to be maintained, it doesn't need to be `private`.\r\n\r\n>Explicitly overriding a method/variable is a conscious decision.\r\n\r\nI disagree with this as an argument, because we aim to provide APIs which are hard to use insecurely. This includes external APIs, as well as internal APIs for contracts that extend via inheritance. If one of our contracts has a `public` or `internal` state variable `heir`, the setter for that variable `heir = ...` is part of our internal API, i.e. we are telling the developer \"feel free to set this variable to any value you want, do not expect any odd consequences\". Not emitting the `HeirChanged` event is such an odd consequence, so it made sense to me to make it `private`.\r\n\r\nThere is still something a little bit weird: a contract could override the `setHeir` function. The language provides no way to prevent that, but we would probably use it if it did (https://github.com/ethereum/solidity/issues/463). Here's where we see ourselves forced to draw a line and say: overriding this method would be a conscious decision and the developer should know that they may be causing trouble. But I feel that overriding a function is an even more conscious decision than setting a variable, which is why I'm more comfortable with it.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/363595039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/363597338",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/692#issuecomment-363597338",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/692",
    "id": 363597338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzU5NzMzOA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-06T23:09:57Z",
    "updated_at": "2018-02-06T23:09:57Z",
    "author_association": "MEMBER",
    "body": ">IMHO, given OZ is an open source library, if there's doubts about the appropiate visibility, we should choose the less strict approach if we want to promote people using and extending OZ. This way we wont promote people copy-pasting a contract just because they had a slightly different use case we couldn't think of.\r\n\r\nI definitely see where you're going with this and I share a similar concern. I think that we want to promote people extending OZ in secure ways, and we have to set the library up for being securely extended. `private` state variables enable more secure extension. Even if they may preclude some types of extension, we have to design our APIs so that the extensions precluded are insecure ones. In the case of `Heritable`, setting the `heir` without emitting the `HeirChanged` event would be considered insecure.\r\n\r\nI hope the reasoning was made clearer now. Let me know if you have any other thoughts about it. :-)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/363597338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
