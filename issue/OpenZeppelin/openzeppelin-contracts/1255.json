{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1255",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1255/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1255/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1255/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1255",
  "id": 355326830,
  "node_id": "MDU6SXNzdWUzNTUzMjY4MzA=",
  "number": 1255,
  "title": "safeConversion.sol - Standard contract for type conversion",
  "user": {
    "login": "nachomazzara",
    "id": 7549152,
    "node_id": "MDQ6VXNlcjc1NDkxNTI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7549152?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nachomazzara",
    "html_url": "https://github.com/nachomazzara",
    "followers_url": "https://api.github.com/users/nachomazzara/followers",
    "following_url": "https://api.github.com/users/nachomazzara/following{/other_user}",
    "gists_url": "https://api.github.com/users/nachomazzara/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nachomazzara/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nachomazzara/subscriptions",
    "organizations_url": "https://api.github.com/users/nachomazzara/orgs",
    "repos_url": "https://api.github.com/users/nachomazzara/repos",
    "events_url": "https://api.github.com/users/nachomazzara/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nachomazzara/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2018-08-29T20:47:28Z",
  "updated_at": "2018-08-31T21:34:49Z",
  "closed_at": "2018-08-31T21:34:29Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## ðŸŽ‰ Description\r\n\r\nThe idea is to have a library contract with standard methods for type conversion will allow for better compatibility between contracts\r\n\r\n- [x] ðŸ“ˆ This is a feature request.\r\n\r\n<!-- Please check one of the above by placing an x in the box. -->\r\n\r\n## ðŸ”¢ Code example\r\n\r\n- [x] - bytes to uint\r\n- [x] - uint to bytes\r\n- [ ] - others (Add please useful conversion type)\r\n\r\n```solidity\r\npragma solidity ^0.4.24;\r\n\r\n/**\r\n * @title safeConversion\r\n * @dev Type conversion with safety checks that revert on error\r\n */\r\nlibrary SafeConversion {\r\n\r\nfunction toBytes(uint256 x) internal pure returns (bytes b) {\r\n    b = new bytes(32);\r\n    // solium-disable-next-line security/no-inline-assembly\r\n    assembly { mstore(add(b, 32), x) \r\n   }\r\n}\r\n\r\nfunction _bytesToUint(bytes b) internal pure returns (uint256) {\r\n    bytes32 out;\r\n\r\n    for (uint i = 0; i < b.length; i++) {\r\n      out |= bytes32(b[i] & 0xFF) >> i.mul(8);\r\n    }\r\n\r\n    return uint256(out);\r\n  }\r\n}\r\n```",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1255/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1255/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/417135464",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1255#issuecomment-417135464",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1255",
    "id": 417135464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzEzNTQ2NA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-29T23:05:04Z",
    "updated_at": "2018-08-29T23:05:04Z",
    "author_association": "MEMBER",
    "body": "Hi @nachomazzara! Can you share a few examples where you'd use these conversions? What kind of safety checks would they have?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/417135464/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/417324634",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1255#issuecomment-417324634",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1255",
    "id": 417324634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzMyNDYzNA==",
    "user": {
      "login": "nachomazzara",
      "id": 7549152,
      "node_id": "MDQ6VXNlcjc1NDkxNTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7549152?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nachomazzara",
      "html_url": "https://github.com/nachomazzara",
      "followers_url": "https://api.github.com/users/nachomazzara/followers",
      "following_url": "https://api.github.com/users/nachomazzara/following{/other_user}",
      "gists_url": "https://api.github.com/users/nachomazzara/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nachomazzara/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nachomazzara/subscriptions",
      "organizations_url": "https://api.github.com/users/nachomazzara/orgs",
      "repos_url": "https://api.github.com/users/nachomazzara/repos",
      "events_url": "https://api.github.com/users/nachomazzara/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nachomazzara/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-30T13:44:56Z",
    "updated_at": "2018-08-30T13:48:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@frangio sure!\r\n\r\nWe transfer tokens from one contract to another.\r\n \r\nAs we using the `onERC721Received` which expect `userData` to be bytes we need to convert the data to send to bytes [before transferring](https://github.com/decentraland/land/blob/master/contracts/land/LANDRegistry.sol#L249) them and then convert from bytes to uint once [we receive it](https://github.com/decentraland/land/blob/master/contracts/estate/EstateRegistry.sol#L69)\r\n\r\n`onERC721Received` is part of the standard. I thought it would be great to have a library which helps with the conversion",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/417324634/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/417744516",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1255#issuecomment-417744516",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1255",
    "id": 417744516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzc0NDUxNg==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-31T18:00:04Z",
    "updated_at": "2018-08-31T18:00:13Z",
    "author_association": "MEMBER",
    "body": "Got it! Completely agree that `onERC721Received` and similar functionality need helpers for the conversion.\r\n\r\nThere's an upcoming Solidity feature, `abi.decode`, built for this  It's already merged so it will be in the next release. Since that's coming out soon I think we should rather wait for that than implement it in OpenZeppelin.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/417744516/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/417776181",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1255#issuecomment-417776181",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1255",
    "id": 417776181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzc3NjE4MQ==",
    "user": {
      "login": "nachomazzara",
      "id": 7549152,
      "node_id": "MDQ6VXNlcjc1NDkxNTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7549152?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nachomazzara",
      "html_url": "https://github.com/nachomazzara",
      "followers_url": "https://api.github.com/users/nachomazzara/followers",
      "following_url": "https://api.github.com/users/nachomazzara/following{/other_user}",
      "gists_url": "https://api.github.com/users/nachomazzara/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nachomazzara/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nachomazzara/subscriptions",
      "organizations_url": "https://api.github.com/users/nachomazzara/orgs",
      "repos_url": "https://api.github.com/users/nachomazzara/repos",
      "events_url": "https://api.github.com/users/nachomazzara/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nachomazzara/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-31T20:08:35Z",
    "updated_at": "2018-08-31T20:08:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, ok. Do you have an example or somewhere to read about how can we will use it in a future?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/417776181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/417795034",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1255#issuecomment-417795034",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1255",
    "id": 417795034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzc5NTAzNA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-31T21:34:29Z",
    "updated_at": "2018-08-31T21:34:49Z",
    "author_association": "MEMBER",
    "body": "Yeah, sorry, I forgot to include the link. :sweat_smile: \r\n\r\nThis is the documentation: https://solidity.readthedocs.io/en/latest/units-and-global-variables.html#abi-encoding-and-decoding-functions.\r\n\r\nYou will basically be able to do:\r\n\r\n```solidity\r\nfunction onERC721Received(..., bytes _data) public returns (bytes4) {\r\n  uint256 param = abi.decode(_data, (uint256));\r\n}\r\n```\r\n\r\nClosing this issue in favor of the native Solidity functions.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/417795034/reactions",
      "total_count": 3,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 3,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
