{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1548",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1548/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1548/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1548/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1548",
  "id": 389896412,
  "node_id": "MDU6SXNzdWUzODk4OTY0MTI=",
  "number": 1548,
  "title": "Find median of an array of uints",
  "user": {
    "login": "hacker-DOM",
    "id": 18601956,
    "node_id": "MDQ6VXNlcjE4NjAxOTU2",
    "avatar_url": "https://avatars.githubusercontent.com/u/18601956?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hacker-DOM",
    "html_url": "https://github.com/hacker-DOM",
    "followers_url": "https://api.github.com/users/hacker-DOM/followers",
    "following_url": "https://api.github.com/users/hacker-DOM/following{/other_user}",
    "gists_url": "https://api.github.com/users/hacker-DOM/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hacker-DOM/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hacker-DOM/subscriptions",
    "organizations_url": "https://api.github.com/users/hacker-DOM/orgs",
    "repos_url": "https://api.github.com/users/hacker-DOM/repos",
    "events_url": "https://api.github.com/users/hacker-DOM/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hacker-DOM/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650860,
      "node_id": "MDU6TGFiZWw1MDM2NTA4NjA=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/feature",
      "name": "feature",
      "color": "b9db64",
      "default": false,
      "description": "New contracts, functions, or helpers."
    },
    {
      "id": 1000207718,
      "node_id": "MDU6TGFiZWwxMDAwMjA3NzE4",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/contracts",
      "name": "contracts",
      "color": "1d76db",
      "default": false,
      "description": "Smart contract code."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-12-11T18:30:47Z",
  "updated_at": "2022-09-16T20:58:57Z",
  "closed_at": "2022-09-16T20:58:57Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n<!-- Is your feature request related to a specific problem? Is it just a crazy idea? Tell us about it! -->\r\n\r\nWe are building a reliable price oracle for a decentralized exchange (the DutchX). We would like to take the last n prices, and output the median price. So we need an algorithm that is able to find the median of an array of, say, uints.\r\n\r\n**üìù Details**\r\n<!-- Please describe your feature request in detail. -->\r\n\r\nA function that takes an array and returns its median. Signature:\r\n\r\n`function findMedian(uint[] memory array)\r\npublic\r\nPure\r\nReturns (uint)`\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/CONTRIBUTING.md -->\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1548/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1548/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/446312886",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1548#issuecomment-446312886",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1548",
    "id": 446312886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjMxMjg4Ng==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T18:39:01Z",
    "updated_at": "2018-12-11T18:39:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Unless the array is sorted (which I assume it isn't :stuck_out_tongue:), this will be at least O(n)-time. Will that array be arbitrarily long?\r\n\r\nI'm also curious as to how it is built: does it come from queries to another contract, or from local storage? If it's the former, we may want to consider retrieving the values here, to make it more gas efficient.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/446312886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/446500072",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1548#issuecomment-446500072",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1548",
    "id": 446500072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjUwMDA3Mg==",
    "user": {
      "login": "hacker-DOM",
      "id": 18601956,
      "node_id": "MDQ6VXNlcjE4NjAxOTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/18601956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hacker-DOM",
      "html_url": "https://github.com/hacker-DOM",
      "followers_url": "https://api.github.com/users/hacker-DOM/followers",
      "following_url": "https://api.github.com/users/hacker-DOM/following{/other_user}",
      "gists_url": "https://api.github.com/users/hacker-DOM/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hacker-DOM/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hacker-DOM/subscriptions",
      "organizations_url": "https://api.github.com/users/hacker-DOM/orgs",
      "repos_url": "https://api.github.com/users/hacker-DOM/repos",
      "events_url": "https://api.github.com/users/hacker-DOM/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hacker-DOM/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T08:16:30Z",
    "updated_at": "2018-12-12T08:16:30Z",
    "author_association": "NONE",
    "body": "Yes, it is unsorted. There is an algorithm to find median (even more generally the nth smallest term) described [here](https://stackoverflow.com/a/28822243) that I think could be a good reference. Ideally, we would parameterize the pivot as well. If it is completely random, you can choose `array[0]` as the pivot, for our case, choosing the (chronologically) middle value would probably be more performant.\r\n\r\nThe elements come from n different calls. I agree it would be cheaper to do it in the other contract, unfortunately that exchange is already deployed.\r\n\r\nThanks,",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/446500072/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/446738624",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1548#issuecomment-446738624",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1548",
    "id": 446738624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjczODYyNA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T20:49:45Z",
    "updated_at": "2018-12-12T20:49:45Z",
    "author_association": "MEMBER",
    "body": "I agree that the pivot should be an argument, and a front-end should choose it in a smart way so as to result in cheap execution. Otherwise the function runs the risk of running out of gas.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/446738624/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/449389267",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1548#issuecomment-449389267",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1548",
    "id": 449389267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTM4OTI2Nw==",
    "user": {
      "login": "hacker-DOM",
      "id": 18601956,
      "node_id": "MDQ6VXNlcjE4NjAxOTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/18601956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hacker-DOM",
      "html_url": "https://github.com/hacker-DOM",
      "followers_url": "https://api.github.com/users/hacker-DOM/followers",
      "following_url": "https://api.github.com/users/hacker-DOM/following{/other_user}",
      "gists_url": "https://api.github.com/users/hacker-DOM/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hacker-DOM/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hacker-DOM/subscriptions",
      "organizations_url": "https://api.github.com/users/hacker-DOM/orgs",
      "repos_url": "https://api.github.com/users/hacker-DOM/repos",
      "events_url": "https://api.github.com/users/hacker-DOM/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hacker-DOM/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-21T13:31:52Z",
    "updated_at": "2018-12-21T13:31:52Z",
    "author_association": "NONE",
    "body": "Ended up implementing this by myself :) To avoid moving around large arrays in evm, I used a linked list. The code is here https://github.com/gnosis/dx-price-oracle/blob/fcf2dd0fac65754ed1f99f899cb95799892f5d5a/contracts/DutchXPriceOracle.sol#L80\r\n\r\nTo make it reusable, all that has to be done is: \r\n- Replace the message calls by loading the next array element\r\n- Collapse the use of two arrays of data into one (we use two, one for numerators and one for denominators, because our data are fractions)\r\n\r\nJust my two cents ‚úåÔ∏è",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/449389267/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/779249419",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1548#issuecomment-779249419",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1548",
    "id": 779249419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTI0OTQxOQ==",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-15T14:14:19Z",
    "updated_at": "2021-02-15T15:09:02Z",
    "author_association": "COLLABORATOR",
    "body": "Digging up this old topic just to propose an implementation:\r\n```\r\nfunction swap(int256[] memory array, uint256 i, uint256 j) internal pure {\r\n    (array[i], array[j]) = (array[j], array[i]);\r\n}\r\nfunction sort(int256[] memory array, uint256 begin, uint256 end) internal pure {\r\n    if (begin < end) {\r\n    \tuint256 j = begin;\r\n    \tint256 pivot = array[j];\r\n    \tfor (uint256 i = begin + 1; i < end; ++i) {\r\n    \t    if (array[i] < pivot) {\r\n    \t        swap(array, i, ++j);\r\n    \t    }\r\n    \t}\r\n    \tswap(array, begin, j);\r\n    \tsort(array, begin, j);\r\n    \tsort(array, j + 1, end);\r\n    }\r\n}\r\nfunction median(int256[] memory array, uint256 length) internal pure returns(int256) {\r\n\tsort(array, 0, length);\r\n\treturn length % 2 == 0 ? Math.average(array[length/2-1], array[length/2]) : array[length/2];\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/779249419/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1249810358",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1548#issuecomment-1249810358",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1548",
    "id": 1249810358,
    "node_id": "IC_kwDOA9tCBs5Kfpe2",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-16T20:58:57Z",
    "updated_at": "2022-09-16T20:58:57Z",
    "author_association": "MEMBER",
    "body": "We are probably adding sorting (#3475) but it will only be recommended for small arrays. Median can be extracted from there and should probably only be done for small arrays as well. Closing in favor of that approach.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1249810358/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
