{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1493",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1493/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1493/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1493/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1493",
  "id": 379134351,
  "node_id": "MDU6SXNzdWUzNzkxMzQzNTE=",
  "number": 1493,
  "title": "ERC20.sol doesn't allow transfer to zero address, not standard compliant",
  "user": {
    "login": "lightclient",
    "id": 14004106,
    "node_id": "MDQ6VXNlcjE0MDA0MTA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lightclient",
    "html_url": "https://github.com/lightclient",
    "followers_url": "https://api.github.com/users/lightclient/followers",
    "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
    "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
    "organizations_url": "https://api.github.com/users/lightclient/orgs",
    "repos_url": "https://api.github.com/users/lightclient/repos",
    "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lightclient/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2018-11-09T11:57:55Z",
  "updated_at": "2019-07-13T03:43:11Z",
  "closed_at": "2019-07-13T03:43:11Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "The [ERC-20 Token Standard](https://eips.ethereum.org/EIPS/eip-20) describes the following for `transfer`:\r\n> `transfer`\r\n> Transfers `_value` amount of tokens to address `_to`, and MUST fire the Transfer event. The function SHOULD throw if the `_from` account balance does not have enough tokens to spend.\r\n\r\nThe OpenZeppelin ERC20.sol contract adds an additional requirement to this standard by [blocking transfers](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/ERC20.sol#L156) to `0x0000000000000000000000000000000000000000`. This opinionated decision should be removed from the base ERC20 implementation. The ERC20Burnable.sol contract is not a solution to this, because it is not compliant with the base standard and will not be interoperable with other contracts that accept any arbitrary ERC20.\r\n\r\nAs of right now, this token is not compatible with contracts that burn their tokens by transferring them to the zero address.",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1493/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 1,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1493/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/437775015",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1493#issuecomment-437775015",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1493",
    "id": 437775015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzc3NTAxNQ==",
    "user": {
      "login": "cleanunicorn",
      "id": 547012,
      "node_id": "MDQ6VXNlcjU0NzAxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/547012?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cleanunicorn",
      "html_url": "https://github.com/cleanunicorn",
      "followers_url": "https://api.github.com/users/cleanunicorn/followers",
      "following_url": "https://api.github.com/users/cleanunicorn/following{/other_user}",
      "gists_url": "https://api.github.com/users/cleanunicorn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cleanunicorn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cleanunicorn/subscriptions",
      "organizations_url": "https://api.github.com/users/cleanunicorn/orgs",
      "repos_url": "https://api.github.com/users/cleanunicorn/repos",
      "events_url": "https://api.github.com/users/cleanunicorn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cleanunicorn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T06:51:10Z",
    "updated_at": "2018-11-12T06:51:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "As @zmitton suggested, keeping the `require(to != address(0))` in place will prevent bad software that cause empty arg or improper address parsing from sending the funds into the void.\r\n\r\nHowever there is a need to burn tokens, that could be achieved by calling a `burn()` function which can remove the funds from the user balance and emit a `Transfer()` event.\r\n\r\nNow there's a discussion where the destination of the `Transfer()` event should be. It could either be `address(0)` or (another suggestion is) [0xdead](https://etherscan.io/address/0x000000000000000000000000000000000000dead), making it specific about sending the funds into the void and decreasing the likelihood of a software bug.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/437775015/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/437830735",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1493#issuecomment-437830735",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1493",
    "id": 437830735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzgzMDczNQ==",
    "user": {
      "login": "lightclient",
      "id": 14004106,
      "node_id": "MDQ6VXNlcjE0MDA0MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightclient",
      "html_url": "https://github.com/lightclient",
      "followers_url": "https://api.github.com/users/lightclient/followers",
      "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
      "organizations_url": "https://api.github.com/users/lightclient/orgs",
      "repos_url": "https://api.github.com/users/lightclient/repos",
      "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T10:30:14Z",
    "updated_at": "2018-11-12T10:30:14Z",
    "author_association": "NONE",
    "body": "1. I still disagree, the base OpenZeppelin implementation of ERC20 should *not* be opinionated (i.e. add a `require` statement that is not described in the standard). These kinds of opinions should live in `SafeERC20` and it should be up to developers to make educated decisions on what token to use.\r\n2. The `burn` function is only useful if we can guarantee that the ERC20 we are interacting with implements burn. This is impossible in contracts that accept arbitrary ERC20 address from users.\r\n3. Using `0xdead` is a much better place to burn funds too than `0x0`.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/437830735/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/511084760",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1493#issuecomment-511084760",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1493",
    "id": 511084760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTA4NDc2MA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-13T03:43:11Z",
    "updated_at": "2019-07-13T03:43:11Z",
    "author_association": "MEMBER",
    "body": "@c-o-l-o-r Thank you for expressing this concern. Sorry for not replying to it earlier.\r\n\r\nOpenZeppelin contracts are opinionated precisely because we don't want the burden of making these decisions to be on the developers. If one of our decisions turns out to be a bad one, we don't want it to be in the library at all, not even as an opt-in thing.\r\n\r\nDisallowing a send to the address `0` is compliant with the ERC20 spec, and it's widespread behavior across deployed tokens. The OpenZeppelin implementation is even listed in the spec itself.\r\n\r\nI understand that it sucks to not have a standard way to burn tokens in ERC20, but this is a feature that is missing in the spec and not a problem in the implementations.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/511084760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
