{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3556",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3556/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3556/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3556/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3556",
  "id": 1307147457,
  "node_id": "I_kwDOA9tCBs5N6XzB",
  "number": 3556,
  "title": "Royalty for ERC1155",
  "user": {
    "login": "namelessperson0",
    "id": 72940077,
    "node_id": "MDQ6VXNlcjcyOTQwMDc3",
    "avatar_url": "https://avatars.githubusercontent.com/u/72940077?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/namelessperson0",
    "html_url": "https://github.com/namelessperson0",
    "followers_url": "https://api.github.com/users/namelessperson0/followers",
    "following_url": "https://api.github.com/users/namelessperson0/following{/other_user}",
    "gists_url": "https://api.github.com/users/namelessperson0/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/namelessperson0/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/namelessperson0/subscriptions",
    "organizations_url": "https://api.github.com/users/namelessperson0/orgs",
    "repos_url": "https://api.github.com/users/namelessperson0/repos",
    "events_url": "https://api.github.com/users/namelessperson0/events{/privacy}",
    "received_events_url": "https://api.github.com/users/namelessperson0/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-07-17T16:34:39Z",
  "updated_at": "2022-07-20T13:25:00Z",
  "closed_at": "2022-07-18T06:22:56Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "We have royalty extension for ERC721 but not ERC1155.\r\nWe need extension for ERC1155 too.",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3556/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3556/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1186812371",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3556#issuecomment-1186812371",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3556",
    "id": 1186812371,
    "node_id": "IC_kwDOA9tCBs5GvVHT",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-18T06:22:52Z",
    "updated_at": "2022-07-18T06:22:52Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @namelessperson0 \r\n\r\n`ERC721Royalty` is just a wrapper around ERC721 & ERC2981 that hooks in the burn mechanism. Because of the fungible nature of ERC1155 tokens, we decided that this mechanism should not apply to 1155.\r\n\r\nTherefore, if you want to add royalties to ERC1155, you should \"just\" inherit from `ERC2981` (in `contracts/tokens/common`)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1186812371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1187340959",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3556#issuecomment-1187340959",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3556",
    "id": 1187340959,
    "node_id": "IC_kwDOA9tCBs5GxWKf",
    "user": {
      "login": "namelessperson0",
      "id": 72940077,
      "node_id": "MDQ6VXNlcjcyOTQwMDc3",
      "avatar_url": "https://avatars.githubusercontent.com/u/72940077?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/namelessperson0",
      "html_url": "https://github.com/namelessperson0",
      "followers_url": "https://api.github.com/users/namelessperson0/followers",
      "following_url": "https://api.github.com/users/namelessperson0/following{/other_user}",
      "gists_url": "https://api.github.com/users/namelessperson0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/namelessperson0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/namelessperson0/subscriptions",
      "organizations_url": "https://api.github.com/users/namelessperson0/orgs",
      "repos_url": "https://api.github.com/users/namelessperson0/repos",
      "events_url": "https://api.github.com/users/namelessperson0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/namelessperson0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-18T12:52:56Z",
    "updated_at": "2022-07-18T12:52:56Z",
    "author_association": "NONE",
    "body": "If i try to inherit ERC2981 to ERC1155 with below code,\r\n```\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/common/ERC2981.sol\";\r\n\r\ncontract MyToken is ERC1155, Ownable,ERC2981 {\r\n    constructor() ERC1155(\"\") {}\r\n\r\n    function setURI(string memory newuri) public onlyOwner {\r\n        _setURI(newuri);\r\n    }\r\n\r\n    function mint(address account, uint256 id, uint256 amount, bytes memory data)\r\n        public\r\n        onlyOwner\r\n    {\r\n        _mint(account, id, amount, data);\r\n    }\r\n\r\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\r\n        public\r\n        onlyOwner\r\n    {\r\n        _mintBatch(to, ids, amounts, data);\r\n    }\r\n}\r\n```\r\nI get the below error\r\n`Derived contract must override function \"supportsInterface\". Two or more base classes define function with same name and parameter types.`\r\n@Amxx ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1187340959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1187435064",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3556#issuecomment-1187435064",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3556",
    "id": 1187435064,
    "node_id": "IC_kwDOA9tCBs5GxtI4",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-18T13:30:25Z",
    "updated_at": "2022-07-18T13:30:25Z",
    "author_association": "COLLABORATOR",
    "body": "As the error says, you are missing an override for `supportsInterface`\r\n\r\nYou need to add \r\n\r\n```\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC1155, ERC2981) returns (bool) {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1187435064/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1190115436",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3556#issuecomment-1190115436",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3556",
    "id": 1190115436,
    "node_id": "IC_kwDOA9tCBs5G77hs",
    "user": {
      "login": "namelessperson0",
      "id": 72940077,
      "node_id": "MDQ6VXNlcjcyOTQwMDc3",
      "avatar_url": "https://avatars.githubusercontent.com/u/72940077?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/namelessperson0",
      "html_url": "https://github.com/namelessperson0",
      "followers_url": "https://api.github.com/users/namelessperson0/followers",
      "following_url": "https://api.github.com/users/namelessperson0/following{/other_user}",
      "gists_url": "https://api.github.com/users/namelessperson0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/namelessperson0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/namelessperson0/subscriptions",
      "organizations_url": "https://api.github.com/users/namelessperson0/orgs",
      "repos_url": "https://api.github.com/users/namelessperson0/repos",
      "events_url": "https://api.github.com/users/namelessperson0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/namelessperson0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-20T10:39:53Z",
    "updated_at": "2022-07-20T10:39:53Z",
    "author_association": "NONE",
    "body": "When I deploy the below smart contarct, I am able to see the `royaltyInfo()` read function but `setDefaultRoyalty()` is not visible in Remix or Etherscan contract functions. \r\n```\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/common/ERC2981.sol\";\r\n\r\ncontract MyToken is ERC1155, Ownable, ERC2981 {\r\n    constructor() ERC1155(\"\") {}\r\n\r\n    function setURI(string memory newuri) public onlyOwner {\r\n        _setURI(newuri);\r\n    }\r\n\r\n    function mint(\r\n        address account,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) public onlyOwner {\r\n        _mint(account, id, amount, data);\r\n    }\r\n\r\n    function mintBatch(\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) public onlyOwner {\r\n        _mintBatch(to, ids, amounts, data);\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        virtual\r\n        override(ERC1155, ERC2981)\r\n        returns (bool)\r\n    {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\nIn the below code, I am able to use both  `royaltyInfo() `and` setDefaultRoyalty()` \r\n```\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Royalty.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract Box2 is ERC721, ERC721Royalty, ERC721URIStorage, Ownable {\r\n    constructor() ERC721(\"MyToken\", \"MTK\") {}\r\n\r\n    function safeMint(address to, uint256 tokenId, string memory uri)\r\n        public\r\n        onlyOwner\r\n    {\r\n        _safeMint(to, tokenId);\r\n        _setTokenURI(tokenId, uri);\r\n    }\r\n\r\n    // The following functions are overrides required by Solidity.\r\n\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, ERC721Royalty) returns (bool) {\r\n          return super.supportsInterface(interfaceId);\r\n      }\r\n\r\n    function _burn(uint256 tokenId) internal override(ERC721, ERC721Royalty, ERC721URIStorage) {\r\n        super._burn(tokenId);\r\n    }\r\n\r\n    function tokenURI(uint256 tokenId)\r\n        public\r\n        view\r\n        override(ERC721, ERC721URIStorage)\r\n        returns (string memory)\r\n    {\r\n        return super.tokenURI(tokenId);\r\n    }\r\n}\r\n```\r\n@Amxx ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1190115436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1190166629",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3556#issuecomment-1190166629",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3556",
    "id": 1190166629,
    "node_id": "IC_kwDOA9tCBs5G8IBl",
    "user": {
      "login": "mpereiraesaa",
      "id": 16945965,
      "node_id": "MDQ6VXNlcjE2OTQ1OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/16945965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpereiraesaa",
      "html_url": "https://github.com/mpereiraesaa",
      "followers_url": "https://api.github.com/users/mpereiraesaa/followers",
      "following_url": "https://api.github.com/users/mpereiraesaa/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpereiraesaa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpereiraesaa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpereiraesaa/subscriptions",
      "organizations_url": "https://api.github.com/users/mpereiraesaa/orgs",
      "repos_url": "https://api.github.com/users/mpereiraesaa/repos",
      "events_url": "https://api.github.com/users/mpereiraesaa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpereiraesaa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-20T11:38:20Z",
    "updated_at": "2022-07-20T11:38:20Z",
    "author_association": "NONE",
    "body": "@namelessperson0 you have to implement the function `setDefaultRoyalty` that calls the inherited internal function called `_setDefaultRoyalty` from ERC2981\r\n\r\nBasically you can add this function as simple as:\r\n```\r\nfunction setDefaultRoyalty(address receiver, uint96 feeNumerator) external {\r\n        _setDefaultRoyalty(receiver, feeNumerator);\r\n    }\r\n\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1190166629/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1190284247",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3556#issuecomment-1190284247",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3556",
    "id": 1190284247,
    "node_id": "IC_kwDOA9tCBs5G8kvX",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-20T13:25:00Z",
    "updated_at": "2022-07-20T13:25:00Z",
    "author_association": "COLLABORATOR",
    "body": "You should restrict access to this function using the method of you choice (ownable or accesscontrol)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1190284247/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
