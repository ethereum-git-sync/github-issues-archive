{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/400",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/400/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/400/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/400/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/400",
  "id": 252358838,
  "node_id": "MDU6SXNzdWUyNTIzNTg4Mzg=",
  "number": 400,
  "title": "Check that destination of token transfers is not 0x",
  "user": {
    "login": "maraoz",
    "id": 287189,
    "node_id": "MDQ6VXNlcjI4NzE4OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/287189?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maraoz",
    "html_url": "https://github.com/maraoz",
    "followers_url": "https://api.github.com/users/maraoz/followers",
    "following_url": "https://api.github.com/users/maraoz/following{/other_user}",
    "gists_url": "https://api.github.com/users/maraoz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maraoz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maraoz/subscriptions",
    "organizations_url": "https://api.github.com/users/maraoz/orgs",
    "repos_url": "https://api.github.com/users/maraoz/repos",
    "events_url": "https://api.github.com/users/maraoz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maraoz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650966,
      "node_id": "MDU6TGFiZWw1MDM2NTA5NjY=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0e8a16",
      "default": true,
      "description": "Low hanging fruit for new contributors to get involved!"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2017-08-23T17:28:58Z",
  "updated_at": "2017-08-28T22:41:29Z",
  "closed_at": "2017-08-28T22:41:29Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Do we want to add `require(_to != address(0))` to `transfer` and `transferFrom`?",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/400/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 1,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/400/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/324739864",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/400#issuecomment-324739864",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/400",
    "id": 324739864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDczOTg2NA==",
    "user": {
      "login": "SylTi",
      "id": 1770876,
      "node_id": "MDQ6VXNlcjE3NzA4NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1770876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylTi",
      "html_url": "https://github.com/SylTi",
      "followers_url": "https://api.github.com/users/SylTi/followers",
      "following_url": "https://api.github.com/users/SylTi/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylTi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylTi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylTi/subscriptions",
      "organizations_url": "https://api.github.com/users/SylTi/orgs",
      "repos_url": "https://api.github.com/users/SylTi/repos",
      "events_url": "https://api.github.com/users/SylTi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylTi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-24T19:55:20Z",
    "updated_at": "2017-08-24T19:55:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Why? You can have use cases that need to send funds to a non-accessible address.\r\nAnd why only checking for a null address? why not also check for validity?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/324739864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/324761478",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/400#issuecomment-324761478",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/400",
    "id": 324761478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDc2MTQ3OA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-24T21:22:52Z",
    "updated_at": "2017-08-24T21:22:52Z",
    "author_association": "MEMBER",
    "body": "What does it mean to check for validity?\r\n\r\nIn general we add checks for the null address because uninitialized values in the EVM are zero values. It helps prevent errors. A use-case where it's needed to make tokens inaccessible would be better served by a custom (non-ERC20) function that removes the tokens from circulation.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/324761478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/325117353",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/400#issuecomment-325117353",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/400",
    "id": 325117353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTExNzM1Mw==",
    "user": {
      "login": "SylTi",
      "id": 1770876,
      "node_id": "MDQ6VXNlcjE3NzA4NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1770876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylTi",
      "html_url": "https://github.com/SylTi",
      "followers_url": "https://api.github.com/users/SylTi/followers",
      "following_url": "https://api.github.com/users/SylTi/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylTi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylTi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylTi/subscriptions",
      "organizations_url": "https://api.github.com/users/SylTi/orgs",
      "repos_url": "https://api.github.com/users/SylTi/repos",
      "events_url": "https://api.github.com/users/SylTi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylTi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-26T11:28:26Z",
    "updated_at": "2017-08-26T11:53:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "What I mean by invalidity is non-redeemable address like 0xdead, 0xwhatever etc.\r\n\r\nI agree, but a user can't make that error (only a dev) by forgetting a parameter, the function takes 2, so you must provide 0x0 manually or the EVM will throw because of the invalid number of arguments.\r\n\r\nRemoving the tokens from circulation doesn't mean necessarily destroying them. What if you want to transfer them to 0x0 until X and make them redeemable at that point?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/325117353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/325389801",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/400#issuecomment-325389801",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/400",
    "id": 325389801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTM4OTgwMQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-28T15:39:13Z",
    "updated_at": "2017-08-28T15:39:13Z",
    "author_association": "MEMBER",
    "body": "The thing is there is no way to identify that an address is non-redeemable. Any address is potentially non-redeemable if no user has a private key for it (and it's not a contract address).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/325389801/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
