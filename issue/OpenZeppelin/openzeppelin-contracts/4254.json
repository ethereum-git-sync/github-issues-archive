{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4254",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4254/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4254/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4254/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4254",
  "id": 1709834247,
  "node_id": "I_kwDOA9tCBs5l6gAH",
  "number": 4254,
  "title": "Function calls and events with named parameters",
  "user": {
    "login": "pcaversaccio",
    "id": 25297591,
    "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pcaversaccio",
    "html_url": "https://github.com/pcaversaccio",
    "followers_url": "https://api.github.com/users/pcaversaccio/followers",
    "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
    "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
    "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
    "repos_url": "https://api.github.com/users/pcaversaccio/repos",
    "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/11",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11/labels",
    "id": 7990184,
    "node_id": "MI_kwDOA9tCBs4Aeeuo",
    "number": 11,
    "title": "5.0",
    "description": null,
    "creator": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 43,
    "closed_issues": 21,
    "state": "open",
    "created_at": "2022-05-17T19:52:44Z",
    "updated_at": "2023-06-02T17:21:01Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 10,
  "created_at": "2023-05-15T10:51:13Z",
  "updated_at": "2023-05-17T13:12:48Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**🧐 Motivation**\r\n\r\nOpenZeppelin contracts generally optimise for readability, security, and auditability (at least from my perspective). Therefore, I think using [Function Calls with Named Parameters](https://docs.soliditylang.org/en/latest/control-structures.html#function-calls-with-named-parameters) provides a huge value-add to the codebase wrt readability and auditability.\r\n\r\n**📝 Details**\r\n\r\n**Example ([`ERC20Burnable`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/ERC20Burnable.sol))**:\r\n\r\n```solidity\r\nfunction burnFrom(address account, uint256 amount) public virtual {\r\n    _spendAllowance({owner: account, spender: _msgSender(), amount: amount});\r\n    _burn({account: account, amount: amount});\r\n}\r\n```\r\n\r\nThere might be cases where currently the parameter names coincide (e.g. `amount` or `account` above), but I would still consider this a value-add wrt clear readability.\r\n\r\n_Edit:_ I also suggest using named parameters for events.\r\n\r\n**Example ([`ERC20`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol))**:\r\n\r\n```solidity\r\nevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\nfunction _mint(address account, uint256 amount) internal virtual {\r\n    require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n    _beforeTokenTransfer(address(0), account, amount);\r\n\r\n    _totalSupply += amount;\r\n    unchecked {\r\n        // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\r\n        _balances[account] += amount;\r\n    }\r\n    emit Transfer({from: address(0), to: account, value: amount});\r\n\r\n    _afterTokenTransfer(address(0), account, amount);\r\n}\r\n```\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4254/reactions",
    "total_count": 7,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 4,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4254/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1548460891",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4254#issuecomment-1548460891",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4254",
    "id": 1548460891,
    "node_id": "IC_kwDOA9tCBs5cS6Nb",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-15T19:36:52Z",
    "updated_at": "2023-05-15T19:36:52Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @pcaversaccio \r\n\r\nThat is something we could consider for 5.0 ... but I fear changing all the function calls would be extremely long :/\r\nDo you know which version of solidity introduced that syntax ?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1548460891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1548467242",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4254#issuecomment-1548467242",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4254",
    "id": 1548467242,
    "node_id": "IC_kwDOA9tCBs5cS7wq",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-15T19:39:59Z",
    "updated_at": "2023-05-15T19:39:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Absolutely 100% in favor of this proposal!! I use named parameters in all of my projects, e.g. [PRBMath](https://github.com/PaulRBerg/prb-math) and [PRBProxy](https://github.com/PaulRBerg/prb-proxy).\r\n\r\n> changing all the function calls would be extremely long\r\n\r\nThat's the point - trading a little bit of verbosity for explicitness and a little additional peace of mind that all variables map to the correct parameters.\r\n\r\n> Do you know which version of solidity introduced that syntax ?\r\n\r\nSolidity v0.2.0 😁\r\n\r\nhttps://twitter.com/_hrkrshnn/status/1574127099723468800",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1548467242/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1548467519",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4254#issuecomment-1548467519",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4254",
    "id": 1548467519,
    "node_id": "IC_kwDOA9tCBs5cS70_",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-15T19:40:12Z",
    "updated_at": "2023-05-15T19:40:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sure, it needs careful consideration where it makes sense. Well, funny enough it seems to be around since solc `0.2.0`: https://twitter.com/_hrkrshnn/status/1574127099723468800 \r\n![image](https://github.com/OpenZeppelin/openzeppelin-contracts/assets/25297591/97a3624b-a454-4173-8e0c-b53bcc063aec)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1548467519/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1550549328",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4254#issuecomment-1550549328",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4254",
    "id": 1550549328,
    "node_id": "IC_kwDOA9tCBs5ca4FQ",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-17T01:13:13Z",
    "updated_at": "2023-05-17T01:13:37Z",
    "author_association": "MEMBER",
    "body": "I'm torn on this... I'm not particularly convinced that it helps readability. Sometimes more verbosity is more noise where bugs can hide. Don't you feel this is somewhat true as well?\r\n\r\nThere are definitely places where there is bad ambiguity that this syntax helps resolve, for example `ERC721._setApprovalForAll` and `ERC20._spendAllowance` (relevant for the recent DEI exploit [^1]). But in other cases like `transferFrom` the order arguments seems very intuitive even though there are two `address` arguments together.\r\n\r\n[^1]: https://twitter.com/adamb83024264/status/1654558408803250176",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1550549328/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1550963163",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4254#issuecomment-1550963163",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4254",
    "id": 1550963163,
    "node_id": "IC_kwDOA9tCBs5ccdHb",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-17T08:20:45Z",
    "updated_at": "2023-05-17T08:50:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "We can debate the aesthetics of named parameters all day long - what matters is whether they lead to faster error correction than baseline. And they unequivocally do.\r\n\r\n>  I'm not particularly convinced that it helps readability\r\n> ...\r\n> more verbosity is more noise where bugs can hide\r\n\r\nLet's put this claim to the test. Which approach is less error-prone?\r\n\r\n```solidity\r\ncontract Contract {\r\n    function approach0(uint256 bar0, uint256 foo0) external {\r\n        _doSomething(bar0, foo0);\r\n    }\r\n\r\n    function approach1(uint256 bar1, uint256 foo1) external {\r\n        _doSomething({ foo: foo1, bar: bar1 });\r\n    }\r\n\r\n    function _doSomething(uint256 foo, uint256 bar) internal {\r\n        // --- snip --- ///\r\n    }\r\n}\r\n```\r\n\r\n> But in other cases like `transferFrom` the order arguments seems very intuitive\r\n\r\nIt feels intuitive to _you_ because you have worked with ERC-20 tokens for years.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1550963163/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1550964689",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4254#issuecomment-1550964689",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4254",
    "id": 1550964689,
    "node_id": "IC_kwDOA9tCBs5ccdfR",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-17T08:21:59Z",
    "updated_at": "2023-05-17T08:21:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Chiming in @CJ42, who is another [champion](https://twitter.com/JeanCavallera/status/1574510608065650690) of named parameters.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1550964689/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1550972656",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4254#issuecomment-1550972656",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4254",
    "id": 1550972656,
    "node_id": "IC_kwDOA9tCBs5ccfbw",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-17T08:27:15Z",
    "updated_at": "2023-05-17T08:33:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I'm torn on this... I'm not particularly convinced that it helps readability. Sometimes more verbosity is more noise where bugs can hide. Don't you feel this is somewhat true as well?\r\n\r\nI definitely agree with this when verbosity is inconsistent and you can't see the wood for the trees. But applied in a consistent manner, I'm convinced that this increases the readability, particularly for people that are not that experienced. I also want to highlight that I also propose to use named parameters for events as well (I updated my issue description and example above), for which we definitely have some bad ambiguities.\r\n\r\n**Example ([`ERC20`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol))**:\r\n\r\n```solidity\r\nevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\nfunction _mint(address account, uint256 amount) internal virtual {\r\n    require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n    _beforeTokenTransfer(address(0), account, amount);\r\n\r\n    _totalSupply += amount;\r\n    unchecked {\r\n        // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\r\n        _balances[account] += amount;\r\n    }\r\n    emit Transfer({from: address(0), to: account, value: amount});\r\n\r\n    _afterTokenTransfer(address(0), account, amount);\r\n}\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1550972656/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1551047461",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4254#issuecomment-1551047461",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4254",
    "id": 1551047461,
    "node_id": "IC_kwDOA9tCBs5ccxsl",
    "user": {
      "login": "CJ42",
      "id": 31145285,
      "node_id": "MDQ6VXNlcjMxMTQ1Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/31145285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CJ42",
      "html_url": "https://github.com/CJ42",
      "followers_url": "https://api.github.com/users/CJ42/followers",
      "following_url": "https://api.github.com/users/CJ42/following{/other_user}",
      "gists_url": "https://api.github.com/users/CJ42/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CJ42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CJ42/subscriptions",
      "organizations_url": "https://api.github.com/users/CJ42/orgs",
      "repos_url": "https://api.github.com/users/CJ42/repos",
      "events_url": "https://api.github.com/users/CJ42/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CJ42/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-17T09:20:18Z",
    "updated_at": "2023-05-17T09:20:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am also in favour of more named parameters when calling functions, but not everywhere and not as a replacement of good variable names passed as parameter (the example above from @pcaversaccio is a good one that suggests named parameters are not necessary, because the variables names passed to the functions are self explanatory).\n\nThere are two situations where I think named function arguments would fit really well:\n\ncase 1: when the function takes a lot of arguments (5+ args). Without named params, it is hard to remember the function params and their order. For instance below from the Governor.sol contract.\n\n![image](https://github.com/OpenZeppelin/openzeppelin-contracts/assets/31145285/91ad6ef5-5fbc-4624-951e-dc37779c6672)\n\n![image](https://github.com/OpenZeppelin/openzeppelin-contracts/assets/31145285/3110ae6a-067f-416b-9a16-616c7b40ca07)\n\ncase 2: When the function takes multiple arguments of the same type (or near the same type). e.g: uint256\n\nTake the function below from Checkpoint.sol\nIt takes 3 numbers. With named args, you know precisely:\n- which number is used for “key”\n- which number is used for “low”\n- which number us used for “high”\n\n![image](https://github.com/OpenZeppelin/openzeppelin-contracts/assets/31145285/9b3131bc-ac18-419b-98e2-57afcf734c4e)\n\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1551047461/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1551051730",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4254#issuecomment-1551051730",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4254",
    "id": 1551051730,
    "node_id": "IC_kwDOA9tCBs5ccyvS",
    "user": {
      "login": "CJ42",
      "id": 31145285,
      "node_id": "MDQ6VXNlcjMxMTQ1Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/31145285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CJ42",
      "html_url": "https://github.com/CJ42",
      "followers_url": "https://api.github.com/users/CJ42/followers",
      "following_url": "https://api.github.com/users/CJ42/following{/other_user}",
      "gists_url": "https://api.github.com/users/CJ42/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CJ42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CJ42/subscriptions",
      "organizations_url": "https://api.github.com/users/CJ42/orgs",
      "repos_url": "https://api.github.com/users/CJ42/repos",
      "events_url": "https://api.github.com/users/CJ42/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CJ42/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-17T09:22:45Z",
    "updated_at": "2023-05-17T09:22:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "As an extra note, I also think named parameters help the most for:\n- creating new structs.\n- emitting events.\n\nThe code snippet below from the Governor.sol contract is quite representative.\n\nWhen you create the struct, you understand very clearly the fields with the named members.\n\nBut for the event emission, it is a bit more obscure.\n\n![image](https://github.com/OpenZeppelin/openzeppelin-contracts/assets/31145285/8d792f7c-0238-4ae5-8769-eadf12885bbf)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1551051730/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1551369643",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4254#issuecomment-1551369643",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4254",
    "id": 1551369643,
    "node_id": "IC_kwDOA9tCBs5ceAWr",
    "user": {
      "login": "RenanSouza2",
      "id": 28443115,
      "node_id": "MDQ6VXNlcjI4NDQzMTE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/28443115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RenanSouza2",
      "html_url": "https://github.com/RenanSouza2",
      "followers_url": "https://api.github.com/users/RenanSouza2/followers",
      "following_url": "https://api.github.com/users/RenanSouza2/following{/other_user}",
      "gists_url": "https://api.github.com/users/RenanSouza2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RenanSouza2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RenanSouza2/subscriptions",
      "organizations_url": "https://api.github.com/users/RenanSouza2/orgs",
      "repos_url": "https://api.github.com/users/RenanSouza2/repos",
      "events_url": "https://api.github.com/users/RenanSouza2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RenanSouza2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-17T13:12:48Z",
    "updated_at": "2023-05-17T13:12:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree with @CJ42, it can be useful with many arguments, \r\nand GUIDELINES.md already includes this which is based in common sense \r\n\r\n'* Unchecked arithmetic blocks should contain comments explaining why overflow is guaranteed not to happen. If the reason is immediately apparent from the line above the unchecked block, the comment may be omitted.'\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1551369643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
