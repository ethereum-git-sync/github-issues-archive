{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4190",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4190/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4190/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4190/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4190",
  "id": 1679188014,
  "node_id": "I_kwDOA9tCBs5kFmAu",
  "number": 4190,
  "title": "Unnecessary private functions prevent overrides using super",
  "user": {
    "login": "geode-main",
    "id": 89101716,
    "node_id": "MDQ6VXNlcjg5MTAxNzE2",
    "avatar_url": "https://avatars.githubusercontent.com/u/89101716?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/geode-main",
    "html_url": "https://github.com/geode-main",
    "followers_url": "https://api.github.com/users/geode-main/followers",
    "following_url": "https://api.github.com/users/geode-main/following{/other_user}",
    "gists_url": "https://api.github.com/users/geode-main/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/geode-main/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/geode-main/subscriptions",
    "organizations_url": "https://api.github.com/users/geode-main/orgs",
    "repos_url": "https://api.github.com/users/geode-main/repos",
    "events_url": "https://api.github.com/users/geode-main/events{/privacy}",
    "received_events_url": "https://api.github.com/users/geode-main/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-04-21T22:43:44Z",
  "updated_at": "2023-04-27T08:12:11Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n<!-- Is your feature request related to a specific problem? Is it just a crazy idea? Tell us about it! -->\r\n\r\nI think it is a trivial suggestion with a simple motivation.\r\n\r\nThere are some internal functions that can be functionally overriden when inherited. However, it is not possible to do so because they are `private` functions instead of `internal`.\r\n\r\nThis is actually *bad*.\r\nFor example, we use a slightly modified ERC1155 with additional checks around _doSafeTransferAcceptanceCheck. To keep the inheritence order, we needed to download all the contracts and modify them locally instead of catching them from npm. Very clearly, that would be more secure for us to override the function using `super`.\r\n\r\nThere is no reason to keep them private and prevent developers from overriding. A developer will override them if it is needed, but it will make the contracts less auditable and therefore, less secure.\r\n\r\n**üìù Details**\r\n<!-- Please describe your feature request in detail. -->\r\nPlease consider converting some private functions to internal, so they can be overriden with `super.function()`.\r\nSome simple suggestions*: \r\n- [_checkOnERC721Received](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/91df66c4a9dfd0425ff923cbeb3a20155f1355ea/contracts/token/ERC721/ERC721.sol#L399)\r\n- [_doSafeTransferAcceptanceCheck on ERC1155](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/91df66c4a9dfd0425ff923cbeb3a20155f1355ea/contracts/token/ERC1155/ERC1155.sol#L447)\r\n- [_doSafeBatchTransferAcceptanceCheck on ERC1155](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/91df66c4a9dfd0425ff923cbeb3a20155f1355ea/contracts/token/ERC1155/ERC1155.sol#L468)\r\n\r\nThere are possibly many other functions, but this is a good start.\r\n\r\nIf it is requested; I am willing to:\r\n1. list all unnecessary private functions.\r\n2. make the *approved* changes.\r\n3. fix the tests to maintain the coverage.\r\n4. fix the internal documentation if necessary.\r\n5. prepare a detailed report on given PR.\r\n6. conduct the same process on [openzeppelin-contracts-upgradeable](https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable). \r\n\r\n> I am already an OZ contributor and have sufficient experience on hardhat to conduct this process.\r\n\r\nHowever, please consider the suggested* changes **before** giving me the green light. This is a lot of work and I don't want to spend time working on a feature request that will later become unnecessary/undesired.\r\n\r\nPlease share your comments: \r\n- What is the reasoning behind preventing overrides at all?\r\n- Why do we need suggested* private functions? \r\n\r\nRegards, fellow opensource contributors.\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contracts Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/CONTRIBUTING.md -->\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4190/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4190/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1524478620",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4190#issuecomment-1524478620",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4190",
    "id": 1524478620,
    "node_id": "IC_kwDOA9tCBs5a3bKc",
    "user": {
      "login": "mw2000",
      "id": 11898068,
      "node_id": "MDQ6VXNlcjExODk4MDY4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11898068?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mw2000",
      "html_url": "https://github.com/mw2000",
      "followers_url": "https://api.github.com/users/mw2000/followers",
      "following_url": "https://api.github.com/users/mw2000/following{/other_user}",
      "gists_url": "https://api.github.com/users/mw2000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mw2000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mw2000/subscriptions",
      "organizations_url": "https://api.github.com/users/mw2000/orgs",
      "repos_url": "https://api.github.com/users/mw2000/repos",
      "events_url": "https://api.github.com/users/mw2000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mw2000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-27T02:18:50Z",
    "updated_at": "2023-04-27T02:18:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Imo makes a lot of sense to make them internal as you mentioned, it will help add more custom functionality for contracts built on top of the library.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1524478620/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1525070641",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4190#issuecomment-1525070641",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4190",
    "id": 1525070641,
    "node_id": "IC_kwDOA9tCBs5a5rsx",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-27T08:12:11Z",
    "updated_at": "2023-04-27T08:12:11Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @geode-main \r\n\r\nYou mention 3 examples:\r\n\r\n> - [_checkOnERC721Received](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/91df66c4a9dfd0425ff923cbeb3a20155f1355ea/contracts/token/ERC721/ERC721.sol#L399)\r\n> - [_doSafeTransferAcceptanceCheck on ERC1155](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/91df66c4a9dfd0425ff923cbeb3a20155f1355ea/contracts/token/ERC1155/ERC1155.sol#L447)\r\n> - [_doSafeBatchTransferAcceptanceCheck on ERC1155](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/91df66c4a9dfd0425ff923cbeb3a20155f1355ea/contracts/token/ERC1155/ERC1155.sol#L468)\r\n\r\nCan you give some details about situation where a dev would want to override them?\r\n\r\n(If they are private its because we thought it would not be necessary to override them, and we wanted to prevent someone accidentally breaking stuff)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1525070641/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
