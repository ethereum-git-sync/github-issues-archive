{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4466",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4466/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4466/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4466/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4466",
  "id": 1810237987,
  "node_id": "I_kwDOA9tCBs5r5goj",
  "number": 4466,
  "title": "Some modifiers could use internal functions to reduce code size impact",
  "user": {
    "login": "nicolasgarcia214",
    "id": 37629288,
    "node_id": "MDQ6VXNlcjM3NjI5Mjg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/37629288?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nicolasgarcia214",
    "html_url": "https://github.com/nicolasgarcia214",
    "followers_url": "https://api.github.com/users/nicolasgarcia214/followers",
    "following_url": "https://api.github.com/users/nicolasgarcia214/following{/other_user}",
    "gists_url": "https://api.github.com/users/nicolasgarcia214/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nicolasgarcia214/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nicolasgarcia214/subscriptions",
    "organizations_url": "https://api.github.com/users/nicolasgarcia214/orgs",
    "repos_url": "https://api.github.com/users/nicolasgarcia214/repos",
    "events_url": "https://api.github.com/users/nicolasgarcia214/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nicolasgarcia214/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650966,
      "node_id": "MDU6TGFiZWw1MDM2NTA5NjY=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0e8a16",
      "default": true,
      "description": "Low hanging fruit for new contributors to get involved!"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-07-18T15:57:49Z",
  "updated_at": "2023-07-20T18:38:22Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "The following modifier could be added to many methods and its implementation is large enough to consider using internal functions:\r\n\r\n- [`onlyGovernance`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/governance/Governor.sol#L68) in `Governor.sol`\r\n\r\nFurthermore, other modifiers with fewer lines within each code block may benefit from also using internal functions:\r\n\r\n- [`onlyProxy`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/utils/UUPSUpgradeable.sol#L50) and [`notDelegated`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/utils/UUPSUpgradeable.sol#L64) in `UUPSUpgradeable.sol`.\r\n- [`onlyInitializing`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/utils/Initializable.sol#L140) in `Initializable.sol.`\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4466/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4466/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1641182093",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4466#issuecomment-1641182093",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4466",
    "id": 1641182093,
    "node_id": "IC_kwDOA9tCBs5h0nON",
    "user": {
      "login": "ernestognw",
      "id": 33379285,
      "node_id": "MDQ6VXNlcjMzMzc5Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/33379285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ernestognw",
      "html_url": "https://github.com/ernestognw",
      "followers_url": "https://api.github.com/users/ernestognw/followers",
      "following_url": "https://api.github.com/users/ernestognw/following{/other_user}",
      "gists_url": "https://api.github.com/users/ernestognw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ernestognw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ernestognw/subscriptions",
      "organizations_url": "https://api.github.com/users/ernestognw/orgs",
      "repos_url": "https://api.github.com/users/ernestognw/repos",
      "events_url": "https://api.github.com/users/ernestognw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ernestognw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-19T00:16:13Z",
    "updated_at": "2023-07-19T00:16:13Z",
    "author_association": "MEMBER",
    "body": "I didn't know internal functions improve code size. So, is the proposal to replace these modifiers with internal functions or use the internal functions inside the modifiers? \r\n\r\nWe can implement such changes without issues if the proposal is to keep the modifiers, however, replacing them with internal functions would require more discussion as it arguably undermines DX.\r\n\r\nI think it'd be helpful to have a benchmark with a rough estimate of how much it would save for both creation and runtime. A foundry test may do the job for this.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1641182093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1643036812",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4466#issuecomment-1643036812",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4466",
    "id": 1643036812,
    "node_id": "IC_kwDOA9tCBs5h7sCM",
    "user": {
      "login": "nicolasgarcia214",
      "id": 37629288,
      "node_id": "MDQ6VXNlcjM3NjI5Mjg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/37629288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasgarcia214",
      "html_url": "https://github.com/nicolasgarcia214",
      "followers_url": "https://api.github.com/users/nicolasgarcia214/followers",
      "following_url": "https://api.github.com/users/nicolasgarcia214/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasgarcia214/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasgarcia214/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasgarcia214/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasgarcia214/orgs",
      "repos_url": "https://api.github.com/users/nicolasgarcia214/repos",
      "events_url": "https://api.github.com/users/nicolasgarcia214/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasgarcia214/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-20T03:07:26Z",
    "updated_at": "2023-07-20T03:07:26Z",
    "author_association": "NONE",
    "body": "Use the internal function inside the modifiers. This is something we commonly use in most of our modifiers but for some reason not on the ones I mentioned.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1643036812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1644396578",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4466#issuecomment-1644396578",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4466",
    "id": 1644396578,
    "node_id": "IC_kwDOA9tCBs5iA4Ai",
    "user": {
      "login": "ernestognw",
      "id": 33379285,
      "node_id": "MDQ6VXNlcjMzMzc5Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/33379285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ernestognw",
      "html_url": "https://github.com/ernestognw",
      "followers_url": "https://api.github.com/users/ernestognw/followers",
      "following_url": "https://api.github.com/users/ernestognw/following{/other_user}",
      "gists_url": "https://api.github.com/users/ernestognw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ernestognw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ernestognw/subscriptions",
      "organizations_url": "https://api.github.com/users/ernestognw/orgs",
      "repos_url": "https://api.github.com/users/ernestognw/repos",
      "events_url": "https://api.github.com/users/ernestognw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ernestognw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-20T18:27:58Z",
    "updated_at": "2023-07-20T18:38:22Z",
    "author_association": "MEMBER",
    "body": "Ok, that makes sense as it doesn't change the interface. I'm still not sure about the gas savings. \r\n\r\nMy conclusion is that the code size reduction is significant but the runtime costs added could be even worse if used multiple times. Here you have the Foundry tests I made:\r\n\r\n<details>\r\n<summary>PoC Code</summary>\r\n\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport {Test} from \"forge-std/Test.sol\";\r\n\r\n/// === Base ===\r\n\r\ncontract AccessControlStorage {\r\n    bytes32 public constant NOT_HELD_ROLE = 0x00;\r\n    bytes32 public constant HELD_ROLE = bytes32(uint256(0x01));\r\n\r\n    struct RoleData {\r\n        mapping(address => bool) members;\r\n        bytes32 adminRole;\r\n    }\r\n\r\n    mapping(bytes32 => RoleData) internal _roles;\r\n\r\n    constructor() {\r\n        _roles[HELD_ROLE].members[msg.sender] = true;\r\n    }\r\n}\r\n\r\n/// === Inlined Setup ===\r\n\r\ncontract Inlined is AccessControlStorage {\r\n    modifier onlyRole(bytes32 role) {\r\n        require(_roles[role].members[msg.sender]);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract ModifiedInlined is Inlined {\r\n    function fail() public onlyRole(NOT_HELD_ROLE) {}\r\n\r\n    function succeed() public onlyRole(HELD_ROLE) {}\r\n}\r\n\r\n/// === Internal Setup ===\r\n\r\ncontract Internal is AccessControlStorage {\r\n    modifier onlyRole(bytes32 role) {\r\n        _checkRole(role, msg.sender);\r\n        _;\r\n    }\r\n\r\n    function _checkRole(bytes32 role, address account) internal view virtual {\r\n        require(_roles[role].members[account]);\r\n    }\r\n}\r\n\r\ncontract ModifiedInternal is Internal {\r\n    function fail() public onlyRole(NOT_HELD_ROLE) {}\r\n\r\n    function succeed() public onlyRole(HELD_ROLE) {}\r\n}\r\n\r\n/// === Tests ===\r\n\r\ncontract ModifiedInlinedTest is Test {\r\n    ModifiedInlined private _modified;\r\n\r\n    function setUp() public {\r\n        _modified = new ModifiedInlined();\r\n    }\r\n\r\n    function testReverts() public {\r\n        vm.expectRevert();\r\n        _modified.fail();\r\n    }\r\n\r\n    function testPasses() public {\r\n        _modified.succeed();\r\n    }\r\n}\r\n\r\ncontract ModifiedInternalTest is Test {\r\n    ModifiedInternal private _modified;\r\n\r\n    function setUp() public {\r\n        _modified = new ModifiedInternal();\r\n    }\r\n\r\n    function testReverts() public {\r\n        vm.expectRevert();\r\n        _modified.fail();\r\n    }\r\n\r\n    function testPasses() public {\r\n        _modified.succeed();\r\n    }\r\n}\r\n```\r\n</details>\r\n\r\nWhen running `forge test --match-contract Modified --gas-report`, it gives the following output:\r\n\r\n| test/Modifiers.t.sol:ModifiedInlined contract |                 |      |        |      |         |\r\n|-----------------------------------------------|-----------------|------|--------|------|---------|\r\n| Deployment Cost                               | Deployment Size |      |        |      |         |\r\n| 81703                                         | 386             |      |        |      |         |\r\n| Function Name                                 | min             | avg  | median | max  | # calls |\r\n| fail                                          | 2309            | 2309 | 2309   | 2309 | 1       |\r\n| succeed                                       | 2343            | 2343 | 2343   | 2343 | 1       |\r\n\r\n\r\n| test/Modifiers.t.sol:ModifiedInternal contract |                 |      |        |      |         |\r\n|------------------------------------------------|-----------------|------|--------|------|---------|\r\n| Deployment Cost                                | Deployment Size |      |        |      |         |\r\n| 70891                                          | 331             |      |        |      |         |\r\n| Function Name                                  | min             | avg  | median | max  | # calls |\r\n| fail                                           | 2417            | 2417 | 2417   | 2417 | 1       |\r\n| succeed                                        | 2447            | 2447 | 2447   | 2447 | 1       |\r\n\r\nSo far, we're saving 10,812 units of gas by using internal functions and we're saving 104 and 108 units of gas per function call. That means we'll need around 100 calls to waste more gas than saved.\r\n\r\nInterestingly, the functions you shared are not expected to be used frequently imo so it should be fine.\r\n\r\nAlso note Governor is already a big contract so we'll be interested in a code size reduction if it doesn't affect runtime costs.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1644396578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1644412121",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4466#issuecomment-1644412121",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4466",
    "id": 1644412121,
    "node_id": "IC_kwDOA9tCBs5iA7zZ",
    "user": {
      "login": "ernestognw",
      "id": 33379285,
      "node_id": "MDQ6VXNlcjMzMzc5Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/33379285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ernestognw",
      "html_url": "https://github.com/ernestognw",
      "followers_url": "https://api.github.com/users/ernestognw/followers",
      "following_url": "https://api.github.com/users/ernestognw/following{/other_user}",
      "gists_url": "https://api.github.com/users/ernestognw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ernestognw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ernestognw/subscriptions",
      "organizations_url": "https://api.github.com/users/ernestognw/orgs",
      "repos_url": "https://api.github.com/users/ernestognw/repos",
      "events_url": "https://api.github.com/users/ernestognw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ernestognw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-20T18:37:35Z",
    "updated_at": "2023-07-20T18:37:35Z",
    "author_association": "MEMBER",
    "body": "For anyone wanting to take the issue, the implementation should be as follows:\r\n\r\n- Replace the [`onlyGovernance`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/governance/Governor.sol#L68) code with an internal function called `_checkGovernance` (alternatively `_checkExecutor`) doing the same check.\r\n- Replace the [`onlyProxy`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/utils/UUPSUpgradeable.sol#L50) code with an internal function called `_checkProxy` with the same check and the [`notDelegated`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/utils/UUPSUpgradeable.sol#L64) code with a `_checkNotDelegated` internal function\r\n- Replace the [`onlyInitializing`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/utils/Initializable.sol#L140) code with an internal function called `_checkInitializing`\r\n\r\nLabeling as a good first issue but bear in mind a PR might be delayed since this is not a priority at the moment and other members in the team might want to take a look.\r\n\r\n@frangio @Amxx ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1644412121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
