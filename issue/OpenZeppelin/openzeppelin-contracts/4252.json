{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4252",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4252/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4252/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4252/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4252",
  "id": 1709748230,
  "node_id": "I_kwDOA9tCBs5l6LAG",
  "number": 4252,
  "title": "ERC1155: allow acceptance check to be extendable",
  "user": {
    "login": "Zergity",
    "id": 37166829,
    "node_id": "MDQ6VXNlcjM3MTY2ODI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/37166829?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Zergity",
    "html_url": "https://github.com/Zergity",
    "followers_url": "https://api.github.com/users/Zergity/followers",
    "following_url": "https://api.github.com/users/Zergity/following{/other_user}",
    "gists_url": "https://api.github.com/users/Zergity/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Zergity/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Zergity/subscriptions",
    "organizations_url": "https://api.github.com/users/Zergity/orgs",
    "repos_url": "https://api.github.com/users/Zergity/repos",
    "events_url": "https://api.github.com/users/Zergity/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Zergity/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2023-05-15T10:01:07Z",
  "updated_at": "2023-05-31T02:53:15Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**🧐 Motivation**\r\nUser token should be able to override and customize the acceptance check functions\r\n\r\n**📝 Details**\r\nChange the scope of the following 2 functions from `private` to `internal virtual`:\r\n* _doSafeTransferAcceptanceCheck\r\n* _doSafeBatchTransferAcceptanceCheck",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4252/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4252/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1548467313",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4252#issuecomment-1548467313",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4252",
    "id": 1548467313,
    "node_id": "IC_kwDOA9tCBs5cS7xx",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-15T19:40:02Z",
    "updated_at": "2023-05-15T19:40:02Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @Zergity \r\n\r\n> User (...) should be able to (...) customize the acceptance check functions\r\n\r\nWe always felts the opposite way. Do you have any example of overrides that you think would be desirable ?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1548467313/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1548801147",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4252#issuecomment-1548801147",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4252",
    "id": 1548801147,
    "node_id": "IC_kwDOA9tCBs5cUNR7",
    "user": {
      "login": "Zergity",
      "id": 37166829,
      "node_id": "MDQ6VXNlcjM3MTY2ODI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/37166829?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zergity",
      "html_url": "https://github.com/Zergity",
      "followers_url": "https://api.github.com/users/Zergity/followers",
      "following_url": "https://api.github.com/users/Zergity/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zergity/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zergity/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zergity/subscriptions",
      "organizations_url": "https://api.github.com/users/Zergity/orgs",
      "repos_url": "https://api.github.com/users/Zergity/repos",
      "events_url": "https://api.github.com/users/Zergity/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zergity/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-16T00:39:43Z",
    "updated_at": "2023-05-16T08:01:57Z",
    "author_association": "NONE",
    "body": "> Hello @Zergity\r\n> \r\n> > User (...) should be able to (...) customize the acceptance check functions\r\n> \r\n> We always felts the opposite way. Do you have any example of overrides that you think would be desirable ?\r\n\r\nWe're building an 1155-To-20-Shadow token where each 1155 ID is able to deploy (on-demand) a Shadow ERC20 token that shares control with the original 1155 ID but with a separate address for composability. When this Shadow ERC20 is transferred, the acceptance check will be bypassed, as almost no 3rd party contracts implement any acceptance check for ERC20.\r\n\r\nShadow tokens are useful because more and more projects want to use ERC1155 for their multiple tokens design but also want each of the token IDs to be composability with other DeFi applications. ERC20 wrapping is inconvenient for users, but it is also impractical to clone all IDs to ERC20 on launch. The most effective way to do this is to use the ERC1155 as the application's main design; then allow anyone to deploy a Shadow token that shares control with the original ID on their demand.\r\n\r\nAn EIP is planned to submit for this. And this PR can help simplify the Implementation by extending and overriding the OZ's implementation.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1548801147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1549215977",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4252#issuecomment-1549215977",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4252",
    "id": 1549215977,
    "node_id": "IC_kwDOA9tCBs5cVyjp",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-16T08:20:56Z",
    "updated_at": "2023-05-16T08:20:56Z",
    "author_association": "COLLABORATOR",
    "body": "> We're building an 1155-To-20-Shadow token where each 1155 ID is able to deploy (on-demand) a Shadow ERC20 token that shares control with the original 1155 ID but with a separate address for composability. When this Shadow ERC20 is transferred, the acceptance check will be bypassed, as almost no 3rd party contracts implement any acceptance check for ERC20.\r\n\r\nThat sounds like [something I've prototypes a few months ago](https://gist.github.com/Amxx/397908c7a6f6c5afcc673577d1901155).\r\n\r\nIts interesting to notice that indeed, if you try to transfer the ERC20 version of the token, the underlying \"ERC1155.safeTransferFrom\" will require the target to implement the receiver hook. That makes it incompatible with Uniswap and other Defi protocoles.\r\n\r\nMy concern is that is you disable or alter the acceptance check, you would be breaking the ERC1155 [safe transfer rules](https://eips.ethereum.org/EIPS/eip-1155#safe-transfer-rules), and as a consequence your token would not really be ERC-1155 compliant. That is why the function is private: to make sure devs don't (accidentally) break the ERC-1155 compliance.\r\n\r\nI'd love to have @frangio's and @ernestognw's opinion on that, because I'm personally puzzled.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1549215977/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1550539925",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4252#issuecomment-1550539925",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4252",
    "id": 1550539925,
    "node_id": "IC_kwDOA9tCBs5ca1yV",
    "user": {
      "login": "Zergity",
      "id": 37166829,
      "node_id": "MDQ6VXNlcjM3MTY2ODI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/37166829?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zergity",
      "html_url": "https://github.com/Zergity",
      "followers_url": "https://api.github.com/users/Zergity/followers",
      "following_url": "https://api.github.com/users/Zergity/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zergity/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zergity/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zergity/subscriptions",
      "organizations_url": "https://api.github.com/users/Zergity/orgs",
      "repos_url": "https://api.github.com/users/Zergity/repos",
      "events_url": "https://api.github.com/users/Zergity/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zergity/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-17T01:01:30Z",
    "updated_at": "2023-05-17T01:01:30Z",
    "author_association": "NONE",
    "body": "> That sounds like [something I've prototypes a few months ago](https://gist.github.com/Amxx/397908c7a6f6c5afcc673577d1901155).\r\n\r\nYes, that's exactly what we're trying to do. We have a full implementation in development here if you want to take a look: https://github.com/derivable-labs/shadow-token/tree/dev/contracts",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1550539925/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1550590364",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4252#issuecomment-1550590364",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4252",
    "id": 1550590364,
    "node_id": "IC_kwDOA9tCBs5cbCGc",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-17T02:17:11Z",
    "updated_at": "2023-05-17T02:17:11Z",
    "author_association": "MEMBER",
    "body": "On one hand I also believe that this customization would not be compliant with ERC-1155, unless you somehow had different rules for the ERC20 shadow token transfers than you do for the standard ERC-1155 transfers... in which case it starts to sound similar to ERC-777's compatibility with ERC-20 and I don't think that was a good idea.\r\n\r\nOn the other hand, I can't find good reasons to _prevent_ you from implementing this if you want to, so it might be OK to make the acceptance check internal and overrideable... @Amxx can you see reasons against making it internal?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1550590364/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1550917142",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4252#issuecomment-1550917142",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4252",
    "id": 1550917142,
    "node_id": "IC_kwDOA9tCBs5ccR4W",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-17T07:46:55Z",
    "updated_at": "2023-05-17T07:46:55Z",
    "author_association": "COLLABORATOR",
    "body": "I think we agree,\r\n\r\nI'm not really comfortable with the construction @Zergity shared, because it breaks many assumption one might make about the behavior of the shadow (event not emitted, approval being all or nothing, ...). But should be prevent devs from doing that? I think it would do more harm then good.\r\n\r\nI'd rather have @Zergity break the ERC requirement knowingly, using our code (from npm) under the hood, than him doing the same with our contract \"vendored\" and \"modified\" directly from github.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1550917142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1550958122",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4252#issuecomment-1550958122",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4252",
    "id": 1550958122,
    "node_id": "IC_kwDOA9tCBs5ccb4q",
    "user": {
      "login": "Zergity",
      "id": 37166829,
      "node_id": "MDQ6VXNlcjM3MTY2ODI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/37166829?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zergity",
      "html_url": "https://github.com/Zergity",
      "followers_url": "https://api.github.com/users/Zergity/followers",
      "following_url": "https://api.github.com/users/Zergity/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zergity/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zergity/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zergity/subscriptions",
      "organizations_url": "https://api.github.com/users/Zergity/orgs",
      "repos_url": "https://api.github.com/users/Zergity/repos",
      "events_url": "https://api.github.com/users/Zergity/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zergity/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-17T08:16:37Z",
    "updated_at": "2023-05-17T08:16:37Z",
    "author_association": "NONE",
    "body": "> I'm not really comfortable with the construction @Zergity shared, because it breaks many assumption one might make about the behavior of the shadow (event not emitted, approval being all or nothing, ...). \r\n\r\nThank you for your comments. I'm not sure what did I missed, but all ERC20 events are emitted from the Shadow.\r\n\r\nAnd the uint approval is planned to be implemented, as the implementation is still WIP.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1550958122/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1558842937",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4252#issuecomment-1558842937",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4252",
    "id": 1558842937,
    "node_id": "IC_kwDOA9tCBs5c6g45",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-23T08:54:24Z",
    "updated_at": "2023-05-23T08:54:36Z",
    "author_association": "COLLABORATOR",
    "body": "> all ERC20 events are emitted from the Shadow.\r\n\r\nThey are emitted if someone triggers the transfer on the shadow itself. \r\nBut if the transfer is triggered using the ERC1155 interface on the factory, the shadow will not emit the ERC20 events corresponding to the balance change.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1558842937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1565994641",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4252#issuecomment-1565994641",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4252",
    "id": 1565994641,
    "node_id": "IC_kwDOA9tCBs5dVy6R",
    "user": {
      "login": "Zergity",
      "id": 37166829,
      "node_id": "MDQ6VXNlcjM3MTY2ODI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/37166829?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zergity",
      "html_url": "https://github.com/Zergity",
      "followers_url": "https://api.github.com/users/Zergity/followers",
      "following_url": "https://api.github.com/users/Zergity/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zergity/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zergity/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zergity/subscriptions",
      "organizations_url": "https://api.github.com/users/Zergity/orgs",
      "repos_url": "https://api.github.com/users/Zergity/repos",
      "events_url": "https://api.github.com/users/Zergity/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zergity/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-28T08:28:22Z",
    "updated_at": "2023-05-28T08:28:22Z",
    "author_association": "NONE",
    "body": "> > all ERC20 events are emitted from the Shadow.\r\n> \r\n> They are emitted if someone triggers the transfer on the shadow itself. But if the transfer is triggered using the ERC1155 interface on the factory, the shadow will not emit the ERC20 events corresponding to the balance change.\r\n\r\nI've put a lot of thought into this because checking whether an ID has a Shadow requires querying untouched contracts and storage. Per design, there's only a small portion of 1155 IDs will have shadows, not the majority of them, so the trade-off must be carefully considered. Even if the ERC-20 events are emitted for 1155 transfers, past events (before the Shadow is deployed) are completely missing.\r\n\r\nThat's why I decide that 1155 transfers are an internal mechanism of the Shadow token, not the ERC-20 behavior itself. Some token constantly inflates/deflates or are manually rebased, which modify the user balances or moves fund around and still be ERC-20 compatible.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1565994641/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1568519625",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4252#issuecomment-1568519625",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4252",
    "id": 1568519625,
    "node_id": "IC_kwDOA9tCBs5dfbXJ",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-30T14:18:08Z",
    "updated_at": "2023-05-30T14:18:08Z",
    "author_association": "COLLABORATOR",
    "body": "Yes, you'd need to ensure shadows are deployed for any tokenId that exist in the erc1155 contract, and all transfers emit events on both side from the start.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1568519625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1569421297",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4252#issuecomment-1569421297",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4252",
    "id": 1569421297,
    "node_id": "IC_kwDOA9tCBs5di3fx",
    "user": {
      "login": "Zergity",
      "id": 37166829,
      "node_id": "MDQ6VXNlcjM3MTY2ODI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/37166829?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zergity",
      "html_url": "https://github.com/Zergity",
      "followers_url": "https://api.github.com/users/Zergity/followers",
      "following_url": "https://api.github.com/users/Zergity/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zergity/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zergity/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zergity/subscriptions",
      "organizations_url": "https://api.github.com/users/Zergity/orgs",
      "repos_url": "https://api.github.com/users/Zergity/repos",
      "events_url": "https://api.github.com/users/Zergity/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zergity/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-31T02:53:15Z",
    "updated_at": "2023-05-31T02:53:15Z",
    "author_association": "NONE",
    "body": "> Yes, you'd need to ensure shadows are deployed for any tokenId that exist in the erc1155 contract, and all transfers emit events on both side from the start.\r\n\r\nSo that's where our ideas are different. Our Shadow standard is designed for applications where only a small number of IDs need an ERC20, on-demand, and only long after the protocol launch.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1569421297/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
