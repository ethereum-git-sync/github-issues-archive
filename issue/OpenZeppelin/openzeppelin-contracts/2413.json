{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2413",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2413/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2413/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2413/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2413",
  "id": 751475208,
  "node_id": "MDU6SXNzdWU3NTE0NzUyMDg=",
  "number": 2413,
  "title": "The `SafeMath.div` function needlessly allocates memory",
  "user": {
    "login": "nlordell",
    "id": 4210206,
    "node_id": "MDQ6VXNlcjQyMTAyMDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4210206?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nlordell",
    "html_url": "https://github.com/nlordell",
    "followers_url": "https://api.github.com/users/nlordell/followers",
    "following_url": "https://api.github.com/users/nlordell/following{/other_user}",
    "gists_url": "https://api.github.com/users/nlordell/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nlordell/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nlordell/subscriptions",
    "organizations_url": "https://api.github.com/users/nlordell/orgs",
    "repos_url": "https://api.github.com/users/nlordell/repos",
    "events_url": "https://api.github.com/users/nlordell/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nlordell/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 417782817,
      "node_id": "MDU6TGFiZWw0MTc3ODI4MTc=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/bug",
      "name": "bug",
      "color": "b60205",
      "default": true,
      "description": null
    },
    {
      "id": 1000207718,
      "node_id": "MDU6TGFiZWwxMDAwMjA3NzE4",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/contracts",
      "name": "contracts",
      "color": "1d76db",
      "default": false,
      "description": "Smart contract code."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-11-26T10:29:24Z",
  "updated_at": "2021-01-18T21:06:28Z",
  "closed_at": "2021-01-18T21:06:28Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "The `SafeMath.div` function needlessly allocates memory.\r\n\r\n**üíª Environment**\r\n\r\nAll environments.\r\n\r\n**üìù Details**\r\n\r\nCalling `SafeMath.div(uint256, uint256)` allocates memory in order to pass a revert reason to `SafeMath.div(uint256, uint256, string memory)`, even if the operation would not revert. This causes an addition 64-byte allocation per call for the revert reason string `length || paddedContents`.\r\n\r\nWhile in it of itself, this is a minor issue, it is worth noting that the other `SafeMath` methods do not have the same problem, and that in a loop, the gas cost of `SafeMath.div` grows quadratically (because of memory costs) instead of linearly with the number of iterations as one would naturally expect.\r\n\r\n**üî¢ Code to reproduce bug**\r\n\r\nThe easiest way to reproduce this is to use the following code in Remix and calling `doThings` with varying lengths of `things` input:\r\n```solidity\r\n// SPDX-License-Identifier: CC0-1.0\r\npragma solidity ^0.6.0;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\";\r\n\r\ncontract SafeMathDivMemoryTest {\r\n    using SafeMath for uint256;\r\n    \r\n    function doManyThings(uint256[] calldata things) external pure returns (uint256[] memory result, uint256 mem) {\r\n        result = new uint256[](things.length);\r\n        \r\n        assembly {\r\n            mem := mload(0x40)\r\n        }\r\n        for (uint256 i = 0; i < things.length; i++) {\r\n            result[i] = doThing(things[i]);\r\n        }\r\n        assembly {\r\n            mem := sub(mload(0x40), mem)\r\n        }\r\n    }\r\n    \r\n    function doThing(uint256 thing) internal pure returns (uint256) {\r\n        // return thing / 2;\r\n        return thing.div(2);\r\n    }\r\n}\r\n```\r\n\r\nThe call to `doThing` allocates 64 bytes per call, because of the `div` call. Replacing `thing.div(2)` with `thing / 2` reduces memory allocation to 0 as expected.\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2413/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2413/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/734519537",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2413#issuecomment-734519537",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2413",
    "id": 734519537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNDUxOTUzNw==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-27T00:48:35Z",
    "updated_at": "2020-11-27T00:48:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @nlordell !  Thanks for the suggestion, it is really appreciated.\r\n\r\nThe project owner will review your suggestion as soon as they can. \r\n\r\nPlease wait until we have discussed this idea before writing any code or submitting a Pull Request, so we can go through the design beforehand.  We don‚Äôt want you to waste your time!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/734519537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/735389741",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2413#issuecomment-735389741",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2413",
    "id": 735389741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNTM4OTc0MQ==",
    "user": {
      "login": "ashwinYardi",
      "id": 43699109,
      "node_id": "MDQ6VXNlcjQzNjk5MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/43699109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ashwinYardi",
      "html_url": "https://github.com/ashwinYardi",
      "followers_url": "https://api.github.com/users/ashwinYardi/followers",
      "following_url": "https://api.github.com/users/ashwinYardi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ashwinYardi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ashwinYardi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ashwinYardi/subscriptions",
      "organizations_url": "https://api.github.com/users/ashwinYardi/orgs",
      "repos_url": "https://api.github.com/users/ashwinYardi/repos",
      "events_url": "https://api.github.com/users/ashwinYardi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ashwinYardi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-29T12:56:39Z",
    "updated_at": "2020-11-29T12:56:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "The same scenario can be reproduced for `SafeMath.sub(uint256, uint256)` . I confirmed on remix. So, both `div` and `sub` allocated 64 bytes per call. Here is the contract used for verifying: \r\n```\r\n// SPDX-License-Identifier: CC0-1.0\r\npragma solidity ^0.6.0;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\";\r\n\r\ncontract SafeMathSubMemoryTest {\r\n    using SafeMath for uint256;\r\n    \r\n    function doManyThings(uint256[] calldata things) external pure returns (uint256[] memory result, uint256 mem) {\r\n        result = new uint256[](things.length);\r\n        \r\n        assembly {\r\n            mem := mload(0x40)\r\n        }\r\n        for (uint256 i = 0; i < things.length; i++) {\r\n            result[i] = doThing(things[i]);\r\n        }\r\n        assembly {\r\n            mem := sub(mload(0x40), mem)\r\n        }\r\n    }\r\n    \r\n    function doThing(uint256 thing) internal pure returns (uint256) {\r\n        // return thing - 2;\r\n        return thing.sub(2);\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/735389741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/737452443",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2413#issuecomment-737452443",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2413",
    "id": 737452443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNzQ1MjQ0Mw==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-02T19:41:17Z",
    "updated_at": "2020-12-02T19:41:17Z",
    "author_association": "MEMBER",
    "body": "Thanks everyone for reporting and testing this. I am very interested in these results and will be looking into it.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/737452443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/756660644",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2413#issuecomment-756660644",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2413",
    "id": 756660644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NjY2MDY0NA==",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-08T09:51:08Z",
    "updated_at": "2021-01-08T09:51:08Z",
    "author_association": "COLLABORATOR",
    "body": "Note; `mod` is also affected. This is due to the \"default\" SafeMath function allocating strings for revert messages, even when they are not actually used.\r\n\r\nFix requiers some code duplication, to make sure that these defaults function do not allocate string unless they are just about to revert. PR #2462 fixes that issue, as shown by the tests. I also used the occasion to add \"custom revert message\" versions of `add` and `mul`",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/756660644/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
