{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2617",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2617/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2617/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2617/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2617",
  "id": 842808707,
  "node_id": "MDU6SXNzdWU4NDI4MDg3MDc=",
  "number": 2617,
  "title": "isOwner() functionality missing from Ownable.sol",
  "user": {
    "login": "khanjasir90",
    "id": 53305380,
    "node_id": "MDQ6VXNlcjUzMzA1Mzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53305380?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/khanjasir90",
    "html_url": "https://github.com/khanjasir90",
    "followers_url": "https://api.github.com/users/khanjasir90/followers",
    "following_url": "https://api.github.com/users/khanjasir90/following{/other_user}",
    "gists_url": "https://api.github.com/users/khanjasir90/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/khanjasir90/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/khanjasir90/subscriptions",
    "organizations_url": "https://api.github.com/users/khanjasir90/orgs",
    "repos_url": "https://api.github.com/users/khanjasir90/repos",
    "events_url": "https://api.github.com/users/khanjasir90/events{/privacy}",
    "received_events_url": "https://api.github.com/users/khanjasir90/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2021-03-28T19:12:58Z",
  "updated_at": "2021-03-29T07:07:38Z",
  "closed_at": "2021-03-29T07:07:38Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "In Ownable.sol file isOwner() function can be added to check whether a particular account is the owner of the contract!",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2617/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2617/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/808944549",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2617#issuecomment-808944549",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2617",
    "id": 808944549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwODk0NDU0OQ==",
    "user": {
      "login": "khanjasir90",
      "id": 53305380,
      "node_id": "MDQ6VXNlcjUzMzA1Mzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/53305380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khanjasir90",
      "html_url": "https://github.com/khanjasir90",
      "followers_url": "https://api.github.com/users/khanjasir90/followers",
      "following_url": "https://api.github.com/users/khanjasir90/following{/other_user}",
      "gists_url": "https://api.github.com/users/khanjasir90/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khanjasir90/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khanjasir90/subscriptions",
      "organizations_url": "https://api.github.com/users/khanjasir90/orgs",
      "repos_url": "https://api.github.com/users/khanjasir90/repos",
      "events_url": "https://api.github.com/users/khanjasir90/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khanjasir90/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-28T19:13:28Z",
    "updated_at": "2021-03-28T19:13:28Z",
    "author_association": "NONE",
    "body": "@Amxx  can i work on adding this functionality!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/808944549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/808996511",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2617#issuecomment-808996511",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2617",
    "id": 808996511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwODk5NjUxMQ==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-29T00:49:08Z",
    "updated_at": "2021-03-29T00:49:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @khanjasir90!  Thanks for the suggestion, it is really appreciated.\r\n\r\nCan you provide more information on the need for an `isOwner(address)` function?  There is already an [`owner`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/access/Ownable.sol#L35) function and an [`onlyOwner`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/access/Ownable.sol#L42) modifier.\r\n\r\nOnce we have more information, the project owner will then review your suggestion as soon as they can.  \r\n\r\nPlease wait until we have discussed this idea before writing any code or submitting a Pull Request, so we can go through the design beforehand.  We donâ€™t want you to waste your time!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/808996511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/809000279",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2617#issuecomment-809000279",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2617",
    "id": 809000279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTAwMDI3OQ==",
    "user": {
      "login": "khanjasir90",
      "id": 53305380,
      "node_id": "MDQ6VXNlcjUzMzA1Mzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/53305380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khanjasir90",
      "html_url": "https://github.com/khanjasir90",
      "followers_url": "https://api.github.com/users/khanjasir90/followers",
      "following_url": "https://api.github.com/users/khanjasir90/following{/other_user}",
      "gists_url": "https://api.github.com/users/khanjasir90/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khanjasir90/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khanjasir90/subscriptions",
      "organizations_url": "https://api.github.com/users/khanjasir90/orgs",
      "repos_url": "https://api.github.com/users/khanjasir90/repos",
      "events_url": "https://api.github.com/users/khanjasir90/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khanjasir90/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-29T01:02:44Z",
    "updated_at": "2021-03-29T01:02:44Z",
    "author_association": "NONE",
    "body": "\r\n\r\n\r\n\r\n\r\nSo @abcoathup it goes like this : The isOwner() is a boolean functionality which can be used to check whether the the account using the smart contract is its owner or not. at a particular instance of time.This comes handy when there are multiple accounts switching for a transcation during development phase of a smart contract.Below I have given an example to illustrate it in a better way :\r\n\r\nAccount which deployed smart contract : 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4\r\nisOwner : true\r\n![Capture](https://user-images.githubusercontent.com/53305380/112774704-147a1900-9058-11eb-988e-d19ed8b2925f.JPG)\r\n\r\nSecond Account : 0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db\r\nisOwner : false\r\n![image](https://user-images.githubusercontent.com/53305380/112774732-2bb90680-9058-11eb-88fe-64b51badedf8.png)\r\n\r\nHope!!! so you got it.\r\npls ping for any query regarding this!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/809000279/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/809126448",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2617#issuecomment-809126448",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2617",
    "id": 809126448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTEyNjQ0OA==",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-29T07:04:18Z",
    "updated_at": "2021-03-29T07:05:09Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @khanjasir90,\r\n\r\nThis function used to be part of the Ownable contract. However, its interest is really limited, and it can be confusing (if read as a view function through an rpc call). Additionally, including this function increases the gas cost of deploying the contract.\r\n\r\nFor the sake of gas reduction, I really don't think this should be included in the Ownable contract we provide. It would increase the deployment (and run) cost of many contract, without an easy way to opt out. On the other hand, if you really need this feature, you always opt-in using a very simple wrapper:\r\n\r\n```\r\ncontract OwnableExtended is Ownable {\r\n    function isOwner() public view virtual returns (bool) {\r\n        return msg.sender == owner();\r\n    }\r\n}\r\n````\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/809126448/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/809127862",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2617#issuecomment-809127862",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2617",
    "id": 809127862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTEyNzg2Mg==",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-29T07:06:42Z",
    "updated_at": "2021-03-29T07:07:26Z",
    "author_association": "COLLABORATOR",
    "body": "Just for the record, I'm leaning against function that return a simple boolean, when this boolean is the result of a simple comparison between a public value (like `owner()`) and a parameter of the caller (`msg.sender`, `address(this)`, ...)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/809127862/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
