{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1602",
  "id": 398523088,
  "node_id": "MDU6SXNzdWUzOTg1MjMwODg=",
  "number": 1602,
  "title": "Make roles iterable.",
  "user": {
    "login": "MicahZoltu",
    "id": 886059,
    "node_id": "MDQ6VXNlcjg4NjA1OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MicahZoltu",
    "html_url": "https://github.com/MicahZoltu",
    "followers_url": "https://api.github.com/users/MicahZoltu/followers",
    "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
    "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
    "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
    "repos_url": "https://api.github.com/users/MicahZoltu/repos",
    "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650860,
      "node_id": "MDU6TGFiZWw1MDM2NTA4NjA=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/feature",
      "name": "feature",
      "color": "b9db64",
      "default": false,
      "description": "New contracts, functions, or helpers."
    },
    {
      "id": 805777215,
      "node_id": "MDU6TGFiZWw4MDU3NzcyMTU=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/on%20hold",
      "name": "on hold",
      "color": "5319e7",
      "default": false,
      "description": "Put on hold for some reason that must be specified in a comment."
    },
    {
      "id": 1000207718,
      "node_id": "MDU6TGFiZWwxMDAwMjA3NzE4",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/contracts",
      "name": "contracts",
      "color": "1d76db",
      "default": false,
      "description": "Smart contract code."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/8",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/8",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/8/labels",
    "id": 4174606,
    "node_id": "MDk6TWlsZXN0b25lNDE3NDYwNg==",
    "number": 8,
    "title": "v3.0",
    "description": "",
    "creator": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 19,
    "state": "closed",
    "created_at": "2019-03-26T18:50:56Z",
    "updated_at": "2020-06-18T23:23:01Z",
    "due_on": null,
    "closed_at": "2020-06-18T23:23:01Z"
  },
  "comments": 12,
  "created_at": "2019-01-12T05:25:39Z",
  "updated_at": "2020-03-16T20:41:25Z",
  "closed_at": "2020-03-16T20:41:25Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nWhen I am reviewing a live contract, I want to be able to easily identify who, if anyone, has a particular role.  The only way to do that right now is to write a script that walks all of history (since contract instantiation) looking for logs that indicate a role was added/removed and using that to construct a collection of role owners.  It would be much better if I could just iterate over the current set of role holders.\r\n\r\n**üìù Details**\r\nProvide a mechanism to iterate over all of the holders of a particular role.  The \"easy\" way to do this would be to store the roles in a linked list instead of a mapping, but there are of course other solutions with different trade offs.  Role changes should be infrequent and on-chain access is unlikely to be necessary, so a linked list feels like a good fit.",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454156635",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1602#issuecomment-454156635",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602",
    "id": 454156635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDE1NjYzNQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T20:51:05Z",
    "updated_at": "2019-01-14T20:51:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey there @MicahZoltu! While I do think there's value in walking through the logs, enumerability does indeed make sense in many scenarios.\r\n\r\nCould you share a short snippet ilustrating your proposed linked-list implementation? I was originally considering having a companion array for the mapping, and removing elements using a swap-and-pop strategy (same as how we do `ERC721Enumerable`.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454156635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454265303",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1602#issuecomment-454265303",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602",
    "id": 454265303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDI2NTMwMw==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T04:41:45Z",
    "updated_at": "2019-01-15T05:20:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I went digging through some old source code, it appears the one we wrote for Augur was back when we were using Serpent.  üò¨\r\n\r\nü§î more on this, if the number of roles is expected to be small, then a sparse array is probably \"good enough\" realistically.  In this case, you would just insert new members of a role into the first empty slot in the array, so if additions/deletions are relatively well distributed the array will tend to have few holes.  This strategy is really only a problem if you end up doing a large number of insertions, followed by a large number of deletions as you can end up with a big gap in the middle.\r\n\r\nA linked list is better if you need ordering (which I don't think you do in this case) or if you are worried about large holes in the sparse array.\r\n\r\nHere is an example of a sparse array solution.  Note: I just threw this together so probably buggy, but consider it Unlicensed or CC0 if you want to use it as a base to work from.  üòÑ \r\n```solidity\r\npragma solidity 0.5.2;\r\ncontract Role {\r\n    address[] public members;\r\n\r\n    function addUserToRole(address user) public {\r\n        for (uint256 i = 0; i <= members.length; ++i) {\r\n            if (i == members.length) {\r\n                members.push(user);\r\n                return;\r\n            }\r\n            if (members[i] == address(0)) {\r\n                members[i] = user;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    \r\n    function removeUserFromRole(address user) public {\r\n        for (uint256 i = 0; i < members.length; ++i) {\r\n            if (members[i] != user) continue;\r\n            if (i == members.length - 1) members.pop();\r\n            else delete members[i];\r\n        }\r\n    }\r\n\r\n    // CONSIDER: delete in favor of `getUsers()`\r\n    function isMember(address user) public view returns (bool) {\r\n        for (uint256 i = 0; i < members.length; ++i) {\r\n            if (members[i] == user) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // CONSIDER: delete in favor of `getUsers()`\r\n    function getUser(uint256 index) public view returns (address) {\r\n        uint256 count = 0;\r\n        for (uint256 i = 0; i < members.length; ++i) {\r\n            if (members[i] == address(0)) continue;\r\n            if (count == index) return members[i];\r\n            ++count;\r\n        }\r\n        return address(0);\r\n    }\r\n\r\n    // CONSIDER: delete in favor of `getUsers()`\r\n    function numUsers() public view returns (uint256) {\r\n        uint256 count = 0;\r\n        for (uint256 i = 0; i < members.length; ++i) {\r\n            if (members[i] == address(0)) continue;\r\n            ++count;\r\n        }\r\n        return count;\r\n    }\r\n    \r\n    function getUsers() public view returns (address[] memory) {\r\n        address[] memory users = new address[](numUsers());\r\n        uint256 offset = 0;\r\n        for (uint256 i = 0; i < members.length; ++i) {\r\n            if (members[i] == address(0)) continue;\r\n            users[offset] = members[i];\r\n            ++offset;\r\n        }\r\n        return users;\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454265303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454646674",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1602#issuecomment-454646674",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602",
    "id": 454646674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDY0NjY3NA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T04:20:26Z",
    "updated_at": "2019-01-16T04:21:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I take it the purpose of the sparse array is to avoid having to memmove the tail of the array when deleting an element. If that's the case, why not go with something more straightforward like this? Do let me know if I'm missing something here!\r\n\r\n```solidity\r\ncontract Roles {\r\n  address[] private users;\r\n\r\n  function addRole(address account) {\r\n    users.push(account);\r\n  }\r\n\r\n  function removeRole(address account) {\r\n    for (uint256 i = 0; i < users.length; ++i) {\r\n      if (users[i] == account) {\r\n        if (i < users.length - 1) {\r\n          users[i] = users[users.length - 1]; \r\n        }\r\n        users.pop();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n(that code is obviously missing validations, edge case handling, etc.)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454646674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454669873",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1602#issuecomment-454669873",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602",
    "id": 454669873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDY2OTg3Mw==",
    "user": {
      "login": "MicahZoltu",
      "id": 886059,
      "node_id": "MDQ6VXNlcjg4NjA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MicahZoltu",
      "html_url": "https://github.com/MicahZoltu",
      "followers_url": "https://api.github.com/users/MicahZoltu/followers",
      "following_url": "https://api.github.com/users/MicahZoltu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MicahZoltu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MicahZoltu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MicahZoltu/subscriptions",
      "organizations_url": "https://api.github.com/users/MicahZoltu/orgs",
      "repos_url": "https://api.github.com/users/MicahZoltu/repos",
      "events_url": "https://api.github.com/users/MicahZoltu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MicahZoltu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T06:42:17Z",
    "updated_at": "2019-01-16T06:42:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Your solution is better, go with that.  üòÅ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/454669873/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/455601831",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1602#issuecomment-455601831",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602",
    "id": 455601831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTYwMTgzMQ==",
    "user": {
      "login": "vdrg",
      "id": 3252614,
      "node_id": "MDQ6VXNlcjMyNTI2MTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3252614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vdrg",
      "html_url": "https://github.com/vdrg",
      "followers_url": "https://api.github.com/users/vdrg/followers",
      "following_url": "https://api.github.com/users/vdrg/following{/other_user}",
      "gists_url": "https://api.github.com/users/vdrg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vdrg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vdrg/subscriptions",
      "organizations_url": "https://api.github.com/users/vdrg/orgs",
      "repos_url": "https://api.github.com/users/vdrg/repos",
      "events_url": "https://api.github.com/users/vdrg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vdrg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T16:17:46Z",
    "updated_at": "2019-01-18T16:17:46Z",
    "author_association": "NONE",
    "body": "@nventuro I think it could be better if you stored the indexes in a mapping, so you don't need to iterate through the array in order to remove an account (could get too costly if there are too many accounts and you want to remove the last one).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/455601831/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/455605174",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1602#issuecomment-455605174",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602",
    "id": 455605174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTYwNTE3NA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T16:27:26Z",
    "updated_at": "2019-01-18T16:27:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vdrg Hmm, that'd be interesting, I hadn't thought about that! The only issue I see is that mappings are initialized with zeroes, so we'd need to manipulate that somehow to make it workable. Maybe a value of 0 means uninitialized, and a non-zero value is substracted one to get the array? So we'd store `index + 1`. Thanks a lot for your suggestion!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/455605174/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/455619526",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1602#issuecomment-455619526",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602",
    "id": 455619526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTYxOTUyNg==",
    "user": {
      "login": "vdrg",
      "id": 3252614,
      "node_id": "MDQ6VXNlcjMyNTI2MTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3252614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vdrg",
      "html_url": "https://github.com/vdrg",
      "followers_url": "https://api.github.com/users/vdrg/followers",
      "following_url": "https://api.github.com/users/vdrg/following{/other_user}",
      "gists_url": "https://api.github.com/users/vdrg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vdrg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vdrg/subscriptions",
      "organizations_url": "https://api.github.com/users/vdrg/orgs",
      "repos_url": "https://api.github.com/users/vdrg/repos",
      "events_url": "https://api.github.com/users/vdrg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vdrg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T17:11:04Z",
    "updated_at": "2019-01-18T17:11:04Z",
    "author_association": "NONE",
    "body": "You could do the check after getting the account from the array, not sure if that's the best way to go though. \r\n\r\nSomething like:\r\n\r\n```\r\nfunction removeRole(address account) {\r\n    uint i = indexes[account];\r\n    require(users[i] == account);\r\n    // ...\r\n}\r\n```\r\n\r\nSorry for not going more in depth but I'm writing from my phone :P",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/455619526/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/455621673",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1602#issuecomment-455621673",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602",
    "id": 455621673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTYyMTY3Mw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T17:17:44Z",
    "updated_at": "2019-01-18T17:17:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "That'd also work, at the cost of an extra `SLOAD`. Thanks! I'll try out different approaches when I get to this :)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/455621673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/481467157",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1602#issuecomment-481467157",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602",
    "id": 481467157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTQ2NzE1Nw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-09T22:43:12Z",
    "updated_at": "2019-04-09T22:43:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "While interesting and not super hard to introduce, this causes multiple issues with [`openzeppelin-eth`](https://github.com/OpenZeppelin/openzeppelin-eth) because it changes the layout of the `Roles` struct, and an upgrade would require a difficult migration in order to be correct (i.e. one where all current role bearers are passed so that they can be added into the array.\r\n\r\nTagging this as an idea for the next breaking release.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/481467157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/578258537",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1602#issuecomment-578258537",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602",
    "id": 578258537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODI1ODUzNw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T19:03:18Z",
    "updated_at": "2020-01-24T19:07:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "This will probably be built on top of `EnumerableSet` (https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2061). We may want to extend it with `length` and `get(index)` to add `view` functions with pagination (for large queries).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/578258537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/579956687",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1602#issuecomment-579956687",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602",
    "id": 579956687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTk1NjY4Nw==",
    "user": {
      "login": "alcueca",
      "id": 38806121,
      "node_id": "MDQ6VXNlcjM4ODA2MTIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/38806121?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcueca",
      "html_url": "https://github.com/alcueca",
      "followers_url": "https://api.github.com/users/alcueca/followers",
      "following_url": "https://api.github.com/users/alcueca/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcueca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcueca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcueca/subscriptions",
      "organizations_url": "https://api.github.com/users/alcueca/orgs",
      "repos_url": "https://api.github.com/users/alcueca/repos",
      "events_url": "https://api.github.com/users/alcueca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcueca/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-29T20:59:34Z",
    "updated_at": "2020-01-29T20:59:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @nventuro, would you like me to have a go at this issue?\r\n\r\nI've got in my mind to propose some things regarding [Role Based Access Control](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/1889), and this would be a nice issue for me to get 100% comfortable with your Roles implementation.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/579956687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/579966063",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1602#issuecomment-579966063",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1602",
    "id": 579966063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTk2NjA2Mw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-29T21:23:09Z",
    "updated_at": "2020-01-29T21:23:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@albertocuestacanada great to hear back from you :grin: \r\n\r\nAs mentioned in [this issue](https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1772#issuecomment-579964308), we're considering multiple alternatives for the new `AccessControl` library. \r\n\r\nI invite you to instead join the discussion on [Redesigning Access Control](https://forum.openzeppelin.com/t/redesigning-accesscontrol-for-the-openzeppelin-contracts/2177), so we can gather ideas and settle on a high-level design, at which point we'll be able to begin working  on the code. Depending on how we choose to approach this, making the roles iterable will look very different.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/579966063/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
