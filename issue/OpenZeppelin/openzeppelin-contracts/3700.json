{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3700",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3700/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3700/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3700/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3700",
  "id": 1373509522,
  "node_id": "I_kwDOA9tCBs5R3heS",
  "number": 3700,
  "title": "Unable to initialize OpenZeppelin Clone contract during Hardhat Test (Error: VM Exception)",
  "user": {
    "login": "tomwhiteman",
    "id": 110101677,
    "node_id": "U_kgDOBpAErQ",
    "avatar_url": "https://avatars.githubusercontent.com/u/110101677?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tomwhiteman",
    "html_url": "https://github.com/tomwhiteman",
    "followers_url": "https://api.github.com/users/tomwhiteman/followers",
    "following_url": "https://api.github.com/users/tomwhiteman/following{/other_user}",
    "gists_url": "https://api.github.com/users/tomwhiteman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tomwhiteman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tomwhiteman/subscriptions",
    "organizations_url": "https://api.github.com/users/tomwhiteman/orgs",
    "repos_url": "https://api.github.com/users/tomwhiteman/repos",
    "events_url": "https://api.github.com/users/tomwhiteman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tomwhiteman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-09-14T19:53:26Z",
  "updated_at": "2022-09-14T19:55:09Z",
  "closed_at": "2022-09-14T19:55:09Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I'm trying to create clones of my implementation contract (EIP-1167) using the OpenZeppelin Clones library, however I keep getting a VM Exception Error.\r\n\r\nThis is the 'Initialize' function of my Implementation contract:\r\n``\r\ncontract Whoopy is Initializable, VRFConsumerBaseV2, KeeperCompatible {\r\n\r\nfunction initialize(address _whoopyCreator) public initializer {\r\n\r\n    VRFConsumerBaseV2.initialise(vrfCoordinatorV2);\r\n    i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\r\n    s_raffleState = RaffleState.CLOSED;\r\n    s_lastTimeStamp = block.timestamp;\r\n    whoopyCreator = _whoopyCreator;\r\n\r\n    i_vrfCoordinator.addConsumer(subscriptionId, address(this));\r\n    emit NewConsumerAdded(address(this)); \r\n}\r\n``\r\nThis is my CloneFactory:\r\n``\r\npragma solidity ^0.8.8;\r\n\r\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\r\n\r\n\r\ncontract WhoopyFactory {\r\n    address public implementationContract;\r\n\r\n    address[] public allClones;\r\n\r\n    event NewClone(address indexed _instance);\r\n\r\n    mapping(address => address) public whoopyList;\r\n\r\n    constructor(address _implementation) {\r\n\t\timplementationContract = _implementation;\r\n\t}\r\n\r\n\tfunction createClone(address _whoopyCreator) payable external returns (address instance) {\r\n\t\tinstance = Clones.clone(implementationContract);\r\n\t\t(bool success, ) = instance.call{value: msg.value}(abi.encodeWithSignature(\"initialize(address)\", _whoopyCreator));\r\n\t\trequire(success==true, \"initialize did not return true\");\r\n        allClones.push(instance);\r\n        whoopyList[_whoopyCreator] = instance;\r\n\t\temit NewClone(instance);\r\n\t\treturn instance;\r\n\t}\r\n``\r\nThis is the test I am running:\r\n``\r\nconst { assert, expect } = require(\"chai\")\r\nconst { ethers, upgrades } = require(\"hardhat\")\r\nconst { networkConfig } = require(\"../../helper-hardhat-config\")\r\nconst fs = require(\"fs\")\r\nconst path = require(\"path\")\r\nconst { web3, Contract } = require(\"web3\")\r\n\r\nconst getGas = async (tx) => {\r\n    const receipt = await ethers.provider.getTransactionReceipt(tx.hash)\r\n    return receipt.gasUsed.toString()\r\n}\r\n\r\nlet whoopy,\r\n    Whoopy,\r\n    WhoopyFactory,\r\n    wf,\r\n    whoopyStandaloneGas,\r\n    whoopyFactoryGas,\r\n    clonedContract,\r\n    accountConnectedClone,\r\n    wCreator,\r\n    wallet,\r\n    addr1,\r\n    addr2\r\n\r\ndescribe(\"Whoopy + WhoopyFactory\", function () {\r\n    it(\"Initialises contract correctly\", async function () {\r\n\r\nprovider = ethers.provider\r\n\r\n\r\n        addr1 = new ethers.Wallet(\"0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\", provider)\r\n        addr2 = new ethers.Wallet(\"0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d\", provider)\r\n \r\n\r\n\r\n        Whoopy = await ethers.getContractFactory(\"Whoopy\", addr1)\r\n        whoopy = await Whoopy.deploy()\r\n        await whoopy.deployed()\r\n\r\n\r\n        const dir = path.resolve(\r\n            __dirname,\r\n            \"/Users/boss/hardhat-smartcontract-lottery/artifacts/contracts/Whoopy.sol/Whoopy.json\"\r\n        )\r\n        const file = fs.readFileSync(dir, \"utf8\")\r\n        const json = JSON.parse(file)\r\n        const abi = json.abi\r\n\r\n        WhoopyFactory = await ethers.getContractFactory(\"WhoopyFactory\", addr1)\r\n        wf = await WhoopyFactory.deploy(whoopy.address)\r\n        await wf.deployed()\r\n\r\n\r\n        wf.connect(addr2)\r\n\r\n\r\n\r\n        const tx = await wf.createClone(\"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\", {\r\n            value: ethers.utils.parseUnits(\"1\", \"ether\"),\r\n        })\r\n        console.log(tx)\r\n\r\n\r\n\r\n        const txReceipt = await tx.wait(1)\r\n        console.log(txReceipt)\r\n\r\n    })\r\n})\r\n``\r\nWhen I run this test, I get the following error:\r\n``\r\nError: VM Exception while processing transaction: reverted with reason string 'initialize did not return true'\r\n``\r\nThis exact same code works perfectly when I try it in Remix, so I assume the issue has something to do with Hardhat.\r\n\r\nDoes anyone have any idea where the issue is? I've been racking my head for days but can't seem to figure out. I'd be extremely grateful if someone can point me in the right direction.\r\n\r\nThanks!\r\n\r\nNOTE: Here is my hardhat config (in case it makes a difference):\r\n``\r\nrequire(\"@nomiclabs/hardhat-waffle\")\r\nrequire(\"@nomiclabs/hardhat-etherscan\")\r\nrequire(\"hardhat-deploy\")\r\nrequire(\"solidity-coverage\")\r\nrequire(\"hardhat-gas-reporter\")\r\nrequire(\"hardhat-contract-sizer\")\r\nrequire(\"dotenv\").config()\r\nrequire(\"@nomiclabs/hardhat-ethers\");\r\n// require('@openzeppelin/contracts');\r\n\r\n\r\nconst RINKEBY_RPC_URL = process.env.RINKEBY_RPC_URL\r\nconst PRIVATE_KEY = process.env.PRIVATE_KEY\r\nconst COINMARKETCAP_API_KEY = process.env.COINMARKETCAP_API_KEY\r\nconst ETHERSCAN_API_KEY = process.env.ETHERSCAN_API_KEY\r\n\r\n/** @type import('hardhat/config').HardhatUserConfig */\r\nmodule.exports = {\r\n  defaultNetwork: \"hardhat\",\r\n  networks: {\r\n    hardhat: {\r\n      chainId: 31337,\r\n      blockConfirmations: 1 \r\n    },\r\n    localhost: {\r\n      chainId: 31337,\r\n  },\r\n    rinkeby: {\r\n      chainId: 4, \r\n      blockConfirmations: 6,\r\n      url: RINKEBY_RPC_URL,\r\n      accounts: [PRIVATE_KEY]\r\n    }\r\n\r\n  },\r\n  solidity: \"0.8.8\",\r\n  gasReporter: {\r\n    enabled: true,\r\n    currency: \"USD\",\r\n    outputFile: \"gas-report.txt\",\r\n    noColors: true,\r\n    // coinmarketcap: process.env.COINMARKETCAP_API_KEY,\r\n},\r\n  namedAccounts: {\r\n    deployer: {\r\n      default: 0,\r\n    },\r\n    player: {\r\n      default: 1,\r\n    }\r\n  },\r\n  mocha: {\r\n    timeout: 900000,\r\n  },\r\n  etherscan: {\r\n    apiKey: {\r\n        rinkeby: ETHERSCAN_API_KEY,\r\n        // kovan: ETHERSCAN_API_KEY,\r\n        // polygon: POLYGONSCAN_API_KEY,\r\n    },\r\n},\r\n};\r\n``",
  "closed_by": {
    "login": "tomwhiteman",
    "id": 110101677,
    "node_id": "U_kgDOBpAErQ",
    "avatar_url": "https://avatars.githubusercontent.com/u/110101677?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tomwhiteman",
    "html_url": "https://github.com/tomwhiteman",
    "followers_url": "https://api.github.com/users/tomwhiteman/followers",
    "following_url": "https://api.github.com/users/tomwhiteman/following{/other_user}",
    "gists_url": "https://api.github.com/users/tomwhiteman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tomwhiteman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tomwhiteman/subscriptions",
    "organizations_url": "https://api.github.com/users/tomwhiteman/orgs",
    "repos_url": "https://api.github.com/users/tomwhiteman/repos",
    "events_url": "https://api.github.com/users/tomwhiteman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tomwhiteman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3700/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3700/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
