{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3678",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3678/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3678/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3678/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3678",
  "id": 1361908245,
  "node_id": "I_kwDOA9tCBs5RLRIV",
  "number": 3678,
  "title": "`ECDSA.recover()` accepting signature from `calldata`?",
  "user": {
    "login": "delaaxe",
    "id": 1091900,
    "node_id": "MDQ6VXNlcjEwOTE5MDA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1091900?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/delaaxe",
    "html_url": "https://github.com/delaaxe",
    "followers_url": "https://api.github.com/users/delaaxe/followers",
    "following_url": "https://api.github.com/users/delaaxe/following{/other_user}",
    "gists_url": "https://api.github.com/users/delaaxe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/delaaxe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/delaaxe/subscriptions",
    "organizations_url": "https://api.github.com/users/delaaxe/orgs",
    "repos_url": "https://api.github.com/users/delaaxe/repos",
    "events_url": "https://api.github.com/users/delaaxe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/delaaxe/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-09-05T12:51:35Z",
  "updated_at": "2022-09-05T21:18:06Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n\r\nCurrent `ECDSA.recover` is accepting a signature typed `bytes memory` but since signatures are often passed as calldata, adding a method that reads the signature directly from calldata instead of copying to memory could be more gas efficient.\r\n\r\n**üìù Details**\r\n\r\nAlternative assembly code reading from calldata without copy:\r\n\r\n```solidity\r\nbytes calldata signature\r\n\r\nbytes32 r;\r\nbytes32 s;\r\nuint8 v;\r\nassembly {\r\n    r := calldataload(signature.offset)\r\n    s := calldataload(add(signature.offset, 0x20))\r\n    v := byte(0, calldataload(add(signature.offset, 0x40)))\r\n}\r\n```\r\n\r\nCurrent code:\r\n\r\n```solidity\r\nbytes memory signature\r\n\r\nbytes32 r;\r\nbytes32 s;\r\nuint8 v;\r\nassembly {\r\n    r := mload(add(signature, 0x20))\r\n    s := mload(add(signature, 0x40))\r\n    v := byte(0, mload(add(signature, 0x60)))\r\n}\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3678/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3678/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1237462665",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3678#issuecomment-1237462665",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3678",
    "id": 1237462665,
    "node_id": "IC_kwDOA9tCBs5Jwi6J",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-05T21:18:06Z",
    "updated_at": "2022-09-05T21:18:06Z",
    "author_association": "MEMBER",
    "body": "I'm personally not excited about this. We keep adding variants and having a lot of duplicate code. I'd like to see Solidity allow us to write these functions in a generic way. See https://github.com/ethereum/solidity/issues/13207.\r\n\r\nIf someone is looking for a gas-efficient way to accept signatures they should not use this function (even with calldata array), instead they should use `recover(bytes32 hash, bytes32 r, bytes32 vs)`.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1237462665/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
