{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355",
  "id": 698731607,
  "node_id": "MDU6SXNzdWU2OTg3MzE2MDc=",
  "number": 2355,
  "title": "Support EIP-2309: ERC-721 Consecutive Transfer Extension",
  "user": {
    "login": "abcoathup",
    "id": 28278242,
    "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/abcoathup",
    "html_url": "https://github.com/abcoathup",
    "followers_url": "https://api.github.com/users/abcoathup/followers",
    "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
    "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
    "organizations_url": "https://api.github.com/users/abcoathup/orgs",
    "repos_url": "https://api.github.com/users/abcoathup/repos",
    "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
    "received_events_url": "https://api.github.com/users/abcoathup/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/12",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/12",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/12/labels",
    "id": 8058901,
    "node_id": "MI_kwDOA9tCBs4AevgV",
    "number": 12,
    "title": "4.8",
    "description": "",
    "creator": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 22,
    "state": "closed",
    "created_at": "2022-06-07T15:35:04Z",
    "updated_at": "2022-11-08T17:25:45Z",
    "due_on": "2022-08-23T07:00:00Z",
    "closed_at": "2022-11-08T17:25:45Z"
  },
  "comments": 50,
  "created_at": "2020-09-11T02:17:29Z",
  "updated_at": "2023-03-09T17:35:17Z",
  "closed_at": "2022-09-05T21:09:31Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nSupport EIP-2309: ERC-721 Consecutive Transfer Extension\r\nEnables minting any number of tokens in a single transaction\r\n\r\n**üìù Details**\r\n<!-- Please describe your feature request in detail. -->\r\nEIP is an extension to ERC-721, for a standardized event emitted when creating/transferring one, or many non-fungible tokens using consecutive token identifiers.\r\nhttps://github.com/ethereum/EIPs/blob/master/EIPS/eip-2309.md\r\n\r\nEIP is final status.\r\n\r\nCreating issue for discussion on how EIP could be supported",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355/reactions",
    "total_count": 6,
    "+1": 6,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/691142947",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-691142947",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 691142947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTE0Mjk0Nw==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-11T14:53:05Z",
    "updated_at": "2020-09-11T14:53:05Z",
    "author_association": "MEMBER",
    "body": "It seems that the EIP only standardizes an event, we have to figure out what it means for us to support it. Should we add an ERC721 flavor with batch minting/transfering?\r\n\r\nAlso worth noting that our ERC721 preset uses consecutive ids so we may want it to emit this event.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/691142947/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/691770824",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-691770824",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 691770824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTc3MDgyNA==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-14T02:09:04Z",
    "updated_at": "2020-09-14T02:09:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm interested to see an example implementation.  I hope that Sean Papanikolas will be able to share one.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/691770824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/698461566",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-698461566",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 698461566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODQ2MTU2Ng==",
    "user": {
      "login": "arpu",
      "id": 14173,
      "node_id": "MDQ6VXNlcjE0MTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arpu",
      "html_url": "https://github.com/arpu",
      "followers_url": "https://api.github.com/users/arpu/followers",
      "following_url": "https://api.github.com/users/arpu/following{/other_user}",
      "gists_url": "https://api.github.com/users/arpu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arpu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arpu/subscriptions",
      "organizations_url": "https://api.github.com/users/arpu/orgs",
      "repos_url": "https://api.github.com/users/arpu/repos",
      "events_url": "https://api.github.com/users/arpu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arpu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-24T16:47:10Z",
    "updated_at": "2020-09-24T16:47:45Z",
    "author_association": "NONE",
    "body": "maybe https://github.com/pizzarob can help on this? \r\ni am also interested in this Extension\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/698461566/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/698661067",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-698661067",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 698661067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODY2MTA2Nw==",
    "user": {
      "login": "Soren74",
      "id": 57606699,
      "node_id": "MDQ6VXNlcjU3NjA2Njk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/57606699?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Soren74",
      "html_url": "https://github.com/Soren74",
      "followers_url": "https://api.github.com/users/Soren74/followers",
      "following_url": "https://api.github.com/users/Soren74/following{/other_user}",
      "gists_url": "https://api.github.com/users/Soren74/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Soren74/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Soren74/subscriptions",
      "organizations_url": "https://api.github.com/users/Soren74/orgs",
      "repos_url": "https://api.github.com/users/Soren74/repos",
      "events_url": "https://api.github.com/users/Soren74/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Soren74/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-25T00:50:48Z",
    "updated_at": "2020-09-25T00:51:43Z",
    "author_association": "NONE",
    "body": "Yes, I too am very curious about how to actually implement this extension. \r\n\r\nI've tried creating a quick Contract that ` is ERC721Full`\r\n-I then added to it the `ConsecutiveTransfer(...)` event declaration (which the dev. said we're supposed to use):\r\n  `event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed fromAddress, address indexed toAddress);`\r\n-I made a `for` loop in the `constructor` to mint 100 Tokens\r\n-but then... I realized I can't call the inherited `super._mint` function in the loop like we're used to doing, as follows: \r\n      `super._mint(msg.sender, tempColorCounter);`\r\n\r\nright?\r\nBecause that `mint` function internally calls the `Transfer` event, which dev explicitly said we're NOT supposed to use anymore. Instead we're supposed to use his new `ConsecutiveTransfer(...)` event.\r\n\r\nSo... color me confused.\r\n\r\nAlso noticed none of dev's contracts have been verified on `etherscan`...\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/698661067/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/698713513",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-698713513",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 698713513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODcxMzUxMw==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-25T04:29:30Z",
    "updated_at": "2020-09-25T04:29:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @arpu & @Soren74,\r\n\r\nI have reached out to Sean Papanikolas to ask if they can share an implementation.\r\n\r\n@Soren74 my assumption is that you don't use any loops (as this would have limits on the amount of tokens that could be minted), instead you need to use additional state to capture the start and end of a series of tokens.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/698713513/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/698965472",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-698965472",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 698965472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODk2NTQ3Mg==",
    "user": {
      "login": "Soren74",
      "id": 57606699,
      "node_id": "MDQ6VXNlcjU3NjA2Njk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/57606699?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Soren74",
      "html_url": "https://github.com/Soren74",
      "followers_url": "https://api.github.com/users/Soren74/followers",
      "following_url": "https://api.github.com/users/Soren74/following{/other_user}",
      "gists_url": "https://api.github.com/users/Soren74/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Soren74/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Soren74/subscriptions",
      "organizations_url": "https://api.github.com/users/Soren74/orgs",
      "repos_url": "https://api.github.com/users/Soren74/repos",
      "events_url": "https://api.github.com/users/Soren74/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Soren74/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-25T14:34:56Z",
    "updated_at": "2020-09-25T14:34:56Z",
    "author_association": "NONE",
    "body": "Hi @abcoathup, \r\n\r\nCan you elaborate on what you wrote: \"you need to use additional state to capture the start and end of a series of tokens\" - cause I'm not sure I follow.\r\nWhat would capturing this state do? Meaning how would it play into mass-minting tokens? \r\n\r\nAlso, in terms of using a `for` loop, you wrote: \"this would have limits on the amount of tokens that could be minted\" - but I'm thinking that the upper limit would be passed in as an argument. Meaning you don't do the looping in the `Constructor` but rather in another function (call it `mintMany(uint256 howMany)`), so that every time you call it you can pass in the number of tokens you want minted, giving you that flexibility.\r\n\r\nThoughts?\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/698965472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/699777117",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-699777117",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 699777117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTc3NzExNw==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-28T05:24:22Z",
    "updated_at": "2020-09-28T05:24:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @Soren74 ,\r\n\r\nThe EIP gives examples of minting, transfer and burning large quantities of tokens:\r\n>Batch token creation\r\n>`emit ConsecutiveTransfer(1, 100000, address(0), toAddress);`\r\n\r\nIf you had a for loop doing individual mint/transfer/burns then I assume this function would exceed the gas limit for large quantities.  That is why I assume that additional state would be required in the token to track this functionality.\r\n\r\nI am interested to see an implementation of the EIP to see how this is being done.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/699777117/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/699996047",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-699996047",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 699996047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTk5NjA0Nw==",
    "user": {
      "login": "Soren74",
      "id": 57606699,
      "node_id": "MDQ6VXNlcjU3NjA2Njk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/57606699?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Soren74",
      "html_url": "https://github.com/Soren74",
      "followers_url": "https://api.github.com/users/Soren74/followers",
      "following_url": "https://api.github.com/users/Soren74/following{/other_user}",
      "gists_url": "https://api.github.com/users/Soren74/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Soren74/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Soren74/subscriptions",
      "organizations_url": "https://api.github.com/users/Soren74/orgs",
      "repos_url": "https://api.github.com/users/Soren74/repos",
      "events_url": "https://api.github.com/users/Soren74/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Soren74/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-28T13:09:40Z",
    "updated_at": "2020-09-28T13:13:29Z",
    "author_association": "NONE",
    "body": "Hey @abcoathup,\r\n\r\nI'm not sure I interpreted `ConsecutiveTransfer` the way you did. \r\nPut it this way: to me, merely `emitting` this `ConsecutiveTransfer` event doesn't _actually_ `mint` anything. \r\nI think it _announces_ that you've minted something, but it doesn't actually do any of that minting. \r\nAt least that's the way I understand it.\r\n\r\nSo the EIP isn't really giving us any examples of anything - other than making announcements. \r\n\r\nCheck out Sean Papanikolas' post in the `Docs` section of his `Cargo.build` website (at: https://docs.cargo.build/advanced-information/batch-minting-non-fungible-tokens): \r\n\r\n\"with the Consecutive Transfer extension you could emit one event to track the creation of all 2^255 NFTs. It could look something like this:\r\n\r\n```\r\nfunction mint(uint amount, address from, address to) public {\r\n  \r\n  // Create NFTs and assign ownership\r\n  // ...\r\n  // Emit Consecutive Transfer Event\r\n  emit ConsecutiveTransfer(lastMintedId + 1, lastMintedId + amount, from, to);\r\n}\r\n```\r\n\"The lastMintedId would be the last consecutive token that was created. For example lastMintedId would initially be 0 . After creating the first NFT it would become 1 . Then if you created five more NFTs the range of NFTs created would be 2 to 6 . \"\r\n\r\nSo the way I read what he's saying there is that you _**can**_ have your `for` loop, put all your minting code in it - meaning create your Token object/struct, add it to the various `mappings` or `arrays` you're using to keep track of ID's, Ownership, etc. - but don't emit any `Transfer` events in this loop! \r\nInstead, upon exiting the loop, emit the `ConsecutiveTransfer` event once - and only once, and that should take care of everything.\r\n\r\nAgain, I could be dead wrong about this, but that's what I think he's talking about.  \r\n \r\nWhat do you think?\r\n\r\nGotta say, I feel like if we put our minds together we could figure this out - cause Mr. Papanikolas sure doesn't seem to wanna share the knowledge at this point, which is quite disappointing - but also rather revelatory.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/699996047/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/700609648",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-700609648",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 700609648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDYwOTY0OA==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-29T10:18:34Z",
    "updated_at": "2020-09-29T10:18:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @Soren74,\r\n\r\nI assume that the contract needs to do some tracking of what it has minted and who owns what consecutive tokens, which is why I assume that additional state is needed.  Ideally Sean and the team from Cargo will be able to share an implementation, rather than having to reinvent the wheel.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/700609648/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/724374401",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-724374401",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 724374401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDM3NDQwMQ==",
    "user": {
      "login": "b0xtch",
      "id": 6153433,
      "node_id": "MDQ6VXNlcjYxNTM0MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6153433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/b0xtch",
      "html_url": "https://github.com/b0xtch",
      "followers_url": "https://api.github.com/users/b0xtch/followers",
      "following_url": "https://api.github.com/users/b0xtch/following{/other_user}",
      "gists_url": "https://api.github.com/users/b0xtch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/b0xtch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/b0xtch/subscriptions",
      "organizations_url": "https://api.github.com/users/b0xtch/orgs",
      "repos_url": "https://api.github.com/users/b0xtch/repos",
      "events_url": "https://api.github.com/users/b0xtch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/b0xtch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-10T00:44:58Z",
    "updated_at": "2020-11-10T00:44:58Z",
    "author_association": "NONE",
    "body": "@abcoathup I started on a new implementation that builds on top of openzeppelin ERC721 implementation.\r\n\r\n1. I added the `event ConsecutiveTransfer()` event to IERC721.sol\r\n2. Added a new function named `_batchMint()` to ERC721.sol which is similar to `_mint()`  but I removed the `Transfer` event.\r\n3. Now I am testing a data structure that is able to keep track of a range of tokens to a single address. `mapping(address => Tokens[]) hodlers;` This the first thing that came to mind.\r\n\r\n```\r\n  function batchMint(address to) public virtual onlyAdmin {\r\n    uint256 fromTokenId = _tokenIds.current();\r\n\r\n    /// fancy data structure\r\n\r\n    emit ConsecutiveTransfer(fromTokenId, _tokenIds.current(), address(0), to);\r\n  }\r\n```\r\n\r\n- We can loop and batch mint but you'll run out of gas pretty fast. \r\n- This might be a wrong approach, would be awesome if someone can share or discuss their data structure implementation. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/724374401/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/724375281",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-724375281",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 724375281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDM3NTI4MQ==",
    "user": {
      "login": "b0xtch",
      "id": 6153433,
      "node_id": "MDQ6VXNlcjYxNTM0MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6153433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/b0xtch",
      "html_url": "https://github.com/b0xtch",
      "followers_url": "https://api.github.com/users/b0xtch/followers",
      "following_url": "https://api.github.com/users/b0xtch/following{/other_user}",
      "gists_url": "https://api.github.com/users/b0xtch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/b0xtch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/b0xtch/subscriptions",
      "organizations_url": "https://api.github.com/users/b0xtch/orgs",
      "repos_url": "https://api.github.com/users/b0xtch/repos",
      "events_url": "https://api.github.com/users/b0xtch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/b0xtch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-10T00:47:26Z",
    "updated_at": "2020-11-10T00:47:44Z",
    "author_association": "NONE",
    "body": "@Soren74 recently I got started with erc2309, so if you want to share ideas lmk!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/724375281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/724767412",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-724767412",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 724767412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDc2NzQxMg==",
    "user": {
      "login": "Soren74",
      "id": 57606699,
      "node_id": "MDQ6VXNlcjU3NjA2Njk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/57606699?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Soren74",
      "html_url": "https://github.com/Soren74",
      "followers_url": "https://api.github.com/users/Soren74/followers",
      "following_url": "https://api.github.com/users/Soren74/following{/other_user}",
      "gists_url": "https://api.github.com/users/Soren74/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Soren74/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Soren74/subscriptions",
      "organizations_url": "https://api.github.com/users/Soren74/orgs",
      "repos_url": "https://api.github.com/users/Soren74/repos",
      "events_url": "https://api.github.com/users/Soren74/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Soren74/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-10T15:15:09Z",
    "updated_at": "2020-11-10T15:15:09Z",
    "author_association": "NONE",
    "body": "@BotchM  Yeah, I was very excited to do this - but the guy who developed 2309 hasn't responded to any of us, so it's kinda stuck.\r\nI must say this really reflect _very_ poorly on him as his refusal to share implementations completely goes against the very ethos of GitHub and what it's all about.\r\nOh well.\r\n \r\nI personally don't have any clue how to implement this - whatever ideas or questions I had I've already posted up above, so if any of those help you somehow, run with 'em! And of course I'd be happy to see what you're doing and comment on it, try to contribute to it, etc.\r\n\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/724767412/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/725007810",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-725007810",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 725007810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTAwNzgxMA==",
    "user": {
      "login": "b0xtch",
      "id": 6153433,
      "node_id": "MDQ6VXNlcjYxNTM0MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6153433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/b0xtch",
      "html_url": "https://github.com/b0xtch",
      "followers_url": "https://api.github.com/users/b0xtch/followers",
      "following_url": "https://api.github.com/users/b0xtch/following{/other_user}",
      "gists_url": "https://api.github.com/users/b0xtch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/b0xtch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/b0xtch/subscriptions",
      "organizations_url": "https://api.github.com/users/b0xtch/orgs",
      "repos_url": "https://api.github.com/users/b0xtch/repos",
      "events_url": "https://api.github.com/users/b0xtch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/b0xtch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-10T22:33:19Z",
    "updated_at": "2020-11-10T22:33:19Z",
    "author_association": "NONE",
    "body": "@Soren74 Sounds good! I am sure they have their reasons. Sean also created cargo which is a platform for batch minting, so I guess it's fair to be competitive and not share the whole sauce. It would be awesome to even just get an example or even the data structure used. I only started iterating over an implementation, so I will definitely share if I get anywhere. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/725007810/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/766285360",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-766285360",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 766285360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjI4NTM2MA==",
    "user": {
      "login": "poria-cat",
      "id": 11287864,
      "node_id": "MDQ6VXNlcjExMjg3ODY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/11287864?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/poria-cat",
      "html_url": "https://github.com/poria-cat",
      "followers_url": "https://api.github.com/users/poria-cat/followers",
      "following_url": "https://api.github.com/users/poria-cat/following{/other_user}",
      "gists_url": "https://api.github.com/users/poria-cat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/poria-cat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/poria-cat/subscriptions",
      "organizations_url": "https://api.github.com/users/poria-cat/orgs",
      "repos_url": "https://api.github.com/users/poria-cat/repos",
      "events_url": "https://api.github.com/users/poria-cat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/poria-cat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-24T03:35:06Z",
    "updated_at": "2021-01-24T03:35:06Z",
    "author_association": "NONE",
    "body": "@BotchM @Soren74 Hi, In my view, EIP-2309 just send a special event and update id number like \"from\" and \"to\".\r\nfor example: \" now lastMintId is 100 and you want mint another 200 nft, so just change lastMintId to 300 and send a event\". because it is not use for loop, so the gas is cheap [also see this](https://blog.godsunchained.com/2019/04/28/1-million-nfts-isnt-cool/)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/766285360/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/780619282",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-780619282",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 780619282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDYxOTI4Mg==",
    "user": {
      "login": "veqtor",
      "id": 1068445,
      "node_id": "MDQ6VXNlcjEwNjg0NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1068445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veqtor",
      "html_url": "https://github.com/veqtor",
      "followers_url": "https://api.github.com/users/veqtor/followers",
      "following_url": "https://api.github.com/users/veqtor/following{/other_user}",
      "gists_url": "https://api.github.com/users/veqtor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veqtor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veqtor/subscriptions",
      "organizations_url": "https://api.github.com/users/veqtor/orgs",
      "repos_url": "https://api.github.com/users/veqtor/repos",
      "events_url": "https://api.github.com/users/veqtor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veqtor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-17T15:06:55Z",
    "updated_at": "2021-02-17T15:06:55Z",
    "author_association": "NONE",
    "body": "Is this EIP accepted to the point where Etherscan etc support the ConsecutiveTransfer event?\r\n\r\nI think the only way to implement this is to have two layers of ownership:\r\nBase is mint-layer, which is a list of (owner, number_of_tokens) tuples.\r\nTo check owner you need to loop through that list, accumulating until you get to tokenIdx you want to query ownership of.\r\nThis list needs to be append only.\r\n\r\nNext layer is transferance-layer, in which you have a map of [token-idx]->[owner]\r\nIf you don't find token in this list you fall back to mint-layer for ownership.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/780619282/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/781745871",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-781745871",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 781745871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTc0NTg3MQ==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-19T01:16:26Z",
    "updated_at": "2021-02-19T01:16:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @veqtor,\r\n\r\nI haven't seen any details on Etherscan supporting EIP-2309.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/781745871/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/782048777",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-782048777",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 782048777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjA0ODc3Nw==",
    "user": {
      "login": "veqtor",
      "id": 1068445,
      "node_id": "MDQ6VXNlcjEwNjg0NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1068445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veqtor",
      "html_url": "https://github.com/veqtor",
      "followers_url": "https://api.github.com/users/veqtor/followers",
      "following_url": "https://api.github.com/users/veqtor/following{/other_user}",
      "gists_url": "https://api.github.com/users/veqtor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veqtor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veqtor/subscriptions",
      "organizations_url": "https://api.github.com/users/veqtor/orgs",
      "repos_url": "https://api.github.com/users/veqtor/repos",
      "events_url": "https://api.github.com/users/veqtor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veqtor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-19T12:37:00Z",
    "updated_at": "2021-02-19T12:37:00Z",
    "author_association": "NONE",
    "body": "No matter how I twist and turn this around in my head I can't seem to arrive at an efficient implementation of this...\r\nNot if I'm also going to respect IERC721Enumerable.tokenOfOwnerByIndex\r\nThe best idea I have so far is some kind of linked-list type thing with ranges.  ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/782048777/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/782239162",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-782239162",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 782239162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjIzOTE2Mg==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-19T17:59:36Z",
    "updated_at": "2021-02-19T17:59:36Z",
    "author_association": "MEMBER",
    "body": "@veqtor What is the issue with `tokenOfOwnerByIndex`?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/782239162/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/783150984",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-783150984",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 783150984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzE1MDk4NA==",
    "user": {
      "login": "veqtor",
      "id": 1068445,
      "node_id": "MDQ6VXNlcjEwNjg0NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1068445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veqtor",
      "html_url": "https://github.com/veqtor",
      "followers_url": "https://api.github.com/users/veqtor/followers",
      "following_url": "https://api.github.com/users/veqtor/following{/other_user}",
      "gists_url": "https://api.github.com/users/veqtor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veqtor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veqtor/subscriptions",
      "organizations_url": "https://api.github.com/users/veqtor/orgs",
      "repos_url": "https://api.github.com/users/veqtor/repos",
      "events_url": "https://api.github.com/users/veqtor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veqtor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-22T07:21:30Z",
    "updated_at": "2021-02-22T07:21:30Z",
    "author_association": "NONE",
    "body": "> @veqtor What is the issue with `tokenOfOwnerByIndex`?\r\n\r\nNothing really except with the approach I'm taking to implementing this I can't get around spending annoying amounts of gas.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/783150984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/794170516",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-794170516",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 794170516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NDE3MDUxNg==",
    "user": {
      "login": "veqtor",
      "id": 1068445,
      "node_id": "MDQ6VXNlcjEwNjg0NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1068445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veqtor",
      "html_url": "https://github.com/veqtor",
      "followers_url": "https://api.github.com/users/veqtor/followers",
      "following_url": "https://api.github.com/users/veqtor/following{/other_user}",
      "gists_url": "https://api.github.com/users/veqtor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veqtor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veqtor/subscriptions",
      "organizations_url": "https://api.github.com/users/veqtor/orgs",
      "repos_url": "https://api.github.com/users/veqtor/repos",
      "events_url": "https://api.github.com/users/veqtor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veqtor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-09T17:05:16Z",
    "updated_at": "2021-03-09T17:05:16Z",
    "author_association": "NONE",
    "body": "https://github.com/veqtor/ERC2309 <- super-experimental but maybe it can serve as an inspiration for a proper implementation",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/794170516/reactions",
      "total_count": 11,
      "+1": 8,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 3,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/797884725",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-797884725",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 797884725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5Nzg4NDcyNQ==",
    "user": {
      "login": "superphly",
      "id": 238,
      "node_id": "MDQ6VXNlcjIzOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/superphly",
      "html_url": "https://github.com/superphly",
      "followers_url": "https://api.github.com/users/superphly/followers",
      "following_url": "https://api.github.com/users/superphly/following{/other_user}",
      "gists_url": "https://api.github.com/users/superphly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/superphly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/superphly/subscriptions",
      "organizations_url": "https://api.github.com/users/superphly/orgs",
      "repos_url": "https://api.github.com/users/superphly/repos",
      "events_url": "https://api.github.com/users/superphly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/superphly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-13T07:44:30Z",
    "updated_at": "2021-03-13T07:44:30Z",
    "author_association": "NONE",
    "body": "@veqtor - that's really cool man, but the ownedRanges stuff is kinda complex and sorta changes a lot of the standard ERC-721 basics. I'm working on a solution that's a little different, but still doesn't feel right.\r\n\r\nAt the end of the day, we're still battling these basic limitations of the Solidity language.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/797884725/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/895527336",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-895527336",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 895527336,
    "node_id": "IC_kwDOA9tCBs41YKmo",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-09T20:42:06Z",
    "updated_at": "2021-08-09T20:42:06Z",
    "author_association": "MEMBER",
    "body": "Has any NFT marketplace/platform implemented support for EIP-2309?\r\n\r\nWe have serious doubts about offering an implementation of this because we feel that an EIP-2309 token will not be well supported due to the lack of `Transfer` events. End users will not see their tokens listed in platforms that only look for those events.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/895527336/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/911079060",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-911079060",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 911079060,
    "node_id": "IC_kwDOA9tCBs42TfaU",
    "user": {
      "login": "zjpetersen",
      "id": 12157308,
      "node_id": "MDQ6VXNlcjEyMTU3MzA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12157308?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zjpetersen",
      "html_url": "https://github.com/zjpetersen",
      "followers_url": "https://api.github.com/users/zjpetersen/followers",
      "following_url": "https://api.github.com/users/zjpetersen/following{/other_user}",
      "gists_url": "https://api.github.com/users/zjpetersen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zjpetersen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zjpetersen/subscriptions",
      "organizations_url": "https://api.github.com/users/zjpetersen/orgs",
      "repos_url": "https://api.github.com/users/zjpetersen/repos",
      "events_url": "https://api.github.com/users/zjpetersen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zjpetersen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-02T02:57:10Z",
    "updated_at": "2021-09-02T02:57:10Z",
    "author_association": "NONE",
    "body": "Hi @frangio, I tested this out and [OpenSea does support this](https://testnets.opensea.io/collection/cryptocanvas).  However, Rarible and others didn't.\r\n\r\nI created a [ERC2309 implementation](https://github.com/zjpetersen/openzeppelin-contracts/blob/erc2309-implementation/contracts/token/ERC2309/ERC2309.sol) for this.  It's a bit different than @veqtor's.  There are a couple limitations, but it gives us constant gas fees and is pretty similar to ERC721.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/911079060/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/914687060",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-914687060",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 914687060,
    "node_id": "IC_kwDOA9tCBs42hQRU",
    "user": {
      "login": "gavinyue",
      "id": 54566980,
      "node_id": "MDQ6VXNlcjU0NTY2OTgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/54566980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinyue",
      "html_url": "https://github.com/gavinyue",
      "followers_url": "https://api.github.com/users/gavinyue/followers",
      "following_url": "https://api.github.com/users/gavinyue/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinyue/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinyue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinyue/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinyue/orgs",
      "repos_url": "https://api.github.com/users/gavinyue/repos",
      "events_url": "https://api.github.com/users/gavinyue/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinyue/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-07T23:18:31Z",
    "updated_at": "2021-09-07T23:18:31Z",
    "author_association": "NONE",
    "body": "> Hi @frangio, I tested this out and [OpenSea does support this](https://testnets.opensea.io/collection/cryptocanvas). However, Rarible and others didn't.\r\n> \r\n> I created a [ERC2309 implementation](https://github.com/zjpetersen/openzeppelin-contracts/blob/erc2309-implementation/contracts/token/ERC2309/ERC2309.sol) for this. It's a bit different than @veqtor's. There are a couple limitations, but it gives us constant gas fees and is pretty similar to ERC721.\r\n\r\nHey, @zjpetersen, read your implementation.  The ownerOf function seems does not work? ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/914687060/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/914856998",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-914856998",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 914856998,
    "node_id": "IC_kwDOA9tCBs42h5wm",
    "user": {
      "login": "zjpetersen",
      "id": 12157308,
      "node_id": "MDQ6VXNlcjEyMTU3MzA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12157308?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zjpetersen",
      "html_url": "https://github.com/zjpetersen",
      "followers_url": "https://api.github.com/users/zjpetersen/followers",
      "following_url": "https://api.github.com/users/zjpetersen/following{/other_user}",
      "gists_url": "https://api.github.com/users/zjpetersen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zjpetersen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zjpetersen/subscriptions",
      "organizations_url": "https://api.github.com/users/zjpetersen/orgs",
      "repos_url": "https://api.github.com/users/zjpetersen/repos",
      "events_url": "https://api.github.com/users/zjpetersen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zjpetersen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-08T02:41:37Z",
    "updated_at": "2021-09-08T02:41:37Z",
    "author_association": "NONE",
    "body": "Hey @gavinyue thanks for taking a look, I appreciate it.  \r\n\r\nI believe `ownerOf` works.  Only thing I see is that you can't use `transferOwnership`, so that method should be disabled.  \r\n\r\nJust to summarize the ownerOf logic:\r\n- If minting hasn't occurred the require statement will always fail, since _tokenCount is 0.\r\n- If we've minted, _tokenCount gets set, but _owners is still empty.  So the if statement will be true and the contract owner (the minter) gets returned.\r\n- If we've minted and transferred the token, then we'll just return the token owner like before. \r\n\r\nLet me know your thoughts, I could be missing something.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/914856998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/915388843",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-915388843",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 915388843,
    "node_id": "IC_kwDOA9tCBs42j7mr",
    "user": {
      "login": "gavinyue",
      "id": 54566980,
      "node_id": "MDQ6VXNlcjU0NTY2OTgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/54566980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinyue",
      "html_url": "https://github.com/gavinyue",
      "followers_url": "https://api.github.com/users/gavinyue/followers",
      "following_url": "https://api.github.com/users/gavinyue/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinyue/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinyue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinyue/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinyue/orgs",
      "repos_url": "https://api.github.com/users/gavinyue/repos",
      "events_url": "https://api.github.com/users/gavinyue/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinyue/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-08T16:30:18Z",
    "updated_at": "2021-09-08T16:30:18Z",
    "author_association": "NONE",
    "body": "> Hey @gavinyue thanks for taking a look, I appreciate it.\r\n> \r\n> I believe `ownerOf` works. Only thing I see is that you can't use `transferOwnership`, so that method should be disabled.\r\n> \r\n> Just to summarize the ownerOf logic:\r\n> \r\n> * If minting hasn't occurred the require statement will always fail, since _tokenCount is 0.\r\n> * If we've minted, _tokenCount gets set, but _owners is still empty.  So the if statement will be true and the contract owner (the minter) gets returned.\r\n> * If we've minted and transferred the token, then we'll just return the token owner like before.\r\n> \r\n> Let me know your thoughts, I could be missing something.\r\n\r\nGot it.  It limits range mint can only happen when the total number is zero. It does simplify things, especially working well with the marketplace to have lazy-minting.  While @veqtor's implementation support range-mint for a number of tokens to a given address at any time.  \r\n\r\nWonder would be nice to borrow the _mintBatch concept from ERC1105 to further simplify things.  \r\n \r\n\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/915388843/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/959618501",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-959618501",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 959618501,
    "node_id": "IC_kwDOA9tCBs45Mp3F",
    "user": {
      "login": "Revinand",
      "id": 7221855,
      "node_id": "MDQ6VXNlcjcyMjE4NTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7221855?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Revinand",
      "html_url": "https://github.com/Revinand",
      "followers_url": "https://api.github.com/users/Revinand/followers",
      "following_url": "https://api.github.com/users/Revinand/following{/other_user}",
      "gists_url": "https://api.github.com/users/Revinand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Revinand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Revinand/subscriptions",
      "organizations_url": "https://api.github.com/users/Revinand/orgs",
      "repos_url": "https://api.github.com/users/Revinand/repos",
      "events_url": "https://api.github.com/users/Revinand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Revinand/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-03T16:19:04Z",
    "updated_at": "2021-11-03T16:19:04Z",
    "author_association": "NONE",
    "body": "> Hi @frangio, I tested this out and [OpenSea does support this](https://testnets.opensea.io/collection/cryptocanvas). However, Rarible and others didn't.\r\n> \r\n> I created a [ERC2309 implementation](https://github.com/zjpetersen/openzeppelin-contracts/blob/erc2309-implementation/contracts/token/ERC2309/ERC2309.sol) for this. It's a bit different than @veqtor's. There are a couple limitations, but it gives us constant gas fees and is pretty similar to ERC721.\r\n\r\n@zjpetersen How did you import your contract on OpenSea? Just tried and failed with the error - 'We couldn't find this contract. Please ensure that this is a valid ERC721 or ERC1155 contract deployed on Mumbai and that you have already minted items on the contract.' Also your example collection is not on OpenSea anymore.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/959618501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/959643687",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-959643687",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 959643687,
    "node_id": "IC_kwDOA9tCBs45MwAn",
    "user": {
      "login": "zjpetersen",
      "id": 12157308,
      "node_id": "MDQ6VXNlcjEyMTU3MzA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12157308?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zjpetersen",
      "html_url": "https://github.com/zjpetersen",
      "followers_url": "https://api.github.com/users/zjpetersen/followers",
      "following_url": "https://api.github.com/users/zjpetersen/following{/other_user}",
      "gists_url": "https://api.github.com/users/zjpetersen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zjpetersen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zjpetersen/subscriptions",
      "organizations_url": "https://api.github.com/users/zjpetersen/orgs",
      "repos_url": "https://api.github.com/users/zjpetersen/repos",
      "events_url": "https://api.github.com/users/zjpetersen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zjpetersen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-03T16:26:26Z",
    "updated_at": "2021-11-03T16:26:26Z",
    "author_association": "NONE",
    "body": "Hey @Revinand. Annoying it only worked for me on Rinkeby, when I tried later on Mumbai/Polygon main net it didn‚Äôt work. It‚Äôs pretty frustrating that each network has a different feature set‚Ä¶\r\n\r\nSince I ended up deploying on Polygon I just went with standard minting since gas costs are pretty reasonable. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/959643687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/959794327",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-959794327",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 959794327,
    "node_id": "IC_kwDOA9tCBs45NUyX",
    "user": {
      "login": "Revinand",
      "id": 7221855,
      "node_id": "MDQ6VXNlcjcyMjE4NTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7221855?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Revinand",
      "html_url": "https://github.com/Revinand",
      "followers_url": "https://api.github.com/users/Revinand/followers",
      "following_url": "https://api.github.com/users/Revinand/following{/other_user}",
      "gists_url": "https://api.github.com/users/Revinand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Revinand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Revinand/subscriptions",
      "organizations_url": "https://api.github.com/users/Revinand/orgs",
      "repos_url": "https://api.github.com/users/Revinand/repos",
      "events_url": "https://api.github.com/users/Revinand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Revinand/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-03T18:10:55Z",
    "updated_at": "2021-11-03T18:10:55Z",
    "author_association": "NONE",
    "body": "I see, thanks for the answer.\r\n\r\nYeah, we decided to use Polygon too because of low transactions costs. It's really sad to know that no one (except Cargo) support this standard.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/959794327/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/968381980",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2355#issuecomment-968381980",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2355",
    "id": 968381980,
    "node_id": "IC_kwDOA9tCBs45uFYc",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-14T23:06:33Z",
    "updated_at": "2021-11-14T23:06:33Z",
    "author_association": "MEMBER",
    "body": "Because of the lack of support we don't plan to implement this EIP.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/968381980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
