{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1038",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1038/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1038/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1038/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1038",
  "id": 334298128,
  "node_id": "MDU6SXNzdWUzMzQyOTgxMjg=",
  "number": 1038,
  "title": "ERC721 unnecessarily emits an `Approval` event on transfers",
  "user": {
    "login": "abandeali1",
    "id": 18060168,
    "node_id": "MDQ6VXNlcjE4MDYwMTY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/18060168?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/abandeali1",
    "html_url": "https://github.com/abandeali1",
    "followers_url": "https://api.github.com/users/abandeali1/followers",
    "following_url": "https://api.github.com/users/abandeali1/following{/other_user}",
    "gists_url": "https://api.github.com/users/abandeali1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/abandeali1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/abandeali1/subscriptions",
    "organizations_url": "https://api.github.com/users/abandeali1/orgs",
    "repos_url": "https://api.github.com/users/abandeali1/repos",
    "events_url": "https://api.github.com/users/abandeali1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/abandeali1/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-06-21T00:50:30Z",
  "updated_at": "2018-06-26T02:47:14Z",
  "closed_at": "2018-06-25T06:04:58Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## üéâ Description\r\n\r\n<!-- Briefly describe the issue you are experiencing (or the feature you want to see added to OpenZeppelin). Tell us what you were trying to do and what happened instead. **Remember, this is _not_ a place to ask for help debugging code; for that, we welcome you in the [OpenZeppelin Slack Channel](https://slack.openzeppelin.org/).** -->\r\n\r\n- [x] üêõ This is a bug report.\r\n- [ ] üìà This is a feature request.\r\n\r\n<!-- Please check one of the above by placing an x in the box. -->\r\n\r\nCurrently, an `Approval` event is unnecessarily emitted when a transfer that resets an approval occurs. See comments towards the end of https://github.com/ethereum/EIPs/pull/841 clarifying that an `Approval` event should not be emitted in this scenario.\r\n\r\n",
  "closed_by": {
    "login": "shrugs",
    "id": 1535001,
    "node_id": "MDQ6VXNlcjE1MzUwMDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/shrugs",
    "html_url": "https://github.com/shrugs",
    "followers_url": "https://api.github.com/users/shrugs/followers",
    "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
    "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
    "organizations_url": "https://api.github.com/users/shrugs/orgs",
    "repos_url": "https://api.github.com/users/shrugs/repos",
    "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
    "received_events_url": "https://api.github.com/users/shrugs/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1038/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1038/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/399720875",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1038#issuecomment-399720875",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1038",
    "id": 399720875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTcyMDg3NQ==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-24T00:56:27Z",
    "updated_at": "2018-06-24T00:56:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "The 841 thread can't be used for identifying the standard's requirements, since they've been outdated by various updates to the primary spec at http://eips.ethereum.org/EIPS/eip-721\r\n\r\nThe text of 721:\r\n\r\n```\r\n    /// @dev This emits when ownership of any NFT changes by any mechanism.\r\n    ///  This event emits when NFTs are created (`from` == 0) and destroyed\r\n    ///  (`to` == 0). Exception: during contract creation, any number of NFTs\r\n    ///  may be created and assigned without emitting Transfer. At the time of\r\n    ///  any transfer, the approved address for that NFT (if any) is reset to none.\r\n    event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId);\r\n\r\n    /// @dev This emits when the approved address for an NFT is changed or\r\n    ///  reaffirmed. The zero address indicates there is no approved address.\r\n    ///  When a Transfer event emits, this also indicates that the approved\r\n    ///  address for that NFT (if any) is reset to none.\r\n    event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId);\r\n```\r\n\r\nSpecifically, `At the time of any transfer, the approved address for that NFT (if any) is reset to none.` followed by `This emits when the approved address for an NFT is changed or reaffirmed.` doesn't provide any special case for approval changes as a side effect of transfers.\r\n\r\nLet me know if that should be interpreted differently",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/399720875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/399785169",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1038#issuecomment-399785169",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1038",
    "id": 399785169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTc4NTE2OQ==",
    "user": {
      "login": "abandeali1",
      "id": 18060168,
      "node_id": "MDQ6VXNlcjE4MDYwMTY4",
      "avatar_url": "https://avatars.githubusercontent.com/u/18060168?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abandeali1",
      "html_url": "https://github.com/abandeali1",
      "followers_url": "https://api.github.com/users/abandeali1/followers",
      "following_url": "https://api.github.com/users/abandeali1/following{/other_user}",
      "gists_url": "https://api.github.com/users/abandeali1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abandeali1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abandeali1/subscriptions",
      "organizations_url": "https://api.github.com/users/abandeali1/orgs",
      "repos_url": "https://api.github.com/users/abandeali1/repos",
      "events_url": "https://api.github.com/users/abandeali1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abandeali1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-24T20:27:15Z",
    "updated_at": "2018-06-24T20:29:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "For the record, the relevant comment is currently the last comment in the EIP, and I haven't seen any more recent comments or updates to the spec that would challenge this assertion (by @fulldecent: `The Approval event is not emitted on transfer.`) . I understand that the spec should be what we base the actual implementation off of, though.\r\n\r\nI guess the line `At the time of any transfer, the approved address for that NFT (if any) is reset to none.` seems a bit out of place to me. If an `Approval` event is also emitted, why is there even a need to mention the `Transfer` event?\r\n\r\nOverall, I think your interpretation of the spec is probably correct. I'm just not sure if this is the _intent_ of the spec though. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/399785169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/399839044",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1038#issuecomment-399839044",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1038",
    "id": 399839044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTgzOTA0NA==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-25T05:50:33Z",
    "updated_at": "2018-06-25T05:50:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@abandeali1 ah, sorry for not checking the thread directly. didn't realize it was fulldecent that had commented on the distinction. I do think my interpretation makes much more sense than the special case for transfer-initiated approval resets, but I'm not sure how flexible the standard is, now that it's been finalized. What are the pros towards _not_ emitting the Approval event? An indexer trying to ascertain the full approval log of a token must also understand the implicit side effects of a Transfer event if they are to build an accurate history.\r\n\r\nAnyway, the spec is confusing in this case, and the language should be updated to very clearly state the intention. I've reached out to @fulldecent in the ETH-NFt chat to get his understanding.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/399839044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/399840751",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1038#issuecomment-399840751",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1038",
    "id": 399840751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTg0MDc1MQ==",
    "user": {
      "login": "abandeali1",
      "id": 18060168,
      "node_id": "MDQ6VXNlcjE4MDYwMTY4",
      "avatar_url": "https://avatars.githubusercontent.com/u/18060168?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abandeali1",
      "html_url": "https://github.com/abandeali1",
      "followers_url": "https://api.github.com/users/abandeali1/followers",
      "following_url": "https://api.github.com/users/abandeali1/following{/other_user}",
      "gists_url": "https://api.github.com/users/abandeali1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abandeali1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abandeali1/subscriptions",
      "organizations_url": "https://api.github.com/users/abandeali1/orgs",
      "repos_url": "https://api.github.com/users/abandeali1/repos",
      "events_url": "https://api.github.com/users/abandeali1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abandeali1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-25T06:01:24Z",
    "updated_at": "2018-06-25T06:01:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just find it to be redundant - you're not gaining any extra information that you don't already get from the `Transfer` event (and of course, this costs gas). ERC20 doesn't emit an `Approval` event every time `transferFrom` is called either.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/399840751/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/399841034",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1038#issuecomment-399841034",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1038",
    "id": 399841034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTg0MTAzNA==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-25T06:03:11Z",
    "updated_at": "2018-06-25T06:03:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can understand that, yeah. Looks like fulldecent has already approved and pushed the oxcert change, so I'll take that as the intent of the spec. It would be nice to get the wording clearer in the future.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/399841034/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/400160282",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1038#issuecomment-400160282",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1038",
    "id": 400160282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDE2MDI4Mg==",
    "user": {
      "login": "fulldecent",
      "id": 382183,
      "node_id": "MDQ6VXNlcjM4MjE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/382183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fulldecent",
      "html_url": "https://github.com/fulldecent",
      "followers_url": "https://api.github.com/users/fulldecent/followers",
      "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
      "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
      "organizations_url": "https://api.github.com/users/fulldecent/orgs",
      "repos_url": "https://api.github.com/users/fulldecent/repos",
      "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fulldecent/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-26T02:47:13Z",
    "updated_at": "2018-06-26T02:47:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello all, I'm dropping by from a note in NFT/Lobby. I can see that a specific word in the spec is ambiguous and has lead to two different interpretations:\r\n\r\n```solidity\r\n/// @dev This emits when the approved address for an NFT is changed or\r\n///  reaffirmed. The zero address indicates there is no approved address.\r\n///  When a Transfer event emits, this also indicates that the approved\r\n///  address for that NFT (if any) is reset to none.\r\nevent Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId);\r\n```\r\n\r\nIt would have been more clear to say \"It is unnecessary to emit Approval when a transfer occurs,\" and that is the intention of these words in the standard.\r\n\r\nI can see the problem is my poor choice of \"this also indicates\" -- where \"this\" is the Transfer.\r\n\r\nTo be clear, an implementation that emits a redundant Approval event is compliant with the standard.\r\n\r\n---\r\n\r\nIf OZ will accept this interpretation of the standard and make the change, then I would appreciate if anybody can propose an errata for 721 to clarify this. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/400160282/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
