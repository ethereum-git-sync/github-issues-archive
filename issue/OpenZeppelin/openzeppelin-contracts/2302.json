{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2302",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2302/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2302/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2302/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2302",
  "id": 650116438,
  "node_id": "MDU6SXNzdWU2NTAxMTY0Mzg=",
  "number": 2302,
  "title": "Contract to wrap an ERC721 in an ERC20",
  "user": {
    "login": "abliss",
    "id": 215283,
    "node_id": "MDQ6VXNlcjIxNTI4Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/215283?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/abliss",
    "html_url": "https://github.com/abliss",
    "followers_url": "https://api.github.com/users/abliss/followers",
    "following_url": "https://api.github.com/users/abliss/following{/other_user}",
    "gists_url": "https://api.github.com/users/abliss/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/abliss/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/abliss/subscriptions",
    "organizations_url": "https://api.github.com/users/abliss/orgs",
    "repos_url": "https://api.github.com/users/abliss/repos",
    "events_url": "https://api.github.com/users/abliss/events{/privacy}",
    "received_events_url": "https://api.github.com/users/abliss/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2020-07-02T18:07:14Z",
  "updated_at": "2023-02-15T20:04:51Z",
  "closed_at": "2020-08-19T00:02:43Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nSome ERC721 Non-Fungible-Tokens are held by people who wish they were fungible, so that they could more easily be listed on an exchange (for higher liquidity and better price discovery). Presumably the NFT was designed to be non-fungible by its creator (or they would've used ERC20 from the start), but sometimes, to some of its holders, for some subset of the tokens, fungibility is a better fit.\r\n\r\nA \"wrapper\" contract is straightforward in principle. By transferring an ERC721 token into the wrapper, you mint 1.0 of the ERC20 token, which can then be traded. Later, a holder of at least 1.0 of the ERC20 tokens can burn it and receive one of the ERC721 tokens owned by the wrapper. \r\n\r\nOne such \"fungifying\" contract that I found is Wrapped CryptoKitties (WCK) https://blocklytics.org/blog/wrapped-cryptokitties/ . In this case, only the \"unwanted\" NFTs are cast into the wrapper. These securitized rejects are then traded somewhat acitvely on uniswap. I have not been able to find other examples, but I and other holders would currently love to have one for the Azimuth Point (AZP) NFT (on mainnet at `ecliptic.eth`).\r\n\r\nAnyone could deploy such a contract; however, if OpenZepplin would publish a canonical example contract for doing this in a safe way, then token-holders could have more confidence when they mint.\r\n\r\n**üìù Details**\r\n\r\nI'm basing my design on WCK, but I'm open to other implementations (in particular, it seems there could be ways to make it significantly more gas-efficient.) Here are the main differences I would want from WCK:\r\n\r\n1. The contract's constructor should take the address of contract implementing the target ERC721 NFT to wrap. The ERC20 token can then report its ERC20 name / ticker  by prefixing  \"Wrapped\" / \"W\" to the target. This allows byte-for-byte identical contracts to be stamped out for any new ERC721.\r\n2. The contract should have a self-destruct mechanism, invokable by its owner, which *only* operates when all balances are zero. This provides a way to recover the gas costs if the contract (eventually) proves unpopular.\r\n3. There should be some simple, foolproof way to filter the incoming NFTs by a boolean condition. For example, checking that its index is within a specified range, or calling a boolean method on the target contract to filter for NFTs with a certain token-specific property.\r\n4. If the target contract is upgradable, the wrapper should be able to survive the upgrade. \r\n  \r\n\r\nI appreciate that this use case is somewhat niche, and I wouldn't expect OpenZeppelin to spend resources developing it. But if the development can be funded by a third party, would OZ consider reviewing, merging, and distributing the contract? ",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2302/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2302/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/653316372",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2302#issuecomment-653316372",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2302",
    "id": 653316372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzMxNjM3Mg==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-03T03:13:53Z",
    "updated_at": "2020-07-03T03:13:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @abliss!  Thanks for the suggestion, it is really appreciated.\r\n\r\nThe project owner will review your suggestion as soon as they can. \r\n\r\nPlease wait until we have discussed this idea before writing any code or submitting a Pull Request, so we can go through the design beforehand.  We don‚Äôt want you to waste your time!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/653316372/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/658364264",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2302#issuecomment-658364264",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2302",
    "id": 658364264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODM2NDI2NA==",
    "user": {
      "login": "abliss",
      "id": 215283,
      "node_id": "MDQ6VXNlcjIxNTI4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/215283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abliss",
      "html_url": "https://github.com/abliss",
      "followers_url": "https://api.github.com/users/abliss/followers",
      "following_url": "https://api.github.com/users/abliss/following{/other_user}",
      "gists_url": "https://api.github.com/users/abliss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abliss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abliss/subscriptions",
      "organizations_url": "https://api.github.com/users/abliss/orgs",
      "repos_url": "https://api.github.com/users/abliss/repos",
      "events_url": "https://api.github.com/users/abliss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abliss/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-14T19:17:45Z",
    "updated_at": "2020-07-14T19:17:45Z",
    "author_association": "NONE",
    "body": "Thanks for your willingness to consider the issue! Do you have any estimate of when you might be able to get to it?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/658364264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/658531887",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2302#issuecomment-658531887",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2302",
    "id": 658531887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODUzMTg4Nw==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-15T04:00:44Z",
    "updated_at": "2020-07-15T04:00:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @abliss,\r\n\r\nI don't have an estimate for when the project owner can review.  It will be as soon as they can.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/658531887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/675777047",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2302#issuecomment-675777047",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2302",
    "id": 675777047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTc3NzA0Nw==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-19T00:02:43Z",
    "updated_at": "2020-08-19T00:02:43Z",
    "author_association": "MEMBER",
    "body": "Hi @abliss. Thank you for this suggestion.\r\n\r\nWhile I think it's an interesting idea for the ecosystem, it's too specific to be included in OpenZeppelin Contracts. The most we can do is ensure that it can be implemented using OpenZeppelin's building blocks, and in this case it seems like it would be possible to do that.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/675777047/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/675777742",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2302#issuecomment-675777742",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2302",
    "id": 675777742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTc3Nzc0Mg==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-19T00:05:06Z",
    "updated_at": "2020-08-19T00:05:06Z",
    "author_association": "MEMBER",
    "body": "Also I would like to add regarding your last point:\r\n\r\n>I appreciate that this use case is somewhat niche, and I wouldn't expect OpenZeppelin to spend resources developing it. But if the development can be funded by a third party, would OZ consider reviewing, merging, and distributing the contract?\r\n\r\nMerging something into the library implies an additional maintenance burden for us from that point on, and this is why we tend to be conservative in what we decide to merge.\r\n\r\nThanks for understanding!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/675777742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1431694560",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2302#issuecomment-1431694560",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2302",
    "id": 1431694560,
    "node_id": "IC_kwDOA9tCBs5VVezg",
    "user": {
      "login": "abitofdots",
      "id": 33889084,
      "node_id": "MDQ6VXNlcjMzODg5MDg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/33889084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abitofdots",
      "html_url": "https://github.com/abitofdots",
      "followers_url": "https://api.github.com/users/abitofdots/followers",
      "following_url": "https://api.github.com/users/abitofdots/following{/other_user}",
      "gists_url": "https://api.github.com/users/abitofdots/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abitofdots/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abitofdots/subscriptions",
      "organizations_url": "https://api.github.com/users/abitofdots/orgs",
      "repos_url": "https://api.github.com/users/abitofdots/repos",
      "events_url": "https://api.github.com/users/abitofdots/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abitofdots/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-15T17:04:20Z",
    "updated_at": "2023-02-15T17:04:20Z",
    "author_association": "NONE",
    "body": "any guy know the wide-used contract to convert erc721 to erc20?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1431694560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
