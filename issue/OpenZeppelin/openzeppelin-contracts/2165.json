{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2165",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2165/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2165/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2165/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2165",
  "id": 592472070,
  "node_id": "MDU6SXNzdWU1OTI0NzIwNzA=",
  "number": 2165,
  "title": "Allow AccessControl role hierarchy to be defined at runtime",
  "user": {
    "login": "alcueca",
    "id": 38806121,
    "node_id": "MDQ6VXNlcjM4ODA2MTIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/38806121?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alcueca",
    "html_url": "https://github.com/alcueca",
    "followers_url": "https://api.github.com/users/alcueca/followers",
    "following_url": "https://api.github.com/users/alcueca/following{/other_user}",
    "gists_url": "https://api.github.com/users/alcueca/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alcueca/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alcueca/subscriptions",
    "organizations_url": "https://api.github.com/users/alcueca/orgs",
    "repos_url": "https://api.github.com/users/alcueca/repos",
    "events_url": "https://api.github.com/users/alcueca/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alcueca/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-04-02T09:03:31Z",
  "updated_at": "2021-08-07T16:30:08Z",
  "closed_at": "2020-04-02T21:54:09Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nRight now the only function to set an admin role is:\r\n```function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual```\r\n\r\nThat can be used to set up a role hierarchy in the constructor of a class extending `AccessControl`, but there would be issues if the role hierarchy should be defined at runtime.\r\n\r\n**üìù Details**\r\nIf defining roles at runtime, changing the role admin for a particular role should be restricted to members of the current admin role. Otherwise anyone could change an admin role to gain control of another role.\r\n\r\nExample: A role with `DEFAULT_ADMIN_ROLE` as the admin role. Only members of the `DEFAULT_ADMIN_ROLE` should be able to redefine the admin role.\r\n\r\nA class extending `AccessControl` doesn't have access to `getRoleAdmin` (external) or `_roles` (private). That means that a class extending `AccessControl` cannot know what is the admin role of another role, and cannot implement the rule above.\r\n\r\n**Options**\r\n1. Make `getRoleAdmin` public.\r\n2. Add an external `setRoleAdmin` function checking for admin role membership of `msg.sender`.\r\n    function setRoleAdmin(bytes32 role, bytes32 adminRole) external virtual {\r\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to set admin role\");\r\n        _setRoleAdmin(role, adminRole);\r\n    }\r\n\r\nBoth options could be implemented. \r\n1. I'm not sure of the reason for a view function to be external (bug?). \r\n2. `AccessControl.sol` implements a role hierarchy, I think that without an external `setRoleAdmin` function the contract is incomplete, forcing the user to correct this vulnerability in an extending contract if they want to obtain the full functionality.",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2165/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2165/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/607940528",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2165#issuecomment-607940528",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2165",
    "id": 607940528,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzk0MDUyOA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-02T16:09:01Z",
    "updated_at": "2020-04-02T16:09:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for opening this @albertocuestacanada! Indeed, the intent behind AccessControl is to allow for dynamic role hierarchies, but it is not supported out of the box: you'll have to think about which requirements to add when exposing `_setRoleAdmin` externally.\r\n\r\nYour comment about `getRoleAdmin() external` getting in the way is spot-on: we've identified a number of issues related to having `external` functions, and so opened https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2162 to get rid of them all. Once that PR is merged, dynamic hierarchies should work just fine.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/607940528/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/608101899",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2165#issuecomment-608101899",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2165",
    "id": 608101899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODEwMTg5OQ==",
    "user": {
      "login": "alcueca",
      "id": 38806121,
      "node_id": "MDQ6VXNlcjM4ODA2MTIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/38806121?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcueca",
      "html_url": "https://github.com/alcueca",
      "followers_url": "https://api.github.com/users/alcueca/followers",
      "following_url": "https://api.github.com/users/alcueca/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcueca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcueca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcueca/subscriptions",
      "organizations_url": "https://api.github.com/users/alcueca/orgs",
      "repos_url": "https://api.github.com/users/alcueca/repos",
      "events_url": "https://api.github.com/users/alcueca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcueca/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-02T21:33:17Z",
    "updated_at": "2020-04-02T21:34:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've see the new code in #2162, and that is enough, as you say.\r\n\r\nI think we will at some point need to implement a public `setRoleAdmin` function, due to developer misuse, but let's see if time proves I'm wrong.\r\n\r\nYou can close this issue if you want. Thanks a lot!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/608101899/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
