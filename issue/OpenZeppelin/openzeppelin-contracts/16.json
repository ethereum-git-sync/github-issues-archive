{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/16",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/16/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/16/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/16/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/16",
  "id": 177011281,
  "node_id": "MDU6SXNzdWUxNzcwMTEyODE=",
  "number": 16,
  "title": "Better oracle interfaces",
  "user": {
    "login": "maraoz",
    "id": 287189,
    "node_id": "MDQ6VXNlcjI4NzE4OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/287189?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maraoz",
    "html_url": "https://github.com/maraoz",
    "followers_url": "https://api.github.com/users/maraoz/followers",
    "following_url": "https://api.github.com/users/maraoz/following{/other_user}",
    "gists_url": "https://api.github.com/users/maraoz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maraoz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maraoz/subscriptions",
    "organizations_url": "https://api.github.com/users/maraoz/orgs",
    "repos_url": "https://api.github.com/users/maraoz/repos",
    "events_url": "https://api.github.com/users/maraoz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maraoz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650860,
      "node_id": "MDU6TGFiZWw1MDM2NTA4NjA=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/feature",
      "name": "feature",
      "color": "b9db64",
      "default": false,
      "description": "New contracts, functions, or helpers."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2016-09-14T20:25:46Z",
  "updated_at": "2019-02-28T21:46:29Z",
  "closed_at": "2019-02-28T21:46:29Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "An important part of smart contract development is how to interact with off-blockchain data sources.\n\nAn interesting idea to explore is to do inversion of control, where oracles call contracts (to communicate outside truths) through a common interface method, and can implement their oracle logic as wanted: trusted expert, closed voting, open voting, API wrapper.\nInstead of contracts requesting data from oracles, oracles inform contracts of data changes.\n",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/16/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/16/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/252448294",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/16#issuecomment-252448294",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/16",
    "id": 252448294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjQ0ODI5NA==",
    "user": {
      "login": "akshithg",
      "id": 3366508,
      "node_id": "MDQ6VXNlcjMzNjY1MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3366508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akshithg",
      "html_url": "https://github.com/akshithg",
      "followers_url": "https://api.github.com/users/akshithg/followers",
      "following_url": "https://api.github.com/users/akshithg/following{/other_user}",
      "gists_url": "https://api.github.com/users/akshithg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akshithg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akshithg/subscriptions",
      "organizations_url": "https://api.github.com/users/akshithg/orgs",
      "repos_url": "https://api.github.com/users/akshithg/repos",
      "events_url": "https://api.github.com/users/akshithg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akshithg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-08T21:03:33Z",
    "updated_at": "2016-10-08T21:03:33Z",
    "author_association": "NONE",
    "body": "[Town Crier: Authenticated Data Feeds for Smart Contracts](http://www.initc3.org/files/tc.pdf)\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/252448294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/328060904",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/16#issuecomment-328060904",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/16",
    "id": 328060904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODA2MDkwNA==",
    "user": {
      "login": "superphil0",
      "id": 1478557,
      "node_id": "MDQ6VXNlcjE0Nzg1NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1478557?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/superphil0",
      "html_url": "https://github.com/superphil0",
      "followers_url": "https://api.github.com/users/superphil0/followers",
      "following_url": "https://api.github.com/users/superphil0/following{/other_user}",
      "gists_url": "https://api.github.com/users/superphil0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/superphil0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/superphil0/subscriptions",
      "organizations_url": "https://api.github.com/users/superphil0/orgs",
      "repos_url": "https://api.github.com/users/superphil0/repos",
      "events_url": "https://api.github.com/users/superphil0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/superphil0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-08T09:57:25Z",
    "updated_at": "2017-09-08T09:57:47Z",
    "author_association": "NONE",
    "body": "We are currently implementing an oracle with https://tls-n.org/, I can let you guys know how our experience was. (TLS-N needs no special Hardware as compared to town crier, but a plugin on the webserver)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/328060904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/328601208",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/16#issuecomment-328601208",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/16",
    "id": 328601208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODYwMTIwOA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-11T17:31:52Z",
    "updated_at": "2017-09-11T17:31:52Z",
    "author_association": "MEMBER",
    "body": "That's actually very interesting @superphil0!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/328601208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/386224986",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/16#issuecomment-386224986",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/16",
    "id": 386224986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjIyNDk4Ng==",
    "user": {
      "login": "miktam",
      "id": 222522,
      "node_id": "MDQ6VXNlcjIyMjUyMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/222522?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/miktam",
      "html_url": "https://github.com/miktam",
      "followers_url": "https://api.github.com/users/miktam/followers",
      "following_url": "https://api.github.com/users/miktam/following{/other_user}",
      "gists_url": "https://api.github.com/users/miktam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/miktam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/miktam/subscriptions",
      "organizations_url": "https://api.github.com/users/miktam/orgs",
      "repos_url": "https://api.github.com/users/miktam/repos",
      "events_url": "https://api.github.com/users/miktam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/miktam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T08:30:15Z",
    "updated_at": "2018-05-03T08:30:15Z",
    "author_association": "NONE",
    "body": "Using inversion of control (oracle is calling the contract) is a very interesting idea!\r\nThere are multiple ways to achieve that, the most trivial would be that contract owner would designate particular oracle (allow them to send data in) and then only this oracle would be allowed to update the state.\r\nChallenges here: 1) oracle is 'coupled' with the contract (as it has to be designated by the contract creator), hence changing the oracle will be an issue\r\n\r\n2) what would be an incentive for an oracle to call contract back? \r\n\r\nad1) adding a proxy: owner is picking the proxy, and via this proxy oracle will be decoupled. fixes the issue with coupling, and introducing own additional issue: how proxy could be trusted. \r\nAre there better options?\r\n\r\nad2) in the contract method, when called (only by designated oracle), paying back could be implemented (ie fee based). \r\n\r\nis this a correct direction of thinking?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/386224986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/388238798",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/16#issuecomment-388238798",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/16",
    "id": 388238798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODIzODc5OA==",
    "user": {
      "login": "come-maiz",
      "id": 617831,
      "node_id": "MDQ6VXNlcjYxNzgzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/617831?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/come-maiz",
      "html_url": "https://github.com/come-maiz",
      "followers_url": "https://api.github.com/users/come-maiz/followers",
      "following_url": "https://api.github.com/users/come-maiz/following{/other_user}",
      "gists_url": "https://api.github.com/users/come-maiz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/come-maiz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/come-maiz/subscriptions",
      "organizations_url": "https://api.github.com/users/come-maiz/orgs",
      "repos_url": "https://api.github.com/users/come-maiz/repos",
      "events_url": "https://api.github.com/users/come-maiz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/come-maiz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-11T02:12:02Z",
    "updated_at": "2018-05-11T02:12:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @miktam, those sound like good points to explore. \r\n\r\nMaybe, at the same time that an oracle is designated, some money can be left for it to pull. This money will be transferred as the last step of the method that the oracle calls to deliver the data.\r\n\r\nWe can just trust the oracle, and use an small allowance that will be dripping every time we receive data. We could add some time based constraints so we receive data slowly, and the oracle can't call the method a million times at once.\r\n\r\nOr we can research how to validate the data that we receive from the oracle. This is hard because it will depend on the type of data, but [filecoin](https://filecoin.io/) is exploring that for storage, [foam](https://foam.space/) for location, [wibson](https://wibson.org) for personal data. You can also check [Oraclize](http://docs.oraclize.it/#home). \r\n\r\nThis is a very interesting problem, please let us know if you need some help from our side :)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/388238798/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/390626331",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/16#issuecomment-390626331",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/16",
    "id": 390626331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDYyNjMzMQ==",
    "user": {
      "login": "miktam",
      "id": 222522,
      "node_id": "MDQ6VXNlcjIyMjUyMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/222522?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/miktam",
      "html_url": "https://github.com/miktam",
      "followers_url": "https://api.github.com/users/miktam/followers",
      "following_url": "https://api.github.com/users/miktam/following{/other_user}",
      "gists_url": "https://api.github.com/users/miktam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/miktam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/miktam/subscriptions",
      "organizations_url": "https://api.github.com/users/miktam/orgs",
      "repos_url": "https://api.github.com/users/miktam/repos",
      "events_url": "https://api.github.com/users/miktam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/miktam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-21T11:17:41Z",
    "updated_at": "2018-05-21T11:17:41Z",
    "author_association": "NONE",
    "body": "@elopio, thank you for your help!\r\n\r\nto continue:\r\n\r\n1. pick data type to be updated, probably would be good to define `struct`, eg `struct ExternalData`.\r\nExamples above (from filecoin/foam/wibson) could be used for a start\r\n2. designate an external oracle which would be able to update `ExternalData`, defining:\r\n- fee per call, paid to the oracle\r\n- minimum/maximum frequency to update needed values (eg at least once per hour, and not more than one per day)\r\n3. supporting more than one oracle wold improve reliability and resiliency. \r\nin this case there are multiple options to find a consensus, eg take a simple average, or take the values in the middle (eg OracleA reports 10, OracleB reports 20, OracleC reports 16 - then extremes would be dropped, keeping only 16). those rules could be defined while creating `ExternalData` struct.\r\nWith more than one oracle, fee distribution could be implemented in a few ways:\r\na) fee would be paid randomly only to one of them (they would not need to gain the result). problem with this approach that any random oracle could win, no matter how accurate the data is.\r\nb) pay to all of them, and reward the most \"correct\" one, eg pay 50% of the fee to the one in the middle, and remaining to share among the rest.\r\nc) during the defining `ExternalData`, creator would specify sane limits (eg if its a temperature, then limits would be [-50, 50]\r\nd) historical data could be also used to filter out extreme results (eg accept results which do not vary more than 5% from the historical average). \r\n\r\nnow its becoming quite a complex problem, still manageable tho. \r\ndoes it sound enough to draft an interface?\r\n\r\nshould be enough for a start, what do you think?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/390626331/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/392594589",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/16#issuecomment-392594589",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/16",
    "id": 392594589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjU5NDU4OQ==",
    "user": {
      "login": "come-maiz",
      "id": 617831,
      "node_id": "MDQ6VXNlcjYxNzgzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/617831?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/come-maiz",
      "html_url": "https://github.com/come-maiz",
      "followers_url": "https://api.github.com/users/come-maiz/followers",
      "following_url": "https://api.github.com/users/come-maiz/following{/other_user}",
      "gists_url": "https://api.github.com/users/come-maiz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/come-maiz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/come-maiz/subscriptions",
      "organizations_url": "https://api.github.com/users/come-maiz/orgs",
      "repos_url": "https://api.github.com/users/come-maiz/repos",
      "events_url": "https://api.github.com/users/come-maiz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/come-maiz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-28T19:56:25Z",
    "updated_at": "2018-05-28T19:56:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you have more than enough to start :D I would recommend to start with a very basic usecase, and grow from there. If you make a PR for your work-in-progress, we can give you feedback early.\r\n\r\nThank you!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/392594589/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/398096030",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/16#issuecomment-398096030",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/16",
    "id": 398096030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODA5NjAzMA==",
    "user": {
      "login": "come-maiz",
      "id": 617831,
      "node_id": "MDQ6VXNlcjYxNzgzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/617831?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/come-maiz",
      "html_url": "https://github.com/come-maiz",
      "followers_url": "https://api.github.com/users/come-maiz/followers",
      "following_url": "https://api.github.com/users/come-maiz/following{/other_user}",
      "gists_url": "https://api.github.com/users/come-maiz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/come-maiz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/come-maiz/subscriptions",
      "organizations_url": "https://api.github.com/users/come-maiz/orgs",
      "repos_url": "https://api.github.com/users/come-maiz/repos",
      "events_url": "https://api.github.com/users/come-maiz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/come-maiz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-18T15:33:12Z",
    "updated_at": "2018-06-18T15:33:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "An EIP relevant to this feature: https://github.com/ethereum/EIPs/pull/1154",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/398096030/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/468451188",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/16#issuecomment-468451188",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/16",
    "id": 468451188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODQ1MTE4OA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-28T21:46:29Z",
    "updated_at": "2019-02-28T21:46:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing as outlined in #971.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/468451188/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
