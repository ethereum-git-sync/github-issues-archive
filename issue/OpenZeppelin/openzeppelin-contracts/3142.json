{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3142",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3142/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3142/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3142/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3142",
  "id": 1116641156,
  "node_id": "I_kwDOA9tCBs5CjpeE",
  "number": 3142,
  "title": "Opt in pull pattern instead of push pattern when transfering NFTs",
  "user": {
    "login": "jalooc",
    "id": 6209244,
    "node_id": "MDQ6VXNlcjYyMDkyNDQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6209244?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jalooc",
    "html_url": "https://github.com/jalooc",
    "followers_url": "https://api.github.com/users/jalooc/followers",
    "following_url": "https://api.github.com/users/jalooc/following{/other_user}",
    "gists_url": "https://api.github.com/users/jalooc/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jalooc/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jalooc/subscriptions",
    "organizations_url": "https://api.github.com/users/jalooc/orgs",
    "repos_url": "https://api.github.com/users/jalooc/repos",
    "events_url": "https://api.github.com/users/jalooc/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jalooc/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-01-27T19:08:23Z",
  "updated_at": "2022-02-09T18:52:41Z",
  "closed_at": "2022-02-09T18:52:41Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nThe ability to send anyone an NFT without them wanting to is problematic, because it opens door for spam.\r\n\r\n**üìù Details**\r\nWhat could solve it, is a mapping with pending token withdrawals instead of an ability to directly send them to the recipient. This mode could be opt-in, but once opt-in, it'd have to be the only possible mode of transfer - otherwise it wouldn't make sense in context of spam prevention. However it could be made opt-in not just per-contract, but also per-account, so that users could decide themselves whether to receive the NFTs instantly or to withdraw them.\r\n\r\nA naive pseudo-implementation to illustrate the intent:\r\n```solidity\r\nmapping(tokenId => address) private awaitingAcceptance;\r\n\r\nfunction giveAwayToken(address to, uint256 tokenId) public {\r\n  // ownership checks etc.\r\n\r\n  delete _owners[tokenId]\r\n  awaitingAcceptance[tokenId] = to\r\n}\r\n\r\nfunction receiveToken(uint256 tokenId) {\r\n  address to = awaitingAcceptance[tokenId]\r\n  require(to == msg.sender, 'You are not the eligible recipient')\r\n\r\n  delete awaitingAcceptance[tokenId]\r\n  _owners[tokenId] = to; // https://github.com/OpenZeppelin/openzeppelin-contracts/blob/8f70c8867e31d2d2f212ecea079b1f1afecb0440/contracts/token/ERC721/ERC721.sol#L346\r\n  // events and hooks etc.\r\n}\r\n```\r\n\r\n**Drawbacks**\r\nThis is not in the 721 standard, so apps like OpenSea wouldn't be able to handle it by default. If, however, the community decides this is a good proposal, maybe it'd be worth to try to push it.",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3142/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3142/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1024050787",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3142#issuecomment-1024050787",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3142",
    "id": 1024050787,
    "node_id": "IC_kwDOA9tCBs49CcZj",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-28T09:48:24Z",
    "updated_at": "2022-01-28T09:48:24Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @jalooc \r\n\r\nThis ability to mark \"pending withdrawal\" doesn't need any new code. Its already present in the ERC721 standard, through the approval process.\r\n\r\nWhen you do `approve(address to, uint256 tokenId)` you are saying:\r\n> I'm allowing the to address \"to\" receive the token \"tokenid\" from me\r\n\r\nPlease also note that for any discussion that is related to the evolution of an ERC, or the creation of new ERCs, you should rather submit that to [the Ethereum Magicians forum](ethereum-magicians.org/).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1024050787/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1025662019",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3142#issuecomment-1025662019",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3142",
    "id": 1025662019,
    "node_id": "IC_kwDOA9tCBs49IlxD",
    "user": {
      "login": "jalooc",
      "id": 6209244,
      "node_id": "MDQ6VXNlcjYyMDkyNDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6209244?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jalooc",
      "html_url": "https://github.com/jalooc",
      "followers_url": "https://api.github.com/users/jalooc/followers",
      "following_url": "https://api.github.com/users/jalooc/following{/other_user}",
      "gists_url": "https://api.github.com/users/jalooc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jalooc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jalooc/subscriptions",
      "organizations_url": "https://api.github.com/users/jalooc/orgs",
      "repos_url": "https://api.github.com/users/jalooc/repos",
      "events_url": "https://api.github.com/users/jalooc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jalooc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-31T11:56:36Z",
    "updated_at": "2022-01-31T11:56:36Z",
    "author_association": "NONE",
    "body": "Thanks for the explanation @Amxx üëç. I'm not fully sure that the: _\"I'm allowing the to address \"to\" receive the token \"tokenid\" from me\"_ functionality is what I was looking for. If I understand correctly, the `approve()` function allows **the owner** (which usually means **the sender**) to approve the receiver, right? Sounds like it in this part of [an implementation doc](https://docs.openzeppelin.com/contracts/4.x/api/token/erc721#IERC721-approve-address-uint256-): _**\"The caller must own the token** or be an approved operator.\"_\r\n\r\nWhat I was looking for, was rather a way for the recipients to allow others to have the token sent to them, which would be a way of preventing spam.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1025662019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1034087728",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3142#issuecomment-1034087728",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3142",
    "id": 1034087728,
    "node_id": "IC_kwDOA9tCBs49ou0w",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-09T18:52:41Z",
    "updated_at": "2022-02-09T18:52:41Z",
    "author_association": "MEMBER",
    "body": "As a way of preventing spam, the fact that `approve` allows a pull pattern isn't enough, because @jalooc would also like a way to _disable_ push transfers.\r\n\r\nDisabling transfers would effectively mean that the contract is not exactly ERC-721 compliant. It would not be guaranteed to work correctly with wallets, and this can cause many issues for users.\r\n\r\nAn NFT with only pull transfers would need to be a new token standard, but I think this method of spam prevention would be very easy to circumvent so it would not be effective.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1034087728/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
