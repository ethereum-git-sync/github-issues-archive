{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2003",
  "id": 525141042,
  "node_id": "MDU6SXNzdWU1MjUxNDEwNDI=",
  "number": 2003,
  "title": "Improve extensibility of ERC1155",
  "user": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650860,
      "node_id": "MDU6TGFiZWw1MDM2NTA4NjA=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/feature",
      "name": "feature",
      "color": "b9db64",
      "default": false,
      "description": "New contracts, functions, or helpers."
    },
    {
      "id": 1000207718,
      "node_id": "MDU6TGFiZWwxMDAwMjA3NzE4",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/contracts",
      "name": "contracts",
      "color": "1d76db",
      "default": false,
      "description": "Smart contract code."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2019-11-19T17:02:25Z",
  "updated_at": "2021-02-24T22:39:32Z",
  "closed_at": "2021-02-24T22:39:31Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "@KaiRo-at suggested that our current contract is not extensible enough due to using `external` functions.\r\n\r\nThey also suggested to add an internal function that implements transfers to have a central extensibility point. I think this is fine but I would like to see the internal function use `msg.sender` rather than having a `sender` argument like we did in ERC20.",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/565446450",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2003#issuecomment-565446450",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003",
    "id": 565446450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTQ0NjQ1MA==",
    "user": {
      "login": "KaiRo-at",
      "id": 824140,
      "node_id": "MDQ6VXNlcjgyNDE0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KaiRo-at",
      "html_url": "https://github.com/KaiRo-at",
      "followers_url": "https://api.github.com/users/KaiRo-at/followers",
      "following_url": "https://api.github.com/users/KaiRo-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/KaiRo-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KaiRo-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KaiRo-at/subscriptions",
      "organizations_url": "https://api.github.com/users/KaiRo-at/orgs",
      "repos_url": "https://api.github.com/users/KaiRo-at/repos",
      "events_url": "https://api.github.com/users/KaiRo-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KaiRo-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-13T13:46:18Z",
    "updated_at": "2019-12-13T13:46:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Seems like the [Augur implementation](https://github.com/AugurProject/augur/blob/master/packages/augur-core/source/contracts/libraries/token/ERC1155.sol) does have that internal function structure already. I think its naming of functions is not completely congruent with previous OpenZeppeling token implementations, and it implements some non-standard (but useful) extensions like totalSupply tracking, so it also could not be taken 1:1 but it can inspire for what to do.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/565446450/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/611078503",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2003#issuecomment-611078503",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003",
    "id": 611078503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTA3ODUwMw==",
    "user": {
      "login": "KaiRo-at",
      "id": 824140,
      "node_id": "MDQ6VXNlcjgyNDE0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KaiRo-at",
      "html_url": "https://github.com/KaiRo-at",
      "followers_url": "https://api.github.com/users/KaiRo-at/followers",
      "following_url": "https://api.github.com/users/KaiRo-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/KaiRo-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KaiRo-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KaiRo-at/subscriptions",
      "organizations_url": "https://api.github.com/users/KaiRo-at/orgs",
      "repos_url": "https://api.github.com/users/KaiRo-at/repos",
      "events_url": "https://api.github.com/users/KaiRo-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KaiRo-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-08T17:07:13Z",
    "updated_at": "2020-04-08T17:07:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "This may be mostly bogus now as Solidity 0.6 and OpenZeppelin 3.0 seems to be geared towards WET rather than DRY (due to explicit overrides on Solidity's side and reducing library complexity on the OpenZeppelin side) and any changes that are not strictly extensions to the default OpenZeppelin implementation need copying of the whole contract code for other tokens as well from how I understand it.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/611078503/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/611259936",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2003#issuecomment-611259936",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003",
    "id": 611259936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTI1OTkzNg==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-09T00:21:37Z",
    "updated_at": "2020-04-09T00:21:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "One of our top goals is definitively avoiding code repetition and users copy-pasting the library sources, this issue remains relevant.\r\n\r\nWe've already removed `external` from all other functions in https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2162 and introduced _hooks_ as an extensibility point with this very goal in mind (see [the code for ERC777 for example](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0-rc.1/contracts/token/ERC777/ERC777.sol#L405)), so it'd simply be a matter of implementing these on ERC1155: design work should be ready.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/611259936/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/611505233",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2003#issuecomment-611505233",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003",
    "id": 611505233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTUwNTIzMw==",
    "user": {
      "login": "KaiRo-at",
      "id": 824140,
      "node_id": "MDQ6VXNlcjgyNDE0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KaiRo-at",
      "html_url": "https://github.com/KaiRo-at",
      "followers_url": "https://api.github.com/users/KaiRo-at/followers",
      "following_url": "https://api.github.com/users/KaiRo-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/KaiRo-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KaiRo-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KaiRo-at/subscriptions",
      "organizations_url": "https://api.github.com/users/KaiRo-at/orgs",
      "repos_url": "https://api.github.com/users/KaiRo-at/repos",
      "events_url": "https://api.github.com/users/KaiRo-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KaiRo-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-09T12:39:23Z",
    "updated_at": "2020-04-09T12:39:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm, if enough `virtual`s are spread throughout this and people can override those functions (I forgot for a moment that functions marked `virtual` do not actually require an override), then it may still work and be helpful, yes.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/611505233/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/612109928",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2003#issuecomment-612109928",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003",
    "id": 612109928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjEwOTkyOA==",
    "user": {
      "login": "KaiRo-at",
      "id": 824140,
      "node_id": "MDQ6VXNlcjgyNDE0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KaiRo-at",
      "html_url": "https://github.com/KaiRo-at",
      "followers_url": "https://api.github.com/users/KaiRo-at/followers",
      "following_url": "https://api.github.com/users/KaiRo-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/KaiRo-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KaiRo-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KaiRo-at/subscriptions",
      "organizations_url": "https://api.github.com/users/KaiRo-at/orgs",
      "repos_url": "https://api.github.com/users/KaiRo-at/repos",
      "events_url": "https://api.github.com/users/KaiRo-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KaiRo-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-10T16:32:33Z",
    "updated_at": "2020-04-13T18:15:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've been pointed to https://twitter.com/xanderatallah/status/1232124941425881089 today and that makes me wonder if there is a generic way to do at least an `internal` implementation of `_exists()` like we have in ERC721, but that's not really easy the way ERC1155 is built in general.\r\nIt can be done in some specific implementations, though.\r\n\r\nMy best idea right now is something like this (and do the same as for `uri()` in some other places):\r\n```diff\r\ndiff --git a/contracts/token/ERC1155/ERC1155.sol b/contracts/token/ERC1155/ERC1155.sol\r\nindex aa0d4aae..352d93ec 100644\r\n--- a/contracts/token/ERC1155/ERC1155.sol\r\n+++ b/contracts/token/ERC1155/ERC1155.sol\r\n@@ -193,6 +193,17 @@ contract ERC1155 is ERC165, IERC1155\r\n         _doSafeBatchTransferAcceptanceCheck(msg.sender, from, to, ids, values, data);\r\n     }\r\n \r\n+    /**\r\n+     * @dev Returns whether the specified token exists. This is intentionally marked\r\n+     * `virtual` as specific implementations may want to override to actually have\r\n+     * existence be respected while the generic implementation always returns true.\r\n+     * @param id uint256 ID of the token to query the existence of\r\n+     * @return bool whether the token exists\r\n+     */\r\n+    function _exists(uint256 id) internal view virtual returns (bool) {\r\n+        return true;\r\n+    }\r\n+\r\n     /**\r\n      * @dev Internal function to mint an amount of a token with the given ID\r\n      * @param to The address that will own the minted token\r\ndiff --git a/contracts/token/ERC1155/ERC1155MetadataURICatchAll.sol b/contracts/token/ERC1155/ERC1155MetadataURICatchAll.sol\r\nindex ac7ff130..da2d3f8c 100644\r\n--- a/contracts/token/ERC1155/ERC1155MetadataURICatchAll.sol\r\n+++ b/contracts/token/ERC1155/ERC1155MetadataURICatchAll.sol\r\n@@ -31,7 +31,8 @@ contract ERC1155MetadataURICatchAll is ERC165, ERC1155, IERC1155MetadataURI {\r\n      * as an {id} parameter in the string is expected)\r\n      * @return URI string\r\n     */\r\n-    function uri(uint256 /*id*/) external view override returns (string memory) {\r\n+    function uri(uint256 id) external view override returns (string memory) {\r\n+        require(_exists(id), \"ERC1155MetadataURI: URI query for nonexistent token\");\r\n         return _uri;\r\n     }\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/612109928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/613026408",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2003#issuecomment-613026408",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003",
    "id": 613026408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzAyNjQwOA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-13T18:22:38Z",
    "updated_at": "2020-04-13T18:22:38Z",
    "author_association": "MEMBER",
    "body": "(@KaiRo-at I edited your comment just to add diff highlighting.)\r\n\r\nI like the idea that specific projects may be able to define a notion of \"exists\", but for now I'm inclining towards not encoding that in our base contract because it's something rare and that would be simple to add on top.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/613026408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/613043336",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2003#issuecomment-613043336",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003",
    "id": 613043336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzA0MzMzNg==",
    "user": {
      "login": "KaiRo-at",
      "id": 824140,
      "node_id": "MDQ6VXNlcjgyNDE0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KaiRo-at",
      "html_url": "https://github.com/KaiRo-at",
      "followers_url": "https://api.github.com/users/KaiRo-at/followers",
      "following_url": "https://api.github.com/users/KaiRo-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/KaiRo-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KaiRo-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KaiRo-at/subscriptions",
      "organizations_url": "https://api.github.com/users/KaiRo-at/orgs",
      "repos_url": "https://api.github.com/users/KaiRo-at/repos",
      "events_url": "https://api.github.com/users/KaiRo-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KaiRo-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-13T19:00:54Z",
    "updated_at": "2020-04-13T19:00:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@frangio the problem is that quite a few functions that use a `require(_exists())` pattern are probably `view` functions that are not declared `virtual` and therefore cannot be overridden easily, like the example of `uri()` I'm giving there. (...and thanks for the diff highlighting!)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/613043336/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/613060825",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2003#issuecomment-613060825",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003",
    "id": 613060825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzA2MDgyNQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-13T19:40:14Z",
    "updated_at": "2020-04-13T19:40:14Z",
    "author_association": "MEMBER",
    "body": "Aha! That's super interesting. Do you know of any projects that are using or considering to include this notion of `exists`?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/613060825/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/613104615",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2003#issuecomment-613104615",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003",
    "id": 613104615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzEwNDYxNQ==",
    "user": {
      "login": "KaiRo-at",
      "id": 824140,
      "node_id": "MDQ6VXNlcjgyNDE0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KaiRo-at",
      "html_url": "https://github.com/KaiRo-at",
      "followers_url": "https://api.github.com/users/KaiRo-at/followers",
      "following_url": "https://api.github.com/users/KaiRo-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/KaiRo-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KaiRo-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KaiRo-at/subscriptions",
      "organizations_url": "https://api.github.com/users/KaiRo-at/orgs",
      "repos_url": "https://api.github.com/users/KaiRo-at/repos",
      "events_url": "https://api.github.com/users/KaiRo-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KaiRo-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-13T21:22:32Z",
    "updated_at": "2020-04-13T21:22:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "You mean, other than the one I'm working on right now? ;-)\r\nUnfortunately, I can't make it public atm, but I'll be using all the ERC1155 patches I posted here and this `exists()` stuff in addition, in a project that is to be released \"soon\".\r\nAlso, having that notion of `_exists()` would match the OpenZeppelin ERC721 implementation.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/613104615/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/613437579",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2003#issuecomment-613437579",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003",
    "id": 613437579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzQzNzU3OQ==",
    "user": {
      "login": "KaiRo-at",
      "id": 824140,
      "node_id": "MDQ6VXNlcjgyNDE0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KaiRo-at",
      "html_url": "https://github.com/KaiRo-at",
      "followers_url": "https://api.github.com/users/KaiRo-at/followers",
      "following_url": "https://api.github.com/users/KaiRo-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/KaiRo-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KaiRo-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KaiRo-at/subscriptions",
      "organizations_url": "https://api.github.com/users/KaiRo-at/orgs",
      "repos_url": "https://api.github.com/users/KaiRo-at/repos",
      "events_url": "https://api.github.com/users/KaiRo-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KaiRo-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-14T13:18:57Z",
    "updated_at": "2020-04-14T13:18:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I thought about this whole thing some more and I'm taking the suggestion to its own PR at #2185 - I figured it's probably best if we have an actually working `_exists()` there and figured a simple way we can do this (and not need the `view virtual` stuff), see there.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/613437579/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/669617785",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2003#issuecomment-669617785",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003",
    "id": 669617785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTYxNzc4NQ==",
    "user": {
      "login": "Cybourgeoisie",
      "id": 301326,
      "node_id": "MDQ6VXNlcjMwMTMyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/301326?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Cybourgeoisie",
      "html_url": "https://github.com/Cybourgeoisie",
      "followers_url": "https://api.github.com/users/Cybourgeoisie/followers",
      "following_url": "https://api.github.com/users/Cybourgeoisie/following{/other_user}",
      "gists_url": "https://api.github.com/users/Cybourgeoisie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Cybourgeoisie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Cybourgeoisie/subscriptions",
      "organizations_url": "https://api.github.com/users/Cybourgeoisie/orgs",
      "repos_url": "https://api.github.com/users/Cybourgeoisie/repos",
      "events_url": "https://api.github.com/users/Cybourgeoisie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Cybourgeoisie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-06T00:44:32Z",
    "updated_at": "2020-08-06T00:46:51Z",
    "author_association": "NONE",
    "body": "Hey all - I'd like to propose setting `virtual` to `uri` and `isApprovedForAll` in the ERC1155.sol file. OpenSea currently relies on an override to the default `isApprovedForAll` to permit use of a proxy address, and OpenSea relies on `uri` returning the `id` value concatenated to the URI.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/669617785/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/669645102",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2003#issuecomment-669645102",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003",
    "id": 669645102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTY0NTEwMg==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-06T02:25:43Z",
    "updated_at": "2020-08-06T02:25:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @Cybourgeoisie, \r\nThere is also a general discussion on making meta data view functions virtual:\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/issues/2154",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/669645102/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/785431735",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2003#issuecomment-785431735",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2003",
    "id": 785431735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTQzMTczNQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-24T22:39:31Z",
    "updated_at": "2021-02-24T22:39:31Z",
    "author_association": "MEMBER",
    "body": "This issue has been fixed now that functions are both public and virtual.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/785431735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
