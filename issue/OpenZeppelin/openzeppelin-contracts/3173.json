{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3173",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3173/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3173/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3173/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3173",
  "id": 1127018353,
  "node_id": "I_kwDOA9tCBs5DLO9x",
  "number": 3173,
  "title": "Governor: Clarify states when it's possible to cancel a proposal",
  "user": {
    "login": "cygnusv",
    "id": 2564234,
    "node_id": "MDQ6VXNlcjI1NjQyMzQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2564234?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cygnusv",
    "html_url": "https://github.com/cygnusv",
    "followers_url": "https://api.github.com/users/cygnusv/followers",
    "following_url": "https://api.github.com/users/cygnusv/following{/other_user}",
    "gists_url": "https://api.github.com/users/cygnusv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cygnusv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cygnusv/subscriptions",
    "organizations_url": "https://api.github.com/users/cygnusv/orgs",
    "repos_url": "https://api.github.com/users/cygnusv/repos",
    "events_url": "https://api.github.com/users/cygnusv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cygnusv/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4953777396,
      "node_id": "LA_kwDOA9tCBs8AAAABJ0Sk9A",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/area:%20governance",
      "name": "area: governance",
      "color": "E7DA84",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/11",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11/labels",
    "id": 7990184,
    "node_id": "MI_kwDOA9tCBs4Aeeuo",
    "number": 11,
    "title": "5.0",
    "description": null,
    "creator": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 43,
    "closed_issues": 21,
    "state": "open",
    "created_at": "2022-05-17T19:52:44Z",
    "updated_at": "2023-06-02T17:21:01Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 1,
  "created_at": "2022-02-08T09:47:02Z",
  "updated_at": "2023-05-10T17:54:47Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Current code for canceling a proposal checks first that the proposal is in a state that allows it:\r\n```js\r\n        require(\r\n            status != ProposalState.Canceled && status != ProposalState.Expired && status != ProposalState.Executed,\r\n            \"Governor: proposal not active\"\r\n        );\r\n```\r\nIs it expected that a `Successful`, `Defeated` or `Queued` proposal that's not yet executed can be canceled? The documentation is not clear about this. To be honest, I have no idea what to expect from `Governor._cancel` after reading the documentation ðŸ˜… : \"`Internal cancel mechanism: locks up the proposal timer, preventing it from being re-submitted.`\" ðŸ¤· \r\n\r\nAlso, the `Expired` state seems specific to the `GovernorTimelockCompound` extension, so maybe that reference belongs to the cancel condition there.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3173/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3173/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1043538015",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3173#issuecomment-1043538015",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3173",
    "id": 1043538015,
    "node_id": "IC_kwDOA9tCBs4-MyBf",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-17T22:21:41Z",
    "updated_at": "2022-02-17T22:22:19Z",
    "author_association": "MEMBER",
    "body": "You're right that the documentation for this function is not clear. We should improve it.\r\n\r\n> Is it expected that a `Successful`, `Defeated` or `Queued` proposal that's not yet executed can be canceled?\r\n\r\nThe reasoning here was that it should be possible to cancel from any non-final state, and we identified `Canceled`, `Expired`, and `Executed` as the final states. Now that you point it out, `Defeated` could be seen as a final state as well, and `Expired` may not be truly final for some hypothetical custom governor module. Perhaps this subset of states we identified as final is a bit arbitrary, but I do think it makes some sense.\r\n\r\nWhat you should expect of `_cancel` is that it will move a proposal to a `Canceled` final state.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1043538015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
