{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4490",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4490/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4490/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4490/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4490",
  "id": 1828994576,
  "node_id": "I_kwDOA9tCBs5tBD4Q",
  "number": 4490,
  "title": "Add contract sizes for OZ contracts",
  "user": {
    "login": "bxmmm1",
    "id": 28648109,
    "node_id": "MDQ6VXNlcjI4NjQ4MTA5",
    "avatar_url": "https://avatars.githubusercontent.com/u/28648109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bxmmm1",
    "html_url": "https://github.com/bxmmm1",
    "followers_url": "https://api.github.com/users/bxmmm1/followers",
    "following_url": "https://api.github.com/users/bxmmm1/following{/other_user}",
    "gists_url": "https://api.github.com/users/bxmmm1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bxmmm1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bxmmm1/subscriptions",
    "organizations_url": "https://api.github.com/users/bxmmm1/orgs",
    "repos_url": "https://api.github.com/users/bxmmm1/repos",
    "events_url": "https://api.github.com/users/bxmmm1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bxmmm1/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-07-31T11:35:20Z",
  "updated_at": "2023-07-31T21:42:55Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Hello, OZ team.\r\nI'm not sure if this is the right place for this, but here is an idea for the docs website. \r\n\r\n**üßê Motivation**\r\n<!-- Is your feature request related to a specific problem? Is it just a crazy idea? Tell us about it! -->\r\nIt might help with smart contract design and architecture of systems that plan on using OZ contracts.\r\n\r\n**üìù Details**\r\n<!-- Please describe your feature request in detail. -->\r\n\r\nAdd Sizes of OZ smart contracts and have them displayed in the docs. \r\n\r\nFor example:\r\n![Screenshot 2023-07-31 at 13 31 05](https://github.com/OpenZeppelin/openzeppelin-contracts/assets/28648109/3c6102eb-2865-499f-a722-ebcca74430d5)\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contracts Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/CONTRIBUTING.md -->\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4490/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4490/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1658263474",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4490#issuecomment-1658263474",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4490",
    "id": 1658263474,
    "node_id": "IC_kwDOA9tCBs5i1xey",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-31T12:19:35Z",
    "updated_at": "2023-07-31T12:19:35Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @bxmmm1 \r\n\r\nThe size depends on multiple factors:\r\n- the compiler version\r\n- the compiler settings (optimizer, but also via IR, ...)\r\n- the interitance (if you use ERC20Burnable with ERC20Permit or ERC20Votes, that changes everything)\r\n- any additional logic \r\n  - most our contract are abstract, when you add a constructor that changes a lot\r\n  - none of our ERC20/ERC721 contract have a public mint method, when you had minting, the size will change depending on how you do it.\r\n- What about upgradeability? We use the same doc but the values are different!\r\n\r\nIn the end, size really is something that will be specific to one deployment for one user. I'm not sure it makes sens to provide numbers that in the end won't reflect the reality of the usage.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1658263474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1658334993",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4490#issuecomment-1658334993",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4490",
    "id": 1658334993,
    "node_id": "IC_kwDOA9tCBs5i2C8R",
    "user": {
      "login": "bxmmm1",
      "id": 28648109,
      "node_id": "MDQ6VXNlcjI4NjQ4MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/28648109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bxmmm1",
      "html_url": "https://github.com/bxmmm1",
      "followers_url": "https://api.github.com/users/bxmmm1/followers",
      "following_url": "https://api.github.com/users/bxmmm1/following{/other_user}",
      "gists_url": "https://api.github.com/users/bxmmm1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bxmmm1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bxmmm1/subscriptions",
      "organizations_url": "https://api.github.com/users/bxmmm1/orgs",
      "repos_url": "https://api.github.com/users/bxmmm1/repos",
      "events_url": "https://api.github.com/users/bxmmm1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bxmmm1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-31T13:04:12Z",
    "updated_at": "2023-07-31T14:40:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Amxx \r\n Everything you said is true, and the end result will vary for each user, but each smart contract has some 'base' size.\r\n\r\nIf we take ERC20Burnable as an example and compile it 0.8.20 without an optimizer.\r\n\r\n```\r\npragma solidity >=0.8.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\n\r\ncontract Size is ERC20Burnable {\r\n    constructor() ERC20(\"OpenZeppelin\", \"OZ\") {}\r\n}\r\n```\r\n\r\nWe get 2.53 KB size and unless the user removes code from virtual functions, the size won't go down that size assuming that he doesn't play with compiler options and just does the coding. \r\n\r\nSo in this case, 2.53KB would be listed as a size for ERC20Burnable for 0.8.20, optimizer off.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1658334993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1659052639",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4490#issuecomment-1659052639",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4490",
    "id": 1659052639,
    "node_id": "IC_kwDOA9tCBs5i4yJf",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-31T20:02:27Z",
    "updated_at": "2023-07-31T20:03:56Z",
    "author_association": "COLLABORATOR",
    "body": "Out of the 2.53KB how much is `ERC20Burnable`, and how much is the underlying `ERC20` ? IMO it doesn't really make sens to could all the `ERC20` logic in it, while at the same time not counting for the cost of the mint logic (without which the contract is useless)\r\n\r\nIf you make \r\n```solidity\r\ncontract MyToken is ERC20Permit, ERC20Burnable, ...\r\n```\r\nthen you cannot add the sizes of `ERC20Permit` and `ERC20Burnable`. Maybe the good metric would be \"size of the contract - size of the dependencies\" ... but then the dependencies could also overlap :/",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1659052639/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1659215207",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4490#issuecomment-1659215207",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4490",
    "id": 1659215207,
    "node_id": "IC_kwDOA9tCBs5i5Z1n",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-31T21:41:22Z",
    "updated_at": "2023-07-31T21:42:55Z",
    "author_association": "MEMBER",
    "body": "I think the metric for the size of `X` should be `sizeof(C_X) - sizeof(C)`, where `C_X is C, X`, and `C is P, Q, ...` with `P, Q, ...` the minimum set of parents required for `C_X` to compile, and with every abstract function defined in the minimum possible way (empty?).\r\n\r\nIt has some flaws, but I can see this being a useful metric...\r\n\r\n...for us as developers who maybe want to optimize bytecode size. For users, I'm not really sure. @bxmmm1 can you give some examples of decisions you would drive based on this information?\r\n\r\nI suppose that if you run into the code size limit you will want to know the size of your dependencies so you can find the optimal place to start shaving off bytes.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1659215207/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
