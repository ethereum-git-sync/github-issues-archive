{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3940",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3940/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3940/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3940/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3940",
  "id": 1526290039,
  "node_id": "I_kwDOA9tCBs5a-VZ3",
  "number": 3940,
  "title": "Array optimizations for ERC1155",
  "user": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/11",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11/labels",
    "id": 7990184,
    "node_id": "MI_kwDOA9tCBs4Aeeuo",
    "number": 11,
    "title": "5.0",
    "description": null,
    "creator": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 38,
    "closed_issues": 35,
    "state": "open",
    "created_at": "2022-05-17T19:52:44Z",
    "updated_at": "2023-06-15T07:49:45Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 8,
  "created_at": "2023-01-09T20:38:45Z",
  "updated_at": "2023-06-15T02:39:37Z",
  "closed_at": "2023-06-15T02:39:36Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This PR refers to the `next-v5.0` branch. In https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3876 two potential optimizations were identified.\r\n\r\n1. `_asSingletonArray`: Throughout the contract we use:\r\n```solidity\r\n        uint256[] memory ids = _asSingletonArray(id);\r\n        uint256[] memory amounts = _asSingletonArray(amount);\r\n```\r\nWe could combine this into a single function `_asSigletonArrays(id, amount)` and using assembly we would be able to do a single allocation and possibly avoid a couple of bounds checks.\r\n\r\n2. `_unsafeAccess`: In places where we loop over arrays of ids and amounts, we don't need to do bounds checking inside the for loop, so we could define a function to skip it.\r\n\r\nGiven that these are arrays in memory, it's unclear how much of an improvement these optimizations will make, so we have to benchmark to know for sure.\r\n\r\nBased on the results of using `_unsafeAccess` for memory arrays we should consider applying it in other places",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3940/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3940/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1499023196",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3940#issuecomment-1499023196",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3940",
    "id": 1499023196,
    "node_id": "IC_kwDOA9tCBs5ZWUdc",
    "user": {
      "login": "RenanSouza2",
      "id": 28443115,
      "node_id": "MDQ6VXNlcjI4NDQzMTE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/28443115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RenanSouza2",
      "html_url": "https://github.com/RenanSouza2",
      "followers_url": "https://api.github.com/users/RenanSouza2/followers",
      "following_url": "https://api.github.com/users/RenanSouza2/following{/other_user}",
      "gists_url": "https://api.github.com/users/RenanSouza2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RenanSouza2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RenanSouza2/subscriptions",
      "organizations_url": "https://api.github.com/users/RenanSouza2/orgs",
      "repos_url": "https://api.github.com/users/RenanSouza2/repos",
      "events_url": "https://api.github.com/users/RenanSouza2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RenanSouza2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-06T12:55:47Z",
    "updated_at": "2023-04-12T10:03:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey, I evaluated this and I don't think the array optimization is worth it\r\n\r\nThese are the gas evaluations before and after the change\r\n\r\nsafeTransferFrom(address,address,uint256,uint256,bytes)           ·      52739  ·      60161  ·      57220\r\nsafeTransferFrom(address,address,uint256,uint256,bytes)           ·      52562  ·      59984  ·      57043  ·           18  ·          -  \r\n\r\nand at leaast the code I wrote was a bit hacky\r\n\r\n```solidity\r\nfunction _asSingletonArrays(\r\n    uint256 element1,\r\n    uint element2\r\n) private pure returns (uint256[] memory, uint256[] memory) {\r\n    uint256[] memory array1 = new uint256[](3);\r\n    uint256[] memory array2;\r\n    assembly {\r\n        mstore(array1, 1)\r\n        mstore(add(array1, 0x20), element1)\r\n\r\n        array2 := add(array1, 0x40)\r\n        mstore(array2, 1)\r\n        mstore(add(array2, 0x20), element2)\r\n    }\r\n\r\n    return (array1, array2);\r\n}\r\n```\r\n\r\nedit: sorry for the bunch of edits I was trying to get the markdown right",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1499023196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1505025002",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3940#issuecomment-1505025002",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3940",
    "id": 1505025002,
    "node_id": "IC_kwDOA9tCBs5ZtNvq",
    "user": {
      "login": "ernestognw",
      "id": 33379285,
      "node_id": "MDQ6VXNlcjMzMzc5Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/33379285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ernestognw",
      "html_url": "https://github.com/ernestognw",
      "followers_url": "https://api.github.com/users/ernestognw/followers",
      "following_url": "https://api.github.com/users/ernestognw/following{/other_user}",
      "gists_url": "https://api.github.com/users/ernestognw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ernestognw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ernestognw/subscriptions",
      "organizations_url": "https://api.github.com/users/ernestognw/orgs",
      "repos_url": "https://api.github.com/users/ernestognw/repos",
      "events_url": "https://api.github.com/users/ernestognw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ernestognw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-12T10:17:15Z",
    "updated_at": "2023-04-12T10:17:15Z",
    "author_association": "MEMBER",
    "body": "Hey @RenanSouza2, just edited it to help you a bit with the code example, thanks!\r\n\r\nCan you share your benchmark scripts? I can't interpret what the numbers you shared mean, is that a Foundry output?\r\n\r\nRegarding the suggested implementation, I think it's more expensive because of the way variables are declared, we should be able to do the same in pure assembly by just returning a pointer without allocating memory (eg. `uint256[] memory array1 = new uint256[](3)` is already allocating it and performing other operations).\r\n\r\nWe haven't looked into this yet since we're going through an audit for the next 4.9 release. We're considering this for 5.0 later this year.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1505025002/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1512994652",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3940#issuecomment-1512994652",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3940",
    "id": 1512994652,
    "node_id": "IC_kwDOA9tCBs5aLndc",
    "user": {
      "login": "RenanSouza2",
      "id": 28443115,
      "node_id": "MDQ6VXNlcjI4NDQzMTE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/28443115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RenanSouza2",
      "html_url": "https://github.com/RenanSouza2",
      "followers_url": "https://api.github.com/users/RenanSouza2/followers",
      "following_url": "https://api.github.com/users/RenanSouza2/following{/other_user}",
      "gists_url": "https://api.github.com/users/RenanSouza2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RenanSouza2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RenanSouza2/subscriptions",
      "organizations_url": "https://api.github.com/users/RenanSouza2/orgs",
      "repos_url": "https://api.github.com/users/RenanSouza2/repos",
      "events_url": "https://api.github.com/users/RenanSouza2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RenanSouza2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-18T12:15:51Z",
    "updated_at": "2023-04-18T12:15:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey, sorry por taking so long but here it is\r\n\r\nThe tests I used is the gas-reporter already set in the repository\r\nin this commit I selected a few tests:\r\nhttps://github.com/RenanSouza2/openzeppelin-contracts/commit/d43ff2d932294b8e20fdd2a4d07aa7705cb77f22\r\n\r\nI implemented your ideas in this commit here:\r\nhttps://github.com/RenanSouza2/openzeppelin-contracts/commit/1b3190bbd3f43fb7acdb39af012d15cc65475ac3\r\n\r\nUsing the same tests in both versions\r\n(I'm trying to fing the best way to share a table with you)\r\n\r\n```\r\n·-------------------------------------------|---------------------------|-------------|\r\n|           Solc version: 0.8.13            ·  Optimizer enabled: true  ·  Runs: 200  ·\r\n············································|···························|·············|\r\n|  Methods                                                                             \r\n························|···················|········|········|·········|·············|\r\n|  Contract             ·  Method           ·  Min   ·  Max   ·   Avg   ·     # calls ·\r\n························|···················|········|········|·········|·············|\r\n|  $ERC1155 (original)  ·  safeTransferFrom · 52739  · 60161  ·  56964  ·         20  ·\r\n························|···················|········|········|·········|·············|\r\n|  $ERC1155 (assembly)  ·  safeTransferFrom · 52478  · 59900  ·  56703  ·         20  ·\r\n························|···················|········|········|·········|·············|\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1512994652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1523525662",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3940#issuecomment-1523525662",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3940",
    "id": 1523525662,
    "node_id": "IC_kwDOA9tCBs5azyge",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-26T14:31:58Z",
    "updated_at": "2023-04-26T14:31:58Z",
    "author_association": "MEMBER",
    "body": "@RenanSouza2 Thanks for running these benchmarks! The code you shared is what I had in mind.\r\n\r\nSo it looks like this change results in about 250 gas reduction. It's not huge, in relative terms it's less than 1% of execution cost, but in absolute terms it's not negligible. My opinion is we should do this optimization.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1523525662/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1523589948",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3940#issuecomment-1523589948",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3940",
    "id": 1523589948,
    "node_id": "IC_kwDOA9tCBs5a0CM8",
    "user": {
      "login": "RenanSouza2",
      "id": 28443115,
      "node_id": "MDQ6VXNlcjI4NDQzMTE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/28443115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RenanSouza2",
      "html_url": "https://github.com/RenanSouza2",
      "followers_url": "https://api.github.com/users/RenanSouza2/followers",
      "following_url": "https://api.github.com/users/RenanSouza2/following{/other_user}",
      "gists_url": "https://api.github.com/users/RenanSouza2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RenanSouza2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RenanSouza2/subscriptions",
      "organizations_url": "https://api.github.com/users/RenanSouza2/orgs",
      "repos_url": "https://api.github.com/users/RenanSouza2/repos",
      "events_url": "https://api.github.com/users/RenanSouza2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RenanSouza2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-26T15:11:08Z",
    "updated_at": "2023-04-26T15:11:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nice,\r\n\r\nI`ve updated the other functions to use the _asSingletonArrays and the benchmark can be taken from this commit: https://github.com/RenanSouza2/openzeppelin-contracts/commit/a3598e4af0b866ad1631dcfa3f8b4a7dc12cc8dd\r\n\r\nAnd I also took the liberty to make this PR: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4196\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1523589948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1571910471",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3940#issuecomment-1571910471",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3940",
    "id": 1571910471,
    "node_id": "IC_kwDOA9tCBs5dsXNH",
    "user": {
      "login": "clauBv23",
      "id": 26546018,
      "node_id": "MDQ6VXNlcjI2NTQ2MDE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/26546018?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clauBv23",
      "html_url": "https://github.com/clauBv23",
      "followers_url": "https://api.github.com/users/clauBv23/followers",
      "following_url": "https://api.github.com/users/clauBv23/following{/other_user}",
      "gists_url": "https://api.github.com/users/clauBv23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clauBv23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clauBv23/subscriptions",
      "organizations_url": "https://api.github.com/users/clauBv23/orgs",
      "repos_url": "https://api.github.com/users/clauBv23/repos",
      "events_url": "https://api.github.com/users/clauBv23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clauBv23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-01T11:53:54Z",
    "updated_at": "2023-06-01T11:53:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi there, I was taking a look at the potential optimizations and I'm not sure if the improvements are worth it, but here go the results I found.\r\n\r\nRegarding the usage of  `_unsafeAccess`, using the next function for unsafe access:\r\n\r\n``` solidity\r\n\r\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\r\n        }\r\n    }\r\n```\r\n\r\nthe results were:\r\n\r\n```·--------------------------------------------------|---------------------------|-------------|\r\n|               Solc version: 0.8.19               ·  Optimizer enabled: true  ·  Runs: 200  ·\r\n···················································|···························|·············|\r\n|  Methods                                         ·               27 gwei/gas               ·\r\n··························|························|·············|·············|·············|\r\n|  Contract               ·  Method                ·      Min    ·      Max    ·      Avg    ·\r\n··························|························|·············|·············|·············|\r\n|  $ERC1155               ·  safeBatchTransferFrom ·      79580  ·     108008  ·      90701  ·\r\n··························|························|·············|·············|·············|\r\n|  $ERC1155 (optimized)   ·  safeBatchTransferFrom ·      79404  ·     107744  ·      90509  ·\r\n··························|························|·············|·············|·············|\r\n\r\n|  $ERC1155               ·  safeTransferFrom      ·      52744  ·      60144  ·      56678  ·\r\n··························|······················ ·|·············|·············|·············|\r\n|  $ERC1155 (optimized)   ·  safeTransferFrom      ·      52574  ·      59974  ·      56508  ·\r\n··························|······················· |·············|·············|·············|\r\n```\r\n\r\nthe previous result can be checked on [this commit.](https://github.com/OpenZeppelin/openzeppelin-contracts/commit/68a6eaf3d2d22227f5d5519a52f48c6e974aa044) \r\n\r\n\r\nFollowing the discussed improvement regarding `_asSigletonArrays` and using this function:\r\n\r\n``` solidity \r\nfunction _asSingletonArrays(\r\n        uint256 element1,\r\n        uint256 element2\r\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            array1 := mload(0x40)\r\n            mstore(array1, 1)\r\n            mstore(add(array1, 0x20), element1)\r\n\r\n            array2 := add(array1, 0x40)\r\n            mstore(array2, 1)\r\n            mstore(add(array2, 0x20), element2)\r\n\r\n            mstore(0x40, add(array2, 0x40))\r\n        }\r\n    }\r\n```\r\n\r\nthe results were (check it on [this commit ](https://github.com/OpenZeppelin/openzeppelin-contracts/commit/1ec6f50aaf0c36edb753decc1e1551e54d3d48b4)):\r\n\r\n```\r\n·--------------------------------------------------|---------------------------|-------------|\r\n|               Solc version: 0.8.19               ·  Optimizer enabled: true  ·  Runs: 200  ·\r\n···················································|···························|·············|\r\n|  Methods                                         ·               27 gwei/gas               ·\r\n··························|························|·············|·············|·············|\r\n|  Contract               ·  Method                ·      Min    ·      Max    ·      Avg    ·\r\n··························|························|·············|·············|·············|\r\n|  $ERC1155               ·  safeTransferFrom      ·      52744  ·      60144  ·      56678  ·\r\n··························|······················ ·|·············|·············|·············|\r\n|  $ERC1155 (optimized)   ·  safeTransferFrom      ·      52420  ·      59820  ·      56354  ·\r\n··························|······················· |·············|·············|·············|\r\n\r\n```\r\n\r\n\r\nAnd finally using both optimizations the results were (check it [here.](https://github.com/OpenZeppelin/openzeppelin-contracts/compare/master...clauBv23:openzeppelin-contracts:ERC1155-array-optimization)):\r\n\r\n```\r\n·--------------------------------------------------|---------------------------|-------------|\r\n|               Solc version: 0.8.19               ·  Optimizer enabled: true  ·  Runs: 200  ·\r\n···················································|···························|·············|\r\n|  Methods                                         ·               27 gwei/gas               ·\r\n··························|························|·············|·············|·············|\r\n|  Contract               ·  Method                ·      Min    ·      Max    ·      Avg    ·\r\n··························|························|·············|·············|·············|\r\n|  $ERC1155               ·  safeBatchTransferFrom ·      79580  ·     108008  ·      90701  ·\r\n··························|························|·············|·············|·············|\r\n|  $ERC1155 (optimized)   ·  safeBatchTransferFrom ·      79404  ·     107744  ·      90509  ·\r\n··························|························|·············|·············|·············|\r\n\r\n|  $ERC1155               ·  safeTransferFrom      ·      52744  ·      60144  ·      56678  ·\r\n··························|······················ ·|·············|·············|·············|\r\n|  $ERC1155 (optimized)   ·  safeTransferFrom      ·      52250  ·      59650  ·      56184  ·\r\n··························|······················· |·············|·············|·············|\r\n```\r\n\r\nWhit both changes the gas reduction is about 400 for ` safeTransferFrom` and more than 150 for `safeBatchTransferFrom` so, IMHO it could be, at least, considered. \r\nDidn't create a PR to keep OZ repo clean, but I could if this is a green light.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1571910471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1572896436",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3940#issuecomment-1572896436",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3940",
    "id": 1572896436,
    "node_id": "IC_kwDOA9tCBs5dwH60",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-01T23:00:12Z",
    "updated_at": "2023-06-01T23:00:12Z",
    "author_association": "MEMBER",
    "body": "@clauBv23 There is an existing PR for the array optimization. If you want you can submit a PR to use unsafeAccess.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1572896436/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1573305451",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3940#issuecomment-1573305451",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3940",
    "id": 1573305451,
    "node_id": "IC_kwDOA9tCBs5dxrxr",
    "user": {
      "login": "clauBv23",
      "id": 26546018,
      "node_id": "MDQ6VXNlcjI2NTQ2MDE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/26546018?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clauBv23",
      "html_url": "https://github.com/clauBv23",
      "followers_url": "https://api.github.com/users/clauBv23/followers",
      "following_url": "https://api.github.com/users/clauBv23/following{/other_user}",
      "gists_url": "https://api.github.com/users/clauBv23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clauBv23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clauBv23/subscriptions",
      "organizations_url": "https://api.github.com/users/clauBv23/orgs",
      "repos_url": "https://api.github.com/users/clauBv23/repos",
      "events_url": "https://api.github.com/users/clauBv23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clauBv23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-02T07:48:16Z",
    "updated_at": "2023-06-02T08:15:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "sure, perfect! #4300 created",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1573305451/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
