{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3297",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3297/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3297/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3297/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3297",
  "id": 1182188353,
  "node_id": "I_kwDOA9tCBs5GdsNB",
  "number": 3297,
  "title": "Give names to magic values in TimelockController tests",
  "user": {
    "login": "crazyrabbitLTC",
    "id": 1938013,
    "node_id": "MDQ6VXNlcjE5MzgwMTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1938013?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/crazyrabbitLTC",
    "html_url": "https://github.com/crazyrabbitLTC",
    "followers_url": "https://api.github.com/users/crazyrabbitLTC/followers",
    "following_url": "https://api.github.com/users/crazyrabbitLTC/following{/other_user}",
    "gists_url": "https://api.github.com/users/crazyrabbitLTC/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/crazyrabbitLTC/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/crazyrabbitLTC/subscriptions",
    "organizations_url": "https://api.github.com/users/crazyrabbitLTC/orgs",
    "repos_url": "https://api.github.com/users/crazyrabbitLTC/repos",
    "events_url": "https://api.github.com/users/crazyrabbitLTC/events{/privacy}",
    "received_events_url": "https://api.github.com/users/crazyrabbitLTC/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650966,
      "node_id": "MDU6TGFiZWw1MDM2NTA5NjY=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0e8a16",
      "default": true,
      "description": "Low hanging fruit for new contributors to get involved!"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-03-27T00:02:53Z",
  "updated_at": "2022-05-12T22:23:56Z",
  "closed_at": "2022-05-12T22:23:56Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "This might not be a big thing, but in tests for more abstract concepts like building transactions to be executed, it would be great if possible if the tests could be very thorough on how values are created. In this case, it's not clear why the salt is this value. Would be awesome if all the values to be used in the test were clearly generated at the top of the test file for folks looking to learn how the system works by reading the tests. \r\n\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/76eee35971c2541585e05cbf258510dda7b2fbc6/test/governance/TimelockController.test.js#L147",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3297/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3297/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1079848324",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3297#issuecomment-1079848324",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3297",
    "id": 1079848324,
    "node_id": "IC_kwDOA9tCBs5AXS2E",
    "user": {
      "login": "mw2000",
      "id": 11898068,
      "node_id": "MDQ6VXNlcjExODk4MDY4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11898068?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mw2000",
      "html_url": "https://github.com/mw2000",
      "followers_url": "https://api.github.com/users/mw2000/followers",
      "following_url": "https://api.github.com/users/mw2000/following{/other_user}",
      "gists_url": "https://api.github.com/users/mw2000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mw2000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mw2000/subscriptions",
      "organizations_url": "https://api.github.com/users/mw2000/orgs",
      "repos_url": "https://api.github.com/users/mw2000/repos",
      "events_url": "https://api.github.com/users/mw2000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mw2000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-27T06:09:57Z",
    "updated_at": "2022-03-27T06:09:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I believe this is a random value. The salt is a value used to obfuscate tx's. However, I think a comment indicating the same, or perhaps even a neatly named variable storing this value is needed.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1079848324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1079909767",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3297#issuecomment-1079909767",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3297",
    "id": 1079909767,
    "node_id": "IC_kwDOA9tCBs5AXh2H",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-27T11:25:39Z",
    "updated_at": "2022-03-27T11:25:39Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @crazyrabbitLTC.\n\nThis value should be treated as random. IMO, it would be cleaner to use a random generator to fill this argument. When writing this test, it was decided that for reproducibility reasons we should hardcode a value.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1079909767/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1080727393",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3297#issuecomment-1080727393",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3297",
    "id": 1080727393,
    "node_id": "IC_kwDOA9tCBs5Aapdh",
    "user": {
      "login": "crazyrabbitLTC",
      "id": 1938013,
      "node_id": "MDQ6VXNlcjE5MzgwMTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1938013?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crazyrabbitLTC",
      "html_url": "https://github.com/crazyrabbitLTC",
      "followers_url": "https://api.github.com/users/crazyrabbitLTC/followers",
      "following_url": "https://api.github.com/users/crazyrabbitLTC/following{/other_user}",
      "gists_url": "https://api.github.com/users/crazyrabbitLTC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crazyrabbitLTC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crazyrabbitLTC/subscriptions",
      "organizations_url": "https://api.github.com/users/crazyrabbitLTC/orgs",
      "repos_url": "https://api.github.com/users/crazyrabbitLTC/repos",
      "events_url": "https://api.github.com/users/crazyrabbitLTC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crazyrabbitLTC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-28T14:28:56Z",
    "updated_at": "2022-03-28T14:28:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "That makes a lot of sense. Do you think it would be possible for users to\nadd at least a comment describing that it's random? And if there is some\nformat required for it, a note on how it should be generated?\n\n\n\n\n\nOn Sun, Mar 27, 2022 at 7:25 AM Hadrien Croubois ***@***.***>\nwrote:\n\n> Hello @crazyrabbitLTC <https://github.com/crazyrabbitLTC>.\n>\n> This value should be treated as random. IMO, it would be cleaner to use a\n> random generator to fill this argument. When writing this test, it was\n> decided that for reproducibility reasons we should hardcode a value.\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3297#issuecomment-1079909767>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAOZEXMDKYCN6NC6XLSTWVLVCBHU7ANCNFSM5RX37QGQ>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1080727393/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1089506749",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3297#issuecomment-1089506749",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3297",
    "id": 1089506749,
    "node_id": "IC_kwDOA9tCBs5A8I29",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-05T23:16:07Z",
    "updated_at": "2022-04-05T23:17:30Z",
    "author_association": "MEMBER",
    "body": "Yes, we can just define the value at the top like:\r\n\r\n```javascript\r\nconst salt = '0x025e7b0be353a74631ad648c667493c0e1cd31caa4cc2d3520fdc171ea0cc726'; // a random value\r\n```\r\n\r\nI've changed the title to reduce the scope to TimelockController. I realize there may be similar issues in other tests. People are welcome to point those out and help us improve test clarity.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1089506749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
