{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/310",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/310/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/310/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/310/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/310",
  "id": 242827127,
  "node_id": "MDU6SXNzdWUyNDI4MjcxMjc=",
  "number": 310,
  "title": "Crowdsale improvements",
  "user": {
    "login": "jakub-wojciechowski",
    "id": 27825272,
    "node_id": "MDQ6VXNlcjI3ODI1Mjcy",
    "avatar_url": "https://avatars.githubusercontent.com/u/27825272?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jakub-wojciechowski",
    "html_url": "https://github.com/jakub-wojciechowski",
    "followers_url": "https://api.github.com/users/jakub-wojciechowski/followers",
    "following_url": "https://api.github.com/users/jakub-wojciechowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/jakub-wojciechowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jakub-wojciechowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jakub-wojciechowski/subscriptions",
    "organizations_url": "https://api.github.com/users/jakub-wojciechowski/orgs",
    "repos_url": "https://api.github.com/users/jakub-wojciechowski/repos",
    "events_url": "https://api.github.com/users/jakub-wojciechowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jakub-wojciechowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2017-07-13T20:52:18Z",
  "updated_at": "2017-08-04T22:27:16Z",
  "closed_at": "2017-08-04T22:27:01Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "First of all, @frangio thx for the amazing [Crowdsale PR](https://github.com/OpenZeppelin/zeppelin-solidity/pull/283). I've really enjoyed reading the code. Great job :) !\r\n\r\nWhile reading I've noted on a side a few comments and suggestions for improvements. I'd be grateful if you let me know what do you think about them:\r\n\r\n1. Crowdsale contract is tightly coupled to MintableToken. Wouldnâ€™t it be better to make the base Crowdsale as generic as possible? It will allow others to implement a model when the token pool is created before a sale and then transferred rather than minted. Currently, itâ€™s impossible to override methods like:\r\n\r\n`\tfunction createTokenContract() internal returns (MintableToken) {`\r\n\r\nI will suggest extracting:\r\n\r\n`token.mint(beneficiary, tokens);`\r\n\r\nto\r\n\r\n```\r\n function distribute(beneficiary, tokens) internal {\r\n  token.mint(beneficiary, tokens); \r\n}\r\n```\r\n\r\nAnd probably rename: \r\n\r\n`function createTokenContract() => setupTokenContract()`\t\t\r\n\t\r\n2. Precondition checks are kept within a method body mixing with business logic. Itâ€™s a better practice to [extract them to modifiers](https://medium.com/@gavofyork/condition-orientated-programming-969f6ba0161a):\r\n\r\n```\r\nrequire(beneficiary != 0x0);\r\nrequire(validPurchase());\r\n```\r\n\r\n3. Balance update is very verbose:\r\n```\r\nuint256 weiAmount = msg.value;\r\nuint256 updatedWeiRaised = weiRaised.add(weiAmount);\r\n\r\nâ€¦.\r\n\r\n// update state\r\nweiRaised = updatedWeiRaised;\r\n```\r\n\r\nAm I missing any benefit of such separation? Why not just:\r\n\r\n`weiRaised = weiRaised.add(msg.value);`\r\n\r\n4. Code that checks if a sale has ended is duplicated leading to the risk of inconsistency once updated or overridden:\r\n\r\n`bool withinPeriod = current >= startBlock && current <= endBlock;`\r\n\r\n```\r\nfunction hasEnded() public constant returns (bool) {\r\n\treturn block.number > endBlock;\r\n}\r\n```\r\n\r\n\r\n5. **CappedCrowdsale**. Conditions that checks if a cap is reached are independently implemented in two places (similar to above):\r\n\r\n```\r\nbool withinCap = weiRaised.add(msg.value) <= cap;\r\n\r\nbool capReached = weiRaised >= cap;\r\n```\r\n\r\n6. **CappedCrowdsale**. Missing sanity check for `cap > 0`\r\n\r\n7. **RefundableCrowdsale**. Missing sanity check for `goal > 0`\r\n\r\n8. **RefundVault**. Should we start in an `ACTIVE` state when `Crowdsale` is not activated yet. This may potentially lead to accepting money outside of `Crowdsale`. The vault lifecycle should correspond to the `Crowdsale` lifecycle.\r\n \r\n9. **RefundVault** Once again we may replace inline checks with modifiers:\r\n\r\n`require(state == State.Active); => inState(State.Active)`\r\n\r\n10. **RefundVault**. Function:\r\n\r\n`function refund(address investor) `\r\n\r\nis open to everyone. I think we limit the privilege to depositors or owner. It will be surprising if a third party initiate refunds. Why not use a standard pullPayment pattern in here.\r\n \r\n11. **RefundVault**. It will be nice to have a clear policy regulating what to do with untouched funds. Part of them may be stuck forever due to lost keys. We may introduce a  refund period after which the remaining money may be sent to the crowdsale wallet or split among all of the investors.\r\n\r\n12. It will be nice to have well-defined states that describe Crowdsale lifecycle like: \r\n\r\n`enum State {CREATED, ACTIVE, PAUSED, CLOSED, FINALIZED}`\r\n\r\n It will add more clarity and reduce code duplication in checking functions preconditions. We may even introduce a [state machine pattern](http://solidity.readthedocs.io/en/develop/common-patterns.html#state-machine) so derived Crowdsale contracts may easily add code when certain transition happen (like `onTransition(ACTIVE,CLOSED)`.\r\n\r\n13. The last comment is rather an invitation to discussion. What do you think about replacing inheritance with composition in the form of mixings (implemented as linked libraries)? My experience shows that this approach is usually more flexible and easier for maintenance. Iâ€™m just afraid that we may run into trouble when there are additional features requests and the inheritance hierarchy gets deeper. (Event currently there are 3 levels: Crowdsale -> FinalizableCrowdsale -> RefundableCrowdsale)\r\n\r\nThanks for reading that. I'm looking forward to hearing your opinions. \r\n ",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/310/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/310/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315203630",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/310#issuecomment-315203630",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/310",
    "id": 315203630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTIwMzYzMA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T21:11:51Z",
    "updated_at": "2017-07-13T21:11:51Z",
    "author_association": "MEMBER",
    "body": "Thanks a lot @jakub-wojciechowski! The crowdsale contracts were a joint effort by the OpenZeppelin team ðŸ˜„.\r\n\r\nIt's great to see you excited about collaborating. There's a lot of suggestions in this PR and I can't go over everything thoroughly at the moment but I will revisit it in the next couple of days and get back to you. Are you in the OpenZeppelin slack so I can reach you there?\r\n\r\nIn the meantime, though, there are a couple of suggestions which you can go ahead and open PRs for: 3, and the missing sanity checks.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315203630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315205418",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/310#issuecomment-315205418",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/310",
    "id": 315205418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTIwNTQxOA==",
    "user": {
      "login": "jakub-wojciechowski",
      "id": 27825272,
      "node_id": "MDQ6VXNlcjI3ODI1Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/27825272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakub-wojciechowski",
      "html_url": "https://github.com/jakub-wojciechowski",
      "followers_url": "https://api.github.com/users/jakub-wojciechowski/followers",
      "following_url": "https://api.github.com/users/jakub-wojciechowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakub-wojciechowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakub-wojciechowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakub-wojciechowski/subscriptions",
      "organizations_url": "https://api.github.com/users/jakub-wojciechowski/orgs",
      "repos_url": "https://api.github.com/users/jakub-wojciechowski/repos",
      "events_url": "https://api.github.com/users/jakub-wojciechowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakub-wojciechowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T21:19:42Z",
    "updated_at": "2017-07-13T21:19:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Cool, thanks for the instant reply. I will open the PRs. \r\nI've just joined the Slack as \"kuba\". I'm looking forward to discussing this stuff whenever you are ready. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315205418/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315206201",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/310#issuecomment-315206201",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/310",
    "id": 315206201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTIwNjIwMQ==",
    "user": {
      "login": "miohtama",
      "id": 49922,
      "node_id": "MDQ6VXNlcjQ5OTIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/49922?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/miohtama",
      "html_url": "https://github.com/miohtama",
      "followers_url": "https://api.github.com/users/miohtama/followers",
      "following_url": "https://api.github.com/users/miohtama/following{/other_user}",
      "gists_url": "https://api.github.com/users/miohtama/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/miohtama/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/miohtama/subscriptions",
      "organizations_url": "https://api.github.com/users/miohtama/orgs",
      "repos_url": "https://api.github.com/users/miohtama/repos",
      "events_url": "https://api.github.com/users/miohtama/events{/privacy}",
      "received_events_url": "https://api.github.com/users/miohtama/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T21:23:22Z",
    "updated_at": "2017-07-13T21:23:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some projects prefer \"allocate + burn\" token sales over \"mint\" token sales. In this case the whole token supply is created with the token contract. Then one gives `approve()` for the crowdsale contract and the crowdsale contract does `transferFrom()`.\r\n\r\nhttps://github.com/TokenMarketNet/ico/blob/master/contracts/AllocatedCrowdsale.sol#L54",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315206201/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315207622",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/310#issuecomment-315207622",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/310",
    "id": 315207622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTIwNzYyMg==",
    "user": {
      "login": "jakub-wojciechowski",
      "id": 27825272,
      "node_id": "MDQ6VXNlcjI3ODI1Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/27825272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakub-wojciechowski",
      "html_url": "https://github.com/jakub-wojciechowski",
      "followers_url": "https://api.github.com/users/jakub-wojciechowski/followers",
      "following_url": "https://api.github.com/users/jakub-wojciechowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakub-wojciechowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakub-wojciechowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakub-wojciechowski/subscriptions",
      "organizations_url": "https://api.github.com/users/jakub-wojciechowski/orgs",
      "repos_url": "https://api.github.com/users/jakub-wojciechowski/repos",
      "events_url": "https://api.github.com/users/jakub-wojciechowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakub-wojciechowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T21:30:10Z",
    "updated_at": "2017-07-13T21:30:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "I totally agree. This is exactly the scenario that I'm describing in the 1. comment. Happy to hear that you have similar views. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315207622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315208784",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/310#issuecomment-315208784",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/310",
    "id": 315208784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTIwODc4NA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T21:35:37Z",
    "updated_at": "2017-07-13T21:35:37Z",
    "author_association": "MEMBER",
    "body": "I forgot to comment on that, but yeah I completely agree that we should make Crowdsale more generic! We want to stay pragmatic though, and not abstract more than people need. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315208784/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315209701",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/310#issuecomment-315209701",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/310",
    "id": 315209701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTIwOTcwMQ==",
    "user": {
      "login": "miohtama",
      "id": 49922,
      "node_id": "MDQ6VXNlcjQ5OTIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/49922?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/miohtama",
      "html_url": "https://github.com/miohtama",
      "followers_url": "https://api.github.com/users/miohtama/followers",
      "following_url": "https://api.github.com/users/miohtama/following{/other_user}",
      "gists_url": "https://api.github.com/users/miohtama/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/miohtama/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/miohtama/subscriptions",
      "organizations_url": "https://api.github.com/users/miohtama/orgs",
      "repos_url": "https://api.github.com/users/miohtama/repos",
      "events_url": "https://api.github.com/users/miohtama/events{/privacy}",
      "received_events_url": "https://api.github.com/users/miohtama/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T21:39:58Z",
    "updated_at": "2017-07-13T21:39:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "For 2. Precondition oriented programming it's more about the coding style. In some point you hit the limits of Solidity language design. When you have a lot of precondition checks the function declarations grow longish. In this point you start to act against the original precondition oriented idea to make the code more readable. Furthermore in some cases it makes sense for preconditions happen in a certain order, after function has taken some preparation steps to calculate variables together.\r\n\r\nBut in the end, I feel it's a matter of taste and one really should not care as long as the project as a whole takes one approach and follows it from the start to the end.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315209701/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/320366595",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/310#issuecomment-320366595",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/310",
    "id": 320366595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDM2NjU5NQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-04T22:27:01Z",
    "updated_at": "2017-08-04T22:27:16Z",
    "author_association": "MEMBER",
    "body": "- Moved 1 to #351.\r\n- Moved 4 and 5 to #352.\r\n- 3, 6 and 7 have been fixed in #312.\r\n- 2 and 9 we won't fix for the reasons @miohtama stated above. (The new `require` function makes preconditions in function bodies look much nicer.)\r\n- 8 doesn't make much sense to me because the only address allowed to send money to the contract is the crowdsale, so there is no risk of someone sending money at a different time. Additionally, a specific crowdsale might have more stages in its lifecycle than the `RefundVault` might care, e.g. if there is a prefunding period the refund vault behaves the same.\r\n- Regarding 11, I'd prefer to keep the simpler current behavior. I think we can expect people to want their money back, and do without the added complexity.\r\n- 12 would be nice but it seems non trivial to do. I will think about it. Allowing inheriting contracts to intercept state transitions sounds very attractive.\r\n- 13 is very broad but it's on my mind too. We tend to favor inheritance for reasons of gas costs and to make deployment simpler. We could open an issue about this or discuss it in slack.\r\n\r\nI love that you went through the code and proposed enhancements and things to discuss about it! Next time make sure to open separate issues so that we can discuss things separately and take action independently. ðŸ˜„",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/320366595/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
