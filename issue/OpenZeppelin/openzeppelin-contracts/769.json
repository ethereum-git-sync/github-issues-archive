{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/769",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/769/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/769/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/769/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/769",
  "id": 299450496,
  "node_id": "MDU6SXNzdWUyOTk0NTA0OTY=",
  "number": 769,
  "title": "Create a simple MultiOwnable ownership contract",
  "user": {
    "login": "maraoz",
    "id": 287189,
    "node_id": "MDQ6VXNlcjI4NzE4OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/287189?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maraoz",
    "html_url": "https://github.com/maraoz",
    "followers_url": "https://api.github.com/users/maraoz/followers",
    "following_url": "https://api.github.com/users/maraoz/following{/other_user}",
    "gists_url": "https://api.github.com/users/maraoz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maraoz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maraoz/subscriptions",
    "organizations_url": "https://api.github.com/users/maraoz/orgs",
    "repos_url": "https://api.github.com/users/maraoz/repos",
    "events_url": "https://api.github.com/users/maraoz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maraoz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650860,
      "node_id": "MDU6TGFiZWw1MDM2NTA4NjA=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/feature",
      "name": "feature",
      "color": "b9db64",
      "default": false,
      "description": "New contracts, functions, or helpers."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2018-02-22T17:58:13Z",
  "updated_at": "2019-07-12T23:03:12Z",
  "closed_at": "2019-07-12T23:03:12Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## üéâ Description\r\n\r\nThe recommended way to implement multi-user ownership of a contract is to simply use `Ownable`, passing a multisig contract (e.g https://github.com/gnosis/MultiSigWallet) as the `owner`. However, I think it would be educational to provide a `MultiOwnable` contract that simply receives the constructor parameters for a `MultiSigWallet`, instantiates that, and then passes it as the owner of the contract. \r\n\r\nExample: (untested)\r\n```\r\npragma solidity ^0.4.18;\r\n\r\nimport 'gnosis/MultiSigWallet.sol';\r\nimport \"./Ownable.sol\";\r\n\r\ncontract MultiOwnable is Ownable {\r\n  function MultiOwnable(address[] _owners, uint _required) public Ownable() {\r\n    MultiSigWallet ms = new MultiSigWallet(_owners, _required);\r\n    transferOwnership(ms);\r\n  }\r\n}\r\n```\r\n\r\nThoughts?\r\n\r\n- [ ] üêõ This is a bug report.\r\n- [x] üìà This is a feature request.\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/769/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/769/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/367770321",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/769#issuecomment-367770321",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/769",
    "id": 367770321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzc3MDMyMQ==",
    "user": {
      "login": "buybackoff",
      "id": 489852,
      "node_id": "MDQ6VXNlcjQ4OTg1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/489852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buybackoff",
      "html_url": "https://github.com/buybackoff",
      "followers_url": "https://api.github.com/users/buybackoff/followers",
      "following_url": "https://api.github.com/users/buybackoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/buybackoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buybackoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buybackoff/subscriptions",
      "organizations_url": "https://api.github.com/users/buybackoff/orgs",
      "repos_url": "https://api.github.com/users/buybackoff/repos",
      "events_url": "https://api.github.com/users/buybackoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buybackoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-22T18:12:01Z",
    "updated_at": "2018-02-22T18:12:01Z",
    "author_association": "NONE",
    "body": "We are doing exactly that with the Gnosis contract here: https://github.com/dbrainio/Soltsice/blob/master/contracts/MultiOwnable.sol\r\n\r\nThree are two access levels: onlyWallet for consensus and onlyOwner for any owner. The contract also implements pausable: any owner could call pause, but only majority could unpause. Imagine one owner is pawned, then you do not want to wait for majority and just pause ASAP to have time to disable the hacked owner.\r\n\r\nThere is also BotManageable contract for backend bots managing contacts. We assume that they could always be hacked and design contacts in such a way that owners could quickly pause a contract until we disable a bot and enable another one.\r\n\r\nI am writing docs now, release is coming next week.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/367770321/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/368411024",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/769#issuecomment-368411024",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/769",
    "id": 368411024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODQxMTAyNA==",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-26T07:18:54Z",
    "updated_at": "2018-02-26T07:18:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@buybackoff @maraoz look at one more universal Multiownable implementation: https://github.com/bitclave/Multiownable\r\n\r\nDo you think it is a good idea to add it to the zepplein-solidity library?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/368411024/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/368412421",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/769#issuecomment-368412421",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/769",
    "id": 368412421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODQxMjQyMQ==",
    "user": {
      "login": "buybackoff",
      "id": 489852,
      "node_id": "MDQ6VXNlcjQ4OTg1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/489852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buybackoff",
      "html_url": "https://github.com/buybackoff",
      "followers_url": "https://api.github.com/users/buybackoff/followers",
      "following_url": "https://api.github.com/users/buybackoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/buybackoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buybackoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buybackoff/subscriptions",
      "organizations_url": "https://api.github.com/users/buybackoff/orgs",
      "repos_url": "https://api.github.com/users/buybackoff/repos",
      "events_url": "https://api.github.com/users/buybackoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buybackoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-26T07:26:49Z",
    "updated_at": "2018-02-26T07:26:49Z",
    "author_association": "NONE",
    "body": "@k06a I've seen this but it looks like reinventing a wheel. Gnosis's MultiSig has convenient GUI, was audited/reviewed probably many times and trusted by many. It's de-facto the standard and even this repository recommends to use it instead of creating a new one.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/368412421/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/369365921",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/769#issuecomment-369365921",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/769",
    "id": 369365921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTM2NTkyMQ==",
    "user": {
      "login": "tavakyan",
      "id": 10625944,
      "node_id": "MDQ6VXNlcjEwNjI1OTQ0",
      "avatar_url": "https://avatars.githubusercontent.com/u/10625944?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tavakyan",
      "html_url": "https://github.com/tavakyan",
      "followers_url": "https://api.github.com/users/tavakyan/followers",
      "following_url": "https://api.github.com/users/tavakyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/tavakyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tavakyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tavakyan/subscriptions",
      "organizations_url": "https://api.github.com/users/tavakyan/orgs",
      "repos_url": "https://api.github.com/users/tavakyan/repos",
      "events_url": "https://api.github.com/users/tavakyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tavakyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-28T20:06:15Z",
    "updated_at": "2018-02-28T20:06:15Z",
    "author_association": "NONE",
    "body": "@buybackoff would you say in this context for integrating with zeppelin, considering a multi-ownable implementation like in Solistice, is the 'pausable' feature necessary? It's not immediately apparent to me why this feature is in multiownable. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/369365921/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/369371679",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/769#issuecomment-369371679",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/769",
    "id": 369371679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTM3MTY3OQ==",
    "user": {
      "login": "buybackoff",
      "id": 489852,
      "node_id": "MDQ6VXNlcjQ4OTg1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/489852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buybackoff",
      "html_url": "https://github.com/buybackoff",
      "followers_url": "https://api.github.com/users/buybackoff/followers",
      "following_url": "https://api.github.com/users/buybackoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/buybackoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buybackoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buybackoff/subscriptions",
      "organizations_url": "https://api.github.com/users/buybackoff/orgs",
      "repos_url": "https://api.github.com/users/buybackoff/repos",
      "events_url": "https://api.github.com/users/buybackoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buybackoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-28T20:27:31Z",
    "updated_at": "2018-02-28T20:29:49Z",
    "author_association": "NONE",
    "body": "@tavakyan it is an example that some sensitive action requires majority approval, but an opposite one could work just with a single owner. We need this so I added the functionality inside the contract (in this case overriding OZ's Pausible is not simpler). But the core idea is two modifiers `onlyWallet` and `onlyOwner`. I have reduced the wallet interface to a [single method](https://github.com/dbrainio/Soltsice/blob/master/contracts/MultiOwnable.sol#L6), so not only wallet from Gnosis could work.\r\n\r\nI believe such asymmetric Pausible is quite common requirement for cases when something could go wrong.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/369371679/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/369438813",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/769#issuecomment-369438813",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/769",
    "id": 369438813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTQzODgxMw==",
    "user": {
      "login": "tavakyan",
      "id": 10625944,
      "node_id": "MDQ6VXNlcjEwNjI1OTQ0",
      "avatar_url": "https://avatars.githubusercontent.com/u/10625944?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tavakyan",
      "html_url": "https://github.com/tavakyan",
      "followers_url": "https://api.github.com/users/tavakyan/followers",
      "following_url": "https://api.github.com/users/tavakyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/tavakyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tavakyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tavakyan/subscriptions",
      "organizations_url": "https://api.github.com/users/tavakyan/orgs",
      "repos_url": "https://api.github.com/users/tavakyan/repos",
      "events_url": "https://api.github.com/users/tavakyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tavakyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-01T01:03:30Z",
    "updated_at": "2018-03-01T01:31:03Z",
    "author_association": "NONE",
    "body": "I tried to structure it out by integrating your implementation @buybackoff .  Its one possible way and the multiowner contract is fairly simple. \r\n\r\nSee: https://github.com/tavakyan/zeppelin-solidity/tree/MultiOwnable-769/contracts/ownership\r\n\r\nI separated the MultiPausable since they have a implementation of Pausable. \r\n\r\nIt might be easier to view through here: https://github.com/tavakyan/zeppelin-solidity/pull/1/files I didn't write the tests and stuff, but its a general approach. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/369438813/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/369529045",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/769#issuecomment-369529045",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/769",
    "id": 369529045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTUyOTA0NQ==",
    "user": {
      "login": "buybackoff",
      "id": 489852,
      "node_id": "MDQ6VXNlcjQ4OTg1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/489852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buybackoff",
      "html_url": "https://github.com/buybackoff",
      "followers_url": "https://api.github.com/users/buybackoff/followers",
      "following_url": "https://api.github.com/users/buybackoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/buybackoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buybackoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buybackoff/subscriptions",
      "organizations_url": "https://api.github.com/users/buybackoff/orgs",
      "repos_url": "https://api.github.com/users/buybackoff/repos",
      "events_url": "https://api.github.com/users/buybackoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buybackoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-01T09:19:59Z",
    "updated_at": "2018-03-01T09:19:59Z",
    "author_association": "NONE",
    "body": "@tavakyan this looks good. If I were to send a PR I would split in a similar way. What concerned me initially that when inheriting `Ownable` we store wallet as the owner field but then override `isOwner` modifier to mean something different. Probably we could come up with other naming. E.g. if a wallet with majority is actually an owner then we could leave the modifier `onlyOwner` to mean the same thing, but we could add `onlyPriviledged` for a single owner. This will also help with default security, e.g. in your MultiPausible you override `unpause` to require higher security, but it's better I think to explicitly require  lower security and leave the defualt the most strict and intuitive.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/369529045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/369642220",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/769#issuecomment-369642220",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/769",
    "id": 369642220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTY0MjIyMA==",
    "user": {
      "login": "tavakyan",
      "id": 10625944,
      "node_id": "MDQ6VXNlcjEwNjI1OTQ0",
      "avatar_url": "https://avatars.githubusercontent.com/u/10625944?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tavakyan",
      "html_url": "https://github.com/tavakyan",
      "followers_url": "https://api.github.com/users/tavakyan/followers",
      "following_url": "https://api.github.com/users/tavakyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/tavakyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tavakyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tavakyan/subscriptions",
      "organizations_url": "https://api.github.com/users/tavakyan/orgs",
      "repos_url": "https://api.github.com/users/tavakyan/repos",
      "events_url": "https://api.github.com/users/tavakyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tavakyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-01T16:11:07Z",
    "updated_at": "2018-03-01T16:11:07Z",
    "author_association": "NONE",
    "body": "@buybackoff seems like a sensible suggestion.  It is indeed a source of confusion and I think that would clarify things for clients. I don't mind finishing the tests and making the changes for a PR if other people think this is a useful design or can just leave it up to the core team / community to decide. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/369642220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/511058455",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/769#issuecomment-511058455",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/769",
    "id": 511058455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTA1ODQ1NQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-12T23:03:12Z",
    "updated_at": "2019-07-12T23:03:12Z",
    "author_association": "MEMBER",
    "body": "Our current position on this is that complex authorization mechanisms like multisig should be separate from the contract they manage. So contracts should only have a single owner which is a itself a multisig wallet.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/511058455/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
