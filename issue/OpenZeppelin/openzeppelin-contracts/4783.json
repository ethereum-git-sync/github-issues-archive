{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4783",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4783/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4783/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4783/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4783",
  "id": 2030490521,
  "node_id": "I_kwDOA9tCBs55BtOZ",
  "number": 4783,
  "title": "Feature Request: Introduce Time Lock Mechanism in Ownable2Step Contract",
  "user": {
    "login": "njrapidinnovation",
    "id": 68365436,
    "node_id": "MDQ6VXNlcjY4MzY1NDM2",
    "avatar_url": "https://avatars.githubusercontent.com/u/68365436?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/njrapidinnovation",
    "html_url": "https://github.com/njrapidinnovation",
    "followers_url": "https://api.github.com/users/njrapidinnovation/followers",
    "following_url": "https://api.github.com/users/njrapidinnovation/following{/other_user}",
    "gists_url": "https://api.github.com/users/njrapidinnovation/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/njrapidinnovation/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/njrapidinnovation/subscriptions",
    "organizations_url": "https://api.github.com/users/njrapidinnovation/orgs",
    "repos_url": "https://api.github.com/users/njrapidinnovation/repos",
    "events_url": "https://api.github.com/users/njrapidinnovation/events{/privacy}",
    "received_events_url": "https://api.github.com/users/njrapidinnovation/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-12-07T11:02:03Z",
  "updated_at": "2023-12-12T04:12:48Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nThe current Ownable2Step contract in Solidity provides a robust framework for ownership management with a two-step transfer process. However, there's an opportunity to enhance its security by integrating a `Time Lock mechanism` for ownership transfer which will work as an extension of current Ownable2Step implementation. This feature is motivated by the need to prevent rapid, potentially malicious ownership changes and to allow ample time for verification and intervention if needed. Adding a time lock would provide a safer, more controlled environment for ownership transitions, especially critical in scenarios where the contract controls significant assets or functionalities.\r\n\r\n**üìù Details**\r\nThe proposed feature involves extending the Ownable2Step contract to include a time lock functionality for ownership transfers. When the current owner initiates a transfer, the new owner will only be able to claim ownership after a predefined time period has elapsed. This delay period should be configurable and could be set during contract deployment or through a separate owner-only function.\r\n\r\nKey aspects to consider:\r\n\r\n- Implementation of a time delay variable to store the duration of the lock period.\r\n- Modification of the transferOwnership function to record the timestamp when the transfer is initiated.\r\n- Adjustment of the acceptOwnership function to check if the time lock period has passed before allowing the transfer to \r\n   complete.\r\n- Addition of events to log when the time lock starts and ends.\r\n\r\n**Possible Use Cases**\r\n\r\n- In DAOs or governance contracts, to prevent abrupt changes in leadership or policies.\r\n- In any contract where ownership change can significantly impact users or stakeholders, ensuring a time buffer for due diligence, \r\n   community input, or oversight by a regulatory body.\r\n- In situations where an ownership transfer is large and complex, requiring time for proper handover and transition.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4783/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4783/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1847928149",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4783#issuecomment-1847928149",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4783",
    "id": 1847928149,
    "node_id": "IC_kwDOA9tCBs5uJSVV",
    "user": {
      "login": "ernestognw",
      "id": 33379285,
      "node_id": "MDQ6VXNlcjMzMzc5Mjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/33379285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ernestognw",
      "html_url": "https://github.com/ernestognw",
      "followers_url": "https://api.github.com/users/ernestognw/followers",
      "following_url": "https://api.github.com/users/ernestognw/following{/other_user}",
      "gists_url": "https://api.github.com/users/ernestognw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ernestognw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ernestognw/subscriptions",
      "organizations_url": "https://api.github.com/users/ernestognw/orgs",
      "repos_url": "https://api.github.com/users/ernestognw/repos",
      "events_url": "https://api.github.com/users/ernestognw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ernestognw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-08T22:37:59Z",
    "updated_at": "2023-12-08T22:37:59Z",
    "author_association": "MEMBER",
    "body": "Hey @njrapidinnovation, have you checked [AccessManager](https://docs.openzeppelin.com/contracts/5.x/access-control#access-management) or [AccessControlDefaultAdminRules](https://docs.openzeppelin.com/contracts/5.x/api/access#AccessControlDefaultAdminRules)?\r\n\r\nThe former includes a built-in delay/timelock mechanism for every role, and the second has built-in delay/timelock for the `DEFAULT_ADMIN_ROLE`. \r\n\r\nI don't think we can replace Ownable2Steps with this mechanism, since it's a breaking change and adding timelock is a redundant functionality considering the alternatives available.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1847928149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1851270109",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4783#issuecomment-1851270109",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4783",
    "id": 1851270109,
    "node_id": "IC_kwDOA9tCBs5uWCPd",
    "user": {
      "login": "njrapidinnovation",
      "id": 68365436,
      "node_id": "MDQ6VXNlcjY4MzY1NDM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/68365436?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njrapidinnovation",
      "html_url": "https://github.com/njrapidinnovation",
      "followers_url": "https://api.github.com/users/njrapidinnovation/followers",
      "following_url": "https://api.github.com/users/njrapidinnovation/following{/other_user}",
      "gists_url": "https://api.github.com/users/njrapidinnovation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njrapidinnovation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njrapidinnovation/subscriptions",
      "organizations_url": "https://api.github.com/users/njrapidinnovation/orgs",
      "repos_url": "https://api.github.com/users/njrapidinnovation/repos",
      "events_url": "https://api.github.com/users/njrapidinnovation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njrapidinnovation/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-12T04:12:16Z",
    "updated_at": "2023-12-12T04:12:48Z",
    "author_association": "NONE",
    "body": "Hey @ernestognw ,\r\n\r\nYou're absolutely right, we don't necessarily need to replace the current Ownable2Steps implementation. Instead, we can create an `extension` or additional functionality that utilizes the existing Ownable2Steps  mechanisms for introducing the delay/timelock feature. \r\n\r\nThis approach would allow us to maintain compatibility with the current setup while providing the desired functionality as an optional extension for those who might need it.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1851270109/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
