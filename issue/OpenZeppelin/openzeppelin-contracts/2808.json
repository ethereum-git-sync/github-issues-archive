{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2808",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2808/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2808/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2808/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2808",
  "id": 958419116,
  "node_id": "MDU6SXNzdWU5NTg0MTkxMTY=",
  "number": 2808,
  "title": "Make ifAdmin modifier virtual",
  "user": {
    "login": "pertsev",
    "id": 11399003,
    "node_id": "MDQ6VXNlcjExMzk5MDAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/11399003?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pertsev",
    "html_url": "https://github.com/pertsev",
    "followers_url": "https://api.github.com/users/pertsev/followers",
    "following_url": "https://api.github.com/users/pertsev/following{/other_user}",
    "gists_url": "https://api.github.com/users/pertsev/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pertsev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pertsev/subscriptions",
    "organizations_url": "https://api.github.com/users/pertsev/orgs",
    "repos_url": "https://api.github.com/users/pertsev/repos",
    "events_url": "https://api.github.com/users/pertsev/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pertsev/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-08-02T18:54:57Z",
  "updated_at": "2021-09-16T19:23:37Z",
  "closed_at": "2021-09-16T19:23:37Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nIn the current implementation, it's not possible to change ifAdmin behavior so we stuck with one specific admin that has to call the proxy, which is not good.\r\n\r\n**üìù Details**\r\nThis tiny upgrade would allow `ifAdmin` modifier overriding to change its logic.\r\n\r\n**Examples**\r\n1. In my specific case, I would like to have an upgradeable contract on Optimism L2 with an admin on L1. So the `ifAdmin` looks like the following:\r\n```js\r\nmodifier ifAdmin() override {\r\n  if (msg.sender == address(messenger) && messenger.xDomainMessageSender() == _admin()) {\r\n    _;\r\n  } else {\r\n    _fallback();\r\n  }\r\n}\r\n```\r\nfull example [here](https://github.com/tornadocash/tornado-pool/blob/optimism/contracts/CrossChainUpgradeableProxy.sol#L30-L36)\r\n\r\n2. The proxy can have several admins that are not EOA but contracts. In this case ifAdmin checks `msg.sender` against array of addresses.\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2808/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2808/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/891403345",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2808#issuecomment-891403345",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2808",
    "id": 891403345,
    "node_id": "IC_kwDOA9tCBs41IbxR",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-02T23:40:30Z",
    "updated_at": "2021-08-02T23:40:30Z",
    "author_association": "COLLABORATOR",
    "body": "Hello, \r\n\r\nUsually, I would argue that the modifier should not be virtual, and that instead it is msg.sender that should be replaced with `_msgSender()` from `Context` which could be overridden.\r\n\r\nHowever, `Context` is not part of `TransparentUpgradeableProxy`. Making Context part of it would be dangerous if it is overloaded with an implementation that uses some storage (only immutable variable would be safe).\r\n\r\n@frangio, any opinion ?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/891403345/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/900110250",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2808#issuecomment-900110250",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2808",
    "id": 900110250,
    "node_id": "IC_kwDOA9tCBs41ppeq",
    "user": {
      "login": "pertsev",
      "id": 11399003,
      "node_id": "MDQ6VXNlcjExMzk5MDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11399003?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pertsev",
      "html_url": "https://github.com/pertsev",
      "followers_url": "https://api.github.com/users/pertsev/followers",
      "following_url": "https://api.github.com/users/pertsev/following{/other_user}",
      "gists_url": "https://api.github.com/users/pertsev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pertsev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pertsev/subscriptions",
      "organizations_url": "https://api.github.com/users/pertsev/orgs",
      "repos_url": "https://api.github.com/users/pertsev/repos",
      "events_url": "https://api.github.com/users/pertsev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pertsev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-17T08:43:56Z",
    "updated_at": "2021-08-17T08:43:56Z",
    "author_association": "NONE",
    "body": "@Amxx should we mention some else to make it happen?\r\n@frangio any thoughts?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/900110250/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/921182470",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2808#issuecomment-921182470",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2808",
    "id": 921182470,
    "node_id": "IC_kwDOA9tCBs426CEG",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-16T19:23:37Z",
    "updated_at": "2021-09-16T19:23:37Z",
    "author_association": "MEMBER",
    "body": "Sorry, I just saw this.\r\n\r\nI would recommend implementing this with a custom `ProxyAdmin` contract, rather than a custom proxy. I think it is safer to keep the proxy exactly like it is and has been tried and tested, rather than customizing it. The recommended deployment for a Transparent proxy is to set a `ProxyAdmin` instance as the admin, and the `ProxyAdmin` can be made Optimism-aware quite easily.\r\n\r\nA sketch (will not compile without some changes):\r\n\r\n```solidity\r\ncontract OptimismContext is Context {\r\n    function _msgSender() override returns (address) {\r\n        if (msg.sender == address(messenger)) {\r\n            return messenger.xDomainMessageSender();\r\n        }\r\n    }\r\n}\r\n\r\ncontract OptimismProxyAdmin is ProxyAdmin, OptimismContext {\r\n   // overrides \r\n}\r\n```\r\n\r\nAs for making this modifier virtual, unless a really good use case comes up, I would prefer to keep it non-virtual, because I don't think we'd support customizations of this contract.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/921182470/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
