{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1552",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1552/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1552/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1552/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1552",
  "id": 390310082,
  "node_id": "MDU6SXNzdWUzOTAzMTAwODI=",
  "number": 1552,
  "title": "Remove unnecessary SafeMath calls",
  "user": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1000207718,
      "node_id": "MDU6TGFiZWwxMDAwMjA3NzE4",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/contracts",
      "name": "contracts",
      "color": "1d76db",
      "default": false,
      "description": "Smart contract code."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/6",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/6",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/6/labels",
    "id": 3873641,
    "node_id": "MDk6TWlsZXN0b25lMzg3MzY0MQ==",
    "number": 6,
    "title": "v2.2",
    "description": "",
    "creator": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 23,
    "state": "closed",
    "created_at": "2018-12-05T15:53:22Z",
    "updated_at": "2019-03-18T16:32:13Z",
    "due_on": "2019-03-05T08:00:00Z",
    "closed_at": "2019-03-18T16:32:13Z"
  },
  "comments": 5,
  "created_at": "2018-12-12T16:39:10Z",
  "updated_at": "2019-01-21T20:24:52Z",
  "closed_at": "2019-01-21T20:24:52Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Its usage has become ubiquitous, but there are multiple instances where it is not needed. E.g. in `ERC721`:\r\n\r\n```\r\nfunction _mint(address to, uint256 tokenId) internal {\r\n  ..\r\n  _ownedTokensCount[to] = _ownedTokensCount[to].add(1);\r\n  ..\r\n}\r\n```\r\n\r\nThat is the only place where `_ownedTokensCount[to]` is incremented: 2^256 calls to `_mint` are needed to make it overflow, making these calls more expensive by adding the check makes no sense.",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1552/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1552/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/446689995",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1552#issuecomment-446689995",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1552",
    "id": 446689995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjY4OTk5NQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T18:20:21Z",
    "updated_at": "2018-12-12T18:20:21Z",
    "author_association": "MEMBER",
    "body": "Hm, we've usually been more of the \"use safemath everywhere to be sure\" camp. I think we should tackle this by using something like the `Counter` type that we have, although it doesn't have a `decrement` function that is needed for transfers and burning. Thoughts?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/446689995/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/447214426",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1552#issuecomment-447214426",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1552",
    "id": 447214426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzIxNDQyNg==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-14T05:04:21Z",
    "updated_at": "2018-12-14T05:04:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "That sounds like a great idea! I run some preliminary tests and the concept seems to work.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/447214426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/449293410",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1552#issuecomment-449293410",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1552",
    "id": 449293410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTI5MzQxMA==",
    "user": {
      "login": "Aniket-Engg",
      "id": 30843294,
      "node_id": "MDQ6VXNlcjMwODQzMjk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/30843294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Aniket-Engg",
      "html_url": "https://github.com/Aniket-Engg",
      "followers_url": "https://api.github.com/users/Aniket-Engg/followers",
      "following_url": "https://api.github.com/users/Aniket-Engg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Aniket-Engg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Aniket-Engg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Aniket-Engg/subscriptions",
      "organizations_url": "https://api.github.com/users/Aniket-Engg/orgs",
      "repos_url": "https://api.github.com/users/Aniket-Engg/repos",
      "events_url": "https://api.github.com/users/Aniket-Engg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Aniket-Engg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-21T07:42:05Z",
    "updated_at": "2018-12-21T07:42:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think we can add `increment()` and `decrement()` in Math.sol to increase of decrease a number by 1.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/449293410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/449484655",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1552#issuecomment-449484655",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1552",
    "id": 449484655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTQ4NDY1NQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-21T19:58:51Z",
    "updated_at": "2018-12-21T20:02:23Z",
    "author_association": "MEMBER",
    "body": "But `SafeMath.increment` would still need to check for overflow to be safe, because `UINT256_MAX.increment()` overflows.\r\n\r\nMy proposal is that since the `Counter` type can only be incremented, it will never overflow. This is not entirely true though because Solidity struct members can be written so a `Counter` instance _could_ be made to overflow if used incorrectly.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/449484655/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/449485579",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1552#issuecomment-449485579",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1552",
    "id": 449485579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTQ4NTU3OQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-21T20:03:19Z",
    "updated_at": "2018-12-21T20:03:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "We haven't yet found a use case for `Counter` though, have we? If it had methods to both increment and decrement by one, we could remove the `require` from `inc`, since it will never overflow. If there is indeed something that only ever increments, then we should create this new thing (`IncDec`).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/449485579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
