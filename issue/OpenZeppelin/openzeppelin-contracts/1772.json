{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1772",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1772/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1772/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1772/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1772",
  "id": 448391403,
  "node_id": "MDU6SXNzdWU0NDgzOTE0MDM=",
  "number": 1772,
  "title": "Proposal to revamp Roles",
  "user": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1000207718,
      "node_id": "MDU6TGFiZWwxMDAwMjA3NzE4",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/contracts",
      "name": "contracts",
      "color": "1d76db",
      "default": false,
      "description": "Smart contract code."
    },
    {
      "id": 1000230196,
      "node_id": "MDU6TGFiZWwxMDAwMjMwMTk2",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/breaking%20change",
      "name": "breaking change",
      "color": "b60205",
      "default": false,
      "description": "Changes that break backwards compatibility of the public API."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/8",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/8",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/8/labels",
    "id": 4174606,
    "node_id": "MDk6TWlsZXN0b25lNDE3NDYwNg==",
    "number": 8,
    "title": "v3.0",
    "description": "",
    "creator": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 19,
    "state": "closed",
    "created_at": "2019-03-26T18:50:56Z",
    "updated_at": "2020-06-18T23:23:01Z",
    "due_on": null,
    "closed_at": "2020-06-18T23:23:01Z"
  },
  "comments": 5,
  "created_at": "2019-05-25T00:16:34Z",
  "updated_at": "2020-03-16T20:41:25Z",
  "closed_at": "2020-03-16T20:41:25Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "`RBAC` was removed after https://github.com/OpenZeppelin/openzeppelin-solidity/issues/1090 due to issues with having strings be keys in the mapping, and replaces with `Roles` in https://github.com/OpenZeppelin/openzeppelin-solidity/pull/1291. Integer ids were considered, but ultimately discarded, partly because of a lack of an id allocation mechanism (hash of strings?).\r\n\r\nThe new scheme works, but it has a couple wrinkles. Each new role requires the creation of a new role contract, which will be almost a carbon copy of all other roles. Additionally, they all add their own functions, polluting the contract's ABI and leading to duplicated bytecode. We've considered autogenerating these contracts (https://github.com/OpenZeppelin/openzeppelin-solidity/issues/1290), but that requires new tooling, documentation, a pre-compile step, etc., all of which are best avoided. Finally, role reuse may lead to unexpected situations (e.g. both `ERC20Mintable` and `ERC721Mintable` use the same `MinterRole`).\r\n\r\nI propose an alternative scheme, where we opt for an approach similar to `RBAC`'s (although I'd propose a more friendly name, perhaps `RoleChecker`?), but get rid of the id issue altogether by using *automatically generated ids*.\r\n\r\n```\r\ncontract RoleChecker {\r\n  mapping (uint256 => Roles.Role) roles;\r\n  Counters.Counter counter;\r\n\r\n  function hasRole(uint256 id) view returns (bool) { return roles[id]; }\r\n\r\n  function newRole() returns (uint256) {\r\n    counter.increment();\r\n    return keccak(address(this), counter.current());\r\n  }\r\n}\r\n```\r\n\r\nEach contract that requires roles simply inherits from `RoleChecker` and creates whichever roles it needs.\r\n\r\n```\r\ncontract ERC20Mintable is RoleChecker {\r\n   uint256 _erc20mintRoleId;\r\n\r\n   constructor() {\r\n     _erc20mintRoleId = newRole();\r\n   } \r\n\r\n  function mint(...) onlyRole(_erc20mintRoleId) {\r\n     ...\r\n  }\r\n\r\n  function erc20mintRoleId() view returns(uint256) {\r\n    return _erc20mintRoleId;\r\n  }\r\n}\r\n```\r\n\r\nThe only added boilerplate is a public getter for this id, so that users can retrieve it and use it to e.g. call `addRole(id)`, `hasRole(id, account)`, etc.\r\n\r\nAnd since each role id is created with a hash of an integer (autoincremented by `Counter`) _and_ the contract's address, they will be unique for each contract. Preventing these clashes will reduce user error, where someone may mistakenly use a different contract's role ids.",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1772/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1772/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/521689217",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1772#issuecomment-521689217",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1772",
    "id": 521689217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTY4OTIxNw==",
    "user": {
      "login": "alanarvelo",
      "id": 29428052,
      "node_id": "MDQ6VXNlcjI5NDI4MDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/29428052?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alanarvelo",
      "html_url": "https://github.com/alanarvelo",
      "followers_url": "https://api.github.com/users/alanarvelo/followers",
      "following_url": "https://api.github.com/users/alanarvelo/following{/other_user}",
      "gists_url": "https://api.github.com/users/alanarvelo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alanarvelo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alanarvelo/subscriptions",
      "organizations_url": "https://api.github.com/users/alanarvelo/orgs",
      "repos_url": "https://api.github.com/users/alanarvelo/repos",
      "events_url": "https://api.github.com/users/alanarvelo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alanarvelo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-15T15:44:25Z",
    "updated_at": "2019-08-15T15:44:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @nventuro @frangio I will take a deeper look into this and revert with questions.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/521689217/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/522280379",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1772#issuecomment-522280379",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1772",
    "id": 522280379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjI4MDM3OQ==",
    "user": {
      "login": "alanarvelo",
      "id": 29428052,
      "node_id": "MDQ6VXNlcjI5NDI4MDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/29428052?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alanarvelo",
      "html_url": "https://github.com/alanarvelo",
      "followers_url": "https://api.github.com/users/alanarvelo/followers",
      "following_url": "https://api.github.com/users/alanarvelo/following{/other_user}",
      "gists_url": "https://api.github.com/users/alanarvelo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alanarvelo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alanarvelo/subscriptions",
      "organizations_url": "https://api.github.com/users/alanarvelo/orgs",
      "repos_url": "https://api.github.com/users/alanarvelo/repos",
      "events_url": "https://api.github.com/users/alanarvelo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alanarvelo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-18T00:28:42Z",
    "updated_at": "2019-08-18T00:30:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @nventuro and @frangio made a PR with the creation of `RoleChecker.sol`, and a slight addition to `Roles.sol`, so we can discuss the implementation of this over the code — with inline comments and all that good stuff. \r\n\r\nCombined nventuro's suggestion with some of the RCAB principles. Let me know what you guys think.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/522280379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/574334558",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1772#issuecomment-574334558",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1772",
    "id": 574334558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDMzNDU1OA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-14T19:30:19Z",
    "updated_at": "2020-01-14T19:30:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "We'll probably want to use [`immutable`](https://github.com/ethereum/solidity/issues/3835) to store the role ids, making the library both safer and cheaper.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/574334558/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/579445324",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1772#issuecomment-579445324",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1772",
    "id": 579445324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ0NTMyNA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-28T20:40:40Z",
    "updated_at": "2020-01-28T20:40:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "A simple alternative to avoid the `getRoleId()` boilerplate is to attach a string identifier to each new role:\r\n\r\n```solidity\r\ncontract RoleChecker {\r\n    mapping (string => uint256) roleIds;\r\n\r\n    function newRole(string memory name) internal returns (uint256) {\r\n        uint256 id = _getNewId();\r\n        roleIds[name] = id;\r\n\r\n        return id;\r\n    }\r\n\r\n    function getRoleId(string memory name) external view returns (uint256) {\r\n        uint256 id = roleIds[name];\r\n        require(id != 0);\r\n        return id;\r\n    }\r\n}\r\n\r\ncontract ERC20Mintable is ERC20, RoleChecker {\r\n    uint256 minterRoleId;\r\n\r\n    constructor() public {\r\n        minterRoleId = RoleChecker.newRole('minter');\r\n    }\r\n\r\n    function mint() external onlyRole(minterRoleId) {\r\n        ...\r\n    }\r\n}\r\n```\r\n\r\nAn external agent would call `contract.getRoleId('minter')` in order to check if an account has the role, or enumerate role bearers.\r\n\r\nA possible downside of this approach is that it opens up a subset of the issues from #1090: an malicious party could write `onlyRole(getRoleId('minter'))` and achieve a similar result. Making `getRoleId` `external` instead of `public` could alleviate this.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/579445324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/579964308",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1772#issuecomment-579964308",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1772",
    "id": 579964308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTk2NDMwOA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-29T21:18:25Z",
    "updated_at": "2020-01-29T21:18:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "With the migration to Solidity v0.6 arriving soon, we will need to tackle this issue as part of the upcoming v3.0 release.\r\n\r\nSince there are still multiple ideas out there, I created [Redesigning Access Control](https://forum.openzeppelin.com/t/redesigning-accesscontrol-for-the-openzeppelin-contracts/2177) on our forum to gather feedback about the different proposals, and settle on a high-level design we're comfortable with. Once we get to that point, we can continue work here.\r\n\r\nPlease participate in this process by sharing your ideas and experience, so we can design the best solution possible!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/579964308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
