{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1874",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1874/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1874/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1874/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1874",
  "id": 479244205,
  "node_id": "MDU6SXNzdWU0NzkyNDQyMDU=",
  "number": 1874,
  "title": "Securence of ERC20 transferFrom",
  "user": {
    "login": "andrewerf",
    "id": 26378793,
    "node_id": "MDQ6VXNlcjI2Mzc4Nzkz",
    "avatar_url": "https://avatars.githubusercontent.com/u/26378793?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/andrewerf",
    "html_url": "https://github.com/andrewerf",
    "followers_url": "https://api.github.com/users/andrewerf/followers",
    "following_url": "https://api.github.com/users/andrewerf/following{/other_user}",
    "gists_url": "https://api.github.com/users/andrewerf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/andrewerf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/andrewerf/subscriptions",
    "organizations_url": "https://api.github.com/users/andrewerf/orgs",
    "repos_url": "https://api.github.com/users/andrewerf/repos",
    "events_url": "https://api.github.com/users/andrewerf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/andrewerf/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-08-10T08:34:13Z",
  "updated_at": "2019-08-27T00:21:13Z",
  "closed_at": "2019-08-27T00:21:12Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Please explain, what prevents such kind of attack ?\r\n\r\nImagine Alice calls `approve(Contract.address, amount)` to invoke Contract' `method()` which withdraws from her address.\r\nThen imagine Bob has accidentally found it out, and he wants to prevent Alice invokes `method()`.\r\nSo he waits until Alice' `approve` transaction is mined, then calls `transferFrom(Alice.address, Contract.address, amount)` and pushes it faster then Alice pushes `method()`. In the end, Contract receives money, but `method` cannot be invoked because `allowance` now is zero. And so money is lost for Alice.",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1874/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1874/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/520267960",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1874#issuecomment-520267960",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1874",
    "id": 520267960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDI2Nzk2MA==",
    "user": {
      "login": "Skyge",
      "id": 27282380,
      "node_id": "MDQ6VXNlcjI3MjgyMzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27282380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Skyge",
      "html_url": "https://github.com/Skyge",
      "followers_url": "https://api.github.com/users/Skyge/followers",
      "following_url": "https://api.github.com/users/Skyge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Skyge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Skyge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Skyge/subscriptions",
      "organizations_url": "https://api.github.com/users/Skyge/orgs",
      "repos_url": "https://api.github.com/users/Skyge/repos",
      "events_url": "https://api.github.com/users/Skyge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Skyge/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-11T22:53:06Z",
    "updated_at": "2019-08-11T22:53:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@andrewerf  Hello! actually, when Alice calls \r\n```ts\r\napprove(Contract.address, amount)\r\n```\r\nit means only `Contract` can transfer token instead of Alice, so only `Contract` can call \r\n```ts\r\ntransferFrom(Alice.address, Contract.address, amount)\r\n```\r\nif Bob calls this approach `transferFrom()`, you can find at here: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol#L99, so it will fail due to not satisfying the conditions.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/520267960/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/520273998",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1874#issuecomment-520273998",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1874",
    "id": 520273998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDI3Mzk5OA==",
    "user": {
      "login": "Skyge",
      "id": 27282380,
      "node_id": "MDQ6VXNlcjI3MjgyMzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27282380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Skyge",
      "html_url": "https://github.com/Skyge",
      "followers_url": "https://api.github.com/users/Skyge/followers",
      "following_url": "https://api.github.com/users/Skyge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Skyge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Skyge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Skyge/subscriptions",
      "organizations_url": "https://api.github.com/users/Skyge/orgs",
      "repos_url": "https://api.github.com/users/Skyge/repos",
      "events_url": "https://api.github.com/users/Skyge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Skyge/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-12T00:30:12Z",
    "updated_at": "2019-08-12T00:57:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "By the way,  For support questions (rather than Feature Requests or Bug Reports), \r\nas @abcoathup 's suggestion that you can ask in the : [OpenZeppelin Community Forum](https://forum.openzeppelin.com/ ) that way the entire community can help answer your question.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/520273998/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/520416224",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1874#issuecomment-520416224",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1874",
    "id": 520416224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQxNjIyNA==",
    "user": {
      "login": "roleengineer",
      "id": 35062472,
      "node_id": "MDQ6VXNlcjM1MDYyNDcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35062472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roleengineer",
      "html_url": "https://github.com/roleengineer",
      "followers_url": "https://api.github.com/users/roleengineer/followers",
      "following_url": "https://api.github.com/users/roleengineer/following{/other_user}",
      "gists_url": "https://api.github.com/users/roleengineer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roleengineer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roleengineer/subscriptions",
      "organizations_url": "https://api.github.com/users/roleengineer/orgs",
      "repos_url": "https://api.github.com/users/roleengineer/repos",
      "events_url": "https://api.github.com/users/roleengineer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roleengineer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-12T13:04:02Z",
    "updated_at": "2019-08-12T13:04:02Z",
    "author_association": "NONE",
    "body": "> @andrewerf Hello! actually, when Alice calls\r\n> \r\n> ```ts\r\n> approve(Contract.address, amount)\r\n> ```\r\n> \r\n> it means only `Contract` can transfer token instead of Alice, so only `Contract` can call\r\n> \r\n> ```ts\r\n> transferFrom(Alice.address, Contract.address, amount)\r\n> ```\r\n> \r\n> if Bob calls this approach `transferFrom()`, you can find at here: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol#L99, so it will fail due to not satisfying the conditions.\r\n\r\nHi, I'm not an expert, and maybe answer on my question lays somethere in the docs, but I can't understand why firstly executes internal function _transfer and secondly _approve here \r\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol#L99, if only _approve throws the error and reverts tx. Do you think there is no situation when the _transfer function will success before tx reverts?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/520416224/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/520451151",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1874#issuecomment-520451151",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1874",
    "id": 520451151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQ1MTE1MQ==",
    "user": {
      "login": "Skyge",
      "id": 27282380,
      "node_id": "MDQ6VXNlcjI3MjgyMzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27282380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Skyge",
      "html_url": "https://github.com/Skyge",
      "followers_url": "https://api.github.com/users/Skyge/followers",
      "following_url": "https://api.github.com/users/Skyge/following{/other_user}",
      "gists_url": "https://api.github.com/users/Skyge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Skyge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Skyge/subscriptions",
      "organizations_url": "https://api.github.com/users/Skyge/orgs",
      "repos_url": "https://api.github.com/users/Skyge/repos",
      "events_url": "https://api.github.com/users/Skyge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Skyge/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-12T14:35:08Z",
    "updated_at": "2019-08-12T14:35:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@roleengineer I have asked the same question yesterday, I think someone made a mistake in a pr, at least at the original version, it will check\r\n```ts\r\nrequire(_value <= allowed[_from][msg.sender]);\r\n```\r\nat first.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/520451151/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/525083294",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1874#issuecomment-525083294",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1874",
    "id": 525083294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTA4MzI5NA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-27T00:21:12Z",
    "updated_at": "2019-08-27T00:21:12Z",
    "author_association": "CONTRIBUTOR",
    "body": ">Do you think there is no situation when the _transfer function will success before tx reverts?\r\n\r\nNo, the whole transaction must go through or be reverted. Additionally, there's no transfer of control during `_transfer` (as opposed to e.g. a regular Solidity `transfer`, which may execute a fallback function), so an attack has no control over execution flow.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/525083294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
