{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1495",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1495/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1495/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1495/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1495",
  "id": 379526489,
  "node_id": "MDU6SXNzdWUzNzk1MjY0ODk=",
  "number": 1495,
  "title": "Various question on ReentrancyGuard usage",
  "user": {
    "login": "1nfinite",
    "id": 6030393,
    "node_id": "MDQ6VXNlcjYwMzAzOTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6030393?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/1nfinite",
    "html_url": "https://github.com/1nfinite",
    "followers_url": "https://api.github.com/users/1nfinite/followers",
    "following_url": "https://api.github.com/users/1nfinite/following{/other_user}",
    "gists_url": "https://api.github.com/users/1nfinite/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/1nfinite/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/1nfinite/subscriptions",
    "organizations_url": "https://api.github.com/users/1nfinite/orgs",
    "repos_url": "https://api.github.com/users/1nfinite/repos",
    "events_url": "https://api.github.com/users/1nfinite/events{/privacy}",
    "received_events_url": "https://api.github.com/users/1nfinite/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1034168915,
      "node_id": "MDU6TGFiZWwxMDM0MTY4OTE1",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/question",
      "name": "question",
      "color": "fcef8d",
      "default": true,
      "description": "Compilation errors, reverts on transactions, design questions."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-11-11T14:12:15Z",
  "updated_at": "2018-11-20T20:29:58Z",
  "closed_at": "2018-11-20T20:29:57Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I am looking at the ReentrancyGuard (latest master branch) and its implementation.\r\nThere are a few questions that I would like to know.\r\n\r\n1) Is it advisable to still use ReentrancyGuard in even if i adhere to check effects interaction pattern strictly in my function or it is fine that it is used together to complement check effects interaction pattern.\r\n\r\n2) Is there scenario where reentrancy attack can still occur even if check effects interaction pattern is adhere?\r\n\r\n3) Do i still need to use check effects interaction pattern if i use ReentrancyGuard?\r\n\r\n4) What are the disadvantages of using ReentrancyGuard other than imposing higher gas fee? (Eg: deadlocking the contract as shown in [here](https://github.com/OpenZeppelin/openzeppelin-solidity/issues/335), not sure if it still applies on latest code)\r\n\r\n5) On what level does ReentrancyGuard guard the reentrancy?\r\nFor example, does it guard at function level (based on function call - _guardCounter will increase per function call by anyone), user per function level (based on msg.sender and function call) or how is it work?",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1495/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1495/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/440418822",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1495#issuecomment-440418822",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1495",
    "id": 440418822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDQxODgyMg==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-20T20:29:57Z",
    "updated_at": "2018-11-20T20:29:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Generally, for simple contracts the checks-effects-interaction pattern will be sufficient. Things get a bit muddy once you add inheritance, external calls, etc. into the mix (as is the case with our `Crowdsale`'s `buyTokens`). Even if you do use `ReentrancyGuard`, I'd still attempt to adhere to that pattern, if only because I find it makes reasoning about execution flow easier.\r\n\r\nThe only disadvantage that I know of (other than added gas costs) is that only one `nonReentrant` function may be executed at any given time, that is, a `nonReentrant` function cannot call a different one with the same modifier (i.e. the mutex is global across the whole contract). This can be worked around by creating `nonReentrant` `external` functions that act as wrappers to `internal` functions containing the actual logic, but is sort of annoying. \r\n\r\nHope this helps!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/440418822/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
