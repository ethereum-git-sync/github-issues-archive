{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2139",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2139/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2139/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2139/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2139",
  "id": 585119513,
  "node_id": "MDU6SXNzdWU1ODUxMTk1MTM=",
  "number": 2139,
  "title": "Query AccessControl roles per account",
  "user": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650860,
      "node_id": "MDU6TGFiZWw1MDM2NTA4NjA=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/feature",
      "name": "feature",
      "color": "b9db64",
      "default": false,
      "description": "New contracts, functions, or helpers."
    },
    {
      "id": 1000207718,
      "node_id": "MDU6TGFiZWwxMDAwMjA3NzE4",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/contracts",
      "name": "contracts",
      "color": "1d76db",
      "default": false,
      "description": "Smart contract code."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2020-03-20T14:48:56Z",
  "updated_at": "2021-02-19T17:36:56Z",
  "closed_at": "2021-02-19T17:36:56Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Proposed by @rumkin on [the forum](https://forum.openzeppelin.com/t/openzeppelin-contracts-v3-0-release-candidate/2478/2).\r\n\r\nIt might be useful to be able to list all roles an account has. In a system with a fixed number of roles, this can be achieved by querying the account for all known roles, but this doesn't work as well if dynamic roles are involved.\r\n\r\nNote that the role ids returned by this query will not be very useful, since they won't indicate what the role _does_. This would likely be used instead to answer the question 'does this account have any special permissions?'.\r\n\r\nWe could achieve this by having a second `EnumerableSet` per account. Only the gas cost of `grantRole` and `revokeRole` would be increased, which may not be a big deal, considering these are not frequent operations.",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2139/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2139/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/601847846",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2139#issuecomment-601847846",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2139",
    "id": 601847846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTg0Nzg0Ng==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-20T18:24:27Z",
    "updated_at": "2020-03-20T18:24:27Z",
    "author_association": "MEMBER",
    "body": "I think this is reasonable and the gas costs sound acceptable to me. Do we need more information before someone can begin to work on this?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/601847846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/601850279",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2139#issuecomment-601850279",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2139",
    "id": 601850279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTg1MDI3OQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-20T18:29:56Z",
    "updated_at": "2020-03-20T18:29:56Z",
    "author_association": "MEMBER",
    "body": ">Note that the role ids returned by this query will not be very useful, since they won't indicate what the role does.\r\n\r\nIt allows then querying who are the admin accounts for each of the roles. This information could be useful.\r\n\r\nI also can imagine a future where we have a way to extract from the bytecode which functions require a a certain role. This can be displayed in a UI for access control.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/601850279/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/636407472",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2139#issuecomment-636407472",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2139",
    "id": 636407472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNjQwNzQ3Mg==",
    "user": {
      "login": "julianmrodri",
      "id": 56316686,
      "node_id": "MDQ6VXNlcjU2MzE2Njg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/56316686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julianmrodri",
      "html_url": "https://github.com/julianmrodri",
      "followers_url": "https://api.github.com/users/julianmrodri/followers",
      "following_url": "https://api.github.com/users/julianmrodri/following{/other_user}",
      "gists_url": "https://api.github.com/users/julianmrodri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julianmrodri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julianmrodri/subscriptions",
      "organizations_url": "https://api.github.com/users/julianmrodri/orgs",
      "repos_url": "https://api.github.com/users/julianmrodri/repos",
      "events_url": "https://api.github.com/users/julianmrodri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julianmrodri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-31T01:31:20Z",
    "updated_at": "2020-05-31T01:35:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nventuro @frangio I'm looking into this enhancement and wanted to check with you some doubts I have on how to implement.\r\n\r\n**1)** First, in order to use an `EnumerableSet` for the Roles by Account  I had to create a new implementation named `Bytes32Set`. I noticed the current implementations only support types `address` and `uint` and we need `bytes32` to store the Roles. Let me know if this is OK or I should take a different path.\r\n\r\n**AccessControl.sol**\r\n```\r\nusing EnumerableSet for EnumerableSet.Bytes32Set;\r\n    \r\nmapping (address => EnumerableSet.Bytes32Set) private _accountRoles;\r\n\r\nfunction _grantRole(bytes32 role, address account) private {\r\n        if (_roles[role].members.add(account) && _accountRoles[account].add(role)) {\r\n            emit RoleGranted(role, account, _msgSender());\r\n        }\r\n  }\r\n```\r\n**EnumerableSet.sol**\r\n```\r\n  // Bytes32Set\r\n\r\n   struct Bytes32Set {\r\n        Set _inner;\r\n    }\r\n\r\n   function add(Bytes32Set storage set, bytes32 value) internal returns (bool);\r\n   function remove(Bytes32Set storage set, bytes32 value) internal returns (bool);\r\n   function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool);\r\n   function length(Bytes32Set storage set) internal view returns (uint256) ;\r\n   function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32); \r\n``` \r\n\r\n**2)** Second, I was looking on how we can implement the functionality that allows to query Account Roles and I see two options, for which I need your clarification and expertise on which one is the best to implement. These are:\r\n\r\n**AccessControl.sol**\r\n\r\n**Option A:** Similar to current approach for getting all role members. We implement two functions that need to be used together. One to get the count of roles for a specific account and then another one to get each individual Role. (Requires to iterate from outside the contract).\r\n\r\n`function getAccountRoleCount(address account) public view returns (uint256)`\r\n`function getAccountRole(address account, uint256 index) public view returns (bytes32)`\r\n\r\n**Option B:** Returns directly an array of Roles for a given account.\r\n\r\n`function getAccountRoles(address account) public view returns (bytes32[] memory)`\r\n\r\nPlease, let me know if on the right track and which of the options would be desirable and I can certainly take care of this Thanks for your support!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/636407472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637070946",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2139#issuecomment-637070946",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2139",
    "id": 637070946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzA3MDk0Ng==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-01T19:58:11Z",
    "updated_at": "2020-06-01T19:58:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wow, thanks for being so thorough!\r\n\r\n>1) First, in order to use an EnumerableSet for the Roles by Account I had to create a new implementation named Bytes32Set. \r\n\r\nGreat! We should also add tests once https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2254 is in.\r\n\r\n>Option B: Returns directly an array of Roles for a given account.\r\n\r\nWe should always avoid returning arrays directly and prefer an enumeration-based approach as you first suggested. The API you proposed looks great :ok_hand: ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637070946/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637127862",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2139#issuecomment-637127862",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2139",
    "id": 637127862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzEyNzg2Mg==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-01T21:40:50Z",
    "updated_at": "2020-06-01T21:40:50Z",
    "author_association": "MEMBER",
    "body": "Regarding this point from the initial suggestion:\r\n\r\n>Only the gas cost of `grantRole` and `revokeRole` would be increased\r\n\r\nThis is not really true, as this will also increase the bytecode size and thus the deployment cost. I think we should have a clear idea of how much this increase is before deciding to implement it. @julianmrodri Do you think you could do some quick tests of how much the feature increases these things, once you have a rough implementation of them?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637127862/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637130392",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2139#issuecomment-637130392",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2139",
    "id": 637130392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzEzMDM5Mg==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-01T21:44:43Z",
    "updated_at": "2020-06-01T21:44:43Z",
    "author_association": "MEMBER",
    "body": "As a side note, it's true that it's impossible to retrieve the list of roles per account on-chain, but it's certainly possible to build this list based on the contract events. This is something that can weigh in the discussion on whether the additional costs are worth it.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637130392/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637135880",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2139#issuecomment-637135880",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2139",
    "id": 637135880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzEzNTg4MA==",
    "user": {
      "login": "julianmrodri",
      "id": 56316686,
      "node_id": "MDQ6VXNlcjU2MzE2Njg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/56316686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julianmrodri",
      "html_url": "https://github.com/julianmrodri",
      "followers_url": "https://api.github.com/users/julianmrodri/followers",
      "following_url": "https://api.github.com/users/julianmrodri/following{/other_user}",
      "gists_url": "https://api.github.com/users/julianmrodri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julianmrodri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julianmrodri/subscriptions",
      "organizations_url": "https://api.github.com/users/julianmrodri/orgs",
      "repos_url": "https://api.github.com/users/julianmrodri/repos",
      "events_url": "https://api.github.com/users/julianmrodri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julianmrodri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-01T21:54:37Z",
    "updated_at": "2020-06-01T21:54:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sure! Makes sense @frangio. I'll look into that and keep you posted guys.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637135880/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637571982",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2139#issuecomment-637571982",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2139",
    "id": 637571982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzU3MTk4Mg==",
    "user": {
      "login": "rumkin",
      "id": 609373,
      "node_id": "MDQ6VXNlcjYwOTM3Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/609373?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rumkin",
      "html_url": "https://github.com/rumkin",
      "followers_url": "https://api.github.com/users/rumkin/followers",
      "following_url": "https://api.github.com/users/rumkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/rumkin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rumkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rumkin/subscriptions",
      "organizations_url": "https://api.github.com/users/rumkin/orgs",
      "repos_url": "https://api.github.com/users/rumkin/repos",
      "events_url": "https://api.github.com/users/rumkin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rumkin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-02T14:16:21Z",
    "updated_at": "2020-06-02T14:19:26Z",
    "author_association": "NONE",
    "body": "@frangio When you build an event based system and then use thee data on-chain, then you'll be needed to enter this data in the chain with transactions. For example if you want to add a new employee or remove all roles from existing one, you will be required to send all the data repeatedly. Each tx would take at least 21000 gas. So to lower gas cost methods should be able to accept arrays as input. \r\n\r\nTo reduce deployment code Libraries should be used.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637571982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637604084",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2139#issuecomment-637604084",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2139",
    "id": 637604084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzYwNDA4NA==",
    "user": {
      "login": "rumkin",
      "id": 609373,
      "node_id": "MDQ6VXNlcjYwOTM3Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/609373?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rumkin",
      "html_url": "https://github.com/rumkin",
      "followers_url": "https://api.github.com/users/rumkin/followers",
      "following_url": "https://api.github.com/users/rumkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/rumkin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rumkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rumkin/subscriptions",
      "organizations_url": "https://api.github.com/users/rumkin/orgs",
      "repos_url": "https://api.github.com/users/rumkin/repos",
      "events_url": "https://api.github.com/users/rumkin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rumkin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-02T15:08:00Z",
    "updated_at": "2020-06-02T15:11:49Z",
    "author_association": "NONE",
    "body": "@nventuro It seems reasonable to implement array slicing to reduce the cost of the roles iteration. Calling such method from outer contract will significantly decrease the execution cost even for array of two items, comparing to combination of `getAccountRoleCount` and `getAccountRole`:\r\n\r\n```solidity\r\nfunction getAccountRoleSlice(address userId, uint offset, uint limit) public view returns(byte32[] memory)\r\n```\r\n\r\n[Code](https://gist.github.com/rumkin/9b4695b8207a2b876d15ca0933cbbf5d) I used to measure gas usage.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637604084/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/650921674",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2139#issuecomment-650921674",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2139",
    "id": 650921674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDkyMTY3NA==",
    "user": {
      "login": "julianmrodri",
      "id": 56316686,
      "node_id": "MDQ6VXNlcjU2MzE2Njg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/56316686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julianmrodri",
      "html_url": "https://github.com/julianmrodri",
      "followers_url": "https://api.github.com/users/julianmrodri/followers",
      "following_url": "https://api.github.com/users/julianmrodri/following{/other_user}",
      "gists_url": "https://api.github.com/users/julianmrodri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julianmrodri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julianmrodri/subscriptions",
      "organizations_url": "https://api.github.com/users/julianmrodri/orgs",
      "repos_url": "https://api.github.com/users/julianmrodri/repos",
      "events_url": "https://api.github.com/users/julianmrodri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julianmrodri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-29T05:43:22Z",
    "updated_at": "2020-06-29T05:43:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nventuro @frangio I submitted the PR with the changes and also the analysis of the additional Gas costs for deployment and execution if we implement this. Please feel free to review and let me know if there is something else we should look upon or modify. Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/650921674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/682257181",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2139#issuecomment-682257181",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2139",
    "id": 682257181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjI1NzE4MQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-28T00:25:42Z",
    "updated_at": "2020-08-28T00:25:42Z",
    "author_association": "MEMBER",
    "body": "We've decided to not implement this feature for now to keep the contract slimmer and cheaper to use.\r\n\r\nIf you're a user that wants this feature, make sure to post in this issue and let us know so we can reconsider.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/682257181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
