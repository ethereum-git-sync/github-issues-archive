{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1758",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1758/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1758/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1758/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1758",
  "id": 445705433,
  "node_id": "MDU6SXNzdWU0NDU3MDU0MzM=",
  "number": 1758,
  "title": "SafeMath does not protect from negation of smallest integer",
  "user": {
    "login": "guylando",
    "id": 14879163,
    "node_id": "MDQ6VXNlcjE0ODc5MTYz",
    "avatar_url": "https://avatars.githubusercontent.com/u/14879163?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/guylando",
    "html_url": "https://github.com/guylando",
    "followers_url": "https://api.github.com/users/guylando/followers",
    "following_url": "https://api.github.com/users/guylando/following{/other_user}",
    "gists_url": "https://api.github.com/users/guylando/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/guylando/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/guylando/subscriptions",
    "organizations_url": "https://api.github.com/users/guylando/orgs",
    "repos_url": "https://api.github.com/users/guylando/repos",
    "events_url": "https://api.github.com/users/guylando/events{/privacy}",
    "received_events_url": "https://api.github.com/users/guylando/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2019-05-18T11:09:44Z",
  "updated_at": "2019-05-24T19:24:40Z",
  "closed_at": "2019-05-18T11:25:36Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Explanation of the problem can be found here: https://consensys.github.io/smart-contract-best-practices/recommendations/#beware-of-negation-of-the-most-negative-signed-integer\r\n\r\nThe problem is that the name \"SafeMath\" makes people think that math operations are safe when they are not. Negation includes multiplication and division by -1 but also if X is smallest negative then if you take (X/2) and multiple by (-2) you get the same problem. So the solution is not as simple as checking just for -1 multiplication/division and 0-X. \r\nProbably the solution should be to check for some invariant in the end of the calculation.",
  "closed_by": {
    "login": "guylando",
    "id": 14879163,
    "node_id": "MDQ6VXNlcjE0ODc5MTYz",
    "avatar_url": "https://avatars.githubusercontent.com/u/14879163?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/guylando",
    "html_url": "https://github.com/guylando",
    "followers_url": "https://api.github.com/users/guylando/followers",
    "following_url": "https://api.github.com/users/guylando/following{/other_user}",
    "gists_url": "https://api.github.com/users/guylando/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/guylando/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/guylando/subscriptions",
    "organizations_url": "https://api.github.com/users/guylando/orgs",
    "repos_url": "https://api.github.com/users/guylando/repos",
    "events_url": "https://api.github.com/users/guylando/events{/privacy}",
    "received_events_url": "https://api.github.com/users/guylando/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1758/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1758/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/493669658",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1758#issuecomment-493669658",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1758",
    "id": 493669658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzY2OTY1OA==",
    "user": {
      "login": "guylando",
      "id": 14879163,
      "node_id": "MDQ6VXNlcjE0ODc5MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14879163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guylando",
      "html_url": "https://github.com/guylando",
      "followers_url": "https://api.github.com/users/guylando/followers",
      "following_url": "https://api.github.com/users/guylando/following{/other_user}",
      "gists_url": "https://api.github.com/users/guylando/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guylando/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guylando/subscriptions",
      "organizations_url": "https://api.github.com/users/guylando/orgs",
      "repos_url": "https://api.github.com/users/guylando/repos",
      "events_url": "https://api.github.com/users/guylando/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guylando/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-18T11:25:36Z",
    "updated_at": "2019-05-18T11:25:36Z",
    "author_association": "NONE",
    "body": "I see SafeMath only works with unsigned integers so this is irrelevant, closing",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/493669658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/493669984",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1758#issuecomment-493669984",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1758",
    "id": 493669984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzY2OTk4NA==",
    "user": {
      "login": "guylando",
      "id": 14879163,
      "node_id": "MDQ6VXNlcjE0ODc5MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14879163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guylando",
      "html_url": "https://github.com/guylando",
      "followers_url": "https://api.github.com/users/guylando/followers",
      "following_url": "https://api.github.com/users/guylando/following{/other_user}",
      "gists_url": "https://api.github.com/users/guylando/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guylando/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guylando/subscriptions",
      "organizations_url": "https://api.github.com/users/guylando/orgs",
      "repos_url": "https://api.github.com/users/guylando/repos",
      "events_url": "https://api.github.com/users/guylando/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guylando/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-18T11:31:29Z",
    "updated_at": "2019-05-18T11:31:29Z",
    "author_association": "NONE",
    "body": "Probably there should be a warning \"pay attention that safemath only works with uint256, so be careful when working with other types without safemath\" and also I wonder why not to implement SafeMath for other types",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/493669984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/493686703",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1758#issuecomment-493686703",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1758",
    "id": 493686703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzY4NjcwMw==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-18T15:47:00Z",
    "updated_at": "2019-05-18T15:47:17Z",
    "author_association": "MEMBER",
    "body": "I don't see the need for such a warning. The compiler will not allow using `SafeMath` with signed integers.\r\n\r\nHowever, do note that we have a [`SignedSafeMath`](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/2ccc12b328e6d5d1d3faa5b99bec8d1de8b92fea/contracts/drafts/SignedSafeMath.sol) draft library. It checks for the condition you reported in this issue.\r\n\r\nhttps://github.com/OpenZeppelin/openzeppelin-solidity/blob/2ccc12b328e6d5d1d3faa5b99bec8d1de8b92fea/contracts/drafts/SignedSafeMath.sol#L21",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/493686703/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/493698259",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1758#issuecomment-493698259",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1758",
    "id": 493698259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzY5ODI1OQ==",
    "user": {
      "login": "guylando",
      "id": 14879163,
      "node_id": "MDQ6VXNlcjE0ODc5MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14879163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guylando",
      "html_url": "https://github.com/guylando",
      "followers_url": "https://api.github.com/users/guylando/followers",
      "following_url": "https://api.github.com/users/guylando/following{/other_user}",
      "gists_url": "https://api.github.com/users/guylando/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guylando/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guylando/subscriptions",
      "organizations_url": "https://api.github.com/users/guylando/orgs",
      "repos_url": "https://api.github.com/users/guylando/repos",
      "events_url": "https://api.github.com/users/guylando/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guylando/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-18T18:39:46Z",
    "updated_at": "2019-05-18T18:40:43Z",
    "author_association": "NONE",
    "body": "@frangio The warning goal was not to prevent the use of SafeMath with signed integers, the goal is to make people aware that they need to utilize other security measures when working with signed integers.\r\n\r\nRegarding the condition in SignedSafeMath:\r\n1. `b = -1, a=INT256_MIN` in \"mul\" bypasses the checks\r\n2. `b = -2^N, a=-2^(255-N) `in \"mul\" for any `255>N>=0` (only `N=255` is checked at the moment). same for `a = -2^N, b=-2^(255-N)`. Note that the current check in \"mul\" of the invariant after calculation does not save from the problem because the calculation inside the require will trigger the problem resulting in \"true\".\r\n\r\nPossibly there are more cases.\r\n\r\nI believe the better solution is to check for some invariant in the end of the calculation like done in \"sub\". Although the invariant in \"mul\" does not protect from this so need to be careful when choosing the invariant.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/493698259/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/493715178",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1758#issuecomment-493715178",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1758",
    "id": 493715178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzcxNTE3OA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-18T23:47:31Z",
    "updated_at": "2019-05-18T23:47:31Z",
    "author_association": "MEMBER",
    "body": "@guylando `SignedSafeMath` correctly catches all of those cases and reverts. The first case is even covered by the test suite. Please try this out yourself.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/493715178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/493740904",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1758#issuecomment-493740904",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1758",
    "id": 493740904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Mzc0MDkwNA==",
    "user": {
      "login": "guylando",
      "id": 14879163,
      "node_id": "MDQ6VXNlcjE0ODc5MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14879163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guylando",
      "html_url": "https://github.com/guylando",
      "followers_url": "https://api.github.com/users/guylando/followers",
      "following_url": "https://api.github.com/users/guylando/following{/other_user}",
      "gists_url": "https://api.github.com/users/guylando/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guylando/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guylando/subscriptions",
      "organizations_url": "https://api.github.com/users/guylando/orgs",
      "repos_url": "https://api.github.com/users/guylando/repos",
      "events_url": "https://api.github.com/users/guylando/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guylando/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-19T09:24:38Z",
    "updated_at": "2019-05-19T09:24:38Z",
    "author_association": "NONE",
    "body": "I see, tried it now. From reading the \"mul\" code it seemed the first require was the implemented defense however actually the first require only protects from division by -1 in the second require (and not the multiplication itself) and in all other cases the second require catches the problem. Code comments could make it easier to read the code and understand this. Also wouldn't it be better for debugging purposes not to pass the same message in two different \"require\" statements in the same function/flow? I had to change the require messages to understand which one was failing (and that still didnt help because of this problem: https://github.com/OpenZeppelin/openzeppelin-test-helpers/issues/44)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/493740904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/493741566",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1758#issuecomment-493741566",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1758",
    "id": 493741566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Mzc0MTU2Ng==",
    "user": {
      "login": "guylando",
      "id": 14879163,
      "node_id": "MDQ6VXNlcjE0ODc5MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14879163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guylando",
      "html_url": "https://github.com/guylando",
      "followers_url": "https://api.github.com/users/guylando/followers",
      "following_url": "https://api.github.com/users/guylando/following{/other_user}",
      "gists_url": "https://api.github.com/users/guylando/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guylando/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guylando/subscriptions",
      "organizations_url": "https://api.github.com/users/guylando/orgs",
      "repos_url": "https://api.github.com/users/guylando/repos",
      "events_url": "https://api.github.com/users/guylando/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guylando/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-19T09:36:07Z",
    "updated_at": "2019-05-19T09:36:07Z",
    "author_association": "NONE",
    "body": "By the way used this test case for (2):\r\n```\r\nit('reverts when negatives multiplication results in -(minimum integer)', async function () {\r\n      const N = 5;\r\n      const a = new BN('2').pow(new BN('' + (255 - N))).mul(new BN('-1'));\r\n      const b = new BN('2').pow(new BN('' + N)).mul(new BN('-1'));\r\n\r\n      await shouldFail.reverting.withMessage(this.safeMath.mul(a, b), 'SignedSafeMath: multiplication overflow');\r\n    });\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/493741566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/495752470",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1758#issuecomment-495752470",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1758",
    "id": 495752470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTc1MjQ3MA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-24T18:50:13Z",
    "updated_at": "2019-05-24T18:50:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@guylando I tried that same test locally and it passes. Could you share an example of a failing test? I was not able to reproduce this.\r\n\r\nRegarding the error message, they are the same because the internal details of _why_ the overflow occurred are not relevant to the user: all that's important is that the multiplication overflowed. The fact that we have two separate `require` statements is accidental.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/495752470/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/495762056",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1758#issuecomment-495762056",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1758",
    "id": 495762056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTc2MjA1Ng==",
    "user": {
      "login": "guylando",
      "id": 14879163,
      "node_id": "MDQ6VXNlcjE0ODc5MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14879163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guylando",
      "html_url": "https://github.com/guylando",
      "followers_url": "https://api.github.com/users/guylando/followers",
      "following_url": "https://api.github.com/users/guylando/following{/other_user}",
      "gists_url": "https://api.github.com/users/guylando/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guylando/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guylando/subscriptions",
      "organizations_url": "https://api.github.com/users/guylando/orgs",
      "repos_url": "https://api.github.com/users/guylando/repos",
      "events_url": "https://api.github.com/users/guylando/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guylando/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-24T19:24:40Z",
    "updated_at": "2019-05-24T19:24:40Z",
    "author_association": "NONE",
    "body": "I am sorry for the misunderstanding, I provided the test case code just in case you would want to add to your safemath test cases, it indeed passes correctly and you were right. That is why I said in https://github.com/OpenZeppelin/openzeppelin-solidity/issues/1758#issuecomment-493740904 that the code without comments is a little confusing about which of the require statements was there to protect from this scenario.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/495762056/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
