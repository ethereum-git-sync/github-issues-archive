{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/434",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/434/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/434/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/434/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/434",
  "id": 256614772,
  "node_id": "MDU6SXNzdWUyNTY2MTQ3NzI=",
  "number": 434,
  "title": "totalSupply should be a function, not state variable",
  "user": {
    "login": "3sGgpQ8H",
    "id": 3917202,
    "node_id": "MDQ6VXNlcjM5MTcyMDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/3sGgpQ8H",
    "html_url": "https://github.com/3sGgpQ8H",
    "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
    "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
    "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
    "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
    "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
    "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
    "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "spalladino",
    "id": 429604,
    "node_id": "MDQ6VXNlcjQyOTYwNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/429604?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/spalladino",
    "html_url": "https://github.com/spalladino",
    "followers_url": "https://api.github.com/users/spalladino/followers",
    "following_url": "https://api.github.com/users/spalladino/following{/other_user}",
    "gists_url": "https://api.github.com/users/spalladino/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/spalladino/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/spalladino/subscriptions",
    "organizations_url": "https://api.github.com/users/spalladino/orgs",
    "repos_url": "https://api.github.com/users/spalladino/repos",
    "events_url": "https://api.github.com/users/spalladino/events{/privacy}",
    "received_events_url": "https://api.github.com/users/spalladino/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "spalladino",
      "id": 429604,
      "node_id": "MDQ6VXNlcjQyOTYwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/429604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spalladino",
      "html_url": "https://github.com/spalladino",
      "followers_url": "https://api.github.com/users/spalladino/followers",
      "following_url": "https://api.github.com/users/spalladino/following{/other_user}",
      "gists_url": "https://api.github.com/users/spalladino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spalladino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spalladino/subscriptions",
      "organizations_url": "https://api.github.com/users/spalladino/orgs",
      "repos_url": "https://api.github.com/users/spalladino/repos",
      "events_url": "https://api.github.com/users/spalladino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spalladino/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2017-09-11T08:05:02Z",
  "updated_at": "2018-01-19T20:15:28Z",
  "closed_at": "2018-01-19T20:15:28Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "In `ERC20.sol` and `ERC20Basic.sol` interfaces `totalSupply` is declared as a state variable rather than function:\r\n\r\n    uint256 public totalSupply;\r\n\r\nThis makes it impossible to use theses interfaces for token contracts that calculate `totalSupply` value like this one: https://github.com/BCAPtoken/BCAPToken/blob/004c49da7d4f58309c1fc0018dae8260ea03d8f2/sol/StandardToken.sol#L31\r\n\r\nSo, the declaration should be changed to:\r\n\r\n    function totalSupply () constant returns (uint256 result);",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/434/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/434/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/328550699",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/434#issuecomment-328550699",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/434",
    "id": 328550699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODU1MDY5OQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-11T14:40:43Z",
    "updated_at": "2017-09-11T14:40:43Z",
    "author_association": "MEMBER",
    "body": "Hi @mikhail-vladimirov. The `public` modifier declares a function `totalSupply` with the required signature, but it's correct that the interface can't be used to implement something like BCAPToken because Solidity will not allow to define the `totalSupply` function.\r\n\r\nWe should change this.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/328550699/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/328554354",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/434#issuecomment-328554354",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/434",
    "id": 328554354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODU1NDM1NA==",
    "user": {
      "login": "3sGgpQ8H",
      "id": 3917202,
      "node_id": "MDQ6VXNlcjM5MTcyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3sGgpQ8H",
      "html_url": "https://github.com/3sGgpQ8H",
      "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
      "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
      "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
      "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
      "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
      "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-11T14:51:40Z",
    "updated_at": "2017-09-11T14:51:40Z",
    "author_association": "NONE",
    "body": "@frangio Unfortunatelly, Solidity has bug-like feature that disallows to override public function with public variable like this:\r\n\r\n    contract Foo {\r\n      function x () constant returns (uint);\r\n    }\r\n    contract Bar is Foo {\r\n      uint public x; // We want to override Foo.x() with auto-generated public getter for x here\r\n    }\r\n\r\nI hope this will be fixed one day.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/328554354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/336692976",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/434#issuecomment-336692976",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/434",
    "id": 336692976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjY5Mjk3Ng==",
    "user": {
      "login": "Qqwy",
      "id": 5345745,
      "node_id": "MDQ6VXNlcjUzNDU3NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5345745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Qqwy",
      "html_url": "https://github.com/Qqwy",
      "followers_url": "https://api.github.com/users/Qqwy/followers",
      "following_url": "https://api.github.com/users/Qqwy/following{/other_user}",
      "gists_url": "https://api.github.com/users/Qqwy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Qqwy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Qqwy/subscriptions",
      "organizations_url": "https://api.github.com/users/Qqwy/orgs",
      "repos_url": "https://api.github.com/users/Qqwy/repos",
      "events_url": "https://api.github.com/users/Qqwy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Qqwy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-15T07:48:10Z",
    "updated_at": "2017-10-15T07:50:13Z",
    "author_association": "NONE",
    "body": "So if I understand correctly:\r\n\r\n- Solidity does not allow having a function and a property at the same time.\r\n- There is one exception for this, which is when you make the property 'public', in which case they will have the same name, but make it impossible for child-classes to alter the way data is read from the property.\r\n- For the properties, a lot of standardized naming, like `totalSupply` is used. Splitting this into a private property and public accessor (getter/setter) functions will hamper the readability of the contracts.\r\n\r\nIt seems like there is no clear path forward then. Personally I think OpenZeppelin would be the most flexible with going private properties + public accessor methods, but this would make the code slightly harder on the eyes, probably. This would be valid for the D0 and D1 goals, but would conflict with D2.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/336692976/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/343594782",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/434#issuecomment-343594782",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/434",
    "id": 343594782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzU5NDc4Mg==",
    "user": {
      "login": "maraoz",
      "id": 287189,
      "node_id": "MDQ6VXNlcjI4NzE4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/287189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maraoz",
      "html_url": "https://github.com/maraoz",
      "followers_url": "https://api.github.com/users/maraoz/followers",
      "following_url": "https://api.github.com/users/maraoz/following{/other_user}",
      "gists_url": "https://api.github.com/users/maraoz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maraoz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maraoz/subscriptions",
      "organizations_url": "https://api.github.com/users/maraoz/orgs",
      "repos_url": "https://api.github.com/users/maraoz/repos",
      "events_url": "https://api.github.com/users/maraoz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maraoz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T21:41:02Z",
    "updated_at": "2017-11-10T21:41:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closed, this is a design decision we took to make the code simpler. I understand the drawbacks, but we'll keep the current implementation for now. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/343594782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/355354068",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/434#issuecomment-355354068",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/434",
    "id": 355354068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTM1NDA2OA==",
    "user": {
      "login": "spalladino",
      "id": 429604,
      "node_id": "MDQ6VXNlcjQyOTYwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/429604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spalladino",
      "html_url": "https://github.com/spalladino",
      "followers_url": "https://api.github.com/users/spalladino/followers",
      "following_url": "https://api.github.com/users/spalladino/following{/other_user}",
      "gists_url": "https://api.github.com/users/spalladino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spalladino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spalladino/subscriptions",
      "organizations_url": "https://api.github.com/users/spalladino/orgs",
      "repos_url": "https://api.github.com/users/spalladino/repos",
      "events_url": "https://api.github.com/users/spalladino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spalladino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-04T18:02:12Z",
    "updated_at": "2018-01-04T18:02:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm reopening this issue for further discussion. We have stumbled upon contracts that needed to override the `totalSupply` getter (such as for delegating the call to another contract under certain circumstances), and had no option but to modify the base token contracts, which is far from what we want to encourage.\r\n\r\n@maraoz let me know if we can discuss this further.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/355354068/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
