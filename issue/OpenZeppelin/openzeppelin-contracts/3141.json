{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3141",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3141/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3141/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3141/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3141",
  "id": 1116561132,
  "node_id": "I_kwDOA9tCBs5CjV7s",
  "number": 3141,
  "title": "ERC1155Supply hook into _beforeTokenTransfer causing overflows when attempting to burn more than totalSupply",
  "user": {
    "login": "antonklyr",
    "id": 90849526,
    "node_id": "MDQ6VXNlcjkwODQ5NTI2",
    "avatar_url": "https://avatars.githubusercontent.com/u/90849526?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/antonklyr",
    "html_url": "https://github.com/antonklyr",
    "followers_url": "https://api.github.com/users/antonklyr/followers",
    "following_url": "https://api.github.com/users/antonklyr/following{/other_user}",
    "gists_url": "https://api.github.com/users/antonklyr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/antonklyr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/antonklyr/subscriptions",
    "organizations_url": "https://api.github.com/users/antonklyr/orgs",
    "repos_url": "https://api.github.com/users/antonklyr/repos",
    "events_url": "https://api.github.com/users/antonklyr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/antonklyr/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-01-27T17:37:48Z",
  "updated_at": "2022-03-14T04:57:10Z",
  "closed_at": "2022-02-01T22:10:11Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hello,\r\n\r\nI have recently updated from 4.2 to 4.4, and noticed a change in ERC1155Supply moving supply tracking to the _beforeTokenTransfer hook, and although I enjoy not having to mention ERC1155Supply in the override chain of all the methods it used to override, that change has brought another issue:\r\n\r\nThe ERC1155Supply extension is now doing arithmetic on transferred tokens before any check on the transferred amount has been done, causing a panic code for underflowing outside an unchecked block in the case of an attempt to burn more tokens than the current total supply.\r\n\r\nI am not sure this qualifies as a bug, as it may be an intended behavior, but since I'd selfishly like to rely on this library to revert with neat messages in such cases, I'm still reporting it!\r\n\r\nThank you for your time.\r\n\r\n**ðŸ’» Environment**\r\n\r\nOpenZeppelin 4.4, Hardhat\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3141/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3141/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1024058027",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3141#issuecomment-1024058027",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3141",
    "id": 1024058027,
    "node_id": "IC_kwDOA9tCBs49CeKr",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-28T09:58:18Z",
    "updated_at": "2022-01-28T09:58:18Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @antonklyr \r\n\r\nI think we both agree that the transaction should revert if the burn operation is larger than the balance of the user, or the totalSupply for this token.\r\n\r\nI would agree that in the second case, we should probably get a proper error and not an arithmetic overflow. @frangio what is your opinion on that?\r\n\r\nLets discuss how we could fix that:\r\n1. We could add a check in `_burn` on line 325 of `ERC1155.sol`. We shouldn't however remove the check on line 329 because there is always a risk of `_beforeTokenTransfer` minting, burning, or transferring assets. We would have a double check, which is not nice, in particular because it would be paid by contract that don't need it.\r\n2. We could add a check in `ERC1155Supply.sol` between line 53 and 54.\r\n3. We could make line 54 of `ERC1155Supply.sol` unchecked, and rely on the overflow being catched latter (if the amount overflows the totalSupply, then surely it overflows the balance).\r\n\r\nOption 3 is the cheaper, but feels dangerous, because other overrides of \"_beforeTokenTransfer\" will be seeing an invalid state.\r\n\r\nI'd personally go for option 2.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1024058027/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
