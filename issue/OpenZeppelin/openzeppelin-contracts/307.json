{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/307",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/307/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/307/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/307/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/307",
  "id": 242650996,
  "node_id": "MDU6SXNzdWUyNDI2NTA5OTY=",
  "number": 307,
  "title": "Inconsistent behaviour in VestedToken.sol",
  "user": {
    "login": "adamdossa",
    "id": 2633913,
    "node_id": "MDQ6VXNlcjI2MzM5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2633913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/adamdossa",
    "html_url": "https://github.com/adamdossa",
    "followers_url": "https://api.github.com/users/adamdossa/followers",
    "following_url": "https://api.github.com/users/adamdossa/following{/other_user}",
    "gists_url": "https://api.github.com/users/adamdossa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/adamdossa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/adamdossa/subscriptions",
    "organizations_url": "https://api.github.com/users/adamdossa/orgs",
    "repos_url": "https://api.github.com/users/adamdossa/repos",
    "events_url": "https://api.github.com/users/adamdossa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/adamdossa/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2017-07-13T10:08:31Z",
  "updated_at": "2023-06-24T10:39:41Z",
  "closed_at": "2017-07-14T21:17:10Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Hi All,\r\n\r\nMy reading of the `transferableTokens` function in VestedToken (which inherits from LimitedTransferToken) is that it is a little inconsistent.\r\n\r\nFor addresses which have vesting grants, the logic works correctly, specifying that such addresses can transfer a minimum of their vested tokens and and other restrictions that may exist (through the use of `super.transferableTokens`).\r\n\r\nHowever, for addresses which don't have vesting grants, the function just returns:  \r\n`balanceOf(holder)`.\r\n\r\nMy suggestion is that for non-grant holder addresses, the logic should be:  \r\n`if (grantIndex == 0) return Math.min256(balanceOf(holder), super.transferableTokens(holder, time));`\r\nrather than\r\n`if (grantIndex == 0) return balanceOf(holder);`\r\n\r\nThis would be more consistent with the design pattern of LimitedTransferToken, as documented in its comment:\r\n```\r\n* LimitedTransferToken has been designed to allow for different limiting factors,\r\n * this can be achieved by recursively calling super.transferableTokens() until the base class is \r\n * hit. For example:\r\n *     function transferableTokens(address holder, uint64 time) constant public returns (uint256) {\r\n *       return min256(unlockedTokens, super.transferableTokens(holder, time));\r\n *     }\r\n ```\r\n\r\nThoughts? It would be a simple PR which I can put in if there is consensus.\r\n\r\nThanks,\r\nAdam",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/307/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/307/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315146825",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/307#issuecomment-315146825",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/307",
    "id": 315146825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTE0NjgyNQ==",
    "user": {
      "login": "jakub-wojciechowski",
      "id": 27825272,
      "node_id": "MDQ6VXNlcjI3ODI1Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/27825272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakub-wojciechowski",
      "html_url": "https://github.com/jakub-wojciechowski",
      "followers_url": "https://api.github.com/users/jakub-wojciechowski/followers",
      "following_url": "https://api.github.com/users/jakub-wojciechowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakub-wojciechowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakub-wojciechowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakub-wojciechowski/subscriptions",
      "organizations_url": "https://api.github.com/users/jakub-wojciechowski/orgs",
      "repos_url": "https://api.github.com/users/jakub-wojciechowski/repos",
      "events_url": "https://api.github.com/users/jakub-wojciechowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakub-wojciechowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T17:28:50Z",
    "updated_at": "2017-07-13T17:29:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi Adam, \r\nWell-spotted issue. Isn't it that:\r\n\r\n`super.transferableTokens(holder, time) <= balaceOf(holder)`\r\n\r\nMaybe it's better to check this invariant in LimitedTransferToken, but I'm not sure if it's much needed as it's going to be checked finally by SafeMath constraints in:\r\n\r\n`balances[_from] = balances[_from].sub(_value);`\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315146825/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315151266",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/307#issuecomment-315151266",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/307",
    "id": 315151266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTE1MTI2Ng==",
    "user": {
      "login": "adamdossa",
      "id": 2633913,
      "node_id": "MDQ6VXNlcjI2MzM5MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2633913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamdossa",
      "html_url": "https://github.com/adamdossa",
      "followers_url": "https://api.github.com/users/adamdossa/followers",
      "following_url": "https://api.github.com/users/adamdossa/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamdossa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamdossa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamdossa/subscriptions",
      "organizations_url": "https://api.github.com/users/adamdossa/orgs",
      "repos_url": "https://api.github.com/users/adamdossa/repos",
      "events_url": "https://api.github.com/users/adamdossa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamdossa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T17:45:08Z",
    "updated_at": "2017-07-13T17:45:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm - not sure that is exactly the issue I mean.\r\n\r\nThe issue I'm flagging is that there is a `transferableTokens` function should always return the minimum of what it considers to be the transferable amount of tokens, and `super. transferableTokens`.\r\n\r\nVestedToken does this if the account is a grant holder, but doesn't do this if it isn't.\r\n\r\nSo the line:\r\n`if (grantIndex == 0) return balanceOf(holder);`\r\nshould be replaced by\r\n`if (grantIndex == 0) return Math.min256(balanceOf(holder), super.transferableTokens(holder, time));`\r\n\r\nThis is not to ensure that the amount returned is <= balanceOf(holder), it's more to ensure that any other LimitedTokenTransfer contracts in the inheritance hierarchy are respected.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315151266/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315153252",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/307#issuecomment-315153252",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/307",
    "id": 315153252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTE1MzI1Mg==",
    "user": {
      "login": "jakub-wojciechowski",
      "id": 27825272,
      "node_id": "MDQ6VXNlcjI3ODI1Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/27825272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakub-wojciechowski",
      "html_url": "https://github.com/jakub-wojciechowski",
      "followers_url": "https://api.github.com/users/jakub-wojciechowski/followers",
      "following_url": "https://api.github.com/users/jakub-wojciechowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakub-wojciechowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakub-wojciechowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakub-wojciechowski/subscriptions",
      "organizations_url": "https://api.github.com/users/jakub-wojciechowski/orgs",
      "repos_url": "https://api.github.com/users/jakub-wojciechowski/repos",
      "events_url": "https://api.github.com/users/jakub-wojciechowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakub-wojciechowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T17:52:12Z",
    "updated_at": "2017-07-13T17:52:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "In other words, I was just asking if returning only: \r\n\r\n`return super.transferableTokens(holder, time)`\r\n\r\ninstead of `min()` will be sufficient?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315153252/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315185258",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/307#issuecomment-315185258",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/307",
    "id": 315185258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTE4NTI1OA==",
    "user": {
      "login": "adamdossa",
      "id": 2633913,
      "node_id": "MDQ6VXNlcjI2MzM5MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2633913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamdossa",
      "html_url": "https://github.com/adamdossa",
      "followers_url": "https://api.github.com/users/adamdossa/followers",
      "following_url": "https://api.github.com/users/adamdossa/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamdossa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamdossa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamdossa/subscriptions",
      "organizations_url": "https://api.github.com/users/adamdossa/orgs",
      "repos_url": "https://api.github.com/users/adamdossa/repos",
      "events_url": "https://api.github.com/users/adamdossa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamdossa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T19:56:47Z",
    "updated_at": "2017-07-13T19:56:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah I see - you're right that would be an option if you assume that someone else will make the check - I think it is probably clearer to take a min. anyway and will always be safe (but have a small gas cost I guess).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315185258/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315188232",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/307#issuecomment-315188232",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/307",
    "id": 315188232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTE4ODIzMg==",
    "user": {
      "login": "jakub-wojciechowski",
      "id": 27825272,
      "node_id": "MDQ6VXNlcjI3ODI1Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/27825272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakub-wojciechowski",
      "html_url": "https://github.com/jakub-wojciechowski",
      "followers_url": "https://api.github.com/users/jakub-wojciechowski/followers",
      "following_url": "https://api.github.com/users/jakub-wojciechowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakub-wojciechowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakub-wojciechowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakub-wojciechowski/subscriptions",
      "organizations_url": "https://api.github.com/users/jakub-wojciechowski/orgs",
      "repos_url": "https://api.github.com/users/jakub-wojciechowski/repos",
      "events_url": "https://api.github.com/users/jakub-wojciechowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakub-wojciechowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T20:08:58Z",
    "updated_at": "2017-07-13T20:08:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Cool, finally we've reached an accord!\r\nMy view is that a subclass shouldn't validate the correctness of a super class. \r\nIt's a small suggestion, just to make your great update even a slightly better and more efficient :)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/315188232/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
