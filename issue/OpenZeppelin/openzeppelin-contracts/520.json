{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/520",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/520/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/520/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/520/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/520",
  "id": 269165933,
  "node_id": "MDU6SXNzdWUyNjkxNjU5MzM=",
  "number": 520,
  "title": "Can't step through transaction during debug",
  "user": {
    "login": "brianedelman",
    "id": 14008969,
    "node_id": "MDQ6VXNlcjE0MDA4OTY5",
    "avatar_url": "https://avatars.githubusercontent.com/u/14008969?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brianedelman",
    "html_url": "https://github.com/brianedelman",
    "followers_url": "https://api.github.com/users/brianedelman/followers",
    "following_url": "https://api.github.com/users/brianedelman/following{/other_user}",
    "gists_url": "https://api.github.com/users/brianedelman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brianedelman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brianedelman/subscriptions",
    "organizations_url": "https://api.github.com/users/brianedelman/orgs",
    "repos_url": "https://api.github.com/users/brianedelman/repos",
    "events_url": "https://api.github.com/users/brianedelman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brianedelman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2017-10-27T16:34:21Z",
  "updated_at": "2017-11-11T02:42:23Z",
  "closed_at": "2017-11-11T02:42:23Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Using node v8.4.0\r\ntruffle 4 beta 2\r\n\r\nI create a new contract in the develop console which runs successfully, and then debug the transaction. The debugger runs and shows me the first line of code, but when I try to do any further action (i.e. step through the code), it fails with a trace and instruction mismatch error.\r\n\r\nBelow is the process.\r\n\r\n```Connected to exiting Truffle Develop session at http://localhost:9545/\r\n\r\ntruffle(develop)> Ticket.new(\"name\")\r\nTruffleContract {\r\n  constructor:\r\n   { [Function: TruffleContract]\r\n     _static_methods:\r\n      { setProvider: [Function: setProvider],\r\n        new: [Function: new],\r\n        at: [Function: at],\r\n        deployed: [Function: deployed],\r\n        defaults: [Function: defaults],\r\n        hasNetwork: [Function: hasNetwork],\r\n        isDeployed: [Function: isDeployed],\r\n        detectNetwork: [Function: detectNetwork],\r\n        setNetwork: [Function: setNetwork],\r\n        resetAddress: [Function: resetAddress],\r\n        link: [Function: link],\r\n        clone: [Function: clone],\r\n        addProp: [Function: addProp],\r\n        toJSON: [Function: toJSON] },\r\n     _properties:\r\n      { contract_name: [Object],\r\n        contractName: [Object],\r\n        abi: [Object],\r\n        network: [Function: network],\r\n        networks: [Function: networks],\r\n        address: [Object],\r\n        links: [Function: links],\r\n        events: [Function: events],\r\n        binary: [Function: binary],\r\n        deployedBinary: [Function: deployedBinary],\r\n        unlinked_binary: [Object],\r\n        bytecode: [Object],\r\n        deployedBytecode: [Object],\r\n        sourceMap: [Object],\r\n        deployedSourceMap: [Object],\r\n        source: [Object],\r\n        sourcePath: [Object],\r\n        ast: [Object],\r\n        schema_version: [Function: schema_version],\r\n        schemaVersion: [Function: schemaVersion],\r\n        updated_at: [Function: updated_at],\r\n        updatedAt: [Function: updatedAt] },\r\n     _property_values: {},\r\n     _json:\r\n      { contractName: 'Ticket',\r\n        abi: [Array],\r\n        bytecode: '0x60606040523415600e57600080fd5b6040516020806100c3833981016040528080516000555050608f806100346000396000f300606060405263ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114603b57600080fd5b3415604557600080fd5b604b605d565b60405190815260200160405180910390f35b600054815600a165627a7a7230582041549c81fdd3a26b560f5c07fc72ae1bb9bbdf7b3edf8a1a7eb383e46366c1af0029',\r\n        deployedBytecode: '0x606060405263ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114603b57600080fd5b3415604557600080fd5b604b605d565b60405190815260200160405180910390f35b600054815600a165627a7a7230582041549c81fdd3a26b560f5c07fc72ae1bb9bbdf7b3edf8a1a7eb383e46366c1af0029',\r\n        sourceMap: '186:107:4:-;;;230:61;;;;;;;;;;;;;;;;;;;;;;274:4;:12;-1:-1:-1;;186:107:4;;;;;;',\r\n        deployedSourceMap: '186:107:4:-;;;;;;;;;;;;;;;;;206:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o',\r\n        source: 'pragma solidity 0.4.17;\\n\\nimport \\'zeppelin-solidity/contracts/token/MintableToken.sol\\';\\n\\n//Ticket is a mintable token. Event can call ticket to create a new Token(ticket) for each event.\\ncontract Ticket {\\n  bytes32 public name;\\n\\n  function Ticket(bytes32 _name) public {\\n    name = _name;\\n  }\\n}\\n',\r\n        sourcePath: '/Users/brianedelman/Coding/projects/tickets2/contracts/Ticket.sol',\r\n        ast: [Object],\r\n        networks: [Object],\r\n        schemaVersion: '1.0.0',\r\n        updatedAt: '2017-10-27T16:27:28.005Z' },\r\n     setProvider: [Function: bound setProvider],\r\n     new: [Function: bound new],\r\n     at: [Function: bound at],\r\n     deployed: [Function: bound deployed],\r\n     defaults: [Function: bound defaults],\r\n     hasNetwork: [Function: bound hasNetwork],\r\n     isDeployed: [Function: bound isDeployed],\r\n     detectNetwork: [Function: bound detectNetwork],\r\n     setNetwork: [Function: bound setNetwork],\r\n     resetAddress: [Function: bound resetAddress],\r\n     link: [Function: bound link],\r\n     clone: [Function: bound clone],\r\n     addProp: [Function: bound addProp],\r\n     toJSON: [Function: bound toJSON],\r\n     web3:\r\n      Web3 {\r\n        _requestManager: [Object],\r\n        currentProvider: [Object],\r\n        eth: [Object],\r\n        db: [Object],\r\n        shh: [Object],\r\n        net: [Object],\r\n        personal: [Object],\r\n        bzz: [Object],\r\n        settings: [Object],\r\n        version: [Object],\r\n        providers: [Object],\r\n        _extend: [Object] },\r\n     class_defaults:\r\n      { from: '0x64a6b92b99e793d9a343a560e39697fcb422ae90',\r\n        gas: 4712388,\r\n        gasPrice: 100000000000 },\r\n     currentProvider:\r\n      HttpProvider {\r\n        host: 'http://localhost:9545/',\r\n        timeout: 0,\r\n        user: undefined,\r\n        password: undefined,\r\n        send: [Function],\r\n        sendAsync: [Function],\r\n        _alreadyWrapped: true },\r\n     network_id: '4447' },\r\n  abi:\r\n   [ { constant: true,\r\n       inputs: [],\r\n       name: 'name',\r\n       outputs: [Array],\r\n       payable: false,\r\n       stateMutability: 'view',\r\n       type: 'function' },\r\n     { inputs: [Array],\r\n       payable: false,\r\n       stateMutability: 'nonpayable',\r\n       type: 'constructor' } ],\r\n  contract:\r\n   Contract {\r\n     _eth:\r\n      Eth {\r\n        _requestManager: [Object],\r\n        getBalance: [Object],\r\n        getStorageAt: [Object],\r\n        getCode: [Object],\r\n        getBlock: [Object],\r\n        getUncle: [Object],\r\n        getCompilers: [Object],\r\n        getBlockTransactionCount: [Object],\r\n        getBlockUncleCount: [Object],\r\n        getTransaction: [Object],\r\n        getTransactionFromBlock: [Object],\r\n        getTransactionReceipt: [Object],\r\n        getTransactionCount: [Object],\r\n        call: [Object],\r\n        estimateGas: [Object],\r\n        sendRawTransaction: [Object],\r\n        signTransaction: [Object],\r\n        sendTransaction: [Object],\r\n        sign: [Object],\r\n        compile: [Object],\r\n        submitWork: [Object],\r\n        getWork: [Object],\r\n        coinbase: [Getter],\r\n        getCoinbase: [Object],\r\n        mining: [Getter],\r\n        getMining: [Object],\r\n        hashrate: [Getter],\r\n        getHashrate: [Object],\r\n        syncing: [Getter],\r\n        getSyncing: [Object],\r\n        gasPrice: [Getter],\r\n        getGasPrice: [Object],\r\n        accounts: [Getter],\r\n        getAccounts: [Object],\r\n        blockNumber: [Getter],\r\n        getBlockNumber: [Object],\r\n        protocolVersion: [Getter],\r\n        getProtocolVersion: [Object],\r\n        iban: [Object],\r\n        sendIBANTransaction: [Function: bound transfer] },\r\n     transactionHash: '0x84ff11e5c596729495c03f1645febf67014af0fc1105f9218ee56a3f37944f57',\r\n     address: '0x2b04839502b528d29a7eb7c614c8c64c8bacc5c9',\r\n     abi: [ [Object], [Object] ],\r\n     name:\r\n      { [Function: bound ]\r\n        request: [Function: bound ],\r\n        call: [Function: bound ],\r\n        sendTransaction: [Function: bound ],\r\n        estimateGas: [Function: bound ],\r\n        getData: [Function: bound ],\r\n        '': [Circular] },\r\n     allEvents: [Function: bound ] },\r\n  name:\r\n   { [Function]\r\n     call: [Function],\r\n     sendTransaction: [Function],\r\n     request: [Function: bound ],\r\n     estimateGas: [Function] },\r\n  sendTransaction: [Function],\r\n  send: [Function],\r\n  allEvents: [Function: bound ],\r\n  address: '0x2b04839502b528d29a7eb7c614c8c64c8bacc5c9',\r\n  transactionHash: '0x84ff11e5c596729495c03f1645febf67014af0fc1105f9218ee56a3f37944f57' }\r\ntruffle(develop)> debug 0x84ff11e5c596729495c03f1645febf67014af0fc1105f9218ee56a3f37944f57\r\nGathering transaction data...\r\n\r\nAddresses affected:\r\n  0x2b04839502b528d29a7eb7c614c8c64c8bacc5c9 - Ticket\r\n\r\nCommands:\r\n(enter) last command entered (step next)\r\n(o) step over, (i) step into, (u) step out, (n) step next\r\n(;) step instruction, (p) print instruction, (h) print this help, (q) quit\r\n\r\n\r\nTicket.sol | 0x2b04839502b528d29a7eb7c614c8c64c8bacc5c9:\r\n\r\n4:\r\n5: //Ticket is a mintable token. Event can call ticket to create a new Token(ticket) for each event.\r\n6: contract Ticket {\r\n   ^^^^^^^^^^^^^^^^\r\n\r\ndebug(develop:0x84ff11e5...)> i\r\nError: Trace and instruction mismatch.\r\n\r\ntrace {\r\n  \"depth\": 0,\r\n  \"error\": \"\",\r\n  \"gas\": 4648350,\r\n  \"gasCost\": 12,\r\n  \"memory\": [\r\n    \"0000000000000000000000000000000000000000000000000000000000000000\",\r\n    \"0000000000000000000000000000000000000000000000000000000000000000\",\r\n    \"0000000000000000000000000000000000000000000000000000000000000060\"\r\n  ],\r\n  \"op\": \"CALLVALUE\",\r\n  \"pc\": 5,\r\n  \"stack\": [],\r\n  \"storage\": {}\r\n}\r\ninstruction {\r\n  \"name\": \"PUSH4\",\r\n  \"fee\": 3,\r\n  \"in\": 0,\r\n  \"out\": 1,\r\n  \"dynamic\": false,\r\n  \"pc\": 5,\r\n  \"pushData\": \"0xffffffff\",\r\n  \"index\": 3,\r\n  \"jump\": \"-\",\r\n  \"start\": 186,\r\n  \"length\": 107,\r\n  \"range\": {\r\n    \"start\": {\r\n      \"line\": 5,\r\n      \"column\": 0\r\n    },\r\n    \"end\": {\r\n      \"line\": 12,\r\n      \"column\": 0\r\n    }\r\n  }\r\n}\r\n\r\nThis is likely due to a bug in the debugger. Please file an issue on the Truffle issue tracker and provide as much information about your code and transaction as possible.\r\n\r\nFatal Error: See above.\r\n    at Debugger.advance (/Users/brianedelman/.nvm/versions/node/v8.4.0/lib/node_modules/truffle/build/cli.bundled.js:308637:13)\r\n    at Debugger.step (/Users/brianedelman/.nvm/versions/node/v8.4.0/lib/node_modules/truffle/build/cli.bundled.js:308669:10)\r\n    at Debugger.stepOver (/Users/brianedelman/.nvm/versions/node/v8.4.0/lib/node_modules/truffle/build/cli.bundled.js:308795:31)\r\n    at Debugger.stepInto (/Users/brianedelman/.nvm/versions/node/v8.4.0/lib/node_modules/truffle/build/cli.bundled.js:308709:17)\r\n    at Object.interpreter (/Users/brianedelman/.nvm/versions/node/v8.4.0/lib/node_modules/truffle/build/cli.bundled.js:301079:22)\r\n    at ReplManager.interpret (/Users/brianedelman/.nvm/versions/node/v8.4.0/lib/node_modules/truffle/build/cli.bundled.js:188429:18)\r\n    at bound (domain.js:301:14)\r\n    at REPLServer.runBound [as eval] (domain.js:314:12)\r\n    at REPLServer.onLine (repl.js:440:10)\r\n    at emitOne (events.js:115:13)\r\n```\r\n\r\nNOTE: For testing purposes I deleted my contracts folder in the build directory, compiled everything again, migrated again just for good measure and then did this process. Additionally I made sure I was doing it with a contract that does bare minimum work. Below is the function for reference.\r\n\r\n```contract Ticket {\r\n  bytes32 public name;\r\n\r\n  function Ticket(bytes32 _name) public {\r\n    name = _name;\r\n  }\r\n}\r\n```",
  "closed_by": {
    "login": "brianedelman",
    "id": 14008969,
    "node_id": "MDQ6VXNlcjE0MDA4OTY5",
    "avatar_url": "https://avatars.githubusercontent.com/u/14008969?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brianedelman",
    "html_url": "https://github.com/brianedelman",
    "followers_url": "https://api.github.com/users/brianedelman/followers",
    "following_url": "https://api.github.com/users/brianedelman/following{/other_user}",
    "gists_url": "https://api.github.com/users/brianedelman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brianedelman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brianedelman/subscriptions",
    "organizations_url": "https://api.github.com/users/brianedelman/orgs",
    "repos_url": "https://api.github.com/users/brianedelman/repos",
    "events_url": "https://api.github.com/users/brianedelman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brianedelman/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/520/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/520/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/343623663",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/520#issuecomment-343623663",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/520",
    "id": 343623663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYyMzY2Mw==",
    "user": {
      "login": "maraoz",
      "id": 287189,
      "node_id": "MDQ6VXNlcjI4NzE4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/287189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maraoz",
      "html_url": "https://github.com/maraoz",
      "followers_url": "https://api.github.com/users/maraoz/followers",
      "following_url": "https://api.github.com/users/maraoz/following{/other_user}",
      "gists_url": "https://api.github.com/users/maraoz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maraoz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maraoz/subscriptions",
      "organizations_url": "https://api.github.com/users/maraoz/orgs",
      "repos_url": "https://api.github.com/users/maraoz/repos",
      "events_url": "https://api.github.com/users/maraoz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maraoz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T00:39:06Z",
    "updated_at": "2017-11-11T00:39:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe this should be an issue in the Truffle repo?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/343623663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
