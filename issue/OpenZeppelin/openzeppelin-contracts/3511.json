{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3511",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3511/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3511/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3511/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3511",
  "id": 1286581197,
  "node_id": "I_kwDOA9tCBs5Mr6vN",
  "number": 3511,
  "title": "Add IERC721Receiver to supportsInterface for Governor, ERC721Holder",
  "user": {
    "login": "songhobby",
    "id": 20029233,
    "node_id": "MDQ6VXNlcjIwMDI5MjMz",
    "avatar_url": "https://avatars.githubusercontent.com/u/20029233?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/songhobby",
    "html_url": "https://github.com/songhobby",
    "followers_url": "https://api.github.com/users/songhobby/followers",
    "following_url": "https://api.github.com/users/songhobby/following{/other_user}",
    "gists_url": "https://api.github.com/users/songhobby/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/songhobby/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/songhobby/subscriptions",
    "organizations_url": "https://api.github.com/users/songhobby/orgs",
    "repos_url": "https://api.github.com/users/songhobby/repos",
    "events_url": "https://api.github.com/users/songhobby/events{/privacy}",
    "received_events_url": "https://api.github.com/users/songhobby/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4953777396,
      "node_id": "LA_kwDOA9tCBs8AAAABJ0Sk9A",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/area:%20governance",
      "name": "area: governance",
      "color": "E7DA84",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/14",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/14",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/14/labels",
    "id": 8383880,
    "node_id": "MI_kwDOA9tCBs4Af-2I",
    "number": 14,
    "title": "4.9",
    "description": "",
    "creator": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 24,
    "state": "closed",
    "created_at": "2022-09-05T16:36:05Z",
    "updated_at": "2023-05-16T01:45:32Z",
    "due_on": null,
    "closed_at": "2023-05-16T01:45:32Z"
  },
  "comments": 4,
  "created_at": "2022-06-27T23:58:27Z",
  "updated_at": "2023-01-19T19:22:29Z",
  "closed_at": "2023-01-19T13:07:40Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "```\r\nfunction supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\r\n        // In addition to the current interfaceId, also support previous version of the interfaceId that did not\r\n        // include the castVoteWithReasonAndParams() function as standard\r\n        return\r\n            interfaceId ==\r\n            (type(IGovernor).interfaceId ^\r\n                this.castVoteWithReasonAndParams.selector ^\r\n                this.castVoteWithReasonAndParamsBySig.selector ^\r\n                this.getVotesWithParams.selector) ||\r\n            interfaceId == type(IGovernor).interfaceId ||\r\n            interfaceId == type(IERC1155Receiver).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n```\r\n=>\r\n```\r\nfunction supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\r\n        // In addition to the current interfaceId, also support previous version of the interfaceId that did not\r\n        // include the castVoteWithReasonAndParams() function as standard\r\n        return\r\n            interfaceId ==\r\n            (type(IGovernor).interfaceId ^\r\n                this.castVoteWithReasonAndParams.selector ^\r\n                this.castVoteWithReasonAndParamsBySig.selector ^\r\n                this.getVotesWithParams.selector) ||\r\n            interfaceId == type(IGovernor).interfaceId ||\r\n            interfaceId == type(IERC721Receiver).interfaceId ||\r\n            interfaceId == type(IERC1155Receiver).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n```",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3511/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3511/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1168329513",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3511#issuecomment-1168329513",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3511",
    "id": 1168329513,
    "node_id": "IC_kwDOA9tCBs5Fo0sp",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-28T07:17:37Z",
    "updated_at": "2022-06-28T07:18:09Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @songhobby \r\n\r\nIn [ERC1155](https://eips.ethereum.org/EIPS/eip-1155), ERC165 is explicitly mentioned, and it is stated that:\r\n\r\n> Smart contracts MUST implement the ERC-165 supportsInterface function and signify support for the ERC1155TokenReceiver interface to accept transfers. See “ERC1155TokenReceiver ERC-165 rules” for further detail.\r\n\r\nIn [ERC721](https://eips.ethereum.org/EIPS/eip-721), ERC165 is mentioned for the `ERC721` contract itself, but not for the `ERC721TokenReceiver`. That means `type(IERC721Receiver).interfaceId` is not standardized, and that is why we don't include it.\r\n\r\nYou can see that \r\n- `token/ERC721/utils/ERC721Holder.sol` doesn't include ERC165\r\n- `token/ERC1155/utils/ERC1155Holder.sol` does include ERC165 (through ERC1155Receiver)\r\n\r\n@frangio, so you think we should include `type(IERC721Receiver).interfaceId` in the governor/timelock ?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1168329513/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1174194183",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3511#issuecomment-1174194183",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3511",
    "id": 1174194183,
    "node_id": "IC_kwDOA9tCBs5F_MgH",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-04T19:46:27Z",
    "updated_at": "2022-07-04T19:46:27Z",
    "author_association": "MEMBER",
    "body": "That's interesting, this is the first time we hear about EIP-165 for EIP-721 receivers. The EIP doesn't seem to require it.\r\n\r\nIf we add this in Governor we should add it in ERC721Holder as well.\r\n\r\nFor some background, Gnosis Safe includes support for the interface:\r\n\r\nhttps://github.com/safe-global/safe-contracts/blob/c36bcab46578a442862d043e12a83fec41143dec/contracts/handler/DefaultCallbackHandler.sol#L58\r\n\r\nI'd be curious to see other contracts that do this.\r\n\r\n@songhobby Do you know of any contracts or systems that assume the interface will be present in `supportsInterface`?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1174194183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1183258362",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3511#issuecomment-1183258362",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3511",
    "id": 1183258362,
    "node_id": "IC_kwDOA9tCBs5Ghxb6",
    "user": {
      "login": "songhobby",
      "id": 20029233,
      "node_id": "MDQ6VXNlcjIwMDI5MjMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/20029233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/songhobby",
      "html_url": "https://github.com/songhobby",
      "followers_url": "https://api.github.com/users/songhobby/followers",
      "following_url": "https://api.github.com/users/songhobby/following{/other_user}",
      "gists_url": "https://api.github.com/users/songhobby/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/songhobby/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/songhobby/subscriptions",
      "organizations_url": "https://api.github.com/users/songhobby/orgs",
      "repos_url": "https://api.github.com/users/songhobby/repos",
      "events_url": "https://api.github.com/users/songhobby/events{/privacy}",
      "received_events_url": "https://api.github.com/users/songhobby/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-13T13:56:09Z",
    "updated_at": "2022-07-13T13:56:09Z",
    "author_association": "NONE",
    "body": "@frangio Not what I'm aware of except for the Gnosis Safe as you pointed out! My rationale to submit issue is that if a contract implements `IERC165`, its `supportsInterface` SHOULD work for all the interfaces the contract implements, or at least for those public well-known interfaces like `IERC721Receiver`. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1183258362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1396949020",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3511#issuecomment-1396949020",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3511",
    "id": 1396949020,
    "node_id": "IC_kwDOA9tCBs5TQ8Ac",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T13:07:40Z",
    "updated_at": "2023-01-19T19:22:29Z",
    "author_association": "COLLABORATOR",
    "body": "We discussed that issue internally and decided to not implement it for the following reason.\r\n\r\nWhile EIP-1155, which requires the receiver to support EIP-165 and to advertise `ERC1155Receiver` support, EIP-721 has no similar requirements. This means that we don't need to include that (and we don't). Adding this support would be going the extra mile to include a feature that is not required.\r\n\r\nWe feel like including it ourselves by default is an opinionated choice. We try to avoid these, and let the user chose which \"options\" they want to add to their contract. Adding EIP-165 and advertising `IERC721Receiver` support is easy. Removing it is way harder. So we are to add it, there must be a clear advantage.\r\n\r\nThe downside is clear.\r\n\r\nWe would be forcing the user to include a feature that is not strictly needed, that they might not want, and that will add to the contract size. Because the function selector for `support interface` is quite small (`0x01ffc9a7`), adding EIP-165 support to a contract will actually make most calls to the contract marginally more expensive (functions lookup is usually linear and performed on the sorted selectors).\r\n\r\nThe upside is not that clear.\r\n\r\nBecause EIP-721 does not require the receiver to have EIP-165 support, someone that is looking for an ERC721Receiver should not rely on EIP-165. Relying on it will fail for most receiver contracts that strictly apply EIP-721. The whole point of EIP-165 is to effectively identify features in contract. This is achieved when EIP-165 support is required, like for the EIP-721 token contract, but its not working when many/most contracts don't support it (we could think of EIP-20). \r\n\r\nIn the case of ERC721Receiver, we fell like, in most cases, it the cost would not be justified. Developers are of course free to add that support themselves (its quite easy to do), but we don't want to force them into this path and make the decision for them.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1396949020/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
