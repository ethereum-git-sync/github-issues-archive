{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2989",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2989/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2989/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2989/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2989",
  "id": 1064556928,
  "node_id": "I_kwDOA9tCBs4_c9mA",
  "number": 2989,
  "title": "Optimize memory allocation in MerkleProof",
  "user": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2021-11-26T14:47:40Z",
  "updated_at": "2021-12-21T20:01:29Z",
  "closed_at": "2021-12-21T20:01:29Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7d17acfb2f12be0a2ad4c08ad4a3d823704b68d6/contracts/utils/cryptography/MerkleProof.sol#L42-L48\r\n\r\n`abi.encodePacked` allocates a new memory location on every iteration. This is incredibly wasteful. For this code in particular we don't even need to allocate new memory, since we're hashing exactly two words, we can use the scratch space in memory.",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2989/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2989/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/980048409",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2989#issuecomment-980048409",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2989",
    "id": 980048409,
    "node_id": "IC_kwDOA9tCBs46aloZ",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-26T15:10:52Z",
    "updated_at": "2021-11-26T15:10:52Z",
    "author_association": "COLLABORATOR",
    "body": "Since both values are bytes32, I expect the resulting hash would be the same, right ? (otherwise it would be a breaking change)\r\n\r\nI that is the case, and if the resulting code is more memory efficient, then we should merge that.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/980048409/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/980059453",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2989#issuecomment-980059453",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2989",
    "id": 980059453,
    "node_id": "IC_kwDOA9tCBs46aoU9",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-26T15:29:38Z",
    "updated_at": "2021-11-26T15:29:38Z",
    "author_association": "COLLABORATOR",
    "body": "I tried using both `abi.encode` and `abi.encodePacked`. With optimizations, running and deploying codes are identical (I believe the produced bytecode is the same).\r\n\r\nWould you like to use assembly?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/980059453/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/980069214",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2989#issuecomment-980069214",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2989",
    "id": 980069214,
    "node_id": "IC_kwDOA9tCBs46aqte",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-26T15:47:39Z",
    "updated_at": "2021-11-26T15:47:45Z",
    "author_association": "MEMBER",
    "body": "Yeah I don't think we have an alternative to using assembly, but we should localize it to a helper function that hashes 2 bytes32 words using the scratch space in memory.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/980069214/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/993211694",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2989#issuecomment-993211694",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2989",
    "id": 993211694,
    "node_id": "IC_kwDOA9tCBs47MzUu",
    "user": {
      "login": "hack3r-0m",
      "id": 54898623,
      "node_id": "MDQ6VXNlcjU0ODk4NjIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/54898623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hack3r-0m",
      "html_url": "https://github.com/hack3r-0m",
      "followers_url": "https://api.github.com/users/hack3r-0m/followers",
      "following_url": "https://api.github.com/users/hack3r-0m/following{/other_user}",
      "gists_url": "https://api.github.com/users/hack3r-0m/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hack3r-0m/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hack3r-0m/subscriptions",
      "organizations_url": "https://api.github.com/users/hack3r-0m/orgs",
      "repos_url": "https://api.github.com/users/hack3r-0m/repos",
      "events_url": "https://api.github.com/users/hack3r-0m/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hack3r-0m/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-14T06:49:08Z",
    "updated_at": "2021-12-14T06:53:13Z",
    "author_association": "NONE",
    "body": "@frangio would something like this work? i can open PR with comparision of performace\r\n\r\n```solidity\r\nfunction efficientHash(bytes32 a, bytes32 b) internal pure returns (bytes32) {\r\n\r\n    assembly {\r\n        mstore(0x00, keccak256(a, b))\r\n        return(0, 0x20)\r\n    }\r\n}\r\n ```",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/993211694/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/994065226",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2989#issuecomment-994065226",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2989",
    "id": 994065226,
    "node_id": "IC_kwDOA9tCBs47QDtK",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-14T21:49:12Z",
    "updated_at": "2021-12-14T21:49:12Z",
    "author_association": "MEMBER",
    "body": "@hack3r-0m No, that function is not correct for a couple of reasons. `return` in an assembly block means something completely different than Solidity return... It will essentially abort execution at the smart contract level, which is not the same as returning from the current function.\r\n\r\nFurthermore `keccak256` takes as parameters a memory location and a length so `a, b` are not appropriate parameters.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/994065226/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/994328583",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2989#issuecomment-994328583",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2989",
    "id": 994328583,
    "node_id": "IC_kwDOA9tCBs47REAH",
    "user": {
      "login": "hack3r-0m",
      "id": 54898623,
      "node_id": "MDQ6VXNlcjU0ODk4NjIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/54898623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hack3r-0m",
      "html_url": "https://github.com/hack3r-0m",
      "followers_url": "https://api.github.com/users/hack3r-0m/followers",
      "following_url": "https://api.github.com/users/hack3r-0m/following{/other_user}",
      "gists_url": "https://api.github.com/users/hack3r-0m/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hack3r-0m/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hack3r-0m/subscriptions",
      "organizations_url": "https://api.github.com/users/hack3r-0m/orgs",
      "repos_url": "https://api.github.com/users/hack3r-0m/repos",
      "events_url": "https://api.github.com/users/hack3r-0m/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hack3r-0m/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-15T06:08:15Z",
    "updated_at": "2021-12-15T06:08:15Z",
    "author_association": "NONE",
    "body": "thanks @frangio for helping\r\n```solidity\r\nfunction efficientHash(bytes32 a, bytes32 b) public pure returns (bytes32 value) {\r\n\r\n    assembly {\r\n        mstore(0x00, a)\r\n        mstore(0x20, b)\r\n\r\n        value := keccak256(0x00, 0x40)\r\n    }\r\n}\r\n```\r\nI tried the above functions with a few random inputs and it seems to work. what would be the best way to return value from a function without aborting execution? I checked yul docs but there does not seem to be way other than pushing on top of stack",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/994328583/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/995085460",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2989#issuecomment-995085460",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2989",
    "id": 995085460,
    "node_id": "IC_kwDOA9tCBs47T8yU",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-15T18:51:08Z",
    "updated_at": "2021-12-15T18:51:08Z",
    "author_association": "MEMBER",
    "body": "@hack3r-0m's proposal is correct. The 64 bytes starting at position 0 are [\"scratch space for hashing methods\"](https://docs.soliditylang.org/en/latest/internals/layout_in_memory.html). The zero slot is at 0x60.\r\n\r\nPlease open a PR!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/995085460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
