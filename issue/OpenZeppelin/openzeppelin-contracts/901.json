{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/901",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/901/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/901/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/901/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/901",
  "id": 315751227,
  "node_id": "MDU6SXNzdWUzMTU3NTEyMjc=",
  "number": 901,
  "title": "PullPayment.asyncSend() flow is unreliable",
  "user": {
    "login": "sebastien-kr",
    "id": 36612453,
    "node_id": "MDQ6VXNlcjM2NjEyNDUz",
    "avatar_url": "https://avatars.githubusercontent.com/u/36612453?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebastien-kr",
    "html_url": "https://github.com/sebastien-kr",
    "followers_url": "https://api.github.com/users/sebastien-kr/followers",
    "following_url": "https://api.github.com/users/sebastien-kr/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebastien-kr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebastien-kr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebastien-kr/subscriptions",
    "organizations_url": "https://api.github.com/users/sebastien-kr/orgs",
    "repos_url": "https://api.github.com/users/sebastien-kr/repos",
    "events_url": "https://api.github.com/users/sebastien-kr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebastien-kr/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 417782817,
      "node_id": "MDU6TGFiZWw0MTc3ODI4MTc=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/bug",
      "name": "bug",
      "color": "b60205",
      "default": true,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-04-19T07:03:38Z",
  "updated_at": "2018-07-03T21:54:56Z",
  "closed_at": "2018-07-03T21:54:56Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## 🎉 Description\r\nRegarding  [contracts/payment/PullPayment.sol](https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/payment/PullPayment.sol)\r\nYou have to **trust** the person doing an `asyncSend` that he/she will not take out the amount that was *promised* as a payment before the withdrawal.\r\n\r\n- [x] 🐛 This is a bug report.\r\n\r\n## 📝 Details\r\n\r\nThere should be some kind of insurance for the receiver that he/she will get the amount sent asynchronously.\r\n\r\n### Problem 1 \r\nIt is possible to `asyncSend` the max value of `uint256` to anyone, no check are done.\r\nA simple solution would be to add this  to the `asyncSend` method :\r\n```solidity\r\nrequire(address(this).balance >= amount);\r\n```\r\n(Note : I know that would remove the ability to *promise* to withdraw as soon as there are funds later on.)\r\n\r\n### Problem 2\r\nUsing this flaw, let say you send 2 ETH to `a` and `b`. You only have 2.99 ETH, so when `b` withdraw first there is no problem. But when `a` tries to withdraw 2 ETH it fails because there is now only 1.99 ETH in the balance. \r\nAs a solution, this new `require` introduced earlier could check that the balance is greater than all the payments :\r\n```solidity\r\nrequire(address(this).balance >= totalPayments);\r\n```\r\n\r\n### Problem 3\r\nIt is possible to only withdraw 100% of the amount or nothing.  \r\nShouldn't `a` be able to withdraw 1.99 at least ? \r\n\r\nIn `PullPayment.sol` line 23 :   \r\n```solidity\r\nuint256 payment = payments[payee];\r\n```\r\nThis could be replaced with something like :  \r\n```solidity\r\nuint256 payment = address(this).balance.sub(payments[payee]);\r\n```\r\n\r\n### Problem 4\r\nThere is no priority : first arrived, first served.  \r\nThe solution may require a cancellation process to avoid freezing the balance with payments that are never pulled out / withdrawn... So I'll just skip a solution proposal.\r\n\r\n---\r\n\r\nI would like to add that I know we cannot be sure the balance will stay above a certain value so these constraints may be unnecessary work.\r\nStill, the behavior of the `asyncSend` should be a bit more predictable or renamed to something like `maySend` to avoid confusion. ",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/901/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/901/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/382769705",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/901#issuecomment-382769705",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/901",
    "id": 382769705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mjc2OTcwNQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-19T15:02:08Z",
    "updated_at": "2018-04-19T15:02:08Z",
    "author_association": "MEMBER",
    "body": "Thaks for the report @sebastien-kr. I agree with your assessment. Perhaps `PullPayment` should be a separate contract that holds the ether.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/382769705/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/383434535",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/901#issuecomment-383434535",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/901",
    "id": 383434535,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzQzNDUzNQ==",
    "user": {
      "login": "Heph789",
      "id": 20362850,
      "node_id": "MDQ6VXNlcjIwMzYyODUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20362850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Heph789",
      "html_url": "https://github.com/Heph789",
      "followers_url": "https://api.github.com/users/Heph789/followers",
      "following_url": "https://api.github.com/users/Heph789/following{/other_user}",
      "gists_url": "https://api.github.com/users/Heph789/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Heph789/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Heph789/subscriptions",
      "organizations_url": "https://api.github.com/users/Heph789/orgs",
      "repos_url": "https://api.github.com/users/Heph789/repos",
      "events_url": "https://api.github.com/users/Heph789/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Heph789/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-23T02:07:32Z",
    "updated_at": "2018-04-23T02:08:12Z",
    "author_association": "NONE",
    "body": "`PullPayment` could be a separate contract whose owner is a different contract `PullPaymentUser`. Any money sent to `PullPaymentUser` is redirected to `PullPayment` if `PullPayment`'s balance is less than `totalPayments`.\r\n\r\nFor example,\r\n\r\n```\r\ncontract PullPayment is Ownable {\r\n    function asyncSend() isOwner {}\r\n}\r\n\r\ncontract PullPaymentUser {\r\n    PullPayment vault;\r\n    constructor() {\r\n        vault = new PullPayment();\r\n    }\r\n    function () payable {\r\n        if(address(vault).balance < vault.totalPayments) {\r\n            uint256 amountNeeded = vault.totalPayments.sub(address(vault).balance);\r\n            if (amountNeeded >= address(this).balance) {\r\n                address(vault).transfer(address(this).balance);\r\n            }\r\n            else {\r\n                address(vault).transfer(amountNeeded);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/383434535/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
