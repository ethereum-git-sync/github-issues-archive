{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3974",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3974/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3974/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3974/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3974",
  "id": 1548966126,
  "node_id": "I_kwDOA9tCBs5cU1ju",
  "number": 3974,
  "title": "Checkpoints.History cause \"out of gas\" error",
  "user": {
    "login": "virgilea2410",
    "id": 13795895,
    "node_id": "MDQ6VXNlcjEzNzk1ODk1",
    "avatar_url": "https://avatars.githubusercontent.com/u/13795895?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/virgilea2410",
    "html_url": "https://github.com/virgilea2410",
    "followers_url": "https://api.github.com/users/virgilea2410/followers",
    "following_url": "https://api.github.com/users/virgilea2410/following{/other_user}",
    "gists_url": "https://api.github.com/users/virgilea2410/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/virgilea2410/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/virgilea2410/subscriptions",
    "organizations_url": "https://api.github.com/users/virgilea2410/orgs",
    "repos_url": "https://api.github.com/users/virgilea2410/repos",
    "events_url": "https://api.github.com/users/virgilea2410/events{/privacy}",
    "received_events_url": "https://api.github.com/users/virgilea2410/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-01-19T11:20:19Z",
  "updated_at": "2023-01-19T18:59:00Z",
  "closed_at": "2023-01-19T14:08:31Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hello,\r\n\r\nI am using a mapping of Checkpoints.History in my ERC1155-based contract to be able to know the balance of each user at a given block number.\r\n\r\nFor a unknown reason, the mint function, which calls the \"push\" function of Checkpoints.History, is periodically failing on \"out of gas\" error. \r\nWhile debugging, I can see it happens on the SSTORE operation on the line 144 of Checkpoints.sol\r\n\r\nHere's my environment : \r\n- Remix \r\n- pragma solidity >=0.7.0\r\n\r\nThe mapping is defined as follow : \r\n\r\nmapping(uint256 => mapping(address => Checkpoints.History)) private balanceHistory;\r\n\r\nAnd the mint function : \r\n\r\n```solidity\r\n// Mint Logic\r\n    function _mintNFT(uint32 nMint, address recipient)\r\n      internal\r\n  {\r\n      // require(tx.origin == msg.sender, \"No bots allowed\");\r\n      require(totalSupply(currentTokenId) + nMint <= MAX_SUPPLY, \"No more NFT to mint\");\r\n      require(waveCurrentSupply[currentTokenId] + nMint <= waveMintableSupply[currentTokenId], \"No more NFT to mint for this wave\");\r\n      require(waveIsRunning[currentTokenId], \"Wave has ended\");\r\n      waveBalance[currentTokenId] += msg.value;\r\n      waveCurrentSupply[currentTokenId] += nMint;\r\n      waveMints[currentTokenId][recipient] += nMint;\r\n      // balanceHistory[currentTokenId][recipient].push(_add, nMint);\r\n      balanceHistory[currentTokenId][recipient].push(balanceOf(recipient, currentTokenId) + nMint);\r\n      _mint(recipient, currentTokenId, nMint, \"\");\r\n  }\r\n```\r\n\r\n==> I tried both using push(op, value) and push(value)\r\n\r\n\r\n",
  "closed_by": {
    "login": "virgilea2410",
    "id": 13795895,
    "node_id": "MDQ6VXNlcjEzNzk1ODk1",
    "avatar_url": "https://avatars.githubusercontent.com/u/13795895?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/virgilea2410",
    "html_url": "https://github.com/virgilea2410",
    "followers_url": "https://api.github.com/users/virgilea2410/followers",
    "following_url": "https://api.github.com/users/virgilea2410/following{/other_user}",
    "gists_url": "https://api.github.com/users/virgilea2410/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/virgilea2410/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/virgilea2410/subscriptions",
    "organizations_url": "https://api.github.com/users/virgilea2410/orgs",
    "repos_url": "https://api.github.com/users/virgilea2410/repos",
    "events_url": "https://api.github.com/users/virgilea2410/events{/privacy}",
    "received_events_url": "https://api.github.com/users/virgilea2410/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3974/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3974/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1396920663",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3974#issuecomment-1396920663",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3974",
    "id": 1396920663,
    "node_id": "IC_kwDOA9tCBs5TQ1FX",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T12:44:54Z",
    "updated_at": "2023-01-19T12:44:54Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @virgilea2410 \r\n\r\nThe gas cost of pushing to `Checkpoints.History` is constant, so it should not be a blocker that would lock your contract. However, because the fact that checkpoints can sometimes overwritten might throw the gas prediction off.\r\n\r\nBasically the gas prediction might think that the block number is the same, and that a dirty slot will be reused when the truth is that the tx will be in a new block, and that will require a new slot (which is more expensive)\r\n\r\nIn any case, it looks like the issue is not with the contract, but with the tooling used to call the contract.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1396920663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1396941807",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3974#issuecomment-1396941807",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3974",
    "id": 1396941807,
    "node_id": "IC_kwDOA9tCBs5TQ6Pv",
    "user": {
      "login": "virgilea2410",
      "id": 13795895,
      "node_id": "MDQ6VXNlcjEzNzk1ODk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13795895?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/virgilea2410",
      "html_url": "https://github.com/virgilea2410",
      "followers_url": "https://api.github.com/users/virgilea2410/followers",
      "following_url": "https://api.github.com/users/virgilea2410/following{/other_user}",
      "gists_url": "https://api.github.com/users/virgilea2410/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/virgilea2410/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/virgilea2410/subscriptions",
      "organizations_url": "https://api.github.com/users/virgilea2410/orgs",
      "repos_url": "https://api.github.com/users/virgilea2410/repos",
      "events_url": "https://api.github.com/users/virgilea2410/events{/privacy}",
      "received_events_url": "https://api.github.com/users/virgilea2410/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T13:02:37Z",
    "updated_at": "2023-01-19T13:02:37Z",
    "author_association": "NONE",
    "body": "@Amxx ,\r\n\r\nThanks a lot for the help.\r\nI now understand where the problem is.\r\n\r\nIt was indeed my first idea (that the gas estimation was somehow wrong) but didn't think about the fact that block number would be different at gas estimation time VS runtime.\r\n\r\nAs far as you know, does it sounds normal to you that metamask is also wrongly estimating the gas (because saying that tx will probably succeed in less that 15sec), although when launching the tx with metamask, block number should be with a high probability the same that the one at runtime ? \r\nI would expect metamask to say \"unknown delay\" when estimating gas on its side\r\n\r\nAlso, ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1396941807/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1397036625",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3974#issuecomment-1397036625",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3974",
    "id": 1397036625,
    "node_id": "IC_kwDOA9tCBs5TRRZR",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T14:08:31Z",
    "updated_at": "2023-01-19T14:08:31Z",
    "author_association": "COLLABORATOR",
    "body": "I'm not sure if metamask is the one doing the gas estimation, if its performed by the library that connects to metamask, or if its a matter of the node metamask connects to.\r\n\r\nThis is unfortunately a common issue. I encourage you to ask your question on the [openzeppelin forum](forum.openzeppelin.com/) where you may find users that have had, and fixed, this issue.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1397036625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1397461160",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3974#issuecomment-1397461160",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3974",
    "id": 1397461160,
    "node_id": "IC_kwDOA9tCBs5TS5Co",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T18:58:51Z",
    "updated_at": "2023-01-19T18:59:00Z",
    "author_association": "MEMBER",
    "body": "Gas estimation may be assuming execution happens as part of the last mined block. If the last block has a checkpoint, the estimation will think that it can update that checkpoint but in fact the transaction will be included in the next block so it needs to create a new checkpoint, and the gas may not be enough for that because it's more expensive. Try waiting for a block to mine in between.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1397461160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
