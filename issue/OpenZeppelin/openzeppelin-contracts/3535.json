{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3535",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3535/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3535/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3535/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3535",
  "id": 1297974013,
  "node_id": "I_kwDOA9tCBs5NXYL9",
  "number": 3535,
  "title": "Consider alternative design for token transfers and hooks",
  "user": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1000230196,
      "node_id": "MDU6TGFiZWwxMDAwMjMwMTk2",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/breaking%20change",
      "name": "breaking change",
      "color": "b60205",
      "default": false,
      "description": "Changes that break backwards compatibility of the public API."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/milestone/11",
    "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/milestones/11/labels",
    "id": 7990184,
    "node_id": "MI_kwDOA9tCBs4Aeeuo",
    "number": 11,
    "title": "5.0",
    "description": null,
    "creator": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 43,
    "closed_issues": 21,
    "state": "open",
    "created_at": "2022-05-17T19:52:44Z",
    "updated_at": "2023-06-02T17:21:01Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 4,
  "created_at": "2022-07-07T19:27:25Z",
  "updated_at": "2023-04-09T01:44:44Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "The way to customize token transfers today is by overriding the hooks `_beforeTokenTransfer` and `_afterTokenTransfer`. This was designed this way because there are multiple related operations (mint, transfer, burn) that would generally be customized in a uniform way (e.g. \"pause transfers\" should also pause mints), and they are different functions all of which invoke the same hooks.\r\n\r\nAn alternative that we can consider is instead to have a single entry point for all of these operations, a `_transfer` function that mints if the \"from\" argument is 0, etc., as suggested in #3109 for ERC20 (the same applies to other tokens). Hooks can then be removed because customizing transfers can be done by overriding this single function instead of overriding the hooks.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3535/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3535/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1183264431",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3535#issuecomment-1183264431",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3535",
    "id": 1183264431,
    "node_id": "IC_kwDOA9tCBs5Ghy6v",
    "user": {
      "login": "songhobby",
      "id": 20029233,
      "node_id": "MDQ6VXNlcjIwMDI5MjMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/20029233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/songhobby",
      "html_url": "https://github.com/songhobby",
      "followers_url": "https://api.github.com/users/songhobby/followers",
      "following_url": "https://api.github.com/users/songhobby/following{/other_user}",
      "gists_url": "https://api.github.com/users/songhobby/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/songhobby/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/songhobby/subscriptions",
      "organizations_url": "https://api.github.com/users/songhobby/orgs",
      "repos_url": "https://api.github.com/users/songhobby/repos",
      "events_url": "https://api.github.com/users/songhobby/events{/privacy}",
      "received_events_url": "https://api.github.com/users/songhobby/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-13T14:01:00Z",
    "updated_at": "2022-07-13T14:07:52Z",
    "author_association": "NONE",
    "body": "In our `ERC1155` contract, we have a single `TokenTransfer` function which is called by `safeTransferFrom`, `safeBatchTransferFrom`, `mintBatch` and `burnBatch`. For batch operations, the `TokenTransfer` is called inside of the loop for `tokenIds`. For minting and burning, we set the `from` and `to` to `address(0)`\r\n\r\nWe have token delegation and snapshots with majority of its logic in `TokenTransfer`",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1183264431/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1371063732",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3535#issuecomment-1371063732",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3535",
    "id": 1371063732,
    "node_id": "IC_kwDOA9tCBs5RuMW0",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-04T15:20:46Z",
    "updated_at": "2023-01-04T15:20:46Z",
    "author_association": "MEMBER",
    "body": "Other hooks that we have:\r\n\r\n- `Governor`: `_beforeExecute`, `_afterExecute`\r\n- `TimelockController`: `_beforeCall`, `_afterCall`\r\n- `Proxy`: `_beforeFallback`",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1371063732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1402622017",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3535#issuecomment-1402622017",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3535",
    "id": 1402622017,
    "node_id": "IC_kwDOA9tCBs5TmlBB",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-24T20:42:09Z",
    "updated_at": "2023-01-24T20:42:09Z",
    "author_association": "MEMBER",
    "body": "This is implemented in `next-v5.0` (#3838, #3921, #3876). There was an attempt to implement it for ERC721 (https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3893) but we ran into issues with the design summarized by @Amxx in [this comment](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3893#issuecomment-1382051919):\r\n\r\n> Here is a summary of the identified issues that would need to be fixed:\r\n> \r\n> - `_update` does not check the `from`. This means that a dev could call the `_update` function with an invalid from, and cause:\r\n> \t-  an invalid event to be emitted\r\n> \t- corruption of the `balances` mapping.\r\n> - `_update` does different operation depending on the batchSize:\r\n> \t- if the batchSize is 1, it will update the ownership, reset the approval, update the balances, and emit an event.\r\n> \t- if the batchSize is not 0, it will just update the balance, but not do the transfer.\r\n> This is error prone, because the dev have to understand that this function will do two very different thinks depending on this \"small\" parameter. It is possible that devs call this with a batchsize > 1 hoping that it will transfer a batch of token. This argues against having a single `_update` for both single and batched operations.\r\n> - Cleanly support batchSize = 0 in extensions. \r\n> \t- Some of them are not designed to handle batches, and just don't know not to process burns of size > 1. The fact that they \"hook\" into `_update(address,address,uint256,uint256)` means they could see signals they don't know how to handle. Hopefully they never have to, but this also argues against having a single `_update` for both single and batched operations.\r\n> \t- Affected extensions:\r\n> \t\t- ERC721Storage\r\n> \t\t- ERC721Royalty\r\n> \t\t- ERC721Enumerable\r\n> - Document situations where we don't follow our own guidelines.\r\n> \t- In ERC721Consecutive, we do some operations before, and other after the  `super._uodate(...)` call. This is in conflict with our guidelines\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1402622017/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1501016539",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3535#issuecomment-1501016539",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3535",
    "id": 1501016539,
    "node_id": "IC_kwDOA9tCBs5Zd7Hb",
    "user": {
      "login": "RenanSouza2",
      "id": 28443115,
      "node_id": "MDQ6VXNlcjI4NDQzMTE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/28443115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RenanSouza2",
      "html_url": "https://github.com/RenanSouza2",
      "followers_url": "https://api.github.com/users/RenanSouza2/followers",
      "following_url": "https://api.github.com/users/RenanSouza2/following{/other_user}",
      "gists_url": "https://api.github.com/users/RenanSouza2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RenanSouza2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RenanSouza2/subscriptions",
      "organizations_url": "https://api.github.com/users/RenanSouza2/orgs",
      "repos_url": "https://api.github.com/users/RenanSouza2/repos",
      "events_url": "https://api.github.com/users/RenanSouza2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RenanSouza2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-09T01:44:44Z",
    "updated_at": "2023-04-09T01:44:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey everyone, I am writing my own implementation of the _update hook for ERC721 and I have one Idea that I would like to share\r\n\r\nI made one compromise, to remove the batchSize from the update, all updates are for one token.\r\n\r\n(I've updated the code in this PR but is not final yet: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4171)\r\n\r\nHow this interacts with the rest: there is a new function increaseBalance that is called in _mintBatch in ERC721Consecutive, \r\n\r\nMy biggest doubt so far, I'm struggling to refactor ERC721ConsecutiveMock, \r\nIs ERC721 a good way to represent votes? isn't ERC20 or ERC1155 a better way to do this?\r\n\r\nIf this case is removes the _update function for one token only solves very well the other cases",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1501016539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
