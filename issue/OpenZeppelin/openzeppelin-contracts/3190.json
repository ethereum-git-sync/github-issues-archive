{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3190",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3190/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3190/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3190/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3190",
  "id": 1134585615,
  "node_id": "I_kwDOA9tCBs5DoGcP",
  "number": 3190,
  "title": "Optimize `Strings.toString(uint)` implementation",
  "user": {
    "login": "3sGgpQ8H",
    "id": 3917202,
    "node_id": "MDQ6VXNlcjM5MTcyMDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/3sGgpQ8H",
    "html_url": "https://github.com/3sGgpQ8H",
    "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
    "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
    "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
    "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
    "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
    "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
    "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-02-12T20:46:00Z",
  "updated_at": "2022-09-16T20:12:37Z",
  "closed_at": "2022-09-16T20:12:13Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nThe current `Strings.toString(uint)` implementation is quite inefficient on large inputs. \r\n\r\n**üìù Details**\r\nConsider optimizing it as suggested here: https://stackoverflow.com/a/71095692/2038768",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3190/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3190/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1043522417",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3190#issuecomment-1043522417",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3190",
    "id": 1043522417,
    "node_id": "IC_kwDOA9tCBs4-MuNx",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-17T22:09:41Z",
    "updated_at": "2022-02-17T22:09:41Z",
    "author_association": "MEMBER",
    "body": "Thank you @3sGgpQ8H. Can you elaborate on what exactly makes the current implementation inefficient and what is the reason we would see an improvement with the link you shared?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1043522417/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1046074303",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3190#issuecomment-1046074303",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3190",
    "id": 1046074303,
    "node_id": "IC_kwDOA9tCBs4-WdO_",
    "user": {
      "login": "3sGgpQ8H",
      "id": 3917202,
      "node_id": "MDQ6VXNlcjM5MTcyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3sGgpQ8H",
      "html_url": "https://github.com/3sGgpQ8H",
      "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
      "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
      "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
      "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
      "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
      "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-19T18:06:08Z",
    "updated_at": "2022-02-19T18:06:08Z",
    "author_association": "NONE",
    "body": "Sure.\r\n\r\n1. The current implementation uses linear search to find out the number of digits in the result, while binary search would be much more efficient: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol#L22-L27\r\n2. In the current implementation, the main loop evaluate loop condition after every digit, which is a significant overhead.  Unrolling the loop could save much gas.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1046074303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1046122841",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3190#issuecomment-1046122841",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3190",
    "id": 1046122841,
    "node_id": "IC_kwDOA9tCBs4-WpFZ",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-19T23:18:48Z",
    "updated_at": "2022-02-19T23:18:48Z",
    "author_association": "MEMBER",
    "body": "Got it. Agree with the first point. Perhaps we should have a general purpose `Math.log10` and use that function here?\r\n\r\nFor the second point we need to consider that `toString` returns a string of arbitrary length so I'm not sure how that plays together with the loop unrolling.\r\n\r\nAs a side note, do you see this function being used on-chain as opposed to off-chain queries?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1046122841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1047660240",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3190#issuecomment-1047660240",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3190",
    "id": 1047660240,
    "node_id": "IC_kwDOA9tCBs4-cgbQ",
    "user": {
      "login": "3sGgpQ8H",
      "id": 3917202,
      "node_id": "MDQ6VXNlcjM5MTcyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3917202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3sGgpQ8H",
      "html_url": "https://github.com/3sGgpQ8H",
      "followers_url": "https://api.github.com/users/3sGgpQ8H/followers",
      "following_url": "https://api.github.com/users/3sGgpQ8H/following{/other_user}",
      "gists_url": "https://api.github.com/users/3sGgpQ8H/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3sGgpQ8H/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3sGgpQ8H/subscriptions",
      "organizations_url": "https://api.github.com/users/3sGgpQ8H/orgs",
      "repos_url": "https://api.github.com/users/3sGgpQ8H/repos",
      "events_url": "https://api.github.com/users/3sGgpQ8H/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3sGgpQ8H/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-22T10:41:12Z",
    "updated_at": "2022-02-22T10:41:12Z",
    "author_association": "NONE",
    "body": "> I'm not sure how that plays together with the loop unrolling.\r\n\r\nLook at the StackOverflow answer referred in the original post.\r\n\r\n> As a side note, do you see this function being used on-chain as opposed to off-chain queries?\r\n\r\nSurely, its its primary purpose is to be used on-chain.  For off-chain use it would be more efficient to return a number and convert to a string off-chain (i.e. in UI).  Two quite common on-chain usages are:\r\n1. Include a number into a signed message whose signature is verified by a smart contract (a message has to be human readable, thus numbers are included in decimal format)\r\n2. Append a token ID to a ERC-721 NFT URI",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1047660240/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1048150462",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3190#issuecomment-1048150462",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3190",
    "id": 1048150462,
    "node_id": "IC_kwDOA9tCBs4-eYG-",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-22T19:44:41Z",
    "updated_at": "2022-02-22T19:44:41Z",
    "author_association": "MEMBER",
    "body": "I hadn't realized the StackOverflow answer was Solidity. :slightly_smiling_face: \r\n\r\nSignatures are a decent use case, though a standard like EIP712 doesn't convert them to decimal format. NFT URIs are not normally computed on chain as far as I know.\r\n\r\nIn any case I think it makes sense to optimize this.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1048150462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1249768238",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3190#issuecomment-1249768238",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3190",
    "id": 1249768238,
    "node_id": "IC_kwDOA9tCBs5KffMu",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-16T20:12:13Z",
    "updated_at": "2022-09-16T20:12:37Z",
    "author_association": "MEMBER",
    "body": "Fixed by https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3573 where `toString` was changed to binary search (see also the new log functions from #3670).\r\n\r\nWe haven't unrolled the loop. We can consider that if someone wants to open a PR and it shows significant savings.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1249768238/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
