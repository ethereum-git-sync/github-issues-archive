{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3118",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3118/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3118/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3118/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3118",
  "id": 1107020314,
  "node_id": "I_kwDOA9tCBs5B-8oa",
  "number": 3118,
  "title": "ERC721 optimised for sequential id and no burn",
  "user": {
    "login": "aalmada",
    "id": 534533,
    "node_id": "MDQ6VXNlcjUzNDUzMw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/534533?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aalmada",
    "html_url": "https://github.com/aalmada",
    "followers_url": "https://api.github.com/users/aalmada/followers",
    "following_url": "https://api.github.com/users/aalmada/following{/other_user}",
    "gists_url": "https://api.github.com/users/aalmada/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aalmada/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aalmada/subscriptions",
    "organizations_url": "https://api.github.com/users/aalmada/orgs",
    "repos_url": "https://api.github.com/users/aalmada/repos",
    "events_url": "https://api.github.com/users/aalmada/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aalmada/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2022-01-18T15:08:20Z",
  "updated_at": "2022-01-31T09:03:34Z",
  "closed_at": "2022-01-31T09:03:34Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n<!-- Is your feature request related to a specific problem? Is it just a crazy idea? Tell us about it! -->\r\nThe high values for gas fees when minting has been a big issue. [There have been some suggestions on how to lower these](https://shiny.mirror.xyz/OUampBbIz9ebEicfGnQf5At_ReMHlZy0tB4glb9xQ0E) when using the `ERC721` contract but then these are limited to the implementation of this same contract.\r\n\r\nThe `ERC721` contract is rightfully a general implementation but there's one case where it should be possible to considerably reduce the gas usage.  I believe this is a very common case.\r\n\r\n**üìù Details**\r\n<!-- Please describe your feature request in detail. -->\r\n\r\nFor the case when using sequential ids and there's no support for burning tokens the following optimizations for `ERC721` are possible:\r\n\r\n1. `_owners` can be an array instead of a mapping.\r\n\r\nhttps://github.com/aalmada/openzeppelin-contracts/blob/44d55cfe3298d563a63df7b5d67711312810112b/contracts/token/ERC721/ERC721Lite.sol#L32\r\n\r\n2. `exists()` can just check if the `tokenId`is smaller than `_owners.length`\r\n\r\nhttps://github.com/aalmada/openzeppelin-contracts/blob/44d55cfe3298d563a63df7b5d67711312810112b/contracts/token/ERC721/ERC721Lite.sol#L233-L235\r\n\r\n3. `mint()` can generate the `tokenId` from the value of `_owners.length` and `_owners` can be updated by using `_owners.push(to)`\r\n\r\nhttps://github.com/aalmada/openzeppelin-contracts/blob/44d55cfe3298d563a63df7b5d67711312810112b/contracts/token/ERC721/ERC721Lite.sol#L289-L302\r\n\r\n`ERC721Enumerable` can also be optimized:\r\n\r\n1. `_allTokens` and `_allTokensIndex` can be removed.\r\n\r\n2. `totalSupply()` can return the `_owners.length` from `ERC721` exposed as an internal `_totalSupply()` method.\r\n\r\nhttps://github.com/aalmada/openzeppelin-contracts/blob/44d55cfe3298d563a63df7b5d67711312810112b/contracts/token/ERC721/extensions/ERC721LiteEnumerable.sol#L40-L42\r\n\r\n3. `tokenByIndex()` can simply return the `index` value\r\n\r\nhttps://github.com/aalmada/openzeppelin-contracts/blob/44d55cfe3298d563a63df7b5d67711312810112b/contracts/token/ERC721/extensions/ERC721LiteEnumerable.sol#L47-L50\r\n\r\n**Conclusions**\r\n\r\nMy tests show that gas usage for minting reduces from around 161k to around 101k. I believe this can be considered a significant improvement for a very common scenario.\r\n\r\nI'd like to know your opinions and if I should consider submitting a PR.\r\n\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contracts Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/CONTRIBUTING.md -->\r\n",
  "closed_by": {
    "login": "aalmada",
    "id": 534533,
    "node_id": "MDQ6VXNlcjUzNDUzMw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/534533?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aalmada",
    "html_url": "https://github.com/aalmada",
    "followers_url": "https://api.github.com/users/aalmada/followers",
    "following_url": "https://api.github.com/users/aalmada/following{/other_user}",
    "gists_url": "https://api.github.com/users/aalmada/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aalmada/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aalmada/subscriptions",
    "organizations_url": "https://api.github.com/users/aalmada/orgs",
    "repos_url": "https://api.github.com/users/aalmada/repos",
    "events_url": "https://api.github.com/users/aalmada/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aalmada/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3118/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3118/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1020374035",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3118#issuecomment-1020374035",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3118",
    "id": 1020374035,
    "node_id": "IC_kwDOA9tCBs480awT",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-24T17:49:38Z",
    "updated_at": "2022-01-24T17:53:29Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @aalmada \r\n\r\nThere is a lot of discussion around the gas usage of ERC721 lately, and we appreciate the clarity of your approach. We understand that in very specific cases, our implementation is not the most gas effective. Sequential tokens minting with no burn is definitely one of these specific cases.\r\n\r\nWe care a lot about the versatility and backward compatibility of our codebase. For this reason, we don't think it would be reasonable to deprecate our current proposal. AFAIK, nobody is asking for that anyway.\r\n \r\nIf we were to provide an implementation optimized for this specific case, we would be splitting our codebase, with unclear compatibility with ERC721 modules (voting being the last one). I don't think this is optimal.\r\n\r\nAn opinion that we have shared, and that we will continue to share, is that ERC721Enumerable should not be used unless absolutely necessary. I have personally never seen any situation where it was actually needed. If you don't include Enumerability, our (generic) implementation is as cheap as any other (that is focused on \"batch-minting\") within the margin or error.\r\n\r\nMy answer to your issue would then be:\r\n- We strongly encourage the community to build and distribute contracts that are optimized for specific requirements (that our generic contracts are not optimized for)\r\n- Please please please, don't use enumerability unless you really need to. And if you don't need it, then benchmark other implementations against our \"core\" erc721 contract.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1020374035/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1020378524",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3118#issuecomment-1020378524",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3118",
    "id": 1020378524,
    "node_id": "IC_kwDOA9tCBs480b2c",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-24T17:54:53Z",
    "updated_at": "2022-01-24T17:54:53Z",
    "author_association": "COLLABORATOR",
    "body": "Linking [this post with gas reports](https://forum.openzeppelin.com/t/erc721enumerable-gas-optimization/22795/3) as a reference.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1020378524/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1020540419",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3118#issuecomment-1020540419",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3118",
    "id": 1020540419,
    "node_id": "IC_kwDOA9tCBs481DYD",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-24T20:58:49Z",
    "updated_at": "2022-01-24T21:23:27Z",
    "author_association": "MEMBER",
    "body": "> ERC721Enumerable should not be used unless absolutely necessary. I have personally never seen any situation where it was actually needed.\r\n\r\nIf somebody knows something about this that we're missing, please let us know...\r\n\r\nThe only place I know that requires enumerability (last time I checked) was the \"total supply\" field in Etherscan, that shows up as 0 unless the token is enumerable. This is relatively a big deal but I would argue that Etherscan is doing the wrong thing here... `totalSupply` is only available in the enumerable extension, and the enumerable extension is necessarily more expensive, as there is a lot more bookkeeping that becomes necessary.\r\n\r\nOne thing we could consider and I think I've mentioned before is we could have an `ERC721Supply` with _only_ total supply (analogous to `ERC1155Supply`!), if this makes Etherscan happy. But they could infer total supply from the `Transfer` events as well.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1020540419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021072795",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3118#issuecomment-1021072795",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3118",
    "id": 1021072795,
    "node_id": "IC_kwDOA9tCBs483FWb",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-25T11:05:50Z",
    "updated_at": "2022-01-25T11:05:50Z",
    "author_association": "COLLABORATOR",
    "body": "Note that [in some cases](https://etherscan.io/address/0x0Fb42287aF82BbC9f6532bbd0af3aeb92EA2A616#code#F22#L6), ERC721 contract implement a `totalSupply` that is not the current supply, but the total mintable supply.\r\n\r\nEtherscan even advertises it as the \"Maximum total supply\"",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021072795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021185634",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3118#issuecomment-1021185634",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3118",
    "id": 1021185634,
    "node_id": "IC_kwDOA9tCBs483g5i",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-25T13:31:18Z",
    "updated_at": "2022-01-25T13:31:18Z",
    "author_association": "MEMBER",
    "body": "What you're saying implies that using events to infer total supply may lead to an inaccurate number. But if `totalSupply` is not available that's the best thing you can do.\r\n\r\nOur potential `ERC721Supply` contract would not support that, totalSupply would track the minted supply, but this is fine, if someone wants something else they can write their own totalSupply function.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021185634/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021479811",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3118#issuecomment-1021479811",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3118",
    "id": 1021479811,
    "node_id": "IC_kwDOA9tCBs484ouD",
    "user": {
      "login": "aalmada",
      "id": 534533,
      "node_id": "MDQ6VXNlcjUzNDUzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/534533?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aalmada",
      "html_url": "https://github.com/aalmada",
      "followers_url": "https://api.github.com/users/aalmada/followers",
      "following_url": "https://api.github.com/users/aalmada/following{/other_user}",
      "gists_url": "https://api.github.com/users/aalmada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aalmada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aalmada/subscriptions",
      "organizations_url": "https://api.github.com/users/aalmada/orgs",
      "repos_url": "https://api.github.com/users/aalmada/repos",
      "events_url": "https://api.github.com/users/aalmada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aalmada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-25T18:22:44Z",
    "updated_at": "2022-01-25T18:22:44Z",
    "author_association": "NONE",
    "body": "Hi! Thanks for the feedback. \r\n\r\nMy proposal includes optimizations for both `ERC721` and `ERC721Enumerable`. I agree that `Enumerable` should be avoided when possible but, for those that can't, I included it in the proposal.\r\n\r\nI understand the rationale of avoiding too many versions and keeping backward compatibility. Still, I wanted to share the ideas.\r\n\r\nAs a side note, just because you raised the `Enumerable` scenarios, I'm actually using it to list the owned tokens on a custom website. I thought about taking that information off-chain but then struggled to find a robust solution. A possible solution is to [use the OpenSea API](https://docs.opensea.io/reference/getting-assets). IMHO, this has two problems. It depends on a centralized service and the metadata updates are not instantaneous. They take a long time to update it after a \"reveal\". Using the proposed optimizations, I decided to keep it on-chain.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021479811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021506717",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3118#issuecomment-1021506717",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3118",
    "id": 1021506717,
    "node_id": "IC_kwDOA9tCBs484vSd",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-25T18:56:03Z",
    "updated_at": "2022-01-25T18:56:03Z",
    "author_association": "MEMBER",
    "body": "@aalmada Did you consider using TheGraph?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021506717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021597602",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3118#issuecomment-1021597602",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3118",
    "id": 1021597602,
    "node_id": "IC_kwDOA9tCBs485Fei",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-25T20:52:15Z",
    "updated_at": "2022-01-25T20:52:15Z",
    "author_association": "COLLABORATOR",
    "body": "[shameless advertisement for my generic subgraph](https://thegraph.com/explorer/subgraph?id=0x7859821024e633c5dc8a4fcf86fc52e7720ce525-0&view=Playground)\r\n\r\nIt indexes all ERC721 contracts on mainnet, and you can easily build equivalent instances for other chains using our @openzeppelin/subgraphs toolkit.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1021597602/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1022011784",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3118#issuecomment-1022011784",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3118",
    "id": 1022011784,
    "node_id": "IC_kwDOA9tCBs486qmI",
    "user": {
      "login": "aalmada",
      "id": 534533,
      "node_id": "MDQ6VXNlcjUzNDUzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/534533?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aalmada",
      "html_url": "https://github.com/aalmada",
      "followers_url": "https://api.github.com/users/aalmada/followers",
      "following_url": "https://api.github.com/users/aalmada/following{/other_user}",
      "gists_url": "https://api.github.com/users/aalmada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aalmada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aalmada/subscriptions",
      "organizations_url": "https://api.github.com/users/aalmada/orgs",
      "repos_url": "https://api.github.com/users/aalmada/repos",
      "events_url": "https://api.github.com/users/aalmada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aalmada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-26T09:21:24Z",
    "updated_at": "2022-01-26T09:21:24Z",
    "author_association": "NONE",
    "body": "I haven't tried TheGraph yet. Thanks for the suggestion.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1022011784/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
