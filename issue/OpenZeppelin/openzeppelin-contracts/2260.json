{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2260",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2260/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2260/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2260/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2260",
  "id": 628666423,
  "node_id": "MDU6SXNzdWU2Mjg2NjY0MjM=",
  "number": 2260,
  "title": "Add a .call wrapper with Solidity function call checks",
  "user": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650966,
      "node_id": "MDU6TGFiZWw1MDM2NTA5NjY=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0e8a16",
      "default": true,
      "description": "Low hanging fruit for new contributors to get involved!"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2020-06-01T19:19:52Z",
  "updated_at": "2020-06-11T19:25:47Z",
  "closed_at": "2020-06-11T19:25:47Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Some contracts need to perform function calls that can't be expressed as Solidity functions and so must resort to low level `.call`. In most of these cases Solidity function call semantics are still desired but it's tricky to get all the details right. There's a couple of instances of this in this library: [`ERC721._checkOnERC721Received`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/394987f36527f16f85efdfbe9c944da629077917/contracts/token/ERC721/ERC721.sol#L501) and [`SafeERC20`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/394987f36527f16f85efdfbe9c944da629077917/contracts/token/ERC20/SafeERC20.sol#L69).\r\n\r\nWe should provide a function that implements these details, possibly in the `Address` library. This function has to:\r\n\r\n1. Verify the target address is a contract. (`Address.isContract`)\r\n2. Use `.call` with a specified `bytes data`, and require the call to succeed, otherwise bubbling up the revert reason or using a default revert reason. (See the implementation of this in `ERC721`.)\r\n3. Return the returndata.\r\n\r\nThis function should then be used in the library in the places I linked above.\r\n\r\nWe have to come up with a name. `Address.checkedCall` comes to mind, but I'd like to see other options.",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2260/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2260/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637250070",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2260#issuecomment-637250070",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2260",
    "id": 637250070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzI1MDA3MA==",
    "user": {
      "login": "julianmrodri",
      "id": 56316686,
      "node_id": "MDQ6VXNlcjU2MzE2Njg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/56316686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julianmrodri",
      "html_url": "https://github.com/julianmrodri",
      "followers_url": "https://api.github.com/users/julianmrodri/followers",
      "following_url": "https://api.github.com/users/julianmrodri/following{/other_user}",
      "gists_url": "https://api.github.com/users/julianmrodri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julianmrodri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julianmrodri/subscriptions",
      "organizations_url": "https://api.github.com/users/julianmrodri/orgs",
      "repos_url": "https://api.github.com/users/julianmrodri/repos",
      "events_url": "https://api.github.com/users/julianmrodri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julianmrodri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-02T03:33:37Z",
    "updated_at": "2020-06-02T04:25:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Other options: `Address.safeCall`, `Address.secureCall`, `Address.validCall` , `Address.validatedCall`. Or we can turn it around: `Address.callWithChecks`,  `Address.callAndCheck`, `Address.callWithValidation`.\r\n\r\nSo the function should return the `returndata` from the low level call in case of success, and revert in case of failure?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637250070/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637572305",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2260#issuecomment-637572305",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2260",
    "id": 637572305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzU3MjMwNQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-02T14:16:55Z",
    "updated_at": "2020-06-02T14:16:55Z",
    "author_association": "MEMBER",
    "body": "Yes, exactly.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637572305/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637605249",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2260#issuecomment-637605249",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2260",
    "id": 637605249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzYwNTI0OQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-02T15:10:09Z",
    "updated_at": "2020-06-02T15:10:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "What about something like `Address.functionCall()`? After all, what we're doing is replicating the behavior of _function_ calls, not Ethereum calls.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637605249/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637622463",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2260#issuecomment-637622463",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2260",
    "id": 637622463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzYyMjQ2Mw==",
    "user": {
      "login": "julianmrodri",
      "id": 56316686,
      "node_id": "MDQ6VXNlcjU2MzE2Njg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/56316686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julianmrodri",
      "html_url": "https://github.com/julianmrodri",
      "followers_url": "https://api.github.com/users/julianmrodri/followers",
      "following_url": "https://api.github.com/users/julianmrodri/following{/other_user}",
      "gists_url": "https://api.github.com/users/julianmrodri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julianmrodri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julianmrodri/subscriptions",
      "organizations_url": "https://api.github.com/users/julianmrodri/orgs",
      "repos_url": "https://api.github.com/users/julianmrodri/repos",
      "events_url": "https://api.github.com/users/julianmrodri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julianmrodri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-02T15:30:11Z",
    "updated_at": "2020-06-02T15:30:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "`Address.functionCall()` -> +1. I like it a lot, straight to the point. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/637622463/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/638604939",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2260#issuecomment-638604939",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2260",
    "id": 638604939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzODYwNDkzOQ==",
    "user": {
      "login": "julianmrodri",
      "id": 56316686,
      "node_id": "MDQ6VXNlcjU2MzE2Njg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/56316686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julianmrodri",
      "html_url": "https://github.com/julianmrodri",
      "followers_url": "https://api.github.com/users/julianmrodri/followers",
      "following_url": "https://api.github.com/users/julianmrodri/following{/other_user}",
      "gists_url": "https://api.github.com/users/julianmrodri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julianmrodri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julianmrodri/subscriptions",
      "organizations_url": "https://api.github.com/users/julianmrodri/orgs",
      "repos_url": "https://api.github.com/users/julianmrodri/repos",
      "events_url": "https://api.github.com/users/julianmrodri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julianmrodri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-04T05:06:34Z",
    "updated_at": "2020-06-04T05:46:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@frangio @nventuro I'm working on this issue and I found out we may lose a bit of flexibility for setting the default revert message with this approach.\r\n\r\nFor example in the `ERC721` case it currently sets revert default message `ERC721: transfer to non ERC721Receiver implementer` in some situations. After this change it would revert with a more generic message such as: `Address: low-level call failed.` This happens because handling the failed `call` now occurs in this generic function and not in the specific contract anymore.\r\n\r\nAre you OK with this? Please let me know if I'm not clear enough. Also let me know if you think theres a solution to this that we can implement. Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/638604939/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/638626201",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2260#issuecomment-638626201",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2260",
    "id": 638626201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzODYyNjIwMQ==",
    "user": {
      "login": "julianmrodri",
      "id": 56316686,
      "node_id": "MDQ6VXNlcjU2MzE2Njg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/56316686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julianmrodri",
      "html_url": "https://github.com/julianmrodri",
      "followers_url": "https://api.github.com/users/julianmrodri/followers",
      "following_url": "https://api.github.com/users/julianmrodri/following{/other_user}",
      "gists_url": "https://api.github.com/users/julianmrodri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julianmrodri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julianmrodri/subscriptions",
      "organizations_url": "https://api.github.com/users/julianmrodri/orgs",
      "repos_url": "https://api.github.com/users/julianmrodri/repos",
      "events_url": "https://api.github.com/users/julianmrodri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julianmrodri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-04T06:16:34Z",
    "updated_at": "2020-06-04T06:16:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nventuro @frangio  I submitted a **Draft** PR so you can take a look. It is only missing the Unit tests for the new function `Address.functionCall` which I will have shortly. Can you review if this is in the right direction? Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/638626201/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
