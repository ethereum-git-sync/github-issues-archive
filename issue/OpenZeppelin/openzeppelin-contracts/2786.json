{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2786",
  "id": 951799122,
  "node_id": "MDU6SXNzdWU5NTE3OTkxMjI=",
  "number": 2786,
  "title": "Return the current `_value` when incrementing or decrementing a `Counter`",
  "user": {
    "login": "hexcowboy",
    "id": 8162609,
    "node_id": "MDQ6VXNlcjgxNjI2MDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8162609?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hexcowboy",
    "html_url": "https://github.com/hexcowboy",
    "followers_url": "https://api.github.com/users/hexcowboy/followers",
    "following_url": "https://api.github.com/users/hexcowboy/following{/other_user}",
    "gists_url": "https://api.github.com/users/hexcowboy/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hexcowboy/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hexcowboy/subscriptions",
    "organizations_url": "https://api.github.com/users/hexcowboy/orgs",
    "repos_url": "https://api.github.com/users/hexcowboy/repos",
    "events_url": "https://api.github.com/users/hexcowboy/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hexcowboy/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650860,
      "node_id": "MDU6TGFiZWw1MDM2NTA4NjA=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/feature",
      "name": "feature",
      "color": "b9db64",
      "default": false,
      "description": "New contracts, functions, or helpers."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2021-07-23T18:12:49Z",
  "updated_at": "2022-09-27T18:26:15Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nInstead of running a call to `counter.increment()` or `counter.decrement()` and then a subsequent call to `counter.current()`, wouldn't it be simpler to just return the count along with the relative call?\r\n\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Counters.sol\r\n\r\n**üìù Details**\r\n\r\nCurrently the interface is:\r\n\r\n```solidity\r\ncurrent(struct Counters.Counter counter) ‚Üí uint256 internal\r\nincrement(struct Counters.Counter counter) internal\r\ndecrement(struct Counters.Counter counter) internal\r\n```\r\n\r\nbut I'm proposing it's changed to\r\n\r\n```solidity\r\ncurrent(struct Counters.Counter counter) ‚Üí uint256 internal\r\nincrement(struct Counters.Counter counter) ‚Üí uint256 internal\r\ndecrement(struct Counters.Counter counter) ‚Üí uint256 internal\r\n```\r\nThis could be implemented like so:\r\n\r\n```diff\r\n    function increment(Counter storage counter) internal returns(uint256) {\r\n        unchecked {\r\n            counter._value += 1;\r\n        }\r\n+        return counter._value;\r\n    }\r\n```\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/886544113",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2786#issuecomment-886544113",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786",
    "id": 886544113,
    "node_id": "IC_kwDOA9tCBs4015bx",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-26T09:39:10Z",
    "updated_at": "2021-07-26T09:39:10Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @hexcowboy and thank you for raising that issue.\r\n\r\nThis was already discussed as part of #2599. At the time we didn't feel comfortable with the proposition of the PR with added 2 functions with close names. Your approach seems more conservative and is backward compatible.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/886544113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/935155616",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2786#issuecomment-935155616",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786",
    "id": 935155616,
    "node_id": "IC_kwDOA9tCBs43vVeg",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-06T00:38:52Z",
    "updated_at": "2021-10-06T00:38:52Z",
    "author_association": "MEMBER",
    "body": "My issue with #2599 was that it is not obvious in the interface whether the return value is pre or post increment. I would oppose this suggestion for the same reason.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/935155616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1061430683",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2786#issuecomment-1061430683",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786",
    "id": 1061430683,
    "node_id": "IC_kwDOA9tCBs4_RCWb",
    "user": {
      "login": "tab00",
      "id": 12715448,
      "node_id": "MDQ6VXNlcjEyNzE1NDQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12715448?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tab00",
      "html_url": "https://github.com/tab00",
      "followers_url": "https://api.github.com/users/tab00/followers",
      "following_url": "https://api.github.com/users/tab00/following{/other_user}",
      "gists_url": "https://api.github.com/users/tab00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tab00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tab00/subscriptions",
      "organizations_url": "https://api.github.com/users/tab00/orgs",
      "repos_url": "https://api.github.com/users/tab00/repos",
      "events_url": "https://api.github.com/users/tab00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tab00/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-08T05:51:44Z",
    "updated_at": "2022-03-08T05:51:44Z",
    "author_association": "NONE",
    "body": "Intuitively we'd expect the return value to be the post-incremented one, i.e. the end result of calling the `counter.increment()` function.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1061430683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1089479589",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2786#issuecomment-1089479589",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786",
    "id": 1089479589,
    "node_id": "IC_kwDOA9tCBs5A8COl",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-05T22:53:43Z",
    "updated_at": "2022-04-05T22:53:43Z",
    "author_association": "MEMBER",
    "body": "The problem is that often that's not really the useful value. Imagine that your counter is a nonce, you generally want it to start at 0, so you'd want the pre-increment value.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1089479589/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1258552884",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2786#issuecomment-1258552884",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786",
    "id": 1258552884,
    "node_id": "IC_kwDOA9tCBs5LA_40",
    "user": {
      "login": "elawbek",
      "id": 87410802,
      "node_id": "MDQ6VXNlcjg3NDEwODAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/87410802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elawbek",
      "html_url": "https://github.com/elawbek",
      "followers_url": "https://api.github.com/users/elawbek/followers",
      "following_url": "https://api.github.com/users/elawbek/following{/other_user}",
      "gists_url": "https://api.github.com/users/elawbek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elawbek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elawbek/subscriptions",
      "organizations_url": "https://api.github.com/users/elawbek/orgs",
      "repos_url": "https://api.github.com/users/elawbek/repos",
      "events_url": "https://api.github.com/users/elawbek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elawbek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-26T20:02:45Z",
    "updated_at": "2022-09-26T20:02:45Z",
    "author_association": "NONE",
    "body": "Hello\r\nI think two types of functions can be added to the Counters contract (the names were given as examples):\r\n\r\n```solidity\r\n/// @dev returns the current value and increments the value in the storage\r\nfunction returnAndIncrement(Counter storage counter) internal returns(uint256 counter_) {\r\n  unchecked {\r\n    counter_ = counter._value++;\r\n  }\r\n}\r\n```\r\n\r\nand\r\n\r\n```solidity\r\n/// @dev increments the value in the storage and returns the new value\r\nfunction incrementAndReturn(Counter storage counter) internal returns(uint256 counter_) {\r\n  unchecked {\r\n    counter_ = ++counter._value;\r\n  }\r\n}\r\n```\r\n\r\nThe same with decrement:\r\n\r\n```solidity\r\n/// @dev returns the current value and decrements the value in the storage\r\nfunction returnAndDecrement(Counter storage counter) internal returns(uint256 counter_) {\r\n  require(counter._value > 0, \"Counter: decrement overflow\");\r\n  unchecked {\r\n    counter_ = counter._value--;\r\n  }\r\n}\r\n```\r\n\r\nand\r\n\r\n```solidity\r\n/// @dev decrements the value in the storage and returns the new value\r\nfunction decrementAndReturn(Counter storage counter) internal returns(uint256 counter_) {\r\n  require(counter._value > 0, \"Counter: decrement overflow\");\r\n  unchecked {\r\n    counter_ = --counter._value;\r\n  }\r\n}\r\n```\r\nIt also consumes less gas than going the standard way.\r\nIf there is something wrong with my idea, please let me know.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1258552884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1258688823",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2786#issuecomment-1258688823",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786",
    "id": 1258688823,
    "node_id": "IC_kwDOA9tCBs5LBhE3",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-26T22:02:20Z",
    "updated_at": "2022-09-26T22:02:20Z",
    "author_association": "MEMBER",
    "body": "I support something _like this_, but `returnAndIncrement` is a confusing name, as \"returning\" is always the last thing done in a function. \r\n\r\nWe should brainstorm other options. What about `getCurrentAndIncrement` together with `incrementAndGet`? Hoping to hear other options as well though.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1258688823/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1258839764",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2786#issuecomment-1258839764",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786",
    "id": 1258839764,
    "node_id": "IC_kwDOA9tCBs5LCF7U",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-27T01:07:09Z",
    "updated_at": "2022-09-27T01:07:52Z",
    "author_association": "MEMBER",
    "body": "A way to sidestep this issue would be to return both pre and post values from the function:\r\n\r\n```solidity\r\nfunction increment(Counter storage counter) returns (uint previousValue, uint currentValue);\r\n```\r\n\r\nAlthough this sidesteps the issue of naming, it has the issue that return parameters are not really named so the callee needs to know the order in which to interpret them. I'd imagine `previous, current` is the intuitive order though.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1258839764/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1258945598",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2786#issuecomment-1258945598",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786",
    "id": 1258945598,
    "node_id": "IC_kwDOA9tCBs5LCfw-",
    "user": {
      "login": "elawbek",
      "id": 87410802,
      "node_id": "MDQ6VXNlcjg3NDEwODAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/87410802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elawbek",
      "html_url": "https://github.com/elawbek",
      "followers_url": "https://api.github.com/users/elawbek/followers",
      "following_url": "https://api.github.com/users/elawbek/following{/other_user}",
      "gists_url": "https://api.github.com/users/elawbek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elawbek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elawbek/subscriptions",
      "organizations_url": "https://api.github.com/users/elawbek/orgs",
      "repos_url": "https://api.github.com/users/elawbek/repos",
      "events_url": "https://api.github.com/users/elawbek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elawbek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-27T04:12:58Z",
    "updated_at": "2022-09-27T04:15:12Z",
    "author_association": "NONE",
    "body": "Maybe do it as in [\\_useNonce](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/draft-ERC20Permit.sol#L90)?\r\n\r\nSomething like: `useCurrentIncrementValue` & `useNextIncrementValue` and `useCurrentDecrementValue` & `useNextDecrementValue`.\r\n\r\nor an abridged version: `useCurrentInc` & `useNextInc` and `useCurrentDec` & `useNextDec`.\r\n\r\nSorry, I'm not very good at naming. I think your \"`getCurrentAndIncrement` together with `incrementAndGet`\" are better than my suggestion.\r\n\r\nAbout your suggestion about returning both values from the increment and decrement functions I think is a good solution, but I would be confused about what I should get from the functions, i.e.you suggest calling them `previousValue` and `currentValue`, but I intuitively think that the `current` value is the one before the increment/decrement, and what comes after is the `next` value. I think in this case, universality can be bad for the clarity of what the user of these functions should get.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1258945598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1259643032",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2786#issuecomment-1259643032",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786",
    "id": 1259643032,
    "node_id": "IC_kwDOA9tCBs5LFKCY",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-27T15:04:51Z",
    "updated_at": "2022-09-27T15:04:51Z",
    "author_association": "MEMBER",
    "body": "What if we named the return values `(previousValue, nextValue)`?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1259643032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1259707897",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2786#issuecomment-1259707897",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786",
    "id": 1259707897,
    "node_id": "IC_kwDOA9tCBs5LFZ35",
    "user": {
      "login": "elawbek",
      "id": 87410802,
      "node_id": "MDQ6VXNlcjg3NDEwODAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/87410802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elawbek",
      "html_url": "https://github.com/elawbek",
      "followers_url": "https://api.github.com/users/elawbek/followers",
      "following_url": "https://api.github.com/users/elawbek/following{/other_user}",
      "gists_url": "https://api.github.com/users/elawbek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elawbek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elawbek/subscriptions",
      "organizations_url": "https://api.github.com/users/elawbek/orgs",
      "repos_url": "https://api.github.com/users/elawbek/repos",
      "events_url": "https://api.github.com/users/elawbek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elawbek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-27T15:54:33Z",
    "updated_at": "2022-09-27T15:54:33Z",
    "author_association": "NONE",
    "body": "I think this is a good choice: functions will return data and developers can choose the value they need for their current purposes.\r\n\r\nBut can you answer why you don't want to create a separate function for each case?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1259707897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1259721955",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2786#issuecomment-1259721955",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786",
    "id": 1259721955,
    "node_id": "IC_kwDOA9tCBs5LFdTj",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-27T16:05:40Z",
    "updated_at": "2022-09-27T16:05:40Z",
    "author_association": "MEMBER",
    "body": "I'm ok with creating separate functions, we just need good names for them. I don't think the alternatives proposed so far are good enough. Maybe we should just go with `preIncrement` and `postIncrement`.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1259721955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1259775290",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2786#issuecomment-1259775290",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786",
    "id": 1259775290,
    "node_id": "IC_kwDOA9tCBs5LFqU6",
    "user": {
      "login": "elawbek",
      "id": 87410802,
      "node_id": "MDQ6VXNlcjg3NDEwODAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/87410802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elawbek",
      "html_url": "https://github.com/elawbek",
      "followers_url": "https://api.github.com/users/elawbek/followers",
      "following_url": "https://api.github.com/users/elawbek/following{/other_user}",
      "gists_url": "https://api.github.com/users/elawbek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elawbek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elawbek/subscriptions",
      "organizations_url": "https://api.github.com/users/elawbek/orgs",
      "repos_url": "https://api.github.com/users/elawbek/repos",
      "events_url": "https://api.github.com/users/elawbek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elawbek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-27T16:43:14Z",
    "updated_at": "2022-09-27T16:45:44Z",
    "author_association": "NONE",
    "body": "`preIncrement` and `postIncrement` looks nice, but does not make it clear by itself what exactly they do.\r\nAs I wrote before, I'm not very good at naming functions. I can only suggest something like:\r\n`getAndIncrementValue`, `incrementAndGetValue`, `getAndDecrementValue`, `decrementAndGetValue`.\r\n\r\nmaybe `getAndIncrement`, `incrementAndGet`, `getAndDecrement`, `decrementAndGet`.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1259775290/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1259891976",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2786#issuecomment-1259891976",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2786",
    "id": 1259891976,
    "node_id": "IC_kwDOA9tCBs5LGG0I",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-27T18:26:15Z",
    "updated_at": "2022-09-27T18:26:15Z",
    "author_association": "MEMBER",
    "body": "> maybe `getAndIncrement`, `incrementAndGet`, `getAndDecrement`, `decrementAndGet`.\r\n\r\nLet's go with this. Feel free to submit a PR.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1259891976/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
