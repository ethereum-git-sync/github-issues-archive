{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3821",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3821/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3821/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3821/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3821",
  "id": 1453950413,
  "node_id": "I_kwDOA9tCBs5WqYXN",
  "number": 3821,
  "title": "`_unsafeAccess` for the `EnumerableSet`",
  "user": {
    "login": "songhobby",
    "id": 20029233,
    "node_id": "MDQ6VXNlcjIwMDI5MjMz",
    "avatar_url": "https://avatars.githubusercontent.com/u/20029233?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/songhobby",
    "html_url": "https://github.com/songhobby",
    "followers_url": "https://api.github.com/users/songhobby/followers",
    "following_url": "https://api.github.com/users/songhobby/following{/other_user}",
    "gists_url": "https://api.github.com/users/songhobby/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/songhobby/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/songhobby/subscriptions",
    "organizations_url": "https://api.github.com/users/songhobby/orgs",
    "repos_url": "https://api.github.com/users/songhobby/repos",
    "events_url": "https://api.github.com/users/songhobby/events{/privacy}",
    "received_events_url": "https://api.github.com/users/songhobby/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-11-17T20:30:25Z",
  "updated_at": "2022-11-17T20:30:25Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nSaw the new release of oz smart contracts and `unsafeAccess`, I was wondering if this gas saving function can be applied else where as well\r\n\r\n**üìù Details**\r\n\r\nThe following is the code from `EnumerableSet` library function `_remove`\r\nFor example we can change \r\n\r\n`bytes32 lastValue = set._values[lastIndex];` \r\n\r\nto \r\n\r\n`bytes32 lastValue = _unsafeAccess(set._values, lastIndex)`\r\n\r\nThe original code is here. \r\n```\r\nfunction _remove(Set storage set, bytes32 value) private returns (bool) {\r\n    uint256 valueIndex = set._indices[value];\r\n    if (valueIndex != 0) {\r\n      uint256 toDeleteIndex = valueIndex - 1;\r\n      uint256 lastIndex = set._values.length - 1;\r\n      if (lastIndex != toDeleteIndex) {\r\n        bytes32 lastValue = set._values[lastIndex];\r\n        set._values[toDeleteIndex] = lastValue;\r\n        set._indices[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\r\n      }\r\n      set._values.pop();\r\n      delete set._indices[value];\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n```\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3821/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3821/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
