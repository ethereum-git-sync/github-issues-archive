{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1051",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1051/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1051/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1051/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1051",
  "id": 336677285,
  "node_id": "MDU6SXNzdWUzMzY2NzcyODU=",
  "number": 1051,
  "title": "ECRecover for mutisig",
  "user": {
    "login": "NoahMarconi",
    "id": 627649,
    "node_id": "MDQ6VXNlcjYyNzY0OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/627649?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/NoahMarconi",
    "html_url": "https://github.com/NoahMarconi",
    "followers_url": "https://api.github.com/users/NoahMarconi/followers",
    "following_url": "https://api.github.com/users/NoahMarconi/following{/other_user}",
    "gists_url": "https://api.github.com/users/NoahMarconi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/NoahMarconi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/NoahMarconi/subscriptions",
    "organizations_url": "https://api.github.com/users/NoahMarconi/orgs",
    "repos_url": "https://api.github.com/users/NoahMarconi/repos",
    "events_url": "https://api.github.com/users/NoahMarconi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/NoahMarconi/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-06-28T15:44:41Z",
  "updated_at": "2021-11-29T12:51:51Z",
  "closed_at": "2021-11-29T12:51:50Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nWorking on a use case where we need to verify multiple signatures. To stick with the convention of passing bytes, we'd like to use a tightly packed array of signatures (no array metadata, simply a dynamic bytes array with signatures back to back).\r\n\r\nWould be great to have an addition in ECRecover as the only public example I can find is GPL encumbered.\r\n\r\n- [x] ðŸ“ˆ This is a feature request.\r\n\r\n\r\n\r\n## ðŸ”¢ Example\r\n\r\n```\r\n// message\r\n\"adsadasdasd\"\r\n// hashed message\r\n0x4e33c339c1af7f4b7eb22280578a3dee028405fb29d890fb569f7de6466711b1\r\n\r\n// address\r\n0x143d7089F744A31A3A328C39eA832597003b90e8\r\n// sig\r\n0x453ae00ea53702bd30de3769cb5944c3ea28c9808345065fffa043e5b78d8a3315506d1bec9e711c8b15d1410d1bf9252fa6e48e66350476a2d106f688beb5781b\r\n\r\n// wallet\r\n0xa6Fa92f4Bd47c9aAB5DF93aDAcAd6536759479EE\r\n// sig\r\n0xe4d08f573371fb6f39e0e06d3e8be8878d1c87aac4e9aaad879c1c752b67c4b61786ee49910782ba1df1c3b78c102c36bd1c5676f8950ff44c7473f165a6c9461b\r\n\r\n\r\n// combined\r\n0x453ae00ea53702bd30de3769cb5944c3ea28c9808345065fffa043e5b78d8a3315506d1bec9e711c8b15d1410d1bf9252fa6e48e66350476a2d106f688beb5781be4d08f573371fb6f39e0e06d3e8be8878d1c87aac4e9aaad879c1c752b67c4b61786ee49910782ba1df1c3b78c102c36bd1c5676f8950ff44c7473f165a6c9461b\r\n```\r\n",
  "closed_by": {
    "login": "Amxx",
    "id": 2432299,
    "node_id": "MDQ6VXNlcjI0MzIyOTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Amxx",
    "html_url": "https://github.com/Amxx",
    "followers_url": "https://api.github.com/users/Amxx/followers",
    "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
    "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
    "organizations_url": "https://api.github.com/users/Amxx/orgs",
    "repos_url": "https://api.github.com/users/Amxx/repos",
    "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Amxx/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1051/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1051/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/981605551",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1051#issuecomment-981605551",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1051",
    "id": 981605551,
    "node_id": "IC_kwDOA9tCBs46ghyv",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-29T12:51:50Z",
    "updated_at": "2021-11-29T12:51:50Z",
    "author_association": "COLLABORATOR",
    "body": "IMO, multisigs contract should implement ERC1271. This means each multisig will be responsible of the way they verify signatures. [Third parties can then ask the multisig if a signature is recognized as valid.](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/SignatureChecker.sol#L21-L35)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/981605551/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
