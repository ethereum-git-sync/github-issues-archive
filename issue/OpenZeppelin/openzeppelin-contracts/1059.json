{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1059",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1059/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1059/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1059/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1059",
  "id": 338116973,
  "node_id": "MDU6SXNzdWUzMzgxMTY5NzM=",
  "number": 1059,
  "title": "Pausable initialize() method is not visible from contract that inherits (zos-release branch)",
  "user": {
    "login": "roschler",
    "id": 4660487,
    "node_id": "MDQ6VXNlcjQ2NjA0ODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4660487?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/roschler",
    "html_url": "https://github.com/roschler",
    "followers_url": "https://api.github.com/users/roschler/followers",
    "following_url": "https://api.github.com/users/roschler/following{/other_user}",
    "gists_url": "https://api.github.com/users/roschler/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/roschler/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/roschler/subscriptions",
    "organizations_url": "https://api.github.com/users/roschler/orgs",
    "repos_url": "https://api.github.com/users/roschler/repos",
    "events_url": "https://api.github.com/users/roschler/events{/privacy}",
    "received_events_url": "https://api.github.com/users/roschler/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2018-07-04T03:18:47Z",
  "updated_at": "2018-07-05T14:48:28Z",
  "closed_at": "2018-07-05T13:24:53Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## üéâ Description\r\n\r\nUnable to call the `Pausable.initialize()` method from my contract that inherits `Pausable` due to a visibility problem that leads to a compiler error.\r\n\r\n_NOTE: You can see a full copy of my smart contract code here:_\r\n\r\nhttps://github.com/roschler/ether-band-battles/blob/master/solidity/contracts/GameFactory.sol\r\n\r\n- [X ] üêõ This is a bug report.\r\n- [ ] üìà This is a feature request.\r\n\r\n## üíª Environment\r\n\r\nI am developing on Ubuntu 18.04, Bionic Beaver.  I am using the Remix IDE.\r\n\r\n_- Which version of OpenZeppelin are you using?_\r\n\r\nI am using Open Zeppelin 1.9.1\r\n\r\n_- What network are you deploying to? Ganache? Ropsten?_\r\n\r\nI am using Ganache.\r\n\r\n- How are you deploying your OpenZeppelin-backed contracts? truffle? Remix? Let us know!\r\n\r\nI am using Remix currently and will be using Truffle soon after.\r\n\r\n## üìù Details\r\nI have a project that uses ZeppelinOS.  My main smart contract inherits from `Pausable`.  When I try to call it's `initialize()` method from my `initialize()` method, Remix shows the following compiler error:\r\n```\r\nlocalhost/contracts/GameFactory.sol:721:9: TypeError: Member \"initalize\" not found or not visible after argument-dependent lookup in type(contract Pausable)\r\n        Pausable.initalize(msg.sender);\r\n        ^----------------^\r\n```\r\nHere are my _import_ statements:\r\n```sol\r\npragma solidity ^0.4.24;\r\n\r\nimport \"../node_modules/openzeppelin-zos/contracts/math/SafeMath.sol\";\r\nimport \"../node_modules/openzeppelin-zos/contracts/lifecycle/Pausable.sol\";\r\n```\r\nThis is the _only_ error it is reporting.  If I comment out the call to _Pausable.initialize()_ in my contract in the code shown below:\r\n```sol\r\n   function initialize() public isInitializer(\"GameFactory\", \"1.0.0\")  {\r\n        // We inherit from Pausable, so we call its initialize() method with \r\n        //  the House address as the \"sender\" parameter and that will make the House \r\n        //  the owner of the contract.\r\n        \r\n        // NOTE: Always call the inherited class initializer() first in case your \r\n        //  code depends on the creation/initialization of various inherited class\r\n        //  elements.\r\n\r\n        // Assign the caller of this method as the Adminstrator of this contract.\r\n        require(address(msg.sender) != 0, \"(initialize) The message sender address is not set.\");\r\n        Pausable.initalize(msg.sender);\r\n    }\r\n```\r\nThen the error goes away and the contract compiles fine.  In other words, I do **not** get compile errors in the contract declaration where I say it _is_  of type `Pausable`.  I do **not** get compile errors for any of the the uses of the `whenNotPaused` _modifier_ from that contract.  Therefore it appears that `Pausable` **is** successfully inherited by my contract but for some strange reason, despite my `initialize()` method and Pausable's `initialize()` method being both marked **public**, the compiler thinks it's not visible to my method.\r\n\r\nSome quick help would be greatly appreciated.  I'm in crunch mode getting my dApp ready for a presentation on July 23rd as one of the finalists in your Smackathon context.  This is holding me up.\r\n\r\n**UPDATE:** This is looking more and more like some odd problem with the Solidity compiler trying to resolve the `Pausable` symbol as used in a contract declaration as part of the `is` clause to specify inheritance.  As a workaround, so that my development is not held up by this issue, I changed the name of **my** `initialize()` function to `initializeGameFactory()`.  From that function I am now calling the `inheritance()` method **without** the `Pausable` scope prefix so that Solidity has to use inheritance scoping to find the function.  **This works and my contract now compiles.**  \r\n\r\nSo as I said above, Solidity _is_ able to resolve all the symbols in the `Pausable` contract without error.  However, any attempt to use the `Pausable` (or any other inherited contract name) as a prefix to specify explicitly the scope of a method as being in an inherited class **fails** with a compiler _visibility_ error.  I tested this with Remix _and_ with Truffle and they both emit the same compiler error.  Fortunately I can continue with my development but obviously I would appreciate any help getting rid of the root problem.",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1059/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1059/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/402555804",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1059#issuecomment-402555804",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1059",
    "id": 402555804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjU1NTgwNA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-04T20:37:32Z",
    "updated_at": "2018-07-04T20:37:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi! It looks like there's a typo [here](https://github.com/roschler/ether-band-battles/blob/35638065fab6a5d92bc1884cdc84aae47aa36b40/solidity/contracts/GameFactory.sol#L668): you wrote `initalize` instead of `initialize`. I've compiled your contract locally and it works fine after that fix.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/402555804/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/402602365",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1059#issuecomment-402602365",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1059",
    "id": 402602365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjYwMjM2NQ==",
    "user": {
      "login": "roschler",
      "id": 4660487,
      "node_id": "MDQ6VXNlcjQ2NjA0ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4660487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roschler",
      "html_url": "https://github.com/roschler",
      "followers_url": "https://api.github.com/users/roschler/followers",
      "following_url": "https://api.github.com/users/roschler/following{/other_user}",
      "gists_url": "https://api.github.com/users/roschler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roschler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roschler/subscriptions",
      "organizations_url": "https://api.github.com/users/roschler/orgs",
      "repos_url": "https://api.github.com/users/roschler/repos",
      "events_url": "https://api.github.com/users/roschler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roschler/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T04:19:35Z",
    "updated_at": "2018-07-05T04:22:53Z",
    "author_association": "NONE",
    "body": "Hello Nicol√°s.\r\n\r\nWell that's embarrassing!  Thanks and **sorry**.  \r\n\r\nI have a new problem having to do with the `initialize()` method.  Can you see anything I'm doing wrong here?\r\n\r\nI have deployed my ZeppelinOS 1.9.1 based contract successfully to Ganache.  However, I am having a problem where the `initialize()` method in my contract apparently not being called, despite using the `--init` argument when executing `zos create`.  Unfortunately when I check that property, I get back a zero address.  Can someone help me fix this?\r\n\r\n_Deploying app where $OWNER is the first account listed in Ganache._\r\n```\r\n./zoslocal push --from $OWNER --network local\r\n./zoslocal create --from $OWNER --init --args $OWNER --network local\r\n```\r\n_Executing Truffle console on the same network (local).  Checking owner value. (NOTE: I am going direct to the contract instead of going through proxy purely for debugging purposes.)_\r\n```\r\ntruffle(local)> EtherBandBattlesManager.at(\"0xa94b7f0465e98609391c623d0560c5720a3f2d33\").owner()\r\n'0x0000000000000000000000000000000000000000'\r\n```\r\n_Owner is 0 when it should be the value in $OWNER.  Now I call the `initialize()` method manually.  The value I'm using here with the `initialize()` method is the same value in $OWNER._\r\n```\r\nEtherBandBattlesManager.at(\"0xa94b7f0465e98609391c623d0560c5720a3f2d33\").initialize(\"0x90f8bf6a479f320ead074411a4b0e7944ea8c9c1\")\r\n```\r\n_Now the owner value shows up when I check the `owner` property again._\r\n```\r\ntruffle(local)> EtherBandBattlesManager.at(\"0xa94b7f0465e98609391c623d0560c5720a3f2d33\").owner()\r\n'0x90f8bf6a479f320ead074411a4b0e7944ea8c9c1'\r\n```\r\n\r\n_Here is my `zos.json` file:_\r\n```\r\n{\r\n  \"name\": \"etherbandbattles\",\r\n  \"version\": \"0.0.3\",\r\n  \"contracts\": {\r\n    \"EtherBandBattlesManager\": \"EtherBandBattlesManager\"\r\n  }\r\n```\r\n_Here is my `zos.local.json` file:_\r\n```\r\n{\r\n  \"contracts\": {\r\n    \"EtherBandBattlesManager\": {\r\n      \"address\": \"0xa94b7f0465e98609391c623d0560c5720a3f2d33\",\r\n      \"bytecodeHash\": \"b4c95e6aa86d664a76246bd63daea08e57444e927fd1351cbff1669599952389\"\r\n    }\r\n  },\r\n  \"proxies\": {\r\n    \"EtherBandBattlesManager\": [\r\n      {\r\n        \"address\": \"0xcdbe8b52a6c60a5f101d4a0f1f049f19a9e1d35f\",\r\n        \"version\": \"0.0.2\",\r\n        \"implementation\": \"0xa94b7f0465e98609391c623d0560c5720a3f2d33\"\r\n      }\r\n    ]\r\n  },\r\n  \"app\": {\r\n    \"address\": \"0xdb56f2e9369e0d7bd191099125a3f6c370f8ed15\"\r\n  },\r\n  \"version\": \"0.0.2\",\r\n  \"package\": {\r\n    \"address\": \"0x26b4afb60d6c903165150c6f0aa14f8016be4aec\"\r\n  },\r\n  \"provider\": {\r\n    \"address\": \"0x630589690929e9cdefdef0734717a9ef3ec7fcfe\"\r\n  }\r\n}\r\n```\r\n\r\n_Here is a link to the source code for EtherBandBattlesManager.sol:_\r\n\r\nhttps://github.com/roschler/ether-band-battles/blob/master/solidity/contracts/EtherBandBattlesManager.sol\r\n\r\nAm I doing something wrong?  Why isn't the `owner` property being set to the `$OWNER` argument during the `zos create` command?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/402602365/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/402720631",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1059#issuecomment-402720631",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1059",
    "id": 402720631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjcyMDYzMQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T13:24:53Z",
    "updated_at": "2018-07-05T13:26:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "That is a [ZeppelinOS](https://github.com/zeppelinos/zos-cli) question: please try to keep communication channels on-topic. That way, it'll be easier for future users to have their issues solved by reaching this content. \r\n\r\nCopy-pasting my Slack response to your question for reference:\r\n\r\n> (NOTE: I am going direct to the contract instead of going through proxy purely for debugging purposes.)\r\n\r\nThis is what you're doing wrong: you shouldn't ever use the `push`ed contract address for anything, only the upgradeable instance's (the proxy) address, since that is where the storage lives. The `push`ed address only provides the implementation for your contract methods, but the actual variables are stored in the proxy.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/402720631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/402747752",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1059#issuecomment-402747752",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1059",
    "id": 402747752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjc0Nzc1Mg==",
    "user": {
      "login": "roschler",
      "id": 4660487,
      "node_id": "MDQ6VXNlcjQ2NjA0ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4660487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roschler",
      "html_url": "https://github.com/roschler",
      "followers_url": "https://api.github.com/users/roschler/followers",
      "following_url": "https://api.github.com/users/roschler/following{/other_user}",
      "gists_url": "https://api.github.com/users/roschler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roschler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roschler/subscriptions",
      "organizations_url": "https://api.github.com/users/roschler/orgs",
      "repos_url": "https://api.github.com/users/roschler/repos",
      "events_url": "https://api.github.com/users/roschler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roschler/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T14:48:28Z",
    "updated_at": "2018-07-05T14:48:28Z",
    "author_association": "NONE",
    "body": "> That is a ZeppelinOS question: please try to keep communication channels on-topic. That way, it'll be easier for future users to have their issues solved by reaching this content.\r\n\r\nSure, will do.\r\n\r\n> This is what you're doing wrong: you shouldn't ever use the pushed contract address for anything, only the upgradeable instance's (the proxy) address, since that is where the storage lives. The pushed address only provides the implementation for your contract methods, but the actual variables are stored in the proxy.\r\n\r\nYes!  Thank you.  That makes complete sense and will take a little getting used to.  Thanks again for your help.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/402747752/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
