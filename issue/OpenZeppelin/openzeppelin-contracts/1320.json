{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1320",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1320/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1320/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1320/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1320",
  "id": 358966636,
  "node_id": "MDU6SXNzdWUzNTg5NjY2MzY=",
  "number": 1320,
  "title": "[Naming] System under Test should not be called \"mock\"",
  "user": {
    "login": "fleupold",
    "id": 1200333,
    "node_id": "MDQ6VXNlcjEyMDAzMzM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1200333?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fleupold",
    "html_url": "https://github.com/fleupold",
    "followers_url": "https://api.github.com/users/fleupold/followers",
    "following_url": "https://api.github.com/users/fleupold/following{/other_user}",
    "gists_url": "https://api.github.com/users/fleupold/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fleupold/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fleupold/subscriptions",
    "organizations_url": "https://api.github.com/users/fleupold/orgs",
    "repos_url": "https://api.github.com/users/fleupold/repos",
    "events_url": "https://api.github.com/users/fleupold/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fleupold/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1000188800,
      "node_id": "MDU6TGFiZWwxMDAwMTg4ODAw",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/tests",
      "name": "tests",
      "color": "1d76db",
      "default": false,
      "description": "Test suite and helpers."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-09-11T09:40:15Z",
  "updated_at": "2019-04-08T22:08:51Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "When a solidity library is unit tested, it needs to be wrapped in a smart contract in order to be exposed for the js unit testing framework. The OpenZeppelin framework chose to call these wrapping contracts Mocks, e.g.\r\n\r\nhttps://github.com/OpenZeppelin/openzeppelin-solidity/blob/b644c72eb083d7a84a5c9924ec8012a7c29290fd/contracts/mocks/MathMock.sol#L7-L19\r\n\r\nThey are used in unit tests like this:\r\n\r\nhttps://github.com/OpenZeppelin/openzeppelin-solidity/blob/20cf88543024fb95d79db16a2d7a3d1c32090e2a/test/library/Math.test.js#L13-L15\r\n\r\nI think the name mock is quite confusing in this context. In traditional unit testing mocks are used to [simulate behaviour of complex dependencies](https://stackoverflow.com/questions/2665812/what-is-mocking) that the system under test (SUT) depends on.\r\nHere we are calling the SUT itself a mock, which seems like an anti-pattern. The SUT should never be mocked, as it's the thing we are testing.\r\n\r\nTo avoid confusion, would it be acceptable to rename the contracts that are wrapping the libraries, e.g. instead of `MathMock` something like `MathProxy`, `MathFacade` or `MathWrapper`?",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1320/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1320/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/420304012",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1320#issuecomment-420304012",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1320",
    "id": 420304012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDMwNDAxMg==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T14:56:41Z",
    "updated_at": "2018-09-11T14:56:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I think we all agree on this - mock is a very poor name. Keep in mind this is not the only scenario in which we use them: we also have mocks for abstract contracts, which complete the base implementation (e.g. `ConditionalEscrow`), and mocks for contracts that provide modifiers, so that they can be tested (e.g. `Ownable`). Would you call all of these by the same name?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/420304012/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/420375063",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1320#issuecomment-420375063",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1320",
    "id": 420375063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDM3NTA2Mw==",
    "user": {
      "login": "fleupold",
      "id": 1200333,
      "node_id": "MDQ6VXNlcjEyMDAzMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1200333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fleupold",
      "html_url": "https://github.com/fleupold",
      "followers_url": "https://api.github.com/users/fleupold/followers",
      "following_url": "https://api.github.com/users/fleupold/following{/other_user}",
      "gists_url": "https://api.github.com/users/fleupold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fleupold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fleupold/subscriptions",
      "organizations_url": "https://api.github.com/users/fleupold/orgs",
      "repos_url": "https://api.github.com/users/fleupold/repos",
      "events_url": "https://api.github.com/users/fleupold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fleupold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T18:32:29Z",
    "updated_at": "2018-09-11T18:32:29Z",
    "author_association": "NONE",
    "body": "I wasn't able to find the `OwnableMock`.\r\n\r\nThe `ConditionalEscrowMock` is I believe more what people would call a spy (at least in [Mockito terminology](https://github.com/mockito/mockito/wiki/Using-Spies-(and-Fakes))), since it stubs some behaviour but leaves the rest of the object intact.\r\n\r\nInterestingly, there is also already a [MerkleProofWrapper](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/6c4c8989b399510a66d8b98ad75a0979482436d2/contracts/mocks/MerkleProofWrapper.sol).\r\n\r\nAnother naming suggestion we came up while thinking about this more was to use `Exposed`. We could add the type of functionality we are exposing as well (e.g. `MathLibraryExposed`, `OwnableModifierExposed`).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/420375063/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/420381303",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1320#issuecomment-420381303",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1320",
    "id": 420381303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDM4MTMwMw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T18:50:46Z",
    "updated_at": "2018-09-11T18:50:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "You're right regarding `OwnableMock` - I've just checked and we have no tests for that modifier! Yikes. You can take a look at `PausableMock` though to see what I meant.\r\n\r\nI think `Exposed` makes a lot of sense for libraries and e.g. `MinterRole`, where we need to _expose_ internal methods. I worry a bit that having multiple names for this kind of thing (e.g. `Spy`, `Exposed`, something else for the ones with modifiers, etc.) may cause confusion though.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/420381303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/420503124",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1320#issuecomment-420503124",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1320",
    "id": 420503124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDUwMzEyNA==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-12T03:50:28Z",
    "updated_at": "2018-09-12T03:50:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree that mocks are not the right term for creating SUTs; we use the `Impl` for some cases, but are really inconsistent.\r\n\r\nSo in the case of Ownable, that would probably be an `OwnableImpl` where we're testing the public-facing behavior of an otherwise production-ready contract.\r\n\r\nBut if we exposed some internal state to test invariants or wrote a helper function that bypassed authorization logic, that would be a `Mock`.\r\n\r\nSo we could either double down on the `Mock` / `Impl` distinction or just call everything the same and make a note about it.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/420503124/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/420783439",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1320#issuecomment-420783439",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1320",
    "id": 420783439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDc4MzQzOQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-12T20:19:31Z",
    "updated_at": "2018-09-12T20:19:31Z",
    "author_association": "MEMBER",
    "body": "The mock terminology is definitely confusing. I think we haven't changed it yet because we haven't come up with a good term. Thanks for bringing it up @fleupold!\r\n\r\nThe thing is these \"mocks\" currently serve two different purposes. One of them is, as has been mentioned in the thread, to expose internal APIs. Calling these `*Exposed` is not a bad idea, but I think I like `*Internals` better.\r\n\r\nThe other purpose is to set up an instance in order to then test it. For example this happens with `ERC20` because we need to inject some initial balance in order to test its functionality. These definitely are not mocks, except maybe in a contrived sense, and I don't know what would be the right word.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/420783439/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/420791230",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1320#issuecomment-420791230",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1320",
    "id": 420791230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDc5MTIzMA==",
    "user": {
      "login": "shrugs",
      "id": 1535001,
      "node_id": "MDQ6VXNlcjE1MzUwMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrugs",
      "html_url": "https://github.com/shrugs",
      "followers_url": "https://api.github.com/users/shrugs/followers",
      "following_url": "https://api.github.com/users/shrugs/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrugs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrugs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrugs/subscriptions",
      "organizations_url": "https://api.github.com/users/shrugs/orgs",
      "repos_url": "https://api.github.com/users/shrugs/repos",
      "events_url": "https://api.github.com/users/shrugs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrugs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-12T20:44:48Z",
    "updated_at": "2018-09-12T20:44:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "idea: `Testable` prefix. aja `TestableERC20` or `TestableECDSA`?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/420791230/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
