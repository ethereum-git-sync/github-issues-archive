{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1984",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1984/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1984/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1984/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1984",
  "id": 518184983,
  "node_id": "MDU6SXNzdWU1MTgxODQ5ODM=",
  "number": 1984,
  "title": "ERC777 change visibility of some attributes and methods from private to internal",
  "user": {
    "login": "JonahGroendal",
    "id": 13501607,
    "node_id": "MDQ6VXNlcjEzNTAxNjA3",
    "avatar_url": "https://avatars.githubusercontent.com/u/13501607?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JonahGroendal",
    "html_url": "https://github.com/JonahGroendal",
    "followers_url": "https://api.github.com/users/JonahGroendal/followers",
    "following_url": "https://api.github.com/users/JonahGroendal/following{/other_user}",
    "gists_url": "https://api.github.com/users/JonahGroendal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JonahGroendal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JonahGroendal/subscriptions",
    "organizations_url": "https://api.github.com/users/JonahGroendal/orgs",
    "repos_url": "https://api.github.com/users/JonahGroendal/repos",
    "events_url": "https://api.github.com/users/JonahGroendal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JonahGroendal/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2019-11-06T01:45:38Z",
  "updated_at": "2019-11-15T23:20:51Z",
  "closed_at": "2019-11-15T23:20:51Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nI'm trying to extend the base ERC777 contract to be pauseable, but ran into an issue. The best way I can think of to accomplish this is to override `_move()`, `_mint()` and `_burn()` to check if the contract is paused, but `_move()`'s visibility is `private`, so it can't be overridden. I'd also like to create setter methods for `_name` and `_symbol` but can't because they are private also.\r\n\r\n**üìù Details**\r\nI'm wondering what the rationale is for making methods/attributes private and if it's okay to change some of them to `internal`, namely `move()`, `_name` and `_symbol`. I'll submit a pull request if there are no objections.\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/CONTRIBUTING.md -->\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1984/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1984/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550127233",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1984#issuecomment-550127233",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1984",
    "id": 550127233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDEyNzIzMw==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T03:32:25Z",
    "updated_at": "2019-11-06T03:32:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @JonahGroendal ,\r\n\r\nState variables were made private from OpenZeppelin Contracts 2.0\r\n>https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v2.0.0\r\nAll state variables are now private, which means that derived contracts cannot access them directly, but have to use getters. This is to increase encapsulation, to be able to reason better about the code.\r\n\r\nHence `_name` and `_symbol` should stay private.  \r\n\r\nI am curious with why you want to be able to change the Name and Symbol of a token?  I am not sure how well wallets would support this.\r\n\r\nIf you needed to do this, you could create private variables, e.g. something like `_updateableName` and `_updateableSymbol` and override the current getters, and implement setters (with appropriate access control).\r\n\r\nAs for making an ERC777 pausable:  \r\n`ERC20Pausable` overrides the interface functions with a modifier checking the pause state:\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20Pausable.sol\r\n\r\nI assume a similar approach should be taken for ERC777, so rather than override the low level `_move`, the interface functions should be overriden, which then makes it clearer which functionality has been changed.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550127233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550146669",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1984#issuecomment-550146669",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1984",
    "id": 550146669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDE0NjY2OQ==",
    "user": {
      "login": "JonahGroendal",
      "id": 13501607,
      "node_id": "MDQ6VXNlcjEzNTAxNjA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13501607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JonahGroendal",
      "html_url": "https://github.com/JonahGroendal",
      "followers_url": "https://api.github.com/users/JonahGroendal/followers",
      "following_url": "https://api.github.com/users/JonahGroendal/following{/other_user}",
      "gists_url": "https://api.github.com/users/JonahGroendal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JonahGroendal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JonahGroendal/subscriptions",
      "organizations_url": "https://api.github.com/users/JonahGroendal/orgs",
      "repos_url": "https://api.github.com/users/JonahGroendal/repos",
      "events_url": "https://api.github.com/users/JonahGroendal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JonahGroendal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T05:08:51Z",
    "updated_at": "2019-11-06T05:08:51Z",
    "author_association": "NONE",
    "body": "I'm creating a dApp that gives each user his own token, but the token contract can be created before the user signs up, so `_symbol` and `_name` must be settable after contract creation. This is probably a pretty non-standard use case, but I figured changing visibility to `internal` wouldn't affect anything. But it's no biggie, I can always just fork the repo. Creating 2 extra private variables would be a bit too messy I think.\r\n\r\nAs for the pauseable dilemma, I thought about doing it the way `ERC20Pausable` does it, as you suggest, and it would work fine, but it would take more method overrides than overriding the three helper functions. And this way if a new state-mutating method gets added to the `ERC777` contract down the road (tho that may be unlikely) I wouldn't need to add an override for it.\r\n\r\nMy use-case is fairly unique so I can understand if you don't think accommodating my needs would be worth going against openzeppelin's internal standards. I think my best bet is to clone and modify the contract rather than extend it. Thanks for the reply and feel free to close the issue",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550146669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550390892",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1984#issuecomment-550390892",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1984",
    "id": 550390892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDM5MDg5Mg==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T16:32:10Z",
    "updated_at": "2019-11-06T16:32:10Z",
    "author_association": "MEMBER",
    "body": "Hi @JonahGroendal! Your use case sounds quite reasonable!\r\n\r\nUnfortunately though, we do have a strict policy of keeping all variables `private`.\r\n\r\nRather than forking, I would highly encourage you to inherit the contract, create the 2 extra variables, and add overrides. I agree that it sounds messy, but it's more aligned with the recommended way to use the library. It's highly discouraged to fork and modify the code for yourself because you can accidentally introduce bugs, and even though this particular case is harmless, when it comes to security conventions it's better to strictly follow them always.\r\n\r\nSimilarly to the private variables, I think `_move` is too low-level a function for us to safely expose internally. Unfortunately you won't be able to modify `send` and `transfer` through overrides either because they're `external` and `super.send` will not compile. This is a shortcoming of our current implementation that we should fix. We closed things down as much as possible initially to keep our options open, to see what features users would need and what would be the best interface we can provide for them. Apologies that you ran into these issues!\r\n\r\n@nventuro what do you think we should do here to enable the implementation of a `Pausable` `ERC777`?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550390892/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550580334",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1984#issuecomment-550580334",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1984",
    "id": 550580334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDU4MDMzNA==",
    "user": {
      "login": "JonahGroendal",
      "id": 13501607,
      "node_id": "MDQ6VXNlcjEzNTAxNjA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13501607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JonahGroendal",
      "html_url": "https://github.com/JonahGroendal",
      "followers_url": "https://api.github.com/users/JonahGroendal/followers",
      "following_url": "https://api.github.com/users/JonahGroendal/following{/other_user}",
      "gists_url": "https://api.github.com/users/JonahGroendal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JonahGroendal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JonahGroendal/subscriptions",
      "organizations_url": "https://api.github.com/users/JonahGroendal/orgs",
      "repos_url": "https://api.github.com/users/JonahGroendal/repos",
      "events_url": "https://api.github.com/users/JonahGroendal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JonahGroendal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-07T01:39:00Z",
    "updated_at": "2019-11-07T01:39:00Z",
    "author_association": "NONE",
    "body": "`send` and `transfer` could be made `public`, but this would cause `send` to use more gas due to the `data` parameter.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/550580334/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/551296288",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1984#issuecomment-551296288",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1984",
    "id": 551296288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTI5NjI4OA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-07T22:30:35Z",
    "updated_at": "2019-11-07T22:30:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, if only we had a way to limit internal access to other OZ contracts...\r\n\r\nI have mixed feelings about implementing `Pausable` in terms of `_move`. On the one hand, it _is_ both convenient and correct, but it is not immediately obvious from looking at the function pseudo signature (including modifiers). Reverts due to e.g. a zero address are _also_ not obvious this way however, so this is not the strongest argument.\r\n\r\nOn the other, locking down the external interface via the modifier is much more explicit, though error prone (which I don't consider much of an issue given the context of this project). The biggest win here is that we won't run into a scenario where a function is pausable without us realizing it because it indirectly moves tokens around.\r\n\r\nRegarding the name and symbol, couldn't we add a setter for these variables? I'm not sure we should do this as the base contract level however. @JonahGroendal could you expand a bit on why it is you need to deploy the token contract before you know name and symbol? That may help us come up with a better design. ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/551296288/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/551366084",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1984#issuecomment-551366084",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1984",
    "id": 551366084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTM2NjA4NA==",
    "user": {
      "login": "JonahGroendal",
      "id": 13501607,
      "node_id": "MDQ6VXNlcjEzNTAxNjA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13501607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JonahGroendal",
      "html_url": "https://github.com/JonahGroendal",
      "followers_url": "https://api.github.com/users/JonahGroendal/followers",
      "following_url": "https://api.github.com/users/JonahGroendal/following{/other_user}",
      "gists_url": "https://api.github.com/users/JonahGroendal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JonahGroendal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JonahGroendal/subscriptions",
      "organizations_url": "https://api.github.com/users/JonahGroendal/orgs",
      "repos_url": "https://api.github.com/users/JonahGroendal/repos",
      "events_url": "https://api.github.com/users/JonahGroendal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JonahGroendal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-08T03:12:58Z",
    "updated_at": "2019-11-08T03:12:58Z",
    "author_association": "NONE",
    "body": "@nventuro The long story: The novel feature of my dApp is the ability to authenticate web domain owners via X509 certificates on the blockchain. So a website owner can prove his/her identity to claim ownership of a special ENS address (e.g. example.com.dnsroot.eth). My token contracts aren't owned by the contract creator but rather by an ENS node specified at contract creation. The token contracts are created by a TokenFactory contract that can be called from any account willing to pay for the gas (presumably a user who wants to buy the token), and then the owner of the contract can authenticate and claim ownership of the token later. So any account can create a token that's owned by an ENS node and purchase tokens from it, then later the ENS node owner can withdraw the funds used to buy the tokens.\r\n\r\nLike i said this is probably a pretty uncommon use-case. And because of y'all's rule against `internal` state variables, accommodating my needs would require more changes than I originally envisioned. So whatever you guys think is fine with me. The workaround that @frangio recommended would always work.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/551366084/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/551977599",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1984#issuecomment-551977599",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1984",
    "id": 551977599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTk3NzU5OQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-08T20:25:04Z",
    "updated_at": "2019-11-08T20:25:04Z",
    "author_association": "MEMBER",
    "body": ">a scenario where a function is pausable without us realizing it because it indirectly moves tokens around.\r\n\r\nWouldn't this be desirable though? I would expect that if I pause the contract all moving is paused.\r\n\r\nI still don't think exposing `_move` is a good idea anyway.\r\n\r\nMy proposal is to make the ERC777 interface functions `public` rather than `external` as they are now. This allows people to override them to add functionality and to create new external functions that make use of them.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/551977599/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/552591547",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1984#issuecomment-552591547",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1984",
    "id": 552591547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjU5MTU0Nw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-11T19:59:36Z",
    "updated_at": "2019-11-11T19:59:36Z",
    "author_association": "CONTRIBUTOR",
    "body": ">Wouldn't this be desirable though? I would expect that if I pause the contract all moving is paused.\r\n\r\nIt is desirable in the 'I want to pause all moving sense', but not in that it is not obvious which external functions will end up being affected by this.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/552591547/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/553844537",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1984#issuecomment-553844537",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1984",
    "id": 553844537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1Mzg0NDUzNw==",
    "user": {
      "login": "arindamghosh4995",
      "id": 24900324,
      "node_id": "MDQ6VXNlcjI0OTAwMzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/24900324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arindamghosh4995",
      "html_url": "https://github.com/arindamghosh4995",
      "followers_url": "https://api.github.com/users/arindamghosh4995/followers",
      "following_url": "https://api.github.com/users/arindamghosh4995/following{/other_user}",
      "gists_url": "https://api.github.com/users/arindamghosh4995/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arindamghosh4995/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arindamghosh4995/subscriptions",
      "organizations_url": "https://api.github.com/users/arindamghosh4995/orgs",
      "repos_url": "https://api.github.com/users/arindamghosh4995/repos",
      "events_url": "https://api.github.com/users/arindamghosh4995/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arindamghosh4995/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-14T11:21:17Z",
    "updated_at": "2019-11-14T11:22:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "\r\n\r\n> My proposal is to make the ERC777 interface functions `public` rather than `external` as they are now. This allows people to override them to add functionality and to create new external functions that make use of them.\r\n\r\n@frangio  Any update/decision on this, I have a use case which needs this. Happy to put up a pull request. \r\nI have created an issue here [#1994 ](https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1994).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/553844537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/554567139",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1984#issuecomment-554567139",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1984",
    "id": 554567139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDU2NzEzOQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-15T23:20:33Z",
    "updated_at": "2019-11-15T23:20:33Z",
    "author_association": "MEMBER",
    "body": "Thank you @arindamghosh4995. Closing in favor of #1994.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/554567139/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
