{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/494",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/494/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/494/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/494/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/494",
  "id": 264235233,
  "node_id": "MDU6SXNzdWUyNjQyMzUyMzM=",
  "number": 494,
  "title": "Add SmartToken contract",
  "user": {
    "login": "AugustoL",
    "id": 7763867,
    "node_id": "MDQ6VXNlcjc3NjM4Njc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7763867?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AugustoL",
    "html_url": "https://github.com/AugustoL",
    "followers_url": "https://api.github.com/users/AugustoL/followers",
    "following_url": "https://api.github.com/users/AugustoL/following{/other_user}",
    "gists_url": "https://api.github.com/users/AugustoL/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AugustoL/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AugustoL/subscriptions",
    "organizations_url": "https://api.github.com/users/AugustoL/orgs",
    "repos_url": "https://api.github.com/users/AugustoL/repos",
    "events_url": "https://api.github.com/users/AugustoL/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AugustoL/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650860,
      "node_id": "MDU6TGFiZWw1MDM2NTA4NjA=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/feature",
      "name": "feature",
      "color": "b9db64",
      "default": false,
      "description": "New contracts, functions, or helpers."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "spalladino",
    "id": 429604,
    "node_id": "MDQ6VXNlcjQyOTYwNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/429604?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/spalladino",
    "html_url": "https://github.com/spalladino",
    "followers_url": "https://api.github.com/users/spalladino/followers",
    "following_url": "https://api.github.com/users/spalladino/following{/other_user}",
    "gists_url": "https://api.github.com/users/spalladino/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/spalladino/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/spalladino/subscriptions",
    "organizations_url": "https://api.github.com/users/spalladino/orgs",
    "repos_url": "https://api.github.com/users/spalladino/repos",
    "events_url": "https://api.github.com/users/spalladino/events{/privacy}",
    "received_events_url": "https://api.github.com/users/spalladino/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "spalladino",
      "id": 429604,
      "node_id": "MDQ6VXNlcjQyOTYwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/429604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spalladino",
      "html_url": "https://github.com/spalladino",
      "followers_url": "https://api.github.com/users/spalladino/followers",
      "following_url": "https://api.github.com/users/spalladino/following{/other_user}",
      "gists_url": "https://api.github.com/users/spalladino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spalladino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spalladino/subscriptions",
      "organizations_url": "https://api.github.com/users/spalladino/orgs",
      "repos_url": "https://api.github.com/users/spalladino/repos",
      "events_url": "https://api.github.com/users/spalladino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spalladino/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2017-10-10T13:48:49Z",
  "updated_at": "2018-01-17T14:59:02Z",
  "closed_at": "2018-01-17T14:58:58Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Simple Summary\r\n\r\nA standard interface for smart tokens based in the ERC20 standard.\r\n\r\n\r\n## Abstract\r\n\r\nThis standard provides basic functionality to transfer tokens, as well as allow tokens to be approved so they can be spent by another on-chain third party. Also it allows to execute calls on transfers and approvals.\r\n\r\n\r\n## Motivation\r\n\r\nA standard interface allows any tokens on Ethereum to be re-used by other applications: from wallets to decentralized exchanges. The ERC20 token standard is widely accepted but it only allows the transfer of value, ethereum users are available to transfer value and data on transactions, with these extension of the ERC20 token standard they will be able to do the same with ERC20 tokens.\r\n\r\n\r\n## Specification\r\n\r\n## Token\r\n### Methods\r\n\r\n**NOTE**: Callers MUST handle `false` from `returns (bool success)`.  Callers MUST NOT assume that `false` is never returned!\r\n\r\n\r\n#### name - ERC20\r\n\r\nReturns the name of the token - e.g. `\"MyToken\"`.\r\n\r\nOPTIONAL - This method can be used to improve usability,\r\nbut interfaces and other contracts MUST NOT expect these values to be present.\r\n\r\n\r\n``` js\r\nfunction name() constant returns (string name)\r\n```\r\n\r\n\r\n#### symbol - ERC20\r\n\r\nReturns the symbol of the token. E.g. \"HIX\".\r\n\r\nOPTIONAL - This method can be used to improve usability,\r\nbut interfaces and other contracts MUST NOT expect these values to be present.\r\n\r\n``` js\r\nfunction symbol() constant returns (string symbol)\r\n```\r\n\r\n\r\n\r\n#### decimals - ERC20\r\n\r\nReturns the number of decimals the token uses - e.g. `8`, means to divide the token amount by `100000000` to get its user representation.\r\n\r\nOPTIONAL - This method can be used to improve usability,\r\nbut interfaces and other contracts MUST NOT expect these values to be present.\r\n\r\n``` js\r\nfunction decimals() constant returns (uint8 decimals)\r\n```\r\n\r\n\r\n#### totalSupply - ERC20\r\n\r\nReturns the total token supply.\r\n\r\n``` js\r\nfunction totalSupply() constant returns (uint256 totalSupply)\r\n```\r\n\r\n\r\n\r\n#### balanceOf - ERC20\r\n\r\nReturns the account balance of another account with address `_owner`.\r\n\r\n``` js\r\nfunction balanceOf(address _owner) constant returns (uint256 balance)\r\n```\r\n\r\n\r\n\r\n#### transfer - ERC20\r\n\r\nTransfers `_value` amount of tokens to address `_to`, and MUST fire the `Transfer` event.\r\nThe function SHOULD `throw` if the `_from` account balance does not have enough tokens to spend.\r\n\r\nA token contract which creates new tokens SHOULD trigger a Transfer event with the `_from` address set to `0x0` when tokens are created.\r\n\r\n*Note* Transfers of 0 values MUST be treated as normal transfers and fire the `Transfer` event.\r\n\r\n``` js\r\nfunction transfer(address _to, uint256 _value) returns (bool success)\r\n```\r\n\r\n\r\n\r\n#### transferFrom - ERC20\r\n\r\nTransfers `_value` amount of tokens from address `_from` to address `_to`, and MUST fire the `Transfer` event.\r\n\r\nThe `transferFrom` method is used for a withdraw workflow, allowing contracts to transfer tokens on your behalf.\r\nThis can be used for example to allow a contract to transfer tokens on your behalf and/or to charge fees in sub-currencies.\r\nThe function SHOULD `throw` unless the `_from` account has deliberately authorized the sender of the message via some mechanism.\r\n\r\n*Note* Transfers of 0 values MUST be treated as normal transfers and fire the `Transfer` event.\r\n\r\n``` js\r\nfunction transferFrom(address _from, address _to, uint256 _value) returns (bool success)\r\n```\r\n\r\n\r\n\r\n#### approve - ERC20\r\n\r\nAllows `_spender` to withdraw from your account multiple times, up to the `_value` amount. If this function is called again it overwrites the current allowance with `_value`.\r\n\r\nUsers SHOULD make sure to create user interfaces in such a way that they set the allowance first to `0` before setting it to another value for the same spender.\r\nTHOUGH The contract itself shouldn't enforce it, to allow backwards compatilibilty with contracts deployed before\r\n\r\n``` js\r\nfunction approve(address _spender, uint256 _value) returns (bool success)\r\n```\r\n\r\n\r\n\r\n#### allowance - ERC20\r\n\r\nReturns the amount which `_spender` is still allowed to withdraw from `_owner`.\r\n\r\n``` js\r\nfunction allowance(address _owner, address _spender) constant returns (uint256 remaining)\r\n```\r\n\r\n\r\n### Smart token methods\r\n\r\n\r\n#### transferData\r\n\r\nExecute a function on `_to` with the `_data` parameter, if the function ends successfully execute the transfer of `_value` amount of tokens to address `_to`, and MUST fire the `Transfer` event.\r\nThe function SHOULD `throw` if the call to `_to` address fails or if `_from` account balance does not have enough tokens to spend.\r\n\r\n*Note* Transfers of 0 values MUST be treated as normal transfers and fire the `Transfer` event.\r\n\r\n``` js\r\nfunction transferData(address _to, uint256 _value, bytes _data) returns (bool success)\r\n```\r\n\r\n\r\n\r\n#### transferDataFrom\r\n\r\nExecute a function on `_to` with the `_data` parameter, if the function ends sucesfully execute the transfer of `_value` amount of tokens from address `_from` to address `_to`, and MUST fire the `Transfer` event.\r\n\r\nThe `transferFrom` method is used for a withdraw workflow, allowing contracts to transfer tokens on your behalf.\r\nThis can be used for example to allow a contract to transfer tokens on your behalf and/or to charge fees in sub-currencies.\r\nThe function SHOULD `throw` if the call to `_to` address fails or if the `_from` approved balance by `_from` to `msg.sender` is not enough to execute the transfer.\r\n\r\n*Note* Transfers of 0 values MUST be treated as normal transfers and fire the `Transfer` event.\r\n\r\n``` js\r\nfunction transferDataFrom(address _from, address _to, uint256 _value, bytes _data) returns (bool success)\r\n```\r\n\r\n\r\n\r\n#### approveData\r\n\r\nExecute a function on `_to` with the `_data` parameter, if the function ends sucesfully allows `_spender` to withdraw from your account multiple times, up to the `_value` amount. If this function is called again it overwrites the current allowance with `_value`.\r\n\r\nClients SHOULD make sure to create user interfaces in such a way that they set the allowance first to `0` before setting it to another value for the same spender.\r\nThe function SHOULD `throw` if the call to `_to` address fails.\r\nTHOUGH The contract itself shouldn't enforce it, to allow backwards compatilibilty with contracts deployed before\r\n\r\n``` js\r\nfunction approveData(address _spender, uint256 _value, bytes _data) returns (bool success)\r\n```\r\n\r\n\r\n\r\n\r\n### Events\r\n\r\n\r\n#### Transfer - ERC20\r\n\r\nMUST trigger when tokens are transferred, including zero value transfers.\r\n\r\n``` js\r\nevent Transfer(address indexed _from, address indexed _to, uint256 _value)\r\n```\r\n\r\n\r\n\r\n#### Approval - ERC20\r\n\r\nMUST trigger on any successful call to `approve(address _spender, uint256 _value)`.\r\n\r\n``` js\r\nevent Approval(address indexed _owner, address indexed _spender, uint256 _value)\r\n```\r\n\r\n\r\n\r\n## Implementation\r\n\r\nThe SmartToken is implemented and used in the Lif token, [Github Repository](https://github.com/windingtree/LifToken)\r\n\r\n#### Example implementations are available at\r\n- https://github.com/windingtree/LifToken/blob/master/contracts/SmartToken.sol\r\n",
  "closed_by": {
    "login": "AugustoL",
    "id": 7763867,
    "node_id": "MDQ6VXNlcjc3NjM4Njc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7763867?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AugustoL",
    "html_url": "https://github.com/AugustoL",
    "followers_url": "https://api.github.com/users/AugustoL/followers",
    "following_url": "https://api.github.com/users/AugustoL/following{/other_user}",
    "gists_url": "https://api.github.com/users/AugustoL/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AugustoL/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AugustoL/subscriptions",
    "organizations_url": "https://api.github.com/users/AugustoL/orgs",
    "repos_url": "https://api.github.com/users/AugustoL/repos",
    "events_url": "https://api.github.com/users/AugustoL/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AugustoL/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/494/reactions",
    "total_count": 11,
    "+1": 11,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/494/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/335510018",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/494#issuecomment-335510018",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/494",
    "id": 335510018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTUxMDAxOA==",
    "user": {
      "login": "AugustoL",
      "id": 7763867,
      "node_id": "MDQ6VXNlcjc3NjM4Njc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7763867?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AugustoL",
      "html_url": "https://github.com/AugustoL",
      "followers_url": "https://api.github.com/users/AugustoL/followers",
      "following_url": "https://api.github.com/users/AugustoL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AugustoL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AugustoL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AugustoL/subscriptions",
      "organizations_url": "https://api.github.com/users/AugustoL/orgs",
      "repos_url": "https://api.github.com/users/AugustoL/repos",
      "events_url": "https://api.github.com/users/AugustoL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AugustoL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-10T15:24:06Z",
    "updated_at": "2017-10-10T15:24:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "In the case of our project Winding Tree methods like these will allow us to:\r\n* Book hotel rooms or flights in one transaction, executing `transfer` and `book` functions implemented in our contracts.\r\n* Implement approval of bookings, the user will approve the spent of tokens to the hotel, the hotel will accept them if he allows the user to book the room at that price and reject them if not.\r\n* Send encrypted information in token transactions.\r\n* Will allow developers to build more complex apps over our platform.\r\n\r\nAlso, I've been thinking that this can also help the token to not being take in count as a security, because it will be able to do more that just transfer value between users, but not sure if that is accurate.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/335510018/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/335936121",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/494#issuecomment-335936121",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/494",
    "id": 335936121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTkzNjEyMQ==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-11T20:21:56Z",
    "updated_at": "2017-10-11T20:21:56Z",
    "author_association": "MEMBER",
    "body": "Hi @AugustoL! I think this proposal is interesting. It's mostly the same as the `transferAndCall` proposal in [ethereum/EIPs#677](https://github.com/ethereum/EIPs/issues/677), right?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/335936121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/335938782",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/494#issuecomment-335938782",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/494",
    "id": 335938782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTkzODc4Mg==",
    "user": {
      "login": "AugustoL",
      "id": 7763867,
      "node_id": "MDQ6VXNlcjc3NjM4Njc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7763867?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AugustoL",
      "html_url": "https://github.com/AugustoL",
      "followers_url": "https://api.github.com/users/AugustoL/followers",
      "following_url": "https://api.github.com/users/AugustoL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AugustoL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AugustoL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AugustoL/subscriptions",
      "organizations_url": "https://api.github.com/users/AugustoL/orgs",
      "repos_url": "https://api.github.com/users/AugustoL/repos",
      "events_url": "https://api.github.com/users/AugustoL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AugustoL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-11T20:31:53Z",
    "updated_at": "2017-10-11T20:31:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes is very similar, I have the EIP already written and ready to proposed, but I wanted to propose it first here, I think it will have more acceptance in the community if we show it working in Zeppelin Solidity.\r\n\r\nIf you want @frangio I can create the PR to add it tomorrow :)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/335938782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/339363537",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/494#issuecomment-339363537",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/494",
    "id": 339363537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTM2MzUzNw==",
    "user": {
      "login": "maraoz",
      "id": 287189,
      "node_id": "MDQ6VXNlcjI4NzE4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/287189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maraoz",
      "html_url": "https://github.com/maraoz",
      "followers_url": "https://api.github.com/users/maraoz/followers",
      "following_url": "https://api.github.com/users/maraoz/following{/other_user}",
      "gists_url": "https://api.github.com/users/maraoz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maraoz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maraoz/subscriptions",
      "organizations_url": "https://api.github.com/users/maraoz/orgs",
      "repos_url": "https://api.github.com/users/maraoz/repos",
      "events_url": "https://api.github.com/users/maraoz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maraoz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-25T15:12:04Z",
    "updated_at": "2017-10-25T15:12:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@AugustoL do `transferData` and `transferDataFrom` use the same function names as `transfer` and `transferFrom`? Why not use the names `transferData` and `transferDataFrom` to avoid confusion?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/339363537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/339368271",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/494#issuecomment-339368271",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/494",
    "id": 339368271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTM2ODI3MQ==",
    "user": {
      "login": "AugustoL",
      "id": 7763867,
      "node_id": "MDQ6VXNlcjc3NjM4Njc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7763867?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AugustoL",
      "html_url": "https://github.com/AugustoL",
      "followers_url": "https://api.github.com/users/AugustoL/followers",
      "following_url": "https://api.github.com/users/AugustoL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AugustoL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AugustoL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AugustoL/subscriptions",
      "organizations_url": "https://api.github.com/users/AugustoL/orgs",
      "repos_url": "https://api.github.com/users/AugustoL/repos",
      "events_url": "https://api.github.com/users/AugustoL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AugustoL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-25T15:26:04Z",
    "updated_at": "2017-10-25T15:26:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@maraoz yes, I was using that names for the methods but forgot to change it here when I was creating the issue, now the issue has the correct function names :)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/339368271/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/345485874",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/494#issuecomment-345485874",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/494",
    "id": 345485874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ4NTg3NA==",
    "user": {
      "login": "pash7ka",
      "id": 2335215,
      "node_id": "MDQ6VXNlcjIzMzUyMTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2335215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pash7ka",
      "html_url": "https://github.com/pash7ka",
      "followers_url": "https://api.github.com/users/pash7ka/followers",
      "following_url": "https://api.github.com/users/pash7ka/following{/other_user}",
      "gists_url": "https://api.github.com/users/pash7ka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pash7ka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pash7ka/subscriptions",
      "organizations_url": "https://api.github.com/users/pash7ka/orgs",
      "repos_url": "https://api.github.com/users/pash7ka/repos",
      "events_url": "https://api.github.com/users/pash7ka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pash7ka/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-19T02:02:45Z",
    "updated_at": "2017-11-19T02:02:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "SmartToken is the name [used](https://github.com/bancorprotocol/contracts/blob/master/solidity/contracts/SmartToken.sol) by Bancor team for their protocol.\r\nI'm afraid using it here may introduce some confusion.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/345485874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
