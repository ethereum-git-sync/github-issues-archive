{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2024",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2024/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2024/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2024/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2024",
  "id": 536739126,
  "node_id": "MDU6SXNzdWU1MzY3MzkxMjY=",
  "number": 2024,
  "title": "ERC777Mintable Contract",
  "user": {
    "login": "awantoch",
    "id": 2301666,
    "node_id": "MDQ6VXNlcjIzMDE2NjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2301666?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/awantoch",
    "html_url": "https://github.com/awantoch",
    "followers_url": "https://api.github.com/users/awantoch/followers",
    "following_url": "https://api.github.com/users/awantoch/following{/other_user}",
    "gists_url": "https://api.github.com/users/awantoch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/awantoch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/awantoch/subscriptions",
    "organizations_url": "https://api.github.com/users/awantoch/orgs",
    "repos_url": "https://api.github.com/users/awantoch/repos",
    "events_url": "https://api.github.com/users/awantoch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/awantoch/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650860,
      "node_id": "MDU6TGFiZWw1MDM2NTA4NjA=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/feature",
      "name": "feature",
      "color": "b9db64",
      "default": false,
      "description": "New contracts, functions, or helpers."
    },
    {
      "id": 1000207718,
      "node_id": "MDU6TGFiZWwxMDAwMjA3NzE4",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/contracts",
      "name": "contracts",
      "color": "1d76db",
      "default": false,
      "description": "Smart contract code."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2019-12-12T03:41:09Z",
  "updated_at": "2020-01-31T19:53:16Z",
  "closed_at": "2020-01-31T19:53:16Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n\r\nERC20Mintable is available for ERC20 tokens. An ERC777Mintable contract would help the adoption of ERC777.\r\n\r\n**üìù Details**\r\n\r\nWe will need to implement `ERC777Mintable.sol` in a similar fashion to `ERC20Mintable.sol` by passing the constructor values to the `_mint` function properly.\r\n\r\nHere is an example implementation that could be used:\r\n\r\n```solidity\r\nimport \"./ERC777.sol\";\r\nimport \"../../access/roles/MinterRole.sol\";\r\n\r\n/**\r\n * @dev Extension of {ERC777} that adds a set of accounts with the {MinterRole},\r\n * which have permission to mint (create) new tokens as they see fit.\r\n *\r\n * At construction, the deployer of the contract is the only minter.\r\n */\r\ncontract ERC777Mintable is ERC777, MinterRole {\r\n    /**\r\n     * @dev See {ERC777-_mint}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have the {MinterRole}.\r\n     */\r\n    function mint(\r\n        address operator,\r\n        address account,\r\n        uint256 amount,\r\n        bytes memory userData,\r\n        bytes memory operatorData\r\n    ) public onlyMinter returns (bool) {\r\n        _mint(operator, account, amount, userData, operatorData);\r\n        return true;\r\n    }\r\n}\r\n```\r\n\r\nThis implementation works as expected, even with the standard `Crowsale` and `MintedCrowdsale` contracts, so long as the `_deliverTokens` function is overridden to call `_mint` properly, like so:\r\n\r\n```solidity\r\n/**\r\n     * @dev Overrides delivery by minting tokens upon purchase.\r\n     * @param beneficiary Token purchaser\r\n     * @param tokenAmount Number of tokens to be minted\r\n     */\r\n    function _deliverTokens(address beneficiary, uint256 tokenAmount) internal {\r\n        require(\r\n            ERC777Mintable(address(token())).mint(beneficiary, beneficiary, tokenAmount, \"\", \"\"),\r\n                \"MintedCrowdsale: minting failed\"\r\n        );\r\n    }\r\n```\r\n\r\nIt may be worth a separate PR to make `MintedCrowdsale` work with either token standard, or to migrate functionality for crowdsales completely over to ERC777 (not sure of the OpenZeppelin way of handling such upgrades).",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2024/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2024/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/564841087",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2024#issuecomment-564841087",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2024",
    "id": 564841087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDg0MTA4Nw==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-12T04:08:16Z",
    "updated_at": "2019-12-12T04:08:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Are you creating an ERC777 token @awantoch?\r\n\r\nI wonder if there might be a need for a `mint` and an `operatorMint` function.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/564841087/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/564853661",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2024#issuecomment-564853661",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2024",
    "id": 564853661,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDg1MzY2MQ==",
    "user": {
      "login": "awantoch",
      "id": 2301666,
      "node_id": "MDQ6VXNlcjIzMDE2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2301666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/awantoch",
      "html_url": "https://github.com/awantoch",
      "followers_url": "https://api.github.com/users/awantoch/followers",
      "following_url": "https://api.github.com/users/awantoch/following{/other_user}",
      "gists_url": "https://api.github.com/users/awantoch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/awantoch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/awantoch/subscriptions",
      "organizations_url": "https://api.github.com/users/awantoch/orgs",
      "repos_url": "https://api.github.com/users/awantoch/repos",
      "events_url": "https://api.github.com/users/awantoch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/awantoch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-12T05:17:58Z",
    "updated_at": "2019-12-12T05:23:05Z",
    "author_association": "NONE",
    "body": "@abcoathup No intention of an actual token sale (all within test environments), but I'd like to help with the momentum of ERC777 and when trying to implement the crowdsale with ERC777 I realized there was not yet official support for `MintedCrowdsale`.\r\n\r\nIt makes sense to separate the `mint` and `operatorMint` functions logically, but I think case of `ERC777Mintable`, if I'm understanding correctly, we won't need to since the `operator` and `account` parameters are simply passed through from `mint` to `_mint`. This is a similar structure to the way the unit tests are currently structured as well, using `mintInternal` to test ERC777's underlying `_mint`.\r\n\r\nFor the `MintedCrowdsale`, since the intention is for the `beneficiary` to claim whole ownership of the tokens, it would make sense to use `mint(beneficiary, beneficiary, tokenAmount, \"\", \"\")`, setting the beneficiary to be the `operator` as well as the `account` owner within the `_deliverTokens` function, correct?\r\n\r\nAnother thought -- would it be better to migrate the `MintedCrowdsale` and `Crowdsale` contracts completely over to ERC777 as well (leveraging the overridden `_deliverTokens` function above)? `MintedCrowdsale` is the only type of emission implemented in the library, making the change drop-in with `Crowdsale`. We should only need to change the interfaces from `IERC20` to `IERC777` (even if not, the interface is backwards compatible anyway so the crowdsale still works even if `MintedCrowdsale` is the only file changed). New crowdsales should probably be using the newer replacement standard as well.\r\n\r\nI'm willing to implement all of the changes necessary, just need community confirmation on the design.\r\n\r\nHopefully I'm following correctly. I appreciate the collaboration üôÇ",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/564853661/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/564857588",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2024#issuecomment-564857588",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2024",
    "id": 564857588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDg1NzU4OA==",
    "user": {
      "login": "abcoathup",
      "id": 28278242,
      "node_id": "MDQ6VXNlcjI4Mjc4MjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28278242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcoathup",
      "html_url": "https://github.com/abcoathup",
      "followers_url": "https://api.github.com/users/abcoathup/followers",
      "following_url": "https://api.github.com/users/abcoathup/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcoathup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcoathup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcoathup/subscriptions",
      "organizations_url": "https://api.github.com/users/abcoathup/orgs",
      "repos_url": "https://api.github.com/users/abcoathup/repos",
      "events_url": "https://api.github.com/users/abcoathup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcoathup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-12T05:37:35Z",
    "updated_at": "2019-12-12T05:37:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@awantoch great to hear that you would like to help with the momentum of ERC777.  \r\nI would ‚ù§Ô∏è to see more adoption.  \r\n\r\nI suggest we get input to the discussion from @frangio and @nventuro on the best way to approach.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/564857588/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/565594890",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2024#issuecomment-565594890",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2024",
    "id": 565594890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTU5NDg5MA==",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-13T20:21:20Z",
    "updated_at": "2019-12-13T20:21:20Z",
    "author_association": "MEMBER",
    "body": "Thanks for the suggestion @awantoch! I support adding an `ERC777Mintable` contract. Please go ahead and submit a pull request for that!\r\n\r\nRegarding crowdsales, we haven't seen much demand for crowdsale contracts for quite a while, so I don't think it's a worthwhile investment at the moment!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/565594890/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/565675179",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2024#issuecomment-565675179",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2024",
    "id": 565675179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTY3NTE3OQ==",
    "user": {
      "login": "awantoch",
      "id": 2301666,
      "node_id": "MDQ6VXNlcjIzMDE2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2301666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/awantoch",
      "html_url": "https://github.com/awantoch",
      "followers_url": "https://api.github.com/users/awantoch/followers",
      "following_url": "https://api.github.com/users/awantoch/following{/other_user}",
      "gists_url": "https://api.github.com/users/awantoch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/awantoch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/awantoch/subscriptions",
      "organizations_url": "https://api.github.com/users/awantoch/orgs",
      "repos_url": "https://api.github.com/users/awantoch/repos",
      "events_url": "https://api.github.com/users/awantoch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/awantoch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-14T02:58:35Z",
    "updated_at": "2019-12-14T02:58:35Z",
    "author_association": "NONE",
    "body": "Sounds good @frangio will do!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/565675179/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/580885987",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2024#issuecomment-580885987",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/2024",
    "id": 580885987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDg4NTk4Nw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-31T19:53:16Z",
    "updated_at": "2020-01-31T19:53:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello @awantoch, thank you for your interest in contributing!\r\n\r\nOver the last couple days we've been working on our roadmap for the next couple of weeks (you can [read more about it](https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2068)), and one of the goals we set out is to reduce the complexity of the library. This will include removing contracts such as `ERC20Mintable`, `ERC20Pausable`, and `ERC777Mintable` if it were to be included.\r\n\r\nThe reason why we're doing this is because we want to decouple our Access Control solution (`Roles` and `MinterRole` in this case) from these contracts: we are working on a better Access Control system that will make it easier for users of the library to create their own systems. [We'd love to get your input on this discussion!](https://forum.openzeppelin.com/t/redesigning-openzeppelin-open-source-processes/2048)\r\n\r\nThat said, we will most likely still provide some form of a mintable ERC777 token as an example of library usage, which will also be usable for quick prototyping by being deployable as-is with no need to write Solidity code.\r\n\r\nGiven this, I'm closing this issue to prevent people from spending time on it, which we'll tackle over the following weeks. If you want to look for ideas on how you can contribute to the OpenZeppelin Contracts, head to the [roadmap](https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2068), where there's a section for features we're counting on the community to help with.\r\n\r\nThanks a lot!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/580885987/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
