{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3244",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3244/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3244/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3244/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3244",
  "id": 1160630238,
  "node_id": "I_kwDOA9tCBs5FLc_e",
  "number": 3244,
  "title": "ERC721 - Restricted zero address transfer issue in regards to how opensea treats dead addresses ",
  "user": {
    "login": "kanedaaaa",
    "id": 68785244,
    "node_id": "MDQ6VXNlcjY4Nzg1MjQ0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68785244?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kanedaaaa",
    "html_url": "https://github.com/kanedaaaa",
    "followers_url": "https://api.github.com/users/kanedaaaa/followers",
    "following_url": "https://api.github.com/users/kanedaaaa/following{/other_user}",
    "gists_url": "https://api.github.com/users/kanedaaaa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kanedaaaa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kanedaaaa/subscriptions",
    "organizations_url": "https://api.github.com/users/kanedaaaa/orgs",
    "repos_url": "https://api.github.com/users/kanedaaaa/repos",
    "events_url": "https://api.github.com/users/kanedaaaa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kanedaaaa/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-03-06T14:51:20Z",
  "updated_at": "2022-12-02T21:17:25Z",
  "closed_at": "2022-12-02T21:17:24Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "In the last year or so, I had to work with many ERC721 projects and in almost every single one, I have to tackle the absence of a standard way of burning tokens, which is sending to black hole (0x00...000) address.\r\n\r\nI'm pretty sure everyone is aware of this ongoing issue (from my POV it's a huge issue, will explain why below), but still, in ERC721.sol (Same goes for ERC20), zero address transfers are restricted in internal `_transfer` function (the only way to transfer assets):\r\n\r\n```javascript\r\nrequire(to != address(0), \"ERC721: transfer to the zero address\");\r\n```\r\n\r\nI know, I know someone already made an issue about this years ago, that was closed and I decided to open a new one, just to make the old responses clear, exactly why do we avoid removing it, and making it optional? I also know that there is an extension, I also know that developers can expose internal `_burn` into public function, but why exactly? It's one line VS. extensions and function. (Not arguing here, just trying to understand exactly what is the reason)\r\n\r\nYes, I'm aware that 0x0 isn't only burning address, but the issue comes when we see how Opensea, currently N1 NFT marketplace doesn't recognize other burn addresses, as a black hole (0x0) and won't remove items from the collection page (neither from stats) if it's sent to those mentioned addresses.\r\n\r\nOver time, I just keep telling myself that devs will learn, they will eventually start implementing burn functions or using extensions to cover that functionality, but it just keeps popping out. \r\n\r\nAgain, I don't want to create a huge problem from something simple like this, but since Opensea won't listen to us, I'm sure I can have a chance to make this point here.\r\n\r\nP.S Can we at least outline the fact (somewhere in contract, or documentation) that devs must implement burn function for future use?",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3244/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3244/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1061380879",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3244#issuecomment-1061380879",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3244",
    "id": 1061380879,
    "node_id": "IC_kwDOA9tCBs4_Q2MP",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-08T03:59:24Z",
    "updated_at": "2022-03-08T03:59:24Z",
    "author_association": "MEMBER",
    "body": "Can you explain the importance of burning for NFTs? Why would we recommend that devs \"must\" implement a burn function? The way we see it burning is a feature that may or may not be relevant for a particular NFT, and a dev should make this choice when they are developing the contract. We don't include a `burn` function by default because it is not part of ERC721.\r\n\r\nOne of the things we could very easily do is enable \"Burnable\" by default in our [ERC721 Wizard](https://wizard.openzeppelin.com/#erc721). A change like this to the contracts is going to require a lot more discussion.\r\n\r\n---\r\n\r\n> I know someone already made an issue about this years ago\r\n\r\nCan you share the link to this previous discussion?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1061380879/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1061886708",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3244#issuecomment-1061886708",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3244",
    "id": 1061886708,
    "node_id": "IC_kwDOA9tCBs4_Sxr0",
    "user": {
      "login": "kanedaaaa",
      "id": 68785244,
      "node_id": "MDQ6VXNlcjY4Nzg1MjQ0",
      "avatar_url": "https://avatars.githubusercontent.com/u/68785244?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kanedaaaa",
      "html_url": "https://github.com/kanedaaaa",
      "followers_url": "https://api.github.com/users/kanedaaaa/followers",
      "following_url": "https://api.github.com/users/kanedaaaa/following{/other_user}",
      "gists_url": "https://api.github.com/users/kanedaaaa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kanedaaaa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kanedaaaa/subscriptions",
      "organizations_url": "https://api.github.com/users/kanedaaaa/orgs",
      "repos_url": "https://api.github.com/users/kanedaaaa/repos",
      "events_url": "https://api.github.com/users/kanedaaaa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kanedaaaa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-08T15:16:11Z",
    "updated_at": "2022-03-08T15:16:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Lately, it has become a trend, and usually marketing tool to offer some advantages, in exchange for the burn. And in general, due to the problem I described (Opensea), it's impossible (Not we can implement later, but literally impossible) to burn the tokens properly. Something that comes in need for many projects. \r\n\r\nI do agree **Must** is an exaggerated term to use, I would prefer to call it **Consider** to add a given feature, due to the reasons mentioned above. For example, adding such a comment in Wizard. Since usually it is being used by less experienced people who do not realize the importance of such add-ons. \r\n\r\nFor example, `pausable` modification has this kind of explanation:\r\n*Privileged accounts will be able to pause the functionality marked as whenNotPaused. Useful for emergency response.*\r\n\r\nWould be nice to add that *useful* comment as well, such as *Useful for future use-cases*. (Not the best one, but you get the point)\r\n\r\nAgain, not asking for a change, just notice or comment, that will be sufficient. No need to alter the original implementation just because Opensea won't fix their stuff properly. BUT if it comes to modifying OG implementation, my vote would definitely go to removing ```require(to != address(0))``` (Which i'm not asking for, since I understood that it poses some security risks from old discussion)\r\n\r\nBTW, here is the [old discussion about ERC20 burning](https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1493)\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1061886708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1335852800",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3244#issuecomment-1335852800",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3244",
    "id": 1335852800,
    "node_id": "IC_kwDOA9tCBs5Pn38A",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-02T21:17:24Z",
    "updated_at": "2022-12-02T21:17:24Z",
    "author_association": "MEMBER",
    "body": "Closing due to unclear actionable. If there is a concrete suggestion for documentation please submit a pull request.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1335852800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
