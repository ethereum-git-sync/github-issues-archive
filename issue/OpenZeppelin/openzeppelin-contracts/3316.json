{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3316",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3316/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3316/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3316/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3316",
  "id": 1191008614,
  "node_id": "I_kwDOA9tCBs5G_Vlm",
  "number": 3316,
  "title": "ERC3156 Flash loans extension improvement",
  "user": {
    "login": "mazenkhalil",
    "id": 21160900,
    "node_id": "MDQ6VXNlcjIxMTYwOTAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/21160900?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mazenkhalil",
    "html_url": "https://github.com/mazenkhalil",
    "followers_url": "https://api.github.com/users/mazenkhalil/followers",
    "following_url": "https://api.github.com/users/mazenkhalil/following{/other_user}",
    "gists_url": "https://api.github.com/users/mazenkhalil/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mazenkhalil/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mazenkhalil/subscriptions",
    "organizations_url": "https://api.github.com/users/mazenkhalil/orgs",
    "repos_url": "https://api.github.com/users/mazenkhalil/repos",
    "events_url": "https://api.github.com/users/mazenkhalil/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mazenkhalil/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 503650966,
      "node_id": "MDU6TGFiZWw1MDM2NTA5NjY=",
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0e8a16",
      "default": true,
      "description": "Low hanging fruit for new contributors to get involved!"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-04-03T18:30:55Z",
  "updated_at": "2022-05-09T08:37:18Z",
  "closed_at": "2022-05-06T21:46:24Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\nThe current flash loans implementation suggests to burn the fee of the flash loan with no easy way for implementers to override this default behavior. e.g. If the token is capped, this leads to shrink the total supply over time [considering the fee is higher than 0].\r\n\r\nThis behavior is not well documented and the Wizard doesn't consider this.\r\n\r\n**üìù Details**\r\nI would suggest to implement two strategies for the flash loan fee processing. Where implementers explicitly set the right strategy for their use case.\r\n1. BURN: The loaned amount and the fee amount get burnt (current implementation).\r\n2. HOLD: The loaned amount get burnt and the fee amount get transferred to the contract itself (address(this)).\r\n3. CUSTOM: The fee amount to be transferred to different address (Breaks the trust?)\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3316/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3316/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1087713303",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3316#issuecomment-1087713303",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3316",
    "id": 1087713303,
    "node_id": "IC_kwDOA9tCBs5A1TAX",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-04T15:38:32Z",
    "updated_at": "2022-04-04T15:38:52Z",
    "author_association": "COLLABORATOR",
    "body": "Hello @mazenkhalil \r\n\r\nI agree that having the ability to easily override/reconfigure the contract so that fees are transferred to a particular address (not burning them) would be an interesting addition. \r\n\r\nI'm not exactly sure how we would like this to be implemented, considering burning the amount and the fee saves gas, and doing that in two steps (one of which could be overridden) would be more expensive.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1087713303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1090467520",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3316#issuecomment-1090467520",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3316",
    "id": 1090467520,
    "node_id": "IC_kwDOA9tCBs5A_zbA",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-06T16:28:57Z",
    "updated_at": "2022-04-06T16:48:54Z",
    "author_association": "MEMBER",
    "body": "This is a great point. We need to decide how we will expose this functionality. Am I right that we can simply model this as the ability to customize the fee receiver? We can say that if the receiver is 0 the fee is burned, and otherwise the fee is transferred to that account. So we could add an internal virtual function that people can override to customize:\r\n\r\n```solidity\r\nfunction _flashFeeReceiver(address token) internal view virtual returns (address) {\r\n    return address(0);\r\n}\r\n````\r\n\r\nRegarding @Amxx's concern about implementation, we if the receiver is zero we can burn it all together.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1090467520/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1092697688",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3316#issuecomment-1092697688",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3316",
    "id": 1092697688,
    "node_id": "IC_kwDOA9tCBs5BIT5Y",
    "user": {
      "login": "mazenkhalil",
      "id": 21160900,
      "node_id": "MDQ6VXNlcjIxMTYwOTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/21160900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mazenkhalil",
      "html_url": "https://github.com/mazenkhalil",
      "followers_url": "https://api.github.com/users/mazenkhalil/followers",
      "following_url": "https://api.github.com/users/mazenkhalil/following{/other_user}",
      "gists_url": "https://api.github.com/users/mazenkhalil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mazenkhalil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mazenkhalil/subscriptions",
      "organizations_url": "https://api.github.com/users/mazenkhalil/orgs",
      "repos_url": "https://api.github.com/users/mazenkhalil/repos",
      "events_url": "https://api.github.com/users/mazenkhalil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mazenkhalil/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-08T10:07:28Z",
    "updated_at": "2022-04-08T10:46:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have discovered another interesting prone-to-error flow.\r\n\r\n```javascript\r\n    function flashFee(address token, uint256 amount) public view virtual override returns (uint256) {\r\n        require(token == address(this), \"ERC20FlashMint: wrong token\");\r\n        // silence warning about unused variable without the addition of bytecode.\r\n        amount;\r\n        return 0;\r\n    }\r\n```\r\nThe flashFee function is suppose to be overloaded in order to update the flash fee amount. The thing is the validation defined in the function itself. Basically as a developer, I would expect the function to act as getter returning the fee amount while keeping all validations in place. But overriding this function leads to overriding the default validations as well.\r\nAny suggestion?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1092697688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1093081183",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3316#issuecomment-1093081183",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3316",
    "id": 1093081183,
    "node_id": "IC_kwDOA9tCBs5BJxhf",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-08T16:47:53Z",
    "updated_at": "2022-04-08T16:47:53Z",
    "author_association": "MEMBER",
    "body": "@mazenkhalil It's a valid point. Can you open a new issue about it?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1093081183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1120410770",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3316#issuecomment-1120410770",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3316",
    "id": 1120410770,
    "node_id": "IC_kwDOA9tCBs5CyByS",
    "user": {
      "login": "Amxx",
      "id": 2432299,
      "node_id": "MDQ6VXNlcjI0MzIyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2432299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Amxx",
      "html_url": "https://github.com/Amxx",
      "followers_url": "https://api.github.com/users/Amxx/followers",
      "following_url": "https://api.github.com/users/Amxx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Amxx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Amxx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Amxx/subscriptions",
      "organizations_url": "https://api.github.com/users/Amxx/orgs",
      "repos_url": "https://api.github.com/users/Amxx/repos",
      "events_url": "https://api.github.com/users/Amxx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Amxx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-08T12:33:19Z",
    "updated_at": "2022-05-08T12:33:19Z",
    "author_association": "COLLABORATOR",
    "body": "> Basically as a developer, I would expect the function to act as getter returning the fee amount while keeping all validations in place.\r\n\r\nPlease don't forget the ERC requirements\r\n> The flashFee function MUST return the fee charged for a loan of amount token. If the token is not supported flashFee MUST revert.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1120410770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1120810665",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3316#issuecomment-1120810665",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3316",
    "id": 1120810665,
    "node_id": "IC_kwDOA9tCBs5Czjap",
    "user": {
      "login": "mazenkhalil",
      "id": 21160900,
      "node_id": "MDQ6VXNlcjIxMTYwOTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/21160900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mazenkhalil",
      "html_url": "https://github.com/mazenkhalil",
      "followers_url": "https://api.github.com/users/mazenkhalil/followers",
      "following_url": "https://api.github.com/users/mazenkhalil/following{/other_user}",
      "gists_url": "https://api.github.com/users/mazenkhalil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mazenkhalil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mazenkhalil/subscriptions",
      "organizations_url": "https://api.github.com/users/mazenkhalil/orgs",
      "repos_url": "https://api.github.com/users/mazenkhalil/repos",
      "events_url": "https://api.github.com/users/mazenkhalil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mazenkhalil/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-09T08:37:18Z",
    "updated_at": "2022-05-09T08:37:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "The point is the validation within the function that can be mistakenly overridden by implementers. More details about this can be found on issue #3331",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1120810665/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
