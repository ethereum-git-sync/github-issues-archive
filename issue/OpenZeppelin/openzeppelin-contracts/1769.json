{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1769",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1769/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1769/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1769/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1769",
  "id": 447909295,
  "node_id": "MDU6SXNzdWU0NDc5MDkyOTU=",
  "number": 1769,
  "title": "SafeERC20 safeTransfer,safeTransferFrom,.. gives no indication of failure when called on a contract which does not have transfer function and has a non reverting fallback function",
  "user": {
    "login": "guylando",
    "id": 14879163,
    "node_id": "MDQ6VXNlcjE0ODc5MTYz",
    "avatar_url": "https://avatars.githubusercontent.com/u/14879163?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/guylando",
    "html_url": "https://github.com/guylando",
    "followers_url": "https://api.github.com/users/guylando/followers",
    "following_url": "https://api.github.com/users/guylando/following{/other_user}",
    "gists_url": "https://api.github.com/users/guylando/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/guylando/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/guylando/subscriptions",
    "organizations_url": "https://api.github.com/users/guylando/orgs",
    "repos_url": "https://api.github.com/users/guylando/repos",
    "events_url": "https://api.github.com/users/guylando/events{/privacy}",
    "received_events_url": "https://api.github.com/users/guylando/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-05-23T23:02:19Z",
  "updated_at": "2019-05-24T11:28:41Z",
  "closed_at": "2019-05-24T11:28:06Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Call \r\n```\r\nSafeERC20.safeTransfer(token, to, balance);\r\n```\r\nFor the following contract passed as token:\r\n```\r\ncontract NoTransferMock {\r\n    address private owner;\r\n    constructor () public\r\n    {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function () external payable {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    function balanceOf(address) public pure returns (uint256) {\r\n        return 10;\r\n    }\r\n}\r\n```\r\nthen safeTransfer will call callOptionalReturn which which perform a .call(..) for the non existent transfer function and it calls the fallback function and returns for this contract success=true and empty returndata which pass successfully the require statement and if and end the callOptionalReturn execution without revert and without any indication that the transfer did not happen.\r\n\r\nIf a solidity function has `IERC20 token` parameter then in runtime it allows to pass the contract above and cause the behavior described.\r\n\r\nI think this is a problem that anybody who uses safeTransfer thinks that either transfer happened or revert happens but I showed a third case which might be used by an attacker for code flows manipulation.",
  "closed_by": {
    "login": "guylando",
    "id": 14879163,
    "node_id": "MDQ6VXNlcjE0ODc5MTYz",
    "avatar_url": "https://avatars.githubusercontent.com/u/14879163?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/guylando",
    "html_url": "https://github.com/guylando",
    "followers_url": "https://api.github.com/users/guylando/followers",
    "following_url": "https://api.github.com/users/guylando/following{/other_user}",
    "gists_url": "https://api.github.com/users/guylando/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/guylando/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/guylando/subscriptions",
    "organizations_url": "https://api.github.com/users/guylando/orgs",
    "repos_url": "https://api.github.com/users/guylando/repos",
    "events_url": "https://api.github.com/users/guylando/events{/privacy}",
    "received_events_url": "https://api.github.com/users/guylando/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1769/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1769/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/495415548",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1769#issuecomment-495415548",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1769",
    "id": 495415548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTQxNTU0OA==",
    "user": {
      "login": "guylando",
      "id": 14879163,
      "node_id": "MDQ6VXNlcjE0ODc5MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14879163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guylando",
      "html_url": "https://github.com/guylando",
      "followers_url": "https://api.github.com/users/guylando/followers",
      "following_url": "https://api.github.com/users/guylando/following{/other_user}",
      "gists_url": "https://api.github.com/users/guylando/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guylando/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guylando/subscriptions",
      "organizations_url": "https://api.github.com/users/guylando/orgs",
      "repos_url": "https://api.github.com/users/guylando/repos",
      "events_url": "https://api.github.com/users/guylando/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guylando/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-23T23:06:40Z",
    "updated_at": "2019-05-24T11:04:30Z",
    "author_association": "NONE",
    "body": "More than that, this same \"attack\" will work with a more standard token which has a non reverting fallback function and implements allowance and transferFrom and does not implement \"transfer\" (I imagine such scenario could happen because many security resources recommend to use approve+transferFrom instead of transfer so it totally can happen that someone will decide not to make transfer available at all just as Golem token did not implement transferFrom https://etherscan.io/address/0xa74476443119A942dE498590Fe1f2454d7D4aC0d#code so same attack would work on Golem token if it had a fallback function and SafeERC20.safeTransferFrom was called)",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/495415548/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/495583655",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1769#issuecomment-495583655",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1769",
    "id": 495583655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTU4MzY1NQ==",
    "user": {
      "login": "guylando",
      "id": 14879163,
      "node_id": "MDQ6VXNlcjE0ODc5MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14879163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guylando",
      "html_url": "https://github.com/guylando",
      "followers_url": "https://api.github.com/users/guylando/followers",
      "following_url": "https://api.github.com/users/guylando/following{/other_user}",
      "gists_url": "https://api.github.com/users/guylando/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guylando/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guylando/subscriptions",
      "organizations_url": "https://api.github.com/users/guylando/orgs",
      "repos_url": "https://api.github.com/users/guylando/repos",
      "events_url": "https://api.github.com/users/guylando/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guylando/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-24T11:28:06Z",
    "updated_at": "2019-05-24T11:28:41Z",
    "author_association": "NONE",
    "body": "closing because seems this is the intended solidity behavior. callers should be careful and audit the contract they call to avoid such problems",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/495583655/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
