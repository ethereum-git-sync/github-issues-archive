{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1164",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1164/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1164/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1164/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1164",
  "id": 348561024,
  "node_id": "MDU6SXNzdWUzNDg1NjEwMjQ=",
  "number": 1164,
  "title": "SafeMath.sol inconsistent coding convention",
  "user": {
    "login": "barakman",
    "id": 7003246,
    "node_id": "MDQ6VXNlcjcwMDMyNDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barakman",
    "html_url": "https://github.com/barakman",
    "followers_url": "https://api.github.com/users/barakman/followers",
    "following_url": "https://api.github.com/users/barakman/following{/other_user}",
    "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
    "organizations_url": "https://api.github.com/users/barakman/orgs",
    "repos_url": "https://api.github.com/users/barakman/repos",
    "events_url": "https://api.github.com/users/barakman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barakman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2018-08-08T03:23:08Z",
  "updated_at": "2018-10-17T14:34:01Z",
  "closed_at": "2018-08-08T14:21:24Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## üéâ Description\r\n\r\nSafeMath.sol:\r\n```\r\nfunction mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\r\nfunction div(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\nfunction sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\nfunction add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\r\n```\r\n\r\nI suggest removing that `c` and declare it inside the function, as in all other contracts.\r\n\r\n<!-- Briefly describe the issue you are experiencing (or the feature you want to see added to OpenZeppelin). Tell us what you were trying to do and what happened instead. **Remember, this is _not_ a place to ask for help debugging code; for that, we welcome you in the [OpenZeppelin Slack Channel](https://slack.openzeppelin.org/).** -->\r\n\r\n- [ ] üêõ This is a bug report.\r\n- [ ] üìà This is a feature request.\r\n\r\n<!-- Please check one of the above by placing an x in the box. -->\r\n\r\n## üíª Environment\r\n\r\nNext, we need to know what your environment looks like.\r\n\r\n- Which version of OpenZeppelin are you using?\r\n- What network are you deploying to? Ganache? Ropsten?\r\n- How are you deploying your OpenZeppelin-backed contracts? truffle? Remix? Let us know!\r\n\r\n## üìù Details\r\n\r\nDescribe the problem you have been experiencing in more detail. Include as much information as you think is relevant. Keep in mind that transactions can fail for many reasons; context is key here.\r\n\r\n## üî¢ Code To Reproduce Issue [ Good To Have ]\r\n\r\nPlease remember that with sample code it's easier to reproduce the bug and it's much faster to fix it.\r\n\r\n```\r\ninsert short code snippets here\r\n```\r\n\r\n<!-- If your code is larger, consider linking us to a repo illustrating your issue. -->\r\n\r\n## üëç Other Information\r\n\r\n<!-- List any other information that is relevant to your issue. Error logs, related issues, suggestions on how to fix, Stack Overflow links, forum links, etc. -->\r\n",
  "closed_by": {
    "login": "nventuro",
    "id": 2530770,
    "node_id": "MDQ6VXNlcjI1MzA3NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nventuro",
    "html_url": "https://github.com/nventuro",
    "followers_url": "https://api.github.com/users/nventuro/followers",
    "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
    "organizations_url": "https://api.github.com/users/nventuro/orgs",
    "repos_url": "https://api.github.com/users/nventuro/repos",
    "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nventuro/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1164/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1164/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/411355143",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1164#issuecomment-411355143",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1164",
    "id": 411355143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTM1NTE0Mw==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-08T10:05:55Z",
    "updated_at": "2018-08-08T10:05:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is part of the testing consistency effort, but was not covered in any single issue, thanks @barakman!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/411355143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/429675053",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1164#issuecomment-429675053",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1164",
    "id": 429675053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTY3NTA1Mw==",
    "user": {
      "login": "DeltaBalances",
      "id": 30391324,
      "node_id": "MDQ6VXNlcjMwMzkxMzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/30391324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DeltaBalances",
      "html_url": "https://github.com/DeltaBalances",
      "followers_url": "https://api.github.com/users/DeltaBalances/followers",
      "following_url": "https://api.github.com/users/DeltaBalances/following{/other_user}",
      "gists_url": "https://api.github.com/users/DeltaBalances/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DeltaBalances/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DeltaBalances/subscriptions",
      "organizations_url": "https://api.github.com/users/DeltaBalances/orgs",
      "repos_url": "https://api.github.com/users/DeltaBalances/repos",
      "events_url": "https://api.github.com/users/DeltaBalances/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DeltaBalances/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T00:06:19Z",
    "updated_at": "2018-10-15T00:06:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nventuro \r\nThis is actually more than a coding style issue.\r\n\r\nDeclaring that c inside the function body actually increases the gas cost.\r\n\r\nThis change just slightly increased the gas cost of every `mul()` and `add()` operation. It might just be about 5-10 gas per use, but that can still add up in a complicated function.\r\n\r\nIt was mentioned before that ideally the compiler should handle this, but it is still valid as of now, even up to the newest compilers 0.4.25 and 0.5.0-nightly.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/429675053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/429864954",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1164#issuecomment-429864954",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1164",
    "id": 429864954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTg2NDk1NA==",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T14:03:57Z",
    "updated_at": "2018-10-15T14:03:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@DeltaBalances:\r\nHave you conducted this measurement also when the compilation flags `--optimized` and `--optimized-runs=<some large value>` are used?",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/429864954/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/429985482",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1164#issuecomment-429985482",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1164",
    "id": 429985482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTk4NTQ4Mg==",
    "user": {
      "login": "DeltaBalances",
      "id": 30391324,
      "node_id": "MDQ6VXNlcjMwMzkxMzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/30391324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DeltaBalances",
      "html_url": "https://github.com/DeltaBalances",
      "followers_url": "https://api.github.com/users/DeltaBalances/followers",
      "following_url": "https://api.github.com/users/DeltaBalances/following{/other_user}",
      "gists_url": "https://api.github.com/users/DeltaBalances/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DeltaBalances/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DeltaBalances/subscriptions",
      "organizations_url": "https://api.github.com/users/DeltaBalances/orgs",
      "repos_url": "https://api.github.com/users/DeltaBalances/repos",
      "events_url": "https://api.github.com/users/DeltaBalances/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DeltaBalances/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T19:37:04Z",
    "updated_at": "2018-10-15T19:37:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Used the test cases from #894 with the newer compilers in the Remix Javascript VM, set with optimization at the standard 200 runs.  The exact gas difference will differ per compiler version but the general improvement stays the same.\r\n\r\nI did not try on Ropsten yet as I'm not sure how well everything has recovered from the Constantinople split.\r\n\r\nBack then I only proposed this different style for SafeMath as this code is heavily used, and it would be quite an effort to check all other Zeppelin contracts to see if this pattern can apply there too.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/429985482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/430016133",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1164#issuecomment-430016133",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1164",
    "id": 430016133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDAxNjEzMw==",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T21:16:40Z",
    "updated_at": "2018-10-15T21:16:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@DeltaBalances:\r\nAFAIK, they've fixed all these cases as part of 'unified coding convention' fix (regardless of any runtime issue, such as the one that you've mentioned).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/430016133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/430242511",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1164#issuecomment-430242511",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1164",
    "id": 430242511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDI0MjUxMQ==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T13:43:39Z",
    "updated_at": "2018-10-16T13:43:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @DeltaBalances, thanks for spotting this! Do you know what it is inside the compiler that causes that style to be cheaper? I'd rather not include these sort of changes of the basis of \"I've tried them and they cost less gas\", since that may unexpectedly change in the future. If, however, we had a deeper understanding on the codegen that allowed us to develop good rules of thumb, that'd be a great addition!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/430242511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/430400205",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1164#issuecomment-430400205",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1164",
    "id": 430400205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDQwMDIwNQ==",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T21:04:08Z",
    "updated_at": "2018-10-16T21:04:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nventuro:\r\n\r\nUsing `solc 0.4.24`, I executed `solc --asm <ContractName>.sol` on each of the following 3 contracts:\r\n\r\n**Contract 1:**\r\n```\r\npragma solidity 0.4.24;\r\n\r\ncontract MyContract2 {\r\n    function mul(uint256 a, uint256 b) external pure returns(uint256) {\r\n        return a * b;\r\n    }\r\n}\r\n```\r\n**Contract 2:**\r\n```\r\npragma solidity 0.4.24;\r\n\r\ncontract MyContract1 {\r\n    function mul(uint256 a, uint256 b) external pure returns(uint256 c) {\r\n        c = a * b;\r\n    }\r\n}\r\n```\r\n**Contract 3:**\r\n```\r\npragma solidity 0.4.24;\r\n\r\ncontract MyContract3 {\r\n    function mul(uint256 a, uint256 b) external pure returns(uint256) {\r\n        uint256 c = a * b;\r\n        return c;\r\n    }\r\n}\r\n```\r\n\r\nThe assemblies of contracts 1 and 2 are identical, while the assembly of contract 3 appears to contain a few more instructions.\r\n\r\nMore precisely, this (in contracts 1 and 2):\r\n```\r\n      dup2\r\n      dup4\r\n      mul\r\n      swap1\r\n      pop\r\n```\r\nIs replaced with this (in contract 3):\r\n```\r\n      dup1\r\n      dup3\r\n      dup5\r\n      mul\r\n      swap1\r\n      pop\r\n      dup1\r\n      swap2\r\n      pop\r\n      pop\r\n```\r\n\r\nWhen adding the `--optimize` flag to the compilation command-line, all the assemblies are identical.\r\n\r\nAnd it all makes sense, if you think about it:\r\nDeclaring and assigning an additional local variable would naturally yield a few more instructions which the compiler is not likely to opt-out unless explicitly instructed to (via the `--optimize` compilation flag).\r\n\r\nSince you (as a library / utility distributor) cannot assume that every user will use `--optimize`, the best solution would be to avoid declaring and assigning a variable just for the sake of returning a value (as is the case in some of the `SafeMath` library functions).\r\n\r\nThe downside is, of course, that your code might turn out slightly \"less pretty\" (I suppose that you chose to use that `c` variable just in order to achieve the same \"pattern\" (or coding-style if you will) in each one of the `SafeMath` library functions).\r\n\r\nAlternatively, you can choose to assume that if somebody cares about 5 or 10 gas units, then they should probably compile their code with optimization enabled.\r\n\r\nIn your place, I would actually choose the latter option, since it's not your responsibility to worry about performance, most certainly in such a basic utility such as `SafeMath` (to be honest, whenever performance is an issue, `SafeMath` calls should be replaced with a one-time input checking at a higher level of the code).",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/430400205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/430653358",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/1164#issuecomment-430653358",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/1164",
    "id": 430653358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDY1MzM1OA==",
    "user": {
      "login": "nventuro",
      "id": 2530770,
      "node_id": "MDQ6VXNlcjI1MzA3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2530770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nventuro",
      "html_url": "https://github.com/nventuro",
      "followers_url": "https://api.github.com/users/nventuro/followers",
      "following_url": "https://api.github.com/users/nventuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/nventuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nventuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nventuro/subscriptions",
      "organizations_url": "https://api.github.com/users/nventuro/orgs",
      "repos_url": "https://api.github.com/users/nventuro/repos",
      "events_url": "https://api.github.com/users/nventuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nventuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T14:34:01Z",
    "updated_at": "2018-10-17T14:34:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "You really couldn't have phrased it better @barakman, I agree completely on all your points :) Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/430653358/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
