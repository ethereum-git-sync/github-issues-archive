{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4537",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4537/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4537/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4537/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4537",
  "id": 1862388927,
  "node_id": "I_kwDOA9tCBs5vAcy_",
  "number": 4537,
  "title": "declaring return variable in function's declaration to save gas",
  "user": {
    "login": "MollyHe5",
    "id": 11722837,
    "node_id": "MDQ6VXNlcjExNzIyODM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/11722837?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MollyHe5",
    "html_url": "https://github.com/MollyHe5",
    "followers_url": "https://api.github.com/users/MollyHe5/followers",
    "following_url": "https://api.github.com/users/MollyHe5/following{/other_user}",
    "gists_url": "https://api.github.com/users/MollyHe5/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MollyHe5/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MollyHe5/subscriptions",
    "organizations_url": "https://api.github.com/users/MollyHe5/orgs",
    "repos_url": "https://api.github.com/users/MollyHe5/repos",
    "events_url": "https://api.github.com/users/MollyHe5/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MollyHe5/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-08-23T00:57:08Z",
  "updated_at": "2023-08-25T18:26:55Z",
  "closed_at": "2023-08-25T18:26:54Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**üßê Motivation**\r\n<!-- Is your feature request related to a specific problem? Is it just a crazy idea? Tell us about it! -->\r\nIf returning a local variable, solidity will create a local variable and copy its value to the stack variable that represents the return variable. This consumes more gas than declaring return variable in function's declaration.\r\n\r\n**üìù Details**\r\n<!-- Please describe your feature request in detail. -->\r\nFor example, function _cancel in Governor.sol\r\n```\r\n    function _cancel(\r\n        address[] memory targets,\r\n        uint256[] memory values,\r\n        bytes[] memory calldatas,\r\n        bytes32 descriptionHash\r\n    ) internal virtual returns (uint256) {\r\n        uint256 proposalId = hashProposal(targets, values, calldatas, descriptionHash);\r\n\r\n        _validateStateBitmap(\r\n            proposalId,\r\n            _ALL_PROPOSAL_STATES_BITMAP ^\r\n                _encodeStateBitmap(ProposalState.Canceled) ^\r\n                _encodeStateBitmap(ProposalState.Expired) ^\r\n                _encodeStateBitmap(ProposalState.Executed)\r\n        );\r\n\r\n        _proposals[proposalId].canceled = true;\r\n        emit ProposalCanceled(proposalId);\r\n\r\n        return proposalId;\r\n    }\r\n```\r\ncan be changed to:\r\n```\r\n    function _cancel(\r\n        address[] memory targets,\r\n        uint256[] memory values,\r\n        bytes[] memory calldatas,\r\n        bytes32 descriptionHash\r\n    ) internal virtual returns (uint256 proposalId) {\r\n        proposalId = hashProposal(targets, values, calldatas, descriptionHash);\r\n\r\n        _validateStateBitmap(\r\n            proposalId,\r\n            _ALL_PROPOSAL_STATES_BITMAP ^\r\n                _encodeStateBitmap(ProposalState.Canceled) ^\r\n                _encodeStateBitmap(ProposalState.Expired) ^\r\n                _encodeStateBitmap(ProposalState.Executed)\r\n        );\r\n\r\n        _proposals[proposalId].canceled = true;\r\n        emit ProposalCanceled(proposalId);\r\n    }\r\n```\r\n\r\n<!-- Make sure that you have reviewed the OpenZeppelin Contracts Contributor Guidelines. -->\r\n<!-- https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/CONTRIBUTING.md -->\r\n",
  "closed_by": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4537/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4537/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1693174540",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4537#issuecomment-1693174540",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4537",
    "id": 1693174540,
    "node_id": "IC_kwDOA9tCBs5k68sM",
    "user": {
      "login": "vladyan18",
      "id": 13525908,
      "node_id": "MDQ6VXNlcjEzNTI1OTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/13525908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vladyan18",
      "html_url": "https://github.com/vladyan18",
      "followers_url": "https://api.github.com/users/vladyan18/followers",
      "following_url": "https://api.github.com/users/vladyan18/following{/other_user}",
      "gists_url": "https://api.github.com/users/vladyan18/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vladyan18/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vladyan18/subscriptions",
      "organizations_url": "https://api.github.com/users/vladyan18/orgs",
      "repos_url": "https://api.github.com/users/vladyan18/repos",
      "events_url": "https://api.github.com/users/vladyan18/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vladyan18/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T10:54:54Z",
    "updated_at": "2023-08-25T10:54:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello, there is comment on a similar case from one of the maintainers (Amxx)\r\n\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/issues/4501#issuecomment-1661000463",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1693174540/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1693770308",
    "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4537#issuecomment-1693770308",
    "issue_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/4537",
    "id": 1693770308,
    "node_id": "IC_kwDOA9tCBs5k9OJE",
    "user": {
      "login": "frangio",
      "id": 481465,
      "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frangio",
      "html_url": "https://github.com/frangio",
      "followers_url": "https://api.github.com/users/frangio/followers",
      "following_url": "https://api.github.com/users/frangio/following{/other_user}",
      "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
      "organizations_url": "https://api.github.com/users/frangio/orgs",
      "repos_url": "https://api.github.com/users/frangio/repos",
      "events_url": "https://api.github.com/users/frangio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frangio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T18:26:55Z",
    "updated_at": "2023-08-25T18:26:55Z",
    "author_association": "MEMBER",
    "body": "Gas optimization suggestions are appreciated but **please provide benchmarks**. We don't do blind optimizations and we need this information to evaluate the suggestion.\r\n\r\n---\r\n\r\nUsing explicit return statements versus named return variables I saw a difference of 5 gas in favor of named return variables but only in the legacy bytecode pipeline. There was no difference in the Yul pipeline (`via_ir`).\r\n\r\n```solidity\r\ncontract X0 {\r\n    event Y(uint256);\r\n\r\n    function foo(uint x) public returns (uint256) {\r\n        uint256 y = 42 + x;\r\n        emit Y(y);\r\n        return y;\r\n    }\r\n}\r\n\r\ncontract X1 {\r\n    event Y(uint256);\r\n\r\n    function foo(uint x) public returns (uint256 y) {\r\n        y = 42 + x;\r\n        emit Y(y);\r\n    }\r\n}\r\n```\r\n\r\nWe think explicit return statements are way clearer, and the gas difference is not worth it to consider this change.",
    "reactions": {
      "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/comments/1693770308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
