{
  "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3038",
  "repository_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts",
  "labels_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3038/labels{/name}",
  "comments_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3038/comments",
  "events_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3038/events",
  "html_url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3038",
  "id": 1083867025,
  "node_id": "I_kwDOA9tCBs5Amn-R",
  "number": 3038,
  "title": "Reusing ERC20 balance storage to embed data for cheaper access",
  "user": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2021-12-18T16:32:43Z",
  "updated_at": "2021-12-18T16:38:33Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "@k06a asked about a way to reuse the storage slot of an account's balance as a place to store additional data that could be read together with balances and thus save on storage costs.\r\n\r\nThis issue is intended for people to voice their interest in this feature, and for discussion about ways to implement it.\r\n\r\nThe two proposals for that goal were:\r\n- Internal setters:\r\n  https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3003\r\n- A highly customizable ERC20 accouting library:\r\n  https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3037\r\n\r\nThe current policy is to not offer internal setters or internal state variables to make sure that total supply, balances, and events, are all modified/emitted consistently. We stand by this decision, and we believe that most use cases that generally seem to require this can actually be implemented in a different way using inheritance, although that is notably not the case in this particular issue.\r\n\r\nThe ERC20 accounting library is, for my tastes, too generic and likely to have too much overhead (mainly looking at the large callbacks struct in memory).\r\n\r\nA big constraint for this feature request is that we do not want to build a lot of additional complexity into ERC20, and we don't want to change the current code significantly. It's possible that users who are interested in this feature may have to fork the code to make the changes they need.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3038/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/OpenZeppelin/openzeppelin-contracts/issues/3038/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
