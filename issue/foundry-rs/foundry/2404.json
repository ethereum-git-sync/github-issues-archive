{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2404",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2404/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2404/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2404/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2404",
  "id": 1310567078,
  "node_id": "I_kwDOGBlvNc5OHaqm",
  "number": 2404,
  "title": "Feature: custom rpc method `eth_simulateTransaction`",
  "user": {
    "login": "sambacha",
    "id": 32783916,
    "node_id": "MDQ6VXNlcjMyNzgzOTE2",
    "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sambacha",
    "html_url": "https://github.com/sambacha",
    "followers_url": "https://api.github.com/users/sambacha/followers",
    "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
    "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
    "organizations_url": "https://api.github.com/users/sambacha/orgs",
    "repos_url": "https://api.github.com/users/sambacha/repos",
    "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sambacha/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2022-07-20T07:23:10Z",
  "updated_at": "2022-09-17T15:38:59Z",
  "closed_at": "2022-08-11T19:01:50Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nAnvil\n\n### Describe the feature you would like\n\n> quoting the spec, https://github.com/ethereum/EIPs/pull/2560\r\n\r\n### Motivation\r\nWhen transaction signing is requested and presented to the user, wallet/DApp browser software (\"wallets\") should attempt to inform the user of what the transaction entails and what the side effects may be.\r\n\r\nCurrently, most wallets simply show basic transaction parameters such as the recipient address, the value of ETH being transferred, the gas price/limit, and the encoded data. For well-known transaction types such as ERC20 approve() and transfer(), some wallets decode the call data and present additional information.\r\n\r\nFor most smart contract transactions, however, what the transaction entails is completely opaque to average users, and a malicious transaction may even appear completely harmless (a smart contract transaction will show the value being transferred as zero as if no ETH is moved, but may nevertheless be moving other types of assets such as ERC20 tokens if an allowance was set previously).\r\n\r\nThis is terrible for the user experience as it encourages users to be accustomed to signing transactions blindly, which may have adverse consequences such as loss of funds.\r\n\r\nA new JSONRPC method `eth_simulateTransaction` aims to improve the situation by providing a way for wallets to perform a dry run and read events emitted (such as the ERC20 Transfer events), thereby enabling the user to make a more informed decision about whether to sign a transaction that is requested.\r\n\r\n---\r\n\r\n### Rationale\r\nThe request parameters are the same as eth_sendTransaction, and the response is a subset of a transaction receipt object you can obtain using `eth_getTransactionReceipt`, for consistency and familiarity.\r\n\r\n> Note that it does not require a signed transaction (raw tx), as the motivation is to provide more information to the user before signing happens.\r\n\r\n### Implementation\r\nThere is an existing method eth_estimateGas that already performs transaction dry runs, but the method only returns the amount of gas used by the transaction. The code for `eth_estimateGas` may be reusable for the implementation of `eth_simulateTransaction`.\n\n### Additional context\n\npart of https://github.com/foundry-rs/foundry/issues/2396",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2404/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2404/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189924763",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2404#issuecomment-1189924763",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2404",
    "id": 1189924763,
    "node_id": "IC_kwDOGBlvNc5G7M-b",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-20T07:25:55Z",
    "updated_at": "2022-07-20T07:25:55Z",
    "author_association": "MEMBER",
    "body": "This should already covered by the tracing RPC calls (when implemented) and so should not really be needed?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189924763/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189926132",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2404#issuecomment-1189926132",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2404",
    "id": 1189926132,
    "node_id": "IC_kwDOGBlvNc5G7NT0",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-20T07:27:30Z",
    "updated_at": "2022-07-20T07:27:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "> This should already covered by the tracing RPC calls (when implemented) and so should not really be needed?\r\n\r\nCan you be more specific as to which tracing RPC calls when implemented would cover this? ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189926132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189927131",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2404#issuecomment-1189927131",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2404",
    "id": 1189927131,
    "node_id": "IC_kwDOGBlvNc5G7Njb",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-20T07:28:43Z",
    "updated_at": "2022-07-20T07:28:43Z",
    "author_association": "MEMBER",
    "body": "This one https://github.com/foundry-rs/foundry/issues/1737\r\n\r\nI don't think adding a dedicated RPC method geared towards wallets (as outlined in this issue) makes a lot of sense for a development node",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189927131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189929549",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2404#issuecomment-1189929549",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2404",
    "id": 1189929549,
    "node_id": "IC_kwDOGBlvNc5G7OJN",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-20T07:31:32Z",
    "updated_at": "2022-07-20T07:31:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "> This one #1737\r\n> \r\n> I don't think adding a dedicated RPC method geared towards wallets (as outlined in this issue) makes a lot of sense for a development node\r\n\r\nPeople use Ganache currently as a backing mock instance to test frontend implementations for contracts. It would be helpful also to verify such behavior is reproducible when contracts are deployed and in usage with a GUI as to what is being presented to the user vs what the developer intended to display to the user ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189929549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189930619",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2404#issuecomment-1189930619",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2404",
    "id": 1189930619,
    "node_id": "IC_kwDOGBlvNc5G7OZ7",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-20T07:32:49Z",
    "updated_at": "2022-07-20T07:33:23Z",
    "author_association": "MEMBER",
    "body": "But using a custom RPC will not aid you in front-end development if you have to replace the custom RPC endpoint with something else entirely, so I'm not sure this is a high value add considering the extra maintenance burden (and as mentioned previously, similar results can be achieved with more standard RPC methods)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189930619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189942709",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2404#issuecomment-1189942709",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2404",
    "id": 1189942709,
    "node_id": "IC_kwDOGBlvNc5G7RW1",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-20T07:46:55Z",
    "updated_at": "2022-07-20T07:46:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "> But using a custom RPC will not aid you in front-end development if you have to replace the custom RPC endpoint with something else entirely, so I'm not sure this is a high value add considering the extra maintenance burden (and as mentioned previously, similar results can be achieved with more standard RPC methods)\r\n\r\nTenderly offers such RPC method, and its in use for the Sushi frontend as an example",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189942709/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189943664",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2404#issuecomment-1189943664",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2404",
    "id": 1189943664,
    "node_id": "IC_kwDOGBlvNc5G7Rlw",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-20T07:47:55Z",
    "updated_at": "2022-07-20T07:47:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I completely agree @onbjerg bout the maintenance concerns with any additional features, but hey, just laying out all these things for consideration ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189943664/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1212376081",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2404#issuecomment-1212376081",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2404",
    "id": 1212376081,
    "node_id": "IC_kwDOGBlvNc5IQ2QR",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-11T19:01:50Z",
    "updated_at": "2022-08-11T19:01:50Z",
    "author_association": "MEMBER",
    "body": "Closing this as out of scope since no production node supports this, and I think it is reasonable to assume that people write their front-ends targetting production RPC methods. We can revisit this if something similar is implemented in a production node",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1212376081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1250092381",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2404#issuecomment-1250092381",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2404",
    "id": 1250092381,
    "node_id": "IC_kwDOGBlvNc5KguVd",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-17T15:38:16Z",
    "updated_at": "2022-09-17T15:38:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Closing this as out of scope since no production node supports this, and I think it is reasonable to assume that people write their front-ends targetting production RPC methods. We can revisit this if something similar is implemented in a production node\r\n\r\nDid not notice this was closed, this is how it works: \r\n### Logic \r\nThe request parameters are the same as eth_sendTransaction, and the response is a subset of a transaction receipt object you can obtain using eth_getTransactionReceipt, for consistency and familiarity.\r\n\r\nNote that it does not require a signed transaction (raw tx), as the motivation is to provide more information to the user before signing happens.\r\n\r\n### Implementation\r\n\r\nThere is an existing method eth_estimateGas that already performs transaction dry runs, but the method only returns the amount of gas used by the transaction. The code for eth_estimateGas may be reusable for the implementation of eth_simulateTransaction.\r\n\r\nhttps://github.com/foundry-rs/foundry/issues/2191 would be an additional use case ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1250092381/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
