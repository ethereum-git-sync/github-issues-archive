{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3664",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3664/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3664/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3664/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3664",
  "id": 1444527670,
  "node_id": "I_kwDOGBlvNc5WGb42",
  "number": 3664,
  "title": "Cheatcode supporting the deployment of linked libraries in scripts",
  "user": {
    "login": "Craigson",
    "id": 4640172,
    "node_id": "MDQ6VXNlcjQ2NDAxNzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4640172?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Craigson",
    "html_url": "https://github.com/Craigson",
    "followers_url": "https://api.github.com/users/Craigson/followers",
    "following_url": "https://api.github.com/users/Craigson/following{/other_user}",
    "gists_url": "https://api.github.com/users/Craigson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Craigson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Craigson/subscriptions",
    "organizations_url": "https://api.github.com/users/Craigson/orgs",
    "repos_url": "https://api.github.com/users/Craigson/repos",
    "events_url": "https://api.github.com/users/Craigson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Craigson/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 4182991461,
      "node_id": "LA_kwDOGBlvNc75U2Jl",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-script",
      "name": "Cmd-forge-script",
      "color": "006B75",
      "default": false,
      "description": "Command: forge script"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2022-11-10T20:36:29Z",
  "updated_at": "2023-01-11T10:47:19Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nAt present it's not possible to deploy contracts and the linked libraries they make use of in the same script.  \r\n\r\nThe current steps to achieve this are as follows:\r\n\r\n1. Deploy libraries via dedicated script\r\n2. Add the linked libraries to the `foundry.toml` file using the format outlined in the [docs](https://book.getfoundry.sh/reference/config/solidity-compiler):  `<file>:<lib>:<address>`\r\n3. Deploy contracts via dedicated script\r\n\r\nA possible solution could be the introduction of a cheatcode such as `linkLib`.\r\n\r\n```solidity\r\npragma solidity 0.8.9;\r\n\r\nimport \"forge-std/Script.sol\";\r\n\r\nimport {MyLinkedLib} from \"../utils/MyLinkedLib.sol\";\r\nimport {MyContract} from \"../contracts/MyContract.sol\";\r\n\r\ncontract DeployAll is Script {\r\n    MyLinkedLib linkedLib;\r\n    MyContract myContract;\r\n\r\n    constructor() {}\r\n\r\n    function run() {\r\n         uint256 deployerKey = vm.envUint(\"DEPLOYER_PRIVATE_KEY\");\r\n        \r\n        vm.startBroadcast(deployerKey);\r\n        \r\n        linkedLib = new LinkedLib();\r\n        \r\n        vm.linkLib(\"../utils/MyLinkedLib.sol\", address(linkedLib));\r\n        myContract = new MyContract();\r\n    }\r\n}\r\n```\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3664/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3664/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1311451063",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3664#issuecomment-1311451063",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3664",
    "id": 1311451063,
    "node_id": "IC_kwDOGBlvNc5OKye3",
    "user": {
      "login": "snapple42",
      "id": 796317,
      "node_id": "MDQ6VXNlcjc5NjMxNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/796317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/snapple42",
      "html_url": "https://github.com/snapple42",
      "followers_url": "https://api.github.com/users/snapple42/followers",
      "following_url": "https://api.github.com/users/snapple42/following{/other_user}",
      "gists_url": "https://api.github.com/users/snapple42/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/snapple42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/snapple42/subscriptions",
      "organizations_url": "https://api.github.com/users/snapple42/orgs",
      "repos_url": "https://api.github.com/users/snapple42/repos",
      "events_url": "https://api.github.com/users/snapple42/events{/privacy}",
      "received_events_url": "https://api.github.com/users/snapple42/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-11T09:30:52Z",
    "updated_at": "2022-11-11T09:31:21Z",
    "author_association": "NONE",
    "body": "Should also clarify that you should be able to link to an existing library that's already on chain. It looked like that functionality is available in example. Also the ability to link multiple  libraries. This becomes especially useful when upgrading a facet of an eip2535 diamond contact.\r\n\r\nMaybe it in the vm.linkLib pass in an array of libraries and address.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1311451063/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1311551241",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3664#issuecomment-1311551241",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3664",
    "id": 1311551241,
    "node_id": "IC_kwDOGBlvNc5OLK8J",
    "user": {
      "login": "rkrasiuk",
      "id": 25429261,
      "node_id": "MDQ6VXNlcjI1NDI5MjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25429261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkrasiuk",
      "html_url": "https://github.com/rkrasiuk",
      "followers_url": "https://api.github.com/users/rkrasiuk/followers",
      "following_url": "https://api.github.com/users/rkrasiuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkrasiuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkrasiuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkrasiuk/subscriptions",
      "organizations_url": "https://api.github.com/users/rkrasiuk/orgs",
      "repos_url": "https://api.github.com/users/rkrasiuk/repos",
      "events_url": "https://api.github.com/users/rkrasiuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkrasiuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-11T11:02:03Z",
    "updated_at": "2022-11-11T11:02:03Z",
    "author_association": "COLLABORATOR",
    "body": "dynamic linking is explicitly not supported rn. imo such script is hardly reusable unless the linked lib is modified thus it should be split into two different scripts\r\n\r\n@joshieDo @mattsse what are your thoughts on supporting this?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1311551241/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1312403850",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3664#issuecomment-1312403850",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3664",
    "id": 1312403850,
    "node_id": "IC_kwDOGBlvNc5OObGK",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-12T07:59:42Z",
    "updated_at": "2022-11-12T07:59:42Z",
    "author_association": "MEMBER",
    "body": "hmm, I can see how this could be useful.\r\n\r\nbut this comes with additional complexity where we now need to link ad-hoc.\r\n\r\n@snapple42 is this example public? would like to take a look.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1312403850/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1312720851",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3664#issuecomment-1312720851",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3664",
    "id": 1312720851,
    "node_id": "IC_kwDOGBlvNc5OPofT",
    "user": {
      "login": "joshieDo",
      "id": 93316087,
      "node_id": "U_kgDOBY_j9w",
      "avatar_url": "https://avatars.githubusercontent.com/u/93316087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshieDo",
      "html_url": "https://github.com/joshieDo",
      "followers_url": "https://api.github.com/users/joshieDo/followers",
      "following_url": "https://api.github.com/users/joshieDo/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshieDo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshieDo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshieDo/subscriptions",
      "organizations_url": "https://api.github.com/users/joshieDo/orgs",
      "repos_url": "https://api.github.com/users/joshieDo/repos",
      "events_url": "https://api.github.com/users/joshieDo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshieDo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-13T12:36:24Z",
    "updated_at": "2022-11-13T12:36:24Z",
    "author_association": "COLLABORATOR",
    "body": "Unless I'm missing something, this is possible for single chain deployment (no `createFork` stuff).\r\n\r\n> At present it's not possible to deploy contracts and the linked libraries they make use of in the same script.\r\n\r\nYou can, they'll get deployed and be present in the broadcast log. You might have to move their addresses to `foundry.toml` later on if you don't want to keep re-deploying them.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1312720851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1320065420",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3664#issuecomment-1320065420",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3664",
    "id": 1320065420,
    "node_id": "IC_kwDOGBlvNc5OrpmM",
    "user": {
      "login": "Craigson",
      "id": 4640172,
      "node_id": "MDQ6VXNlcjQ2NDAxNzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4640172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Craigson",
      "html_url": "https://github.com/Craigson",
      "followers_url": "https://api.github.com/users/Craigson/followers",
      "following_url": "https://api.github.com/users/Craigson/following{/other_user}",
      "gists_url": "https://api.github.com/users/Craigson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Craigson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Craigson/subscriptions",
      "organizations_url": "https://api.github.com/users/Craigson/orgs",
      "repos_url": "https://api.github.com/users/Craigson/repos",
      "events_url": "https://api.github.com/users/Craigson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Craigson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-18T14:26:26Z",
    "updated_at": "2022-11-18T14:26:26Z",
    "author_association": "NONE",
    "body": "@joshieDo can you share an example / implementation of this? I cannot find a working implementation that shows how to achieve this.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1320065420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1320184991",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3664#issuecomment-1320184991",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3664",
    "id": 1320184991,
    "node_id": "IC_kwDOGBlvNc5OsGyf",
    "user": {
      "login": "joshieDo",
      "id": 93316087,
      "node_id": "U_kgDOBY_j9w",
      "avatar_url": "https://avatars.githubusercontent.com/u/93316087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshieDo",
      "html_url": "https://github.com/joshieDo",
      "followers_url": "https://api.github.com/users/joshieDo/followers",
      "following_url": "https://api.github.com/users/joshieDo/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshieDo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshieDo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshieDo/subscriptions",
      "organizations_url": "https://api.github.com/users/joshieDo/orgs",
      "repos_url": "https://api.github.com/users/joshieDo/repos",
      "events_url": "https://api.github.com/users/joshieDo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshieDo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-18T15:34:14Z",
    "updated_at": "2022-11-18T15:34:14Z",
    "author_association": "COLLABORATOR",
    "body": "In our test suite:\r\nhttps://github.com/foundry-rs/foundry/blob/96fa8a05ecab85649058337d1095fda2b08c3234/cli/tests/it/script.rs#L320-L330\r\nhttps://github.com/foundry-rs/foundry/blob/96fa8a05ecab85649058337d1095fda2b08c3234/testdata/cheats/Broadcast.t.sol#L36\r\n\r\nYou shouldn't have to do anything specific for it to work. It should just work. Maybe I'm misunderstading it?\r\n\r\nIn the above example the script ` contract BroadcastTest` deploys `contract Test` which depends on `library F`. If you notice the test, the first account `0` has a nonce increment of `2`, since it deploys `F` first, and then `Test`.\r\n\r\nLet me know if I understood correctly.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1320184991/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1322675347",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3664#issuecomment-1322675347",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3664",
    "id": 1322675347,
    "node_id": "IC_kwDOGBlvNc5O1myT",
    "user": {
      "login": "snapple42",
      "id": 796317,
      "node_id": "MDQ6VXNlcjc5NjMxNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/796317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/snapple42",
      "html_url": "https://github.com/snapple42",
      "followers_url": "https://api.github.com/users/snapple42/followers",
      "following_url": "https://api.github.com/users/snapple42/following{/other_user}",
      "gists_url": "https://api.github.com/users/snapple42/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/snapple42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/snapple42/subscriptions",
      "organizations_url": "https://api.github.com/users/snapple42/orgs",
      "repos_url": "https://api.github.com/users/snapple42/repos",
      "events_url": "https://api.github.com/users/snapple42/events{/privacy}",
      "received_events_url": "https://api.github.com/users/snapple42/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-21T21:32:31Z",
    "updated_at": "2022-11-21T21:32:31Z",
    "author_association": "NONE",
    "body": "> hmm, I can see how this could be useful.\r\n> \r\n> but this comes with additional complexity where we now need to link ad-hoc.\r\n> \r\n> @snapple42 is this example public? would like to take a look.\r\n\r\nNot really public yet with the Foundry updates, but you can look at our existing diamond (which currently doesn't use foundry, but this is what I'm upgrading) at:\r\n\r\nhttps://louper.dev/diamond/0x1A6f75D56aDC64d22bA4B483011ED84d2593d224?network=binance\r\n\r\nIdea would be to upgrade a facet (so deploy a new contract) and link it to existing poolUtil library at:\r\n\r\n0x930C0290CEa0499e44Db4cbC97d3313CA19a657c (BSC CHAIN)\r\n\r\nFrom truffle deployment:\r\n   Linking\r\n   -------\r\n   * Contract: sdData <--> Library: sdPoolUtil (at address: 0x930C0290CEa0499e44Db4cbC97d3313CA19a657c)\r\n\r\nThat would be good to be able to define the address to link to basically so we can reuse existing code/contracts, and we don't get out of sync with versions.\r\n\r\nIt's not that the library is huge, but would be convenient to be able to reference it instead of re-deploying it.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1322675347/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1322985306",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3664#issuecomment-1322985306",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3664",
    "id": 1322985306,
    "node_id": "IC_kwDOGBlvNc5O2yda",
    "user": {
      "login": "joshieDo",
      "id": 93316087,
      "node_id": "U_kgDOBY_j9w",
      "avatar_url": "https://avatars.githubusercontent.com/u/93316087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshieDo",
      "html_url": "https://github.com/joshieDo",
      "followers_url": "https://api.github.com/users/joshieDo/followers",
      "following_url": "https://api.github.com/users/joshieDo/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshieDo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshieDo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshieDo/subscriptions",
      "organizations_url": "https://api.github.com/users/joshieDo/orgs",
      "repos_url": "https://api.github.com/users/joshieDo/repos",
      "events_url": "https://api.github.com/users/joshieDo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshieDo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-22T03:29:30Z",
    "updated_at": "2022-11-22T03:29:30Z",
    "author_association": "COLLABORATOR",
    "body": "You should be able to reference it for single-chain deployments (no `vm.createFork` stuff) on `foundry.toml` without any re-deployment necessary.\r\n\r\nReference:\r\nhttps://book.getfoundry.sh/reference/config/solidity-compiler#libraries\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1322985306/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1330884780",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3664#issuecomment-1330884780",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3664",
    "id": 1330884780,
    "node_id": "IC_kwDOGBlvNc5PU7Cs",
    "user": {
      "login": "Craigson",
      "id": 4640172,
      "node_id": "MDQ6VXNlcjQ2NDAxNzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4640172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Craigson",
      "html_url": "https://github.com/Craigson",
      "followers_url": "https://api.github.com/users/Craigson/followers",
      "following_url": "https://api.github.com/users/Craigson/following{/other_user}",
      "gists_url": "https://api.github.com/users/Craigson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Craigson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Craigson/subscriptions",
      "organizations_url": "https://api.github.com/users/Craigson/orgs",
      "repos_url": "https://api.github.com/users/Craigson/repos",
      "events_url": "https://api.github.com/users/Craigson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Craigson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-29T16:08:02Z",
    "updated_at": "2022-11-29T16:44:19Z",
    "author_association": "NONE",
    "body": "@joshieDo , my issue I'm experiencing is that if I'm deploying for example 3 contracts that all make use of a shared linked lib (that has never been deployed before, therefore not already linked in the `foundry.toml`).  If this is the first time the lib is being deployed, 3 versions of the lib are deployed (one for each contract) when doing it via a forge script.\r\n\r\nThe equivalent in Hardhat might look like this:\r\n\r\n```js\r\n beforeEach(async () => {\r\n    signers = await ethers.getSigners();\r\n\r\n    const Lib = await ethers.getContractFactory(\"MyLibrary\");\r\n    const lib = await Lib.deploy();\r\n    await lib.deployed();\r\n\r\n    const contractFactory = await ethers.getContractFactory(\"SampleNft\", {\r\n      signer: signers[0],\r\n      libraries: {\r\n        MyLibrary: lib.address,\r\n      },\r\n    });\r\n\r\n    contract = await contractFactory.deploy();\r\n  });\r\n  ```\r\n\r\nIf deployment is handled via docker, for example, it's not practical to first deploy lib/s, then copy/paste into the `foundry.toml` before deploying the contracts.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1330884780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1356475339",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3664#issuecomment-1356475339",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3664",
    "id": 1356475339,
    "node_id": "IC_kwDOGBlvNc5Q2ivL",
    "user": {
      "login": "Craigson",
      "id": 4640172,
      "node_id": "MDQ6VXNlcjQ2NDAxNzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4640172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Craigson",
      "html_url": "https://github.com/Craigson",
      "followers_url": "https://api.github.com/users/Craigson/followers",
      "following_url": "https://api.github.com/users/Craigson/following{/other_user}",
      "gists_url": "https://api.github.com/users/Craigson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Craigson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Craigson/subscriptions",
      "organizations_url": "https://api.github.com/users/Craigson/orgs",
      "repos_url": "https://api.github.com/users/Craigson/repos",
      "events_url": "https://api.github.com/users/Craigson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Craigson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-17T21:25:13Z",
    "updated_at": "2022-12-17T21:25:13Z",
    "author_association": "NONE",
    "body": "@joshieDo @mattsse hoping to get some more feedback here, as this is an issue I'm currently facing with a large deployment.  When linked libs reference each other, foundry is deploying duplicate versions of the external libs.  In my main project, I have 8 external libraries, but a total of 12 are getting deployed, presumably of the cross-linking in the libs,  which leads to wasted funds on deployment and issues with verification.  Here's an example that reproduces the issue:\r\n\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nlibrary LibA {\r\n    function doubleIt(uint256[] storage values) external {\r\n        uint256 length = values.length;\r\n        for (uint i; i < length; ) {\r\n            values[i] *= 2;\r\n            unchecked { ++i; }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary LibB {\r\n    function tripleIt(uint256[] storage values) external {\r\n        uint256 length = values.length;\r\n        for (uint i; i < length; ) {\r\n            values[i] *= 3;\r\n            unchecked { ++i; }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary LibC {\r\n    function quadrupleIt(uint256[] storage values) external {\r\n        LibA.doubleIt(values);\r\n        LibA.doubleIt(values);\r\n    }\r\n}\r\n\r\ncontract LibRegistry {\r\n    address public a;\r\n    address public b;\r\n    address public c;\r\n\r\n    constructor () {\r\n        a = address(LibA);\r\n        b = address(LibB);\r\n        c = address(LibC);\r\n    }\r\n}\r\n\r\n```\r\n\r\nWhere `LibA` gets deployed on two separate occasions.\r\n\r\n```\r\nWaiting for receipts.\r\n⠂ [00:00:00] [#################################################################] 5/5 receipts (0.0s)\r\n##### anvil-hardhat\r\n✅ Hash: 0xd56e4e4131e2eaf0e4dd78c71b70fb2c586fca55c22301665420d99d59cc1609\r\nContract Address: 0x8464135c8f25da09e49bc8782676a84730c318bc\r\nBlock: 1\r\nPaid: 0.000444498687845124 ETH (117892 gas * 3.770388897 gwei)\r\n\r\n\r\n##### anvil-hardhat\r\n✅ Hash: 0x33210eb0677a6510e1aeb54147d1c93b3aaf58ef9aa234b74f68e4adcb0c211f\r\nContract Address: 0x71c95911e9a5d330f4d621842ec243ee1343292e\r\nBlock: 2\r\nPaid: 0.000444498687845124 ETH (117892 gas * 3.770388897 gwei)\r\n\r\n##### anvil-hardhat\r\n✅ Hash: 0xb74a5bf8b8b4487e9fdd65f5f6092b99df5b06b120acb53cd1d013c1907b10dc\r\nContract Address: 0x948b3c65b89df0b4894abe91e6d02fe579834f8f\r\nBlock: 2\r\nPaid: 0.000444498687845124 ETH (117892 gas * 3.770388897 gwei)\r\n\r\n\r\n##### anvil-hardhat\r\n✅ Hash: 0xe1bddcf803699eb478066b58fc72f85f05b9ad9f57a3bfc7851dbf4aff70717f\r\nContract Address: 0x712516e61c8b383df4a63cfe83d7701bce54b03e\r\nBlock: 2\r\nPaid: 0.000504493115974188 ETH (133804 gas * 3.770388897 gwei)\r\n\r\n\r\n##### anvil-hardhat\r\n✅ Hash: 0x643d191ad78d1dda2796e71814a1849dc164fa40e1e0c190c1a11537d6c930c1\r\nContract Address: 0xbcf26943c0197d2ee0e5d05c716be60cc2761508\r\nBlock: 2\r\nPaid: 0.000623071846784838 ETH (165254 gas * 3.770388897 gwei)\r\n```\r\n\r\nThe `run-latest.json` includes the 3 libraries, but doesn't take into account the duplicates. It's also been causing issues with verification, where I can't verify certain contracts that are referenced by other contracts.\r\n\r\n```json\r\n  \"libraries\": [\r\n    \"src/LibRegistry.sol:LibA:0x948b3c65b89df0b4894abe91e6d02fe579834f8f\",\r\n    \"src/LibRegistry.sol:LibB:0x71c95911e9a5d330f4d621842ec243ee1343292e\",\r\n    \"src/LibRegistry.sol:LibC:0x712516e61c8b383df4a63cfe83d7701bce54b03e\"\r\n  ],\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1356475339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1378560213",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3664#issuecomment-1378560213",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3664",
    "id": 1378560213,
    "node_id": "IC_kwDOGBlvNc5SKyjV",
    "user": {
      "login": "alfredolopez80",
      "id": 20690133,
      "node_id": "MDQ6VXNlcjIwNjkwMTMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/20690133?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alfredolopez80",
      "html_url": "https://github.com/alfredolopez80",
      "followers_url": "https://api.github.com/users/alfredolopez80/followers",
      "following_url": "https://api.github.com/users/alfredolopez80/following{/other_user}",
      "gists_url": "https://api.github.com/users/alfredolopez80/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alfredolopez80/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alfredolopez80/subscriptions",
      "organizations_url": "https://api.github.com/users/alfredolopez80/orgs",
      "repos_url": "https://api.github.com/users/alfredolopez80/repos",
      "events_url": "https://api.github.com/users/alfredolopez80/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alfredolopez80/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-11T10:47:18Z",
    "updated_at": "2023-01-11T10:47:18Z",
    "author_association": "NONE",
    "body": "> @joshieDo , my issue I'm experiencing is that if I'm deploying for example 3 contracts that all make use of a shared linked lib (that has never been deployed before, therefore not already linked in the `foundry.toml`). If this is the first time the lib is being deployed, 3 versions of the lib are deployed (one for each contract) when doing it via a forge script.\r\n> \r\n> The equivalent in Hardhat might look like this:\r\n> \r\n> ```js\r\n>  beforeEach(async () => {\r\n>     signers = await ethers.getSigners();\r\n> \r\n>     const Lib = await ethers.getContractFactory(\"MyLibrary\");\r\n>     const lib = await Lib.deploy();\r\n>     await lib.deployed();\r\n> \r\n>     const contractFactory = await ethers.getContractFactory(\"SampleNft\", {\r\n>       signer: signers[0],\r\n>       libraries: {\r\n>         MyLibrary: lib.address,\r\n>       },\r\n>     });\r\n> \r\n>     contract = await contractFactory.deploy();\r\n>   });\r\n> ```\r\n> \r\n> If deployment is handled via docker, for example, it's not practical to first deploy lib/s, then copy/paste into the `foundry.toml` before deploying the contracts.\r\n\r\nThis is the example, is possible replicate that in Foundry Forge?? because is a lot usefull for develop, in diamond pattern !!, because avoid redeploy in two steps and reduce a lot the time!!!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1378560213/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
