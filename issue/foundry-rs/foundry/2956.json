{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2956",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2956/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2956/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2956/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2956",
  "id": 1352203426,
  "node_id": "I_kwDOGBlvNc5QmPyi",
  "number": 2956,
  "title": "forge fork persistence rules not being respected",
  "user": {
    "login": "joshieDo",
    "id": 93316087,
    "node_id": "U_kgDOBY_j9w",
    "avatar_url": "https://avatars.githubusercontent.com/u/93316087?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/joshieDo",
    "html_url": "https://github.com/joshieDo",
    "followers_url": "https://api.github.com/users/joshieDo/followers",
    "following_url": "https://api.github.com/users/joshieDo/following{/other_user}",
    "gists_url": "https://api.github.com/users/joshieDo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/joshieDo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/joshieDo/subscriptions",
    "organizations_url": "https://api.github.com/users/joshieDo/orgs",
    "repos_url": "https://api.github.com/users/joshieDo/repos",
    "events_url": "https://api.github.com/users/joshieDo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/joshieDo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-08-26T12:30:24Z",
  "updated_at": "2022-08-26T17:18:10Z",
  "closed_at": "2022-08-26T17:18:10Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (56dc746 2022-08-26T00:04:23.353510521Z)\n\n### What command(s) is the bug in?\n\nforge script CounterScript -vvvv\n\n### Operating System\n\n_No response_\n\n### Describe the bug\n\n`revokePersistent` is not being respected if the `account` is loaded in the forkless backend. Leading to the forks having an account with state, consequently, not querying the real state of the `account`.\r\n\r\nExample:\r\n\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport \"../lib/forge-std/src/Script.sol\";\r\nimport \"../src/Counter.sol\";\r\n\r\ncontract CounterScript is Script {\r\n    uint256 fork1;\r\n    uint256 fork2;\r\n\r\n    function setUp() public {\r\n        vm.revokePersistent(msg.sender);\r\n        fork1 = vm.createFork(\r\n            \"https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\",\r\n            7475589\r\n        );\r\n        fork2 = vm.createFork(\r\n            \"https://api.avax-test.network/ext/bc/C/rpc\",\r\n            12880747\r\n        );\r\n    }\r\n\r\n    function run() public {\r\n        address user = address(0xF0959944122fb1ed4CfaBA645eA06EED30427BAA);\r\n        vm.revokePersistent(user);\r\n\r\n        vm.getNonce(user); // should return 0 for this forkless backend and user address\r\n        vm.prank(user);\r\n        new Counter();\r\n\r\n        vm.selectFork(fork2);\r\n        vm.getNonce(user); // should return 3 for this fork and user address\r\n        vm.prank(user);\r\n        new Counter();\r\n\r\n        vm.selectFork(fork1);\r\n        vm.getNonce(user); // should return 3 for this fork and user address\r\n        vm.prank(user);\r\n        new Counter();\r\n    }\r\n}\r\n```\r\n\r\nresults in:\r\n\r\n```\r\nTraces:\r\n  [470604] → new CounterScript@\"0x5b73…0519\"\r\n    └─ ← 2240 bytes of code\r\n\r\n  [28224] CounterScript::setUp() \r\n    ├─ [0] VM::revokePersistent(0x00a329c0648769a73afac7f9381e08fb43dbea72) \r\n    │   └─ ← ()\r\n    ├─ [0] VM::createFork(\"https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\", 7475589) \r\n    │   └─ ← 0\r\n    ├─ [0] VM::createFork(\"https://api.avax-test.network/ext/bc/C/rpc\", 12880747) \r\n    │   └─ ← 1\r\n    └─ ← ()\r\n\r\n  [9079256848778922195] CounterScript::run() \r\n    ├─ [0] VM::revokePersistent(0xf0959944122fb1ed4cfaba645ea06eed30427baa) \r\n    │   └─ ← ()\r\n    ├─ [0] VM::getNonce(0xf0959944122fb1ed4cfaba645ea06eed30427baa) \r\n    │   └─ ← 0x0000000000000000000000000000000000000000000000000000000000000000\r\n    ├─ [0] VM::prank(0xf0959944122fb1ed4cfaba645ea06eed30427baa) \r\n    │   └─ ← ()\r\n    ├─ [49499] → new Counter@\"0x1b6b…c167\"\r\n    │   └─ ← 247 bytes of code\r\n    ├─ [0] VM::selectFork(1) \r\n    │   └─ ← ()\r\n    ├─ [0] VM::getNonce(0xf0959944122fb1ed4cfaba645ea06eed30427baa) \r\n    │   └─ ← 0x0000000000000000000000000000000000000000000000000000000000000001\r\n    ├─ [0] VM::prank(0xf0959944122fb1ed4cfaba645ea06eed30427baa) \r\n    │   └─ ← ()\r\n    ├─ [9079256848778901131] → new <Unknown>@\"0xc7f2…e141\"\r\n    │   └─ ← 0 bytes of code\r\n    └─ ← ()\r\n\r\n\r\nGas used: 9079256848778922195\r\nError: \r\nScript failed.\r\n```\r\n\r\nPlease note of the output by `getNonce()` after the first `selectFork`. It's `1`, when it should be 3.\r\n\r\nBy removing the contract creation on the forkless backend, the getNonce is `3` as expected:\r\n\r\n```\r\nTraces:\r\n  [205911] CounterScript::run() \r\n    ├─ [0] VM::revokePersistent(0xf0959944122fb1ed4cfaba645ea06eed30427baa) \r\n    │   └─ ← ()\r\n    ├─ [0] VM::selectFork(1) \r\n    │   └─ ← ()\r\n    ├─ [0] VM::getNonce(0xf0959944122fb1ed4cfaba645ea06eed30427baa) \r\n    │   └─ ← 0x0000000000000000000000000000000000000000000000000000000000000003\r\n    ├─ [0] VM::prank(0xf0959944122fb1ed4cfaba645ea06eed30427baa) \r\n    │   └─ ← ()\r\n    ├─ [49499] → new Counter@\"0x4fd4…a1f3\"\r\n    │   └─ ← 247 bytes of code\r\n    ├─ [0] VM::selectFork(0) \r\n    │   └─ ← ()\r\n    ├─ [0] VM::getNonce(0xf0959944122fb1ed4cfaba645ea06eed30427baa) \r\n    │   └─ ← 0x0000000000000000000000000000000000000000000000000000000000000003\r\n    ├─ [0] VM::prank(0xf0959944122fb1ed4cfaba645ea06eed30427baa) \r\n    │   └─ ← ()\r\n    ├─ [49499] → new Counter@\"0x4fd4…a1f3\"\r\n    │   └─ ← 247 bytes of code\r\n    └─ ← ()\r\n\r\n\r\nScript ran successfully.\r\nGas used: 205911\r\n```\r\n",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2956/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2956/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
