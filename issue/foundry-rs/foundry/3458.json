{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3458",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3458/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3458/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3458/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3458",
  "id": 1397899934,
  "node_id": "I_kwDOGBlvNc5TUkKe",
  "number": 3458,
  "title": "Add global makePersistent flag within a fork",
  "user": {
    "login": "ColinPlatt",
    "id": 10694123,
    "node_id": "MDQ6VXNlcjEwNjk0MTIz",
    "avatar_url": "https://avatars.githubusercontent.com/u/10694123?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ColinPlatt",
    "html_url": "https://github.com/ColinPlatt",
    "followers_url": "https://api.github.com/users/ColinPlatt/followers",
    "following_url": "https://api.github.com/users/ColinPlatt/following{/other_user}",
    "gists_url": "https://api.github.com/users/ColinPlatt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ColinPlatt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ColinPlatt/subscriptions",
    "organizations_url": "https://api.github.com/users/ColinPlatt/orgs",
    "repos_url": "https://api.github.com/users/ColinPlatt/repos",
    "events_url": "https://api.github.com/users/ColinPlatt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ColinPlatt/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-10-05T14:36:22Z",
  "updated_at": "2023-03-09T23:37:13Z",
  "closed_at": "2023-03-09T23:37:12Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nWhen using vm.createFork (and createSelectFork) and multiple instances of vm.rollFork (but within a single logical fork, i.e. EVM forked at point in time and rolled forward multiple times), the user has to specify to keep the state of each individual contract changed. Ideally there would be a vm flag that allows for *all* contract address states to be brought forward through each rollFork.\r\n\r\nExample (current):\r\nvm.CreateFork(MainnetFork, 100)\r\narbContract0 = new contractArbitrary();\r\nWETH.transfer(arbContract0, 1e18);\r\nvm.makePersistent(address(arbContract0));\r\nvm.makePersistent(address(WETH));\r\n\r\nvm. rollFork(101);\r\nassertEq(WETH.balanceOf(address(arbContract0), 1e18);\r\nvm.makePersistent(address(arbContract0));\r\nvm.makePersistent(address(WETH));\r\n\r\nvm. rollFork(102);\r\nassertEq(WETH.balanceOf(address(arbContract0), 1e18);\r\nvm.makePersistent(address(arbContract0));\r\nvm.makePersistent(address(WETH));\r\n\r\nSuggested:\r\nvm.CreateFork(MainnetFork, 100)\r\n**vm.makeGlobalPersistent(MainnetFork);**\r\narbContract0 = new contractArbitrary();\r\nWETH.transfer(arbContract0, 1e18);\r\n\r\nvm. rollFork(101);\r\nassertEq(WETH.balanceOf(address(arbContract0), 1e18);\r\n\r\nvm. rollFork(102);\r\nassertEq(WETH.balanceOf(address(arbContract0), 1e18);\r\n\r\n\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3458/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3458/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1268964254",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3458#issuecomment-1268964254",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3458",
    "id": 1268964254,
    "node_id": "IC_kwDOGBlvNc5Lotue",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-05T20:53:55Z",
    "updated_at": "2022-10-05T20:53:55Z",
    "author_association": "MEMBER",
    "body": "the persistent accounts should remain after `rollFork`, no?\r\n\r\nI'm not entirely sure but this should be the case if they're marked as persistent in the setup function",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1268964254/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1268968549",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3458#issuecomment-1268968549",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3458",
    "id": 1268968549,
    "node_id": "IC_kwDOGBlvNc5Louxl",
    "user": {
      "login": "ColinPlatt",
      "id": 10694123,
      "node_id": "MDQ6VXNlcjEwNjk0MTIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/10694123?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ColinPlatt",
      "html_url": "https://github.com/ColinPlatt",
      "followers_url": "https://api.github.com/users/ColinPlatt/followers",
      "following_url": "https://api.github.com/users/ColinPlatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/ColinPlatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ColinPlatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ColinPlatt/subscriptions",
      "organizations_url": "https://api.github.com/users/ColinPlatt/orgs",
      "repos_url": "https://api.github.com/users/ColinPlatt/repos",
      "events_url": "https://api.github.com/users/ColinPlatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ColinPlatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-05T20:58:41Z",
    "updated_at": "2022-10-05T20:58:41Z",
    "author_association": "NONE",
    "body": "I ran some tests today and it definitely did have issues persisting across\nrollFork.\n\nGranted the tests I ran were more exotica than what I described. But\nsomething like a Uniswap addliquidity which created a new token didn't\npersist unless you specified, and also the token and weth needed to be\nmarked.\n\nHere's the test if you're interested:\nhttps://github.com/ColinPlatt/warpToken/blob/53314282e9aba201cc44f0926cdfbdec9c4668e9/test/warpTokenFork.t.sol\n\n\nOn Wed, 5 Oct 2022, 22:54 Matthias Seitz, ***@***.***> wrote:\n\n> the persistent accounts should remain after rollFork, no?\n>\n> I'm not entirely sure but this should be the case if they're marked as\n> persistent in the setup function\n>\n> â€”\n> Reply to this email directly, view it on GitHub\n> <https://github.com/foundry-rs/foundry/issues/3458#issuecomment-1268964254>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ACRS322P4WLH45LPMSP3OEDWBXTG5ANCNFSM6AAAAAAQ5UPCBE>\n> .\n> You are receiving this because you authored the thread.Message ID:\n> ***@***.***>\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1268968549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1268982066",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3458#issuecomment-1268982066",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3458",
    "id": 1268982066,
    "node_id": "IC_kwDOGBlvNc5LoyEy",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-05T21:12:19Z",
    "updated_at": "2022-10-05T21:12:19Z",
    "author_association": "MEMBER",
    "body": "there could still be some edge cases, as juggling all the different states is a bit horrible.\r\n\r\nI can see how this can require additional calls to makePersistent, there are overloads that accept multiple addresses though: https://github.com/foundry-rs/forge-std/blob/master/src/Vm.sol#L208-L209\r\n\r\nI guess this feature could be achieved with a helper function and an address array that (re-)registers all addresses that should be marked as persistent.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1268982066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1269632724",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3458#issuecomment-1269632724",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3458",
    "id": 1269632724,
    "node_id": "IC_kwDOGBlvNc5LrQ7U",
    "user": {
      "login": "ColinPlatt",
      "id": 10694123,
      "node_id": "MDQ6VXNlcjEwNjk0MTIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/10694123?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ColinPlatt",
      "html_url": "https://github.com/ColinPlatt",
      "followers_url": "https://api.github.com/users/ColinPlatt/followers",
      "following_url": "https://api.github.com/users/ColinPlatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/ColinPlatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ColinPlatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ColinPlatt/subscriptions",
      "organizations_url": "https://api.github.com/users/ColinPlatt/orgs",
      "repos_url": "https://api.github.com/users/ColinPlatt/repos",
      "events_url": "https://api.github.com/users/ColinPlatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ColinPlatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-06T09:03:35Z",
    "updated_at": "2022-10-06T09:03:35Z",
    "author_association": "NONE",
    "body": "Yes there are definitely ways to make it slightly cleaner, I just wonder if having an integrated \"keep everything\" flag wouldn't be a more logical experience within a single fork, as you would not expect to lose state within a single fork as you move forward in time. \r\n\r\nMy test is exotic, but losing state within Uniswap LPs over time is probably a fairly common headache.\r\n\r\nYour call though, can close this if you think it's too much of an edge case.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1269632724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1462993868",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3458#issuecomment-1462993868",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3458",
    "id": 1462993868,
    "node_id": "IC_kwDOGBlvNc5XM4PM",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-09T23:37:12Z",
    "updated_at": "2023-03-09T23:37:12Z",
    "author_association": "COLLABORATOR",
    "body": "Is this requesting a `vm.makeAllPeristent()` cheat that makes all subsequent deploys persistent on all forks, even after changing forks? If so, that feels like a footgun and I'm not sure why you'd want that, and it feels safer to have to manually specific persistent contracts. Going to close this, but happy to be convinced of the use case and reopen (or maybe I misunderstood)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1462993868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
