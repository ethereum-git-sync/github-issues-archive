{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5343",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5343/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5343/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5343/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5343",
  "id": 1795370911,
  "node_id": "I_kwDOGBlvNc5rAy-f",
  "number": 5343,
  "title": "fuzzer struggles to find values in roughly the top half of all possible inputs",
  "user": {
    "login": "thedavidmeister",
    "id": 629710,
    "node_id": "MDQ6VXNlcjYyOTcxMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/629710?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/thedavidmeister",
    "html_url": "https://github.com/thedavidmeister",
    "followers_url": "https://api.github.com/users/thedavidmeister/followers",
    "following_url": "https://api.github.com/users/thedavidmeister/following{/other_user}",
    "gists_url": "https://api.github.com/users/thedavidmeister/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/thedavidmeister/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/thedavidmeister/subscriptions",
    "organizations_url": "https://api.github.com/users/thedavidmeister/orgs",
    "repos_url": "https://api.github.com/users/thedavidmeister/repos",
    "events_url": "https://api.github.com/users/thedavidmeister/events{/privacy}",
    "received_events_url": "https://api.github.com/users/thedavidmeister/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-07-09T12:02:47Z",
  "updated_at": "2023-07-09T13:43:54Z",
  "closed_at": "2023-07-09T13:43:53Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [ ] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (8c48932 2023-07-09T00:05:12.467663000Z)\n\n### What command(s) is the bug in?\n\nforge test\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\n`vm.assume` maxes out and fails when constraining values in the top half of all possible `uint256`, if the top 3 values are excluded\r\n\r\ni.e.\r\n\r\n```solidity\r\n    function testRange(uint256 a) external {\r\n        vm.assume(a > type(uint256).max / 2);\r\n        vm.assume(a < type(uint256).max - 3);\r\n    }\r\n```\r\n\r\ngives the error\r\n\r\n```\r\n[FAIL. Reason: The `vm.assume` cheatcode rejected too many inputs (65536 allowed)] testRange(uint256) (runs: 651, Î¼: 3594, ~: 3594)\r\nTest result: FAILED. 0 passed; 1 failed; 0 skipped; finished in 556.16ms\r\nRan 1 test suites: 0 tests passed, 1 failed, 0 skipped (1 total tests)\r\n```\r\n\r\nI understand that `vm.assume` is known to have difficulty with tight ranges, but this range covers effectively half of all possible values.",
  "closed_by": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5343/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5343/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1627720377",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5343#issuecomment-1627720377",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5343",
    "id": 1627720377,
    "node_id": "IC_kwDOGBlvNc5hBQq5",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-09T13:43:53Z",
    "updated_at": "2023-07-09T13:43:53Z",
    "author_association": "COLLABORATOR",
    "body": "> but this range covers effectively half of all possible values.\r\n\r\nHalf of maxUint is 5.8e76. If fuzzer inputs were random and linearly distributed, that means half the values would be 5.8e76 or larger. This is extremely big, and not a good distribution for smart contract systems. Instead the fuzzer uses various strategies (not just randomness) so generated values are closer to evenly distributed across log-space than linear-space.\r\n\r\nThis means the range you're using here is quite small. With the natural log:\r\n- `ln(type(uint256).max) = 177.4`\r\n- `ln(type(uint256).max / 2) = 176.8`\r\n- `ln(1) = 0`\r\n\r\nWith that framing you can see the range you have is quite small. \r\n\r\n`vm.assume` is naive and there is no \"learning\" to try to figure out your criteria, so failures like this are expected. In general you should prefer forge-std's `bound` over `vm.assume`, and `a = bound(a, type(uint256).max / 2 + 1, type(uint256).max - 4)` (because the bounds are inclusive) is a better way to handle your example.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1627720377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
