{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2298",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2298/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2298/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2298/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2298",
  "id": 1303498929,
  "node_id": "I_kwDOGBlvNc5NsdCx",
  "number": 2298,
  "title": "Extract setUp transaction from forge",
  "user": {
    "login": "ehildenb",
    "id": 12721972,
    "node_id": "MDQ6VXNlcjEyNzIxOTcy",
    "avatar_url": "https://avatars.githubusercontent.com/u/12721972?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ehildenb",
    "html_url": "https://github.com/ehildenb",
    "followers_url": "https://api.github.com/users/ehildenb/followers",
    "following_url": "https://api.github.com/users/ehildenb/following{/other_user}",
    "gists_url": "https://api.github.com/users/ehildenb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ehildenb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ehildenb/subscriptions",
    "organizations_url": "https://api.github.com/users/ehildenb/orgs",
    "repos_url": "https://api.github.com/users/ehildenb/repos",
    "events_url": "https://api.github.com/users/ehildenb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ehildenb/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-07-13T14:10:21Z",
  "updated_at": "2022-07-14T06:23:05Z",
  "closed_at": "2022-07-14T06:22:50Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nMy understanding is that `forge test` is taking the `setUp` function of a given test-suite, and somehow building a transaction which is then submitted to a local private network or a remote network. Maybe my understanding is not correct :sweat:\r\n\r\nBut if it is correct, ti would be very helpful to be able to extract that transaction which is created, as a way to setup the pre-state for other testing tools. In our case, we want to run that setUp transaction to get the initial KEVM state to use for verifying the foundry property tests, so we have to run that transaction through KEVM's client instead of Foundry's.\r\n\r\nWe likely _only_ need the `data` field of the `setUp` transaction, not the whole transaction. But I suppose whichever is easy for forge to export.\r\n\r\n### Additional context\r\n\r\nhttps://github.com/runtimeverification/evm-semantics/issues/1278",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2298/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2298/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1183765779",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2298#issuecomment-1183765779",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2298",
    "id": 1183765779,
    "node_id": "IC_kwDOGBlvNc5GjtUT",
    "user": {
      "login": "ehildenb",
      "id": 12721972,
      "node_id": "MDQ6VXNlcjEyNzIxOTcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/12721972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ehildenb",
      "html_url": "https://github.com/ehildenb",
      "followers_url": "https://api.github.com/users/ehildenb/followers",
      "following_url": "https://api.github.com/users/ehildenb/following{/other_user}",
      "gists_url": "https://api.github.com/users/ehildenb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ehildenb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ehildenb/subscriptions",
      "organizations_url": "https://api.github.com/users/ehildenb/orgs",
      "repos_url": "https://api.github.com/users/ehildenb/repos",
      "events_url": "https://api.github.com/users/ehildenb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ehildenb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-13T23:05:22Z",
    "updated_at": "2022-07-13T23:05:22Z",
    "author_association": "NONE",
    "body": "It appears that `forge create` may also be helpful here?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1183765779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1184044108",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2298#issuecomment-1184044108",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2298",
    "id": 1184044108,
    "node_id": "IC_kwDOGBlvNc5GkxRM",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-14T06:22:50Z",
    "updated_at": "2022-07-14T06:23:05Z",
    "author_association": "MEMBER",
    "body": "The setup phase for tests is very simple:\r\n\r\n1. We deploy the test contract (and any libraries, if it needs any). The constructors *cannot* have any parameters.\r\n2. We send a transaction to the test contract that calls `setUp` - this can *not* have any parameters, so the data is always exactly the same: `0x0a9254e4`.\r\n\r\nThese are all submitted directly to an EVM we have full control over, so it is not submitted to a private network or anything like that. It is always sent to an in-process VM, regardless of whether or not you are forking.\r\n\r\nLet me know if that was sufficient - if not, I'd like to continue this in the Discussions tab instead since it's not really a feature or bug (I think?) :smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1184044108/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
