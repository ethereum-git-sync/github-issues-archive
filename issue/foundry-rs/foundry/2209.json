{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2209",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2209/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2209/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2209/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2209",
  "id": 1294069449,
  "node_id": "I_kwDOGBlvNc5NIe7J",
  "number": 2209,
  "title": "Limit `vm.prank` to nonstatic calls",
  "user": {
    "login": "adhusson",
    "id": 2977,
    "node_id": "MDQ6VXNlcjI5Nzc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2977?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/adhusson",
    "html_url": "https://github.com/adhusson",
    "followers_url": "https://api.github.com/users/adhusson/followers",
    "following_url": "https://api.github.com/users/adhusson/following{/other_user}",
    "gists_url": "https://api.github.com/users/adhusson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/adhusson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/adhusson/subscriptions",
    "organizations_url": "https://api.github.com/users/adhusson/orgs",
    "repos_url": "https://api.github.com/users/adhusson/repos",
    "events_url": "https://api.github.com/users/adhusson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/adhusson/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-07-05T09:56:00Z",
  "updated_at": "2022-08-03T11:03:16Z",
  "closed_at": "2022-07-05T16:55:37Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nFeature: change `vm.prank` so that only non-static calls are pranked.\r\n\r\nAlternative feature: add `vm.trick` with the above semantics.\r\n\r\n### Context\r\n\r\nOften a call is of the form `contract.fn(arg1,contract2.viewFn(),arg3)`. Evaluation order means that the following does not prank the call to `fn`:\r\n\r\n```\r\nvm.prank(superAdmin);\r\ncontract.fn(arg1,contract2.viewFn(),arg3);\r\n```\r\n\r\ninstead one must write\r\n```\r\nvm.startPrank(superAdmin);\r\ncontract.fn(arg1,contract2.viewFn(),arg3);\r\nvm.stopPrank();\r\n```\r\n\r\nor, alternatively:\r\n\r\n```\r\ntype tempVar = contract2.viewFn();\r\nvm.prank(superAdmin);\r\ncontract.fn(arg1,tempVar,arg3);\r\n```\r\n\r\nBoth take more space and mean you can't write the code as you would outside of a test context.",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2209/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2209/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1174868113",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2209#issuecomment-1174868113",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2209",
    "id": 1174868113,
    "node_id": "IC_kwDOGBlvNc5GBxCR",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-05T09:58:33Z",
    "updated_at": "2022-07-05T09:58:33Z",
    "author_association": "MEMBER",
    "body": "Unsure if this would break anything/if there is any good reason to allow pranks for staticcalls in the first place, calling @gakonst @mds1 @transmissions11 as they might have some nice insights",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1174868113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1175083984",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2209#issuecomment-1175083984",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2209",
    "id": 1175083984,
    "node_id": "IC_kwDOGBlvNc5GClvQ",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-05T13:49:31Z",
    "updated_at": "2022-07-05T13:49:31Z",
    "author_association": "COLLABORATOR",
    "body": "I personally don't love special-casing static calls for a few reasons:\r\n- The workarounds given aren't that bad or clunky.\r\n- Sometimes you may want to `prank` staticcalls. For example the Optimism contracts sometimes check `msg.sender == address(0)` for some calls to simplify calling them off-chain, and you'd need to `prank` a staticcall to test that functionality: https://github.com/ethereum-optimism/optimism/blob/3b0afde67267339280fad284b13a1cccc3b47d94/packages/contracts/contracts/chugsplash/L1ChugSplashProxy.sol#L77-L99\r\n- Adding another cheatcode feels like it adds clutter and code complexity for minimal benefit",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1175083984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1175239903",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2209#issuecomment-1175239903",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2209",
    "id": 1175239903,
    "node_id": "IC_kwDOGBlvNc5GDLzf",
    "user": {
      "login": "adhusson",
      "id": 2977,
      "node_id": "MDQ6VXNlcjI5Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2977?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adhusson",
      "html_url": "https://github.com/adhusson",
      "followers_url": "https://api.github.com/users/adhusson/followers",
      "following_url": "https://api.github.com/users/adhusson/following{/other_user}",
      "gists_url": "https://api.github.com/users/adhusson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adhusson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adhusson/subscriptions",
      "organizations_url": "https://api.github.com/users/adhusson/orgs",
      "repos_url": "https://api.github.com/users/adhusson/repos",
      "events_url": "https://api.github.com/users/adhusson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adhusson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-05T16:14:23Z",
    "updated_at": "2022-07-05T16:14:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Makes sense. Would `vm.prank(address,address,bool dontPrankStaticCalls)` add little enough clutter?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1175239903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1175287059",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2209#issuecomment-1175287059",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2209",
    "id": 1175287059,
    "node_id": "IC_kwDOGBlvNc5GDXUT",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-05T16:55:37Z",
    "updated_at": "2022-07-05T16:55:37Z",
    "author_association": "MEMBER",
    "body": "I am on the @mds1 camp here, I don't feel terrible about the workaround, and would rather not add another cheatcode. Acknowledge the concern, but prefer to keep as is.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1175287059/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1175314017",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2209#issuecomment-1175314017",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2209",
    "id": 1175314017,
    "node_id": "IC_kwDOGBlvNc5GDd5h",
    "user": {
      "login": "transmissions11",
      "id": 26209401,
      "node_id": "MDQ6VXNlcjI2MjA5NDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26209401?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/transmissions11",
      "html_url": "https://github.com/transmissions11",
      "followers_url": "https://api.github.com/users/transmissions11/followers",
      "following_url": "https://api.github.com/users/transmissions11/following{/other_user}",
      "gists_url": "https://api.github.com/users/transmissions11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/transmissions11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/transmissions11/subscriptions",
      "organizations_url": "https://api.github.com/users/transmissions11/orgs",
      "repos_url": "https://api.github.com/users/transmissions11/repos",
      "events_url": "https://api.github.com/users/transmissions11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/transmissions11/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-05T17:24:10Z",
    "updated_at": "2022-07-05T17:24:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "++",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1175314017/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1203799024",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2209#issuecomment-1203799024",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2209",
    "id": 1203799024,
    "node_id": "IC_kwDOGBlvNc5HwIPw",
    "user": {
      "login": "adhusson",
      "id": 2977,
      "node_id": "MDQ6VXNlcjI5Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2977?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adhusson",
      "html_url": "https://github.com/adhusson",
      "followers_url": "https://api.github.com/users/adhusson/followers",
      "following_url": "https://api.github.com/users/adhusson/following{/other_user}",
      "gists_url": "https://api.github.com/users/adhusson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adhusson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adhusson/subscriptions",
      "organizations_url": "https://api.github.com/users/adhusson/orgs",
      "repos_url": "https://api.github.com/users/adhusson/repos",
      "events_url": "https://api.github.com/users/adhusson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adhusson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-03T11:02:58Z",
    "updated_at": "2022-08-03T11:03:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Leaving this here to anyone that might find it useful, I did a workaround which saves the current prank and restores it (to add to testing contracts):\r\n\r\n```solidity\r\n/* *** Pranking save/restore ***\r\n\r\n  Does not support nesting.\r\n\r\n  Returns msg.sender, used to capture the current prank value.\r\n  The recipe is: save prank address, do a call, reprank.\r\n  except if prank address is current address. Then just don't reprank and the result will be the same\r\n*/\r\nstruct SavedPrank {\r\n  uint mode; // 0 is do nothing, 1 is do prank, 2 is do startPrank\r\n  address addr;\r\n}\r\n\r\nSavedPrank savedPrank;\r\n\r\nfunction echoSender() external view returns (address) {\r\n  return msg.sender;\r\n}\r\n\r\n/* save current prank address if any\r\n    inside a `startPrank`, can `suspend` pranking */\r\nfunction savePrank(bool suspend) internal {\r\n  savedPrank.mode = 0;\r\n  savedPrank.addr = this.echoSender();\r\n  if (savedPrank.addr != address(this)) { // pranking a different address\r\n    if (savedPrank.addr != this.echoSender()) { // in a onetime vm.prank\r\n      savedPrank.mode = 1;\r\n    } else if (suspend) { // in vm.startPrank, will suspend\r\n      savedPrank.mode = 2;\r\n      vm.stopPrank();\r\n    }\r\n  }\r\n}\r\n\r\n// sugar for simple save\r\nfunction savePrank() internal {\r\n  savePrank(false);\r\n}\r\n\r\n/* restore prank */\r\nfunction restorePrank() internal {\r\n  if (savedPrank.mode == 1) {\r\n    vm.prank(savedPrank.addr);\r\n  } else if (savedPrank.mode == 2) {\r\n    vm.startPrank(savedPrank.addr);\r\n  }\r\n}\r\n  ```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1203799024/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
