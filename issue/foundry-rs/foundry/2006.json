{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2006",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2006/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2006/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2006/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2006",
  "id": 1274617438,
  "node_id": "I_kwDOGBlvNc5L-R5e",
  "number": 2006,
  "title": "vm.artifact() cheatcode",
  "user": {
    "login": "odyslam",
    "id": 13405632,
    "node_id": "MDQ6VXNlcjEzNDA1NjMy",
    "avatar_url": "https://avatars.githubusercontent.com/u/13405632?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/odyslam",
    "html_url": "https://github.com/odyslam",
    "followers_url": "https://api.github.com/users/odyslam/followers",
    "following_url": "https://api.github.com/users/odyslam/following{/other_user}",
    "gists_url": "https://api.github.com/users/odyslam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/odyslam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/odyslam/subscriptions",
    "organizations_url": "https://api.github.com/users/odyslam/orgs",
    "repos_url": "https://api.github.com/users/odyslam/repos",
    "events_url": "https://api.github.com/users/odyslam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/odyslam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-06-17T06:18:27Z",
  "updated_at": "2022-06-23T05:21:59Z",
  "closed_at": "2022-06-23T00:40:42Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\n## Forge script\r\nAs an easy win before we have full json/csv read/write support, we could have a cheatcode that adds values to an artifacts output, part of the final output of a forge script run. \r\n\r\nThat, coupled with the `--json` flag, could allow an easy and reliable way to export data from a forge script, without having to parse the raw output and regex the required data. \r\n\r\nSignature (like the env cheatcode):\r\n- `vm.artifactString(string memory key, string memory value)`\r\n- `vm.artifactAddress(string memory key, address value)`\r\n- etc.\n\n### Additional context\n\nDuring deployments, there is a need to:\r\n- read a config file\r\n- do deployment/init\r\n- store artifacts (e.g addresses)\r\n\r\nWe can input data via env variables. We can't export data.",
  "closed_by": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2006/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2006/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1159472525",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2006#issuecomment-1159472525",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2006",
    "id": 1159472525,
    "node_id": "IC_kwDOGBlvNc5FHCWN",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-18T14:14:02Z",
    "updated_at": "2022-06-18T14:14:02Z",
    "author_association": "COLLABORATOR",
    "body": "> As an easy win before we have full json/csv read/write support, we could have a cheatcode that adds values to an artifacts output, part of the final output of a forge script run.\n\nHm, why not just skip directly to adding `readFile`/`writeFile` cheatcodes? It feels like as soon as that's introduced this becomes deprecated and can't be removed until a breaking change, and I'm not sure if this is actually any easier to implement.\n\nRef #1359",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1159472525/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1159521128",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2006#issuecomment-1159521128",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2006",
    "id": 1159521128,
    "node_id": "IC_kwDOGBlvNc5FHONo",
    "user": {
      "login": "odyslam",
      "id": 13405632,
      "node_id": "MDQ6VXNlcjEzNDA1NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/odyslam",
      "html_url": "https://github.com/odyslam",
      "followers_url": "https://api.github.com/users/odyslam/followers",
      "following_url": "https://api.github.com/users/odyslam/following{/other_user}",
      "gists_url": "https://api.github.com/users/odyslam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/odyslam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/odyslam/subscriptions",
      "organizations_url": "https://api.github.com/users/odyslam/orgs",
      "repos_url": "https://api.github.com/users/odyslam/repos",
      "events_url": "https://api.github.com/users/odyslam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/odyslam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-18T17:35:15Z",
    "updated_at": "2022-06-18T17:35:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mds1 I optimize for speed. Whatever devs feel it's easier to implement. IMHO this is a big need for the user story of deployments, so having sth sooner than later is a big plus. \r\n\r\nI am not opinionated in what solution is best, provided the same time horizon",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1159521128/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1159529443",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2006#issuecomment-1159529443",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2006",
    "id": 1159529443,
    "node_id": "IC_kwDOGBlvNc5FHQPj",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-18T18:13:28Z",
    "updated_at": "2022-06-18T18:13:28Z",
    "author_association": "MEMBER",
    "body": "Can you please give an end to end example of the use case? I still do not understand what the user story is here",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1159529443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1159573502",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2006#issuecomment-1159573502",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2006",
    "id": 1159573502,
    "node_id": "IC_kwDOGBlvNc5FHa_-",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-18T22:11:24Z",
    "updated_at": "2022-06-18T22:11:24Z",
    "author_association": "MEMBER",
    "body": "@gakonst I think the Ody wants us to add this cheatcode because it might be faster to implement than `readFile`/`writeFile`, so the use case is the same as #1359. Personally I think `readFile`/`writeFile` probably has lower complexity (no need to figure out what the artifact file is, no need for ethers-solc patches) and makes more sense long term",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1159573502/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1159574676",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2006#issuecomment-1159574676",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2006",
    "id": 1159574676,
    "node_id": "IC_kwDOGBlvNc5FHbSU",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-18T22:20:00Z",
    "updated_at": "2022-06-18T22:20:00Z",
    "author_association": "MEMBER",
    "body": "Yeah I'm on the same page. `read/write` cheats for `File` seems quite easy. for `Json` and `Csv` it might require some more thought on how to expose them as Solidity types, but I think also worth doing.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1159574676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1163944265",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2006#issuecomment-1163944265",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2006",
    "id": 1163944265,
    "node_id": "IC_kwDOGBlvNc5FYGFJ",
    "user": {
      "login": "odyslam",
      "id": 13405632,
      "node_id": "MDQ6VXNlcjEzNDA1NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/odyslam",
      "html_url": "https://github.com/odyslam",
      "followers_url": "https://api.github.com/users/odyslam/followers",
      "following_url": "https://api.github.com/users/odyslam/following{/other_user}",
      "gists_url": "https://api.github.com/users/odyslam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/odyslam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/odyslam/subscriptions",
      "organizations_url": "https://api.github.com/users/odyslam/orgs",
      "repos_url": "https://api.github.com/users/odyslam/repos",
      "events_url": "https://api.github.com/users/odyslam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/odyslam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-23T05:21:59Z",
    "updated_at": "2022-06-23T05:21:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "The assumption was the file read/write would take longer, but I was obviously wrong 🙃",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1163944265/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
