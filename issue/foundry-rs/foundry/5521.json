{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5521",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5521/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5521/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5521/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5521",
  "id": 1832122000,
  "node_id": "I_kwDOGBlvNc5tM_aQ",
  "number": 5521,
  "title": "bug(forge): `msg.sender` set using `startPrank` in another contract is wrong",
  "user": {
    "login": "minaminao",
    "id": 20497787,
    "node_id": "MDQ6VXNlcjIwNDk3Nzg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/20497787?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/minaminao",
    "html_url": "https://github.com/minaminao",
    "followers_url": "https://api.github.com/users/minaminao/followers",
    "following_url": "https://api.github.com/users/minaminao/following{/other_user}",
    "gists_url": "https://api.github.com/users/minaminao/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/minaminao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/minaminao/subscriptions",
    "organizations_url": "https://api.github.com/users/minaminao/orgs",
    "repos_url": "https://api.github.com/users/minaminao/repos",
    "events_url": "https://api.github.com/users/minaminao/events{/privacy}",
    "received_events_url": "https://api.github.com/users/minaminao/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-08-01T22:35:52Z",
  "updated_at": "2023-08-01T23:14:21Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [ ] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (ca67d15 2023-08-01T22:03:12.511500000Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nforge test\r\n\r\n### Operating System\r\n\r\nmacOS (Intel)\r\n\r\n### Describe the bug\r\n\r\n\r\nThe bug reported in #5515 was fixed in #5520 (thanks for the quick fix), but this is not a complete fix.\r\n\r\nUsing `startPrank` instead of the banned `prank` still has the bug.\r\n\r\nThe following test\r\n\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport {Test, Vm} from \"forge-std/Test.sol\";\r\n\r\ncontract ContractTest is Test {\r\n    function test() public {\r\n        address player = makeAddr(\"player\");\r\n        SenderLogger senderLogger = new SenderLogger();\r\n        Contract c = new Contract();\r\n\r\n        senderLogger.log(); // Log(ContractTest, DefaultSender)\r\n        vm.startPrank(player, player);\r\n        senderLogger.log(); // Log(player, player)\r\n        c.f(); // vm.startPrank(player)\r\n        senderLogger.log(); // Log(ContractTest, player) <- ContractTest should be player\r\n        vm.stopPrank();\r\n    }\r\n}\r\n\r\ncontract Contract {\r\n    Vm public constant vm = Vm(address(bytes20(uint160(uint256(keccak256(\"hevm cheat code\"))))));\r\n\r\n    function f() public {\r\n        vm.startPrank(msg.sender);\r\n    }\r\n}\r\n\r\ncontract SenderLogger {\r\n    event Log(address, address);\r\n\r\n    function log() public {\r\n        emit Log(msg.sender, tx.origin);\r\n    }\r\n}\r\n```\r\n\r\noutputs\r\n\r\n```sh\r\n$ forge test -vvvvv\r\n(snip)\r\nRunning 1 test for test/Counter.t.sol:ContractTest\r\n[PASS] test() (gas: 162948)\r\nTraces:\r\n  [162948] ContractTest::test() \r\n    ├─ [0] VM::addr(<pk>) [staticcall]\r\n    │   └─ ← player: [0x44E97aF4418b7a17AABD8090bEA0A471a366305C]\r\n    ├─ [0] VM::label(player: [0x44E97aF4418b7a17AABD8090bEA0A471a366305C], player) \r\n    │   └─ ← ()\r\n    ├─ [33087] → new SenderLogger@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f\r\n    │   └─ ← 165 bytes of code\r\n    ├─ [54305] → new Contract@0x2e234DAe75C793f67A35089C9d99245E1C58470b\r\n    │   └─ ← 271 bytes of code\r\n    ├─ [1451] SenderLogger::log() \r\n    │   ├─ emit Log(: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], : DefaultSender: [0x1804c8AB1F12E6bbf3894d4083f33e07309d1f38])\r\n    │   └─ ← ()\r\n    ├─ [0] VM::startPrank(player: [0x44E97aF4418b7a17AABD8090bEA0A471a366305C], player: [0x44E97aF4418b7a17AABD8090bEA0A471a366305C]) \r\n    │   └─ ← ()\r\n    ├─ [1451] SenderLogger::log() \r\n    │   ├─ emit Log(: player: [0x44E97aF4418b7a17AABD8090bEA0A471a366305C], : player: [0x44E97aF4418b7a17AABD8090bEA0A471a366305C])\r\n    │   └─ ← ()\r\n    ├─ [472] Contract::f() \r\n    │   ├─ [0] VM::startPrank(player: [0x44E97aF4418b7a17AABD8090bEA0A471a366305C]) \r\n    │   │   └─ ← ()\r\n    │   └─ ← ()\r\n    ├─ [1451] SenderLogger::log() \r\n    │   ├─ emit Log(: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], : player: [0x44E97aF4418b7a17AABD8090bEA0A471a366305C])\r\n    │   └─ ← ()\r\n    ├─ [0] VM::stopPrank() \r\n    │   └─ ← ()\r\n    └─ ← ()\r\n```\r\n\r\nIn `Contract::f()`, `VM::startPrank(player: [0x44E97aF4418b7a17AABD8090bEA0A471a366305C]) ` is execute, but the next `msg.sender` is `ContractTest`, not `player`.\r\n\r\nFull source: https://github.com/minaminao/foundry-bug-reports/tree/main/2023-08-broken-prank-2\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5521/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5521/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1661210497",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5521#issuecomment-1661210497",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5521",
    "id": 1661210497,
    "node_id": "IC_kwDOGBlvNc5jBA-B",
    "user": {
      "login": "Evalir",
      "id": 26014927,
      "node_id": "MDQ6VXNlcjI2MDE0OTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evalir",
      "html_url": "https://github.com/Evalir",
      "followers_url": "https://api.github.com/users/Evalir/followers",
      "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
      "organizations_url": "https://api.github.com/users/Evalir/orgs",
      "repos_url": "https://api.github.com/users/Evalir/repos",
      "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evalir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-01T22:57:00Z",
    "updated_at": "2023-08-01T23:14:21Z",
    "author_association": "MEMBER",
    "body": "Right, this is actually _not_ necessarily a bug, but rather a footgun—the msg.sender is being reset to `ContractTest` because the call depth where it was set has exited, but technically there _is_ a running prank at the test level. How should we handle this @mds1 ? We have two options here i believe:\r\n- have a \"stack\" system so we can restore pranks at earlier call depths (this is what i'd prefer)\r\n- disallow setting `vm.startPrank` at a different depth from where it was set (i can see use cases for this though)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1661210497/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1661223191",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5521#issuecomment-1661223191",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5521",
    "id": 1661223191,
    "node_id": "IC_kwDOGBlvNc5jBEEX",
    "user": {
      "login": "minaminao",
      "id": 20497787,
      "node_id": "MDQ6VXNlcjIwNDk3Nzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/20497787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minaminao",
      "html_url": "https://github.com/minaminao",
      "followers_url": "https://api.github.com/users/minaminao/followers",
      "following_url": "https://api.github.com/users/minaminao/following{/other_user}",
      "gists_url": "https://api.github.com/users/minaminao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minaminao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minaminao/subscriptions",
      "organizations_url": "https://api.github.com/users/minaminao/orgs",
      "repos_url": "https://api.github.com/users/minaminao/repos",
      "events_url": "https://api.github.com/users/minaminao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minaminao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-01T23:10:30Z",
    "updated_at": "2023-08-01T23:10:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fwiw, I found this when I used `prank` in a Huff/Vyper deployer contract (at a different depth). foundry-huff uses the same method: https://github.com/huff-language/foundry-huff/blob/bcac40d5b0950588b30cdf24dff25df080007295/src/HuffConfig.sol#L217 (this uses `prank`, not `startPrank` though)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1661223191/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
