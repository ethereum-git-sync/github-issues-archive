{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5355",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5355/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5355/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5355/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5355",
  "id": 1797938556,
  "node_id": "I_kwDOGBlvNc5rKl18",
  "number": 5355,
  "title": "Library resolution is dependent on the existence of mylib/certora/harnesses/*.sol",
  "user": {
    "login": "voltrevo",
    "id": 9291586,
    "node_id": "MDQ6VXNlcjkyOTE1ODY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9291586?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/voltrevo",
    "html_url": "https://github.com/voltrevo",
    "followers_url": "https://api.github.com/users/voltrevo/followers",
    "following_url": "https://api.github.com/users/voltrevo/following{/other_user}",
    "gists_url": "https://api.github.com/users/voltrevo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/voltrevo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/voltrevo/subscriptions",
    "organizations_url": "https://api.github.com/users/voltrevo/orgs",
    "repos_url": "https://api.github.com/users/voltrevo/repos",
    "events_url": "https://api.github.com/users/voltrevo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/voltrevo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-07-11T02:08:21Z",
  "updated_at": "2023-07-11T02:08:56Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [X] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (e488e2b 2023-07-10T15:17:42.605282000Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nforge test\r\n\r\n### Operating System\r\n\r\nmacOS (Apple Silicon)\r\n\r\n### Describe the bug\r\n\r\nI've prepared a test repository to demonstrate this bug:\r\nhttps://github.com/voltrevo/foundry-libres-bug\r\n\r\nClone the repo and run `forge test` to get this error:\r\n```\r\nError (6275): Source \"lib/account-abstraction/contracts/contracts/interfaces/IAccount.sol\" not found: File not found. Searched the following locations: \"/Users/dev/workspaces/foundry-libres-bug\"\r\n```\r\n\r\nThen, you can resolve the error by running:\r\n```\r\nmkdir -p lib/account-abstraction/certora/harnesses\r\ntouch lib/account-abstraction/certora/harnesses/iexist.sol\r\nforge test\r\n```\r\n\r\nArguably, this is more a point of confusion than an actual bug. I know that I can prefix the import with `lib/` and that will also resolve the issue. My actual problem is more complex and involves importing the foundry project into a non-foundry project, with `account-abstraction` as a shared dependency.\r\n\r\nOn the road to solving this problem, I noticed that `openzeppelin-contracts` was an existing shared dependency, and the presence of `lib/` was part of the problem, so I wanted to know why `openzeppelin-contracts` could be imported without `lib/` and `account-abstraction` could not.\r\n\r\nI eventually traced this to the existence of `openzeppelin-contracts/certora/harnesses/*.sol`. I have respect for practical workarounds, but I think the resulting confusion is worth solving. It's very common to have `openzeppelin-contracts` as your first dependency, so it's very natural to use that pattern (without `lib/`) when adding another dependency, and then be very confused about import resolution when that doesn't work. At the very least, I would really like to have a better error than 'File not found' - a suggestion to add `lib/` or make use of `remappings.txt` would go a long way here.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5355/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5355/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
