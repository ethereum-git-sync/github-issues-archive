{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5299",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5299/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5299/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5299/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5299",
  "id": 1788627510,
  "node_id": "I_kwDOGBlvNc5qnEo2",
  "number": 5299,
  "title": "Add `vm.expectRevert` overloads that take an address arg, to distinguish between error selectors that are identical but in different contracts.",
  "user": {
    "login": "simplyoptimistic",
    "id": 111120814,
    "node_id": "U_kgDOBp-Rrg",
    "avatar_url": "https://avatars.githubusercontent.com/u/111120814?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simplyoptimistic",
    "html_url": "https://github.com/simplyoptimistic",
    "followers_url": "https://api.github.com/users/simplyoptimistic/followers",
    "following_url": "https://api.github.com/users/simplyoptimistic/following{/other_user}",
    "gists_url": "https://api.github.com/users/simplyoptimistic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simplyoptimistic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simplyoptimistic/subscriptions",
    "organizations_url": "https://api.github.com/users/simplyoptimistic/orgs",
    "repos_url": "https://api.github.com/users/simplyoptimistic/repos",
    "events_url": "https://api.github.com/users/simplyoptimistic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simplyoptimistic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-07-05T01:39:24Z",
  "updated_at": "2023-07-06T01:48:12Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nAs described in this [issue](https://github.com/foundry-rs/book/issues/945) in the foundry book:\r\n\r\nIf you have two contracts with identical custom errors:\r\n\r\n```\r\ncontract A {\r\n  error NotValid();\r\n  // contract A specific code here...\r\n}\r\ncontract B {\r\n  error NotValid();\r\n  // contract A specific code here...\r\n}\r\n```\r\n\r\nthen: `A.NotValid.selector == B.NotValid.selector`.\r\n\r\nIf you have a test that checks for a revert from `A.NotValid.selector` and the error is thrown by `B` in the test, the test will still pass as the error selector comparisons will pass. \r\n\r\nBy including the address of the contract in `expectRevert`, you can specify with greater granularity which error you wish to test for. \r\n\r\nAs it stands, it is not practical to refactor common errors into a shared interface as there is no way of checking the source of a revert. \r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5299/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5299/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1622797629",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5299#issuecomment-1622797629",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5299",
    "id": 1622797629,
    "node_id": "IC_kwDOGBlvNc5gue09",
    "user": {
      "login": "xeno097",
      "id": 42520800,
      "node_id": "MDQ6VXNlcjQyNTIwODAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/42520800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xeno097",
      "html_url": "https://github.com/xeno097",
      "followers_url": "https://api.github.com/users/xeno097/followers",
      "following_url": "https://api.github.com/users/xeno097/following{/other_user}",
      "gists_url": "https://api.github.com/users/xeno097/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xeno097/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xeno097/subscriptions",
      "organizations_url": "https://api.github.com/users/xeno097/orgs",
      "repos_url": "https://api.github.com/users/xeno097/repos",
      "events_url": "https://api.github.com/users/xeno097/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xeno097/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-06T01:48:12Z",
    "updated_at": "2023-07-06T01:48:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "If no one is working on this I'd like to ðŸ˜„ ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1622797629/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
