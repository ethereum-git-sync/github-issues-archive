{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5200",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5200/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5200/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5200/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5200",
  "id": 1769852993,
  "node_id": "I_kwDOGBlvNc5pfdBB",
  "number": 5200,
  "title": "Halted execution (code does not return any value)",
  "user": {
    "login": "adaki2004",
    "id": 51912515,
    "node_id": "MDQ6VXNlcjUxOTEyNTE1",
    "avatar_url": "https://avatars.githubusercontent.com/u/51912515?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/adaki2004",
    "html_url": "https://github.com/adaki2004",
    "followers_url": "https://api.github.com/users/adaki2004/followers",
    "following_url": "https://api.github.com/users/adaki2004/following{/other_user}",
    "gists_url": "https://api.github.com/users/adaki2004/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/adaki2004/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/adaki2004/subscriptions",
    "organizations_url": "https://api.github.com/users/adaki2004/orgs",
    "repos_url": "https://api.github.com/users/adaki2004/repos",
    "events_url": "https://api.github.com/users/adaki2004/events{/privacy}",
    "received_events_url": "https://api.github.com/users/adaki2004/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-06-22T11:57:22Z",
  "updated_at": "2023-06-25T09:45:58Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I'd like to report something that we are not able to fully understand and explain within our testing environment (foundry used obv.).\r\n\r\nWe have a big repository and failing test cases which seems to be (at first glance for sure, but we also spent some hours debugging) a ghost issue - some wild memory violation thing.. (?).\r\n\r\n**How to reproduce ?**\r\n\r\nThis is the repo (+ branch we are seeing this):\r\nhttps://github.com/taikoxyz/taiko-mono/tree/integrate-new-l3-circuits\r\n\r\n1. Clone/Pull branch\r\n2. `cd packages/protocol`\r\n3. `pnpm install`\r\n4. `forge test --match-test 'testOracleProverCannotOverwriteIfSameProof' -vvv`\r\n\r\nThe 'ugly', monolith codebase should not mislead or distract you, we hunted down where the code halts and it seems it is not related to our codebase but rather a 'generic' WTF happens type. (Again, I might be completely blind on this and reserve the right to be dumb but we could not figure out the root cause.)\r\n\r\nIn this specific test there are 2 `proveBlock()` calls. 1 is at `line 187` and another at `217`.\r\nThe implementation of this can be found in `TaikoL1TestBase.t.sol`. Both should do the exact same, but the second should revert. The problem is not with revert vs. not revert, the problem is that:\r\n\r\n1. `proveBlock()` calls` getInstance()`\r\n2. `getInstance()` calls `resolver.resolve(\"signal_service\", false)` on line 243 of `TaikoL1TestBase.t.sol`\r\n\r\nAt the first proveBlock() it works perfectly fine. The second one tho does not return any value, seems like it 'halts'. When we put debug prints right before the return of that function (`AddressResolver.sol line 55`) it prints the resolved address, but does not return.\r\n\r\nCould you help us out investigating what could it be ? A memory violation issue, are we stupid ? :) Or some stack-dept issue.. ?\r\n\r\nThanks in advance !",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5200/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5200/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1602833677",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5200#issuecomment-1602833677",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5200",
    "id": 1602833677,
    "node_id": "IC_kwDOGBlvNc5fiU0N",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-22T15:22:12Z",
    "updated_at": "2023-06-22T15:22:12Z",
    "author_association": "MEMBER",
    "body": "thanks for flagging,\r\n\r\nwhat's the output you're getting?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1602833677/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1602985535",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5200#issuecomment-1602985535",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5200",
    "id": 1602985535,
    "node_id": "IC_kwDOGBlvNc5fi54_",
    "user": {
      "login": "adaki2004",
      "id": 51912515,
      "node_id": "MDQ6VXNlcjUxOTEyNTE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/51912515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adaki2004",
      "html_url": "https://github.com/adaki2004",
      "followers_url": "https://api.github.com/users/adaki2004/followers",
      "following_url": "https://api.github.com/users/adaki2004/following{/other_user}",
      "gists_url": "https://api.github.com/users/adaki2004/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adaki2004/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adaki2004/subscriptions",
      "organizations_url": "https://api.github.com/users/adaki2004/orgs",
      "repos_url": "https://api.github.com/users/adaki2004/repos",
      "events_url": "https://api.github.com/users/adaki2004/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adaki2004/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-22T16:36:11Z",
    "updated_at": "2023-06-22T16:36:11Z",
    "author_association": "NONE",
    "body": "Thanks for getting back to me!\r\n\r\nWell the output is misleading. On foundry (test) level it says:\r\n[FAIL. Reason: Call did not revert as expected] testOracleProverCannotOverwriteIfSameProof() (gas: 464129)\r\nBUt this is not the case. If you put a debug print before and after line (in file TaikoL1TestBase.t.sol):\r\n\r\n```\r\n        inputs[0] =\r\n            uint256(uint160(address(resolver.resolve(\"signal_service\", true))));\r\n```\r\n\r\nYou will see it does something weird, like a 'timeout'. It does not return any value back tho it is just a simple call to `resolver.resolve(\"signal_service\", true)`.\r\n\r\nIt is a really simple call and inside that we can even add some debug prints, but it seems it is 'timing out' - not returning a value for the second time it is called (via `proveBlock()`). Very strange behaviour, never seen such before. Dont know if time-out is possible in this context, but it seems like it.\r\n\r\n(We can have a debug session as well in case you cannot reproduce.)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1602985535/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1603975862",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5200#issuecomment-1603975862",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5200",
    "id": 1603975862,
    "node_id": "IC_kwDOGBlvNc5fmrq2",
    "user": {
      "login": "adaki2004",
      "id": 51912515,
      "node_id": "MDQ6VXNlcjUxOTEyNTE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/51912515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adaki2004",
      "html_url": "https://github.com/adaki2004",
      "followers_url": "https://api.github.com/users/adaki2004/followers",
      "following_url": "https://api.github.com/users/adaki2004/following{/other_user}",
      "gists_url": "https://api.github.com/users/adaki2004/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adaki2004/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adaki2004/subscriptions",
      "organizations_url": "https://api.github.com/users/adaki2004/orgs",
      "repos_url": "https://api.github.com/users/adaki2004/repos",
      "events_url": "https://api.github.com/users/adaki2004/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adaki2004/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-23T09:09:38Z",
    "updated_at": "2023-06-23T09:09:38Z",
    "author_association": "NONE",
    "body": "@mattsse \r\nAnother issue just faced - (posted also in Foundry Support Telegram).\r\n\r\nA simple read-only query like this:\r\n`console2.log(\"Bob balance:\", myToken.balanceOf(Bob));`\r\nmodifies the state.. Which is very weird.\r\nIs there any possibilities to have a debug sessions (screen share meeting) with someone from the team ?\r\n\r\nTo give context, it is a debug print. I was wondering why one of the transactions did revert with \"low balance\" kind of revert message while it should have enough balance.\r\n\r\nI placed such a call into the execution and it seemed it indeed had no balance. Afterward, wanted to trace back where i grant Bob with some funds, and checked the exact same thing (balanceOf()). At that point (after minting some tokens to him) in the execution, he had the balance and now the execution proceeds as normal.. If i remove that console2.log(balanceOf()) it does not work..\r\n\r\nIt is reproduceable, so it constantly does this. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1603975862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1605836698",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5200#issuecomment-1605836698",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5200",
    "id": 1605836698,
    "node_id": "IC_kwDOGBlvNc5ftx-a",
    "user": {
      "login": "Evalir",
      "id": 26014927,
      "node_id": "MDQ6VXNlcjI2MDE0OTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evalir",
      "html_url": "https://github.com/Evalir",
      "followers_url": "https://api.github.com/users/Evalir/followers",
      "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
      "organizations_url": "https://api.github.com/users/Evalir/orgs",
      "repos_url": "https://api.github.com/users/Evalir/repos",
      "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evalir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-25T02:54:32Z",
    "updated_at": "2023-06-25T02:54:32Z",
    "author_association": "MEMBER",
    "body": "Is it possible for you guys to post a small reproduction of this issue, so we can look into this?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1605836698/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1605994986",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5200#issuecomment-1605994986",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5200",
    "id": 1605994986,
    "node_id": "IC_kwDOGBlvNc5fuYnq",
    "user": {
      "login": "adaki2004",
      "id": 51912515,
      "node_id": "MDQ6VXNlcjUxOTEyNTE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/51912515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adaki2004",
      "html_url": "https://github.com/adaki2004",
      "followers_url": "https://api.github.com/users/adaki2004/followers",
      "following_url": "https://api.github.com/users/adaki2004/following{/other_user}",
      "gists_url": "https://api.github.com/users/adaki2004/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adaki2004/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adaki2004/subscriptions",
      "organizations_url": "https://api.github.com/users/adaki2004/orgs",
      "repos_url": "https://api.github.com/users/adaki2004/repos",
      "events_url": "https://api.github.com/users/adaki2004/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adaki2004/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-25T09:45:44Z",
    "updated_at": "2023-06-25T09:45:58Z",
    "author_association": "NONE",
    "body": "> Is it possible for you guys to post a small reproduction of this issue, so we can look into this?\r\n\r\nThanks for getting me back.\r\nThe first (original) issue can be reproduced as posted above in the description.\r\nThe second (latter - when `console2.log(..)`) can be reproduced as follows:\r\n\r\n1. Clone the mono-repo (git clone git@github.com:taikoxyz/taiko-mono.git)\r\n2. `cd packages/protocol`\r\n3. Switch to branch: `PoS_initial_impl`\r\n4. Install all dependencies `pnpm install`\r\n5. run the following test:\r\n`forge test --match-test 'test_more_blocks_than_ring_buffer_size' -vv`\r\n\r\nNo go to the test (`test_more_blocks_than_ring_buffer_size`) and comment out the `line 57` of `TaikoL1.t.sol` which is a query of Alice's balance. `console2.log(\"Alice balance:\", tko.balanceOf(Alice));` Also please revert commenting on` line 76` which is the exact same thing - querying Alice balance - just within the loop. \r\nThe test will fail because Alice has no balance now - tho the only thing modified is where you put that balanceOf() query, which is very very weird.\r\n\r\nThanks Evalir again for looking into this.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1605994986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
