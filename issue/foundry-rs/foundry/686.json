{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/686",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/686/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/686/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/686/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/686",
  "id": 1125325496,
  "node_id": "I_kwDOGBlvNc5DExq4",
  "number": 686,
  "title": "Forge Test run as address",
  "user": {
    "login": "Mrostgaard",
    "id": 1463327,
    "node_id": "MDQ6VXNlcjE0NjMzMjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1463327?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Mrostgaard",
    "html_url": "https://github.com/Mrostgaard",
    "followers_url": "https://api.github.com/users/Mrostgaard/followers",
    "following_url": "https://api.github.com/users/Mrostgaard/following{/other_user}",
    "gists_url": "https://api.github.com/users/Mrostgaard/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Mrostgaard/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Mrostgaard/subscriptions",
    "organizations_url": "https://api.github.com/users/Mrostgaard/orgs",
    "repos_url": "https://api.github.com/users/Mrostgaard/repos",
    "events_url": "https://api.github.com/users/Mrostgaard/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Mrostgaard/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394237,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjM3",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-question",
      "name": "T-question",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: question"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-02-06T21:41:05Z",
  "updated_at": "2022-02-07T13:06:18Z",
  "closed_at": "2022-02-07T13:06:12Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hey\r\n\r\nI've looked through the Forge documentation and the foundry book https://onbjerg.github.io/foundry-book/ and haven't been able to find a convenient way for me to control which address is making a call to my smart contract. \r\n\r\nAn example: \r\nI have a smart contract which implements a onlyOwner modifier and wants to check if the current caller have access to execute the function. \r\n\r\n```solidity\r\ncontract MyContract is OnlyOwner {\r\n\r\n    construct () {\r\n        //setup...\r\n    }\r\n\r\n    function myProctedFunction() external onlyOwner {\r\n         // Execute some code\r\n    }\r\n}\r\n```\r\n\r\nIn hardhat you would do something like:\r\n```javascript\r\ndescribe(\"A test\", function(){\r\n\r\n    ... Initial setup for the contract ....\r\n\r\n    it(\"Fails because it is not owner\", function(){\r\n        await expect(\r\n            myContract.connection(notOwner.address).myProctedFunction()\r\n        ).to.throw()\r\n    }\r\n}\r\n```\r\nHow do i do this in forge? I can see that the interface with HEVM_ADDRESS has a 'prank' interface and that is pretty close to what i want to do, but my contract is not a interface, I don't want to mock the functionality I want to test the functionality from different addresses. Is it even possible? \r\n",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/686/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/686/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1031448193",
    "html_url": "https://github.com/foundry-rs/foundry/issues/686#issuecomment-1031448193",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/686",
    "id": 1031448193,
    "node_id": "IC_kwDOGBlvNc49eqaB",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-07T13:06:10Z",
    "updated_at": "2022-02-07T13:06:10Z",
    "author_association": "MEMBER",
    "body": "Yeah `prank` is what you're looking for. See [here](https://github.com/gakonst/foundry/blob/master/evm-adapters/testdata/CheatCodes.sol#L200-L201) for how it's used in a test.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1031448193/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
