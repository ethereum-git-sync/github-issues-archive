{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2461",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2461/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2461/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2461/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2461",
  "id": 1316319385,
  "node_id": "I_kwDOGBlvNc5OdXCZ",
  "number": 2461,
  "title": "Tighter ABI integration in Cast",
  "user": {
    "login": "peter-ciccolo",
    "id": 47834747,
    "node_id": "MDQ6VXNlcjQ3ODM0NzQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/47834747?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/peter-ciccolo",
    "html_url": "https://github.com/peter-ciccolo",
    "followers_url": "https://api.github.com/users/peter-ciccolo/followers",
    "following_url": "https://api.github.com/users/peter-ciccolo/following{/other_user}",
    "gists_url": "https://api.github.com/users/peter-ciccolo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/peter-ciccolo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/peter-ciccolo/subscriptions",
    "organizations_url": "https://api.github.com/users/peter-ciccolo/orgs",
    "repos_url": "https://api.github.com/users/peter-ciccolo/repos",
    "events_url": "https://api.github.com/users/peter-ciccolo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/peter-ciccolo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752609,
      "node_id": "LA_kwDOGBlvNc7cwseh",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-cast",
      "name": "C-cast",
      "color": "5319E7",
      "default": false,
      "description": "Command: cast"
    },
    {
      "id": 3759719790,
      "node_id": "LA_kwDOGBlvNc7gGMVu",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-low",
      "name": "P-low",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: low"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-07-25T06:09:45Z",
  "updated_at": "2022-08-11T19:51:40Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nCast\r\n\r\n### Describe the feature you would like\r\n\r\nCustom errors are (hopefully) the future for Solidity, but tooling to support them is lacking across the ecosystem. I would like to be able to pass a param like `--contract` to `cast send` and, if the txn fails, have the data interpreted as a custom error under the assumption that the called contract code matched the code for the passed contract.\r\n\r\nEdit (onbjerg): Similarly, we could use the contract ABI to decode other things\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2461/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2461/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1194278113",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2461#issuecomment-1194278113",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2461",
    "id": 1194278113,
    "node_id": "IC_kwDOGBlvNc5HLzzh",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-25T15:58:47Z",
    "updated_at": "2022-08-11T19:51:40Z",
    "author_association": "MEMBER",
    "body": "Changed the title slightly; I think in general we should have better ABI support in Cast for things like this.\r\n\r\nCommands that should support it:\r\n\r\n- `cast send`\r\n- `cast run`",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1194278113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
