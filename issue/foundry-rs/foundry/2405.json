{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2405",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2405/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2405/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2405/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2405",
  "id": 1310571253,
  "node_id": "I_kwDOGBlvNc5OHbr1",
  "number": 2405,
  "title": "Feature: custom rpc method `eth_getBlocksFromArray` for Anvil",
  "user": {
    "login": "sambacha",
    "id": 32783916,
    "node_id": "MDQ6VXNlcjMyNzgzOTE2",
    "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sambacha",
    "html_url": "https://github.com/sambacha",
    "followers_url": "https://api.github.com/users/sambacha/followers",
    "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
    "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
    "organizations_url": "https://api.github.com/users/sambacha/orgs",
    "repos_url": "https://api.github.com/users/sambacha/repos",
    "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sambacha/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394235,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjM1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0052CC",
      "default": true,
      "description": "Good for newcomers"
    },
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 4077188949,
      "node_id": "LA_kwDOGBlvNc7zBPdV",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-anvil",
      "name": "C-anvil",
      "color": "5319E7",
      "default": false,
      "description": "Command: anvil"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2022-07-20T07:26:54Z",
  "updated_at": "2022-08-01T17:15:50Z",
  "closed_at": "2022-08-01T17:15:49Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nAnvil\n\n### Describe the feature you would like\n\n### `eth_getBlocksFromArray` \r\n\r\nGet blocks with logs in a batch RPC request with optional consistency.\r\nuses `eth_getBlockByNumber` and `eth_getLogs`\r\n\r\n<table>\r\n<tr>\r\n\t<td> param {Number[]}  \r\n\t<td>  `blockNumbers` Array of block numbers to index.\r\n<tr>\r\n\t<td> {Promise<Object[]>}   \r\n\t<td>  Blocks with logs.\r\n</table>\n\n### Additional context\n\npart of https://github.com/foundry-rs/foundry/issues/2396",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2405/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2405/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1190060981",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2405#issuecomment-1190060981",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2405",
    "id": 1190060981,
    "node_id": "IC_kwDOGBlvNc5G7uO1",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-20T09:43:46Z",
    "updated_at": "2022-07-20T09:43:46Z",
    "author_association": "MEMBER",
    "body": "so basically `eth_getBlockByNumber` but for a range?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1190060981/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1190061914",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2405#issuecomment-1190061914",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2405",
    "id": 1190061914,
    "node_id": "IC_kwDOGBlvNc5G7uda",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-20T09:44:46Z",
    "updated_at": "2022-07-20T09:44:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "> so basically `eth_getBlockByNumber` but for a range?\r\n\r\nyes",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1190061914/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191450261",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2405#issuecomment-1191450261",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2405",
    "id": 1191450261,
    "node_id": "IC_kwDOGBlvNc5HBBaV",
    "user": {
      "login": "zemse",
      "id": 22412996,
      "node_id": "MDQ6VXNlcjIyNDEyOTk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22412996?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zemse",
      "html_url": "https://github.com/zemse",
      "followers_url": "https://api.github.com/users/zemse/followers",
      "following_url": "https://api.github.com/users/zemse/following{/other_user}",
      "gists_url": "https://api.github.com/users/zemse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zemse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zemse/subscriptions",
      "organizations_url": "https://api.github.com/users/zemse/orgs",
      "repos_url": "https://api.github.com/users/zemse/repos",
      "events_url": "https://api.github.com/users/zemse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zemse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T12:55:21Z",
    "updated_at": "2022-07-21T12:55:21Z",
    "author_association": "NONE",
    "body": "Hey @sambacha can you pls clarify the feature? Is the result simply `Vec<Block<Transaction>>` (result of `eth_getBlockByNumber(_, true)`) or how should it include logs?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191450261/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191452483",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2405#issuecomment-1191452483",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2405",
    "id": 1191452483,
    "node_id": "IC_kwDOGBlvNc5HBB9D",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T12:57:16Z",
    "updated_at": "2022-07-21T12:57:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Hey @sambacha can you pls clarify the feature? Is the result simply `Vec<Block<Transaction>>` (result of `eth_getBlockByNumber(_, true)`) or how should it include logs?\r\n\r\n```typescript\r\nEth.prototype.getBlocksFromArray = async function getBlocksFromArray(blockNumbers) {\r\n    let batch = [];\r\n\r\n    for (let bn of blockNumbers) {\r\n        batch.push(this.client.request('eth_getBlockByNumber', ['0x' + bn.toString(16), true], undefined, false));\r\n        batch.push(this.client.request('eth_getLogs', [formatLogOptions(bn, bn)], undefined, false));\r\n    }\r\n\r\n    let blocks = [];\r\n\r\n    const responses = await this.request(batch);\r\n\r\n    for (let i = 0; i < responses.length - 1; i += 2) {\r\n        const block = responses[i].result;\r\n\r\n        blocks.push(Object.assign(block, {\r\n            number:    parseInt16(block.number),\r\n            timestamp: parseInt16(block.timestamp),\r\n            logs:      responses[i + 1].result\r\n        }));\r\n    }\r\n\r\n    return blocks;\r\n};\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191452483/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191834370",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2405#issuecomment-1191834370",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2405",
    "id": 1191834370,
    "node_id": "IC_kwDOGBlvNc5HCfMC",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T19:04:08Z",
    "updated_at": "2022-07-21T19:04:08Z",
    "author_association": "MEMBER",
    "body": "I asked in the other issue related to a new RPC method as well, but what is the primary use case of this? No tooling supports it, no other node has it (I think?) and we don't have a use case for it in Foundry",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191834370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1192741365",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2405#issuecomment-1192741365",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2405",
    "id": 1192741365,
    "node_id": "IC_kwDOGBlvNc5HF8n1",
    "user": {
      "login": "tynes",
      "id": 6626818,
      "node_id": "MDQ6VXNlcjY2MjY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6626818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tynes",
      "html_url": "https://github.com/tynes",
      "followers_url": "https://api.github.com/users/tynes/followers",
      "following_url": "https://api.github.com/users/tynes/following{/other_user}",
      "gists_url": "https://api.github.com/users/tynes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tynes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tynes/subscriptions",
      "organizations_url": "https://api.github.com/users/tynes/orgs",
      "repos_url": "https://api.github.com/users/tynes/repos",
      "events_url": "https://api.github.com/users/tynes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tynes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-22T16:24:51Z",
    "updated_at": "2022-07-22T16:24:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can't you use a rpc batch provider for this functionality?  Adding new RPC methods that are not part of the official Ethereum RPC spec creates a maintenance burden",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1192741365/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1193035010",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2405#issuecomment-1193035010",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2405",
    "id": 1193035010,
    "node_id": "IC_kwDOGBlvNc5HHEUC",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-23T01:47:00Z",
    "updated_at": "2022-07-23T02:06:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I asked in the other issue related to a new RPC method as well, but what is the primary use case of this? No tooling supports it, no other node has it (I think?) and we don't have a use case for it in Foundry\r\n\r\neth_getBatchBlockDataByNumbers new rpc function that takes one param (array of block numbers) and returns an object with both the minimal block data and logs, ({<blockNo>: {number: <blockNo>, hash: <blockHash>, parentHash: <blockParentHash>, difficulty: <blockDifficulty>, logs: <CompactLog[]>})\r\n\r\n\r\nThe use case is multi-block analysis of multi-block transactions ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1193035010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1193036092",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2405#issuecomment-1193036092",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2405",
    "id": 1193036092,
    "node_id": "IC_kwDOGBlvNc5HHEk8",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-23T01:54:38Z",
    "updated_at": "2022-07-23T01:54:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Can't you use a rpc batch provider for this functionality? Adding new RPC methods that are not part of the official Ethereum RPC spec creates a maintenance burden\r\n\r\nofc you could. However the RPC method works behind the scenes is up to the implementation. \r\n\r\n\r\nThere are tons of non-standard RPC methods that are not a part of the official RPC spec. A plugin system would solve this, so thx ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1193036092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1193037666",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2405#issuecomment-1193037666",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2405",
    "id": 1193037666,
    "node_id": "IC_kwDOGBlvNc5HHE9i",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-23T02:05:42Z",
    "updated_at": "2022-07-23T02:05:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Can't you use a rpc batch provider for this functionality? Adding new RPC methods that are not part of the official Ethereum RPC spec creates a maintenance burden\r\n\r\nhttps://github.com/foundry-rs/foundry/issues/2446",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1193037666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1193080993",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2405#issuecomment-1193080993",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2405",
    "id": 1193080993,
    "node_id": "IC_kwDOGBlvNc5HHPih",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-23T07:44:49Z",
    "updated_at": "2022-07-23T07:44:49Z",
    "author_association": "MEMBER",
    "body": "I understand what the request does, I just don't really see why the additional maintenance burden (which is not just code, it's support and docs too) is \"worth it\" for something that can be solved by existing calls (e.g. via batching). All of the custom RPC methods I've seen in other nodes have pretty much always added functionality that is not solveable with existing methods (e.g. tracing)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1193080993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1201487226",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2405#issuecomment-1201487226",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2405",
    "id": 1201487226,
    "node_id": "IC_kwDOGBlvNc5HnT16",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-01T17:15:49Z",
    "updated_at": "2022-08-01T17:15:49Z",
    "author_association": "MEMBER",
    "body": "Closed as per comments in #2425",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1201487226/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
