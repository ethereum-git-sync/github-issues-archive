{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6245",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6245/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6245/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6245/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6245",
  "id": 1981944603,
  "node_id": "I_kwDOGBlvNc52IhMb",
  "number": 6245,
  "title": "Invariant Testing: Reverts with assertion failed but nothing was asserted during depth calls inside a run",
  "user": {
    "login": "0xTimepunk",
    "id": 45543880,
    "node_id": "MDQ6VXNlcjQ1NTQzODgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/45543880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0xTimepunk",
    "html_url": "https://github.com/0xTimepunk",
    "followers_url": "https://api.github.com/users/0xTimepunk/followers",
    "following_url": "https://api.github.com/users/0xTimepunk/following{/other_user}",
    "gists_url": "https://api.github.com/users/0xTimepunk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0xTimepunk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0xTimepunk/subscriptions",
    "organizations_url": "https://api.github.com/users/0xTimepunk/orgs",
    "repos_url": "https://api.github.com/users/0xTimepunk/repos",
    "events_url": "https://api.github.com/users/0xTimepunk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0xTimepunk/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-11-07T18:11:59Z",
  "updated_at": "2023-11-08T11:19:17Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (fa6b39c 2023-11-04T00:17:54.146286000Z)\n\n### What command(s) is the bug in?\n\nforge test\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\nWhile doing invariant testing in a multi-fork protocol setup with a handler (with targetContract being the handler), after some depth in a given run the test fails with \"Assertion Failed\"\r\n\r\nHowever, nothing is asserted as per the -vvvvv logs, but it can be seen that what is going to be asserted would pass the assertion (assertEq(vaultSharesStore.superPositionsSum(), vaultSharesStore.vaultShares())\r\n\r\nThis is the last portion of the error log\r\n```\r\n    ├─ [5442] VaultSharesStore::setSuperPositions(1100178655211191658495 [1.1e21])\r\n    │   └─ ← ()\r\n    ├─ [5398] VaultSharesStore::setVaultShares(1100178655211191658495 [1.1e21])\r\n    │   └─ ← ()\r\n    └─ ← ()\r\n\r\nTest result: FAILED. 0 passed; 1 failed; 0 skipped; finished in 4.72s\r\n\r\nRan 1 test suites: 0 tests passed, 1 failed, 0 skipped (1 total tests)\r\n\r\nFailing tests:\r\nEncountered 1 failing test in test/invariant/VaultShares.invariant.t.sol:VaultSharesInvariantTest\r\n[FAIL. Reason: Assertion failed.]\r\n\t[Sequence]\r\n\t\tsender=0x00000000000000000000000000000000000059F5 addr=[test/invariant/handlers/VaultSharesHandler.sol:VaultSharesHandler]0xF62849F9A0B5Bf2913b396098F7c7019b51A820a calldata=singleXChainSingleVaultDeposit(uint256,uint256,uint256,uint256,uint256,uint64,uint64,uint256,uint256), args=[1276, 39548127599650612562675395263511828807659227779522933251885709603164229992493 [3.954e76], 4259, 12050 [1.205e4], 1950, 39, 44, 2925, 8273]\r\n\t\tsender=0x0000000000000000000000000000000000000B3B addr=[test/invariant/handlers/VaultSharesHandler.sol:VaultSharesHandler]0xF62849F9A0B5Bf2913b396098F7c7019b51A820a calldata=singleDirectSingleVaultDeposit(uint256,uint256,uint256,uint256,uint256,uint64,uint256,uint256), args=[31832160851906571763120612042207763562075912756566557833510525053824624 [3.183e70], 1198419075554122319554971631503617215527304075928 [1.198e48], 161173968795298143063021478275479671275860903514403122 [1.611e53], 115792089237316195423570985008687907853269984665640564039457584007913129639932 [1.157e77], 692185473334003511218357122244830392308939670117385315266785921795 [6.921e65], 0, 2029848068874465088568 [2.029e21], 16684452001925767596015656742902671239935658315607813 [1.668e52]]\r\n\t\tsender=0x000000000000000000000000000000008de833aa addr=[test/invariant/handlers/VaultSharesHandler.sol:VaultSharesHandler]0xF62849F9A0B5Bf2913b396098F7c7019b51A820a calldata=singleXChainSingleVaultDeposit(uint256,uint256,uint256,uint256,uint256,uint64,uint64,uint256,uint256), args=[5641276831496337050631457663379 [5.641e30], 2, 115792089237316195423570985008687907853269984665640564039457584007913129639933 [1.157e77], 0, 3, 2154224951080008 [2.154e15], 202498 [2.024e5], 115792089237316195423570985008687907853269984665640564039457584007913129639933 [1.157e77], 115792089237316195423570985008687907853269984665640564039457584007913129639933 [1.157e77]]\r\n\t\tsender=0x0000000000000000000000000000000000000001 addr=[test/invariant/handlers/VaultSharesHandler.sol:VaultSharesHandler]0xF62849F9A0B5Bf2913b396098F7c7019b51A820a calldata=singleXChainSingleVaultDeposit(uint256,uint256,uint256,uint256,uint256,uint64,uint64,uint256,uint256), args=[20409 [2.04e4], 8291, 4004, 6571, 18560 [1.856e4], 288230376151711744 [2.882e17], 55010946 [5.501e7], 10056 [1.005e4], 252]\r\n\r\n invariant_vaultShares() (runs: 1, calls: 4, reverts: 1)\r\n```\r\n\r\nAnd this is the code of the Invariant test\r\n```\r\n/// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.21;\r\n\r\nimport { VaultSharesHandler } from \"./handlers/VaultSharesHandler.sol\";\r\nimport { VaultSharesStore } from \"./stores/VaultSharesStore.sol\";\r\nimport { BaseInvariantTest } from \"./Base.invariant.t.sol\";\r\n\r\ncontract VaultSharesInvariantTest is BaseInvariantTest {\r\n    VaultSharesStore internal vaultSharesStore;\r\n    VaultSharesHandler internal vaultSharesHandler;\r\n\r\n    function setUp() public override {\r\n        super.setUp();\r\n        (\r\n            address[][] memory coreAddresses,\r\n            address[][] memory underlyingAddresses,\r\n            address[][][] memory vaultAddresses,\r\n            address[][][] memory sAddresses,\r\n            uint256[] memory forksArray\r\n        ) = _grabStateForHandler();\r\n\r\n        /// @dev set fork back to id 0 to create a store and a handler (which will be shared by all forks)\r\n        vm.selectFork(FORKS[0]);\r\n        vaultSharesStore = new VaultSharesStore();\r\n\r\n        vaultSharesHandler =\r\n        new VaultSharesHandler(chainIds, contractNames, coreAddresses, underlyingAddresses, vaultAddresses,\r\n        sAddresses, forksArray, vaultSharesStore, timestampStore);\r\n\r\n        vm.label({ account: address(vaultSharesStore), newLabel: \"VaultSharesStore\" });\r\n        vm.label({ account: address(vaultSharesHandler), newLabel: \"VaultSharesHandler\" });\r\n\r\n        /// @dev Note: disable some of the selectors to test a bunch of them only\r\n        bytes4[] memory selectors = new bytes4[](2);\r\n        selectors[0] = VaultSharesHandler.singleXChainSingleVaultDeposit.selector;\r\n        selectors[1] = VaultSharesHandler.singleDirectSingleVaultDeposit.selector;\r\n        targetSelector(FuzzSelector({ addr: address(vaultSharesHandler), selectors: selectors }));\r\n        targetContract(address(vaultSharesHandler));\r\n\r\n        // Prevent these contracts from being fuzzed as `msg.sender`.\r\n        excludeSender(address(vaultSharesStore));\r\n        excludeSender(address(vaultSharesHandler));\r\n    }\r\n\r\n    /*///////////////////////////////////////////////////////////////\r\n                    INVARIANT TESTS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    function invariant_vaultShares() public useCurrentTimestamp {\r\n        assertEq(vaultSharesStore.superPositionsSum(), vaultSharesStore.vaultShares());\r\n    }\r\n}\r\n\r\n```\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6245/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6245/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
