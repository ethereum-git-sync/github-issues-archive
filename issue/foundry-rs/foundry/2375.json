{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2375",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2375/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2375/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2375/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2375",
  "id": 1308940239,
  "node_id": "I_kwDOGBlvNc5OBNfP",
  "number": 2375,
  "title": "assertTrue fail to raise errors in fuzzing",
  "user": {
    "login": "stephenctw",
    "id": 20940639,
    "node_id": "MDQ6VXNlcjIwOTQwNjM5",
    "avatar_url": "https://avatars.githubusercontent.com/u/20940639?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stephenctw",
    "html_url": "https://github.com/stephenctw",
    "followers_url": "https://api.github.com/users/stephenctw/followers",
    "following_url": "https://api.github.com/users/stephenctw/following{/other_user}",
    "gists_url": "https://api.github.com/users/stephenctw/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stephenctw/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stephenctw/subscriptions",
    "organizations_url": "https://api.github.com/users/stephenctw/orgs",
    "repos_url": "https://api.github.com/users/stephenctw/repos",
    "events_url": "https://api.github.com/users/stephenctw/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stephenctw/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3394554570,
      "node_id": "LA_kwDOGBlvNc7KVMrK",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-fuzzing",
      "name": "A-fuzzing",
      "color": "FBCA04",
      "default": false,
      "description": "Area: fuzzing"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2022-07-19T03:54:53Z",
  "updated_at": "2022-07-19T20:43:57Z",
  "closed_at": "2022-07-19T13:09:32Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [ ] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (a81ea4c 2022-07-19T07:23:43.1341688Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nforge test\r\n\r\n### Operating System\r\n\r\nWSL2\r\n\r\n### Describe the bug\r\n\r\nFuzz test with assertTrue fails to raise error (testFuzzing). Remove the fuzz from test then assertTrue raises error properly(testNormal). The fuzz test should throw an error when the input is 2 ** 31 = 2147483648;\r\n\r\n```\r\ncontract TrailingOneTest is Test {\r\n    bytes constant trailing1table =\r\n        hex\"00010002000100030001000200010004000100020001000300010002000100050001000200010003000100020001000400010002000100030001000200010006000100020001000300010002000100040001000200010003000100020001000500010002000100030001000200010004000100020001000300010002000100070001000200010003000100020001000400010002000100030001000200010005000100020001000300010002000100040001000200010003000100020001000600010002000100030001000200010004000100020001000300010002000100050001000200010003000100020001000400010002000100030001000200010008\";\r\n\r\n    function setUp() public {}\r\n\r\n    function testNormal() public {\r\n        uint256 count = countTrailingOnes(2**31);\r\n        assertTrue(count < 32);\r\n    }\r\n\r\n    function testFuzzing(uint32 _depth) public {\r\n        vm.assume(_depth > 0);\r\n\r\n        uint256 count = countTrailingOnes(_depth);\r\n        assertTrue(count < 32);\r\n    }\r\n\r\n    function countTrailingOnes(uint32 _depth) private returns (uint256) {\r\n        uint256 depth = _depth - 1;\r\n        uint256 count = 1;\r\n\r\n        // get count of trailing ones of _depth from trailing1table\r\n        for (uint256 i = 0; i < 4; ) {\r\n            uint256 partialCount = uint8(\r\n                trailing1table[(depth >> (i * 8)) & 0xff]\r\n            );\r\n            count = count + partialCount;\r\n            if (partialCount != 8) {\r\n                break;\r\n            }\r\n\r\n            unchecked {\r\n                ++i;\r\n            }\r\n        }\r\n\r\n        return count;\r\n    }\r\n```",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2375/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2375/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1188618125",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2375#issuecomment-1188618125",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2375",
    "id": 1188618125,
    "node_id": "IC_kwDOGBlvNc5G2N-N",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-19T05:34:49Z",
    "updated_at": "2022-07-19T05:35:06Z",
    "author_association": "MEMBER",
    "body": "You are about 13 days outdated with your Forge version, but I also cannot reproduce this:\r\n\r\n```\r\n$ cat -p test/Contract.t.sol\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport \"forge-std/Test.sol\";\r\n\r\ncontract ContractTest is Test {\r\n    function setUp() public {}\r\n\r\n    function testFuzz(bool x) public {\r\n        assertTrue(x);\r\n    }\r\n}\r\n```\r\n\r\n```\r\n$ forge test\r\n[⠊] Compiling...\r\n[⠊] Compiling 9 files with 0.8.15\r\n[⠒] Solc 0.8.15 finished in 846.11ms\r\nCompiler run successful\r\n\r\nRunning 1 test for test/Contract.t.sol:ContractTest\r\n[FAIL. Counterexample: calldata=0x91b140490000000000000000000000000000000000000000000000000000000000000000, args=[false]] testFuzz(bool) (runs: 0, μ: 0, ~: 0)\r\nTest result: FAILED. 0 passed; 1 failed; finished in 294.37µs\r\n\r\nFailed tests:\r\n[FAIL. Counterexample: calldata=0x91b140490000000000000000000000000000000000000000000000000000000000000000, args=[false]] testFuzz(bool) (runs: 0, μ: 0, ~: 0)\r\n\r\nEncountered a total of 1 failing tests, 0 tests succeeded\r\n```\r\n\r\nMost likely the fuzzer does not input 2**31 which is a separate issue - please update the issue to reflect that :smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1188618125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1188716121",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2375#issuecomment-1188716121",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2375",
    "id": 1188716121,
    "node_id": "IC_kwDOGBlvNc5G2l5Z",
    "user": {
      "login": "stephenctw",
      "id": 20940639,
      "node_id": "MDQ6VXNlcjIwOTQwNjM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/20940639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenctw",
      "html_url": "https://github.com/stephenctw",
      "followers_url": "https://api.github.com/users/stephenctw/followers",
      "following_url": "https://api.github.com/users/stephenctw/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenctw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenctw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenctw/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenctw/orgs",
      "repos_url": "https://api.github.com/users/stephenctw/repos",
      "events_url": "https://api.github.com/users/stephenctw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenctw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-19T07:47:44Z",
    "updated_at": "2022-07-19T11:21:17Z",
    "author_association": "NONE",
    "body": "I updated the `forge` to latest and the issue remains the same. The code you use to reproduce is different than the one I posted. I also confirmed the value `2**31` is fed by fuzzer with a simple test.\r\n```\r\n    function test2Order31(uint32 v) public {\r\n        vm.assume(v > 0);\r\n        assertTrue(v < 2**31);\r\n    }\r\n```\r\n```\r\n[FAIL. Counterexample: calldata=0x29b2bfa50000000000000000000000000000000000000000000000000000000080000000, args=[2147483648]] test2Order31(uint32) (runs: 5, μ: 3323, ~: 3323)\r\nLogs:\r\n  Error: Assertion Failed\r\n\r\nTest result: FAILED. 0 passed; 1 failed; finished in 21.24ms\r\n\r\nFailed tests:\r\n[FAIL. Counterexample: calldata=0x29b2bfa50000000000000000000000000000000000000000000000000000000080000000, args=[2147483648]] test2Order31(uint32) (runs: 5, μ: 3323, ~: 3323)\r\n\r\nEncountered a total of 1 failing tests, 0 tests succeeded\r\n```\r\nI'll update the issue if I manage to simplify the reproducible code above.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1188716121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1188922503",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2375#issuecomment-1188922503",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2375",
    "id": 1188922503,
    "node_id": "IC_kwDOGBlvNc5G3YSH",
    "user": {
      "login": "stephenctw",
      "id": 20940639,
      "node_id": "MDQ6VXNlcjIwOTQwNjM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/20940639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenctw",
      "html_url": "https://github.com/stephenctw",
      "followers_url": "https://api.github.com/users/stephenctw/followers",
      "following_url": "https://api.github.com/users/stephenctw/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenctw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenctw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenctw/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenctw/orgs",
      "repos_url": "https://api.github.com/users/stephenctw/repos",
      "events_url": "https://api.github.com/users/stephenctw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenctw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-19T11:12:04Z",
    "updated_at": "2022-07-19T12:01:41Z",
    "author_association": "NONE",
    "body": "Here is a slightly simplified version.\r\n```\r\npragma solidity ^0.8.13;\r\n\r\nimport \"forge-std/Test.sol\";\r\n\r\ncontract FuzzBug is Test {\r\n    function setUp() public {}\r\n\r\n    function testNormalV1() public {\r\n        uint256 count = countTrailingOnesV1(2**21 - 1);\r\n\r\n        assertTrue(count <= 20);\r\n    }\r\n\r\n    function testNormalV2() public {\r\n        uint256 count = countTrailingOnesV2(2**21);\r\n\r\n        assertTrue(count <= 20);\r\n    }\r\n\r\n    function testFuzzingV1(uint32 _depth) public {\r\n        vm.assume(_depth > 0);\r\n\r\n        uint256 count = countTrailingOnesV1(_depth);\r\n        assertTrue(count <= 20);\r\n    }\r\n\r\n    function testFuzzingV2(uint32 _depth) public {\r\n        vm.assume(_depth > 0);\r\n\r\n        uint256 count = countTrailingOnesV2(_depth);\r\n        assertTrue(count <= 20);\r\n    }\r\n\r\n    function countTrailingOnesV1(uint32 _depth) private pure returns (uint256) {\r\n        uint256 depth = _depth;\r\n        uint256 count;\r\n\r\n        while (depth & 1 > 0) {\r\n            depth = depth >> 1;\r\n            count ++;\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    function countTrailingOnesV2(uint32 _depth) private pure returns (uint256) {\r\n        uint256 depth = _depth - 1;\r\n        uint256 count;\r\n\r\n        while (depth & 1 > 0) {\r\n            depth = depth >> 1;\r\n            count ++;\r\n        }\r\n\r\n        return count;\r\n    }\r\n}\r\n```\r\n`testFuzzingV2` should also fail at input `2**21` like `testNormalV2` does.\r\n```\r\nforge test --match-test \"Fuzz|Normal\"\r\n[⠑] Compiling...\r\n[⠆] Compiling 5 files with 0.8.15\r\n[⠒] Solc 0.8.15 finished in 3.51s\r\nCompiler run successful (with warnings)\r\n\r\nRunning 4 tests for test/foundry/FuzzBug.t.sol:FuzzBug\r\n[FAIL. Counterexample: calldata=0xdafb8c2c00000000000000000000000000000000000000000000000000000000001fffff, args=[2097151]] testFuzzingV1(uint32) (runs: 27, μ: 4365, ~: 4246)\r\n[PASS] testFuzzingV2(uint32) (runs: 256, μ: 3554, ~: 3466)\r\n[FAIL] testNormalV1() (gas: 13741)\r\n[FAIL] testNormalV2() (gas: 13907)\r\nTest result: FAILED. 1 passed; 3 failed; finished in 90.82ms\r\n\r\nFailed tests:\r\n[FAIL. Counterexample: calldata=0xdafb8c2c00000000000000000000000000000000000000000000000000000000001fffff, args=[2097151]] testFuzzingV1(uint32) (runs: 27, μ: 4365, ~: 4246)\r\n[FAIL] testNormalV1() (gas: 13741)\r\n[FAIL] testNormalV2() (gas: 13907)\r\n\r\nEncountered a total of 3 failing tests, 1 tests succeeded\r\n```\r\n\r\nAlso not very sure what title best describe this issue.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1188922503/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189020661",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2375#issuecomment-1189020661",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2375",
    "id": 1189020661,
    "node_id": "IC_kwDOGBlvNc5G3wP1",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-19T12:57:28Z",
    "updated_at": "2022-07-19T13:06:43Z",
    "author_association": "MEMBER",
    "body": ">I updated the forge to latest and the issue remains the same. The code you use to reproduce is different than the one I posted. I also confirmed the value 2**31 is fed by fuzzer with a simple test.\r\n\r\nThis is not necessarily always the case. I used `vm.writeLine` to log out what kind of numbers I got for `testFuzzingV2` and I did not get 2*\\*21 or 2\\**31. I didn't get any numbers at all where `count > 20`. If you substitute `_depth` in `testFuzzingV2` with `2**21` exactly, it will fail, so `assertTrue` is working as intended and the title of the bug does not seem to be true\r\n\r\nNot sure what the best title is either since it (to me) seems highly unlikely you will ever hit a failing case with random numbers. Not super strong with math, but given you need the first 21 bits to be 1 it seems extremely unlikely you would hit a number like that in 256 fuzz runs? Noting here that numbers `>= 2**21` does not necessarily result in `count > 20`\r\n\r\nEdit: Doing a `assertTrue(count <= 10)` makes the test fail in about 7500 runs. I think this is just because the chance of hitting numbers like the ones you want is extremely unlikely :/",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189020661/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189030426",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2375#issuecomment-1189030426",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2375",
    "id": 1189030426,
    "node_id": "IC_kwDOGBlvNc5G3yoa",
    "user": {
      "login": "stephenctw",
      "id": 20940639,
      "node_id": "MDQ6VXNlcjIwOTQwNjM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/20940639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenctw",
      "html_url": "https://github.com/stephenctw",
      "followers_url": "https://api.github.com/users/stephenctw/followers",
      "following_url": "https://api.github.com/users/stephenctw/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenctw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenctw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenctw/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenctw/orgs",
      "repos_url": "https://api.github.com/users/stephenctw/repos",
      "events_url": "https://api.github.com/users/stephenctw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenctw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-19T13:06:40Z",
    "updated_at": "2022-07-19T13:07:17Z",
    "author_association": "NONE",
    "body": "> This is not necessarily always the case. I used `vm.writeLine` to log out what kind of numbers I got for `testFuzzingV2` and I did not get 2**21 or 2**31. I didn't get any numbers at all where `count > 20`. If you substitute `_depth` in `testFuzzingV2` with `2**21` exactly it will fail, so `assertTrue` is working as intended and the title of the bug does not seem to be true\r\n> \r\n> Not sure what the best title is either since it (to me) seems highly unlikely you will ever hit a failing case with random numbers. Not super strong with math, but given you need the first 21 bits to be 1 it seems extremely unlikely you would hit a number like that in 256 fuzz runs? Noting here that numbers `>= 2**21` does not necessarily result in `count > 20`\r\n\r\nI see, so to put it more precisely, the fuzzer didn't generate something that hit the edge cases in my test due to low probability. Would you recommend to write tests specifically for those edge cases?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189030426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189031218",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2375#issuecomment-1189031218",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2375",
    "id": 1189031218,
    "node_id": "IC_kwDOGBlvNc5G3y0y",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-19T13:07:19Z",
    "updated_at": "2022-07-19T13:08:03Z",
    "author_association": "MEMBER",
    "body": "Yes, I think so. Not entirely sure, maybe @mds1 has some ideas for how to improve the fuzzer in this case and/or use `vm.assume`. I'd encourage you to maybe create a discussion instead since this is not a bug on our side? If we find some actionable items out of that we can create issues to track :) And then close this one?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189031218/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189031719",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2375#issuecomment-1189031719",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2375",
    "id": 1189031719,
    "node_id": "IC_kwDOGBlvNc5G3y8n",
    "user": {
      "login": "stephenctw",
      "id": 20940639,
      "node_id": "MDQ6VXNlcjIwOTQwNjM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/20940639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenctw",
      "html_url": "https://github.com/stephenctw",
      "followers_url": "https://api.github.com/users/stephenctw/followers",
      "following_url": "https://api.github.com/users/stephenctw/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenctw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenctw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenctw/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenctw/orgs",
      "repos_url": "https://api.github.com/users/stephenctw/repos",
      "events_url": "https://api.github.com/users/stephenctw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenctw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-19T13:07:48Z",
    "updated_at": "2022-07-19T13:07:48Z",
    "author_association": "NONE",
    "body": "> Yes, I think so. Not entirely sure, maybe @mds1 has some ideas for how to improve the fuzzer in this case and/or use `vm.assume`\r\n\r\nYeah I'd love to learn more about it.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189031719/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189034153",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2375#issuecomment-1189034153",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2375",
    "id": 1189034153,
    "node_id": "IC_kwDOGBlvNc5G3zip",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-19T13:09:59Z",
    "updated_at": "2022-07-19T13:09:59Z",
    "author_association": "MEMBER",
    "body": "You can create a discussion here https://github.com/foundry-rs/foundry/discussions/new\r\n\r\nFeel free to ping me and @mds1 :smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189034153/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189373278",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2375#issuecomment-1189373278",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2375",
    "id": 1189373278,
    "node_id": "IC_kwDOGBlvNc5G5GVe",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-19T17:38:51Z",
    "updated_at": "2022-07-19T17:38:51Z",
    "author_association": "COLLABORATOR",
    "body": "@stephenctw IIUC, you are expecting the fuzzer to fail by finding a value with over 20 consecutive ones as the lowest order bits? If so, like @onbjerg said that is quite specific and therefore very unlikely for the fuzzer to find it.\r\n\r\nCan you explain a bit more about your use case and what exactly you are trying to test? I'm not sure if this is a contrived example or representative of something that may be commonly tested. I ask because the best path forward on how to structure these tests and what changes we may want to make to foundry's fuzz logic might depend on the answer (the fuzzer isn't purely random, and does try to smart in various ways).\r\n\r\nI'd recommend going with @onbjerg's suggestion of creating a discussion with details around your use case and what you'd expect from the fuzzer, and we can go from there 🙂",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189373278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189524937",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2375#issuecomment-1189524937",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2375",
    "id": 1189524937,
    "node_id": "IC_kwDOGBlvNc5G5rXJ",
    "user": {
      "login": "stephenctw",
      "id": 20940639,
      "node_id": "MDQ6VXNlcjIwOTQwNjM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/20940639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenctw",
      "html_url": "https://github.com/stephenctw",
      "followers_url": "https://api.github.com/users/stephenctw/followers",
      "following_url": "https://api.github.com/users/stephenctw/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenctw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenctw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenctw/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenctw/orgs",
      "repos_url": "https://api.github.com/users/stephenctw/repos",
      "events_url": "https://api.github.com/users/stephenctw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenctw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-19T20:34:13Z",
    "updated_at": "2022-07-19T20:34:13Z",
    "author_association": "NONE",
    "body": "> @stephenctw IIUC, you are expecting the fuzzer to fail by finding a value with over 20 consecutive ones as the lowest order bits? If so, like @onbjerg said that is quite specific and therefore very unlikely for the fuzzer to find it.\r\n> \r\n> Can you explain a bit more about your use case and what exactly you are trying to test? I'm not sure if this is a contrived example or representative of something that may be commonly tested. I ask because the best path forward on how to structure these tests and what changes we may want to make to foundry's fuzz logic might depend on the answer (the fuzzer isn't purely random, and does try to smart in various ways).\r\n> \r\n> I'd recommend going with @onbjerg's suggestion of creating a discussion with details around your use case and what you'd expect from the fuzzer, and we can go from there 🙂\r\n\r\nHey @mds1, basically I want to test and check if the output of my algorithm is under a certain valid value, something like the counting ones in the above code snippet. Now I understand that it is not what fuzzer is used for, instead I should specifically feed the inputs like 20 consecutive ones and test them individually. Thanks for the clarification!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189524937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189532853",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2375#issuecomment-1189532853",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2375",
    "id": 1189532853,
    "node_id": "IC_kwDOGBlvNc5G5tS1",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-19T20:43:57Z",
    "updated_at": "2022-07-19T20:43:57Z",
    "author_association": "COLLABORATOR",
    "body": "Ah, yes you may be interested in #858 for some inspiration on how to structure those style tests. I also have https://github.com/mds1/solidity-generators which is mostly done and may help you generate the input arrays",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189532853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
