{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4634",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4634/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4634/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4634/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4634",
  "id": 1639248262,
  "node_id": "I_kwDOGBlvNc5htPGG",
  "number": 4634,
  "title": "Cheat Code for Assert Not Equal which logs the value on failure",
  "user": {
    "login": "0xGuybrush",
    "id": 457630,
    "node_id": "MDQ6VXNlcjQ1NzYzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/457630?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0xGuybrush",
    "html_url": "https://github.com/0xGuybrush",
    "followers_url": "https://api.github.com/users/0xGuybrush/followers",
    "following_url": "https://api.github.com/users/0xGuybrush/following{/other_user}",
    "gists_url": "https://api.github.com/users/0xGuybrush/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0xGuybrush/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0xGuybrush/subscriptions",
    "organizations_url": "https://api.github.com/users/0xGuybrush/orgs",
    "repos_url": "https://api.github.com/users/0xGuybrush/repos",
    "events_url": "https://api.github.com/users/0xGuybrush/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0xGuybrush/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-03-24T11:48:47Z",
  "updated_at": "2023-03-24T13:50:54Z",
  "closed_at": "2023-03-24T13:43:57Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nAt the moment to test for inequality I need to do:\r\n\r\n```\r\nassertFalse(a == b, \"A should not equal B\")\r\n```\r\n\r\nbut if this false, the assertion doesn't contain any details about the failure. Compared with `assertEq` where we get a breakdown logged:\r\n\r\n```\r\n├─ emit log_named_string(key: Error, val: A should equal B)\r\n    ├─ emit log(: Error: a == b not satisfied [uint])\r\n    ├─ emit log_named_uint(key:   Expected, val: 2)\r\n    ├─ emit log_named_uint(key:     Actual, val: 3)\r\n```\r\n\r\nIt would be great to have an assertion e.g. `assertNe` that would log out similarly:\r\n\r\n```\r\n├─ emit log_named_string(key: Error, val: A should not equal B)\r\n    ├─ emit log(: Error: a != b not satisfied [uint])\r\n    ├─ emit log_named_uint(key:   Actual, val: 2)\r\n ```\r\n \r\n Sometimes if you know the expected value in advance you can do:\r\n \r\n ```\r\n assertFalse(x == 2, \"X should not be 2\");\r\n ```\r\n \r\nBut logging the value would be useful when the test set-up creates the values dynamically, e.g. asserting that items in a sequence are incrementing correctly, e.g. that two calls to `nextValue()` don't produce duplicates.\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "0xGuybrush",
    "id": 457630,
    "node_id": "MDQ6VXNlcjQ1NzYzMA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/457630?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0xGuybrush",
    "html_url": "https://github.com/0xGuybrush",
    "followers_url": "https://api.github.com/users/0xGuybrush/followers",
    "following_url": "https://api.github.com/users/0xGuybrush/following{/other_user}",
    "gists_url": "https://api.github.com/users/0xGuybrush/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0xGuybrush/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0xGuybrush/subscriptions",
    "organizations_url": "https://api.github.com/users/0xGuybrush/orgs",
    "repos_url": "https://api.github.com/users/0xGuybrush/repos",
    "events_url": "https://api.github.com/users/0xGuybrush/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0xGuybrush/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4634/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4634/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1482791348",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4634#issuecomment-1482791348",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4634",
    "id": 1482791348,
    "node_id": "IC_kwDOGBlvNc5YYZm0",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-24T13:23:14Z",
    "updated_at": "2023-03-24T13:50:54Z",
    "author_association": "COLLABORATOR",
    "body": "There are a few options here:\r\n- Use a more descriptive error string: `assertFalse(a == b, string.concat(vm.toString(A), vm.toString(B));`\r\n- Use the greater than/less than assertions to be more specific about what you're expecting\r\n- DSTest now has [`assertNotEq`](https://github.com/dapphub/ds-test/blob/e282159d5170298eb2455a6c05280ab5a73a4ef0/src/test.sol#L200-L291), but are they are not yet in forge-std. Feel free to open a PR to forge-std that bumps the ds-test version to add these assertions",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1482791348/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1482823922",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4634#issuecomment-1482823922",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4634",
    "id": 1482823922,
    "node_id": "IC_kwDOGBlvNc5YYhjy",
    "user": {
      "login": "0xGuybrush",
      "id": 457630,
      "node_id": "MDQ6VXNlcjQ1NzYzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/457630?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xGuybrush",
      "html_url": "https://github.com/0xGuybrush",
      "followers_url": "https://api.github.com/users/0xGuybrush/followers",
      "following_url": "https://api.github.com/users/0xGuybrush/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xGuybrush/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xGuybrush/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xGuybrush/subscriptions",
      "organizations_url": "https://api.github.com/users/0xGuybrush/orgs",
      "repos_url": "https://api.github.com/users/0xGuybrush/repos",
      "events_url": "https://api.github.com/users/0xGuybrush/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xGuybrush/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-24T13:43:57Z",
    "updated_at": "2023-03-24T13:43:57Z",
    "author_association": "NONE",
    "body": "Hi @mds1, thanks for coming back so quickly. Yeah so far I've been using a version on 1) but like the fact with `assertEq` that I can use the message for context and have separate emits for the values themselves.\r\n\r\nDidn't realise the split with DSTest, nor that `assertNotEq` is already in there. I will close this (as redundant) and will raise a PR for the latest ds-test version.\r\n\r\nThanks for your help!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1482823922/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
