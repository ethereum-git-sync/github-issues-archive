{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2142",
  "id": 1286259316,
  "node_id": "I_kwDOGBlvNc5MqsJ0",
  "number": 2142,
  "title": "Cast can ABI-encode bytecode",
  "user": {
    "login": "CodeForcer",
    "id": 31618931,
    "node_id": "MDQ6VXNlcjMxNjE4OTMx",
    "avatar_url": "https://avatars.githubusercontent.com/u/31618931?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/CodeForcer",
    "html_url": "https://github.com/CodeForcer",
    "followers_url": "https://api.github.com/users/CodeForcer/followers",
    "following_url": "https://api.github.com/users/CodeForcer/following{/other_user}",
    "gists_url": "https://api.github.com/users/CodeForcer/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/CodeForcer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/CodeForcer/subscriptions",
    "organizations_url": "https://api.github.com/users/CodeForcer/orgs",
    "repos_url": "https://api.github.com/users/CodeForcer/repos",
    "events_url": "https://api.github.com/users/CodeForcer/events{/privacy}",
    "received_events_url": "https://api.github.com/users/CodeForcer/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752609,
      "node_id": "LA_kwDOGBlvNc7cwseh",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-cast",
      "name": "C-cast",
      "color": "5319E7",
      "default": false,
      "description": "Command: cast"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2022-06-27T19:39:04Z",
  "updated_at": "2022-06-29T11:30:10Z",
  "closed_at": "2022-06-29T10:52:46Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nCast\n\n### Describe the feature you would like\n\nI would like Cast to be able to provide ABI encoding of a file or stdout in line with ethers-js default AbiEncoder:\r\nhttps://gist.github.com/CodeForcer/dc6f05f7ea33c796e8aeb7c8031d1ce0\r\n\r\nCurrently, I believe there is no Foundry-native way to translate compiled output from Solc directly into a format which can be read into Solidity bytecode with the FFI cheatcode.\r\n\r\nThe following command is very close to equivalent, but gives the wrong output with a few bytes changed:\r\n`cast abi-encode \"f(bytes)\" $(solc --yul yul/Example.yul --bin | tail -1)`\r\n\r\nThis feature would really improve the developer experience for people working with Yul\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "CodeForcer",
    "id": 31618931,
    "node_id": "MDQ6VXNlcjMxNjE4OTMx",
    "avatar_url": "https://avatars.githubusercontent.com/u/31618931?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/CodeForcer",
    "html_url": "https://github.com/CodeForcer",
    "followers_url": "https://api.github.com/users/CodeForcer/followers",
    "following_url": "https://api.github.com/users/CodeForcer/following{/other_user}",
    "gists_url": "https://api.github.com/users/CodeForcer/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/CodeForcer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/CodeForcer/subscriptions",
    "organizations_url": "https://api.github.com/users/CodeForcer/orgs",
    "repos_url": "https://api.github.com/users/CodeForcer/repos",
    "events_url": "https://api.github.com/users/CodeForcer/events{/privacy}",
    "received_events_url": "https://api.github.com/users/CodeForcer/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1168298039",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2142#issuecomment-1168298039",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142",
    "id": 1168298039,
    "node_id": "IC_kwDOGBlvNc5FotA3",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-28T06:44:13Z",
    "updated_at": "2022-06-28T06:44:13Z",
    "author_association": "MEMBER",
    "body": "I'm not entirely sure what you mean - the bytecode should not be ABI encoded if you just want to deploy it, it should just be directly useable with `CREATE` and `CREATE2`? The ABI spec is only for describing how data types are encoded in calldata, it does not have anything to do with contract bytecode itself.\r\n\r\nCan you provide some more context around what you are trying to achieve and why it doesn't work?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1168298039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1168327982",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2142#issuecomment-1168327982",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142",
    "id": 1168327982,
    "node_id": "IC_kwDOGBlvNc5Fo0Uu",
    "user": {
      "login": "CodeForcer",
      "id": 31618931,
      "node_id": "MDQ6VXNlcjMxNjE4OTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/31618931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeForcer",
      "html_url": "https://github.com/CodeForcer",
      "followers_url": "https://api.github.com/users/CodeForcer/followers",
      "following_url": "https://api.github.com/users/CodeForcer/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeForcer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeForcer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeForcer/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeForcer/orgs",
      "repos_url": "https://api.github.com/users/CodeForcer/repos",
      "events_url": "https://api.github.com/users/CodeForcer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeForcer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-28T07:16:07Z",
    "updated_at": "2022-06-28T07:20:07Z",
    "author_association": "NONE",
    "body": "@onbjerg FFI only decodes things that are ABI encoded, as per the documentation:\r\nhttps://book.getfoundry.sh/cheatcodes/ffi.html\r\n\r\nFor example, reading the following stdout from Solc fails:\r\n`0x600a600d600039600a6000f3fe600035608052366080f3`\r\n\r\n(Generated using `solc --yul yul/Example.yul --bin | tail -1 | (echo -n 0x && cat)`)\r\n\r\nWhereas the following succeeds:\r\n`0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000016600a80600c6000396000f3fe600035608052366080f300000000000000000000`\r\n\r\n(Generated from the same Yul code using the Gist I shared above)\r\n\r\nMy use case is to hot-compile Yul code in the middle of tests, so I want to begin the test with `forge test` and then use FFI to compile so Yul code with Solc, then retrieve and deploy the result for use in tests.\r\n\r\nPS: The key part in the Gist I shared is the line `ethers.utils.defaultAbiCoder.encode([\"bytes\"], [bytecode])` which takes the Solc output and encodes it in a way which FFI can read using `bytes memory bytecode = abi.decode(cheatCodes.ffi(cmds), (bytes));`",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1168327982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1168338069",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2142#issuecomment-1168338069",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142",
    "id": 1168338069,
    "node_id": "IC_kwDOGBlvNc5Fo2yV",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-28T07:25:59Z",
    "updated_at": "2022-06-28T15:09:14Z",
    "author_association": "MEMBER",
    "body": "That's weird, I'm not sure why it would result in different output, and I'd assume that the bytecode from solc is valid bytes, but I might be wrong on that one.\r\n\r\nCan you not use https://book.getfoundry.sh/cheatcodes/get-code.html which is specifically built for getting bytecode from artifacts? It probably requires that you put the output of solc into a file, but the file can be very simple - we just need the bytecode keys, either in a Hardhat format or in a Foundry format.\r\n\r\nEdit: Also, can you post the bytecode you expect from Cast vs what it gives you?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1168338069/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1168851951",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2142#issuecomment-1168851951",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142",
    "id": 1168851951,
    "node_id": "IC_kwDOGBlvNc5Fq0Pv",
    "user": {
      "login": "0xYYY",
      "id": 86655648,
      "node_id": "MDQ6VXNlcjg2NjU1NjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/86655648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xYYY",
      "html_url": "https://github.com/0xYYY",
      "followers_url": "https://api.github.com/users/0xYYY/followers",
      "following_url": "https://api.github.com/users/0xYYY/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xYYY/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xYYY/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xYYY/subscriptions",
      "organizations_url": "https://api.github.com/users/0xYYY/orgs",
      "repos_url": "https://api.github.com/users/0xYYY/repos",
      "events_url": "https://api.github.com/users/0xYYY/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xYYY/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-28T15:10:47Z",
    "updated_at": "2022-06-28T15:10:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "`ae.js`:\r\n```javascript\r\n#!/usr/bin/env node\r\n\r\nconst ethers = require(\"ethers\");\r\n\r\nlet bytecode = \"0x\" + process.argv[2];\r\nprocess.stdout.write(ethers.utils.defaultAbiCoder.encode([\"bytes\"], [bytecode]));\r\n```\r\n\r\n```\r\n❯ BYTECODE=600a600d600039600a6000f3fe600035608052366080f3\r\n\r\n❯ cast ae \"f(bytes)\" $BYTECODE | tr -d \"\\n\" > a\r\n\r\n❯ node ae.js $BYTECODE > b\r\n\r\n❯ diff a b\r\n\r\n❯ cat a\r\n0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000017600a600d600039600a6000f3fe600035608052366080f3000000000000000000%\r\n\r\n❯ cat b\r\n0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000017600a600d600039600a6000f3fe600035608052366080f3000000000000000000%\r\n```\r\nWhen tested with the provided bytecode, `cast` and `ehters.js` produce the exact same output for me.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1168851951/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1168859918",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2142#issuecomment-1168859918",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142",
    "id": 1168859918,
    "node_id": "IC_kwDOGBlvNc5Fq2MO",
    "user": {
      "login": "0xYYY",
      "id": 86655648,
      "node_id": "MDQ6VXNlcjg2NjU1NjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/86655648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xYYY",
      "html_url": "https://github.com/0xYYY",
      "followers_url": "https://api.github.com/users/0xYYY/followers",
      "following_url": "https://api.github.com/users/0xYYY/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xYYY/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xYYY/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xYYY/subscriptions",
      "organizations_url": "https://api.github.com/users/0xYYY/orgs",
      "repos_url": "https://api.github.com/users/0xYYY/repos",
      "events_url": "https://api.github.com/users/0xYYY/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xYYY/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-28T15:17:28Z",
    "updated_at": "2022-06-28T15:18:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "> For example, reading the following stdout from Solc fails: \r\n> `0x600a600d600039600a6000f3fe600035608052366080f3`\r\n> (Generated using `solc --yul yul/Example.yul --bin | tail -1 | (echo -n 0x && cat)`)\r\n\r\n\r\n> Whereas the following succeeds: `0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000016600a80600c6000396000f3fe600035608052366080f300000000000000000000`\r\n> \r\n> (Generated from the same Yul code using the Gist I shared above)\r\n\r\n\r\n\r\nAlso, the provided bytecode (`0x600a600d600039600a6000f3fe600035608052366080f3`, 23 bytes), doesn't seem to match with the ABI-encoded one generated by the JS script (22 bytes)?\r\n```\r\n0000000000000000000000000000000000000000000000000000000000000020\r\n0000000000000000000000000000000000000000000000000000000000000016\r\n600a80600c6000396000f3fe600035608052366080f300000000000000000000\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1168859918/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1168966249",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2142#issuecomment-1168966249",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142",
    "id": 1168966249,
    "node_id": "IC_kwDOGBlvNc5FrQJp",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-28T16:43:00Z",
    "updated_at": "2022-06-28T16:43:00Z",
    "author_association": "MEMBER",
    "body": "> Can you not use https://book.getfoundry.sh/cheatcodes/get-code.html which is specifically built for getting bytecode from artifacts? It probably requires that you put the output of solc into a file, but the file can be very simple - we just need the bytecode keys, either in a Hardhat format or in a Foundry format.\r\n\r\nyeh this should be supported by this cheat code, if not we need to tweak it, but that's what the cheatcode is for @CodeForcer ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1168966249/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169076615",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2142#issuecomment-1169076615",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142",
    "id": 1169076615,
    "node_id": "IC_kwDOGBlvNc5FrrGH",
    "user": {
      "login": "CodeForcer",
      "id": 31618931,
      "node_id": "MDQ6VXNlcjMxNjE4OTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/31618931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeForcer",
      "html_url": "https://github.com/CodeForcer",
      "followers_url": "https://api.github.com/users/CodeForcer/followers",
      "following_url": "https://api.github.com/users/CodeForcer/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeForcer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeForcer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeForcer/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeForcer/orgs",
      "repos_url": "https://api.github.com/users/CodeForcer/repos",
      "events_url": "https://api.github.com/users/CodeForcer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeForcer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-28T18:27:32Z",
    "updated_at": "2022-06-28T20:50:15Z",
    "author_association": "NONE",
    "body": "@onbjerg & @0xYYY \r\n\r\nCast command on Yul file\r\n```\r\n> cast abi-encode \"f(bytes)\" $(solc --yul yul/Example.yul --bin | tail -1 | (echo -n 0x && cat)) \r\n0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000017600a600d600039600a6000f3fe600035608052366080f3000000000000000000\r\n```\r\n\r\nGist shared above\r\n```\r\n> node yul.js Example\r\n0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000016600a80600c6000396000f3fe600035608052366080f300000000000000000000\r\n```\r\n\r\nStraight compilation with Solc\r\n```\r\n> solc --yul yul/Example.yul --bin\r\n\r\n======= yul/Example.yul (EVM) =======\r\n\r\nBinary representation:\r\n600a600d600039600a6000f3fe600035608052366080f3\r\n```\r\n\r\nAs you mentioned I can definitely achieve this by writing to a file first (or using a JS script like I currently am), but that's not as clean as being able to do it with a single command in memory",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169076615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169605674",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2142#issuecomment-1169605674",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142",
    "id": 1169605674,
    "node_id": "IC_kwDOGBlvNc5FtsQq",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-29T06:58:05Z",
    "updated_at": "2022-06-29T07:02:45Z",
    "author_association": "MEMBER",
    "body": "If you decode the two outputs above from `bytes` using an ABI decoding library you get:\r\n\r\nCast: `600a600d600039600a6000f3fe600035608052366080f3`\r\nYour script: `600a80600c6000396000f3fe600035608052366080f3`\r\n\r\nIt would seem that Cast matches the output straight from Solc, but the output from your script is different than what Solc outputs. Are you sure Cast is not correct here, and if so, what part is failing you?\r\n\r\nEdit: It seems you prepend `0x` in your script, perhaps that's where the difference is? I.e. the 0x... gets interpreted as a string, converted to bytes and then ABI encoded. I know you also add this to the input of Cast, but Cast strips the leading 0x:\r\n\r\n```sh\r\n# The file `test` contains the output from solc you posted above\r\n# With 0x prepended:\r\n$ cast abi-encode \"f(bytes)\" $(cat test | tail -1 | (echo -n 0x && cat))\r\n0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000017600a600d600039600a6000f3fe600035608052366080f3000000000000000000\r\n\r\n# Without 0x prepended:\r\n$ cast abi-encode \"f(bytes)\" $(cat test | tail -1)\r\n0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000017600a600d600039600a6000f3fe600035608052366080f3000000000000000000\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169605674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169705937",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2142#issuecomment-1169705937",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142",
    "id": 1169705937,
    "node_id": "IC_kwDOGBlvNc5FuEvR",
    "user": {
      "login": "CodeForcer",
      "id": 31618931,
      "node_id": "MDQ6VXNlcjMxNjE4OTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/31618931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeForcer",
      "html_url": "https://github.com/CodeForcer",
      "followers_url": "https://api.github.com/users/CodeForcer/followers",
      "following_url": "https://api.github.com/users/CodeForcer/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeForcer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeForcer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeForcer/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeForcer/orgs",
      "repos_url": "https://api.github.com/users/CodeForcer/repos",
      "events_url": "https://api.github.com/users/CodeForcer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeForcer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-29T08:48:45Z",
    "updated_at": "2022-06-29T08:48:45Z",
    "author_association": "NONE",
    "body": "@onbjerg perhaps this is an issue with FFI parsing the output of cast?\r\n\r\nThe following logs `0x`\r\n```\r\nfunction deployContract(string memory fileName) public returns (address) {\r\n    string[] memory inputs = new string[](10);\r\n    string memory fileWithPath = string.concat(\"yul/\", string.concat(fileName, \".yul\"));\r\n    inputs[0] = \"cast\";\r\n    inputs[1] = \"abi-encode\";\r\n    inputs[2] = '\"f(bytes)\"';\r\n    inputs[3] = \"$(solc\";\r\n    inputs[4] = \"--yul\";\r\n    inputs[5] = fileWithPath;\r\n    inputs[6] = \"--bin\";\r\n    inputs[7] = \"|\";\r\n    inputs[8] = \"tail\";\r\n    inputs[9] = \"-1)\";\r\n    bytes memory rawParse = vm.ffi(inputs);\r\n    console.logBytes(rawParse);\r\n```\r\n\r\nWhereas the command logs:\r\n```\r\n> cast abi-encode \"f(bytes)\" $(solc --yul yul/Example.yul --bin | tail -1)\r\n0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000017600a600d600039600a6000f3fe600035608052366080f3000000000000000000\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169705937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169791476",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2142#issuecomment-1169791476",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142",
    "id": 1169791476,
    "node_id": "IC_kwDOGBlvNc5FuZn0",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-29T10:07:45Z",
    "updated_at": "2022-06-29T10:09:32Z",
    "author_association": "MEMBER",
    "body": "FFI doesn't spawn the command inside bash so I would assume it just executes the wrong command? I'm not entirely sure though\r\n\r\nCan you try either:\r\n\r\n```solidity\r\nstring[] memory inputs = new string[](3);\r\ninputs[0] = \"bash\";\r\ninputs[1] = \"-c\";\r\ninputs[2] = string(\r\n    bytes.concat('cast abi-encode \"f(bytes)\" $(solc --yul ', fileWithPath, ' --bin | tail -1)')\r\n);'';\r\n```\r\n\r\nor splitting the commands up (i.e. one FFI call for `solc ...`, one for `cast ...`)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169791476/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169833854",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2142#issuecomment-1169833854",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142",
    "id": 1169833854,
    "node_id": "IC_kwDOGBlvNc5Fuj9-",
    "user": {
      "login": "CodeForcer",
      "id": 31618931,
      "node_id": "MDQ6VXNlcjMxNjE4OTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/31618931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeForcer",
      "html_url": "https://github.com/CodeForcer",
      "followers_url": "https://api.github.com/users/CodeForcer/followers",
      "following_url": "https://api.github.com/users/CodeForcer/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeForcer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeForcer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeForcer/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeForcer/orgs",
      "repos_url": "https://api.github.com/users/CodeForcer/repos",
      "events_url": "https://api.github.com/users/CodeForcer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeForcer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-29T10:52:46Z",
    "updated_at": "2022-06-29T10:52:46Z",
    "author_association": "NONE",
    "body": "@onbjerg thank you for your help, I've solved this with the following (adapted from your suggestion)\r\n```\r\nstring memory stringCommand = string.concat('cast abi-encode \"f(bytes)\" $(solc --yul yul/', string.concat(fileName, \".yul --bin | tail -1)\"));\r\n\r\nstring[] memory inputs = new string[](3);\r\ninputs[0] = \"bash\";\r\ninputs[1] = \"-c\";\r\ninputs[2] = stringCommand;\r\n\r\nbytes memory bytecode = abi.decode(vm.ffi(inputs), (bytes));\r\n```\r\n\r\nReally appreciate the help of everyone who replied here (@0xYYY @mattsse also), this makes my developer experience a lot better - Foundry with cheatcodes is by far the most painless way to dev on Yul IMO",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169833854/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169867923",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2142#issuecomment-1169867923",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2142",
    "id": 1169867923,
    "node_id": "IC_kwDOGBlvNc5FusST",
    "user": {
      "login": "CodeForcer",
      "id": 31618931,
      "node_id": "MDQ6VXNlcjMxNjE4OTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/31618931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeForcer",
      "html_url": "https://github.com/CodeForcer",
      "followers_url": "https://api.github.com/users/CodeForcer/followers",
      "following_url": "https://api.github.com/users/CodeForcer/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeForcer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeForcer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeForcer/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeForcer/orgs",
      "repos_url": "https://api.github.com/users/CodeForcer/repos",
      "events_url": "https://api.github.com/users/CodeForcer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeForcer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-29T11:30:10Z",
    "updated_at": "2022-06-29T11:30:10Z",
    "author_association": "NONE",
    "body": "PS: Published an example repo to help any future devs who get stuck here\r\nhttps://github.com/CodeForcer/foundry-yul",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169867923/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
