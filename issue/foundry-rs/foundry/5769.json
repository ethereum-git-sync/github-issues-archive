{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5769",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5769/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5769/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5769/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5769",
  "id": 1876186725,
  "node_id": "I_kwDOGBlvNc5v1FZl",
  "number": 5769,
  "title": "setUp not updating contract values before delegatecall",
  "user": {
    "login": "EricForgy",
    "id": 8954730,
    "node_id": "MDQ6VXNlcjg5NTQ3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8954730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/EricForgy",
    "html_url": "https://github.com/EricForgy",
    "followers_url": "https://api.github.com/users/EricForgy/followers",
    "following_url": "https://api.github.com/users/EricForgy/following{/other_user}",
    "gists_url": "https://api.github.com/users/EricForgy/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/EricForgy/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/EricForgy/subscriptions",
    "organizations_url": "https://api.github.com/users/EricForgy/orgs",
    "repos_url": "https://api.github.com/users/EricForgy/repos",
    "events_url": "https://api.github.com/users/EricForgy/events{/privacy}",
    "received_events_url": "https://api.github.com/users/EricForgy/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2023-08-31T19:37:09Z",
  "updated_at": "2023-08-31T20:03:27Z",
  "closed_at": "2023-08-31T19:46:13Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (2f4a77e 2023-08-31T00:33:18.244109000Z)\n\n### What command(s) is the bug in?\n\nforge test\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\nHere is a simplified repro:\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport \"forge-std/Test.sol\";\r\n\r\ncontract Delegatee {\r\n\r\n    uint256 private _value;\r\n\r\n    function setValue(uint256 value_) public {\r\n        _value = value_;\r\n    }\r\n\r\n    function whoami() public view returns (address, uint256) {\r\n        return (msg.sender, _value);\r\n    }\r\n}\r\n\r\ncontract Delegator {\r\n    function delegate(address delegatee) public returns (address, uint256) {\r\n        (bool success, bytes memory result) = delegatee.delegatecall(\r\n            abi.encodeWithSignature(\"whoami()\")\r\n        );\r\n        require(success, \"Delegatee call failed\");\r\n        return abi.decode(result, (address, uint256));\r\n    }\r\n}\r\n\r\ncontract RepricerTest is Test {\r\n\r\n    address private alice = address(1);\r\n    address private bob = address(2);\r\n\r\n    Delegatee delegatee;\r\n    Delegator delegator;\r\n\r\n    function setUp() public {\r\n        vm.startPrank(alice);\r\n\r\n        delegatee = new Delegatee();\r\n        delegatee.setValue(42);\r\n        \r\n        delegator = new Delegator();\r\n    }\r\n\r\n    function testDelegate() public {\r\n        vm.startPrank(bob);\r\n\r\n        (address sender, uint256 value) = delegator.delegate(address(delegatee));\r\n        emit log_named_address(\"Delegator\", address(delegator));\r\n        emit log_named_address(\"Delegatee\", address(delegatee));\r\n        emit log_named_address(\"This\", address(this));\r\n        emit log_named_address(\"Sender\", sender);\r\n        emit log_named_uint(\"Value\", value);\r\n\r\n        assertEq(sender, bob);\r\n        assertEq(value, 42);\r\n    }\r\n}\r\n```\r\n\r\n`setUp` creates instances of `Delagatee` and `Delegator` and sets the value in `Delegatee` to 42.\r\n\r\nI expect when I call `deligator.delegate` from inside `testDelegate` that the value returned is 42, but it is returning the default value 0.",
  "closed_by": {
    "login": "Evalir",
    "id": 26014927,
    "node_id": "MDQ6VXNlcjI2MDE0OTI3",
    "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Evalir",
    "html_url": "https://github.com/Evalir",
    "followers_url": "https://api.github.com/users/Evalir/followers",
    "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
    "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
    "organizations_url": "https://api.github.com/users/Evalir/orgs",
    "repos_url": "https://api.github.com/users/Evalir/repos",
    "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Evalir/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5769/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5769/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1701683095",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5769#issuecomment-1701683095",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5769",
    "id": 1701683095,
    "node_id": "IC_kwDOGBlvNc5lbZ-X",
    "user": {
      "login": "EricForgy",
      "id": 8954730,
      "node_id": "MDQ6VXNlcjg5NTQ3MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8954730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EricForgy",
      "html_url": "https://github.com/EricForgy",
      "followers_url": "https://api.github.com/users/EricForgy/followers",
      "following_url": "https://api.github.com/users/EricForgy/following{/other_user}",
      "gists_url": "https://api.github.com/users/EricForgy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EricForgy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EricForgy/subscriptions",
      "organizations_url": "https://api.github.com/users/EricForgy/orgs",
      "repos_url": "https://api.github.com/users/EricForgy/repos",
      "events_url": "https://api.github.com/users/EricForgy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EricForgy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-31T19:42:52Z",
    "updated_at": "2023-08-31T19:42:52Z",
    "author_association": "NONE",
    "body": "Btw, this is what I'm getting in the console:\r\n```\r\nRunning 1 test for test/DelegateCall.t.sol:RepricerTest\r\n[FAIL. Reason: Assertion failed.] testDelegate() (gas: 39247)\r\nLogs:\r\n  Delegator: 0x535b3d7a252fa034ed71f0c53ec0c6f784cb64e1\r\n  Delegatee: 0x522b3294e6d06aa25ad0f1b8891242e335d3b459\r\n  This: 0x7fa9385be102ac3eac297483dd6233d62b3e1496\r\n  Sender: 0x0000000000000000000000000000000000000002\r\n  Value: 0\r\n  Error: a == b not satisfied [uint]\r\n    Expected: 42\r\n      Actual: 0\r\n\r\nTest result: FAILED. 0 passed; 1 failed; 0 skipped; finished in 1.26ms\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1701683095/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1701684067",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5769#issuecomment-1701684067",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5769",
    "id": 1701684067,
    "node_id": "IC_kwDOGBlvNc5lbaNj",
    "user": {
      "login": "Evalir",
      "id": 26014927,
      "node_id": "MDQ6VXNlcjI2MDE0OTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evalir",
      "html_url": "https://github.com/Evalir",
      "followers_url": "https://api.github.com/users/Evalir/followers",
      "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
      "organizations_url": "https://api.github.com/users/Evalir/orgs",
      "repos_url": "https://api.github.com/users/Evalir/repos",
      "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evalir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-31T19:43:42Z",
    "updated_at": "2023-08-31T19:44:55Z",
    "author_association": "MEMBER",
    "body": "You're using `delegatecall` which will use `Delegator`'s storage for making the call to `Delegatee`. This means that you're accessing storage slot 0 for `Delegator`, which is 0. This is not a bug.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1701684067/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1701689374",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5769#issuecomment-1701689374",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5769",
    "id": 1701689374,
    "node_id": "IC_kwDOGBlvNc5lbbge",
    "user": {
      "login": "EricForgy",
      "id": 8954730,
      "node_id": "MDQ6VXNlcjg5NTQ3MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8954730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EricForgy",
      "html_url": "https://github.com/EricForgy",
      "followers_url": "https://api.github.com/users/EricForgy/followers",
      "following_url": "https://api.github.com/users/EricForgy/following{/other_user}",
      "gists_url": "https://api.github.com/users/EricForgy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EricForgy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EricForgy/subscriptions",
      "organizations_url": "https://api.github.com/users/EricForgy/orgs",
      "repos_url": "https://api.github.com/users/EricForgy/repos",
      "events_url": "https://api.github.com/users/EricForgy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EricForgy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-31T19:48:06Z",
    "updated_at": "2023-08-31T19:48:06Z",
    "author_association": "NONE",
    "body": "Thanks @Evalir 🙌 \r\n\r\nThis is a simplified example. Looks like I need a better repro. Should I open a new issue or reopen this one?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1701689374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1701690982",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5769#issuecomment-1701690982",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5769",
    "id": 1701690982,
    "node_id": "IC_kwDOGBlvNc5lbb5m",
    "user": {
      "login": "Evalir",
      "id": 26014927,
      "node_id": "MDQ6VXNlcjI2MDE0OTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evalir",
      "html_url": "https://github.com/Evalir",
      "followers_url": "https://api.github.com/users/Evalir/followers",
      "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
      "organizations_url": "https://api.github.com/users/Evalir/orgs",
      "repos_url": "https://api.github.com/users/Evalir/repos",
      "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evalir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-31T19:49:36Z",
    "updated_at": "2023-08-31T19:49:36Z",
    "author_association": "MEMBER",
    "body": "I would make sure this is a bug in the first place 😅 A bug of this kind would be catastrophic for deployments and tests and we'd be seeing more reports—so i'm unsure there is a bug here as a ton of foundry CI tests would break",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1701690982/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1701705036",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5769#issuecomment-1701705036",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5769",
    "id": 1701705036,
    "node_id": "IC_kwDOGBlvNc5lbfVM",
    "user": {
      "login": "EricForgy",
      "id": 8954730,
      "node_id": "MDQ6VXNlcjg5NTQ3MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8954730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EricForgy",
      "html_url": "https://github.com/EricForgy",
      "followers_url": "https://api.github.com/users/EricForgy/followers",
      "following_url": "https://api.github.com/users/EricForgy/following{/other_user}",
      "gists_url": "https://api.github.com/users/EricForgy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EricForgy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EricForgy/subscriptions",
      "organizations_url": "https://api.github.com/users/EricForgy/orgs",
      "repos_url": "https://api.github.com/users/EricForgy/repos",
      "events_url": "https://api.github.com/users/EricForgy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EricForgy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-31T20:01:43Z",
    "updated_at": "2023-08-31T20:02:19Z",
    "author_association": "NONE",
    "body": "I completely expect this is user error and _not_ a bug, but here is another repro closer to my actual issue:\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport \"forge-std/Test.sol\";\r\n\r\ncontract Delegatee {\r\n    bool private _isInitialized;\r\n\r\n    error AlreadyInitialized();\r\n\r\n    error NotInitialized();\r\n\r\n    function initialize() public {\r\n        if (_isInitialized) {\r\n            revert AlreadyInitialized();\r\n        }\r\n        _isInitialized = true;\r\n    }\r\n\r\n    function whoami() public view returns (address) {\r\n        if (!_isInitialized) {\r\n            revert NotInitialized();\r\n        }\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ncontract Delegator {\r\n    function delegate(address delegatee) public returns (address) {\r\n        (bool success, bytes memory result) = delegatee.delegatecall(\r\n            abi.encodeWithSignature(\"whoami()\")\r\n        );\r\n        if (!success) {\r\n            assembly {\r\n                revert(add(result, 32), mload(result))\r\n            }\r\n        }\r\n        return abi.decode(result, (address));\r\n    }\r\n}\r\n\r\ncontract RepricerTest is Test {\r\n    address private alice = address(1);\r\n    address private bob = address(2);\r\n\r\n    Delegatee delegatee;\r\n    Delegator delegator;\r\n\r\n    function setUp() public {\r\n        vm.startPrank(alice);\r\n\r\n        delegatee = new Delegatee();\r\n        delegatee.initialize();\r\n\r\n        delegator = new Delegator();\r\n    }\r\n\r\n    function testDelegate() public {\r\n        vm.startPrank(bob);\r\n\r\n        vm.expectRevert(\r\n            abi.encodeWithSelector(Delegatee.AlreadyInitialized.selector)\r\n        );\r\n        delegatee.initialize();\r\n\r\n        address sender = delegator.delegate(address(delegatee));\r\n        emit log_named_address(\"Delegator\", address(delegator));\r\n        emit log_named_address(\"Delegatee\", address(delegatee));\r\n        emit log_named_address(\"This\", address(this));\r\n        emit log_named_address(\"Sender\", sender);\r\n\r\n        assertEq(sender, bob);\r\n    }\r\n}\r\n```\r\nIn the `setUp`, I `initialize` `Delegatee` and it looks fine.\r\nThen in my test, I confirm that calling `initialize` again reverts with `AlreadyInitialized` as expected.\r\nBut then when I try to call `delegate`, I get an error `NotInialized`.\r\n\r\nIs this a bug or am I doing something silly? 😅 \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1701705036/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1701707110",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5769#issuecomment-1701707110",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5769",
    "id": 1701707110,
    "node_id": "IC_kwDOGBlvNc5lbf1m",
    "user": {
      "login": "EricForgy",
      "id": 8954730,
      "node_id": "MDQ6VXNlcjg5NTQ3MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8954730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EricForgy",
      "html_url": "https://github.com/EricForgy",
      "followers_url": "https://api.github.com/users/EricForgy/followers",
      "following_url": "https://api.github.com/users/EricForgy/following{/other_user}",
      "gists_url": "https://api.github.com/users/EricForgy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EricForgy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EricForgy/subscriptions",
      "organizations_url": "https://api.github.com/users/EricForgy/orgs",
      "repos_url": "https://api.github.com/users/EricForgy/repos",
      "events_url": "https://api.github.com/users/EricForgy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EricForgy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-31T20:03:27Z",
    "updated_at": "2023-08-31T20:03:27Z",
    "author_association": "NONE",
    "body": "This is what gets output to the console:\r\n```\r\nRunning 1 test for test/DelegateCall.t.sol:RepricerTest\r\n[FAIL. Reason: NotInitialized()] testDelegate() (gas: 21320)\r\nTest result: FAILED. 0 passed; 1 failed; 0 skipped; finished in 552.79µs\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1701707110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
