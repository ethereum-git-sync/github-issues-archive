{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3695",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3695/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3695/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3695/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3695",
  "id": 1451255567,
  "node_id": "I_kwDOGBlvNc5WgGcP",
  "number": 3695,
  "title": "Add filesystem metadata and walk cheat codes",
  "user": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394235,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjM1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0052CC",
      "default": true,
      "description": "Good for newcomers"
    },
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    },
    {
      "id": 3759720362,
      "node_id": "LA_kwDOGBlvNc7gGMeq",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-average",
      "name": "D-average",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: average"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-11-16T09:50:51Z",
  "updated_at": "2023-03-09T23:55:57Z",
  "closed_at": "2023-03-09T23:55:57Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nA nice to have feature would to get some file metadata info via a cheatcode, this should roughly mirror: https://doc.rust-lang.org/stable/std/fs/struct.Metadata.html\r\n\r\nadditionally it'd be nice to return a list of files if the path is a directory, this should probably a separate cheatcode, (perhaps `walk`?)\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3695/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3695/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1319526531",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3695#issuecomment-1319526531",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3695",
    "id": 1319526531,
    "node_id": "IC_kwDOGBlvNc5OpmCD",
    "user": {
      "login": "wildmolasses",
      "id": 5423313,
      "node_id": "MDQ6VXNlcjU0MjMzMTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5423313?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wildmolasses",
      "html_url": "https://github.com/wildmolasses",
      "followers_url": "https://api.github.com/users/wildmolasses/followers",
      "following_url": "https://api.github.com/users/wildmolasses/following{/other_user}",
      "gists_url": "https://api.github.com/users/wildmolasses/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wildmolasses/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wildmolasses/subscriptions",
      "organizations_url": "https://api.github.com/users/wildmolasses/orgs",
      "repos_url": "https://api.github.com/users/wildmolasses/repos",
      "events_url": "https://api.github.com/users/wildmolasses/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wildmolasses/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-18T04:23:10Z",
    "updated_at": "2022-11-18T04:23:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "> this should roughly mirror\r\n\r\nperhaps a method that looks something like `metadata(fileLocation) -> FileMetadata`\r\n\r\nwhere `FileMetadata` is a struct that roughly mirrors the Metadata struct? e.g.\r\n\r\n```\r\nstruct {\r\n    fileType\r\n    isDir\r\n    isFile\r\n    isSymlink\r\n    len\r\n    permissions\r\n    modified\r\n    accessed\r\n    created\r\n}\r\n```\r\n\r\nIn that case, which are needed?\r\n\r\n- [ ] fileType\r\n- [ ] isDir\r\n- [ ] isFile\r\n- [ ] isSymlink\r\n- [ ] len\r\n- [ ] permissions\r\n- [ ] modified\r\n- [ ] accessed\r\n- [ ] created",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1319526531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1319694167",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3695#issuecomment-1319694167",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3695",
    "id": 1319694167,
    "node_id": "IC_kwDOGBlvNc5OqO9X",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-18T08:31:44Z",
    "updated_at": "2022-11-18T08:31:44Z",
    "author_association": "MEMBER",
    "body": "great idea, sgtm!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1319694167/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1463008134",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3695#issuecomment-1463008134",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3695",
    "id": 1463008134,
    "node_id": "IC_kwDOGBlvNc5XM7uG",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-09T23:55:57Z",
    "updated_at": "2023-03-09T23:55:57Z",
    "author_association": "COLLABORATOR",
    "body": "Going to close this issue as completed by #3717\r\n\r\n> additionally it'd be nice to return a list of files if the path is a directory, this should probably a separate cheatcode, (perhaps walk?)\r\n\r\nHaven't seen any requests for this, but we can open a new issue if there is a need. Most use cases for getting file info are likely around JSON input/output files or deploy scripts, so I can't think of a common use case for a `walk` cheat, so figured I'd close for now",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1463008134/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
