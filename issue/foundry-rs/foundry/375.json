{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/375",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/375/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/375/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/375/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/375",
  "id": 1093955402,
  "node_id": "I_kwDOGBlvNc5BNG9K",
  "number": 375,
  "title": "feat(cast): `cast send-bundle`",
  "user": {
    "login": "ncitron",
    "id": 16858330,
    "node_id": "MDQ6VXNlcjE2ODU4MzMw",
    "avatar_url": "https://avatars.githubusercontent.com/u/16858330?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ncitron",
    "html_url": "https://github.com/ncitron",
    "followers_url": "https://api.github.com/users/ncitron/followers",
    "following_url": "https://api.github.com/users/ncitron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ncitron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ncitron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ncitron/subscriptions",
    "organizations_url": "https://api.github.com/users/ncitron/orgs",
    "repos_url": "https://api.github.com/users/ncitron/repos",
    "events_url": "https://api.github.com/users/ncitron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ncitron/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394235,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjM1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0052CC",
      "default": true,
      "description": "Good for newcomers"
    },
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752609,
      "node_id": "LA_kwDOGBlvNc7cwseh",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-cast",
      "name": "C-cast",
      "color": "5319E7",
      "default": false,
      "description": "Command: cast"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-01-05T03:57:52Z",
  "updated_at": "2022-06-24T22:23:30Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "A pretty natural extension to #368 would be to add a `cast send-bundle` command for batching multiple transactions via flashbots.\r\n\r\nThis could work like:\r\n`cast send-bundle $TO $SIG $ARG1 $ARG2, $TO $SIG $ARG, ...`",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/375/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/375/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007499901",
    "html_url": "https://github.com/foundry-rs/foundry/issues/375#issuecomment-1007499901",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/375",
    "id": 1007499901,
    "node_id": "IC_kwDOGBlvNc48DTp9",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T15:33:19Z",
    "updated_at": "2022-01-07T15:33:48Z",
    "author_association": "MEMBER",
    "body": "I want to take a stab at this but I can't really figure out nice UX for it. I don't think using commas makes sense (at least I haven't seen it in this context before), so how about we have two modes:\r\n\r\n1. `cast send-bundle $(cast mktx ...) $(cast mktx ...) ...`\r\n2. Interactive mode\r\n\r\nFirst let's you still use it in scripts/non-interactive environments, second is probably nicer overall if you're just using it on the command line\r\n\r\nThoughts?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007499901/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007707769",
    "html_url": "https://github.com/foundry-rs/foundry/issues/375#issuecomment-1007707769",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/375",
    "id": 1007707769,
    "node_id": "IC_kwDOGBlvNc48EGZ5",
    "user": {
      "login": "ncitron",
      "id": 16858330,
      "node_id": "MDQ6VXNlcjE2ODU4MzMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16858330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncitron",
      "html_url": "https://github.com/ncitron",
      "followers_url": "https://api.github.com/users/ncitron/followers",
      "following_url": "https://api.github.com/users/ncitron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncitron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncitron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncitron/subscriptions",
      "organizations_url": "https://api.github.com/users/ncitron/orgs",
      "repos_url": "https://api.github.com/users/ncitron/repos",
      "events_url": "https://api.github.com/users/ncitron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncitron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T20:14:00Z",
    "updated_at": "2022-01-07T20:14:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "That seems like a pretty reasonable way to do it to me. Using commas would probably be hard to get working with the current CLI setup foundry uses. Option one also has the benefit of allowing you to include transactions that you did not sign yourself in the bundle. Super excited for this feature. Will make doing things like token/nft recoveries crazy easy.\r\n\r\nWill you just let users sign the bundle using the same sort of flags for selecting the account as `cast send`? I guess you could always generate a random key to sign the bundle but some users may want to provide their own since signing your bundle as a reputable searcher increases your odds of being included.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007707769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
