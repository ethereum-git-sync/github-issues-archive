{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1971",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1971/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1971/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1971/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1971",
  "id": 1271590730,
  "node_id": "I_kwDOGBlvNc5Lyu9K",
  "number": 1971,
  "title": "Arithmetic Overflow in Fuzz Testing using bound and vm.assume",
  "user": {
    "login": "K-G-J",
    "id": 91970214,
    "node_id": "U_kgDOBXtapg",
    "avatar_url": "https://avatars.githubusercontent.com/u/91970214?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/K-G-J",
    "html_url": "https://github.com/K-G-J",
    "followers_url": "https://api.github.com/users/K-G-J/followers",
    "following_url": "https://api.github.com/users/K-G-J/following{/other_user}",
    "gists_url": "https://api.github.com/users/K-G-J/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/K-G-J/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/K-G-J/subscriptions",
    "organizations_url": "https://api.github.com/users/K-G-J/orgs",
    "repos_url": "https://api.github.com/users/K-G-J/repos",
    "events_url": "https://api.github.com/users/K-G-J/events{/privacy}",
    "received_events_url": "https://api.github.com/users/K-G-J/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-06-15T02:38:46Z",
  "updated_at": "2022-06-15T13:31:14Z",
  "closed_at": "2022-06-15T13:30:11Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (6422ea7 2022-06-14T00:07:51.628625Z)\n\n### What command(s) is the bug in?\n\nforge test\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\nI receive this \"Reason: Arithmetic over/underflow\" error when fuzz testing my addLiquidity function for my CSAMM contract. The error gives the args[1, 101].  For context, in my setUp test I am minting and approve 1e18 tokens of token0 and token1.  I tried using ```amount0 = bound(amount0, 0, token0.totalSupply());``` for both tokens and received the same over/underflow error message.  My full repo is available [here](https://github.com/K-G-J/foundry-CSAMM)\r\n``` solidity\r\n   function setUp() public {\r\n        vm.label(alice, \"Alice\");\r\n        vm.label(bob, \"Bob\");\r\n        vm.label(address(this), \"CSAMMTest\");\r\n\r\n        token0 = new MockERC20(\"Token0\", \"TTO\", 18);\r\n        token1 = new MockERC20(\"Token1\", \"TT1\", 18);\r\n        vm.label(address(token0), \"Token0\");\r\n        vm.label(address(token1), \"Token1\");\r\n\r\n        CSAMMcontract = new CSAMM(address(token0), address(token1));\r\n\r\n        token0.mint(address(this), 1e18);\r\n        token0.approve(address(CSAMMcontract), 100);\r\n        token1.mint(address(this), 1e18);\r\n        token1.approve(address(CSAMMcontract), 100);\r\n    }\r\n\r\n    function testFuzz__addLiquidity(uint256 amount0, uint256 amount1) public {\r\n        vm.assume(amount0 > 0 && amount1 > 0);\r\n        vm.assume(amount0 <= token0.totalSupply());\r\n        vm.assume(amount1 <= token1.totalSupply());\r\n        vm.assume(amount0 <= token0.balanceOf(address(this)));\r\n        vm.assume(amount1 <= token1.balanceOf(address(this)));\r\n\r\n        token0.mint(address(this), amount0);\r\n        token1.mint(address(this), amount1);\r\n        token0.approve(address(this), amount0);\r\n        token1.approve(address(this), amount1);\r\n        CSAMMcontract.addLiquidity(amount0, amount1);\r\n        assertEq(CSAMMcontract.reserve0(), amount0);\r\n        assertEq(CSAMMcontract.reserve1(), amount1);\r\n        assertEq(CSAMMcontract.balanceOf(address(this)), amount0 + amount1);\r\n        assertEq(CSAMMcontract.totalSupply(), amount0 + amount1);\r\n    }\r\n```",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1971/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1971/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1156476316",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1971#issuecomment-1156476316",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1971",
    "id": 1156476316,
    "node_id": "IC_kwDOGBlvNc5E7m2c",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-15T13:30:11Z",
    "updated_at": "2022-06-15T13:31:14Z",
    "author_association": "MEMBER",
    "body": "It is because you are approving `amount0` and `amount1` for the test contract, not for your CSAMM contract. Changing these lines:\r\n\r\n```solidity\r\ntoken0.approve(address(this), amount0);\r\ntoken1.approve(address(this), amount1);\r\n```\r\n\r\nto:\r\n\r\n```solidity\r\ntoken0.approve(address(CSAMMcontract), amount0);\r\ntoken1.approve(address(CSAMMcontract), amount1);\r\n```\r\n\r\nfixes the issue :smile: \r\n\r\nEdit: The arithmetic underflow/overflow message isn't super helpful but it is a product of using Solmate; the underflow is from this line: https://github.com/Rari-Capital/solmate/blob/6803214703814ca6dedf49a8901e7f0445196c4e/src/tokens/ERC20.sol#L97\r\n\r\nIn contrast to OpenZeppelin there is no explicit allowance check, so the message isn't helpful - but it is more gas efficient",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1156476316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
