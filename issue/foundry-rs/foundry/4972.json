{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4972",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4972/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4972/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4972/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4972",
  "id": 1715666091,
  "node_id": "I_kwDOGBlvNc5mQvyr",
  "number": 4972,
  "title": "Generate creation code",
  "user": {
    "login": "CodeSandwich",
    "id": 26183680,
    "node_id": "MDQ6VXNlcjI2MTgzNjgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/26183680?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/CodeSandwich",
    "html_url": "https://github.com/CodeSandwich",
    "followers_url": "https://api.github.com/users/CodeSandwich/followers",
    "following_url": "https://api.github.com/users/CodeSandwich/following{/other_user}",
    "gists_url": "https://api.github.com/users/CodeSandwich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/CodeSandwich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/CodeSandwich/subscriptions",
    "organizations_url": "https://api.github.com/users/CodeSandwich/orgs",
    "repos_url": "https://api.github.com/users/CodeSandwich/repos",
    "events_url": "https://api.github.com/users/CodeSandwich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/CodeSandwich/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-05-18T13:44:31Z",
  "updated_at": "2023-05-26T12:48:39Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nSometimes it's necessary to get a creation code that can be passed into `CREATE` opcode. E.g. Solmate's CREATE3 library requires that. As another example I'm trying to write a generic deployment tool and it too needs to work with creation code, it turns out that there's no way around it. I'm not sure about contract-based wallets, e.g. Safe, they may benefit from that too when used for deployments.\r\n\r\nA workaround is to extract `bytecode` from `forge inspect <CONTRACT> bytecode` and append the ABI-encoded constructor arguments. As a cherry on top one could take a look at the `\"type\": \"constructor\"` entry in the ABI file to verify the arguments. It's not trivial and would be much more convenient if `foundry` could do that. E.g. with a new command `forge create-code` similar to `forge create` or by adding a special flag to the latter.\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4972/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4972/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1556332302",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4972#issuecomment-1556332302",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4972",
    "id": 1556332302,
    "node_id": "IC_kwDOGBlvNc5cw78O",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-21T23:52:52Z",
    "updated_at": "2023-05-21T23:52:52Z",
    "author_association": "COLLABORATOR",
    "body": "I'm not sure I understand the request or use case here? In Solidity you can obtain the creation and runtime code with `type(MyContract).creationCode` and `type(MyContract).runtimeCode` respectively",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1556332302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1556784132",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4972#issuecomment-1556784132",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4972",
    "id": 1556784132,
    "node_id": "IC_kwDOGBlvNc5cyqQE",
    "user": {
      "login": "CodeSandwich",
      "id": 26183680,
      "node_id": "MDQ6VXNlcjI2MTgzNjgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/26183680?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeSandwich",
      "html_url": "https://github.com/CodeSandwich",
      "followers_url": "https://api.github.com/users/CodeSandwich/followers",
      "following_url": "https://api.github.com/users/CodeSandwich/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeSandwich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeSandwich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeSandwich/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeSandwich/orgs",
      "repos_url": "https://api.github.com/users/CodeSandwich/repos",
      "events_url": "https://api.github.com/users/CodeSandwich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeSandwich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-22T08:36:03Z",
    "updated_at": "2023-05-22T08:36:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, in Solidity you can get the creation code, but you can't run Solidity in the terminal to build the transaction payload.\r\n\r\nTo give an extremely simplified example imagine a generic deployer contract allowing creating contracts under reproducible addresses derived only from the salt and the deployer contract address:\r\n\r\n```solidity\r\nusing {CREATE3} from \"solmate/utils/CREATE3.sol\";\r\n\r\ncontract StaticAddressDeployer {\r\n    function deploy(bytes32 salt, bytes memory creationCode) public {\r\n        CREATE3.deploy(salt, creationCode, msg.value);\r\n    }\r\n}\r\n```\r\n\r\nTo call this function using `cast send` you need to build the `creationCode` parameter, which is the to-be-deployed contract's raw creation code (easy, just `forge inspect ... bytecode`) with ABI-encoded constructor parameters appended (tricky, there's no \"constructor calldata\" building tool).",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1556784132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1557495421",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4972#issuecomment-1557495421",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4972",
    "id": 1557495421,
    "node_id": "IC_kwDOGBlvNc5c1X59",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-22T16:04:15Z",
    "updated_at": "2023-05-22T16:04:15Z",
    "author_association": "COLLABORATOR",
    "body": "IIUC you are requesting a forge or cast command that can take in a contract name and constructor args, then ABI encode + concatenate those to generate the full creation code? Something like: `forge creationCode <contractName> <args>`? ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1557495421/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1557503157",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4972#issuecomment-1557503157",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4972",
    "id": 1557503157,
    "node_id": "IC_kwDOGBlvNc5c1Zy1",
    "user": {
      "login": "CodeSandwich",
      "id": 26183680,
      "node_id": "MDQ6VXNlcjI2MTgzNjgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/26183680?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeSandwich",
      "html_url": "https://github.com/CodeSandwich",
      "followers_url": "https://api.github.com/users/CodeSandwich/followers",
      "following_url": "https://api.github.com/users/CodeSandwich/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeSandwich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeSandwich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeSandwich/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeSandwich/orgs",
      "repos_url": "https://api.github.com/users/CodeSandwich/repos",
      "events_url": "https://api.github.com/users/CodeSandwich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeSandwich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-22T16:08:21Z",
    "updated_at": "2023-05-22T16:08:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, exactly something like this. I agree that `forge` is probably the right place, because it can work directly on the project source code, similarly to `forge create`.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1557503157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1564342680",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4972#issuecomment-1564342680",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4972",
    "id": 1564342680,
    "node_id": "IC_kwDOGBlvNc5dPfmY",
    "user": {
      "login": "CodeSandwich",
      "id": 26183680,
      "node_id": "MDQ6VXNlcjI2MTgzNjgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/26183680?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeSandwich",
      "html_url": "https://github.com/CodeSandwich",
      "followers_url": "https://api.github.com/users/CodeSandwich/followers",
      "following_url": "https://api.github.com/users/CodeSandwich/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeSandwich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeSandwich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeSandwich/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeSandwich/orgs",
      "repos_url": "https://api.github.com/users/CodeSandwich/repos",
      "events_url": "https://api.github.com/users/CodeSandwich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeSandwich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-26T12:48:38Z",
    "updated_at": "2023-05-26T12:48:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "A workaround with jq:\r\n```bash\r\nBYTECODE=$(forge inspect <CONTRACT> bytecode)\r\nTYPES=$(forge inspect <CONTRACT> abi \\\r\n    | jq -r '.[] | select(.type == \"constructor\") | .inputs | map(.type) | join(\",\")')\r\nARGS=$(cast abi-encode \"constructor($TYPES)\", <CONSTRUCTOR ARGS>)\r\nCALLDATA=$(cast --concat-hex \"$BYTECODE\" \"$ARGS\")",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1564342680/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
