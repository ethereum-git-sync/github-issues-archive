{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2618",
  "id": 1328920306,
  "node_id": "I_kwDOGBlvNc5PNbby",
  "number": 2618,
  "title": "Better dependency model",
  "user": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3777100092,
      "node_id": "LA_kwDOGBlvNc7hIfk8",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-pm",
      "name": "Cmd-forge-pm",
      "color": "006B75",
      "default": false,
      "description": "Command: forge install/update/remove"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2022-08-04T16:48:47Z",
  "updated_at": "2023-07-20T08:49:15Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\n@mattsse in #2098 \r\n\r\n>this will require a bit of work, basically managing a registry, but would be huge, getting rid of git submodules entirely would be amazing.\r\n>\r\n>this would require\r\n>- [ ] dependency section in foundry.toml\r\n>- [ ] registry model for `~/.foundry/registry/...`\r\n>- [ ] some libgit2 utils to create checkouts, used some of cargo's code for that in the binder create already\r\n>- [ ] ...\r\n\r\nSome initial exploration is being done in #2386. This issue is a place to discuss potential features.\r\n\r\nAlso solves the following issues:\r\n\r\n- A dependency on git in the users system\r\n- SSH vs HTTPS submodules debacle\r\n- Needing to teach users about submodules/providing git support\r\n- Issues around dependency remappings, since we have greater control of the dependencies\r\n\r\nAn MVP would just use git, but using libgit2. Later this can be expanded upon to support a registry model, or some package management form the community lands on\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618/reactions",
    "total_count": 10,
    "+1": 6,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 4,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1217381326",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2618#issuecomment-1217381326",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618",
    "id": 1217381326,
    "node_id": "IC_kwDOGBlvNc5Ij8PO",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-17T02:20:01Z",
    "updated_at": "2022-08-17T02:20:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Why not take a playbook out of nix and use the tarball model? \r\n\r\nThere is this concept from yarnv3 using the exec:// dsn: https://github.com/sambacha/foundry-exec/tree/master/plugin-exec\r\n\r\nThe exec: protocol represents a way to define yourself how the specified package should be fetched. In a sense, it can be seen as a more high-level version of the [Fetcher API](https://github.com/sambacha/foundry-exec/blob/master/advanced/lexicon#fetcher) that Yarn provides.\r\n\r\nThis also leverages a fakeFS so its isomorphic \r\n\r\nIdeally, you could just keep them in a zip pr tgz file and read it, etc. you still need to enforce a deterministic process for reproducing the dependency install graph (how to sort etc etc) \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1217381326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1217415420",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2618#issuecomment-1217415420",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618",
    "id": 1217415420,
    "node_id": "IC_kwDOGBlvNc5IkEj8",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-17T03:24:19Z",
    "updated_at": "2022-08-17T03:24:19Z",
    "author_association": "NONE",
    "body": "Just gonna leave this here: https://eips.ethereum.org/EIPS/eip-2678\r\n\r\nhighlights:\r\n- EVM native artifacts\r\n- can publish to decentralized (really good for build reproductions) or centralized infrastructure\r\n- no need to re-build anything once published (but can also load sources if needed, although if solc had support it would help)\r\n- cross-language/framework artifact, already used with Vyper, Truffle, Brownie, and Ape\r\n- Much easier integration point with external tooling, instead of replicating compile stages (e.g. Slither and crytic-compile)\r\n- **can let you import types from non-Solidity languages like Vyper** (would be even better if Solidity completed support for it)\r\n\r\ndifficulties:\r\n- not a lot of adoption, really only Ape is actively developing it\r\n- v3 has some rough edges, v4 will eventually be needed\r\n- no widely-used distribution registries\r\n- would have to create new Rust tooling to handle the format (although started here: https://github.com/ethpm/ethpm-rs)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1217415420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1221091377",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2618#issuecomment-1221091377",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618",
    "id": 1221091377,
    "node_id": "IC_kwDOGBlvNc5IyGAx",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-19T21:04:36Z",
    "updated_at": "2022-08-19T21:04:36Z",
    "author_association": "MEMBER",
    "body": "@sambacha No decisions have been made on anything related to how packages are fetched outside of supporting git repositories without requiring git. Anything else would obviously require a tarball. I don't think the exec model makes sense, seems pretty insecure to allow any dependency in the subtree to just arbitrarily define a command to be run on install",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1221091377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1221210202",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2618#issuecomment-1221210202",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618",
    "id": 1221210202,
    "node_id": "IC_kwDOGBlvNc5IyjBa",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-20T02:19:08Z",
    "updated_at": "2022-08-20T02:19:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @sambacha No decisions have been made on anything related to how packages are fetched outside of supporting git repositories without requiring git. Anything else would obviously require a tarball. I don't think the exec model makes sense, seems pretty insecure to allow any dependency in the subtree to just arbitrarily define a command to be run on install\r\n\r\nthis behavior is already possible with git submodules and symlinks ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1221210202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1221216301",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2618#issuecomment-1221216301",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618",
    "id": 1221216301,
    "node_id": "IC_kwDOGBlvNc5Iykgt",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-20T02:50:38Z",
    "updated_at": "2022-08-20T02:50:38Z",
    "author_association": "MEMBER",
    "body": "How?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1221216301/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1242818538",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2618#issuecomment-1242818538",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618",
    "id": 1242818538,
    "node_id": "IC_kwDOGBlvNc5KE-fq",
    "user": {
      "login": "nlnw",
      "id": 108184497,
      "node_id": "U_kgDOBnLDsQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/108184497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nlnw",
      "html_url": "https://github.com/nlnw",
      "followers_url": "https://api.github.com/users/nlnw/followers",
      "following_url": "https://api.github.com/users/nlnw/following{/other_user}",
      "gists_url": "https://api.github.com/users/nlnw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nlnw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nlnw/subscriptions",
      "organizations_url": "https://api.github.com/users/nlnw/orgs",
      "repos_url": "https://api.github.com/users/nlnw/repos",
      "events_url": "https://api.github.com/users/nlnw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nlnw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-10T23:18:38Z",
    "updated_at": "2022-09-10T23:18:38Z",
    "author_association": "NONE",
    "body": "please get away from submodules",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1242818538/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1274200719",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2618#issuecomment-1274200719",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618",
    "id": 1274200719,
    "node_id": "IC_kwDOGBlvNc5L8sKP",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-11T07:19:00Z",
    "updated_at": "2022-10-11T07:19:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "> How?\r\n\r\n```ini\r\n[submodule \"test\"]\r\npath = test\r\nurl = ssh://-oProxyCommand=touch VULERABLE/git@github.com:/foundry/forge-std.git\r\n```\r\n\r\nThough this has been fixed here:\r\nhttps://github.com/git/git/commit/0383bbb9015898cbc79abd7b64316484d7713b44#diff-07b96ecc79256b188e0ea9b2c6d1180e\r\n\r\nCVE-2021-21300\r\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-21300\r\n\r\nquote,\r\n> 'As a workaound, if symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work.'\r\n\r\n\r\nAdditionally for GitHub Actions, see https://blog.teddykatz.com/2022/02/23/ghosts-of-branches-past.html \r\n\r\nGitHub's API is not a reflection of 1:1 to git, so there are probably other ways etc",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1274200719/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1360567504",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2618#issuecomment-1360567504",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618",
    "id": 1360567504,
    "node_id": "IC_kwDOGBlvNc5RGJzQ",
    "user": {
      "login": "brockelmore",
      "id": 31553173,
      "node_id": "MDQ6VXNlcjMxNTUzMTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31553173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brockelmore",
      "html_url": "https://github.com/brockelmore",
      "followers_url": "https://api.github.com/users/brockelmore/followers",
      "following_url": "https://api.github.com/users/brockelmore/following{/other_user}",
      "gists_url": "https://api.github.com/users/brockelmore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brockelmore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brockelmore/subscriptions",
      "organizations_url": "https://api.github.com/users/brockelmore/orgs",
      "repos_url": "https://api.github.com/users/brockelmore/repos",
      "events_url": "https://api.github.com/users/brockelmore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brockelmore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-21T00:33:52Z",
    "updated_at": "2022-12-21T00:33:52Z",
    "author_association": "MEMBER",
    "body": "> Just gonna leave this here: https://eips.ethereum.org/EIPS/eip-2678\r\n> \r\n> highlights:\r\n> \r\n>     * EVM native artifacts\r\n> \r\n>     * can publish to decentralized (really good for build reproductions) or centralized infrastructure\r\n> \r\n>     * no need to re-build anything once published (but can also load sources if needed, although if solc had support it would help)\r\n> \r\n>     * cross-language/framework artifact, already used with Vyper, Truffle, Brownie, and Ape\r\n> \r\n>     * Much easier integration point with external tooling, instead of replicating compile stages (e.g. Slither and crytic-compile)\r\n> \r\n>     * **can let you import types from non-Solidity languages like Vyper** (would be even better if Solidity completed support for it)\r\n> \r\n> \r\n> difficulties:\r\n> \r\n>     * not a lot of adoption, really only Ape is actively developing it\r\n> \r\n>     * v3 has some rough edges, v4 will eventually be needed\r\n> \r\n>     * no widely-used distribution registries\r\n> \r\n>     * would have to create new Rust tooling to handle the format (although started here: https://github.com/ethpm/ethpm-rs)\r\n\r\nthis eip may be the most verbose, overly-complicated EIP I've seen, and looks like a nightmare to actually use. maybe there have been learnings from this that we could take a step back and figure out minimal version with optional extensions that can come later? As it currently stands, the complexity associated with this standard seems like it would be *extremely* likely to introduce unintended bugs (even if the verbosity is intended to reduce such bugs).",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1360567504/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1360617757",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2618#issuecomment-1360617757",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618",
    "id": 1360617757,
    "node_id": "IC_kwDOGBlvNc5RGWEd",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-21T00:57:29Z",
    "updated_at": "2022-12-21T00:57:29Z",
    "author_association": "NONE",
    "body": "> this eip may be the most verbose, overly-complicated EIP I've seen, and looks like a nightmare to actually use. maybe there have been learnings from this that we could take a step back and figure out minimal version with optional extensions that can come later? As it currently stands, the complexity associated with this standard seems like it would be _extremely_ likely to introduce unintended bugs (even if the verbosity is intended to reduce such bugs).\r\n\r\nIt is quite complex, but most of the decisions have some basis in reality and it actually works quite nicely for our use cases (dependency management, deployment tracking, compilation caching, publishing, etc.). At least I would caution against disregarding it on the basis of \"it looks complicated\" since the requirements of package management are just that: complicated.\r\n\r\nThere are definitely some rough edges still to iron out, but we have for the most part identified the issues with the spec in it's current v3 form (namely import linking), and would love to start a conversation about a v4 iteration (or re-approaching the problem from scratch w/ lessons learned). I think between Foundry, Hardhat, and Ape, we can reasonably make a good standard that can improve interoperability with existing tooling (not just dev frameworks but also security tooling, Etherscan, etc.) and make code sharing across the ecosystem a lot easier (which also improves DevEx).\r\n\r\nOne thing I am _not_ in favor of is going through and just creating a \"minimal\" spec that seems to meet some initial needs, because those needs will grow and change and then we'll have _yet another_ packaging standard that only sees use with one framework, or everything designed around Solidity and however it arbitrarily decides to format it's compiler artifacts in each version. There's a lot to be gained from a little bit of foresight, just imagine how much easier it would be to work with code if you didn't have to flatten everything to get it to verify on some 3rd party platforms, but instead just put in `ipfs://QmAbCd...1234#MyContractType` and hit \"verify\"",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1360617757/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1360637962",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2618#issuecomment-1360637962",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618",
    "id": 1360637962,
    "node_id": "IC_kwDOGBlvNc5RGbAK",
    "user": {
      "login": "brockelmore",
      "id": 31553173,
      "node_id": "MDQ6VXNlcjMxNTUzMTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31553173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brockelmore",
      "html_url": "https://github.com/brockelmore",
      "followers_url": "https://api.github.com/users/brockelmore/followers",
      "following_url": "https://api.github.com/users/brockelmore/following{/other_user}",
      "gists_url": "https://api.github.com/users/brockelmore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brockelmore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brockelmore/subscriptions",
      "organizations_url": "https://api.github.com/users/brockelmore/orgs",
      "repos_url": "https://api.github.com/users/brockelmore/repos",
      "events_url": "https://api.github.com/users/brockelmore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brockelmore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-21T01:18:39Z",
    "updated_at": "2022-12-21T01:18:39Z",
    "author_association": "MEMBER",
    "body": "alright fine you've sort of convinced me. I think ideally a small group of us cook something up, and present it in a relatively close to finished form to a few groups:\r\n1. Hardhat (maybe bring one of them into the design fold)\r\n2. Sourcify\r\n3. Etherscan\r\n4. Remix\r\n\r\nIdeally, we get large industry buy-in from launch (Ape and Foundry obviously would be onboard from day 1). For projects like remix, sourcify, and hardhat, hopefully we find individuals dedicated enough to making this a reality to go and implement it for them, then we do a strong push to get etherscan to adopt it. Likely need a javascript lib and rust lib to facilitate quick onboarding.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1360637962/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1360666062",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2618#issuecomment-1360666062",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618",
    "id": 1360666062,
    "node_id": "IC_kwDOGBlvNc5RGh3O",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-21T01:48:31Z",
    "updated_at": "2022-12-21T01:48:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Gentlemen, we can use dpack and accretive versioning and solve all these issues.\n\n\n## Accretive Versioning\n\n**Accretive versioning** is based on matching type signatures against a generated ABI V2.\n\nImagine a package manager that ran the test suite of the version you're currently using against the code of the version you'd like to upgrade to, and told you exactly what wasn't going to work.\n\nMore info: https://github.com/sambacha/dappspec/blob/master/abi/src/Accretive_Versioning.md\n\n## dpack\n\n**types** is a collection of named contract types (\"classes\"). Each object has this form:\n\n~~~jsonc\n\"MyToken\": {\n  \"typename\": \"MyToken\"\n  \"artifact\": {\"/\": \"<CID>\"}\n}\n~~~\n\n**typename** is the name of the type (ie, the Solidity class)\nartifacts is a DAG-JSON link to this type's \"artifacts\" json file (output of solc/truffle/hardhat).\nNote that 'typename' is redundant with key used to name this type in this pack. Typenames are mixedcase alphanumeric and underscores, but must start with an uppercase alphabetic.\n\nThe dpack format makes a clear distinction and is very explicit. You cannot name an object the same as a type.\n\nhttps://github.com/dapphub/dpack\n\n- thanks Nikolai, \n\n\nThese can additionally be used via URLs securely,supporting SRI checks, etc.\n\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1360666062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1360670578",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2618#issuecomment-1360670578",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618",
    "id": 1360670578,
    "node_id": "IC_kwDOGBlvNc5RGi9y",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-21T01:52:36Z",
    "updated_at": "2022-12-21T01:52:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Or we can just bundle SafeMath and solve 60% of all dependency issues going forward \n\nMerry Christmas 🎄🎁 ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1360670578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1360871820",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2618#issuecomment-1360871820",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618",
    "id": 1360871820,
    "node_id": "IC_kwDOGBlvNc5RHUGM",
    "user": {
      "login": "fubuloubu",
      "id": 3859395,
      "node_id": "MDQ6VXNlcjM4NTkzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubuloubu",
      "html_url": "https://github.com/fubuloubu",
      "followers_url": "https://api.github.com/users/fubuloubu/followers",
      "following_url": "https://api.github.com/users/fubuloubu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubuloubu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubuloubu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubuloubu/subscriptions",
      "organizations_url": "https://api.github.com/users/fubuloubu/orgs",
      "repos_url": "https://api.github.com/users/fubuloubu/repos",
      "events_url": "https://api.github.com/users/fubuloubu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubuloubu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-21T05:19:59Z",
    "updated_at": "2022-12-21T05:20:34Z",
    "author_association": "NONE",
    "body": "I never quite got dpack, but I think it's likely too simple for the use cases we are describing.\n\nMain goal here is being able to share packages of code and compiled types across projects through a format where repeatable builds are possible without additional user input required (e.g. Source Code Verification)\n\nSolidity code projects are typically too complex to represent using the simplified dpack approach",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1360871820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1525309661",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2618#issuecomment-1525309661",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618",
    "id": 1525309661,
    "node_id": "IC_kwDOGBlvNc5a6mDd",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-27T09:50:47Z",
    "updated_at": "2023-04-27T09:51:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "This new dependency model should come with the ability to separate development dependencies from production dependencies.\r\n\r\nAt the moment, when Foundry installs a repo, it pulls all testing-related dependencies of that repo although end users never need them.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1525309661/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1643530178",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2618#issuecomment-1643530178",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2618",
    "id": 1643530178,
    "node_id": "IC_kwDOGBlvNc5h9kfC",
    "user": {
      "login": "sakulstra",
      "id": 4396533,
      "node_id": "MDQ6VXNlcjQzOTY1MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4396533?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sakulstra",
      "html_url": "https://github.com/sakulstra",
      "followers_url": "https://api.github.com/users/sakulstra/followers",
      "following_url": "https://api.github.com/users/sakulstra/following{/other_user}",
      "gists_url": "https://api.github.com/users/sakulstra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sakulstra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sakulstra/subscriptions",
      "organizations_url": "https://api.github.com/users/sakulstra/orgs",
      "repos_url": "https://api.github.com/users/sakulstra/repos",
      "events_url": "https://api.github.com/users/sakulstra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sakulstra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-20T08:49:15Z",
    "updated_at": "2023-07-20T08:49:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Also solves the following issues:\r\n> - A dependency on git in the users system\r\n> - SSH vs HTTPS submodules debacle\r\n> - Needing to teach users about submodules/providing git support\r\n> - Issues around dependency remappings, since we have greater control of the dependencies\r\n\r\nWhile i don't have any issues with git submodules per se, there are some inherent problems not noted here I started facing on projects with increasing size:\r\n- dependency duplication (& version mis-matches)\r\n- infinite circular dependency loops\r\n- insanely huge repos (caused by the above). It's quite common to have repos with 2gb+\r\n\r\nI'm not completely sold on creating a new package manager of sorts.\r\n\r\nWhat would be the argument against using something existing?\r\nWhile I'm not the biggest fan of node ecosystem, it has been used for years now via hardhat etc. Perhaps it would be reasonable to just adopt using [npm](https://github.com/foundry-rs/forge-std/pull/322)?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1643530178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
