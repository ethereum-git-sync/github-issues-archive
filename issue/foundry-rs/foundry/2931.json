{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2931",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2931/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2931/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2931/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2931",
  "id": 1350322949,
  "node_id": "I_kwDOGBlvNc5QfEsF",
  "number": 2931,
  "title": "Impersonating account on forked mode submitting transaction reverts with `RejectCallerWithCode`",
  "user": {
    "login": "sunwrobert",
    "id": 6511174,
    "node_id": "MDQ6VXNlcjY1MTExNzQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6511174?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sunwrobert",
    "html_url": "https://github.com/sunwrobert",
    "followers_url": "https://api.github.com/users/sunwrobert/followers",
    "following_url": "https://api.github.com/users/sunwrobert/following{/other_user}",
    "gists_url": "https://api.github.com/users/sunwrobert/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sunwrobert/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sunwrobert/subscriptions",
    "organizations_url": "https://api.github.com/users/sunwrobert/orgs",
    "repos_url": "https://api.github.com/users/sunwrobert/repos",
    "events_url": "https://api.github.com/users/sunwrobert/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sunwrobert/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 4077188949,
      "node_id": "LA_kwDOGBlvNc7zBPdV",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-anvil",
      "name": "C-anvil",
      "color": "5319E7",
      "default": false,
      "description": "Command: anvil"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-08-25T04:56:48Z",
  "updated_at": "2022-08-25T12:46:03Z",
  "closed_at": "2022-08-25T12:46:03Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nAnvil\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [ ] Foundry\r\n- [x] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\n0.1.0 (5910e7b 2022-08-25T00:39:34.671729Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nanvil\r\n\r\n### Operating System\r\n\r\n_No response_\r\n\r\n### Describe the bug\r\n\r\nHey forge team, back at it again.\r\n\r\nI think this is one of the last major bugs that we've noticed in our tests.\r\n\r\nIt seems that submitting a transaction while impersonating account doesn't work in forked mode. At least, when run with the same exact configuration on Hardhat, it works, but with Anvil, it rejects with `RejectCallerWithCode`\r\n\r\nThis is the anvil command I'm running: \r\n```\r\nanvil --fork-url=FORKING_URL --fork-block-number=15187944 --port=8545 --block-time=5 4000 4\r\n```\r\n\r\nAnd this is the hardhat config I'm comparing it to:\r\n\r\n```\r\n// hardhat.config.ts\r\nimport { HardhatUserConfig } from 'hardhat/config';\r\nimport '@nomicfoundation/hardhat-toolbox';\r\n\r\nconst config: HardhatUserConfig = {\r\n  solidity: '0.8.9',\r\n  networks: {\r\n    hardhat: {\r\n      chainId: 1,\r\n      forking: {\r\n        url: process.env.FORKING_URL,\r\n        blockNumber: 15347924, // https://etherscan.io/block/15347924\r\n      },\r\n      mining: {\r\n        interval: 5000,\r\n      },\r\n    },\r\n  },\r\n  paths: {\r\n    cache: './cache/ethereum',\r\n  },\r\n};\r\n\r\nexport default config;\r\n```\r\n\r\nAnd this is repro-able code. All it does is try to impersonate a WETH holder and transfer some WETH to an account.\r\n\r\n```\r\nimport { Contract, providers, utils, ethers } from 'ethers';\r\n\r\nconst TOKEN_CONFIGS = {\r\n  WETH: {\r\n    // https://etherscan.io/token/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2?a=0x2f0b23f53734252bda2277357e97e1517d6b042a\r\n    address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\r\n    decimals: 18,\r\n    tokenHolder: '0x2f0b23f53734252bda2277357e97e1517d6b042a',\r\n  },\r\n};\r\n\r\ntype SetBalanceParams = {\r\n  symbol: 'WETH';\r\n  amount: string;\r\n  address: string;\r\n  provider: providers.JsonRpcProvider;\r\n};\r\n\r\nconst setBalance = async ({\r\n  symbol,\r\n  amount,\r\n  address: tokenReceiver,\r\n  provider,\r\n}: SetBalanceParams) => {\r\n  const tokenConfig = TOKEN_CONFIGS[symbol];\r\n\r\n  const { address: contractAddress, decimals, tokenHolder } = tokenConfig;\r\n\r\n  const contractAbi = [\r\n    // Get the account balance\r\n    'function balanceOf(address) view returns (uint)',\r\n\r\n    // Send some of your tokens to someone else\r\n    'function transfer(address to, uint amount)',\r\n  ];\r\n  const contract = new Contract(contractAddress, contractAbi, provider);\r\n\r\n  // Fund token holder so they can make the transaction\r\n  await provider.send('hardhat_setBalance', [\r\n    tokenHolder,\r\n    utils.parseEther('1.0').toHexString().replace('0x0', '0x'),\r\n  ]);\r\n\r\n  // Impersonate the token holder\r\n  await provider.send('anvil_impersonateAccount', [tokenHolder]);\r\n\r\n  // Get the token holder signer\r\n  const signer = await provider.getSigner(tokenHolder);\r\n\r\n  // Connect signed with the contract\r\n  const contractWithSigner = contract.connect(signer);\r\n\r\n  // Tranfer funds\r\n  const unitAmount = utils.parseUnits(amount, decimals);\r\n  await contractWithSigner.transfer(tokenReceiver, unitAmount);\r\n\r\n  await provider.send('anvil_stopImpersonatingAccount', [tokenHolder]);\r\n};\r\n\r\nasync function main() {\r\n  const provider = new ethers.providers.JsonRpcProvider();\r\n\r\n  await setBalance({\r\n    symbol: 'WETH',\r\n    amount: '1',\r\n    address: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\r\n    provider,\r\n  });\r\n}\r\n\r\n// We recommend this pattern to be able to use async/await everywhere\r\n// and properly handle errors.\r\nmain().catch((error) => {\r\n  console.error(error);\r\n  process.exitCode = 1;\r\n});\r\n```\r\n\r\nTo repro:\r\n1. Launch anvil in backgronud\r\n2. Start a new hardhat project with `scripts/test.ts` as the TS code I pasted above\r\n3. Run `npx hardhat scripts/test.ts`\r\n\r\nThese are the logs I get on Anvil:\r\n```\r\nanvil_setBalance\r\neth_chainId\r\nanvil_impersonateAccount\r\neth_blockNumber\r\neth_chainId\r\neth_chainId\r\neth_estimateGas\r\n\r\n    Block Number: 15187956\r\n    Block Hash: 0x4477b3a21f37cb25e149c747c95c8f74e00621b0f8d97f27df88f25a0fd5391d\r\n    Block Time: \"Thu, 21 Jul 2022 19:50:49 +0000\"\r\n\r\neth_sendTransaction\r\neth_chainId\r\neth_getTransactionByHash\r\nanvil_stopImpersonatingAccount\r\n\r\n    Transaction: 0x26c447de2b29a123314dfc81f4c7e1bd57b1cb5915b5f7deaceb6761481221f9\r\n    Gas used: 0\r\n    Error: failed due to RejectCallerWithCode\r\n\r\n    Block Number: 15187957\r\n    Block Hash: 0x1d0e669412bb9d26801eb1e2ab7ad6d535eb238fa656f67a9ef9a7a4a59f7763\r\n    Block Time: \"Thu, 21 Jul 2022 19:50:54 +0000\"\r\n```\r\n\r\nAnd these are the logs I get on Hardhat:\r\n```\r\nMined empty block range #15347925 to #15347928\r\nhardhat_setBalance\r\neth_chainId\r\nhardhat_impersonateAccount\r\neth_blockNumber\r\neth_chainId (2)\r\neth_estimateGas\r\neth_sendTransaction\r\neth_chainId\r\neth_getTransactionByHash\r\nhardhat_stopImpersonatingAccount\r\nMined block #15347929\r\n  Block: 0x9d04a732b5d7b80d9f90e0b7d53e063b87d0612dd3f596a2d43ee95d97211954\r\n    Base fee: 8453171509\r\n    Transaction:     0x660e4d8fa6d070d3f6ad42ae943b73b86cb236f9290ade9e5d00caa600c0ead2\r\n      Contract call: <UnrecognizedContract>\r\n      From:          0x2f0b23f53734252bda2277357e97e1517d6b042a\r\n      To:            0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\r\n      Value:         0 ETH\r\n      Gas used:      51594 of 51594\r\n```\r\n",
  "closed_by": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2931/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2931/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1227135659",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2931#issuecomment-1227135659",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2931",
    "id": 1227135659,
    "node_id": "IC_kwDOGBlvNc5JJJqr",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-25T11:29:41Z",
    "updated_at": "2022-08-25T11:29:41Z",
    "author_association": "MEMBER",
    "body": "there was a recent fix for this https://github.com/foundry-rs/foundry/pull/2696\r\n\r\nbut there's probably a regression with the latest revm bump.\r\n\r\ninvestigating",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1227135659/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1227175508",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2931#issuecomment-1227175508",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2931",
    "id": 1227175508,
    "node_id": "IC_kwDOGBlvNc5JJTZU",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-25T12:12:43Z",
    "updated_at": "2022-08-25T12:12:43Z",
    "author_association": "MEMBER",
    "body": "ah I see what's up,\r\n\r\nthere's a race condition due to interval mining.\r\n\r\n```ts\r\n  // Tranfer funds\r\n  const unitAmount = utils.parseUnits(amount, decimals);\r\n  await contractWithSigner.transfer(tokenReceiver, unitAmount);\r\n\r\n  await provider.send('anvil_stopImpersonatingAccount', [tokenHolder]);\r\n```\r\n\r\nthis will send a tx and stop impersonating, but doesn't wait for the receipt, right?\r\n\r\nso `anvil_stopImpersonatingAccount` is executed before the tx is executed, which resets the contract's code and now the evm fails with `RejectCallerWithCode`.\r\n\r\nperhaps we should only execute `anvil_stopImpersonatingAccount` after the pending block is mined?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1227175508/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1227186732",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2931#issuecomment-1227186732",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2931",
    "id": 1227186732,
    "node_id": "IC_kwDOGBlvNc5JJWIs",
    "user": {
      "login": "sunwrobert",
      "id": 6511174,
      "node_id": "MDQ6VXNlcjY1MTExNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6511174?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sunwrobert",
      "html_url": "https://github.com/sunwrobert",
      "followers_url": "https://api.github.com/users/sunwrobert/followers",
      "following_url": "https://api.github.com/users/sunwrobert/following{/other_user}",
      "gists_url": "https://api.github.com/users/sunwrobert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sunwrobert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sunwrobert/subscriptions",
      "organizations_url": "https://api.github.com/users/sunwrobert/orgs",
      "repos_url": "https://api.github.com/users/sunwrobert/repos",
      "events_url": "https://api.github.com/users/sunwrobert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sunwrobert/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-25T12:23:35Z",
    "updated_at": "2022-08-25T12:28:01Z",
    "author_association": "NONE",
    "body": "ah, let me try doing `.wait` and see if that fixes it then. Thanks for the pointer!\r\n\r\nEDIT: Yup, that seems to have worked. Feel free to close, but for DX, it doesn't seem that obvious to know to `.wait` the tx before stopping impersonating.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1227186732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1227205968",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2931#issuecomment-1227205968",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2931",
    "id": 1227205968,
    "node_id": "IC_kwDOGBlvNc5JJa1Q",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-25T12:42:05Z",
    "updated_at": "2022-08-25T12:42:05Z",
    "author_association": "MEMBER",
    "body": "investigated this a bit, and it's not that trivial to keep track of pending impersonated tx and only reset the code if no more tx are pending since there could be situations where a tx is stuck in the mempool or mined after a new tx that would need the contract's code...\r\n\r\nso imo we should keep this behavior as it is but document this better",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1227205968/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
