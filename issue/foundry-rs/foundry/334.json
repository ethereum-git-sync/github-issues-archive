{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/334",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/334/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/334/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/334/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/334",
  "id": 1090796865,
  "node_id": "I_kwDOGBlvNc5BBD1B",
  "number": 334,
  "title": "feat: `cast` erc20 / erc721 aliases",
  "user": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-12-29T23:37:28Z",
  "updated_at": "2022-01-06T11:12:47Z",
  "closed_at": "2022-01-06T11:12:46Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Right now, to transfer tokens you need to do `cast send \"transfer(address,uint256)\" ...`.\r\n\r\nThis is a bit unhandy, when we could have aliases to these commands for easier access.",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/334/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/334/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1002997891",
    "html_url": "https://github.com/foundry-rs/foundry/issues/334#issuecomment-1002997891",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/334",
    "id": 1002997891,
    "node_id": "IC_kwDOGBlvNc47yIiD",
    "user": {
      "login": "joshieDo",
      "id": 93316087,
      "node_id": "U_kgDOBY_j9w",
      "avatar_url": "https://avatars.githubusercontent.com/u/93316087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshieDo",
      "html_url": "https://github.com/joshieDo",
      "followers_url": "https://api.github.com/users/joshieDo/followers",
      "following_url": "https://api.github.com/users/joshieDo/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshieDo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshieDo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshieDo/subscriptions",
      "organizations_url": "https://api.github.com/users/joshieDo/orgs",
      "repos_url": "https://api.github.com/users/joshieDo/repos",
      "events_url": "https://api.github.com/users/joshieDo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshieDo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-30T11:58:03Z",
    "updated_at": "2021-12-30T12:05:53Z",
    "author_association": "COLLABORATOR",
    "body": "We could expand it by using the primitives from https://github.com/gakonst/foundry/issues/331.\r\n\r\n`cast send transfer 0x123...123 12 CONTRACT_ADDRESS`\r\n\r\n1. Gets the contract ABI from etherscan:\r\n    1. Find the function signature with the name `transfer`.\r\n    2. Match cli arguments to the function arguments\r\n2. If the contract is not verified, then try to build the function signature from the name + the data types given by `into_tokens()`. Or even taking a few reasonable guesses (`uint` is more used than `int`, and so on). (Could even bruteforce the function signature given the names and arguments lol)\r\n\r\n`cast send \"transfer(address,uint256)\" 0x123...123 12 CONTRACT_ADDRESS`\r\n\r\nCurrent behaviour. Could be distinguished just by the presence of `(` in the first argument.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1002997891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006250322",
    "html_url": "https://github.com/foundry-rs/foundry/issues/334#issuecomment-1006250322",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/334",
    "id": 1006250322,
    "node_id": "IC_kwDOGBlvNc47-ilS",
    "user": {
      "login": "ncitron",
      "id": 16858330,
      "node_id": "MDQ6VXNlcjE2ODU4MzMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16858330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncitron",
      "html_url": "https://github.com/ncitron",
      "followers_url": "https://api.github.com/users/ncitron/followers",
      "following_url": "https://api.github.com/users/ncitron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncitron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncitron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncitron/subscriptions",
      "organizations_url": "https://api.github.com/users/ncitron/orgs",
      "repos_url": "https://api.github.com/users/ncitron/repos",
      "events_url": "https://api.github.com/users/ncitron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncitron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-06T03:11:57Z",
    "updated_at": "2022-01-06T03:31:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd like to give this a shot using @joshieDo's method.\r\n\r\nI think the flow would end up looking like this:\r\n1. Fetch ABI from etherscan\r\n2. Match provided function name to a function from the ABI\r\n        i. If there are multiple overloaded functions with the same name, attempt to match using number of arguments and implied argument types. If multiple functions still match, enter into an \"interactive\" mode that allows the user to select from a list of function signatures.\r\n3. Generate signature from the ABI for the matched function and send the tx just like `cast send`\r\n\r\nOne thing I am not sure of is how to differentiate between a normal `cast send` and one of these ones? A quick solution would be to name the command something different such as `cast simple-send`.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006250322/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006488172",
    "html_url": "https://github.com/foundry-rs/foundry/issues/334#issuecomment-1006488172",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/334",
    "id": 1006488172,
    "node_id": "IC_kwDOGBlvNc47_cps",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-06T11:12:46Z",
    "updated_at": "2022-01-06T11:12:46Z",
    "author_association": "MEMBER",
    "body": "#390 I think satisfies this well enough, the biggest pain was the full signature, writing the name should be sufficient. Closing, unless anybody feels like we should alias more aggressively.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006488172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
