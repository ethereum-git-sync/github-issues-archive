{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5106",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5106/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5106/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5106/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5106",
  "id": 1740064038,
  "node_id": "I_kwDOGBlvNc5nt0Um",
  "number": 5106,
  "title": "Adding a utility function similar to EthersJS formatEther and formatUnits function",
  "user": {
    "login": "Sz0x",
    "id": 101088041,
    "node_id": "U_kgDOBgZ7KQ",
    "avatar_url": "https://avatars.githubusercontent.com/u/101088041?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Sz0x",
    "html_url": "https://github.com/Sz0x",
    "followers_url": "https://api.github.com/users/Sz0x/followers",
    "following_url": "https://api.github.com/users/Sz0x/following{/other_user}",
    "gists_url": "https://api.github.com/users/Sz0x/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Sz0x/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Sz0x/subscriptions",
    "organizations_url": "https://api.github.com/users/Sz0x/orgs",
    "repos_url": "https://api.github.com/users/Sz0x/repos",
    "events_url": "https://api.github.com/users/Sz0x/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Sz0x/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-06-04T02:05:04Z",
  "updated_at": "2023-10-05T15:20:37Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nIn the EthersJS library, there is a function called `formatEther` that takes in a value in wei (usually in the form of either a string or Big Number) and outputs it in ether format.\r\n\r\nSimilarly, the `formatUnits` function does the same thing, but takes an optional second parameter that specifies the number of decimals.\r\n\r\nThis is helpful when logging the balances of contracts and wallets to make it easier to read\r\n\r\n### Additional context\r\n\r\nThe utility function could be as simple as the following:\r\n\r\n```solidity\r\n\r\n    function formatEther(uint256 amount) internal virtual returns (uint256) {\r\n        return amount / 1 ether;\r\n    }\r\n\r\n    function formatUnits(uint256 amount, uint256 decimals) internal virtual returns (uint256) {\r\n        return amount / (10 ** decimals);\r\n    }\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5106/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5106/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1589698767",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5106#issuecomment-1589698767",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5106",
    "id": 1589698767,
    "node_id": "IC_kwDOGBlvNc5ewODP",
    "user": {
      "login": "tynes",
      "id": 6626818,
      "node_id": "MDQ6VXNlcjY2MjY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6626818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tynes",
      "html_url": "https://github.com/tynes",
      "followers_url": "https://api.github.com/users/tynes/followers",
      "following_url": "https://api.github.com/users/tynes/following{/other_user}",
      "gists_url": "https://api.github.com/users/tynes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tynes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tynes/subscriptions",
      "organizations_url": "https://api.github.com/users/tynes/orgs",
      "repos_url": "https://api.github.com/users/tynes/repos",
      "events_url": "https://api.github.com/users/tynes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tynes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-13T17:00:45Z",
    "updated_at": "2023-06-13T17:00:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "This seems more like a `forge-std` thing. `cast --to-unit` has this ability on the CLI",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1589698767/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1589711769",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5106#issuecomment-1589711769",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5106",
    "id": 1589711769,
    "node_id": "IC_kwDOGBlvNc5ewROZ",
    "user": {
      "login": "Evalir",
      "id": 26014927,
      "node_id": "MDQ6VXNlcjI2MDE0OTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evalir",
      "html_url": "https://github.com/Evalir",
      "followers_url": "https://api.github.com/users/Evalir/followers",
      "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
      "organizations_url": "https://api.github.com/users/Evalir/orgs",
      "repos_url": "https://api.github.com/users/Evalir/repos",
      "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evalir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-13T17:09:26Z",
    "updated_at": "2023-06-13T17:09:26Z",
    "author_association": "MEMBER",
    "body": "yep agreedâ€”this seems useful but more for `forge-std`. There's already similar utils on `cast`. @mds1 wdyt about transferring this issue to forge-std?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1589711769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1589721658",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5106#issuecomment-1589721658",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5106",
    "id": 1589721658,
    "node_id": "IC_kwDOGBlvNc5ewTo6",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-13T17:17:16Z",
    "updated_at": "2023-06-13T17:17:30Z",
    "author_association": "COLLABORATOR",
    "body": "Since this is mainly for logging, my suggestion would be to avoid adding a cheat here or in forge-std and leverage the format specifiers that we already support: https://github.com/foundry-rs/foundry/blob/b988ae49b2a0dc3c1e43c736f4204080630d113f/macros/src/fmt/console_fmt.rs#L165-L190\r\n\r\n```solidity\r\ncontract Test9 is Test {\r\n  function test_consoleFmt() external {\r\n    uint256 x = 1e18;\r\n    console2.log(\"x is %s\", x);\r\n    console2.log(\"x is %i\", x);\r\n    console2.log(\"x is %x\", x);\r\n    console2.log(\"x is %e\", x);\r\n  }\r\n}\r\n\r\n// Running 1 test for test/9_consoleFmt.t.sol:Test9\r\n// [PASS] test_consoleFmt() (gas: 6623)\r\n// Logs:\r\n//   x is 1000000000000000000\r\n//   x is 1000000000000000000\r\n//   x is 0xde0b6b3a7640000\r\n//   x is 1e18\r\n```\r\n\r\nWe already have `%e` for exponential, so I'd suggest:\r\n- support `%ne`, where `n` is the exponent, e.g. `%17e` would make the above log `x is 10e17`\r\n- support `%nf`, where the `n` is what to divide by for the decimals, so 1234 logged as `%2f logs `12.34` (the `f` is for float)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1589721658/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1741981744",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5106#issuecomment-1741981744",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5106",
    "id": 1741981744,
    "node_id": "IC_kwDOGBlvNc5n1Igw",
    "user": {
      "login": "Tudmotu",
      "id": 506487,
      "node_id": "MDQ6VXNlcjUwNjQ4Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/506487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tudmotu",
      "html_url": "https://github.com/Tudmotu",
      "followers_url": "https://api.github.com/users/Tudmotu/followers",
      "following_url": "https://api.github.com/users/Tudmotu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tudmotu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tudmotu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tudmotu/subscriptions",
      "organizations_url": "https://api.github.com/users/Tudmotu/orgs",
      "repos_url": "https://api.github.com/users/Tudmotu/repos",
      "events_url": "https://api.github.com/users/Tudmotu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tudmotu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-01T06:52:16Z",
    "updated_at": "2023-10-01T06:54:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I might be misunderstanding the request here, but `ethers::utils::format_units` outputs a `string`, not a `uint`.\r\nAnd simply dividing a `uint` won't preserve decimal precision, so `0.1 ether / 1 ether` will just revert.\r\n\r\nUsing `console2` is also not ideal IMO because:\r\n1. Sometimes you wanna compose messages before logging\r\n2. `console2` only logs at the end of a script, while sometimes it's useful to write logs into a file for real-time logging\r\n3. Can't rule out the possibility it could be useful in non-logging scenarios\r\n\r\n@Sz0x I have an implementation of a `vm.formatUnits` cheatcode on my own Foundry fork. If you have your own fork as well, you can copy the implementation from my branch.\r\n\r\nAnd for Foundry team â€” it seems this is not something you'd want to merge but if you change your mind let me know and I'll happily open a PR :slightly_smiling_face: \r\nhttps://github.com/Tudmotu/foundry/compare/feature/vm.time...Tudmotu:foundry:feature/vm.formatUnits?expand=1",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1741981744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1749120307",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5106#issuecomment-1749120307",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5106",
    "id": 1749120307,
    "node_id": "IC_kwDOGBlvNc5oQXUz",
    "user": {
      "login": "Tudmotu",
      "id": 506487,
      "node_id": "MDQ6VXNlcjUwNjQ4Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/506487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tudmotu",
      "html_url": "https://github.com/Tudmotu",
      "followers_url": "https://api.github.com/users/Tudmotu/followers",
      "following_url": "https://api.github.com/users/Tudmotu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tudmotu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tudmotu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tudmotu/subscriptions",
      "organizations_url": "https://api.github.com/users/Tudmotu/orgs",
      "repos_url": "https://api.github.com/users/Tudmotu/repos",
      "events_url": "https://api.github.com/users/Tudmotu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tudmotu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-05T15:20:36Z",
    "updated_at": "2023-10-05T15:20:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mattsse WDYT ?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1749120307/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
