{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6270",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6270/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6270/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6270/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6270",
  "id": 1986253202,
  "node_id": "I_kwDOGBlvNc52Y9GS",
  "number": 6270,
  "title": "feature(cheatcode): `vm.predictContractAddr()`; pre-determine next deployed addresses",
  "user": {
    "login": "Anish-Agnihotri",
    "id": 4398624,
    "node_id": "MDQ6VXNlcjQzOTg2MjQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4398624?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Anish-Agnihotri",
    "html_url": "https://github.com/Anish-Agnihotri",
    "followers_url": "https://api.github.com/users/Anish-Agnihotri/followers",
    "following_url": "https://api.github.com/users/Anish-Agnihotri/following{/other_user}",
    "gists_url": "https://api.github.com/users/Anish-Agnihotri/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Anish-Agnihotri/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Anish-Agnihotri/subscriptions",
    "organizations_url": "https://api.github.com/users/Anish-Agnihotri/orgs",
    "repos_url": "https://api.github.com/users/Anish-Agnihotri/repos",
    "events_url": "https://api.github.com/users/Anish-Agnihotri/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Anish-Agnihotri/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394235,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjM1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0052CC",
      "default": true,
      "description": "Good for newcomers"
    },
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "qiweiii",
    "id": 32790369,
    "node_id": "MDQ6VXNlcjMyNzkwMzY5",
    "avatar_url": "https://avatars.githubusercontent.com/u/32790369?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qiweiii",
    "html_url": "https://github.com/qiweiii",
    "followers_url": "https://api.github.com/users/qiweiii/followers",
    "following_url": "https://api.github.com/users/qiweiii/following{/other_user}",
    "gists_url": "https://api.github.com/users/qiweiii/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qiweiii/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qiweiii/subscriptions",
    "organizations_url": "https://api.github.com/users/qiweiii/orgs",
    "repos_url": "https://api.github.com/users/qiweiii/repos",
    "events_url": "https://api.github.com/users/qiweiii/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qiweiii/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "qiweiii",
      "id": 32790369,
      "node_id": "MDQ6VXNlcjMyNzkwMzY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/32790369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qiweiii",
      "html_url": "https://github.com/qiweiii",
      "followers_url": "https://api.github.com/users/qiweiii/followers",
      "following_url": "https://api.github.com/users/qiweiii/following{/other_user}",
      "gists_url": "https://api.github.com/users/qiweiii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qiweiii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qiweiii/subscriptions",
      "organizations_url": "https://api.github.com/users/qiweiii/orgs",
      "repos_url": "https://api.github.com/users/qiweiii/repos",
      "events_url": "https://api.github.com/users/qiweiii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qiweiii/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-11-09T19:17:43Z",
  "updated_at": "2023-11-14T15:14:54Z",
  "closed_at": "2023-11-14T12:19:19Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nWould be useful to have a cheatcode that can pre-compute future contract deployment addresses based on deployer address and nonce:\r\n\r\n```solidity\r\nfunction predictContractAddr(address deployer, uint256 nonce) external returns (address);\r\n```\r\n\r\nFrequently run into use-cases where the contract ordering is dependent and I need to serialize some address/call for a future-deployed contract.\r\n\n\n### Additional context\n\nToday, I just copy-paste @k06a's handy [`addressFrom` function](https://ethereum.stackexchange.com/questions/24248/how-to-calculate-an-ethereum-contracts-address-during-its-creation-using-the-so) into a test-suite library.\r\n\r\n```solidity\r\nfunction addressFrom(address _origin, uint _nonce) public pure returns (address) {\r\n    bytes memory data;\r\n    if (_nonce == 0x00)          data = abi.encodePacked(bytes1(0xd6), bytes1(0x94), _origin, bytes1(0x80));\r\n    else if (_nonce <= 0x7f)     data = abi.encodePacked(bytes1(0xd6), bytes1(0x94), _origin, uint8(_nonce));\r\n    else if (_nonce <= 0xff)     data = abi.encodePacked(bytes1(0xd7), bytes1(0x94), _origin, bytes1(0x81), uint8(_nonce));\r\n    else if (_nonce <= 0xffff)   data = abi.encodePacked(bytes1(0xd8), bytes1(0x94), _origin, bytes1(0x82), uint16(_nonce));\r\n    else if (_nonce <= 0xffffff) data = abi.encodePacked(bytes1(0xd9), bytes1(0x94), _origin, bytes1(0x83), uint24(_nonce));\r\n    else                         data = abi.encodePacked(bytes1(0xda), bytes1(0x94), _origin, bytes1(0x84), uint32(_nonce));\r\n    return address(uint160(uint256(keccak256(data))));\r\n}\r\n```",
  "closed_by": {
    "login": "DaniPopes",
    "id": 57450786,
    "node_id": "MDQ6VXNlcjU3NDUwNzg2",
    "avatar_url": "https://avatars.githubusercontent.com/u/57450786?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/DaniPopes",
    "html_url": "https://github.com/DaniPopes",
    "followers_url": "https://api.github.com/users/DaniPopes/followers",
    "following_url": "https://api.github.com/users/DaniPopes/following{/other_user}",
    "gists_url": "https://api.github.com/users/DaniPopes/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/DaniPopes/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/DaniPopes/subscriptions",
    "organizations_url": "https://api.github.com/users/DaniPopes/orgs",
    "repos_url": "https://api.github.com/users/DaniPopes/repos",
    "events_url": "https://api.github.com/users/DaniPopes/events{/privacy}",
    "received_events_url": "https://api.github.com/users/DaniPopes/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6270/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6270/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1806577631",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6270#issuecomment-1806577631",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6270",
    "id": 1806577631,
    "node_id": "IC_kwDOGBlvNc5rri_f",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-11T00:03:01Z",
    "updated_at": "2023-11-11T00:03:01Z",
    "author_association": "MEMBER",
    "body": "sgtm, we can do the same for create2 with salt.\r\nthis is just a single call in rust",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1806577631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1807146457",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6270#issuecomment-1807146457",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6270",
    "id": 1807146457,
    "node_id": "IC_kwDOGBlvNc5rtt3Z",
    "user": {
      "login": "qiweiii",
      "id": 32790369,
      "node_id": "MDQ6VXNlcjMyNzkwMzY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/32790369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qiweiii",
      "html_url": "https://github.com/qiweiii",
      "followers_url": "https://api.github.com/users/qiweiii/followers",
      "following_url": "https://api.github.com/users/qiweiii/following{/other_user}",
      "gists_url": "https://api.github.com/users/qiweiii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qiweiii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qiweiii/subscriptions",
      "organizations_url": "https://api.github.com/users/qiweiii/orgs",
      "repos_url": "https://api.github.com/users/qiweiii/repos",
      "events_url": "https://api.github.com/users/qiweiii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qiweiii/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-12T14:36:37Z",
    "updated_at": "2023-11-12T14:36:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi, I would like to try implement this! Any hint on which category I should put this cheatcode under?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1807146457/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1807187525",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6270#issuecomment-1807187525",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6270",
    "id": 1807187525,
    "node_id": "IC_kwDOGBlvNc5rt35F",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-12T17:16:30Z",
    "updated_at": "2023-11-12T17:16:30Z",
    "author_association": "COLLABORATOR",
    "body": "Thanks @qiweiii, I’ll assign you\r\n\r\nWe should match the function names and signatures of the forge-std methods that do this: https://github.com/foundry-rs/forge-std/blob/37a37ab73364d6644bfe11edf88a07880f99bd56/src/StdUtils.sol#L97-L134\r\n\r\nAdditionally, we should PR in a warning event emission to the existing forge-std methods that they’re deprecated in favor of the native cheats ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1807187525/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1810243207",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6270#issuecomment-1810243207",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6270",
    "id": 1810243207,
    "node_id": "IC_kwDOGBlvNc5r5h6H",
    "user": {
      "login": "qiweiii",
      "id": 32790369,
      "node_id": "MDQ6VXNlcjMyNzkwMzY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/32790369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qiweiii",
      "html_url": "https://github.com/qiweiii",
      "followers_url": "https://api.github.com/users/qiweiii/followers",
      "following_url": "https://api.github.com/users/qiweiii/following{/other_user}",
      "gists_url": "https://api.github.com/users/qiweiii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qiweiii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qiweiii/subscriptions",
      "organizations_url": "https://api.github.com/users/qiweiii/orgs",
      "repos_url": "https://api.github.com/users/qiweiii/repos",
      "events_url": "https://api.github.com/users/qiweiii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qiweiii/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-14T13:52:11Z",
    "updated_at": "2023-11-14T13:52:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is one more task to do😅\r\n\r\n> Additionally, we should PR in a warning event emission to the existing forge-std methods that they’re deprecated in favor of the native cheats\r\n\r\nDoes this mean do something like this? https://github.com/foundry-rs/forge-std/blob/37a37ab73364d6644bfe11edf88a07880f99bd56/src/StdCheats.sol#L700",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1810243207/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1810429601",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6270#issuecomment-1810429601",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6270",
    "id": 1810429601,
    "node_id": "IC_kwDOGBlvNc5r6Pah",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-14T15:14:54Z",
    "updated_at": "2023-11-14T15:14:54Z",
    "author_association": "COLLABORATOR",
    "body": "Yes, just like that! So the forge-std PR will need that change + an update to `Vm.sol` to add the new cheats. I think `Vm.sol` should be organized roughly the same as the foundry cheat definitions, so choose whatever location within `VmSafe` you think makes the most sense and I can always move it if needed",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1810429601/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
