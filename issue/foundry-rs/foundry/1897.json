{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1897",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1897/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1897/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1897/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1897",
  "id": 1266441120,
  "node_id": "I_kwDOGBlvNc5LfFug",
  "number": 1897,
  "title": "Cheatcode to expect ANY revert",
  "user": {
    "login": "vdrg",
    "id": 3252614,
    "node_id": "MDQ6VXNlcjMyNTI2MTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3252614?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vdrg",
    "html_url": "https://github.com/vdrg",
    "followers_url": "https://api.github.com/users/vdrg/followers",
    "following_url": "https://api.github.com/users/vdrg/following{/other_user}",
    "gists_url": "https://api.github.com/users/vdrg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vdrg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vdrg/subscriptions",
    "organizations_url": "https://api.github.com/users/vdrg/orgs",
    "repos_url": "https://api.github.com/users/vdrg/repos",
    "events_url": "https://api.github.com/users/vdrg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vdrg/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    },
    {
      "id": 3759719790,
      "node_id": "LA_kwDOGBlvNc7gGMVu",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-low",
      "name": "P-low",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: low"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-06-09T17:23:07Z",
  "updated_at": "2022-06-11T15:45:29Z",
  "closed_at": "2022-06-10T14:12:36Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nCurrently, `vm.expectRevert()` expects a revert with no return data. IMO this is unintuitive, to me `expectRevert` should pass with any revert data, and if you want to test empty return data you should do `expectRevert(\"\")`.\r\n\r\nThere is currently no way to expect a revert without specifying the exact return data. This is inconvenient, as errors are not always part of a contract's specification.\r\n\r\nAnother alternative would be to introduce a different cheatcode just for this, but feels unnecessary. For future iterations, I believe a more intuitive api could be:\r\n\r\n```\r\n    // Expects any revert\r\n    function expectRevert() external;\r\n\r\n    // Expect specific return data\r\n    function expectRevertWith(bytes calldata) external;\r\n    function expectRevertWith(bytes4) external;\r\n```\r\n\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": {
    "login": "vdrg",
    "id": 3252614,
    "node_id": "MDQ6VXNlcjMyNTI2MTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3252614?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vdrg",
    "html_url": "https://github.com/vdrg",
    "followers_url": "https://api.github.com/users/vdrg/followers",
    "following_url": "https://api.github.com/users/vdrg/following{/other_user}",
    "gists_url": "https://api.github.com/users/vdrg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vdrg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vdrg/subscriptions",
    "organizations_url": "https://api.github.com/users/vdrg/orgs",
    "repos_url": "https://api.github.com/users/vdrg/repos",
    "events_url": "https://api.github.com/users/vdrg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vdrg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1897/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1897/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1151403510",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1897#issuecomment-1151403510",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1897",
    "id": 1151403510,
    "node_id": "IC_kwDOGBlvNc5EoQX2",
    "user": {
      "login": "vdrg",
      "id": 3252614,
      "node_id": "MDQ6VXNlcjMyNTI2MTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3252614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vdrg",
      "html_url": "https://github.com/vdrg",
      "followers_url": "https://api.github.com/users/vdrg/followers",
      "following_url": "https://api.github.com/users/vdrg/following{/other_user}",
      "gists_url": "https://api.github.com/users/vdrg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vdrg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vdrg/subscriptions",
      "organizations_url": "https://api.github.com/users/vdrg/orgs",
      "repos_url": "https://api.github.com/users/vdrg/repos",
      "events_url": "https://api.github.com/users/vdrg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vdrg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-09T17:28:11Z",
    "updated_at": "2022-06-09T20:55:30Z",
    "author_association": "NONE",
    "body": "I saw that this is mentioned in: https://github.com/foundry-rs/foundry/issues/876\r\n\r\n> 11. expectRevert with no bytes to assert that any revert should happen: https://github.com/foundry-rs/foundry/issues/885\r\n\r\nAnd it is marked as completed, however that is not correct. The issue it links to is actually the complete opposite of this (making the `expectRevert` with no arguments expect empty data).",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1151403510/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1152181787",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1897#issuecomment-1152181787",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1897",
    "id": 1152181787,
    "node_id": "IC_kwDOGBlvNc5ErOYb",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-10T09:48:32Z",
    "updated_at": "2022-06-10T09:49:45Z",
    "author_association": "MEMBER",
    "body": "The issue with `expectRevert(\"\")` denoting reverting with no data is that it is actually expecting an empty string, which has attached data even if there are no characters present (e.g. the length of the string), so that would break that use case.\r\n\r\nI'd strongly advise that reverts are tested strictly in order to accurately test smart contract behavior.\r\n\r\nAs for this feature, I think we would need a new cheatcode.\r\n\r\nEdit: Re #876 - are you sure `vm.expectRevert(bytes(\"\"))` does not work as intended? Note that this is different than `vm.expectRevert(\"\")`",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1152181787/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1152406415",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1897#issuecomment-1152406415",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1897",
    "id": 1152406415,
    "node_id": "IC_kwDOGBlvNc5EsFOP",
    "user": {
      "login": "vdrg",
      "id": 3252614,
      "node_id": "MDQ6VXNlcjMyNTI2MTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3252614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vdrg",
      "html_url": "https://github.com/vdrg",
      "followers_url": "https://api.github.com/users/vdrg/followers",
      "following_url": "https://api.github.com/users/vdrg/following{/other_user}",
      "gists_url": "https://api.github.com/users/vdrg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vdrg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vdrg/subscriptions",
      "organizations_url": "https://api.github.com/users/vdrg/orgs",
      "repos_url": "https://api.github.com/users/vdrg/repos",
      "events_url": "https://api.github.com/users/vdrg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vdrg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-10T14:12:36Z",
    "updated_at": "2022-06-10T14:12:36Z",
    "author_association": "NONE",
    "body": "> Re https://github.com/foundry-rs/foundry/issues/876 - are you sure vm.expectRevert(bytes(\"\")) does not work as intended? Note that this is different than vm.expectRevert(\"\")\r\n\r\nYou are right! This behavior was not documented, but it seems to be working (vm.expectRevert(\"\") matches any revert). I'm closing this.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1152406415/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1152953436",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1897#issuecomment-1152953436",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1897",
    "id": 1152953436,
    "node_id": "IC_kwDOGBlvNc5EuKxc",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-11T15:44:21Z",
    "updated_at": "2022-06-11T15:44:21Z",
    "author_association": "MEMBER",
    "body": "@vdrg do you mind adding it to the foundry book? https://github.com/foundry-rs/book - didn't realize we forgot to document htat",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1152953436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1152953574",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1897#issuecomment-1152953574",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1897",
    "id": 1152953574,
    "node_id": "IC_kwDOGBlvNc5EuKzm",
    "user": {
      "login": "vdrg",
      "id": 3252614,
      "node_id": "MDQ6VXNlcjMyNTI2MTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3252614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vdrg",
      "html_url": "https://github.com/vdrg",
      "followers_url": "https://api.github.com/users/vdrg/followers",
      "following_url": "https://api.github.com/users/vdrg/following{/other_user}",
      "gists_url": "https://api.github.com/users/vdrg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vdrg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vdrg/subscriptions",
      "organizations_url": "https://api.github.com/users/vdrg/orgs",
      "repos_url": "https://api.github.com/users/vdrg/repos",
      "events_url": "https://api.github.com/users/vdrg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vdrg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-11T15:45:29Z",
    "updated_at": "2022-06-11T15:45:29Z",
    "author_association": "NONE",
    "body": "Sure!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1152953574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
