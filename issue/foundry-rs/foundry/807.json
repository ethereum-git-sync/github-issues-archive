{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/807",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/807/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/807/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/807/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/807",
  "id": 1149292219,
  "node_id": "I_kwDOGBlvNc5EgM67",
  "number": 807,
  "title": "ENS resolution for function parameters has quirky behaviour",
  "user": {
    "login": "joshieDo",
    "id": 93316087,
    "node_id": "U_kgDOBY_j9w",
    "avatar_url": "https://avatars.githubusercontent.com/u/93316087?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/joshieDo",
    "html_url": "https://github.com/joshieDo",
    "followers_url": "https://api.github.com/users/joshieDo/followers",
    "following_url": "https://api.github.com/users/joshieDo/following{/other_user}",
    "gists_url": "https://api.github.com/users/joshieDo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/joshieDo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/joshieDo/subscriptions",
    "organizations_url": "https://api.github.com/users/joshieDo/orgs",
    "repos_url": "https://api.github.com/users/joshieDo/repos",
    "events_url": "https://api.github.com/users/joshieDo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/joshieDo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3703752609,
      "node_id": "LA_kwDOGBlvNc7cwseh",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-cast",
      "name": "C-cast",
      "color": "5319E7",
      "default": false,
      "description": "Command: cast"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-02-24T13:29:38Z",
  "updated_at": "2022-08-23T16:41:35Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nCast\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [X] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\n_No response_\r\n\r\n### What command(s) is the bug in?\r\n\r\n_No response_\r\n\r\n### Operating System\r\n\r\n_No response_\r\n\r\n### Describe the bug\r\n\r\nref https://github.com/gakonst/foundry/pull/717\r\n\r\nSeems to have some unfortunate effects just from having a `.` in a string parameter unrelated to ENS:\r\n* I effectively cannot write `vitalik.eth` as a string parameter, without it replacing it\r\n* If the RPC is not set to ETH mainnet, a panic happens (ethers-rs fix: https://github.com/gakonst/ethers-rs/pull/963)\r\n* I wonder if there won't be a scenario where i pass a non-ens string (but with a `.`), but somehow gets decoded into an address. Unlikely, but...\r\n\r\nI feel like we should revert it, or at least, adding an option to escape `.`",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/807/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/807/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1049870135",
    "html_url": "https://github.com/foundry-rs/foundry/issues/807#issuecomment-1049870135",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/807",
    "id": 1049870135,
    "node_id": "IC_kwDOGBlvNc4-k783",
    "user": {
      "login": "joshieDo",
      "id": 93316087,
      "node_id": "U_kgDOBY_j9w",
      "avatar_url": "https://avatars.githubusercontent.com/u/93316087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshieDo",
      "html_url": "https://github.com/joshieDo",
      "followers_url": "https://api.github.com/users/joshieDo/followers",
      "following_url": "https://api.github.com/users/joshieDo/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshieDo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshieDo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshieDo/subscriptions",
      "organizations_url": "https://api.github.com/users/joshieDo/orgs",
      "repos_url": "https://api.github.com/users/joshieDo/repos",
      "events_url": "https://api.github.com/users/joshieDo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshieDo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-24T13:38:28Z",
    "updated_at": "2022-02-24T13:38:38Z",
    "author_association": "COLLABORATOR",
    "body": "Maybe it only runs the resolver, if the string is preceded by `@` or something like that? \r\n\r\neg: `cast call dai balanceOf @vitalik.eth`",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1049870135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1050342904",
    "html_url": "https://github.com/foundry-rs/foundry/issues/807#issuecomment-1050342904",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/807",
    "id": 1050342904,
    "node_id": "IC_kwDOGBlvNc4-mvX4",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-24T22:56:20Z",
    "updated_at": "2022-02-24T22:56:20Z",
    "author_association": "MEMBER",
    "body": "I like that, wonder what @ncitron thinks?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1050342904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1050353841",
    "html_url": "https://github.com/foundry-rs/foundry/issues/807#issuecomment-1050353841",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/807",
    "id": 1050353841,
    "node_id": "IC_kwDOGBlvNc4-myCx",
    "user": {
      "login": "ncitron",
      "id": 16858330,
      "node_id": "MDQ6VXNlcjE2ODU4MzMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16858330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncitron",
      "html_url": "https://github.com/ncitron",
      "followers_url": "https://api.github.com/users/ncitron/followers",
      "following_url": "https://api.github.com/users/ncitron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncitron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncitron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncitron/subscriptions",
      "organizations_url": "https://api.github.com/users/ncitron/orgs",
      "repos_url": "https://api.github.com/users/ncitron/repos",
      "events_url": "https://api.github.com/users/ncitron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncitron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-24T23:16:09Z",
    "updated_at": "2022-02-24T23:16:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah if someone passes in a valid ENS name as an argument, it ends up getting resolved which could cause some weird issues. However it should work fine if someone passes a string with a period in it that is not a valid name (pending the ethers-rs bug fix).\r\n\r\nI think the solution @joshieDo describes works, but ideally we could just handle all ENS parameter resolution in the the `get_func_etherscan` and `encode_args` functions of `foundry_utils`. I had originally tried to go down this route, but ended up battling the compiler and had to add a bunch of crazy trait bounds to functions all the way up the call stack. I'm sure there's some way to get around the problems I ran into, but I'm still getting the hang of rust.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1050353841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1131793120",
    "html_url": "https://github.com/foundry-rs/foundry/issues/807#issuecomment-1131793120",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/807",
    "id": 1131793120,
    "node_id": "IC_kwDOGBlvNc5Ddcrg",
    "user": {
      "login": "0xYYY",
      "id": 86655648,
      "node_id": "MDQ6VXNlcjg2NjU1NjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/86655648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xYYY",
      "html_url": "https://github.com/0xYYY",
      "followers_url": "https://api.github.com/users/0xYYY/followers",
      "following_url": "https://api.github.com/users/0xYYY/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xYYY/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xYYY/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xYYY/subscriptions",
      "organizations_url": "https://api.github.com/users/0xYYY/orgs",
      "repos_url": "https://api.github.com/users/0xYYY/repos",
      "events_url": "https://api.github.com/users/0xYYY/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xYYY/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-19T14:37:30Z",
    "updated_at": "2022-05-19T14:37:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "How about adding an option like `--no-resolve` (default: false) to skip resolving args?\r\n\r\nRequired code change would only be adding an option for `cast` and an argument to `TxBuilder.set_args` I think.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1131793120/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1147747434",
    "html_url": "https://github.com/foundry-rs/foundry/issues/807#issuecomment-1147747434",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/807",
    "id": 1147747434,
    "node_id": "IC_kwDOGBlvNc5EaTxq",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-06T18:21:52Z",
    "updated_at": "2022-06-06T18:21:52Z",
    "author_association": "MEMBER",
    "body": "@robertabbott check this out",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1147747434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
