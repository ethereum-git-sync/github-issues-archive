{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1672",
  "id": 1242331368,
  "node_id": "I_kwDOGBlvNc5KDHjo",
  "number": 1672,
  "title": "Integrate signature database into forge and cast",
  "user": {
    "login": "samczsun",
    "id": 10292550,
    "node_id": "MDQ6VXNlcjEwMjkyNTUw",
    "avatar_url": "https://avatars.githubusercontent.com/u/10292550?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/samczsun",
    "html_url": "https://github.com/samczsun",
    "followers_url": "https://api.github.com/users/samczsun/followers",
    "following_url": "https://api.github.com/users/samczsun/following{/other_user}",
    "gists_url": "https://api.github.com/users/samczsun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/samczsun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/samczsun/subscriptions",
    "organizations_url": "https://api.github.com/users/samczsun/orgs",
    "repos_url": "https://api.github.com/users/samczsun/repos",
    "events_url": "https://api.github.com/users/samczsun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/samczsun/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752609,
      "node_id": "LA_kwDOGBlvNc7cwseh",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-cast",
      "name": "C-cast",
      "color": "5319E7",
      "default": false,
      "description": "Command: cast"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703753090,
      "node_id": "LA_kwDOGBlvNc7cwsmC",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-tracing",
      "name": "A-tracing",
      "color": "FBCA04",
      "default": false,
      "description": "Area: tracing"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2022-05-19T21:10:25Z",
  "updated_at": "2022-05-24T06:09:27Z",
  "closed_at": "2022-05-24T06:09:27Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge, Cast\n\n### Describe the feature you would like\n\n1. Swap `cast 4byte`, `cast 4byte-decode`, and `cast 4byte-event` to use the new signature database. This would allow multiple lookups based on function/event selectors or names (with globbing support), and smarter decoding (by checking the `filtered` field). For example, notice how all the spoofed ERC20 selectors are [filtered](https://sig.eth.samczsun.com/api/v1/signatures?all=true&function=0xa9059cbb&function=0x23b872dd)\r\n\r\n2. Add a command to `forge` which would automatically upload the ABI to the signature database. This would make it easier for people who use Foundry to either manually contribute their functions for use by others, or automate it with a GitHub action.\r\n\r\nThe case for switching from 4byte to my alternative is simply that I provide a more accessible API, light curation for selectors with near-canonical meanings (f.ex ERC20), and a larger dataset with data I've collected myself. The reference can be found [here](https://sig.eth.samczsun.com/reference).\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672/reactions",
    "total_count": 4,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 1,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1132273889",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1672#issuecomment-1132273889",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672",
    "id": 1132273889,
    "node_id": "IC_kwDOGBlvNc5DfSDh",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-19T22:44:56Z",
    "updated_at": "2022-05-19T22:46:07Z",
    "author_association": "MEMBER",
    "body": "I am supportive of this, also 4byte has had reliability issues for a while.\r\n\r\nAdding rust bindings to the API and calling it seems straightforward. Reference gives all the info indeed https://sig.eth.samczsun.com/reference\r\n\r\n```\r\ncurl https://sig.eth.samczsun.com/api/v1/stats\r\n{\"ok\":true,\"result\":{\"count\":{\"event\":165174,\"function\":1059922}}}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1132273889/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1132503545",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1672#issuecomment-1132503545",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672",
    "id": 1132503545,
    "node_id": "IC_kwDOGBlvNc5DgKH5",
    "user": {
      "login": "marktoda",
      "id": 40770586,
      "node_id": "MDQ6VXNlcjQwNzcwNTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/40770586?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marktoda",
      "html_url": "https://github.com/marktoda",
      "followers_url": "https://api.github.com/users/marktoda/followers",
      "following_url": "https://api.github.com/users/marktoda/following{/other_user}",
      "gists_url": "https://api.github.com/users/marktoda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marktoda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marktoda/subscriptions",
      "organizations_url": "https://api.github.com/users/marktoda/orgs",
      "repos_url": "https://api.github.com/users/marktoda/repos",
      "events_url": "https://api.github.com/users/marktoda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marktoda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-20T05:57:12Z",
    "updated_at": "2022-05-20T05:58:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Love the new signature database -- pushed up a change for 1): https://github.com/foundry-rs/foundry/pull/1674.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1132503545/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1133628019",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1672#issuecomment-1133628019",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672",
    "id": 1133628019,
    "node_id": "IC_kwDOGBlvNc5Dkcpz",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-21T12:43:06Z",
    "updated_at": "2022-05-21T12:43:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "How would you feel about an offline database? [`etk-4byte`](https://crates.io/crates/etk-4byte) packs the entire 4byte database into a crate. It needs a bit of polish to cut down on startup time, but if there's interest, I can implement that.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1133628019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1133651918",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1672#issuecomment-1133651918",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672",
    "id": 1133651918,
    "node_id": "IC_kwDOGBlvNc5DkifO",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-21T15:23:12Z",
    "updated_at": "2022-05-21T15:23:12Z",
    "author_association": "MEMBER",
    "body": "> How would you feel about an offline database? [`etk-4byte`](https://crates.io/crates/etk-4byte) packs the entire 4byte database into a crate. It needs a bit of polish to cut down on startup time, but if there's interest, I can implement that.\r\n\r\nthat's an additional 10MB https://github.com/quilt/etk/blob/master/etk-4byte/src/database.br\r\n\r\nI think we should rather think about a way to dl this to `./foundry/cache/4byte` or something than to embed this",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1133651918/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1133656552",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1672#issuecomment-1133656552",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672",
    "id": 1133656552,
    "node_id": "IC_kwDOGBlvNc5Dkjno",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-21T15:42:13Z",
    "updated_at": "2022-05-21T15:42:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I didn't mean to suggest that the current implementation in `etk-4byte` is a good one :rofl:\r\n\r\nChanging it to a download+cache implementation is what I was implying by \"polish.\"",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1133656552/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1133791047",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1672#issuecomment-1133791047",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672",
    "id": 1133791047,
    "node_id": "IC_kwDOGBlvNc5DlEdH",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-22T00:38:35Z",
    "updated_at": "2022-05-22T00:40:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "> ### Component\r\n> Forge, Cast\r\n> \r\n> ### Describe the feature you would like\r\n> 1. Swap `cast 4byte`, `cast 4byte-decode`, and `cast 4byte-event` to use the new signature database. This would allow multiple lookups based on function/event selectors or names (with globbing support), and smarter decoding (by checking the `filtered` field). For example, notice how all the spoofed ERC20 selectors are [filtered](https://sig.eth.samczsun.com/api/v1/signatures?all=true&function=0xa9059cbb&function=0x23b872dd)\r\n> 2. Add a command to `forge` which would automatically upload the ABI to the signature database. This would make it easier for people who use Foundry to either manually contribute their functions for use by others, or automate it with a GitHub action.\r\n> \r\n> The case for switching from 4byte to my alternative is simply that I provide a more accessible API, light curation for selectors with near-canonical meanings (f.ex ERC20), and a larger dataset with data I've collected myself. The reference can be found [here](https://sig.eth.samczsun.com/reference).\r\n> \r\n> ### Additional context\r\n> _No response_\r\n\r\nyou can automate this already with a webhook if ur using `ethereum-lists/4bytes` using [https://github.com/apps/4bytebot](https://github.com/apps/4bytebot)\r\n\r\nHow big is your data set? I have one that covers all test networks and  event log signatures as well. \r\n\r\nCan you provide a webhook endpoint @samczsun? \r\n\r\nEdit: also referenced this issue for updating out foundry provides diagnostic output, could provide links to different sources potentially too ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1133791047/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1133811697",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1672#issuecomment-1133811697",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672",
    "id": 1133811697,
    "node_id": "IC_kwDOGBlvNc5DlJfx",
    "user": {
      "login": "samczsun",
      "id": 10292550,
      "node_id": "MDQ6VXNlcjEwMjkyNTUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/10292550?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samczsun",
      "html_url": "https://github.com/samczsun",
      "followers_url": "https://api.github.com/users/samczsun/followers",
      "following_url": "https://api.github.com/users/samczsun/following{/other_user}",
      "gists_url": "https://api.github.com/users/samczsun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samczsun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samczsun/subscriptions",
      "organizations_url": "https://api.github.com/users/samczsun/orgs",
      "repos_url": "https://api.github.com/users/samczsun/repos",
      "events_url": "https://api.github.com/users/samczsun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samczsun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-22T03:38:52Z",
    "updated_at": "2022-05-22T03:38:52Z",
    "author_association": "NONE",
    "body": "The dataset is as big as the stats endpoint claims it to be and should contain approximately every valid signature from ethereum mainnet. I'm currently importing signatures from any other evm-compatible chain I can find.\r\n\r\nI don't support webhook endpoints and I don't have plans to at this point because there's no good way to do it. 4byte does it by throwing the Solidity source code through some [magical regex](https://github.com/pipermerriam/ethereum-function-signature-registry/blob/094a2307711bb73edac958a0769499198cbe03fa/func_sig_registry/utils/solidity.py#L70-L86) which is extremely brittle and also won't work with any non-primitive type (think contract types, structs, etc) because if you really wanted to resolve all of those references (including stuff like importing from GitHub), you basically have to compile the code anyways. Since I don't know how to compile your codebase (and I don't want to just `npx hardhat compile` arbitrary repositories), it's much easier if you\r\n1) Flatten the source code like you would with Etherscan, then submit it as a code import\r\n2) Just compile it yourself, and submit it as an ABI import. This is what #1676 will do\r\n\r\n(If you have any ideas for how to handle webhooks, I'm all ears. I can't think of any reliable approaches though)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1133811697/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1135270488",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1672#issuecomment-1135270488",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672",
    "id": 1135270488,
    "node_id": "IC_kwDOGBlvNc5DqtpY",
    "user": {
      "login": "marktoda",
      "id": 40770586,
      "node_id": "MDQ6VXNlcjQwNzcwNTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/40770586?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marktoda",
      "html_url": "https://github.com/marktoda",
      "followers_url": "https://api.github.com/users/marktoda/followers",
      "following_url": "https://api.github.com/users/marktoda/following{/other_user}",
      "gists_url": "https://api.github.com/users/marktoda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marktoda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marktoda/subscriptions",
      "organizations_url": "https://api.github.com/users/marktoda/orgs",
      "repos_url": "https://api.github.com/users/marktoda/repos",
      "events_url": "https://api.github.com/users/marktoda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marktoda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-24T00:29:20Z",
    "updated_at": "2022-05-24T00:31:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @samczsun noticing some strange filtering from the `api/v1/signatures` route suddenly - just starting today:\r\n```\r\n❯ curl https://sig.eth.samczsun.com/api/v1/signatures\\?function\\=0xa9059cbb\r\n{\"ok\":true,\"result\":{\"event\":{},\"function\":{\"0xa9059cbb\":[]}}}\r\n❯ curl https://sig.eth.samczsun.com/api/v1/signatures\\?function\\=0xa9059cbb\\&all\\=true\r\n{\"ok\":true,\"result\":{\"event\":{},\"function\":{\"0xa9059cbb\":[{\"name\":\"many_msg_babbage(bytes1)\",\"filtered\":true},{\"name\":\"transfer(address,uint256)\",\"filtered\":false},{\"name\":\"transfer(bytes4[9],bytes5[6],int48[11])\",\"filtered\":true},{\"name\":\"func_2093253501(bytes)\",\"filtered\":true}]}}}\r\n```\r\n\r\nSeems it is filtering out `transfer(address,uint256)` when `all=false` even though it is not tagged as filtered. Any idea on why this might be? \r\n\r\nOther selectors work with `all=false`\r\n```\r\n❯ curl https://sig.eth.samczsun.com/api/v1/signatures\\?function\\=0xf637731d\r\n{\"ok\":true,\"result\":{\"event\":{},\"function\":{\"0xf637731d\":[{\"name\":\"initialize(uint160)\",\"filtered\":false}]}}}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1135270488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1135281265",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1672#issuecomment-1135281265",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672",
    "id": 1135281265,
    "node_id": "IC_kwDOGBlvNc5DqwRx",
    "user": {
      "login": "samczsun",
      "id": 10292550,
      "node_id": "MDQ6VXNlcjEwMjkyNTUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/10292550?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samczsun",
      "html_url": "https://github.com/samczsun",
      "followers_url": "https://api.github.com/users/samczsun/followers",
      "following_url": "https://api.github.com/users/samczsun/following{/other_user}",
      "gists_url": "https://api.github.com/users/samczsun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samczsun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samczsun/subscriptions",
      "organizations_url": "https://api.github.com/users/samczsun/orgs",
      "repos_url": "https://api.github.com/users/samczsun/repos",
      "events_url": "https://api.github.com/users/samczsun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samczsun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-24T00:51:08Z",
    "updated_at": "2022-05-24T00:51:08Z",
    "author_association": "NONE",
    "body": "Oops, not sure what happened there. Will get it fixed shortly",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1135281265/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1135292032",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1672#issuecomment-1135292032",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672",
    "id": 1135292032,
    "node_id": "IC_kwDOGBlvNc5Dqy6A",
    "user": {
      "login": "samczsun",
      "id": 10292550,
      "node_id": "MDQ6VXNlcjEwMjkyNTUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/10292550?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samczsun",
      "html_url": "https://github.com/samczsun",
      "followers_url": "https://api.github.com/users/samczsun/followers",
      "following_url": "https://api.github.com/users/samczsun/following{/other_user}",
      "gists_url": "https://api.github.com/users/samczsun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samczsun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samczsun/subscriptions",
      "organizations_url": "https://api.github.com/users/samczsun/orgs",
      "repos_url": "https://api.github.com/users/samczsun/repos",
      "events_url": "https://api.github.com/users/samczsun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samczsun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-24T01:10:13Z",
    "updated_at": "2022-05-24T01:10:13Z",
    "author_association": "NONE",
    "body": "Should be fixed now",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1135292032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1135298019",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1672#issuecomment-1135298019",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672",
    "id": 1135298019,
    "node_id": "IC_kwDOGBlvNc5Dq0Xj",
    "user": {
      "login": "marktoda",
      "id": 40770586,
      "node_id": "MDQ6VXNlcjQwNzcwNTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/40770586?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marktoda",
      "html_url": "https://github.com/marktoda",
      "followers_url": "https://api.github.com/users/marktoda/followers",
      "following_url": "https://api.github.com/users/marktoda/following{/other_user}",
      "gists_url": "https://api.github.com/users/marktoda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marktoda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marktoda/subscriptions",
      "organizations_url": "https://api.github.com/users/marktoda/orgs",
      "repos_url": "https://api.github.com/users/marktoda/repos",
      "events_url": "https://api.github.com/users/marktoda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marktoda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-24T01:22:05Z",
    "updated_at": "2022-05-24T01:22:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1135298019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1135450378",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1672#issuecomment-1135450378",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1672",
    "id": 1135450378,
    "node_id": "IC_kwDOGBlvNc5DrZkK",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-24T06:09:27Z",
    "updated_at": "2022-05-24T06:09:27Z",
    "author_association": "MEMBER",
    "body": "Fixed in https://github.com/foundry-rs/foundry/pull/1676 and https://github.com/foundry-rs/foundry/pull/1674",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1135450378/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
