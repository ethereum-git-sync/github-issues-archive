{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4656",
  "id": 1642664366,
  "node_id": "I_kwDOGBlvNc5h6RGu",
  "number": 4656,
  "title": "`forge test` hangs on `invariant` testing",
  "user": {
    "login": "cdgmachado0",
    "id": 59457858,
    "node_id": "MDQ6VXNlcjU5NDU3ODU4",
    "avatar_url": "https://avatars.githubusercontent.com/u/59457858?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cdgmachado0",
    "html_url": "https://github.com/cdgmachado0",
    "followers_url": "https://api.github.com/users/cdgmachado0/followers",
    "following_url": "https://api.github.com/users/cdgmachado0/following{/other_user}",
    "gists_url": "https://api.github.com/users/cdgmachado0/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cdgmachado0/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cdgmachado0/subscriptions",
    "organizations_url": "https://api.github.com/users/cdgmachado0/orgs",
    "repos_url": "https://api.github.com/users/cdgmachado0/repos",
    "events_url": "https://api.github.com/users/cdgmachado0/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cdgmachado0/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3394554570,
      "node_id": "LA_kwDOGBlvNc7KVMrK",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-fuzzing",
      "name": "A-fuzzing",
      "color": "FBCA04",
      "default": false,
      "description": "Area: fuzzing"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 42,
  "created_at": "2023-03-27T19:09:52Z",
  "updated_at": "2023-04-13T23:45:56Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (97f070f 2023-03-17T09:30:30.350509Z)\n\n### What command(s) is the bug in?\n\n_No response_\n\n### Operating System\n\nmacOS (Intel)\n\n### Describe the bug\n\nWhen running any type of `invariant` testing, the terminal hangs after compiling the contracts: \r\n\r\n<img width=\"601\" alt=\"image\" src=\"https://user-images.githubusercontent.com/59457858/228041268-9ad3cf2f-680c-4195-9b00-e656caa89929.png\">\r\n\r\nThis is the function I'm calling:\r\n```js\r\nfunction invariant_getHello() public {\r\n    assertTrue(true);\r\n}\r\n```\r\n\r\nIt hangs with either `forge test --match-test $FUNC --fork-url $ARB --fork-block-number $BLOCK -vvv` where $FUNC is `invariant_getHello` or with `forge test --match-test invariant --fork-url $ARB --fork-block-number $BLOCK -vvv`.\r\n\r\nIf I change the function name to `test_getHello`, the test runs and passes without issues, so the problem is in the `invariant` keyword:\r\n\r\n<img width=\"556\" alt=\"image\" src=\"https://user-images.githubusercontent.com/59457858/228042243-5039ca8e-f2de-4f33-a799-bf1365631a5a.png\">\r\n",
  "closed_by": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656/timeline",
  "performed_via_github_app": null,
  "state_reason": "reopened"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1485752941",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1485752941",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1485752941,
    "node_id": "IC_kwDOGBlvNc5Yjspt",
    "user": {
      "login": "cdgmachado0",
      "id": 59457858,
      "node_id": "MDQ6VXNlcjU5NDU3ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/59457858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdgmachado0",
      "html_url": "https://github.com/cdgmachado0",
      "followers_url": "https://api.github.com/users/cdgmachado0/followers",
      "following_url": "https://api.github.com/users/cdgmachado0/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdgmachado0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdgmachado0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdgmachado0/subscriptions",
      "organizations_url": "https://api.github.com/users/cdgmachado0/orgs",
      "repos_url": "https://api.github.com/users/cdgmachado0/repos",
      "events_url": "https://api.github.com/users/cdgmachado0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdgmachado0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-27T19:34:31Z",
    "updated_at": "2023-03-27T19:34:31Z",
    "author_association": "NONE",
    "body": "The bug is when passing the `--fork-url $ARB` flag. If I remove it, the test runs and passes.\r\n\r\n<img width=\"496\" alt=\"image\" src=\"https://user-images.githubusercontent.com/59457858/228047626-f7d786e9-d6a7-4d85-a346-3ac6bf6588b6.png\">\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1485752941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1485896289",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1485896289",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1485896289,
    "node_id": "IC_kwDOGBlvNc5YkPph",
    "user": {
      "login": "cdgmachado0",
      "id": 59457858,
      "node_id": "MDQ6VXNlcjU5NDU3ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/59457858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdgmachado0",
      "html_url": "https://github.com/cdgmachado0",
      "followers_url": "https://api.github.com/users/cdgmachado0/followers",
      "following_url": "https://api.github.com/users/cdgmachado0/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdgmachado0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdgmachado0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdgmachado0/subscriptions",
      "organizations_url": "https://api.github.com/users/cdgmachado0/orgs",
      "repos_url": "https://api.github.com/users/cdgmachado0/repos",
      "events_url": "https://api.github.com/users/cdgmachado0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdgmachado0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-27T21:40:10Z",
    "updated_at": "2023-03-27T21:40:10Z",
    "author_association": "NONE",
    "body": "Selecting the fork directly in the contract with `createSelectFork` doesn't solve the issue. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1485896289/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1487377151",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1487377151",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1487377151,
    "node_id": "IC_kwDOGBlvNc5Yp5L_",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-28T18:04:08Z",
    "updated_at": "2023-03-28T18:04:08Z",
    "author_association": "COLLABORATOR",
    "body": "If you run with `RUST_LOG=forge=trace,foundry_evm=trace,ethers=trace forge test <rest of command>` you'll see this is just because it's making a lot of RPC requests since it's a fork test. If you pin to a block and use a fuzz seed, subsequent invocations will be much fast since responses will be cached. You can read more here: https://book.getfoundry.sh/forge/fork-testing",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1487377151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488235387",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1488235387",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1488235387,
    "node_id": "IC_kwDOGBlvNc5YtKt7",
    "user": {
      "login": "cdgmachado0",
      "id": 59457858,
      "node_id": "MDQ6VXNlcjU5NDU3ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/59457858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdgmachado0",
      "html_url": "https://github.com/cdgmachado0",
      "followers_url": "https://api.github.com/users/cdgmachado0/followers",
      "following_url": "https://api.github.com/users/cdgmachado0/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdgmachado0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdgmachado0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdgmachado0/subscriptions",
      "organizations_url": "https://api.github.com/users/cdgmachado0/orgs",
      "repos_url": "https://api.github.com/users/cdgmachado0/repos",
      "events_url": "https://api.github.com/users/cdgmachado0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdgmachado0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T09:17:54Z",
    "updated_at": "2023-03-29T09:17:54Z",
    "author_association": "NONE",
    "body": "It didn't work @mds1 \r\n\r\nAs you can see on my screenshots, I was passing the flag `--fork-block-number $BLOCK` with 69254399 as `BLOCK`. \r\n\r\nI also tried removing the flag and setting the block directly in the contract with `vm.createSelectFork(vm.rpcUrl('arbitrum'), 69254399);`  while having my `.toml` file like:\r\n\r\n```js\r\n[profile.default]\r\nsrc = 'contracts'\r\nout = 'out'\r\nlibs = ['node_modules', 'lib']\r\ntest = 'test/foundry'\r\ncache_path = 'forge-cache'\r\n\r\n[rpc_endpoints]\r\narbitrum = \"${ARBITRUM}\"\r\n\r\n[fuzz]\r\nseed = 10\r\n```\r\n\r\nAs you can see there, I specified a seed also.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488235387/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488251169",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1488251169",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1488251169,
    "node_id": "IC_kwDOGBlvNc5YtOkh",
    "user": {
      "login": "cdgmachado0",
      "id": 59457858,
      "node_id": "MDQ6VXNlcjU5NDU3ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/59457858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdgmachado0",
      "html_url": "https://github.com/cdgmachado0",
      "followers_url": "https://api.github.com/users/cdgmachado0/followers",
      "following_url": "https://api.github.com/users/cdgmachado0/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdgmachado0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdgmachado0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdgmachado0/subscriptions",
      "organizations_url": "https://api.github.com/users/cdgmachado0/orgs",
      "repos_url": "https://api.github.com/users/cdgmachado0/repos",
      "events_url": "https://api.github.com/users/cdgmachado0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdgmachado0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T09:24:43Z",
    "updated_at": "2023-03-29T10:53:08Z",
    "author_association": "NONE",
    "body": "I created #4662 since the problem is unresolved and I can't re-open this issue. \r\n\r\nOnce the situation is resolved, I can close that other issue. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488251169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488420105",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1488420105",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1488420105,
    "node_id": "IC_kwDOGBlvNc5Yt30J",
    "user": {
      "login": "cdgmachado0",
      "id": 59457858,
      "node_id": "MDQ6VXNlcjU5NDU3ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/59457858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdgmachado0",
      "html_url": "https://github.com/cdgmachado0",
      "followers_url": "https://api.github.com/users/cdgmachado0/followers",
      "following_url": "https://api.github.com/users/cdgmachado0/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdgmachado0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdgmachado0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdgmachado0/subscriptions",
      "organizations_url": "https://api.github.com/users/cdgmachado0/orgs",
      "repos_url": "https://api.github.com/users/cdgmachado0/repos",
      "events_url": "https://api.github.com/users/cdgmachado0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdgmachado0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T11:26:03Z",
    "updated_at": "2023-03-29T11:48:56Z",
    "author_association": "NONE",
    "body": "Don't think that it's a cache issue, which would explain why your solution didn't work @mds1 \r\n\r\nI removed `cache_path = 'forge-cache'` from my .toml file so the cache would default back to `~/.foundry/cache/rpc/arbitrum/69254399` (which it did), but the hangs still remains only for invariant tests.\r\n\r\nEDIT:\r\n\r\nFoundry is catching properly to `~/.foundry/cache..` (there's data there), but when I run `forge cache ls`, I still get an output of 0.0B \r\n\r\n<img width=\"462\" alt=\"image\" src=\"https://user-images.githubusercontent.com/59457858/228526324-19db3982-e4e8-4d25-bd76-b42665bde987.png\">\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488420105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488735778",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1488735778",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1488735778,
    "node_id": "IC_kwDOGBlvNc5YvE4i",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T14:29:16Z",
    "updated_at": "2023-03-29T14:29:16Z",
    "author_association": "COLLABORATOR",
    "body": "One way you can try to verify that tests are not hanging, and are simply slow due to the RPC queries is as follows:\r\n\r\nModify your foundry config as follows:\r\n\r\n```toml\r\n[profile.default.fuzz]\r\nseed = 1\r\n\r\n[profile.default.invariant]\r\nruns = 1\r\ndepth = 1\r\n```\r\n\r\nThis specifies a seed for the random number generator, and makes the invariant tests only run a single run of depth 1. Now, run `forge test --fork-url $ARBITRUM_RPC_URL `. I ran `forge init`, and modified `Counter.t.sol` as follows:\r\n\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport \"forge-std/Test.sol\";\r\nimport \"../src/Counter.sol\";\r\n\r\ncontract CounterTest is Test {\r\n    Counter public counter;\r\n\r\n    function setUp() public {\r\n        counter = new Counter();\r\n        counter.setNumber(0);\r\n    }\r\n\r\n    function invariant_example() public {\r\n        assertTrue(true);\r\n    }\r\n}\r\n```\r\n\r\nWith this configuration, it took 2.5s to run the test. Remember that you can modify the test command to be `RUST_LOG=forge=trace,foundry_evm=trace,ethers=trace forge test --fork-url $ARBITRUM_RPC_URL` to see what's happening under the hood so you can see if things are hanging vs. if there's just a lot of RPC requests happening.\r\n\r\nHowever, it does seem that RPC caching is not being leveraged, as it does take ~2.5s each invocation, even if I specify a fuzz seed",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488735778/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488768371",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1488768371",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1488768371,
    "node_id": "IC_kwDOGBlvNc5YvM1z",
    "user": {
      "login": "cdgmachado0",
      "id": 59457858,
      "node_id": "MDQ6VXNlcjU5NDU3ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/59457858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdgmachado0",
      "html_url": "https://github.com/cdgmachado0",
      "followers_url": "https://api.github.com/users/cdgmachado0/followers",
      "following_url": "https://api.github.com/users/cdgmachado0/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdgmachado0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdgmachado0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdgmachado0/subscriptions",
      "organizations_url": "https://api.github.com/users/cdgmachado0/orgs",
      "repos_url": "https://api.github.com/users/cdgmachado0/repos",
      "events_url": "https://api.github.com/users/cdgmachado0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdgmachado0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T14:46:51Z",
    "updated_at": "2023-03-29T14:48:43Z",
    "author_association": "NONE",
    "body": "Thanks for the reply :) @mds1 \r\n\r\nAnd yeah, setting `runs = 1` makes the test run, and like you mentioned, with `RUST_LOC=....`, it shows the multiple RPC calls being made under the hood, but in the end, the test just sits there (aka it hangs), which is what matters since I'm trying to run an invariant test, and having only one run defeats the purpose. \r\n\r\n<img width=\"494\" alt=\"image\" src=\"https://user-images.githubusercontent.com/59457858/228575436-687f7412-21b1-4cf5-9534-7a5dbb2dabce.png\">\r\n\r\nI'm not sure I fully understood your last sentence, but it seems like you were able to reproduce my issue (?). \r\n\r\nIn the end, what I'm trying to do is to run a invariant fuzzing campaign on an Arbitrum fork with standard parameters. Is this a bug or do I have to make a change in my config in order to achieve this outcome? \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488768371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488794061",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1488794061",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1488794061,
    "node_id": "IC_kwDOGBlvNc5YvTHN",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T14:59:38Z",
    "updated_at": "2023-03-29T14:59:38Z",
    "author_association": "COLLABORATOR",
    "body": "> but in the end, the test just sits there (aka it hangs)\r\n\r\nCan you clarify what you mean here? From what I can see it is running and making RPC requests, it's not stuck/hanging\r\n\r\n> In the end, what I'm trying to do is to run a invariant fuzzing campaign on an Arbitrum fork with standard parameters. Is this a bug or do I have to make a change in my config in order to achieve this outcome?\r\n\r\nAre you running your own node or using a service like e.g. Alchecmy/Infura? If the latter, it's very likely you'll get rate limited due to the number of RPC requests, which will make the tests execute very slowly. Unfortunately there's not much we can do here on the forge side. One solution is to allow forge to be initialized with a list of provider URLs and have it rotate providers with each call, but that might be a nontrivial change. If this is something you need I'd suggest opening a separate issue for this\r\n\r\n> I'm not sure I fully understood your last sentence, but it seems like you were able to reproduce my issue (?).\r\n\r\nI just meant that it seems the cache is not being used for invariant tests, because every run took ~2.5s, but I'd have expected subsequent runs to be only a few milliseconds thanks to using the cache. However, I had forgotten to pin a block, and with pinning + seed, RPC caching is working as expected (~2.5s for first run, a few millseconds for subsequent runs)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488794061/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488822752",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1488822752",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1488822752,
    "node_id": "IC_kwDOGBlvNc5YvaHg",
    "user": {
      "login": "cdgmachado0",
      "id": 59457858,
      "node_id": "MDQ6VXNlcjU5NDU3ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/59457858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdgmachado0",
      "html_url": "https://github.com/cdgmachado0",
      "followers_url": "https://api.github.com/users/cdgmachado0/followers",
      "following_url": "https://api.github.com/users/cdgmachado0/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdgmachado0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdgmachado0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdgmachado0/subscriptions",
      "organizations_url": "https://api.github.com/users/cdgmachado0/orgs",
      "repos_url": "https://api.github.com/users/cdgmachado0/repos",
      "events_url": "https://api.github.com/users/cdgmachado0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdgmachado0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T15:14:39Z",
    "updated_at": "2023-03-29T15:14:39Z",
    "author_association": "NONE",
    "body": "> Can you clarify what you mean here? From what I can see it is running and making RPC requests, it's not stuck/hanging\r\n\r\nI can see that the RPC requests are being made when I run `forge test` with `RUST_LOG=....`, but if I run it without it, so I don't see under hood, which is what matters for me, the completion of the test per se (not the behaviour under the hood), it just sits in this screen forever. It doesn't complete the test. That's what I mean by \"it hangs\". \r\n\r\n<img width=\"284\" alt=\"image\" src=\"https://user-images.githubusercontent.com/59457858/228583574-efa419bd-15c4-41ff-b4df-812e94da9ab7.png\">\r\n\r\nDo you manage to actually complete a test with standard invariant-fuzzing parameters on a fork? \r\n\r\n> Are you running your own node or using a service like e.g. Alchecmy/Infura? If the latter, it's very likely you'll get rate limited due to the number of RPC requests, which will make the tests execute very slowly\r\n\r\nI'm using RPC services (both Alchemy and Infura), but with other fuzzers like Echidna, running tests with forks work without issue, so it should work with Foundry also, no? Especially if you're mentioning that the RPC catching is not being leveraged, that I can't successfully run an invariant test on a fork, and have the evidence of the issue. @mds1 \r\n\r\nIsn't this enough to qualify the issue as a bug? ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488822752/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488831226",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1488831226",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1488831226,
    "node_id": "IC_kwDOGBlvNc5YvcL6",
    "user": {
      "login": "cdgmachado0",
      "id": 59457858,
      "node_id": "MDQ6VXNlcjU5NDU3ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/59457858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdgmachado0",
      "html_url": "https://github.com/cdgmachado0",
      "followers_url": "https://api.github.com/users/cdgmachado0/followers",
      "following_url": "https://api.github.com/users/cdgmachado0/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdgmachado0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdgmachado0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdgmachado0/subscriptions",
      "organizations_url": "https://api.github.com/users/cdgmachado0/orgs",
      "repos_url": "https://api.github.com/users/cdgmachado0/repos",
      "events_url": "https://api.github.com/users/cdgmachado0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdgmachado0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T15:20:09Z",
    "updated_at": "2023-03-29T15:20:09Z",
    "author_association": "NONE",
    "body": "I understand what you mean now. @mds1 \r\n\r\nThe \"hang\" that I'm experiencing is just forge doing the RPC requests. If I have set `runs` to like 100, it's going to feel like forever.\r\n\r\nBut still, there's a catching issue that foundry is not doing. That's the bug I'm mentioning should be considered no?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488831226/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488840938",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1488840938",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1488840938,
    "node_id": "IC_kwDOGBlvNc5Yvejq",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T15:26:48Z",
    "updated_at": "2023-03-29T15:26:48Z",
    "author_association": "COLLABORATOR",
    "body": "> it just sits in this screen forever. It doesn't complete the test. That's what I mean by \"it hangs\".\r\n\r\nGot it. So it will complete *eventually*, just slowly, due to RPC queries. Something like https://github.com/foundry-rs/foundry/issues/585 would help make it clear that things are progressing and not actually hanging\r\n\r\n> Do you manage to actually complete a test with standard invariant-fuzzing parameters on a fork?\r\n\r\nIf I run using alchemy on arbitrum, I have not waited long enough for it to complete. However if I use my local mainnet erigon node I get through an invariant run with the default settings (256 runs, depth of 15) in ~20 seconds\r\n\r\n> Especially if you're mentioning that the RPC catching is not being leveraged,\r\n\r\nCaching is being leveraged if you use a seed and pin to a block, I just forgot to pin to a block my initial test test\r\n\r\n> I'm using RPC services (both Alchemy and Infura), but with other fuzzers like Echidna, running tests with forks work without issue, so it should work with Foundry also, no?\r\n\r\nMaybe they just make fewer RPC requests somehow? They would have the same issue about being rate-limited, so I'm not sure what they'd do different. Maybe @mattsse has some insight here",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488840938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488852022",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1488852022",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1488852022,
    "node_id": "IC_kwDOGBlvNc5YvhQ2",
    "user": {
      "login": "cdgmachado0",
      "id": 59457858,
      "node_id": "MDQ6VXNlcjU5NDU3ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/59457858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdgmachado0",
      "html_url": "https://github.com/cdgmachado0",
      "followers_url": "https://api.github.com/users/cdgmachado0/followers",
      "following_url": "https://api.github.com/users/cdgmachado0/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdgmachado0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdgmachado0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdgmachado0/subscriptions",
      "organizations_url": "https://api.github.com/users/cdgmachado0/orgs",
      "repos_url": "https://api.github.com/users/cdgmachado0/repos",
      "events_url": "https://api.github.com/users/cdgmachado0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdgmachado0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T15:32:22Z",
    "updated_at": "2023-03-29T15:43:53Z",
    "author_association": "NONE",
    "body": "> Caching is being leveraged if you use a seed and pin to a block, I just forgot to pin to a block my initial test test\r\n\r\nI have a pinned block and seed also, but the behaviour is the same.\r\n\r\n```js\r\nvm.createSelectFork(vm.rpcUrl('arbitrum'), 69254399)\r\n```\r\n\r\nBut don't you think that the fact that I can't successfully complete one invariant test on a fork can be considered a bug?\r\n\r\nI have `runs = 100` (which is not that much in what fuzzing concerns), and I still have the same test that I started 10 minutes ago running without producing any output. @mds1 ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1488852022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489199922",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1489199922",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1489199922,
    "node_id": "IC_kwDOGBlvNc5Yw2My",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T19:43:37Z",
    "updated_at": "2023-03-29T19:44:07Z",
    "author_association": "MEMBER",
    "body": "this has to do with how the sender fuzzing in combination with forking mode works\r\n\r\nbecause we're using random callers which all need to be fetched via rpc first if the test is started in forking mode.\r\n\r\nBut I'm not sure if this is really necessary.\r\nmanually entering forking mode should get around this though, so\r\n\r\n> vm.createSelectFork(vm.rpcUrl('arbitrum'), 69254399)\r\n\r\n should only fetch everything after entering the fork, if the test is not launched in forking mode",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489199922/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489223331",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1489223331",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1489223331,
    "node_id": "IC_kwDOGBlvNc5Yw76j",
    "user": {
      "login": "cdgmachado0",
      "id": 59457858,
      "node_id": "MDQ6VXNlcjU5NDU3ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/59457858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdgmachado0",
      "html_url": "https://github.com/cdgmachado0",
      "followers_url": "https://api.github.com/users/cdgmachado0/followers",
      "following_url": "https://api.github.com/users/cdgmachado0/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdgmachado0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdgmachado0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdgmachado0/subscriptions",
      "organizations_url": "https://api.github.com/users/cdgmachado0/orgs",
      "repos_url": "https://api.github.com/users/cdgmachado0/repos",
      "events_url": "https://api.github.com/users/cdgmachado0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdgmachado0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T19:59:18Z",
    "updated_at": "2023-03-29T19:59:51Z",
    "author_association": "NONE",
    "body": "What does that mean exactly if I may ask? @mattsse \r\n\r\nI tried both ways, with `vm.createSelectFork(vm.rpcUrl('arbitrum'), 69254399)` in the code directly, and with `--fork-url $ARB --fork-block-number $BLOCK` as flags on the CLI, but with both the issue is still present (both as separate attempts and not mixed with one another) \r\n\r\nDo I have to do something extra in order to get invariant tests to work? ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489223331/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489234117",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1489234117",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1489234117,
    "node_id": "IC_kwDOGBlvNc5Yw-jF",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T20:06:49Z",
    "updated_at": "2023-03-29T20:08:59Z",
    "author_association": "MEMBER",
    "body": "if launched in forking mode (--fork-url) then the executor that is used to run a test is already in forking mode. So every time the test is called the sender account is fetched via rpc, because it is already in forking mode.\r\n\r\nentering manually will use a random, empty account for the sender (not in forking mode yet)\r\n\r\n```solidity\r\n    function invariant_example() public {\r\n       vm.createSelectFork(\"https://eth-mainnet.alchemyapi.io/v2/<>\");\r\n       assert(true);\r\n    }\r\n```\r\n\r\n```\r\nforge t\r\n[PASS] invariant_example() (runs: 256, calls: 3840, reverts: 108)\r\nTest result: ok. 1 passed; 0 failed; finished in 1.82s\r\n```\r\n\r\nI guess technically it is correct when running in forking mode that the sender account should be fetched via rpc, but I'm not sure if this is useful here or the \"right\" behaviour",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489234117/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489237542",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1489237542",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1489237542,
    "node_id": "IC_kwDOGBlvNc5Yw_Ym",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T20:09:17Z",
    "updated_at": "2023-03-29T20:09:26Z",
    "author_association": "COLLABORATOR",
    "body": "> I guess technically it is correct when running in forking mode that the sender account should be fetched via rpc, but I'm not sure if this is useful here.\r\n\r\nWhat data are we actually fetching from the sender up front? vs. just fetching e.g. nonce or something lazily as needed",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489237542/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489239902",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1489239902",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1489239902,
    "node_id": "IC_kwDOGBlvNc5Yw_9e",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T20:11:06Z",
    "updated_at": "2023-03-29T20:11:06Z",
    "author_association": "MEMBER",
    "body": "the account consists of:\r\n* code\r\n* balance\r\n* nonce\r\n\r\nthat's what we need to create the `Account` object the `evm` needs.\r\n\r\nthis is actually loaded during evm execution, evm needs to check balance, nonce ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489239902/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489248029",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1489248029",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1489248029,
    "node_id": "IC_kwDOGBlvNc5YxB8d",
    "user": {
      "login": "cdgmachado0",
      "id": 59457858,
      "node_id": "MDQ6VXNlcjU5NDU3ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/59457858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdgmachado0",
      "html_url": "https://github.com/cdgmachado0",
      "followers_url": "https://api.github.com/users/cdgmachado0/followers",
      "following_url": "https://api.github.com/users/cdgmachado0/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdgmachado0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdgmachado0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdgmachado0/subscriptions",
      "organizations_url": "https://api.github.com/users/cdgmachado0/orgs",
      "repos_url": "https://api.github.com/users/cdgmachado0/repos",
      "events_url": "https://api.github.com/users/cdgmachado0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdgmachado0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T20:17:34Z",
    "updated_at": "2023-03-29T20:17:34Z",
    "author_association": "NONE",
    "body": "This example doesn't work for me unfortunately @mattsse \r\n\r\nI need to use the fork in `setUp()` since I'm doing something with arbitrum's state there.\r\n\r\nI tried creating several forks in the setup, end that function up with a different fork, and then select arbitrum fork in my invariant test, but the test still hangs",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489248029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489249915",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1489249915",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1489249915,
    "node_id": "IC_kwDOGBlvNc5YxCZ7",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T20:19:12Z",
    "updated_at": "2023-03-29T20:19:12Z",
    "author_association": "COLLABORATOR",
    "body": "Hmm interesting. It does feel unnecessary, as in practice I'd suspect most bugs surfaced by invariant testing are not due to differences in the sender. But I'm also not sure what the best fix is here.\r\n\r\nCurrent behavior:\r\n```rust\r\n/// Strategy to select a sender address:\r\n/// * If `senders` is empty, then it's either a random address (10%) or from the dictionary (90%).\r\n/// * If `senders` is not empty, a random address is chosen from the list of senders.\r\n```\r\n\r\nPerhaps instead, if `senders` is empty, we change it to 5-10 default random senders to use for invariant testing? \r\n- That way we know, code, balance, and nonce will always be zero \r\n- Can derive the hardcoded addresses as `address(uint160(uint256(keccak256(\"invariant sender i\"))))` for i in the range of `1..=10` or something\r\n- Can have a flag to switch back to the current behavior of generating senders if we feel current behavior is useful\r\n\r\ncc @joshieDo @lucas-manuel curious to hear thoughts",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489249915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489252374",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1489252374",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1489252374,
    "node_id": "IC_kwDOGBlvNc5YxDAW",
    "user": {
      "login": "cdgmachado0",
      "id": 59457858,
      "node_id": "MDQ6VXNlcjU5NDU3ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/59457858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdgmachado0",
      "html_url": "https://github.com/cdgmachado0",
      "followers_url": "https://api.github.com/users/cdgmachado0/followers",
      "following_url": "https://api.github.com/users/cdgmachado0/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdgmachado0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdgmachado0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdgmachado0/subscriptions",
      "organizations_url": "https://api.github.com/users/cdgmachado0/orgs",
      "repos_url": "https://api.github.com/users/cdgmachado0/repos",
      "events_url": "https://api.github.com/users/cdgmachado0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdgmachado0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T20:21:09Z",
    "updated_at": "2023-03-29T20:21:54Z",
    "author_association": "NONE",
    "body": "Any other possible solution that I could try? \r\n\r\nI tried also creating a fork in the setup and one in the invariant test...same result",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489252374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489261070",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1489261070",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1489261070,
    "node_id": "IC_kwDOGBlvNc5YxFIO",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T20:27:22Z",
    "updated_at": "2023-03-29T20:28:06Z",
    "author_association": "MEMBER",
    "body": "yeh if entered in setUp then it is also already in forking mode when the random sender for the test function is fetched.\r\n\r\nthis does not seem very useful imo especially since we don't enforce balance/nonce/code constraints for the sender.\r\n\r\nso I suggest we insert an empty sender account into the database first? ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489261070/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489266029",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1489266029",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1489266029,
    "node_id": "IC_kwDOGBlvNc5YxGVt",
    "user": {
      "login": "cdgmachado0",
      "id": 59457858,
      "node_id": "MDQ6VXNlcjU5NDU3ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/59457858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdgmachado0",
      "html_url": "https://github.com/cdgmachado0",
      "followers_url": "https://api.github.com/users/cdgmachado0/followers",
      "following_url": "https://api.github.com/users/cdgmachado0/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdgmachado0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdgmachado0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdgmachado0/subscriptions",
      "organizations_url": "https://api.github.com/users/cdgmachado0/orgs",
      "repos_url": "https://api.github.com/users/cdgmachado0/repos",
      "events_url": "https://api.github.com/users/cdgmachado0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdgmachado0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T20:29:54Z",
    "updated_at": "2023-03-29T20:29:54Z",
    "author_association": "NONE",
    "body": "How do I do that? Sorry for the ignorant question. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489266029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489269676",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1489269676",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1489269676,
    "node_id": "IC_kwDOGBlvNc5YxHOs",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T20:32:29Z",
    "updated_at": "2023-03-29T20:32:29Z",
    "author_association": "COLLABORATOR",
    "body": "> so I suggest we insert an empty sender account into the database first?\r\n\r\nagreed it's not too useful, I think it'd be better to just change the default sender approach to the one suggested in https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1489249915, I don't see much value in pulling it from the dict / generating a purely random address ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489269676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489272627",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1489272627",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1489272627,
    "node_id": "IC_kwDOGBlvNc5YxH8z",
    "user": {
      "login": "cdgmachado0",
      "id": 59457858,
      "node_id": "MDQ6VXNlcjU5NDU3ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/59457858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdgmachado0",
      "html_url": "https://github.com/cdgmachado0",
      "followers_url": "https://api.github.com/users/cdgmachado0/followers",
      "following_url": "https://api.github.com/users/cdgmachado0/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdgmachado0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdgmachado0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdgmachado0/subscriptions",
      "organizations_url": "https://api.github.com/users/cdgmachado0/orgs",
      "repos_url": "https://api.github.com/users/cdgmachado0/repos",
      "events_url": "https://api.github.com/users/cdgmachado0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdgmachado0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T20:34:57Z",
    "updated_at": "2023-03-29T20:34:57Z",
    "author_association": "NONE",
    "body": "Don't forget about me please. \r\n\r\nI really really want to get invariant testing to work, and I've been struggling for like a week trying to solve it. \r\n\r\nOr is it a bug and there's no workaround I can do to get it to work and a patch from you guys is the only solution? @mds1 @mattsse ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489272627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489272759",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1489272759",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1489272759,
    "node_id": "IC_kwDOGBlvNc5YxH-3",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T20:35:03Z",
    "updated_at": "2023-03-29T20:36:04Z",
    "author_association": "MEMBER",
    "body": "this we'd need to add to the forge rust code.\r\n\r\nThe way the `Evm` impl works is like this\r\n\r\n```rust\r\n\r\n// This is configured with the transaction (test call) and a block environment (block number etc.)\r\nstruct Evm {tx,block_env}\r\n\r\n// This interface is used by the evm to fetch all the data like: `Account{balance, nonce, code}`\r\n// There can be multiple implementations, like a `Database` impl that fetches `Account` via rpc (forking mode DB)\r\ntrait Database {\r\n  fn load(Address) -> Account;\r\n}\r\n```\r\n\r\nso because we select a random caller `Database::load(caller)` is called on each test run and the Account is fetched via RPC because the evm is configured with the forking mode `Database` implementation ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489272759/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489278095",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1489278095",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1489278095,
    "node_id": "IC_kwDOGBlvNc5YxJSP",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T20:39:36Z",
    "updated_at": "2023-03-29T20:39:36Z",
    "author_association": "MEMBER",
    "body": "> Don't forget about me please.\r\n> \r\n> I really really want to get invariant testing to work, and I've been struggling for like a week trying to solve it.\r\n> \r\n> Or is it a bug and there's no workaround I can do to get it to work and a patch from you guys is the only solution? @mds1 @mattsse\r\n\r\nsorry about the inconvenience \r\n\r\nI guess we just haven't tested this with forking mode properly. Thanks for flagging this.\r\n\r\n@mds1 I think both fixes would be pretty simple\r\n\r\n> Perhaps instead, if senders is empty, we change it to 5-10 default random senders to use for invariant testing?\r\n\r\nthis makes sense, this way we still have the actual accounts",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489278095/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489278231",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1489278231",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1489278231,
    "node_id": "IC_kwDOGBlvNc5YxJUX",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T20:39:43Z",
    "updated_at": "2023-03-29T20:39:43Z",
    "author_association": "COLLABORATOR",
    "body": "@cdgmachado0 If you want a workaround in the meantime just use `targetSenders()` to hardcode a list of 1 or more senders, that way random senders are not generated. You can read more in the docs: https://book.getfoundry.sh/forge/invariant-testing#invariant-test-helper-functions",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489278231/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489284303",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1489284303",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1489284303,
    "node_id": "IC_kwDOGBlvNc5YxKzP",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T20:44:09Z",
    "updated_at": "2023-03-29T20:44:09Z",
    "author_association": "COLLABORATOR",
    "body": "> @mds1 I think both fixes would be pretty simple\r\n\r\nSorry just to clarify, this is just a single solution that would behave as follows:\r\n- Define 5-10 default random senders to use for invariant testing?\r\n- Derive those hardcoded addresses as `address(uint160(uint256(keccak256(\"invariant sender i\"))))` for `i` in the range of `1..=10` (or however many senders we generate)\r\n- Since no one will have the private key for these addresses, we know, code, balance, and nonce will always be zero\r\n- We can consider also adding a flag to switch back to the current behavior of \"If `senders` is empty, then it's either a random address (10%) or from the dictionary (90%).\" IMO we can leave this out for now and only add it back in if requested, or if @joshieDo has a reason for the current approach that we're not thinking of. I know @lucas-manuel usually uses `targetSenders` so I think he'd be onboard with this change and not need a flag to bring back old behavior",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1489284303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1490735657",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4656#issuecomment-1490735657",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4656",
    "id": 1490735657,
    "node_id": "IC_kwDOGBlvNc5Y2tIp",
    "user": {
      "login": "cdgmachado0",
      "id": 59457858,
      "node_id": "MDQ6VXNlcjU5NDU3ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/59457858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdgmachado0",
      "html_url": "https://github.com/cdgmachado0",
      "followers_url": "https://api.github.com/users/cdgmachado0/followers",
      "following_url": "https://api.github.com/users/cdgmachado0/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdgmachado0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdgmachado0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdgmachado0/subscriptions",
      "organizations_url": "https://api.github.com/users/cdgmachado0/orgs",
      "repos_url": "https://api.github.com/users/cdgmachado0/repos",
      "events_url": "https://api.github.com/users/cdgmachado0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdgmachado0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-30T18:23:02Z",
    "updated_at": "2023-03-30T18:23:02Z",
    "author_association": "NONE",
    "body": "Just to let you know guys, `targetSender` didn't work as a workaround. It still hangs.\r\n\r\nOr were you able to get a test going? If you did, let me know and I'll check if the problem is me. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1490735657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
