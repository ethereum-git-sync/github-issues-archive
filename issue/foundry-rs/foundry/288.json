{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/288",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/288/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/288/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/288/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/288",
  "id": 1087091358,
  "node_id": "I_kwDOGBlvNc5Ay7Ke",
  "number": 288,
  "title": "Array generated from library breaks `forge test`",
  "user": {
    "login": "exp-table",
    "id": 76456212,
    "node_id": "MDQ6VXNlcjc2NDU2MjEy",
    "avatar_url": "https://avatars.githubusercontent.com/u/76456212?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/exp-table",
    "html_url": "https://github.com/exp-table",
    "followers_url": "https://api.github.com/users/exp-table/followers",
    "following_url": "https://api.github.com/users/exp-table/following{/other_user}",
    "gists_url": "https://api.github.com/users/exp-table/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/exp-table/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/exp-table/subscriptions",
    "organizations_url": "https://api.github.com/users/exp-table/orgs",
    "repos_url": "https://api.github.com/users/exp-table/repos",
    "events_url": "https://api.github.com/users/exp-table/events{/privacy}",
    "received_events_url": "https://api.github.com/users/exp-table/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-12-22T18:51:59Z",
  "updated_at": "2021-12-23T11:43:41Z",
  "closed_at": "2021-12-23T11:42:53Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Using an array, here a bytes32 one, from a library makes `forge test` fails silently, not quite sure. It will simply output :\r\n```\r\nforge test\r\ncompiling...\r\nsuccess.\r\n```\r\n\r\nHere's a PoC to reproduce the bug.\r\n\r\n```\r\npragma solidity 0.8.11;\r\nimport \"ds-test/test.sol\";\r\n\r\nlibrary Constants {\r\n    function getArray() public view returns (bytes32[] memory) {\r\n        bytes32[] memory proof = new bytes32[](3);\r\n        proof[0] = 0x06570d1dea13d007b7788ef942a8b8b7633bcae9a45d1f37355a5105ca3fd5cb;\r\n        proof[1] = 0x8e9049b131eac705735dc3d211d68e5b06e76664ed4fb427bacbf0f72c44fb96;\r\n        proof[2] = 0xccdb13fad8ae8682a348b83d401c1d492d633ec2b0182cdbcbfc143ff0ca7973;\r\n        return proof;\r\n    }\r\n}\r\n\r\ncontract Test {\r\n    bool public ingested;\r\n\r\n    function ingest(bytes32[] calldata array) public {\r\n        ingested = true;\r\n    }\r\n}\r\n\r\ncontract FaultyTest is DSTest {\r\n\r\n    Test test;\r\n\r\n    function setUp() public {\r\n        test = new Test();\r\n    }\r\n\r\n    function test_ingest() public {\r\n        test.ingest(Constants.getArray());\r\n        assertTrue(test.ingested());\r\n    }\r\n\r\n}\r\n```",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/288/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/288/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1000247471",
    "html_url": "https://github.com/foundry-rs/foundry/issues/288#issuecomment-1000247471",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/288",
    "id": 1000247471,
    "node_id": "IC_kwDOGBlvNc47npCv",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-23T11:42:53Z",
    "updated_at": "2021-12-23T11:43:41Z",
    "author_association": "MEMBER",
    "body": "Thanks for the clean repro!\r\n\r\nThis is because the `getArray()` function is `public` and as a result requires library linking, i.e. it's not related to the actual return data type. If you change it to `internal` (which will get it inlined in the contract's bytecode) it works. \r\n\r\nClosing as duplicate of #222!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1000247471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
