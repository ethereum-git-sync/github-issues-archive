{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6564",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6564/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6564/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6564/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6564",
  "id": 2034660480,
  "node_id": "I_kwDOGBlvNc55RnSA",
  "number": 6564,
  "title": "Smart Contract Wallet Simulation",
  "user": {
    "login": "RPate97",
    "id": 25066232,
    "node_id": "MDQ6VXNlcjI1MDY2MjMy",
    "avatar_url": "https://avatars.githubusercontent.com/u/25066232?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/RPate97",
    "html_url": "https://github.com/RPate97",
    "followers_url": "https://api.github.com/users/RPate97/followers",
    "following_url": "https://api.github.com/users/RPate97/following{/other_user}",
    "gists_url": "https://api.github.com/users/RPate97/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/RPate97/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/RPate97/subscriptions",
    "organizations_url": "https://api.github.com/users/RPate97/orgs",
    "repos_url": "https://api.github.com/users/RPate97/repos",
    "events_url": "https://api.github.com/users/RPate97/events{/privacy}",
    "received_events_url": "https://api.github.com/users/RPate97/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-12-11T01:31:24Z",
  "updated_at": "2023-12-11T02:27:00Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\n## Rationale\r\nCurrently, forge scripts only support broadcasting transactions from externally owned accounts. However, various types of smart contract wallets are becoming more popular. There are many cases where forge does not accurately simulate scripts if they are intended to be executed via a smart contract wallet. Simulating transactions that are meant to be sent from a smart contract wallet more accurately would enable third-party wallet developers to provide better integrations with Foundry. It would also open the door to adding native support for smart contract wallets within Foundry.\r\n\r\n## Scope\r\nThe initial scope would just be a new cheat code, `vm.startContractBroadcast` intended to house functionality related to simulating transactions sent from smart contract wallets. This cheat code could be used by third-party wallet developers to accurately simulate forge scripts being executed via their smart contract wallet. \r\n\r\nFor example, [due to EIP-161](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-161.md#specification), smart contract wallets have nonces that start at 1 and increment by 1 for every new contract deployed. Their nonces **do not** increment for every transaction. No existing broadcast or prank cheat code properly simulates this. The `vm.startContractBroadcast` could add logic to support stimulating this. \r\n\r\nIn the long term, the scope could increase to cover other areas that cannot be handled by a broadcast cheat code. For example, simulating deploying externally linked libraries via a smart contract wallet may involve changes to the build process. Even longer term, and if there is community interest, the cheat code could be expanded further to cover actually executing transactions via smart contract wallets natively within Foundry.\r\n\r\n## Why we think this is useful\r\nThere are a lot of cases where transactions sent from smart contract wallets are different from those sent by an EOA. In the short term, having a better way to simulate transactions sent from smart contract wallets would enable third-party wallet developers to provide better integrations with Foundry. In the long term, it would open the door for native support of smart contract wallets within Foundry. \r\n\r\n### Additional context\r\n\r\nI am the CTO of Sphinx which is developing a DevOps platform that is designed to be tightly integrated with Foundry. Our platform uses a Gnosis Safe wallet with a custom module to enable trustless deployments via our platform. We provide a Foundry plugin that enables teams to take their existing forge scripts and execute them via our wallet and platform. You can learn more about what we do [in our documentation](https://github.com/sphinx-labs/sphinx/tree/develop). While developing our plugin, we noticed a variety of cases where Foundry does not accurately simulate transactions that are expected to come from a smart contract wallet. \r\n\r\nRather than just fixing these issues within our plugin, we'd like to contribute back to Foundry by spearheading an effort to make Foundry more compatible with smart contract wallets in general. Obviously, this is helpful to us because it improves the UX of our wallet and platform. But we do think this benefits the Foundry community at large by enabling other smart contact wallets to integrate with Foundry more easily. We also think making incremental improvements in the way Foundry simulates smart contract wallets opens the door for Foundry to natively support smart contract wallets in some capacity in the future. \r\n\r\n> Note: This is a request for feedback. We'd love to make contributions to enable better simulation of smart contract wallets within Foundry, but we wanted to gauge community interest before doing so. Please let us know if you think contributions like this would be beneficial to the project. ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6564/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 1,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6564/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
