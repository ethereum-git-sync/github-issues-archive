{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1040",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1040/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1040/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1040/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1040",
  "id": 1179830214,
  "node_id": "I_kwDOGBlvNc5GUsfG",
  "number": 1040,
  "title": "Test feature for Internal and private tests",
  "user": {
    "login": "catmaxi",
    "id": 40556700,
    "node_id": "MDQ6VXNlcjQwNTU2NzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/40556700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/catmaxi",
    "html_url": "https://github.com/catmaxi",
    "followers_url": "https://api.github.com/users/catmaxi/followers",
    "following_url": "https://api.github.com/users/catmaxi/following{/other_user}",
    "gists_url": "https://api.github.com/users/catmaxi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/catmaxi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/catmaxi/subscriptions",
    "organizations_url": "https://api.github.com/users/catmaxi/orgs",
    "repos_url": "https://api.github.com/users/catmaxi/repos",
    "events_url": "https://api.github.com/users/catmaxi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/catmaxi/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759719790,
      "node_id": "LA_kwDOGBlvNc7gGMVu",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-low",
      "name": "P-low",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: low"
    },
    {
      "id": 3759720129,
      "node_id": "LA_kwDOGBlvNc7gGMbB",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-hard",
      "name": "D-hard",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: hard"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-03-24T17:40:53Z",
  "updated_at": "2022-08-23T16:41:36Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nIt would be very neat to have a way to expose internal/private functions and states through perhaps the same syntax or perhaps a slightly different syntax automatically when using ds-test (perhaps I should make this PR in dapptools?) instead of using the current not ideal ways of testing them which from my knowledge are only:\r\n1. Test only the external/public functions that uses these internal/private fields and if those work correctly you can assume these also work.\r\n2. Make these internal/private fields public when you do test and then make them private/internal again once you're done (which defeats the purpose a bit).\r\n3. Make a new contract which inherits your contract which provides public/external APIs to the internal functions to test them. (this gets very complicated to manage when you have tons of inheritance and multiple overrides of the same function from different parents and multiple virtual functions which tends to happen when you use Openzeppelin's contracts.\r\n\r\nall these 3 methods are definitely not ideal. \r\n\r\nCould there be a way to automatically provide a way to call these functions? This is mostly useful for unit tests of view and pure functions to ensure they're always doing that specific task correctly.\r\n\r\n\r\n\r\nthanks.\n\n### Additional context\n\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1040/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1040/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1078785178",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1040#issuecomment-1078785178",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1040",
    "id": 1078785178,
    "node_id": "IC_kwDOGBlvNc5ATPSa",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-25T08:40:40Z",
    "updated_at": "2022-03-25T08:40:40Z",
    "author_association": "MEMBER",
    "body": "I think following method 3 is the most ideal, to be honest. We would have the exact same issue if we were to try and figure out what private/internal function you want to test - and also, internal/private functions have very different semantics than public/external ones, so this is pretty hard to do. They may be inlined in some cases and otherwise they are just jumps.\r\n\r\ncc @gakonst wdyt?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1078785178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1079368373",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1040#issuecomment-1079368373",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1040",
    "id": 1079368373,
    "node_id": "IC_kwDOGBlvNc5AVdq1",
    "user": {
      "login": "catmaxi",
      "id": 40556700,
      "node_id": "MDQ6VXNlcjQwNTU2NzAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/40556700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/catmaxi",
      "html_url": "https://github.com/catmaxi",
      "followers_url": "https://api.github.com/users/catmaxi/followers",
      "following_url": "https://api.github.com/users/catmaxi/following{/other_user}",
      "gists_url": "https://api.github.com/users/catmaxi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/catmaxi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/catmaxi/subscriptions",
      "organizations_url": "https://api.github.com/users/catmaxi/orgs",
      "repos_url": "https://api.github.com/users/catmaxi/repos",
      "events_url": "https://api.github.com/users/catmaxi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/catmaxi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-25T19:28:16Z",
    "updated_at": "2022-03-25T19:33:40Z",
    "author_association": "NONE",
    "body": "> I think following method 3 is the most ideal, to be honest. We would have the exact same issue if we were to try and figure out what private/internal function you want to test - and also, internal/private functions have very different semantics than public/external ones, so this is pretty hard to do. They may be inlined in some cases and otherwise they are just jumps.\r\n\r\n@onbjerg Though I do agree that the semantics can be different, I think there can be a simpler way to extract the logic out to unit test it. \r\nSo in this sense each unit test would basically be testing only one single internal/private function which should make it a bit easier to figure out I think?\r\n\r\nThough Method 3 isn't too bad, but perhaps a method to automate this would be ideal? Say every internal private functions are added with double underscores or something like that?\r\nIn any case this isn't anything urgent.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1079368373/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1172631836",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1040#issuecomment-1172631836",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1040",
    "id": 1172631836,
    "node_id": "IC_kwDOGBlvNc5F5PEc",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-01T18:58:11Z",
    "updated_at": "2022-07-01T18:58:11Z",
    "author_association": "MEMBER",
    "body": "I've tentatively added this to the v1 milestone and assigned myself, but it may turn out to be impractical to implement so it might be removed from the milestone",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1172631836/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
