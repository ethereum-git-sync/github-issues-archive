{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3093",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3093/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3093/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3093/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3093",
  "id": 1362421447,
  "node_id": "I_kwDOGBlvNc5RNObH",
  "number": 3093,
  "title": "much more transaction info needed when reverted",
  "user": {
    "login": "henry-hz",
    "id": 1010008,
    "node_id": "MDQ6VXNlcjEwMTAwMDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1010008?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/henry-hz",
    "html_url": "https://github.com/henry-hz",
    "followers_url": "https://api.github.com/users/henry-hz/followers",
    "following_url": "https://api.github.com/users/henry-hz/following{/other_user}",
    "gists_url": "https://api.github.com/users/henry-hz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/henry-hz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/henry-hz/subscriptions",
    "organizations_url": "https://api.github.com/users/henry-hz/orgs",
    "repos_url": "https://api.github.com/users/henry-hz/repos",
    "events_url": "https://api.github.com/users/henry-hz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/henry-hz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752609,
      "node_id": "LA_kwDOGBlvNc7cwseh",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-cast",
      "name": "C-cast",
      "color": "5319E7",
      "default": false,
      "description": "Command: cast"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-09-05T19:49:46Z",
  "updated_at": "2023-02-28T21:05:12Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nCast\r\n\r\n### Describe the feature you would like\r\n\r\nWhen a transaction fails, on cast we receive a really small and mystical information.  See the difference between seth and cast below. Maybe because the output does not include the transaction hash [so it becomes impossible to debug], this feature request could be considered a bug.\r\n\r\n```\r\ndex master* ❯ cast send 0x856e4424f806D16E8CBC702B3c0F2ede5468eae5 \"claim(uint256)\" 1                                                                                                                        22:45:44\r\nInsert keystore password:\r\n\r\nError:\r\n(code: 3, message: execution reverted, data: Some(String(\"0x4e487b710000000000000000000000000000000000000000000000000000000000000011\")))\r\n\r\ndex master* ❯ seth send 0x856e4424f806D16E8CBC702B3c0F2ede5468eae5 \"claim(uint256)\" 1                                                                                                                        22:46:01\r\nseth-send: warning: `ETH_GAS' not set; using default gas amount\r\nseth-send: Published transaction with 36 bytes of calldata.\r\nseth-send: 0xcad400db3d7296437c396e1335baa3d15397f9deb9e209e95091eb2cb704b982\r\nseth-send: Waiting for transaction receipt...\r\nseth-send: Transaction failed.\r\nblockHash               0x231c4d68988c27b7881ff1f537e471a6e386b545a969c67cbf8d4782449f3743\r\nblockNumber             31\r\ncontractAddress         null\r\ncumulativeGasUsed       104942\r\neffectiveGasPrice       1020779290\r\nfrom                    0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266\r\ngasUsed                 104942\r\nlogs                    []\r\nlogsBloom               0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\nstatus                  0\r\nto                      0x856e4424f806d16e8cbc702b3c0f2ede5468eae5\r\ntransactionHash         0xcad400db3d7296437c396e1335baa3d15397f9deb9e209e95091eb2cb704b982\r\ntransactionIndex        0\r\n\r\n```\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3093/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3093/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1251616792",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3093#issuecomment-1251616792",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3093",
    "id": 1251616792,
    "node_id": "IC_kwDOGBlvNc5KmigY",
    "user": {
      "login": "tgfukuda",
      "id": 32447276,
      "node_id": "MDQ6VXNlcjMyNDQ3Mjc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32447276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tgfukuda",
      "html_url": "https://github.com/tgfukuda",
      "followers_url": "https://api.github.com/users/tgfukuda/followers",
      "following_url": "https://api.github.com/users/tgfukuda/following{/other_user}",
      "gists_url": "https://api.github.com/users/tgfukuda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tgfukuda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tgfukuda/subscriptions",
      "organizations_url": "https://api.github.com/users/tgfukuda/orgs",
      "repos_url": "https://api.github.com/users/tgfukuda/repos",
      "events_url": "https://api.github.com/users/tgfukuda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tgfukuda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-19T22:07:08Z",
    "updated_at": "2022-09-19T22:07:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the main reason of such a small information comes from a failure in gas estimation.\r\n\r\nBelow is executed on mainnet fork and `0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2` is WETH9.\r\nThe sender is anvil's generated address and have no WETH9, so it would fail.\r\n```\r\ncast send --rpc-url http://127.0.0.1:8545 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 'withdraw(uint)' $(cast --to-wei 1 eth)\r\n(code: 3, message: execution reverted, data: Some(String(\"0x\")))\r\n```\r\nanvil log:\r\n```\r\neth_chainId\r\neth_getTransactionCount\r\neth_getBlockByNumber\r\neth_feeHistory\r\neth_estimateGas\r\n```\r\n\r\nIf we provide gas constrants to `cast`, then it will send the given transaction though it may reverted.\r\n\r\n```\r\ncast send --rpc-url http://127.0.0.1:8545 --gas-limit 7000000 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 'withdraw(uint)' $(target/debug/cast --to-wei 1 eth)\r\n\r\nblockHash               0x1bac83e90ae264a34eaa874f26dc3114d2829bdcafc295ae187384d663fca97d\r\nblockNumber             15570278\r\ncontractAddress         \r\ncumulativeGasUsed       23731\r\neffectiveGasPrice       11700454506\r\ngasUsed                 23731\r\nlogs                    []\r\nlogsBloom               0xr\nroot                    \r\nstatus                  0\r\ntransactionHash         0x303f38372ebc5a27b3c5f6d524faeb8378aedaf82f44ea6dc9c369d612d13cf3\r\ntransactionIndex        0\r\ntype\r\n```\r\nanvil log:\r\n```\r\neth_chainId\r\neth_getTransactionCount\r\neth_getBlockByNumber\r\neth_feeHistory\r\neth_sendRawTransaction\r\n\r\n    Transaction: 0x303f38372ebc5a27b3c5f6d524faeb8378aedaf82f44ea6dc9c369d612d13cf3\r\n    Gas used: 23731\r\n    Error: reverted without a reason string\r\n\r\n    Block Number: 15570278\r\n    Block Hash: 0x1bac83e90ae264a34eaa874f26dc3114d2829bdcafc295ae187384d663fca97d\r\n    Block Time: \"Mon, 19 Sep 2022 21:51:24 +0000\"\r\n\r\neth_getTransactionReceipt\r\n```\r\n\r\nHowever, it is a good idea to give some hints or set default gas like `seth`.\r\nI think the best approach is using evm, but I'm not sure it is possible.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1251616792/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1416689621",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3093#issuecomment-1416689621",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3093",
    "id": 1416689621,
    "node_id": "IC_kwDOGBlvNc5UcPfV",
    "user": {
      "login": "microbecode",
      "id": 20242241,
      "node_id": "MDQ6VXNlcjIwMjQyMjQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/20242241?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/microbecode",
      "html_url": "https://github.com/microbecode",
      "followers_url": "https://api.github.com/users/microbecode/followers",
      "following_url": "https://api.github.com/users/microbecode/following{/other_user}",
      "gists_url": "https://api.github.com/users/microbecode/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/microbecode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/microbecode/subscriptions",
      "organizations_url": "https://api.github.com/users/microbecode/orgs",
      "repos_url": "https://api.github.com/users/microbecode/repos",
      "events_url": "https://api.github.com/users/microbecode/events{/privacy}",
      "received_events_url": "https://api.github.com/users/microbecode/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-04T07:49:09Z",
    "updated_at": "2023-02-04T07:49:09Z",
    "author_association": "NONE",
    "body": "I'm new to Foundry, but wondering about this weird error message `Some(String(\"0x\"))`, even if there should be a real revert string. What could be done about this? Thanks",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1416689621/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1448818387",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3093#issuecomment-1448818387",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3093",
    "id": 1448818387,
    "node_id": "IC_kwDOGBlvNc5WWzbT",
    "user": {
      "login": "nftchef",
      "id": 91582112,
      "node_id": "U_kgDOBXVuoA",
      "avatar_url": "https://avatars.githubusercontent.com/u/91582112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nftchef",
      "html_url": "https://github.com/nftchef",
      "followers_url": "https://api.github.com/users/nftchef/followers",
      "following_url": "https://api.github.com/users/nftchef/following{/other_user}",
      "gists_url": "https://api.github.com/users/nftchef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nftchef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nftchef/subscriptions",
      "organizations_url": "https://api.github.com/users/nftchef/orgs",
      "repos_url": "https://api.github.com/users/nftchef/repos",
      "events_url": "https://api.github.com/users/nftchef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nftchef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-28T20:10:35Z",
    "updated_at": "2023-02-28T20:10:35Z",
    "author_association": "NONE",
    "body": "It appears that the `Some(String(\"0x\"))` message is appearing when using custom Error functions/reverts and returns the Error function selector. is there support for getting the string representation of the error? ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1448818387/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1448835352",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3093#issuecomment-1448835352",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3093",
    "id": 1448835352,
    "node_id": "IC_kwDOGBlvNc5WW3kY",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-28T20:19:12Z",
    "updated_at": "2023-02-28T20:19:12Z",
    "author_association": "MEMBER",
    "body": "> It appears that the Some(String(\"0x\")) message is appearing \r\n\r\nappearing where exactly?\r\n\r\ndecoding custom errors without knowing the abi is a bit hard. we have some fuzzy matching for custom errors somewhere but it don't think it's enabled here.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1448835352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1448896810",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3093#issuecomment-1448896810",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3093",
    "id": 1448896810,
    "node_id": "IC_kwDOGBlvNc5WXGkq",
    "user": {
      "login": "nftchef",
      "id": 91582112,
      "node_id": "U_kgDOBXVuoA",
      "avatar_url": "https://avatars.githubusercontent.com/u/91582112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nftchef",
      "html_url": "https://github.com/nftchef",
      "followers_url": "https://api.github.com/users/nftchef/followers",
      "following_url": "https://api.github.com/users/nftchef/following{/other_user}",
      "gists_url": "https://api.github.com/users/nftchef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nftchef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nftchef/subscriptions",
      "organizations_url": "https://api.github.com/users/nftchef/orgs",
      "repos_url": "https://api.github.com/users/nftchef/repos",
      "events_url": "https://api.github.com/users/nftchef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nftchef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-28T20:51:57Z",
    "updated_at": "2023-02-28T20:54:30Z",
    "author_association": "NONE",
    "body": "sorry about that,\r\n\r\n`Some(String(\"0x\"))` is appearing when using `cast send ` on a function with a custom error revert. e.g.,\r\n\r\n```\r\nerror InsufficientFunds();\r\n\r\n.\r\n.\r\n.\r\nif (msg.value < _quantity * PRICE) {\r\n            revert InsufficientFunds();\r\n}\r\n```\r\n`forge test` works as expected on these same functions ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1448896810/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1448915376",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3093#issuecomment-1448915376",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3093",
    "id": 1448915376,
    "node_id": "IC_kwDOGBlvNc5WXLGw",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-28T21:05:11Z",
    "updated_at": "2023-02-28T21:05:11Z",
    "author_association": "MEMBER",
    "body": "looks like this is a bug in revm that has been fixed in 3.0 release but we haven't migrated yet.\r\n\r\nref #4356 ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1448915376/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
