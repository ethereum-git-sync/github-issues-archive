{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1022",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1022/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1022/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1022/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1022",
  "id": 1177472289,
  "node_id": "I_kwDOGBlvNc5GLs0h",
  "number": 1022,
  "title": "Mode to export csv of fuzz inputs and return values",
  "user": {
    "login": "transmissions11",
    "id": 26209401,
    "node_id": "MDQ6VXNlcjI2MjA5NDAx",
    "avatar_url": "https://avatars.githubusercontent.com/u/26209401?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/transmissions11",
    "html_url": "https://github.com/transmissions11",
    "followers_url": "https://api.github.com/users/transmissions11/followers",
    "following_url": "https://api.github.com/users/transmissions11/following{/other_user}",
    "gists_url": "https://api.github.com/users/transmissions11/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/transmissions11/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/transmissions11/subscriptions",
    "organizations_url": "https://api.github.com/users/transmissions11/orgs",
    "repos_url": "https://api.github.com/users/transmissions11/repos",
    "events_url": "https://api.github.com/users/transmissions11/events{/privacy}",
    "received_events_url": "https://api.github.com/users/transmissions11/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3394554570,
      "node_id": "LA_kwDOGBlvNc7KVMrK",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-fuzzing",
      "name": "A-fuzzing",
      "color": "FBCA04",
      "default": false,
      "description": "Area: fuzzing"
    },
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759719790,
      "node_id": "LA_kwDOGBlvNc7gGMVu",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-low",
      "name": "P-low",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: low"
    },
    {
      "id": 3759720362,
      "node_id": "LA_kwDOGBlvNc7gGMeq",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-average",
      "name": "D-average",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: average"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2022-03-23T01:17:33Z",
  "updated_at": "2022-07-01T19:07:33Z",
  "closed_at": "2022-07-01T19:07:33Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nrunning `forge test --export` would output a csv mapping fuzz inputs of each test function (or a specific if you use --match) to their corresponding return values \r\n\r\n### Additional context\r\n\r\nwhen doing anything involving complex fixed point math it's often desired to benchmark against a more precise impl done outside of solidity. using ffi is slow and manually setting up loops is tedious and doesn't often highlight the edge cases of a function we care about. outputting a csv would allow anyone to easily plug the data into a tool like mathematica, matlab, another language, etc to benchmark against a precise version and build more accurate arithmetic functions :D",
  "closed_by": {
    "login": "transmissions11",
    "id": 26209401,
    "node_id": "MDQ6VXNlcjI2MjA5NDAx",
    "avatar_url": "https://avatars.githubusercontent.com/u/26209401?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/transmissions11",
    "html_url": "https://github.com/transmissions11",
    "followers_url": "https://api.github.com/users/transmissions11/followers",
    "following_url": "https://api.github.com/users/transmissions11/following{/other_user}",
    "gists_url": "https://api.github.com/users/transmissions11/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/transmissions11/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/transmissions11/subscriptions",
    "organizations_url": "https://api.github.com/users/transmissions11/orgs",
    "repos_url": "https://api.github.com/users/transmissions11/repos",
    "events_url": "https://api.github.com/users/transmissions11/events{/privacy}",
    "received_events_url": "https://api.github.com/users/transmissions11/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1022/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1022/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1075810119",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1022#issuecomment-1075810119",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1022",
    "id": 1075810119,
    "node_id": "IC_kwDOGBlvNc5AH49H",
    "user": {
      "login": "transmissions11",
      "id": 26209401,
      "node_id": "MDQ6VXNlcjI2MjA5NDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26209401?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/transmissions11",
      "html_url": "https://github.com/transmissions11",
      "followers_url": "https://api.github.com/users/transmissions11/followers",
      "following_url": "https://api.github.com/users/transmissions11/following{/other_user}",
      "gists_url": "https://api.github.com/users/transmissions11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/transmissions11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/transmissions11/subscriptions",
      "organizations_url": "https://api.github.com/users/transmissions11/orgs",
      "repos_url": "https://api.github.com/users/transmissions11/repos",
      "events_url": "https://api.github.com/users/transmissions11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/transmissions11/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-23T01:19:31Z",
    "updated_at": "2022-03-23T01:19:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "possibly related to #991",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1075810119/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1076436879",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1022#issuecomment-1076436879",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1022",
    "id": 1076436879,
    "node_id": "IC_kwDOGBlvNc5AKR-P",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-23T14:24:03Z",
    "updated_at": "2022-03-23T14:24:03Z",
    "author_association": "COLLABORATOR",
    "body": "Potential spec of how this + #991 should work from a UX standpoint. Open to modifying this, @transmissions11 @brockelmore let me know your thoughts:\r\n\r\nBecause we now also save return values from tests, instead of `--save-corpus` as mentioned in #991, perhaps we just use `--save` or `--export` which always saves both the inputs and return values. Though we could split them up into two flags also, I'm indifferent here. Either way, behavior would be something like this:\r\n1. Save off the corpus file(s) needed to replay a fuzz campaign (not sure if this needs to be one or multiple files, need to look into what proptest does)\r\n2. Save the output data from each test as `testThisIsMyTestName.csv` by default, or `testMyCustomTest.json` if a `--json` flag is passed\r\n3. The corpus and output files should get saved in a new directory called something like `corpus`, `data`, or `exports`. Probably don't want to save it in `cache` or `out` so they are not accidentally deleted when running `forge clean` or manually deleting those folders, plus I can see use cases for committing the corpus files and using them in CI to ensure there's no regressions for certain cases. Probably should add this new folder to the .gitignore that's generated when running `forge init` and users can remove it from .gitignore if they want to commit certain files\r\n4. Saved output data would be structured as follows:\r\n    1. For fuzz tests, each row in your CSV has the input and return values from that fuzz run. Input columns are named after the function's input names, output columns are named after the named return params or some default name like `return1`, `return2` if not using named returns.\r\n    2. For invariant tests, each row of data has the run number, depth value, and lists the provided function name, selector, parsed calldata, and raw calldata. Then outputs would still be the return params.\r\n    3. For concrete (regular, non-fuzz) tests, this functionality is useful for parametric sweeps (i.e. calling a method on a predefined range of values). So we may need a cheatcode to mark the corresponding input data array  and it's column name in the test. Then return values would be an array with the same length as that input data array.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1076436879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1076964674",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1022#issuecomment-1076964674",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1022",
    "id": 1076964674,
    "node_id": "IC_kwDOGBlvNc5AMS1C",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-24T01:01:02Z",
    "updated_at": "2022-03-24T01:01:02Z",
    "author_association": "MEMBER",
    "body": "Can you elaborate on what you mean by return value? The revert reason, if any?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1076964674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1076976266",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1022#issuecomment-1076976266",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1022",
    "id": 1076976266,
    "node_id": "IC_kwDOGBlvNc5AMVqK",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-24T01:26:47Z",
    "updated_at": "2022-03-24T01:26:47Z",
    "author_association": "COLLABORATOR",
    "body": "Ah sorry, like the literal test function return value. Right now afaik no one adds return values to their test methods because there's no use for doing so, but this method would change that. For example:\r\n\r\n```solidity\r\n// say we're testing a math function to compute e^x\r\nfunction testExp(uint256 x) public returns (uint y) {\r\n  y = myMathLib.exp(x);\r\n  // maybe some assertions here\r\n} \r\n```\r\n\r\nThe above fuzz test would output a csv (or json) file with the first column being the run number, the second being the values of `x` during each fuzz fun, and the third column being the value of `y` returned from `testMyMethod`",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1076976266/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1098564276",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1022#issuecomment-1098564276",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1022",
    "id": 1098564276,
    "node_id": "IC_kwDOGBlvNc5BesK0",
    "user": {
      "login": "dmfxyz",
      "id": 100147743,
      "node_id": "U_kgDOBfgiHw",
      "avatar_url": "https://avatars.githubusercontent.com/u/100147743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dmfxyz",
      "html_url": "https://github.com/dmfxyz",
      "followers_url": "https://api.github.com/users/dmfxyz/followers",
      "following_url": "https://api.github.com/users/dmfxyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/dmfxyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dmfxyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dmfxyz/subscriptions",
      "organizations_url": "https://api.github.com/users/dmfxyz/orgs",
      "repos_url": "https://api.github.com/users/dmfxyz/repos",
      "events_url": "https://api.github.com/users/dmfxyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dmfxyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-13T23:13:33Z",
    "updated_at": "2022-04-13T23:13:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Adding my interest to this. Deterministic fuzzing would be great for testing gas improvements to functions with very dynamically sized inputs e.g. [merkle-proof generation, verification, and comparison](https://github.com/dmfxyz/murky/blob/main/src/test/GenericMerkle.t.sol#L31). FFI is a work around but would be nice to keep everything within the foundry ecosystem.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1098564276/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1172633275",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1022#issuecomment-1172633275",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1022",
    "id": 1172633275,
    "node_id": "IC_kwDOGBlvNc5F5Pa7",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-01T18:59:32Z",
    "updated_at": "2022-07-01T18:59:32Z",
    "author_association": "MEMBER",
    "body": "Is your use case covered by #2038? :smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1172633275/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1172641083",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1022#issuecomment-1172641083",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1022",
    "id": 1172641083,
    "node_id": "IC_kwDOGBlvNc5F5RU7",
    "user": {
      "login": "transmissions11",
      "id": 26209401,
      "node_id": "MDQ6VXNlcjI2MjA5NDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26209401?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/transmissions11",
      "html_url": "https://github.com/transmissions11",
      "followers_url": "https://api.github.com/users/transmissions11/followers",
      "following_url": "https://api.github.com/users/transmissions11/following{/other_user}",
      "gists_url": "https://api.github.com/users/transmissions11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/transmissions11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/transmissions11/subscriptions",
      "organizations_url": "https://api.github.com/users/transmissions11/orgs",
      "repos_url": "https://api.github.com/users/transmissions11/repos",
      "events_url": "https://api.github.com/users/transmissions11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/transmissions11/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-01T19:07:19Z",
    "updated_at": "2022-07-01T19:07:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "for me it is yes, i did some analysis with a csv yesterday and it was wonderful",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1172641083/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
