{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3818",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3818/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3818/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3818/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3818",
  "id": 1472497567,
  "node_id": "I_kwDOGBlvNc5XxIef",
  "number": 3818,
  "title": "Support loading mnemonic + HD path as encrypted keystore",
  "user": {
    "login": "GopherJ",
    "id": 33961674,
    "node_id": "MDQ6VXNlcjMzOTYxNjc0",
    "avatar_url": "https://avatars.githubusercontent.com/u/33961674?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/GopherJ",
    "html_url": "https://github.com/GopherJ",
    "followers_url": "https://api.github.com/users/GopherJ/followers",
    "following_url": "https://api.github.com/users/GopherJ/following{/other_user}",
    "gists_url": "https://api.github.com/users/GopherJ/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/GopherJ/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/GopherJ/subscriptions",
    "organizations_url": "https://api.github.com/users/GopherJ/orgs",
    "repos_url": "https://api.github.com/users/GopherJ/repos",
    "events_url": "https://api.github.com/users/GopherJ/events{/privacy}",
    "received_events_url": "https://api.github.com/users/GopherJ/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752609,
      "node_id": "LA_kwDOGBlvNc7cwseh",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-cast",
      "name": "C-cast",
      "color": "5319E7",
      "default": false,
      "description": "Command: cast"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-12-02T08:33:12Z",
  "updated_at": "2023-04-12T21:50:31Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nCast\n\n### Describe the feature you would like\n\nCurrently cast only support generating random keypair, it'll be great to support creating encrypted keystore using existing mnemonic + HD path.\r\n\r\nMetamask didn't support exporting as encrypted json. That's why I'm seeking tools to export without re-inventing wheels\n\n### Additional context\n\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3818/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3818/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1506003620",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3818#issuecomment-1506003620",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3818",
    "id": 1506003620,
    "node_id": "IC_kwDOGBlvNc5Zw8qk",
    "user": {
      "login": "PatrickAlphaC",
      "id": 54278053,
      "node_id": "MDQ6VXNlcjU0Mjc4MDUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/54278053?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PatrickAlphaC",
      "html_url": "https://github.com/PatrickAlphaC",
      "followers_url": "https://api.github.com/users/PatrickAlphaC/followers",
      "following_url": "https://api.github.com/users/PatrickAlphaC/following{/other_user}",
      "gists_url": "https://api.github.com/users/PatrickAlphaC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PatrickAlphaC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PatrickAlphaC/subscriptions",
      "organizations_url": "https://api.github.com/users/PatrickAlphaC/orgs",
      "repos_url": "https://api.github.com/users/PatrickAlphaC/repos",
      "events_url": "https://api.github.com/users/PatrickAlphaC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PatrickAlphaC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-12T21:50:30Z",
    "updated_at": "2023-04-12T21:50:30Z",
    "author_association": "NONE",
    "body": "An API like:\r\n\r\n```\r\ncast wallet import <NAME> <KEY>\r\n```\r\n\r\nWhich then prompts the user for a password, and ecrypts it locally. Somewhere like:\r\n\r\n```\r\n~/.cast/wallets/<name>_keystore.json\r\n```\r\n\r\nThen, have a command to list stored keystores:\r\n\r\n```\r\ncast wallet list\r\n```\r\n\r\nAnd, then, when deploying commands with forge or cast, add the option to prompt the user to decrypt their password:\r\n\r\n```\r\n$ forge script script/Deploy.s.sol --rpc-url $RPC_URL --cast-wallet <WALLET_NAME>\r\n\r\nenter password to decrypt <WALLET_NAME>\r\n_\r\n```\r\n\r\nOr\r\n\r\n```\r\n$ cast send [TO] [SIG] [ARGS] --cast-wallet <WALLET_NAME>\r\n\r\nenter password to decrypt <WALLET_NAME>\r\n_\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1506003620/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
