{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2418",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2418/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2418/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2418/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2418",
  "id": 1312184304,
  "node_id": "I_kwDOGBlvNc5ONlfw",
  "number": 2418,
  "title": "`forge fmt` parsing errors are unhelpful",
  "user": {
    "login": "sambacha",
    "id": 32783916,
    "node_id": "MDQ6VXNlcjMyNzgzOTE2",
    "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sambacha",
    "html_url": "https://github.com/sambacha",
    "followers_url": "https://api.github.com/users/sambacha/followers",
    "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
    "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
    "organizations_url": "https://api.github.com/users/sambacha/orgs",
    "repos_url": "https://api.github.com/users/sambacha/repos",
    "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sambacha/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3854691308,
      "node_id": "LA_kwDOGBlvNc7lwevs",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-fmt",
      "name": "Cmd-forge-fmt",
      "color": "006B75",
      "default": false,
      "description": "Command: forge fmt"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2022-07-21T00:13:14Z",
  "updated_at": "2022-08-12T07:25:06Z",
  "closed_at": "2022-08-11T21:10:38Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [X] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (cce3a44 2022-07-20T00:14:55.494548Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nforge fmt \r\n\r\n### Operating System\r\n\r\nmacOS (Intel)\r\n\r\n### Describe the bug\r\n\r\nThe error message from `forge fmt`\r\n```console\r\nFailed to parse Solidity code for src/immutable/as_function_param.sol. Leaving source unchanged.\r\nDebug info: [Diagnostic { loc: File(168, 33, 42), level: Error, ty: ParserError, message: \"unrecognised token 'immutable', \r\n\r\nexpected \\\"!=\\\", \\\"%\\\", \\\"%=\\\", \\\"&\\\", \\\"&&\\\", \\\"&=\\\", \\\"(\\\", \\\")\\\", \\\"*\\\", \\\"**\\\", \\\"*=\\\", \\\"+\\\", \\\"++\\\", \\\"+=\\\", \\\",\\\", \\\"-\\\", \\\"--\\\", \\\"-=\\\", \\\".\\\", \\\"/\\\", \\\"/=\\\", \\\":\\\", \\\";\\\", \\\"<\\\", \\\"<<\\\", \\\"<<=\\\", \\\"<=\\\", \\\"=\\\", \\\"==\\\", \\\"=>\\\", \\\">\\\", \\\">=\\\", \\\">>\\\", \\\">>=\\\", \\\"?\\\", \\\"[\\\", \\\"]\\\", \\\"^\\\", \\\"^=\\\", \\\"calldata\\\", \\\"case\\\", \\\"days\\\", \\\"default\\\", \\\"error\\\", \\\"ether\\\", \\\"gwei\\\", \\\"hours\\\", \\\"indexed\\\", \\\"leave\\\", \\\"memory\\\", \\\"minutes\\\", \\\"revert\\\", \\\"seconds\\\", \\\"storage\\\", \\\"switch\\\", \\\"weeks\\\", \\\"wei\\\", \\\"{\\\", \\\"|\\\", \\\"|=\\\", \\\"||\\\", \\\"}\\\", identifier\", notes: [] }]\r\n\r\n```\r\n\r\nContrasted with `solc`:\r\n\r\n```solidity\r\ncontract C {\r\n    function f(uint immutable) public pure {}\r\n}\r\n// ----\r\n// DeclarationError 8297: (28-42): The \"immutable\" keyword can only be used for state variables.\r\n```\r\n\r\nThere are more errors like this, e.g. \r\n\r\n```console\r\nunhelpful:~ $ Debug info: [Diagnostic { loc: File(47, 9, 16), level: Error, ty: ParserError, message: \"unrecognised token 'library', expected \\\"contract\\\"\", notes: [] }]\r\n```\r\n```console\r\n\r\nhelpful:~ $ TypeError 9571: (0-22): Libraries cannot be abstract.",
  "closed_by": {
    "login": "rkrasiuk",
    "id": 25429261,
    "node_id": "MDQ6VXNlcjI1NDI5MjYx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25429261?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rkrasiuk",
    "html_url": "https://github.com/rkrasiuk",
    "followers_url": "https://api.github.com/users/rkrasiuk/followers",
    "following_url": "https://api.github.com/users/rkrasiuk/following{/other_user}",
    "gists_url": "https://api.github.com/users/rkrasiuk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rkrasiuk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rkrasiuk/subscriptions",
    "organizations_url": "https://api.github.com/users/rkrasiuk/orgs",
    "repos_url": "https://api.github.com/users/rkrasiuk/repos",
    "events_url": "https://api.github.com/users/rkrasiuk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rkrasiuk/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2418/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2418/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191864391",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2418#issuecomment-1191864391",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2418",
    "id": 1191864391,
    "node_id": "IC_kwDOGBlvNc5HCmhH",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T19:41:04Z",
    "updated_at": "2022-07-21T19:41:04Z",
    "author_association": "MEMBER",
    "body": "These are not necessarily incorrect, they are just more opaque because the formatter uses solang-parser to parse the code, it does not use solc in any capacity, so the error is from solang-parser. Will probably need to do a general error message pass on the formatter where possible, so I'll change this issue to that instead",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191864391/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191866241",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2418#issuecomment-1191866241",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2418",
    "id": 1191866241,
    "node_id": "IC_kwDOGBlvNc5HCm-B",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T19:43:26Z",
    "updated_at": "2022-07-21T19:43:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "> These are not necessarily incorrect, they are just more opaque because the formatter uses solang-parser to parse the code, it does not use solc in any capacity, so the error is from solang-parser. Will probably need to do a general error message pass on the formatter where possible, so I'll change this issue to that instead\n\nyup, though should there be a check post fmt that ensures it compiles as a sort of sanity check?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191866241/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191867264",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2418#issuecomment-1191867264",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2418",
    "id": 1191867264,
    "node_id": "IC_kwDOGBlvNc5HCnOA",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T19:44:43Z",
    "updated_at": "2022-07-21T19:44:43Z",
    "author_association": "MEMBER",
    "body": "The parser would error before that anyway, so my point re: error messages still stands :)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191867264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191868713",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2418#issuecomment-1191868713",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2418",
    "id": 1191868713,
    "node_id": "IC_kwDOGBlvNc5HCnkp",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T19:46:34Z",
    "updated_at": "2022-07-21T19:46:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The parser would error before that anyway, so my point re: error messages still stands :)\n\nOk, for reference the parser used by prettier solidity is relaxed wrt how strict it enforces reading, so your saying that the parser is infact as strict as solc gotcha ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191868713/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191872868",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2418#issuecomment-1191872868",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2418",
    "id": 1191872868,
    "node_id": "IC_kwDOGBlvNc5HColk",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T19:51:45Z",
    "updated_at": "2022-07-21T19:51:55Z",
    "author_association": "MEMBER",
    "body": "Doesn't really matter if it's as strict as solc in this context, it won't make solc/solang-parser interchangeable and it won't make it possible to invoke solc for a sanity check before we do the formatting. =\r\n\r\nCan't speak to the parser used by prettier-solidity other than that we obviously can't use it :) =\r\n\r\nDon't know much about how solang-parser works, it might be an option to make it more lax (cc @seanyoung) but it would likely require some work. To be clear: the error is from solang-parser itself, we do not control this specific part so we cannot make it more lax in our codebase",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191872868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1192289335",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2418#issuecomment-1192289335",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2418",
    "id": 1192289335,
    "node_id": "IC_kwDOGBlvNc5HEOQ3",
    "user": {
      "login": "seanyoung",
      "id": 816900,
      "node_id": "MDQ6VXNlcjgxNjkwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/816900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seanyoung",
      "html_url": "https://github.com/seanyoung",
      "followers_url": "https://api.github.com/users/seanyoung/followers",
      "following_url": "https://api.github.com/users/seanyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/seanyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seanyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seanyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/seanyoung/orgs",
      "repos_url": "https://api.github.com/users/seanyoung/repos",
      "events_url": "https://api.github.com/users/seanyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seanyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-22T07:51:53Z",
    "updated_at": "2022-07-22T07:51:53Z",
    "author_association": "NONE",
    "body": "We have a hyperledger mentorship mentee who will work on making the parser more lax: https://wiki.hyperledger.org/display/INTERN/Solang+Solidity+Compiler+optimizations+and+error+handling\r\n\r\nThat doesn't deal with the quality of the error message though. The way solang works through the following stages:\r\n- parse:  this based on parser generated from grammar, this is solang-parser\r\n- sema: semantic analysis. This checks that the solidity file is entirely valid, and produces a validated ast.\r\n- codegen: generate CFG style code\r\n- emit: generate llvm IR\r\n\r\nCurrently `forge fmt` uses the raw parse tree from solang-parser. Ideally it would use the ast produced by sema, but sema is not complete yet (especially for evm solidity, it was written for non-evm chains). Once we get sema in order, `forge fmt` can switch to the ast from solang and generate source code based on a fully validated parse tree.\r\n\r\nIn the mean time, errors like `The \"immutable\" keyword can only be used for state variables.` is not something the parser can produce, that is something that sema does.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1192289335/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206858437",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2418#issuecomment-1206858437",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2418",
    "id": 1206858437,
    "node_id": "IC_kwDOGBlvNc5H7zLF",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T20:57:58Z",
    "updated_at": "2022-08-05T20:57:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "> We have a hyperledger mentorship mentee who will work on making the parser more lax: https://wiki.hyperledger.org/display/INTERN/Solang+Solidity+Compiler+optimizations+and+error+handling\r\n> \r\n> That doesn't deal with the quality of the error message though. The way solang works through the following stages:\r\n> \r\n> * parse:  this based on parser generated from grammar, this is solang-parser\r\n> * sema: semantic analysis. This checks that the solidity file is entirely valid, and produces a validated ast.\r\n> * codegen: generate CFG style code\r\n> * emit: generate llvm IR\r\n> \r\n> Currently `forge fmt` uses the raw parse tree from solang-parser. Ideally it would use the ast produced by sema, but sema is not complete yet (especially for evm solidity, it was written for non-evm chains). Once we get sema in order, `forge fmt` can switch to the ast from solang and generate source code based on a fully validated parse tree.\r\n> \r\n> In the mean time, errors like `The \"immutable\" keyword can only be used for state variables.` is not something the parser can produce, that is something that sema does.\r\n\r\nWhen do you think it likely sema will be usable in the way you described? Also thank you for the detailed response, this would be helpful to document potentially in the handbook as a reference! ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206858437/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1212495715",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2418#issuecomment-1212495715",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2418",
    "id": 1212495715,
    "node_id": "IC_kwDOGBlvNc5IRTdj",
    "user": {
      "login": "rkrasiuk",
      "id": 25429261,
      "node_id": "MDQ6VXNlcjI1NDI5MjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25429261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkrasiuk",
      "html_url": "https://github.com/rkrasiuk",
      "followers_url": "https://api.github.com/users/rkrasiuk/followers",
      "following_url": "https://api.github.com/users/rkrasiuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkrasiuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkrasiuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkrasiuk/subscriptions",
      "organizations_url": "https://api.github.com/users/rkrasiuk/orgs",
      "repos_url": "https://api.github.com/users/rkrasiuk/repos",
      "events_url": "https://api.github.com/users/rkrasiuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkrasiuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-11T21:10:38Z",
    "updated_at": "2022-08-11T21:10:38Z",
    "author_association": "COLLABORATOR",
    "body": "summary: considering that the desired error output format is not smth we can produce based on the parse tree, we'll wait for the sema to become more feature complete. closing this issue, feel free to reopen when relevant",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1212495715/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1212810169",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2418#issuecomment-1212810169",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2418",
    "id": 1212810169,
    "node_id": "IC_kwDOGBlvNc5ISgO5",
    "user": {
      "login": "seanyoung",
      "id": 816900,
      "node_id": "MDQ6VXNlcjgxNjkwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/816900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seanyoung",
      "html_url": "https://github.com/seanyoung",
      "followers_url": "https://api.github.com/users/seanyoung/followers",
      "following_url": "https://api.github.com/users/seanyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/seanyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seanyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seanyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/seanyoung/orgs",
      "repos_url": "https://api.github.com/users/seanyoung/repos",
      "events_url": "https://api.github.com/users/seanyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seanyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-12T07:25:06Z",
    "updated_at": "2022-08-12T07:25:06Z",
    "author_association": "NONE",
    "body": "> When do you think it likely sema will be usable in the way you described? \r\n\r\nNot sure. sema would require a new EVM target and running all the same tests through sema and fixing up all the issues. We would all love to see EVM support in solang, and that starts with EVM support in sema. Something we would be definitely be working on at some point.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1212810169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
