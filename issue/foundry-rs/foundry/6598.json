{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6598",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6598/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6598/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6598/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6598",
  "id": 2040675675,
  "node_id": "I_kwDOGBlvNc55oj1b",
  "number": 6598,
  "title": "cast call returns integers in scientific notation",
  "user": {
    "login": "Inphi",
    "id": 3516807,
    "node_id": "MDQ6VXNlcjM1MTY4MDc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3516807?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Inphi",
    "html_url": "https://github.com/Inphi",
    "followers_url": "https://api.github.com/users/Inphi/followers",
    "following_url": "https://api.github.com/users/Inphi/following{/other_user}",
    "gists_url": "https://api.github.com/users/Inphi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Inphi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Inphi/subscriptions",
    "organizations_url": "https://api.github.com/users/Inphi/orgs",
    "repos_url": "https://api.github.com/users/Inphi/repos",
    "events_url": "https://api.github.com/users/Inphi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Inphi/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-12-14T00:38:29Z",
  "updated_at": "2023-12-14T10:23:58Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nCast\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\ncast 0.2.0 (53b15e6 2023-12-14T00:16:29.514805588Z)\n\n### What command(s) is the bug in?\n\ncast call\n\n### Operating System\n\nLinux\n\n### Describe the bug\n\n```\r\ncast call --rpc-url $ALCHEMY_URL  0x1f9840a85d5af5bf1d1762f925bdaddc4201f984 'balanceOf(address) returns(uint256)' 0x1f9840a85d5af5bf1d1762f925bdaddc4201f984\r\n78077338549235265036291 [7.807e22]\r\n```\r\nThe returned numeric output of `cast call` includes the values in scientific notation. I'm not sure when this change in behavior occurred, but the previous versions of cast didn't do this. This breaks scripts that expect a certain format. The old behavior was something like this:\r\n```\r\ncast call --rpc-url $ALCHEMY_URL  0x1f9840a85d5af5bf1d1762f925bdaddc4201f984 'balanceOf(address) returns(uint256)' 0x1f9840a85d5af5bf1d1762f925bdaddc4201f984\r\n78077338549235265036291\r\n```\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6598/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6598/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1855577389",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6598#issuecomment-1855577389",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6598",
    "id": 1855577389,
    "node_id": "IC_kwDOGBlvNc5umd0t",
    "user": {
      "login": "CodeSandwich",
      "id": 26183680,
      "node_id": "MDQ6VXNlcjI2MTgzNjgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/26183680?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeSandwich",
      "html_url": "https://github.com/CodeSandwich",
      "followers_url": "https://api.github.com/users/CodeSandwich/followers",
      "following_url": "https://api.github.com/users/CodeSandwich/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeSandwich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeSandwich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeSandwich/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeSandwich/orgs",
      "repos_url": "https://api.github.com/users/CodeSandwich/repos",
      "events_url": "https://api.github.com/users/CodeSandwich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeSandwich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-14T10:23:57Z",
    "updated_at": "2023-12-14T10:23:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just git hit by this too. I worked it around by adding ` | cut -f 1 -d \" \"` to every `cast call` in the script.\r\n\r\nThe scientific notion doesn't show up for small numbers, so it's not consistent. A script that doesn't expect that may crash only when specific data is returned, which may happen after executing many expensive operations or operations that need a closure.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1855577389/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
