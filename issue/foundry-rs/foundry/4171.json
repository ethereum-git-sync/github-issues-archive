{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4171",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4171/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4171/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4171/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4171",
  "id": 1556387536,
  "node_id": "I_kwDOGBlvNc5cxJbQ",
  "number": 4171,
  "title": "chisel injection into test function",
  "user": {
    "login": "exp-table",
    "id": 76456212,
    "node_id": "MDQ6VXNlcjc2NDU2MjEy",
    "avatar_url": "https://avatars.githubusercontent.com/u/76456212?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/exp-table",
    "html_url": "https://github.com/exp-table",
    "followers_url": "https://api.github.com/users/exp-table/followers",
    "following_url": "https://api.github.com/users/exp-table/following{/other_user}",
    "gists_url": "https://api.github.com/users/exp-table/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/exp-table/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/exp-table/subscriptions",
    "organizations_url": "https://api.github.com/users/exp-table/orgs",
    "repos_url": "https://api.github.com/users/exp-table/repos",
    "events_url": "https://api.github.com/users/exp-table/events{/privacy}",
    "received_events_url": "https://api.github.com/users/exp-table/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    },
    {
      "id": 3703753247,
      "node_id": "LA_kwDOGBlvNc7cwsof",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-debugger",
      "name": "A-debugger",
      "color": "FBCA04",
      "default": false,
      "description": "Area: debugger"
    },
    {
      "id": 4655151684,
      "node_id": "LA_kwDOGBlvNc8AAAABFXf6RA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-chisel",
      "name": "C-chisel",
      "color": "5319E7",
      "default": false,
      "description": "Command: chisel"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2023-01-25T10:15:10Z",
  "updated_at": "2023-05-31T06:50:46Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nChisel\r\n\r\n### Describe the feature you would like\r\n\r\nThis feature would introduce the possibility to add a call such as `vm.chisel()` or `vm.chiselBreakpoint()` anywhere in a test function.\r\n\r\nThe desired behavior is that calling `chisel` on that function will result in the session being loaded with the entire state of the test at the time the call was made, including the storage state as well as the memory.\r\n\r\nRunning `forge test` should not result in a different behavior than usual.\r\n\r\n\r\n--------\r\n## Example\r\n\r\n```solidity\r\npragma solidity ^0.8.15;\r\n\r\nimport \"forge-std/Test.sol\";\r\nimport \"forge-std/console.sol\";\r\nimport \"src/Kevin.sol\";\r\n\r\ncontract KevinTest is Test {\r\n    Kevin public kevin;\r\n\r\n    function setUp() public {\r\n        kevin = new Kevin();\r\n    }\r\n\r\n    function testKevin() public {\r\n        uint256 bob = 15;\r\n        vm.chisel();\r\n        uint256 stewart = 1;\r\n    }\r\n}\r\n```\r\nFollowed by `chisel --match testKevin`, which opens up a chisel session.\r\n\r\n```sh\r\n➜ address(kevin)\r\nType: address\r\n└ Data: 0xf4d9599afd90b5038b18e3b551bc21a97ed21c37\r\n➜ bob\r\nType: uint\r\n├ Hex: 0xf\r\n└ Decimal: 15\r\n➜ stewart\r\nCompiler errors:\r\nerror[7576]: DeclarationError: Undeclared identifier.\r\n  --> ReplContract.sol:18:1:\r\n   |\r\n18 | stewart;\r\n   | ^^^^^^^\r\n➜ \r\n```\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4171/reactions",
    "total_count": 5,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 3,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 2
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4171/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1406622861",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4171#issuecomment-1406622861",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4171",
    "id": 1406622861,
    "node_id": "IC_kwDOGBlvNc5T11yN",
    "user": {
      "login": "rkrasiuk",
      "id": 25429261,
      "node_id": "MDQ6VXNlcjI1NDI5MjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25429261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkrasiuk",
      "html_url": "https://github.com/rkrasiuk",
      "followers_url": "https://api.github.com/users/rkrasiuk/followers",
      "following_url": "https://api.github.com/users/rkrasiuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkrasiuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkrasiuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkrasiuk/subscriptions",
      "organizations_url": "https://api.github.com/users/rkrasiuk/orgs",
      "repos_url": "https://api.github.com/users/rkrasiuk/repos",
      "events_url": "https://api.github.com/users/rkrasiuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkrasiuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-27T15:01:02Z",
    "updated_at": "2023-01-27T15:01:02Z",
    "author_association": "COLLABORATOR",
    "body": "@clabby this seems like a great idea. do u have the capacity to implement this? ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1406622861/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1406765997",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4171#issuecomment-1406765997",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4171",
    "id": 1406765997,
    "node_id": "IC_kwDOGBlvNc5T2Yut",
    "user": {
      "login": "clabby",
      "id": 8406232,
      "node_id": "MDQ6VXNlcjg0MDYyMzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8406232?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clabby",
      "html_url": "https://github.com/clabby",
      "followers_url": "https://api.github.com/users/clabby/followers",
      "following_url": "https://api.github.com/users/clabby/following{/other_user}",
      "gists_url": "https://api.github.com/users/clabby/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clabby/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clabby/subscriptions",
      "organizations_url": "https://api.github.com/users/clabby/orgs",
      "repos_url": "https://api.github.com/users/clabby/repos",
      "events_url": "https://api.github.com/users/clabby/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clabby/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-27T16:46:42Z",
    "updated_at": "2023-01-27T16:46:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @clabby this seems like a great idea. do u have the capacity to implement this?\r\n\r\nBandwidth constrained at work over the next couple of weeks, but can soon! Spoke w/ @exp-table about this a while back while I was initially making Chisel, imagine it wouldn't be a huge lift. I know @gakonst also had some ideas about pulling out Chisel's eval module in order to integrate it into a revamped debugger- this might be something to add during that process, but can be done by itself as well.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1406765997/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1406806490",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4171#issuecomment-1406806490",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4171",
    "id": 1406806490,
    "node_id": "IC_kwDOGBlvNc5T2ina",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-27T17:16:01Z",
    "updated_at": "2023-01-27T17:16:01Z",
    "author_association": "COLLABORATOR",
    "body": "This would be a pretty sweet feature. Huge bonus points if you can evaluate state variables by name from the source code too, like you can with tenderly debugger (both from local source or source downloaded from etherscan in fork tests).\r\n\r\nA few comments:\r\n- This should be behind the `forge test` command instead of the suggested `chisel --match`. Because this is something to help debug tests, so `forge test --chisel <testName>`, analogous to `forge test --debug <testName>`, seems more logical. \r\n- I'd suggest either (1) naming the cheat just `vm.breakpoint()`, or (2) replacing the cheat with some magic bytes that forge recognizes, and when executed, activates the debugger. The rationale for this is:\r\n    - Breakpoints are also useful in the regular debugger with `forge test --debug`, and they would just behave differently if you're running `forge test --debug` or `forge test --chisel`\r\n    - The rationale for magic bytes is: If you want a breakpoint in your source code, now you need to setup a `vm` state var which is a bit more work than just executing some meaningless bytes that do nothing. However, can we guarantee that solc won't optimize away useless bytes? Cheatcode is probably the way to go, just thinking out loud a bit here\r\n- Let's also have a `vm.breakpoint(bool)` overload so you can conditionally trigger breakpoints\r\n\r\nAnd I agree merging this with the debugger so that the debugger has this evaluator built in and accessible at every step would be an awesome end state. Defer to everyone else if it makes sense to do that upfront or keep the two features separate for now",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1406806490/reactions",
      "total_count": 5,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1407160106",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4171#issuecomment-1407160106",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4171",
    "id": 1407160106,
    "node_id": "IC_kwDOGBlvNc5T348q",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-27T22:43:54Z",
    "updated_at": "2023-01-27T22:43:54Z",
    "author_association": "MEMBER",
    "body": "Let's zoom out here and start by refactoring the debugger IMO, and this will come naturally. ref https://github.com/foundry-rs/foundry/pull/2692",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1407160106/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1486750486",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4171#issuecomment-1486750486",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4171",
    "id": 1486750486,
    "node_id": "IC_kwDOGBlvNc5YngMW",
    "user": {
      "login": "Elyx0",
      "id": 706218,
      "node_id": "MDQ6VXNlcjcwNjIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/706218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Elyx0",
      "html_url": "https://github.com/Elyx0",
      "followers_url": "https://api.github.com/users/Elyx0/followers",
      "following_url": "https://api.github.com/users/Elyx0/following{/other_user}",
      "gists_url": "https://api.github.com/users/Elyx0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Elyx0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Elyx0/subscriptions",
      "organizations_url": "https://api.github.com/users/Elyx0/orgs",
      "repos_url": "https://api.github.com/users/Elyx0/repos",
      "events_url": "https://api.github.com/users/Elyx0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Elyx0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-28T12:05:08Z",
    "updated_at": "2023-03-28T12:05:08Z",
    "author_association": "NONE",
    "body": "So refactoring the debugger got stale, meaning this aswell?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1486750486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1487365745",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4171#issuecomment-1487365745",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4171",
    "id": 1487365745,
    "node_id": "IC_kwDOGBlvNc5Yp2Zx",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-28T17:56:00Z",
    "updated_at": "2023-03-28T17:56:13Z",
    "author_association": "MEMBER",
    "body": "Yep :) Open to contribs..",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1487365745/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1569593085",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4171#issuecomment-1569593085",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4171",
    "id": 1569593085,
    "node_id": "IC_kwDOGBlvNc5djhb9",
    "user": {
      "login": "iFrostizz",
      "id": 51274081,
      "node_id": "MDQ6VXNlcjUxMjc0MDgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/51274081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iFrostizz",
      "html_url": "https://github.com/iFrostizz",
      "followers_url": "https://api.github.com/users/iFrostizz/followers",
      "following_url": "https://api.github.com/users/iFrostizz/following{/other_user}",
      "gists_url": "https://api.github.com/users/iFrostizz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iFrostizz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iFrostizz/subscriptions",
      "organizations_url": "https://api.github.com/users/iFrostizz/orgs",
      "repos_url": "https://api.github.com/users/iFrostizz/repos",
      "events_url": "https://api.github.com/users/iFrostizz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iFrostizz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-31T06:50:46Z",
    "updated_at": "2023-05-31T06:50:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can help refactoring the debugger, this sounds like a very nice feature",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1569593085/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 2
    },
    "performed_via_github_app": null
  }
]
