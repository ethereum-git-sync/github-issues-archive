{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1078",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1078/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1078/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1078/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1078",
  "id": 1182643356,
  "node_id": "I_kwDOGBlvNc5GfbSc",
  "number": 1078,
  "title": "Decode non-Ethereum precompiles when tracing",
  "user": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394235,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjM1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0052CC",
      "default": true,
      "description": "Good for newcomers"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703753090,
      "node_id": "LA_kwDOGBlvNc7cwsmC",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-tracing",
      "name": "A-tracing",
      "color": "FBCA04",
      "default": false,
      "description": "Area: tracing"
    },
    {
      "id": 3759719790,
      "node_id": "LA_kwDOGBlvNc7gGMVu",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-low",
      "name": "P-low",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: low"
    },
    {
      "id": 3759720552,
      "node_id": "LA_kwDOGBlvNc7gGMho",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-easy",
      "name": "D-easy",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: easy"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2022-03-27T19:53:25Z",
  "updated_at": "2023-01-09T13:06:11Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Right now we only decode the Ethereum precompiles when tracing, we should add some way to decode extra precompiles. What are some example precomppiles from other networks?\r\n\r\n_Originally posted by @mattsse in https://github.com/gakonst/foundry/pull/1067#discussion_r835886363_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1078/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 2,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1078/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1251806041",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1078#issuecomment-1251806041",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1078",
    "id": 1251806041,
    "node_id": "IC_kwDOGBlvNc5KnQtZ",
    "user": {
      "login": "0xduality",
      "id": 90226729,
      "node_id": "MDQ6VXNlcjkwMjI2NzI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/90226729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xduality",
      "html_url": "https://github.com/0xduality",
      "followers_url": "https://api.github.com/users/0xduality/followers",
      "following_url": "https://api.github.com/users/0xduality/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xduality/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xduality/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xduality/subscriptions",
      "organizations_url": "https://api.github.com/users/0xduality/orgs",
      "repos_url": "https://api.github.com/users/0xduality/repos",
      "events_url": "https://api.github.com/users/0xduality/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xduality/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-20T03:59:40Z",
    "updated_at": "2022-09-20T03:59:40Z",
    "author_association": "NONE",
    "body": "Avalanche subnets that use the evm have these precompiles\r\n\r\n- 0x0200000000000000000000000000000000000000\r\n- 0x0200000000000000000000000000000000000001\r\n- 0x0200000000000000000000000000000000000002\r\n- 0x0200000000000000000000000000000000000003\r\n\r\nMore details on the interfaces are [here]( https://docs.avax.network/subnets/customize-a-subnet#restricting-smart-contract-deployers)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1251806041/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1255158323",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1078#issuecomment-1255158323",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1078",
    "id": 1255158323,
    "node_id": "IC_kwDOGBlvNc5K0DIz",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-22T15:03:10Z",
    "updated_at": "2022-09-22T15:03:10Z",
    "author_association": "MEMBER",
    "body": "we can integrate them,\r\nwhat we'd need is a list of:\r\n* address\r\n* function signature: `<name>(<inputs>)<outputs>`",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1255158323/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1255289424",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1078#issuecomment-1255289424",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1078",
    "id": 1255289424,
    "node_id": "IC_kwDOGBlvNc5K0jJQ",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-22T16:46:37Z",
    "updated_at": "2022-09-22T16:46:37Z",
    "author_association": "COLLABORATOR",
    "body": "@avaxmoon do you mind also leaving a comment on https://github.com/foundry-rs/forge-std/issues/134 with the list of relevant avalanche precompiles + what chain IDs they apply to + links to docs? That way we remember to include them there when implementing that",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1255289424/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1255795645",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1078#issuecomment-1255795645",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1078",
    "id": 1255795645,
    "node_id": "IC_kwDOGBlvNc5K2eu9",
    "user": {
      "login": "0xduality",
      "id": 90226729,
      "node_id": "MDQ6VXNlcjkwMjI2NzI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/90226729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xduality",
      "html_url": "https://github.com/0xduality",
      "followers_url": "https://api.github.com/users/0xduality/followers",
      "following_url": "https://api.github.com/users/0xduality/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xduality/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xduality/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xduality/subscriptions",
      "organizations_url": "https://api.github.com/users/0xduality/orgs",
      "repos_url": "https://api.github.com/users/0xduality/repos",
      "events_url": "https://api.github.com/users/0xduality/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xduality/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-23T04:42:56Z",
    "updated_at": "2022-09-23T04:42:56Z",
    "author_association": "NONE",
    "body": "@mattsse I believe you can find all this information [here](https://docs.avax.network/subnets/customize-a-subnet#precompiles) ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1255795645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1264520429",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1078#issuecomment-1264520429",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1078",
    "id": 1264520429,
    "node_id": "IC_kwDOGBlvNc5LXwzt",
    "user": {
      "login": "0xIsshiki",
      "id": 100234490,
      "node_id": "U_kgDOBfl0-g",
      "avatar_url": "https://avatars.githubusercontent.com/u/100234490?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xIsshiki",
      "html_url": "https://github.com/0xIsshiki",
      "followers_url": "https://api.github.com/users/0xIsshiki/followers",
      "following_url": "https://api.github.com/users/0xIsshiki/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xIsshiki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xIsshiki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xIsshiki/subscriptions",
      "organizations_url": "https://api.github.com/users/0xIsshiki/orgs",
      "repos_url": "https://api.github.com/users/0xIsshiki/repos",
      "events_url": "https://api.github.com/users/0xIsshiki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xIsshiki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-02T01:06:28Z",
    "updated_at": "2022-10-02T01:06:28Z",
    "author_association": "NONE",
    "body": "Celo has a bunch of extra precompiles here: https://github.com/celo-org/celo-blockchain/blob/91993404cdf69ff4dad810bae8ac02763ae667d8/core/vm/contracts.go#L168-L199",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1264520429/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1264610952",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1078#issuecomment-1264610952",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1078",
    "id": 1264610952,
    "node_id": "IC_kwDOGBlvNc5LYG6I",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-02T10:46:20Z",
    "updated_at": "2022-10-02T10:46:20Z",
    "author_association": "MEMBER",
    "body": "thanks for linking this.\r\n\r\nIt would help if you could prepare them as address + signature pairs, this would make it easier to integrate them in the codebase.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1264610952/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1338493978",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1078#issuecomment-1338493978",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1078",
    "id": 1338493978,
    "node_id": "IC_kwDOGBlvNc5Px8wa",
    "user": {
      "login": "douglasqian",
      "id": 14866173,
      "node_id": "MDQ6VXNlcjE0ODY2MTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14866173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/douglasqian",
      "html_url": "https://github.com/douglasqian",
      "followers_url": "https://api.github.com/users/douglasqian/followers",
      "following_url": "https://api.github.com/users/douglasqian/following{/other_user}",
      "gists_url": "https://api.github.com/users/douglasqian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/douglasqian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/douglasqian/subscriptions",
      "organizations_url": "https://api.github.com/users/douglasqian/orgs",
      "repos_url": "https://api.github.com/users/douglasqian/repos",
      "events_url": "https://api.github.com/users/douglasqian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/douglasqian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-06T00:41:55Z",
    "updated_at": "2022-12-06T00:42:25Z",
    "author_association": "NONE",
    "body": "> Celo has a bunch of extra precompiles here: https://github.com/celo-org/celo-blockchain/blob/91993404cdf69ff4dad810bae8ac02763ae667d8/core/vm/contracts.go#L168-L199\r\n\r\nJFYI there's a Celo-specific Foundry fork that devs on Celo are using right now:\r\nhttps://github.com/bowd/celo-foundry",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1338493978/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1344958839",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1078#issuecomment-1344958839",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1078",
    "id": 1344958839,
    "node_id": "IC_kwDOGBlvNc5QKnF3",
    "user": {
      "login": "0xarthurxyz",
      "id": 46296830,
      "node_id": "MDQ6VXNlcjQ2Mjk2ODMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/46296830?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xarthurxyz",
      "html_url": "https://github.com/0xarthurxyz",
      "followers_url": "https://api.github.com/users/0xarthurxyz/followers",
      "following_url": "https://api.github.com/users/0xarthurxyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xarthurxyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xarthurxyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xarthurxyz/subscriptions",
      "organizations_url": "https://api.github.com/users/0xarthurxyz/orgs",
      "repos_url": "https://api.github.com/users/0xarthurxyz/repos",
      "events_url": "https://api.github.com/users/0xarthurxyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xarthurxyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-10T01:10:50Z",
    "updated_at": "2022-12-10T01:11:53Z",
    "author_association": "NONE",
    "body": "Hi @mattsse 👋 @douglasqian kindly pointed me to this Github discussion. \r\n\r\nWe'd love Celo to be fully compatible with [Foundry](https://github.com/foundry-rs/foundry) out of the box 🙌\r\n\r\nRegarding your comment above: \r\n\r\n> It would help if you could prepare them as address + signature pairs, this would make it easier to integrate them in the codebase.\r\n\r\nI put together a gist ([Adding Celo to Foundry](https://gist.github.com/0xarthurxyz/d47d8b0bccd449a25579b2a58cefac71)) with key information (mainly for future reference on our side) and @palango (from the Celo blockchain team) kindly provided a small sample of address + signature pairs to verify the format suits you. \r\n\r\nI copied the sample below for ease of reference\r\n\r\n```\r\n0x00000000000000000000000000000000000000fd transfer                 (bytes32 sender, bytes32 recipient, uint256 amount) bytes\r\n\r\n0x00000000000000000000000000000000000000fc fractionMulExp           (uint256 aNumerator, uint256 aDenominator, uint256 bNumerator, uint256 bDenominator, uint256 exponent, uint256 decimals) (uint256, uint256)\r\n\r\n0x00000000000000000000000000000000000000fb proofOfPossession        (address sender, bytes blsKey, bytes blsPop) bool\r\n\r\n0x00000000000000000000000000000000000000fa getValidator             (uint256 index, uint256 blockNumber) address\r\n\r\n0x00000000000000000000000000000000000000f9 numberValidators         (uint256 blockNumber) uint256\r\n\r\n0x00000000000000000000000000000000000000f8 epochSize                () uint256\r\n\r\n0x00000000000000000000000000000000000000f7 blockNumberFromHeader    (bytes header) uint256\r\n\r\n0x00000000000000000000000000000000000000f6 hashHeader               (bytes header) bytes32\r\n\r\n0x00000000000000000000000000000000000000F5 getParentSealBitmap      (uint256 blockNumber) bytes32\r\n\r\n0x00000000000000000000000000000000000000F4 getVerifiedSealBitmap    (bytes header) bytes32\r\n\r\n```\r\n\r\nMy question: How does the above look to you? (i.e. would this format make the integration easier for you?)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1344958839/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1344964092",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1078#issuecomment-1344964092",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1078",
    "id": 1344964092,
    "node_id": "IC_kwDOGBlvNc5QKoX8",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-10T01:22:23Z",
    "updated_at": "2022-12-10T01:23:50Z",
    "author_association": "MEMBER",
    "body": "Let's move the conversation to https://github.com/bluealloy/revm/issues/280. Most of these precompiles are stateful, so would like to understand how you are thinking about introducing that state, e.g. https://github.com/bluealloy/revm/blob/main/crates/revm_precompiles/src/lib.rs#L58",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1344964092/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1356623930",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1078#issuecomment-1356623930",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1078",
    "id": 1356623930,
    "node_id": "IC_kwDOGBlvNc5Q3HA6",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-18T01:53:31Z",
    "updated_at": "2022-12-18T01:53:31Z",
    "author_association": "COLLABORATOR",
    "body": "Just noting that one other part of compatibility would be to update [`StdChains`](https://github.com/foundry-rs/forge-std/blob/eb980e1d4f0e8173ec27da77297ae411840c8ccb/src/StdChains.sol#L152) and [`assumeNoPrecompiles`](https://github.com/foundry-rs/forge-std/blob/eb980e1d4f0e8173ec27da77297ae411840c8ccb/src/StdCheats.sol#L191-L221) in forge-std with the required Celo information",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1356623930/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1375596791",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1078#issuecomment-1375596791",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1078",
    "id": 1375596791,
    "node_id": "IC_kwDOGBlvNc5R_fD3",
    "user": {
      "login": "palango",
      "id": 90851,
      "node_id": "MDQ6VXNlcjkwODUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/90851?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/palango",
      "html_url": "https://github.com/palango",
      "followers_url": "https://api.github.com/users/palango/followers",
      "following_url": "https://api.github.com/users/palango/following{/other_user}",
      "gists_url": "https://api.github.com/users/palango/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/palango/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/palango/subscriptions",
      "organizations_url": "https://api.github.com/users/palango/orgs",
      "repos_url": "https://api.github.com/users/palango/repos",
      "events_url": "https://api.github.com/users/palango/events{/privacy}",
      "received_events_url": "https://api.github.com/users/palango/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-09T13:06:11Z",
    "updated_at": "2023-01-09T13:06:11Z",
    "author_association": "NONE",
    "body": "> Let's move the conversation to [bluealloy/revm#280](https://github.com/bluealloy/revm/issues/280). Most of these precompiles are stateful, so would like to understand how you are thinking about introducing that state, e.g. https://github.com/bluealloy/revm/blob/main/crates/revm_precompiles/src/lib.rs#L58\r\n\r\nWill there be anything else needed besides the changes in `revm` for decoding, like the ABIs? Or will this just work once the precompiles are in `revm`?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1375596791/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  }
]
