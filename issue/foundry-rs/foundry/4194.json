{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4194",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4194/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4194/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4194/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4194",
  "id": 1558523382,
  "node_id": "I_kwDOGBlvNc5c5S32",
  "number": 4194,
  "title": "Serializing JSON: Unable to serialize more than two entries at the same level",
  "user": {
    "login": "joejordan",
    "id": 997952,
    "node_id": "MDQ6VXNlcjk5Nzk1Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/997952?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/joejordan",
    "html_url": "https://github.com/joejordan",
    "followers_url": "https://api.github.com/users/joejordan/followers",
    "following_url": "https://api.github.com/users/joejordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/joejordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/joejordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/joejordan/subscriptions",
    "organizations_url": "https://api.github.com/users/joejordan/orgs",
    "repos_url": "https://api.github.com/users/joejordan/repos",
    "events_url": "https://api.github.com/users/joejordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/joejordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2023-01-26T17:42:42Z",
  "updated_at": "2023-02-11T04:11:28Z",
  "closed_at": "2023-02-01T20:41:51Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (aeba75e 2023-01-26T03:56:21.4985159Z)\n\n### What command(s) is the bug in?\n\n_No response_\n\n### Operating System\n\nWindows\n\n### Describe the bug\n\nI'm attempting to write a list of deployed addresses for later retrieval using stdJson cheatcodes. The list would be a simple json file with names and a list of addresses, i.e. { address1: 0x0, address2: 0x1, address3: 0x3 }\r\n\r\nI'm able to serialize an object with up to two entries, but I can't seem to add a third and a fourth entry at the same json level by following the examples in the Foundry Book.\r\n\r\nHere's a snippet to demonstrate the issue:\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity >=0.8.4;\r\n\r\nimport { Script } from \"forge-std/Script.sol\";\r\nimport { console2 } from \"forge-std/console2.sol\";\r\nimport { stdJson } from \"forge-std/StdJson.sol\";\r\n\r\ncontract FileUtils is Script {\r\n    using stdJson for string;\r\n\r\n    function serializeDemo() public {\r\n\r\n        string memory json = \"INTERNAL_KEY\";\r\n        console2.log(json); // output: INTERNAL_KEY\r\n        json.serialize(\"address1\", address(1));\r\n        console2.log(json); // output: INTERNAL_KEY\r\n        json = json.serialize(\"address2\", address(2));\r\n        console2.log(json); // output: {\"address2\":\"0x0000000000000000000000000000000000000002\",\"address1\":\"0x0000000000000000000000000000000000000001\"}\r\n        json = json.serialize(\"address3\", address(3));\r\n        console2.log(json); // output: {\"address3\":\"0x0000000000000000000000000000000000000003\"}\r\n        // shouldn't the above output include all three address entries?\r\n    }\r\n}\r\n```",
  "closed_by": {
    "login": "joejordan",
    "id": 997952,
    "node_id": "MDQ6VXNlcjk5Nzk1Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/997952?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/joejordan",
    "html_url": "https://github.com/joejordan",
    "followers_url": "https://api.github.com/users/joejordan/followers",
    "following_url": "https://api.github.com/users/joejordan/following{/other_user}",
    "gists_url": "https://api.github.com/users/joejordan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/joejordan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/joejordan/subscriptions",
    "organizations_url": "https://api.github.com/users/joejordan/orgs",
    "repos_url": "https://api.github.com/users/joejordan/repos",
    "events_url": "https://api.github.com/users/joejordan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/joejordan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4194/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4194/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1406351785",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4194#issuecomment-1406351785",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4194",
    "id": 1406351785,
    "node_id": "IC_kwDOGBlvNc5T0zmp",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-27T11:10:16Z",
    "updated_at": "2023-01-27T11:10:16Z",
    "author_association": "MEMBER",
    "body": "cc @odyslam ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1406351785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1407078774",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4194#issuecomment-1407078774",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4194",
    "id": 1407078774,
    "node_id": "IC_kwDOGBlvNc5T3lF2",
    "user": {
      "login": "odyslam",
      "id": 13405632,
      "node_id": "MDQ6VXNlcjEzNDA1NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/odyslam",
      "html_url": "https://github.com/odyslam",
      "followers_url": "https://api.github.com/users/odyslam/followers",
      "following_url": "https://api.github.com/users/odyslam/following{/other_user}",
      "gists_url": "https://api.github.com/users/odyslam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/odyslam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/odyslam/subscriptions",
      "organizations_url": "https://api.github.com/users/odyslam/orgs",
      "repos_url": "https://api.github.com/users/odyslam/repos",
      "events_url": "https://api.github.com/users/odyslam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/odyslam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-27T21:11:34Z",
    "updated_at": "2023-01-27T21:11:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@joejordan The issue is that you change the key while serializing, so you serialize the json into many different jsons.\r\n\r\nWhen you do: json = json.serialize(), you set the json string to the output of json.serialize. That means that the next invocation of `json.serialize()` will use the output of the previous json.serialize as a key and not the original string `INTERNAL_KEY`.\r\n\r\nThe serialize cheatcodes always return the stringified version of the JSON they are serializing so that you can create arbitrary nested json objects. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1407078774/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1412019197",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4194#issuecomment-1412019197",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4194",
    "id": 1412019197,
    "node_id": "IC_kwDOGBlvNc5UKbP9",
    "user": {
      "login": "rafales",
      "id": 919812,
      "node_id": "MDQ6VXNlcjkxOTgxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/919812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafales",
      "html_url": "https://github.com/rafales",
      "followers_url": "https://api.github.com/users/rafales/followers",
      "following_url": "https://api.github.com/users/rafales/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafales/subscriptions",
      "organizations_url": "https://api.github.com/users/rafales/orgs",
      "repos_url": "https://api.github.com/users/rafales/repos",
      "events_url": "https://api.github.com/users/rafales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-01T13:00:42Z",
    "updated_at": "2023-02-01T13:01:37Z",
    "author_association": "NONE",
    "body": "@odyslam \r\nAs someone who currently tries to understand how to read/write json files and work with it - it's a problem of not paying attention to Developer Experience and interface design.\r\n\r\nThis topic is hard to understand, hard to work with and poorly documented (eg. some functions referenced in docs like `vm.serialize` don't even exist)  - so the exact opposite of what working with JSON should look like.\r\n\r\nSorry for harsh words but right now I am really frustrated with this thing.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1412019197/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1412031910",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4194#issuecomment-1412031910",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4194",
    "id": 1412031910,
    "node_id": "IC_kwDOGBlvNc5UKeWm",
    "user": {
      "login": "odyslam",
      "id": 13405632,
      "node_id": "MDQ6VXNlcjEzNDA1NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/odyslam",
      "html_url": "https://github.com/odyslam",
      "followers_url": "https://api.github.com/users/odyslam/followers",
      "following_url": "https://api.github.com/users/odyslam/following{/other_user}",
      "gists_url": "https://api.github.com/users/odyslam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/odyslam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/odyslam/subscriptions",
      "organizations_url": "https://api.github.com/users/odyslam/orgs",
      "repos_url": "https://api.github.com/users/odyslam/repos",
      "events_url": "https://api.github.com/users/odyslam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/odyslam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-01T13:09:04Z",
    "updated_at": "2023-02-01T13:09:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @rafales, \r\n\r\nGreat attention was paid to devex, so that I would disagree with that. There are inherit limits in what we can do with Solidity, so the experience is not **great**.\r\n\r\nIf you have concrete suggestions, I would be happy to hear them, ideally in a separate github issue.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1412031910/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1412694893",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4194#issuecomment-1412694893",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4194",
    "id": 1412694893,
    "node_id": "IC_kwDOGBlvNc5UNANt",
    "user": {
      "login": "joejordan",
      "id": 997952,
      "node_id": "MDQ6VXNlcjk5Nzk1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/997952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joejordan",
      "html_url": "https://github.com/joejordan",
      "followers_url": "https://api.github.com/users/joejordan/followers",
      "following_url": "https://api.github.com/users/joejordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/joejordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joejordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joejordan/subscriptions",
      "organizations_url": "https://api.github.com/users/joejordan/orgs",
      "repos_url": "https://api.github.com/users/joejordan/repos",
      "events_url": "https://api.github.com/users/joejordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joejordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-01T20:41:51Z",
    "updated_at": "2023-02-01T20:41:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "> When you do: json = json.serialize(), you set the json string to the output of json.serialize. That means that the next invocation of `json.serialize()` will use the output of the previous json.serialize as a key and not the original string `INTERNAL_KEY`.\r\n\r\nThanks @odyslam, that helped resolve the original issue.\r\n\r\nI was going to ask next about how to write to an existing .json file to path without destroying the existing keys at the same level, but it turns out I was overthinking things. Originally I thought that I would have to first load the existing json file, parse the json, and then find some way to serialize it into the loaded data. Turns out instead that it's a one liner:\r\n\r\n```solidity\r\n    /// @notice writes an address to the given json path\r\n    /// @dev assumes file and path in json file exists. \r\n    function setAddress(string calldata jsonPath, address value) public {\r\n        vm.writeJson(vm.toString(value), getJsonFilePath(), string(abi.encodePacked(\".\", jsonPath)));\r\n    }\r\n```\r\nThe `jsonPath` argument above is an existing path in the json file, i.e. `Marketplace.proxy` if we wanted to write a new proxy address in the below json object. (We append an initial dot to the string because it was required to complete the path.)\r\n```json\r\n{\r\n  \"Marketplace\": {\r\n    \"logic\": \"0x0B1a87021ec75fBaE919b1e86b2B1335FFC8F4d3\",\r\n    \"proxy\": \"0xA4aE77554847958aC0854f06601267c9F9C75dfD\",\r\n    \"factory\": \"0x9eb52339B52e71B1EFD5537947e75D23b3a7719B\",\r\n    \"router\": \"0xf18774574148852771c2631d7d06E2A6c8b44fCA\"\r\n  }\r\n}\r\n```\r\nIf I have some time I'll try and update the Foundry book, as I did find the existing documentation somewhat unclear about handling certain situations. Regardless, thank you, @odyslam for adding this invaluable feature to Foundry.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1412694893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1412706424",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4194#issuecomment-1412706424",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4194",
    "id": 1412706424,
    "node_id": "IC_kwDOGBlvNc5UNDB4",
    "user": {
      "login": "odyslam",
      "id": 13405632,
      "node_id": "MDQ6VXNlcjEzNDA1NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/odyslam",
      "html_url": "https://github.com/odyslam",
      "followers_url": "https://api.github.com/users/odyslam/followers",
      "following_url": "https://api.github.com/users/odyslam/following{/other_user}",
      "gists_url": "https://api.github.com/users/odyslam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/odyslam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/odyslam/subscriptions",
      "organizations_url": "https://api.github.com/users/odyslam/orgs",
      "repos_url": "https://api.github.com/users/odyslam/repos",
      "events_url": "https://api.github.com/users/odyslam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/odyslam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-01T20:53:28Z",
    "updated_at": "2023-02-01T20:53:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@joejordan would love to hear what you found unclear as a simple bullet point list here. If you don't find the time to update the foundry book, I could do it. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1412706424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1426607496",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4194#issuecomment-1426607496",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4194",
    "id": 1426607496,
    "node_id": "IC_kwDOGBlvNc5VCE2I",
    "user": {
      "login": "joejordan",
      "id": 997952,
      "node_id": "MDQ6VXNlcjk5Nzk1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/997952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joejordan",
      "html_url": "https://github.com/joejordan",
      "followers_url": "https://api.github.com/users/joejordan/followers",
      "following_url": "https://api.github.com/users/joejordan/following{/other_user}",
      "gists_url": "https://api.github.com/users/joejordan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joejordan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joejordan/subscriptions",
      "organizations_url": "https://api.github.com/users/joejordan/orgs",
      "repos_url": "https://api.github.com/users/joejordan/repos",
      "events_url": "https://api.github.com/users/joejordan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joejordan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-11T04:11:28Z",
    "updated_at": "2023-02-11T04:11:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@odyslam I would start by explaining in more detail the absolute basics, and then build on the concepts with examples.\r\n\r\nRead a json file with one entry\r\nWrite a json file with one entry\r\nRead a json file with 10 entries\r\nWrite a json file with 10 entries\r\n\r\nThen get into the more complex scenarios like building a complex JSON with different data types, arrays, decoding into structs, etc.\r\n\r\nMy issue with the documentation was that it was not clear to me initially that the initial string is an internal marker that is used to build upon a collection of JSON entries. I also found the example on the bottom of the serializeJson page confusing, and I think that's what primarily led to me struggling with implementing this feature.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1426607496/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
