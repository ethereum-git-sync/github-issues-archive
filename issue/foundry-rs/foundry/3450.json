{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3450",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3450/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3450/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3450/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3450",
  "id": 1395942452,
  "node_id": "I_kwDOGBlvNc5TNGQ0",
  "number": 3450,
  "title": "Improve compilation artifacts structure for multiple solc version",
  "user": {
    "login": "montyly",
    "id": 13798342,
    "node_id": "MDQ6VXNlcjEzNzk4MzQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/13798342?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/montyly",
    "html_url": "https://github.com/montyly",
    "followers_url": "https://api.github.com/users/montyly/followers",
    "following_url": "https://api.github.com/users/montyly/following{/other_user}",
    "gists_url": "https://api.github.com/users/montyly/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/montyly/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/montyly/subscriptions",
    "organizations_url": "https://api.github.com/users/montyly/orgs",
    "repos_url": "https://api.github.com/users/montyly/repos",
    "events_url": "https://api.github.com/users/montyly/events{/privacy}",
    "received_events_url": "https://api.github.com/users/montyly/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 4444799654,
      "node_id": "LA_kwDOGBlvNc8AAAABCO5Cpg",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-compiler",
      "name": "A-compiler",
      "color": "FBCA04",
      "default": false,
      "description": "Area: compiler"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-10-04T09:28:31Z",
  "updated_at": "2022-11-05T09:15:55Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nNow that foundry supports multiple compiler versions, it creates `out/filename/contractName-<compiler-version>.json` compilation artifacts. However it is difficult to retrieve what compilation units was used for the files. This makes difficult to support for third party tools (slither/echidna/..).\r\n\r\nIt would be great to clean the directory structure. For example:\r\n- Creating a directory per compilation unit: `out/some_id_of_compilation_unit/filename/...`. Where `some_id_of_compilation_unit` could be the hash of the compilation settings, or something similar\r\n- Create a mapping `some_id_of_compilation_unit -> compiler setting` in a file , to allows third party tools to retrieve this information\r\n\r\nSuch structure will also allow to be robust if a user wants to use the same compiler version, but with different settings (ex: with/without the new IR pipeline / optimization/ ...)\n\n### Additional context\n\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3450/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3450/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1304434359",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3450#issuecomment-1304434359",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3450",
    "id": 1304434359,
    "node_id": "IC_kwDOGBlvNc5NwBa3",
    "user": {
      "login": "montyly",
      "id": 13798342,
      "node_id": "MDQ6VXNlcjEzNzk4MzQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13798342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/montyly",
      "html_url": "https://github.com/montyly",
      "followers_url": "https://api.github.com/users/montyly/followers",
      "following_url": "https://api.github.com/users/montyly/following{/other_user}",
      "gists_url": "https://api.github.com/users/montyly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/montyly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/montyly/subscriptions",
      "organizations_url": "https://api.github.com/users/montyly/orgs",
      "repos_url": "https://api.github.com/users/montyly/repos",
      "events_url": "https://api.github.com/users/montyly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/montyly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-05T07:48:14Z",
    "updated_at": "2022-11-05T07:48:14Z",
    "author_association": "NONE",
    "body": "Is there any update on this? It is preventing multiple users from using foundry with slither/echidna/...",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1304434359/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1304452564",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3450#issuecomment-1304452564",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3450",
    "id": 1304452564,
    "node_id": "IC_kwDOGBlvNc5NwF3U",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-05T09:15:55Z",
    "updated_at": "2022-11-05T09:15:55Z",
    "author_association": "MEMBER",
    "body": "sorry for not responding, this slipped through...\r\n\r\ncould elaborate on what you mean by `compilation unit` here?\r\n\r\n> `out/some_id_of_compilation_unit/filename/.... Where some_id_of_compilation_unit could be the hash of the compilation settings, or something similar\r\n\r\nI think this could be very confusing if you want to look for a specific Artifact (`Counter.sol` for example) and then you first need to figure out what compilation unit it's part of. \r\nHowever, if you have a single solc then there should be only one, right? Which would make it redundant for those cases.\r\n\r\n> However it is difficult to retrieve what compilation units were used for the files\r\n\r\ncan you describe how this is currently being done and what info is required?\r\n\r\nThe cache currently has a `file, config -> [artifacts]` mapping",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1304452564/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
