{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2224",
  "id": 1295052595,
  "node_id": "I_kwDOGBlvNc5NMO8z",
  "number": 2224,
  "title": "Allow setting broadcasted tx's gas limit in `forge script`",
  "user": {
    "login": "pyk",
    "id": 2213646,
    "node_id": "MDQ6VXNlcjIyMTM2NDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2213646?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pyk",
    "html_url": "https://github.com/pyk",
    "followers_url": "https://api.github.com/users/pyk/followers",
    "following_url": "https://api.github.com/users/pyk/following{/other_user}",
    "gists_url": "https://api.github.com/users/pyk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pyk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pyk/subscriptions",
    "organizations_url": "https://api.github.com/users/pyk/orgs",
    "repos_url": "https://api.github.com/users/pyk/repos",
    "events_url": "https://api.github.com/users/pyk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pyk/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 4182991461,
      "node_id": "LA_kwDOGBlvNc75U2Jl",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-script",
      "name": "Cmd-forge-script",
      "color": "006B75",
      "default": false,
      "description": "Command: forge script"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2022-07-06T02:58:12Z",
  "updated_at": "2022-08-05T03:32:22Z",
  "closed_at": "2022-08-03T15:15:02Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (f016135 2022-07-04T00:05:06.364672Z)\n\n### What command(s) is the bug in?\n\nforge script\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\nNot sure if this expected behaviour or not, but I can't set the gas limit of transaction that broadcasted via `forge script`. Somehow it ignores the `--gas-limit` and `--block-gas-limit`",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1176778499",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2224#issuecomment-1176778499",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224",
    "id": 1176778499,
    "node_id": "IC_kwDOGBlvNc5GJDcD",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-06T21:41:26Z",
    "updated_at": "2022-07-06T21:41:26Z",
    "author_association": "MEMBER",
    "body": "Those are for Forge's execution environment (they're listed under \"Executor Environment Config\"), not for the broadcasted transactions. I don't think we currently support setting the gas limit for broadcast transactions (cc @joshieDo) and I'm also not sure how that would work with multiple transactions :thinking: ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1176778499/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1176842371",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2224#issuecomment-1176842371",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224",
    "id": 1176842371,
    "node_id": "IC_kwDOGBlvNc5GJTCD",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-06T23:08:40Z",
    "updated_at": "2022-07-06T23:08:46Z",
    "author_association": "MEMBER",
    "body": "@mds1 cc we've discussed before in another issue i think?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1176842371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1177063866",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2224#issuecomment-1177063866",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224",
    "id": 1177063866,
    "node_id": "IC_kwDOGBlvNc5GKJG6",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-07T04:48:49Z",
    "updated_at": "2022-07-07T04:48:49Z",
    "author_association": "COLLABORATOR",
    "body": "Yep, in https://github.com/foundry-rs/foundry/issues/2002\r\n\r\nAs described in that issue, my suggestion would be to add `vm.broadcast` overloads that allow you to specify margin on the gas estimate. So if I'm estimating gas for a uniswap v2 trade where cost varies by block position, I can do `vm.broadcast(20)` or `vm.broadcast(myDeployer, 20)` to mean \"add 20% margin to transaction's gas estimate\". IMO this is better UX than specifying specific, hardcoded gas limits which will need to vary per-transaction anyway",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1177063866/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191065656",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2224#issuecomment-1191065656",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224",
    "id": 1191065656,
    "node_id": "IC_kwDOGBlvNc5G_jg4",
    "user": {
      "login": "ckoopmann",
      "id": 15629702,
      "node_id": "MDQ6VXNlcjE1NjI5NzAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/15629702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ckoopmann",
      "html_url": "https://github.com/ckoopmann",
      "followers_url": "https://api.github.com/users/ckoopmann/followers",
      "following_url": "https://api.github.com/users/ckoopmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/ckoopmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ckoopmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ckoopmann/subscriptions",
      "organizations_url": "https://api.github.com/users/ckoopmann/orgs",
      "repos_url": "https://api.github.com/users/ckoopmann/repos",
      "events_url": "https://api.github.com/users/ckoopmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ckoopmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T05:46:22Z",
    "updated_at": "2022-07-21T07:44:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wouldn't it be most intuitive to let users specify gas limits for individual contract calls in their script the same way they normally do in solidity ?:\r\n`someContract.someFunction{gas: 100000}()` \r\n\r\nI had expected this to work already in one of my scripts but was a bit surprised when these values were just ignored.\r\n\r\nImo this would also be more flexible and cover more use cases than only allowing the user to specify a percentage increase relative to the existing estimation.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191065656/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191312142",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2224#issuecomment-1191312142",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224",
    "id": 1191312142,
    "node_id": "IC_kwDOGBlvNc5HAfsO",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T10:22:27Z",
    "updated_at": "2022-07-21T10:22:27Z",
    "author_association": "MEMBER",
    "body": "good point, @joshieDo I think that's doable, right?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191312142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1192076748",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2224#issuecomment-1192076748",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224",
    "id": 1192076748,
    "node_id": "IC_kwDOGBlvNc5HDaXM",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-22T01:06:38Z",
    "updated_at": "2022-07-22T01:06:38Z",
    "author_association": "COLLABORATOR",
    "body": "> Wouldn't it be most intuitive to let users specify gas limits for individual contract calls in their script the same way they normally do in solidity ?:\r\n> `someContract.someFunction{gas: 100000}()`\r\n> \r\n> I had expected this to work already in one of my scripts but was a bit surprised when these values were just ignored.\r\n\r\nAh, that's a good idea.\r\n\r\n> Imo this would also be more flexible and cover more use cases than only allowing the user to specify a percentage increase relative to the existing estimation.\r\n\r\nHowever, I'm not convinced it's actually the optimal UX, because it feels clunkier and harder to use. Personally, when I'm writing a script, I don't want to spend time figuring out \"this tx should cost X gas, let me hardcode a 1.2X gas limit to ensure it has enough gas\". Especially if I want to execute that script on, for example, mainnet and Arbitrum, because Arbitrum uses different gas metering so I now need to have a conditional gas limit based on `block.chainid`. I'd be curious to hear more about why you think this is more flexible and covers more use cases that specifying a relative increase.\r\n\r\nSupporting both might be a good idea. Then if a user supplies both (instead of just one of the two options) we default to the hardcoded value and skip gas estimation, ignore the percentage tolerance, and print a warning that the percentage is being ignored.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1192076748/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1195625559",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2224#issuecomment-1195625559",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224",
    "id": 1195625559,
    "node_id": "IC_kwDOGBlvNc5HQ8xX",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-26T15:23:09Z",
    "updated_at": "2022-07-26T15:23:09Z",
    "author_association": "MEMBER",
    "body": "> Supporting both might be a good idea. Then if a user supplies both (instead of just one of the two options) we default to the hardcoded value and skip gas estimation, ignore the percentage tolerance, and print a warning that the percentage is being ignored.\r\n\r\n:+1: supportive",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1195625559/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1203782008",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2224#issuecomment-1203782008",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224",
    "id": 1203782008,
    "node_id": "IC_kwDOGBlvNc5HwEF4",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-03T10:43:29Z",
    "updated_at": "2022-08-03T10:43:29Z",
    "author_association": "MEMBER",
    "body": "This seems to be solved in #2524? :smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1203782008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1204113409",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2224#issuecomment-1204113409",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224",
    "id": 1204113409,
    "node_id": "IC_kwDOGBlvNc5HxVAB",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-03T15:31:46Z",
    "updated_at": "2022-08-03T15:31:46Z",
    "author_association": "COLLABORATOR",
    "body": "Ehh yes and no 😅\r\n\r\n#2524 does add a way to change the gas limit, but in a different way than the approach that it seems was agreed on above: The PR only lets you globally scale _every_ tx's gas limit by a the same factor, instead of providing granularity in the script + supporting standard solidity syntax for specifying gas limit.\r\n\r\nPersonally I prefer the more granular approach because IME most tx's don't need this functionality, ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1204113409/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1204237125",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2224#issuecomment-1204237125",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224",
    "id": 1204237125,
    "node_id": "IC_kwDOGBlvNc5HxzNF",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-03T17:04:36Z",
    "updated_at": "2022-08-03T17:04:45Z",
    "author_association": "MEMBER",
    "body": "Hmm, I'd track the `{gas: x}` syntax in another issue to be honest, since it is more complex than you might think; we are going to get it from the traces, but the fact is that it will always be there, no matter if you specify it or not :/ Might require a bit more thinking\r\n\r\nWe can re-open as well if you prefer",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1204237125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1205791603",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2224#issuecomment-1205791603",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224",
    "id": 1205791603,
    "node_id": "IC_kwDOGBlvNc5H3utz",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-04T21:34:14Z",
    "updated_at": "2022-08-04T21:34:14Z",
    "author_association": "COLLABORATOR",
    "body": "> Hmm, I'd track the {gas: x} syntax in another issue to be honest, since it is more complex than you might think; we are going to get it from the traces, but the fact is that it will always be there, no matter if you specify it or not :/ Might require a bit more thinking\r\n\r\nGood point, that does seem tricky. I personally would not often/ever use that syntax, so @ckoopmann I'll defer to you to create the issue if it's a feature you still want / would use.\r\n\r\nRegarding the alternative broadcast syntax, it's may be worth a discussion to get some opinions from others. I'd be ok keeping it simple with just this global flag for now, I don't think it does much harm",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1205791603/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206004432",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2224#issuecomment-1206004432",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2224",
    "id": 1206004432,
    "node_id": "IC_kwDOGBlvNc5H4irQ",
    "user": {
      "login": "ckoopmann",
      "id": 15629702,
      "node_id": "MDQ6VXNlcjE1NjI5NzAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/15629702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ckoopmann",
      "html_url": "https://github.com/ckoopmann",
      "followers_url": "https://api.github.com/users/ckoopmann/followers",
      "following_url": "https://api.github.com/users/ckoopmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/ckoopmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ckoopmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ckoopmann/subscriptions",
      "organizations_url": "https://api.github.com/users/ckoopmann/orgs",
      "repos_url": "https://api.github.com/users/ckoopmann/repos",
      "events_url": "https://api.github.com/users/ckoopmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ckoopmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T03:32:22Z",
    "updated_at": "2022-08-05T03:32:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "> {gas: x}\r\n\r\n\r\n\r\n> > Hmm, I'd track the {gas: x} syntax in another issue to be honest, since it is more complex than you might think; we are going to get it from the traces, but the fact is that it will always be there, no matter if you specify it or not :/ Might require a bit more thinking\r\n> \r\n> Good point, that does seem tricky. I personally would not often/ever use that syntax, so @ckoopmann I'll defer to you to create the issue if it's a feature you still want / would use.\r\n> \r\n> Regarding the alternative broadcast syntax, it's may be worth a discussion to get some opinions from others. I'd be ok keeping it simple with just this global flag for now, I don't think it does much harm\r\n\r\nI'd definetely like / use this feature, so I created issue: https://github.com/foundry-rs/foundry/issues/2627\r\n\r\nI looked into implementing it  but I think it is beyond my current skill-level / depth of understanding, as a new contributor and rust-newbie. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206004432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
