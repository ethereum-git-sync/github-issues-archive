{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6034",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6034/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6034/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6034/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6034",
  "id": 1940954508,
  "node_id": "I_kwDOGBlvNc5zsJ2M",
  "number": 6034,
  "title": "A better UX about wallet management",
  "user": {
    "login": "Osneue",
    "id": 143680960,
    "node_id": "U_kgDOCJBlwA",
    "avatar_url": "https://avatars.githubusercontent.com/u/143680960?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Osneue",
    "html_url": "https://github.com/Osneue",
    "followers_url": "https://api.github.com/users/Osneue/followers",
    "following_url": "https://api.github.com/users/Osneue/following{/other_user}",
    "gists_url": "https://api.github.com/users/Osneue/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Osneue/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Osneue/subscriptions",
    "organizations_url": "https://api.github.com/users/Osneue/orgs",
    "repos_url": "https://api.github.com/users/Osneue/repos",
    "events_url": "https://api.github.com/users/Osneue/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Osneue/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-10-12T23:28:05Z",
  "updated_at": "2023-11-15T15:16:36Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge, Cast\n\n### Describe the feature you would like\n\n#### Description\r\nI import my private key (from Ganache local blockchain) by typing\r\n```\r\ncast wallet import gan-wall --interactive\r\nEnter private key:\r\nEnter password:\r\n`gan-wall` keystore was saved successfully. Address: 0xdcc0ed94411272c1eb99067f34dfb0aefc511709\r\n```\r\nthen I try to deploy my smart contract using script by typing\r\n```\r\nforge script script/DeploySimpleStorage.s.sol --rpc-url $GANACHE_RPC_URL --broadcast --account gan-wall\r\n```\r\nI got an error\r\n```\r\nError:\r\n\r\nYou seem to be using Foundry's default sender. Be sure to set your own --sender.\r\nNo associated wallet for addresses: {0x1804c8ab1f12e6bbf3894d4083f33e07309d1f38}. Unlocked wallets: [0xdcc0ed94411272c1eb99067f34dfb0aefc511709]\r\n```\r\nI add --sender, and it works\r\n```\r\nforge script script/DeploySimpleStorage.s.sol --rpc-url $GANACHE_RPC_URL --broadcast --account gan-wall --sender 0xdCC0eD94411272c1eB99067F34dFb0AEfc511709\r\n```\r\n#### Expected Behavior\r\n> I think specifying --account should automatically select the corresponding address as the sender because technically --account is the replacement for --private-key, and when you use --private-key you don't have to explicitly specify --sender as it automatically defaults to it, same should be the case with --account.\r\n-- from @usmanfarooq91\r\n\n\n### Additional context\n\n- original discussion: https://github.com/Cyfrin/foundry-full-course-f23/discussions/945#discussion-5688288\r\n- @PatrickAlphaC will be happy to sponsor this work.\r\n- forge version: forge 0.2.0 (8c1a569 2023-09-19T00:25:23.149586075Z)\r\n- cast version: cast 0.2.0 (8c1a569 2023-09-19T00:25:23.141846282Z)",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6034/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6034/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1760567307",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6034#issuecomment-1760567307",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6034",
    "id": 1760567307,
    "node_id": "IC_kwDOGBlvNc5o8CAL",
    "user": {
      "login": "rplusq",
      "id": 32346241,
      "node_id": "MDQ6VXNlcjMyMzQ2MjQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/32346241?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rplusq",
      "html_url": "https://github.com/rplusq",
      "followers_url": "https://api.github.com/users/rplusq/followers",
      "following_url": "https://api.github.com/users/rplusq/following{/other_user}",
      "gists_url": "https://api.github.com/users/rplusq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rplusq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rplusq/subscriptions",
      "organizations_url": "https://api.github.com/users/rplusq/orgs",
      "repos_url": "https://api.github.com/users/rplusq/repos",
      "events_url": "https://api.github.com/users/rplusq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rplusq/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-13T00:16:54Z",
    "updated_at": "2023-10-13T00:16:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Happy to take on this one, as I already did the original work for cast wallet import",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1760567307/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1763665345",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6034#issuecomment-1763665345",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6034",
    "id": 1763665345,
    "node_id": "IC_kwDOGBlvNc5pH2XB",
    "user": {
      "login": "Osneue",
      "id": 143680960,
      "node_id": "U_kgDOCJBlwA",
      "avatar_url": "https://avatars.githubusercontent.com/u/143680960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Osneue",
      "html_url": "https://github.com/Osneue",
      "followers_url": "https://api.github.com/users/Osneue/followers",
      "following_url": "https://api.github.com/users/Osneue/following{/other_user}",
      "gists_url": "https://api.github.com/users/Osneue/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Osneue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Osneue/subscriptions",
      "organizations_url": "https://api.github.com/users/Osneue/orgs",
      "repos_url": "https://api.github.com/users/Osneue/repos",
      "events_url": "https://api.github.com/users/Osneue/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Osneue/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-16T03:22:20Z",
    "updated_at": "2023-10-16T03:22:20Z",
    "author_association": "NONE",
    "body": "@PatrickAlphaC Please provide further details regarding the sponsorship.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1763665345/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1803001274",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6034#issuecomment-1803001274",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6034",
    "id": 1803001274,
    "node_id": "IC_kwDOGBlvNc5rd526",
    "user": {
      "login": "rmcmk",
      "id": 13653440,
      "node_id": "MDQ6VXNlcjEzNjUzNDQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/13653440?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmcmk",
      "html_url": "https://github.com/rmcmk",
      "followers_url": "https://api.github.com/users/rmcmk/followers",
      "following_url": "https://api.github.com/users/rmcmk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmcmk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmcmk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmcmk/subscriptions",
      "organizations_url": "https://api.github.com/users/rmcmk/orgs",
      "repos_url": "https://api.github.com/users/rmcmk/repos",
      "events_url": "https://api.github.com/users/rmcmk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmcmk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-09T01:03:02Z",
    "updated_at": "2023-11-09T01:03:20Z",
    "author_association": "NONE",
    "body": "> Happy to take on this one, as I already did the original work for cast wallet import\r\n\r\nAlso having this problem. Does not happen with `forge create` @rplusq ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1803001274/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1804180277",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6034#issuecomment-1804180277",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6034",
    "id": 1804180277,
    "node_id": "IC_kwDOGBlvNc5riZs1",
    "user": {
      "login": "klkvr",
      "id": 62447812,
      "node_id": "MDQ6VXNlcjYyNDQ3ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/62447812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klkvr",
      "html_url": "https://github.com/klkvr",
      "followers_url": "https://api.github.com/users/klkvr/followers",
      "following_url": "https://api.github.com/users/klkvr/following{/other_user}",
      "gists_url": "https://api.github.com/users/klkvr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klkvr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klkvr/subscriptions",
      "organizations_url": "https://api.github.com/users/klkvr/orgs",
      "repos_url": "https://api.github.com/users/klkvr/repos",
      "events_url": "https://api.github.com/users/klkvr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klkvr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-09T16:42:32Z",
    "updated_at": "2023-11-09T16:44:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems that nobody has took this yet because the spec is not quite clear.\r\n\r\nThe problem is that it is impossible to extract a wallet address from keystore without knowing the password. The same applies for all other wallet types except for private keys passed via CLI arg (for which auto-fetching of sender is [already done](https://github.com/foundry-rs/foundry/blob/40aca52e70af9dfc28442b35a6dceecb3a561e01/crates/forge/bin/cmd/script/cmd.rs#L33))\r\n\r\nAnother reason why it is unclear how to fix that is because for Trezor, Ledger and AWS wallets we need a chain_id to be able to use wallet and fetch it's address. But, the chain_id might only be known when the script is ran and newly created fork is started via `createFork` cheatcode.\r\n\r\nThus, those concerns are rising two questions\r\n\r\n1. Would we accept such relatively big change to user's UX as always prompting for passwords/private keys rather than only when `--broadcast` flag is on? We could make it easier to use by not auto-fetching wallet when `--sender` arg is provided, thus keeping backwards compatibility\r\n2. Are we OK with still not supporting auto-fetching of sender address for some of the wallets (which require chain_id knowledge). Or maybe we could come up with some workaround for this? For example always using Ethereum chain_id to prefetch address initially.\r\n\r\nI believe that nice support of keystores is a very important feature as in my opinion it is one of the best key management methods in terms of balance between convenience, availability and security (less secure than hardware wallets but much better than storing keys in .env)\r\n\r\n@mattsse what do you think about this? \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1804180277/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1812727120",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6034#issuecomment-1812727120",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6034",
    "id": 1812727120,
    "node_id": "IC_kwDOGBlvNc5sDAVQ",
    "user": {
      "login": "rmcmk",
      "id": 13653440,
      "node_id": "MDQ6VXNlcjEzNjUzNDQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/13653440?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmcmk",
      "html_url": "https://github.com/rmcmk",
      "followers_url": "https://api.github.com/users/rmcmk/followers",
      "following_url": "https://api.github.com/users/rmcmk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmcmk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmcmk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmcmk/subscriptions",
      "organizations_url": "https://api.github.com/users/rmcmk/orgs",
      "repos_url": "https://api.github.com/users/rmcmk/repos",
      "events_url": "https://api.github.com/users/rmcmk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmcmk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-15T15:16:36Z",
    "updated_at": "2023-11-15T15:16:36Z",
    "author_association": "NONE",
    "body": "@klkvr From my team's perspective, both approaches seem workable.\r\n\r\nRegarding option (1), if possible, introducing a flag such as `--skip-pw` that bypasses the password prompt when `--broadcast` isn't active could be a nice touch. This would help keep UX disruption minimal.\r\n\r\nAs for option (2), defaulting to Ethereum's `chain_id` to prefetch the `--sender` is a clever solution that stays clear of any ugly ambiguity that would only allow a subset of wallet types to utilize `--sender` prefetching.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1812727120/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
