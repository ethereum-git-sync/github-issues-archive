{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1146",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1146/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1146/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1146/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1146",
  "id": 1187354682,
  "node_id": "I_kwDOGBlvNc5GxZg6",
  "number": 1146,
  "title": "\"etch\" is not working.",
  "user": {
    "login": "Nipol",
    "id": 693461,
    "node_id": "MDQ6VXNlcjY5MzQ2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/693461?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Nipol",
    "html_url": "https://github.com/Nipol",
    "followers_url": "https://api.github.com/users/Nipol/followers",
    "following_url": "https://api.github.com/users/Nipol/following{/other_user}",
    "gists_url": "https://api.github.com/users/Nipol/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Nipol/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Nipol/subscriptions",
    "organizations_url": "https://api.github.com/users/Nipol/orgs",
    "repos_url": "https://api.github.com/users/Nipol/repos",
    "events_url": "https://api.github.com/users/Nipol/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Nipol/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    },
    {
      "id": 3759719580,
      "node_id": "LA_kwDOGBlvNc7gGMSc",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-normal",
      "name": "P-normal",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: normal"
    },
    {
      "id": 3759720552,
      "node_id": "LA_kwDOGBlvNc7gGMho",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-easy",
      "name": "D-easy",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: easy"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2022-03-31T01:38:22Z",
  "updated_at": "2022-03-31T17:19:46Z",
  "closed_at": "2022-03-31T17:19:45Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [X] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (9ed6b88 2022-03-30T00:34:46.574409410+00:00)\r\n\r\n### What command(s) is the bug in?\r\n\r\nforge test\r\n\r\n### Operating System\r\n\r\nLinux\r\n\r\n### Describe the bug\r\n\r\nSample.t.sol\r\n```solidity\r\npragma solidity ^0.8.0;\r\n\r\nimport \"ds-test/test.sol\";\r\n\r\ninterface CheatCodes {\r\n    function etch(address who, bytes calldata code) external;\r\n}\r\n\r\ncontract SampleTest is DSTest {\r\n    CheatCodes cheats = CheatCodes(HEVM_ADDRESS);\r\n\r\n    function setUp() public {\r\n        cheats.etch(address(1), abi.encode(0x600001));\r\n    }\r\n\r\n    function testExtCodelength() public {\r\n        assertTrue(address(1).code.length > 0);\r\n    }\r\n}\r\n```\r\n\r\nrun\r\n```shell\r\nforge test -vvvv -m testExtCodelength\r\n\r\n[⠒] Compiling...\r\n[⠘] installing solc version \"0.8.13\"\r\n[⠑] Successfully installed solc 0.8.13\r\nNo files changed, compilation skipped\r\n\r\nRunning 1 test for contracts/test/Sample.t.sol:SampleTest\r\n[FAIL] testExtCodelength() (gas: 6951)\r\nLogs:\r\n  Error: Assertion Failed\r\n\r\nTraces:\r\n  [5439] SampleTest::setUp() \r\n    ├─ [0] VM::etch(0x0000000000000000000000000000000000000001, 0x0000000000000000000000000000000000000000000000000000000000600001) \r\n    │   └─ ← ()\r\n    └─ ← ()\r\n\r\n  [6951] SampleTest::testExtCodelength() \r\n    ├─ emit log(: \"Error: Assertion Failed\")\r\n    └─ ← ()\r\n\r\nTest result: FAILED. 0 passed; 1 failed; finished in 142.88µs\r\n\r\nFailed tests:\r\n[FAIL] testExtCodelength() (gas: 6951)\r\n```\r\n\r\nWhen I debugged the test case that broken, the extcode was not actually positioned.\r\nthis report reason because it worked in the past 0.1 version.",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1146/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1146/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1083969591",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1146#issuecomment-1083969591",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1146",
    "id": 1083969591,
    "node_id": "IC_kwDOGBlvNc5AnBA3",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-31T01:45:25Z",
    "updated_at": "2022-03-31T01:45:25Z",
    "author_association": "MEMBER",
    "body": "Is this also the case for `address(n)` where `n > 9`? The first 9 addresses are occupied by precompiles, which I suspect is the issue",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1083969591/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1083972366",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1146#issuecomment-1083972366",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1146",
    "id": 1083972366,
    "node_id": "IC_kwDOGBlvNc5AnBsO",
    "user": {
      "login": "Nipol",
      "id": 693461,
      "node_id": "MDQ6VXNlcjY5MzQ2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/693461?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nipol",
      "html_url": "https://github.com/Nipol",
      "followers_url": "https://api.github.com/users/Nipol/followers",
      "following_url": "https://api.github.com/users/Nipol/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nipol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nipol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nipol/subscriptions",
      "organizations_url": "https://api.github.com/users/Nipol/orgs",
      "repos_url": "https://api.github.com/users/Nipol/repos",
      "events_url": "https://api.github.com/users/Nipol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nipol/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-31T01:47:29Z",
    "updated_at": "2022-03-31T01:49:53Z",
    "author_association": "NONE",
    "body": "> Is this also the case for `address(n)` where `n > 9`? The first 9 addresses are occupied by precompiles, which I suspect is the issue\r\n\r\nI updated the example and tried to run it again.\r\n```solidity\r\n    function testExtCodelength() public {\r\n        emit log_bytes(address(1).code);\r\n        assertTrue(address(1).code.length > 9);\r\n    }\r\n```\r\n\r\n```shell\r\n$ forge test -vvvv -m testExtCodelength\r\n[⠒] Compiling...\r\n[⠘] installing solc version \"0.8.13\"\r\n[⠆] Successfully installed solc 0.8.13\r\n[⠒] Compiling 1 files with 0.8.13\r\nCompiler run successful\r\n\r\nRunning 1 test for contracts/test/Sample.t.sol:SampleTest\r\n[FAIL] testExtCodelength() (gas: 8721)\r\nLogs:\r\n  0x\r\n  Error: Assertion Failed\r\n\r\nTraces:\r\n  [5479] SampleTest::setUp() \r\n    ├─ [0] VM::etch(0x0000000000000000000000000000000000000001, 0x0000000000000000000000000000000000000000000000000000000000600001) \r\n    │   └─ ← ()\r\n    └─ ← ()\r\n\r\n  [8721] SampleTest::testExtCodelength() \r\n    ├─ emit log_bytes(: 0x)\r\n    ├─ emit log(: \"Error: Assertion Failed\")\r\n    └─ ← ()\r\n\r\nTest result: FAILED. 0 passed; 1 failed; finished in 147.08µs\r\n\r\nFailed tests:\r\n[FAIL] testExtCodelength() (gas: 8721)\r\n\r\nEncountered a total of 1 failing tests, 0 tests succeeded\r\n```\r\n\r\nadditionally, this cases is working well!\r\n\r\n```solidity\r\n    function testExtCodelength() public {\r\n        cheats.etch(address(1), abi.encode(0x600001));\r\n\r\n        emit log_bytes(address(1).code);\r\n        assertTrue(address(1).code.length > 0);\r\n    }\r\n```\r\n\r\n```shell\r\n$ forge test -vvvv -m testExtCodelength\r\n[⠊] Compiling...\r\n[⠆] installing solc version \"0.8.13\"\r\n[⠘] Successfully installed solc 0.8.13\r\n[⠑] Compiling 1 files with 0.8.13\r\nCompiler run successful\r\n\r\nRunning 1 test for contracts/test/Sample.t.sol:SampleTest\r\n[PASS] testExtCodelength() (gas: 7758)\r\nLogs:\r\n  0x0000000000000000000000000000000000000000000000000000000000600001\r\n\r\nTraces:\r\n  [7758] SampleTest::testExtCodelength() \r\n    ├─ [0] VM::etch(0x0000000000000000000000000000000000000001, 0x0000000000000000000000000000000000000000000000000000000000600001) \r\n    │   └─ ← ()\r\n    ├─ emit log_bytes(: 0x0000000000000000000000000000000000000000000000000000000000600001)\r\n    └─ ← ()\r\n\r\nTest result: ok. 1 passed; 0 failed; finished in 169.88µs\r\n```\r\n\r\nIt seems that the `cheatcode` is not out of the function.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1083972366/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1083974199",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1146#issuecomment-1083974199",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1146",
    "id": 1083974199,
    "node_id": "IC_kwDOGBlvNc5AnCI3",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-31T01:48:52Z",
    "updated_at": "2022-03-31T01:48:52Z",
    "author_association": "MEMBER",
    "body": "I meant e.g. `address(10)` and so on 😄 ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1083974199/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1083980854",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1146#issuecomment-1083980854",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1146",
    "id": 1083980854,
    "node_id": "IC_kwDOGBlvNc5AnDw2",
    "user": {
      "login": "Nipol",
      "id": 693461,
      "node_id": "MDQ6VXNlcjY5MzQ2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/693461?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nipol",
      "html_url": "https://github.com/Nipol",
      "followers_url": "https://api.github.com/users/Nipol/followers",
      "following_url": "https://api.github.com/users/Nipol/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nipol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nipol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nipol/subscriptions",
      "organizations_url": "https://api.github.com/users/Nipol/orgs",
      "repos_url": "https://api.github.com/users/Nipol/repos",
      "events_url": "https://api.github.com/users/Nipol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nipol/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-31T01:54:19Z",
    "updated_at": "2022-03-31T01:54:19Z",
    "author_association": "NONE",
    "body": "> I meant e.g. `address(10)` and so on 😄\r\n\r\nhaha!! That's Right!\r\n\r\n```solidity\r\n    function setUp() public {\r\n        cheats.etch(address(12), abi.encode(0x600001));\r\n    }\r\n\r\n    function testExtCodelength() public {\r\n        emit log_bytes(address(12).code);\r\n        assertTrue(address(12).code.length > 0);\r\n    }\r\n```\r\n\r\n```shell\r\n$ forge test -vvvv -m testExtCodelength\r\n[⠊] Compiling...\r\n[⠒] installing solc version \"0.8.13\"\r\n[⠒] Successfully installed solc 0.8.13\r\n[⠔] Compiling 1 files with 0.8.13\r\nCompiler run successful\r\n\r\nRunning 1 test for contracts/test/Sample.t.sol:SampleTest\r\n[PASS] testExtCodelength() (gas: 4919)\r\nLogs:\r\n  0x0000000000000000000000000000000000000000000000000000000000600001\r\n\r\nTraces:\r\n  [4919] SampleTest::testExtCodelength() \r\n    ├─ emit log_bytes(: 0x0000000000000000000000000000000000000000000000000000000000600001)\r\n    └─ ← ()\r\n\r\nTest result: ok. 1 passed; 0 failed; finished in 156.50µs\r\n```\r\n\r\nWhat should I do about this issue?\r\nWould it be better to print a more friendly message than a call `bug`?`",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1083980854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1084651409",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1146#issuecomment-1084651409",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1146",
    "id": 1084651409,
    "node_id": "IC_kwDOGBlvNc5ApneR",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-31T14:18:13Z",
    "updated_at": "2022-03-31T14:18:13Z",
    "author_association": "MEMBER",
    "body": "For now just use addresses `address(n)` where `n > 9`, although I wonder what direction we should go here.\r\n\r\n@gakonst It seems that REVM overwrites precompile accounts every time we call `EVM::transact`, which makes sense in the real world, but I think a lot of people use `address(n)` where `0 < n < 10` for testing. We could either disallow that (may break things) or we could figure out how to best handle this in REVM",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1084651409/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1084837454",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1146#issuecomment-1084837454",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1146",
    "id": 1084837454,
    "node_id": "IC_kwDOGBlvNc5AqU5O",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-31T16:49:48Z",
    "updated_at": "2022-03-31T16:50:29Z",
    "author_association": "MEMBER",
    "body": "I think we should disallow `vm.etch` for addresses 0 < n < 10, and throw an error about using an address >10.\r\n\r\nI prefer breaking these early and getting \"correct\" behavior vs hacking something on Revm.\r\n\r\n(This should be fine for transfers etc on the <10 addresses and seems only a vm.etch issue?)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1084837454/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1084848530",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1146#issuecomment-1084848530",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1146",
    "id": 1084848530,
    "node_id": "IC_kwDOGBlvNc5AqXmS",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-31T16:58:47Z",
    "updated_at": "2022-03-31T16:58:47Z",
    "author_association": "COLLABORATOR",
    "body": "Worth considering disallowing other cheatcodes for those addresses. It's not realistic to `prank` that address or `mockCall` with it, and you also don't want to `save` or `load` slots from there, for example.\r\n\r\nAs for what addresses to block off, to be safe we might also want to:\r\n- Disallow a larger range, such as 0 < n < 99 to account for precompiles being added or other EVM chains that have additional precompiles\r\n- Prevent `etch`ing at addresses that other chains have predeployed contracts at. For example Optimism has [predeployed contracts](https://github.com/ethereum-optimism/optimism/blob/0ac233e73040b372464a9f59a325217254fe8e15/packages/contracts/contracts/libraries/constants/Lib_PredeployAddresses.sol) at `0x420...000` < n < `0x420...013`, not sure about other networks offhand",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1084848530/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1084878863",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1146#issuecomment-1084878863",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1146",
    "id": 1084878863,
    "node_id": "IC_kwDOGBlvNc5AqfAP",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-31T17:19:45Z",
    "updated_at": "2022-03-31T17:19:45Z",
    "author_association": "MEMBER",
    "body": "Closing this in favor of #1159 since `cheats.etch` is not actually broken :smile: Thanks for the report @Nipol!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1084878863/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
