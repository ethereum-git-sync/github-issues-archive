{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3189",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3189/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3189/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3189/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3189",
  "id": 1371272626,
  "node_id": "I_kwDOGBlvNc5Ru_Wy",
  "number": 3189,
  "title": "Failing `assertEq` doesn't fail the test if not called from the contract with the test",
  "user": {
    "login": "CodeSandwich",
    "id": 26183680,
    "node_id": "MDQ6VXNlcjI2MTgzNjgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/26183680?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/CodeSandwich",
    "html_url": "https://github.com/CodeSandwich",
    "followers_url": "https://api.github.com/users/CodeSandwich/followers",
    "following_url": "https://api.github.com/users/CodeSandwich/following{/other_user}",
    "gists_url": "https://api.github.com/users/CodeSandwich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/CodeSandwich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/CodeSandwich/subscriptions",
    "organizations_url": "https://api.github.com/users/CodeSandwich/orgs",
    "repos_url": "https://api.github.com/users/CodeSandwich/repos",
    "events_url": "https://api.github.com/users/CodeSandwich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/CodeSandwich/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2022-09-13T11:09:38Z",
  "updated_at": "2022-09-14T07:16:33Z",
  "closed_at": "2022-09-13T17:44:16Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (63c71b4 2022-09-12T00:04:31.392087873Z)\n\n### What command(s) is the bug in?\n\nforge test\n\n### Operating System\n\nLinux\n\n### Describe the bug\n\nThis issue was reported before: https://github.com/dapphub/dapptools/issues/768 and it was fixed. For whatever reason that fix doesn't translate to `forge`.\r\n\r\n# The problem\r\n\r\nOnly the instance containing the currently run test is checked when deciding if the test has failed. This makes it very hard to create a test utility using forge's `Test` asserts (`assertEq`, etc.), which could be used in multiple test contracts. The test utility must inherit from `Test`, but its `failed` state won't be checked and all failing asserts will be silently ignored.\r\n\r\n# An example\r\n\r\n```solidity\r\ncontract MyContract {\r\n    function foo(uint arg) public returns (uint) {\r\n        // do stuff\r\n        return arg + 2;\r\n    }\r\n}\r\n\r\ncontract MyContractUser is Test {\r\n    MyContract immutable myContract;\r\n\r\n    constructor() {\r\n        myContract = new MyContract();\r\n    }\r\n\r\n    function foo(uint arg) public returns (uint ret) {\r\n        ret = myContract.foo(arg);\r\n        assertEq(ret, arg + 1, \"Invariant failed\"); // Always violated, should fail\r\n    }\r\n}\r\n\r\ncontract MyContractTest is Test {\r\n    function testFoo() public {\r\n        MyContractUser user = new MyContractUser();\r\n        // do stuff\r\n        uint fooRet = user.foo(123);\r\n        // do more stuff\r\n    }\r\n}\r\n```\r\nThe `assertEq` here doesn't work. The invariant it's checking is always violated, but the test always passes, it only prints a message to the console. If the code is refactored so `assertEq` is moved to `MyContractTest`, it nicely fails as expected:\r\n```solidity\r\ncontract MyContractTest is Test {\r\n    function testFoo() public {\r\n        MyContractUser user = new MyContractUser();\r\n        // do stuff\r\n        uint fooRet = user.foo(123);\r\n        assertEq(fooRet, 123 + 1, \"Invariant failed\");\r\n        // do more stuff\r\n    }\r\n}\r\n```\r\n```\r\nRunning 1 test for src/test/Caller.t.sol:MyContractTest\r\n[FAIL. Reason: Assertion failed.] testFoo() (gas: 599395)\r\nLogs:\r\n  Error: Invariant failed\r\n  Error: a == b not satisfied [uint]\r\n    Expected: 124\r\n      Actual: 125\r\n  Error: Invariant failed\r\n  Error: a == b not satisfied [uint]\r\n    Expected: 124\r\n      Actual: 125\r\n```",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3189/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3189/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1245348521",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3189#issuecomment-1245348521",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3189",
    "id": 1245348521,
    "node_id": "IC_kwDOGBlvNc5KOoKp",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-13T12:33:55Z",
    "updated_at": "2022-09-13T12:33:55Z",
    "author_association": "MEMBER",
    "body": "this is expected because of how the `failed` state is tracked, which is a bool inside the Test state:\r\n\r\nhttps://github.com/dapphub/ds-test/blob/9310e879db8ba3ea6d5c6489a579118fd264a3f5/src/test.sol#L39\r\n\r\nyou can however call the `failed` function manually\r\nhttps://github.com/dapphub/ds-test/blob/9310e879db8ba3ea6d5c6489a579118fd264a3f5/src/test.sol#L47\r\n\r\nand do \r\n\r\n```solidity\r\nassert(!user.failed());\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1245348521/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1245349117",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3189#issuecomment-1245349117",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3189",
    "id": 1245349117,
    "node_id": "IC_kwDOGBlvNc5KOoT9",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-13T12:34:27Z",
    "updated_at": "2022-09-13T12:34:27Z",
    "author_association": "MEMBER",
    "body": "closing this, as this is the expected behaviour here",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1245349117/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1245362983",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3189#issuecomment-1245362983",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3189",
    "id": 1245362983,
    "node_id": "IC_kwDOGBlvNc5KOrsn",
    "user": {
      "login": "CodeSandwich",
      "id": 26183680,
      "node_id": "MDQ6VXNlcjI2MTgzNjgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/26183680?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeSandwich",
      "html_url": "https://github.com/CodeSandwich",
      "followers_url": "https://api.github.com/users/CodeSandwich/followers",
      "following_url": "https://api.github.com/users/CodeSandwich/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeSandwich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeSandwich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeSandwich/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeSandwich/orgs",
      "repos_url": "https://api.github.com/users/CodeSandwich/repos",
      "events_url": "https://api.github.com/users/CodeSandwich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeSandwich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-13T12:46:37Z",
    "updated_at": "2022-09-13T12:46:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Why would a behavior like this be desired? For newcomers who don't know the inner workings it's a very dangerous trap, every other testing framework in the world lets you perform an assert wherever you want. There's no warning and even no documentation for it. It's also against the philosophy of backward compatibility with DappTools.\r\n\r\nLike you said, it's a matter of adding a single check to be performed after each test run, DS-Test already provides the necessary mechanism.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1245362983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1245404817",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3189#issuecomment-1245404817",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3189",
    "id": 1245404817,
    "node_id": "IC_kwDOGBlvNc5KO16R",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-13T13:20:09Z",
    "updated_at": "2022-09-13T13:20:09Z",
    "author_association": "MEMBER",
    "body": "> It's also against the philosophy of backward compatibility with DappTools.\r\n\r\ncould you elaborate on this?\r\n\r\nwe should improve the docs for these scenarios",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1245404817/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1245415063",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3189#issuecomment-1245415063",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3189",
    "id": 1245415063,
    "node_id": "IC_kwDOGBlvNc5KO4aX",
    "user": {
      "login": "CodeSandwich",
      "id": 26183680,
      "node_id": "MDQ6VXNlcjI2MTgzNjgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/26183680?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeSandwich",
      "html_url": "https://github.com/CodeSandwich",
      "followers_url": "https://api.github.com/users/CodeSandwich/followers",
      "following_url": "https://api.github.com/users/CodeSandwich/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeSandwich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeSandwich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeSandwich/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeSandwich/orgs",
      "repos_url": "https://api.github.com/users/CodeSandwich/repos",
      "events_url": "https://api.github.com/users/CodeSandwich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeSandwich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-13T13:28:17Z",
    "updated_at": "2022-09-13T13:28:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "> could you elaborate on this?\r\n\r\nA valid test checking things in DappTools after migration to Foundry may stops failing if the checked things aren't right. The logic later can become broken and the test won't raise an alarm unless somebody runs `forge test` with `-vv` and reads the logs.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1245415063/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1245427527",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3189#issuecomment-1245427527",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3189",
    "id": 1245427527,
    "node_id": "IC_kwDOGBlvNc5KO7dH",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-13T13:38:17Z",
    "updated_at": "2022-09-13T13:38:17Z",
    "author_association": "MEMBER",
    "body": "@onbjerg I wonder if this has to do with the `globalFailed` flag, perhaps we're not evaluating this correctly, because I think this should catch things like this",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1245427527/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1245513089",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3189#issuecomment-1245513089",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3189",
    "id": 1245513089,
    "node_id": "IC_kwDOGBlvNc5KPQWB",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-13T14:39:35Z",
    "updated_at": "2022-09-13T14:39:48Z",
    "author_association": "MEMBER",
    "body": "@CodeSandwich okay I found the issue, this was indeed an issue with how we evaluated the `globalFailure` flag that is set in failed asserts.\r\n\r\nfixed in #3193\r\n\r\nthanks for flagging this!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1245513089/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1246346415",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3189#issuecomment-1246346415",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3189",
    "id": 1246346415,
    "node_id": "IC_kwDOGBlvNc5KSbyv",
    "user": {
      "login": "CodeSandwich",
      "id": 26183680,
      "node_id": "MDQ6VXNlcjI2MTgzNjgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/26183680?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeSandwich",
      "html_url": "https://github.com/CodeSandwich",
      "followers_url": "https://api.github.com/users/CodeSandwich/followers",
      "following_url": "https://api.github.com/users/CodeSandwich/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeSandwich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeSandwich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeSandwich/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeSandwich/orgs",
      "repos_url": "https://api.github.com/users/CodeSandwich/repos",
      "events_url": "https://api.github.com/users/CodeSandwich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeSandwich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-14T07:16:33Z",
    "updated_at": "2022-09-14T07:16:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you for fixing it and so fast!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1246346415/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
