{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2777",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2777/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2777/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2777/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2777",
  "id": 1339038508,
  "node_id": "I_kwDOGBlvNc5P0Bss",
  "number": 2777,
  "title": "CREATE2 address not properly generated in Forge",
  "user": {
    "login": "PaulRBerg",
    "id": 8782666,
    "node_id": "MDQ6VXNlcjg3ODI2NjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PaulRBerg",
    "html_url": "https://github.com/PaulRBerg",
    "followers_url": "https://api.github.com/users/PaulRBerg/followers",
    "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
    "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
    "repos_url": "https://api.github.com/users/PaulRBerg/repos",
    "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-08-15T13:57:20Z",
  "updated_at": "2022-08-15T18:10:59Z",
  "closed_at": "2022-08-15T17:43:36Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (e385736 2022-08-13T00:08:48.145581Z)\n\n### What command(s) is the bug in?\n\nforge test\n\n### Operating System\n\n_No response_\n\n### Describe the bug\n\n## Description\r\n\r\nI can't get a test to pass in which I'm testing the address of a contract created with create2. I'm using the [`computeCreate2Address`](https://github.com/foundry-rs/forge-std/blob/aa2e9a3f240e48ce801d54d68bccc6ac0e2b8ca7/src/Utils.sol#L49-L51) utility from forge-std, and then checking the value I get with the actual contract being deployed. What I did:\r\n\r\n1. Checked that bytecode hashes match\r\n2. Checked that the salts match\r\n3. Checked that the deployer contracts' addresses match\r\n4. Disabled the metadata hash in the Foundry configuration file\r\n\r\n## How to Reproduce\r\n\r\n1. Clone https://github.com/paulrberg/create2-repro\r\n2. Run `forge test -vvvv` to see how the `testDeploy__Event` fails (a mismatch between proxy addresses).",
  "closed_by": {
    "login": "PaulRBerg",
    "id": 8782666,
    "node_id": "MDQ6VXNlcjg3ODI2NjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PaulRBerg",
    "html_url": "https://github.com/PaulRBerg",
    "followers_url": "https://api.github.com/users/PaulRBerg/followers",
    "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
    "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
    "repos_url": "https://api.github.com/users/PaulRBerg/repos",
    "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2777/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2777/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1215093701",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2777#issuecomment-1215093701",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2777",
    "id": 1215093701,
    "node_id": "IC_kwDOGBlvNc5IbNvF",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-15T14:43:09Z",
    "updated_at": "2022-08-15T14:43:09Z",
    "author_association": "COLLABORATOR",
    "body": "When computing `deploymentBytecodeHash`, you need to use `abi.encodePacked` or `bytes.concat` (the latter is cheaper and simpler and IIRC will ultimately replace `encodePacked`), instead of `abi.encode`. You can also use `type(MyContract).creationCode` instead of the `getCode` cheatcode, but both are equivalent",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1215093701/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1215482455",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2777#issuecomment-1215482455",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2777",
    "id": 1215482455,
    "node_id": "IC_kwDOGBlvNc5IcspX",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-15T17:43:36Z",
    "updated_at": "2022-08-15T18:07:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, good catch. Thanks very much for your help @mds1!\r\n\r\nBoth `abi.encodePacked` and `bytes.concat` made the test pass. Interestingly, not using anything at all, i.e. passing the `bytes memory` bytecode directly to `keccak256`, also worked.\r\n\r\nSorry for the false positive.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1215482455/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1215497661",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2777#issuecomment-1215497661",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2777",
    "id": 1215497661,
    "node_id": "IC_kwDOGBlvNc5IcwW9",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-15T17:49:49Z",
    "updated_at": "2022-08-15T17:49:49Z",
    "author_association": "COLLABORATOR",
    "body": ">  Interestingly, not using anything at all, i.e. passing the `bytes memory` bytecode directly to `keccak256`, also worked. \r\n\r\nGood point, this would also work for your case, but only because you have no constructor args. Basically what happens is the constructor args are just ABI encoded and concatenated to the end of the bytecode. So that's why (1) using the bytecode directly, (2) `abi.encodePacked`, or (3) `bytes.concat` all work: they just return the input bytecode since you have no constructor args. Whereas `abi.encode` is encoding the bytes array and so it does not return the input bytecode.\r\n\r\nIf you did have constructor args, you'd do `bytes.concat(bytecode, abi.encode(arg1, arg2))` and use that as the keccak input. \r\n\r\nAnyway, glad you got it working! ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1215497661/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1215545692",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2777#issuecomment-1215545692",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2777",
    "id": 1215545692,
    "node_id": "IC_kwDOGBlvNc5Ic8Fc",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-15T18:10:59Z",
    "updated_at": "2022-08-15T18:10:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the additional color - again, very helpful.\r\n\r\n> Whereas `abi.encode` is encoding the bytes array and so it does not return the input bytecode.\r\n\r\nMakes sense.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1215545692/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
