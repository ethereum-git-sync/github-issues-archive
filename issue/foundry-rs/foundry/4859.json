{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4859",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4859/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4859/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4859/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4859",
  "id": 1691137814,
  "node_id": "I_kwDOGBlvNc5kzLcW",
  "number": 4859,
  "title": "Assertion: String Contains",
  "user": {
    "login": "johnnyshankman",
    "id": 6632701,
    "node_id": "MDQ6VXNlcjY2MzI3MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6632701?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/johnnyshankman",
    "html_url": "https://github.com/johnnyshankman",
    "followers_url": "https://api.github.com/users/johnnyshankman/followers",
    "following_url": "https://api.github.com/users/johnnyshankman/following{/other_user}",
    "gists_url": "https://api.github.com/users/johnnyshankman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/johnnyshankman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/johnnyshankman/subscriptions",
    "organizations_url": "https://api.github.com/users/johnnyshankman/orgs",
    "repos_url": "https://api.github.com/users/johnnyshankman/repos",
    "events_url": "https://api.github.com/users/johnnyshankman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/johnnyshankman/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-05-01T18:04:55Z",
  "updated_at": "2023-05-01T23:26:41Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nIn the [DS Test](https://book.getfoundry.sh/reference/ds-test) assertions there should be a `assertStringContains(string, string)` method for checking strings interpolation.\r\n\r\n### Additional context\r\n\r\nSince we are not deploying these contracts to the network, the gas costs of doing string contains is negligible. It's extremely useful in testing on-chain NFT data etc and straight forward enough to do with two for loops and converting to bytes.\r\n\r\n```\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\ncontract StringContains {\r\n\r\n    function assertStringContains(string memory _base, string memory _value) public pure returns (bool) {\r\n        bytes memory baseBytes = bytes(_base);\r\n        bytes memory valueBytes = bytes(_value);\r\n\r\n        if (valueBytes.length == 0) {\r\n            return true;\r\n        }\r\n\r\n        if (baseBytes.length < valueBytes.length) {\r\n            return false;\r\n        }\r\n\r\n        for (uint i = 0; i <= baseBytes.length - valueBytes.length; i++) {\r\n            bool found = true;\r\n            for (uint j = 0; j < valueBytes.length; j++) {\r\n                if (baseBytes[i + j] != valueBytes[j]) {\r\n                    found = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (found) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n```\r\n\r\nI use this in my tests. It works for every situation I've thrown at it but I have not unit tested this method itself.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4859/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4859/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1530554649",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4859#issuecomment-1530554649",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4859",
    "id": 1530554649,
    "node_id": "IC_kwDOGBlvNc5bOmkZ",
    "user": {
      "login": "johnnyshankman",
      "id": 6632701,
      "node_id": "MDQ6VXNlcjY2MzI3MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6632701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johnnyshankman",
      "html_url": "https://github.com/johnnyshankman",
      "followers_url": "https://api.github.com/users/johnnyshankman/followers",
      "following_url": "https://api.github.com/users/johnnyshankman/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnnyshankman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johnnyshankman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnnyshankman/subscriptions",
      "organizations_url": "https://api.github.com/users/johnnyshankman/orgs",
      "repos_url": "https://api.github.com/users/johnnyshankman/repos",
      "events_url": "https://api.github.com/users/johnnyshankman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johnnyshankman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-01T23:25:31Z",
    "updated_at": "2023-05-01T23:25:52Z",
    "author_association": "NONE",
    "body": "Btw let me know if anything here is unclear. Hopefully pretty straight forward request 🙏  thanks y'all!\r\n\r\nWould make a PR myself but I don't have the time this week to dive into the Foundry repo. Hopefully soon.\r\n\r\nBeen just shimming this thing into any test file that needs it via solidity import.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1530554649/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
