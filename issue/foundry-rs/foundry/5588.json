{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5588",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5588/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5588/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5588/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5588",
  "id": 1845520774,
  "node_id": "I_kwDOGBlvNc5uAGmG",
  "number": 5588,
  "title": "Increase DUMMY_CALL_OUTPUT or make it dynamic (if possible)",
  "user": {
    "login": "apuigsech",
    "id": 2170708,
    "node_id": "MDQ6VXNlcjIxNzA3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2170708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/apuigsech",
    "html_url": "https://github.com/apuigsech",
    "followers_url": "https://api.github.com/users/apuigsech/followers",
    "following_url": "https://api.github.com/users/apuigsech/following{/other_user}",
    "gists_url": "https://api.github.com/users/apuigsech/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/apuigsech/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/apuigsech/subscriptions",
    "organizations_url": "https://api.github.com/users/apuigsech/orgs",
    "repos_url": "https://api.github.com/users/apuigsech/repos",
    "events_url": "https://api.github.com/users/apuigsech/events{/privacy}",
    "received_events_url": "https://api.github.com/users/apuigsech/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-08-10T16:30:19Z",
  "updated_at": "2023-08-10T19:26:33Z",
  "closed_at": "2023-08-10T19:26:33Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nThis feature request is directly related to an issue I raised a few days ago, referenced as #5536. The issue was successfully resolved under #5538 by increasing the DUMMY_CALL_OUTPUT size from 512 to 1024 bytes\r\n\r\n\r\nIn the context of my [openlotto](https://github.com/apuigsech/openlotto-contracts) project, I encounter challenges with certain tests due to the management of large data structures. These structures surpass the dimensions of the DUMMY_CALL_OUTPUT, causing tests utilizing vm.expectRevert() to fail. _The usage of such large data structures warrants a review, as it may indicate an underlying anti-pattern on my code._\r\n\r\nIn particular, I'd like to draw attention to this specific data structure which is the one causing the issues;\r\n\r\n```\r\n    struct LotteryItem {\r\n        string Name;                                                // Human-readable identifier for the lottery.\r\n\r\n        uint256 InitBlock;                                          // Block number at which the lottery rounds are initialized or started.\r\n        uint32 Rounds;                                              // Number of rounds or iterations for the lottery (how many times the lottery will be played).\r\n        uint16 RoundBlocks;                                         // Number of blocks between each round.\r\n\r\n        uint256 BetPrice;                                           // Cost of a single bet for the lottery.\r\n\r\n        uint256 JackpotMin;                                         // Minimum size of the lottery jackpot.\r\n\r\n        address[_MAX_DISTRIBUTIONPOOL] DistributionPoolTo;          // Destination for the distribution pool entries. (address(0) sends money to the reserve, remaining value goes to jackpot).\r\n        UD60x18[_MAX_DISTRIBUTIONPOOL] DistributionPoolShare;       // Share (%) for the distribution pool entries.\r\n\r\n        UD60x18[_MAX_PRIZEPOOL] PrizePoolShare;                     // Share (%) for the prize pool entries.\r\n        bytes8[_MAX_PRIZEPOOL] PrizePoolAttributes;                 // Attributes for the prize pool entries.\r\n\r\n        LotteryOperatorInterface Operator;                          // Contract that 'operates' this lottery.\r\n        bytes16 Attributes;                                         // Attributes for the operator.\r\n    }\r\n```\r\n\r\nThe most direct solution to my issue could be adjusting the DUMMY_CALL_OUTPUT size. However, maintaining a fixed size for this parameter inherently imposes limitations. Alternatively, a potential solution (albeit with uncertain feasibility) it's implementing dynamic sizing.\r\n\r\n_NOTE: this does NOT block me because I am using my own version of `forge` that I patched, sizing DUMMY_CALL_OUTPUT with 4096. If you are happy with that solution, I can PR._\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "Evalir",
    "id": 26014927,
    "node_id": "MDQ6VXNlcjI2MDE0OTI3",
    "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Evalir",
    "html_url": "https://github.com/Evalir",
    "followers_url": "https://api.github.com/users/Evalir/followers",
    "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
    "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
    "organizations_url": "https://api.github.com/users/Evalir/orgs",
    "repos_url": "https://api.github.com/users/Evalir/repos",
    "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Evalir/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5588/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5588/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1673572153",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5588#issuecomment-1673572153",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5588",
    "id": 1673572153,
    "node_id": "IC_kwDOGBlvNc5jwK85",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-10T16:49:56Z",
    "updated_at": "2023-08-10T16:50:55Z",
    "author_association": "MEMBER",
    "body": "@Evalir let's bump this and also convert this into a lazy so we don't need to clone this everytime\r\n\r\nif we have this as Lazy<Bytes> we can even increase this drastically to a few kb",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1673572153/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
