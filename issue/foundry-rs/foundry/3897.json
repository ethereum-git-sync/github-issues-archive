{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3897",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3897/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3897/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3897/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3897",
  "id": 1500203723,
  "node_id": "I_kwDOGBlvNc5Za0rL",
  "number": 3897,
  "title": "Script deployment fails when checking account's code on Arbitrum.",
  "user": {
    "login": "xenoliss",
    "id": 33523487,
    "node_id": "MDQ6VXNlcjMzNTIzNDg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/33523487?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/xenoliss",
    "html_url": "https://github.com/xenoliss",
    "followers_url": "https://api.github.com/users/xenoliss/followers",
    "following_url": "https://api.github.com/users/xenoliss/following{/other_user}",
    "gists_url": "https://api.github.com/users/xenoliss/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/xenoliss/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/xenoliss/subscriptions",
    "organizations_url": "https://api.github.com/users/xenoliss/orgs",
    "repos_url": "https://api.github.com/users/xenoliss/repos",
    "events_url": "https://api.github.com/users/xenoliss/events{/privacy}",
    "received_events_url": "https://api.github.com/users/xenoliss/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-12-16T13:27:45Z",
  "updated_at": "2022-12-20T10:43:09Z",
  "closed_at": "2022-12-20T10:43:09Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (67ef930 2022-12-14T00:03:45.27917728Z)\n\n### What command(s) is the bug in?\n\n_No response_\n\n### Operating System\n\nLinux\n\n### Describe the bug\n\nI'm using solidity script to deploy contracts. One of the contract takes as parameter the address of a previously deployed contract and ensure it has already been deployed.\r\n\r\nHere is a minimal example:\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.17;\r\n\r\nimport \"forge-std/Script.sol\";\r\n\r\ncontract DeployScript is Script {\r\n    function run() external {\r\n        uint256 DEPLOYER_PRIVATE_KEY = vm.envUint(\"DEPLOYER_PRIVATE_KEY\");\r\n        vm.startBroadcast(DEPLOYER_PRIVATE_KEY);\r\n\r\n        DeployFirst first = new DeployFirst(1);\r\n        console.log(\"DeployFirst deployed at:\", address(first));\r\n\r\n        DeploySecond second = new DeploySecond(address(first));\r\n        console.log(\"DeploySecond deployed at:\", address(second));\r\n\r\n        vm.stopBroadcast();\r\n    }\r\n}\r\n\r\ncontract DeployFirst {\r\n    uint256 a;\r\n\r\n    constructor(uint256 _a) {\r\n        a = _a;\r\n    }\r\n}\r\n\r\ncontract DeploySecond {\r\n    address first;\r\n\r\n    constructor(address _first) {\r\n        uint256 contractSize;\r\n        assembly {\r\n            contractSize := extcodesize(_first)\r\n        }\r\n\r\n        require(contractSize > 0, \"NO CODE\");\r\n\r\n        first = _first;\r\n    }\r\n}\r\n```\r\n\r\nRunning this with `forge script script/deploy-poc.s.sol --sig \"run()\" --fork-url $ETH_MAINNET_RPC_URL --broadcast` works just fine. It also works when deploying on ETH Goerli or on a local anvil node that is forking (or not) ETH mainnet/goerli.\r\n\r\nAt the moment I try to deploy on Arbitrum Goerli, whether it is by running `forge script script/deploy-poc.s.sol --sig \"run()\" --fork-url $ARBITRUM_GOERLI_RPC_URL --broadcast` or `forge script script/deploy-poc.s.sol --sig \"run()\" --fork-url http://localhost:8545 --broadcast` (with a local anvil node started with `anvil --fork-url $ARBITRUM_GOERLI_RPC_URL`), I got the following logs:\r\n\r\n```\r\nScript ran successfully.\r\n\r\n== Logs ==\r\n  DeployFirst deployed at: 0x8bCe54ff8aB45CB075b044AE117b8fD91F9351aB\r\n  DeploySecond deployed at: 0x74Cf9087AD26D541930BaC724B7ab21bA8F00a27\r\n\r\n## Setting up (1) EVMs.\r\nError: \r\nFailed to estimate gas for tx: 0x820a2ec133ac6f14dba0bba7ed0ff970193c0ff768fc64c28c5be87a2d020a99\r\n\r\nContext:\r\n- (code: 3, message: execution reverted: NO CODE, data: Some(String(\"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000074e4f20434f444500000000000000000000000000000000000000000000000000\")))\r\n```\r\n\r\nThis indicates that for some reason the state is not correctly recorded as it says the DeployFirst's address has no code.\r\n\r\n**NOTE**: When commenting the deployment of `DeploySecond `, the script works just fine and successfully deploys `DeployFirst`.\r\n",
  "closed_by": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3897/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3897/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1358718837",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3897#issuecomment-1358718837",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3897",
    "id": 1358718837,
    "node_id": "IC_kwDOGBlvNc5Q_Gd1",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-20T01:40:58Z",
    "updated_at": "2022-12-20T01:40:58Z",
    "author_association": "MEMBER",
    "body": "@joshieDo PTAL!\n\nI think this might be related to arbitrum pending transaction RPC output messing up with the second call perhaps? Not sure, this also may be the opcode behaving differently..",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1358718837/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1358801221",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3897#issuecomment-1358801221",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3897",
    "id": 1358801221,
    "node_id": "IC_kwDOGBlvNc5Q_alF",
    "user": {
      "login": "joshieDo",
      "id": 93316087,
      "node_id": "U_kgDOBY_j9w",
      "avatar_url": "https://avatars.githubusercontent.com/u/93316087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshieDo",
      "html_url": "https://github.com/joshieDo",
      "followers_url": "https://api.github.com/users/joshieDo/followers",
      "following_url": "https://api.github.com/users/joshieDo/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshieDo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshieDo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshieDo/subscriptions",
      "organizations_url": "https://api.github.com/users/joshieDo/orgs",
      "repos_url": "https://api.github.com/users/joshieDo/repos",
      "events_url": "https://api.github.com/users/joshieDo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshieDo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-20T03:49:25Z",
    "updated_at": "2022-12-20T03:51:01Z",
    "author_association": "COLLABORATOR",
    "body": "On it. This seems to happen even before the broadcasting begins. \r\n\r\nThere's a stage where we estimate the gas usage to show the user (even without the `--broadcast`). For arbitrum and other similar chains, we rely on the external RPC to give us the gas usage estimation (and disregard the locally calculated one). However, in situations like this (tx2 depends on tx1), we obviously hit these kind of errors. \r\n\r\nIt doesn't happen on `eth_mainnet` and `eth_goerli`, because we don't disregard the locally calculated one.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1358801221/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
