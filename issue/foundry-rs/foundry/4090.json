{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4090",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4090/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4090/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4090/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4090",
  "id": 1533187018,
  "node_id": "I_kwDOGBlvNc5bYpPK",
  "number": 4090,
  "title": "`vm.canRevert()`: allow tests to revert in expected cases",
  "user": {
    "login": "0xPhaze",
    "id": 103113487,
    "node_id": "U_kgDOBiVjDw",
    "avatar_url": "https://avatars.githubusercontent.com/u/103113487?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0xPhaze",
    "html_url": "https://github.com/0xPhaze",
    "followers_url": "https://api.github.com/users/0xPhaze/followers",
    "following_url": "https://api.github.com/users/0xPhaze/following{/other_user}",
    "gists_url": "https://api.github.com/users/0xPhaze/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0xPhaze/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0xPhaze/subscriptions",
    "organizations_url": "https://api.github.com/users/0xPhaze/orgs",
    "repos_url": "https://api.github.com/users/0xPhaze/repos",
    "events_url": "https://api.github.com/users/0xPhaze/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0xPhaze/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-01-14T08:50:46Z",
  "updated_at": "2023-02-28T14:35:57Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nOften it's desirable to check properties of results, such as a new price of an AMM. However, these functions can contain error-checks and revert on certain inputs. And sometimes I want to make sure a property holds only if I actually get a result from a call and ignore the reverting cases.\r\n\r\nAn example of what this could look like is:\r\n```solidity\r\n    function test_getPrice_invariant(uint256 x, uint256 dx) public {\r\n        dx = bound(dx, 0, type(uint256).max - x);\r\n\r\n        vm.canRevert(Overflow.selector);\r\n        uint256 y1 = amm.getPrice(x);\r\n\r\n        vm.canRevert(Overflow.selector);\r\n        uint256 y2 = amm.getPrice(x + dx);\r\n        \r\n        assertGte(y2, y1);\r\n    }\r\n```\r\n\r\nA current workaround is to use low-level calls or `try ... catch ...`, but these have to be set up for each function manually.\r\n\r\n```solidity\r\n    function getPrice_canRevert(uint256 x, bytes4 selector) internal returns (uint256) {\r\n        try amm.getPrice(x) returns (uint256 price) {\r\n            return price;\r\n        } catch (bytes memory reason) {\r\n            require(bytes4(reason) == selector, \"unexpected revert\");\r\n        }\r\n    }\r\n```\r\n\r\nAn implementation of `vm.canRevert`/`vm.allowRevert` could add to the counter of `vm.assume` checks to make sure that one isn't rejecting all calls.\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4090/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4090/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1447462082",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4090#issuecomment-1447462082",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4090",
    "id": 1447462082,
    "node_id": "IC_kwDOGBlvNc5WRoTC",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-28T02:12:02Z",
    "updated_at": "2023-02-28T02:12:02Z",
    "author_association": "COLLABORATOR",
    "body": "Hmm, how would this work in practice—does the value of `y1` get set to zero if the call reverts? These feels like a footgun, because you now can't distinguish reverts from actual zero responses\r\n\r\nI think you're suggesting to reject the test case though? That seems ok, but I'd suggest `vm.assumeNoRevert()` which adds a way to add an assumption that the next call won't revert",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1447462082/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1448082577",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4090#issuecomment-1448082577",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4090",
    "id": 1448082577,
    "node_id": "IC_kwDOGBlvNc5WT_yR",
    "user": {
      "login": "0xPhaze",
      "id": 103113487,
      "node_id": "U_kgDOBiVjDw",
      "avatar_url": "https://avatars.githubusercontent.com/u/103113487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xPhaze",
      "html_url": "https://github.com/0xPhaze",
      "followers_url": "https://api.github.com/users/0xPhaze/followers",
      "following_url": "https://api.github.com/users/0xPhaze/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xPhaze/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xPhaze/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xPhaze/subscriptions",
      "organizations_url": "https://api.github.com/users/0xPhaze/orgs",
      "repos_url": "https://api.github.com/users/0xPhaze/repos",
      "events_url": "https://api.github.com/users/0xPhaze/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xPhaze/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-28T12:15:46Z",
    "updated_at": "2023-02-28T12:15:46Z",
    "author_association": "NONE",
    "body": "Yes, I was thinking it would work like an assume. And not sure how you’re thinking about vm.assumeNoRevert, because that means “the next call should not revert”, which is the default behavior already.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1448082577/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1448262294",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4090#issuecomment-1448262294",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4090",
    "id": 1448262294,
    "node_id": "IC_kwDOGBlvNc5WUrqW",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-28T14:19:42Z",
    "updated_at": "2023-02-28T14:19:42Z",
    "author_association": "COLLABORATOR",
    "body": "A reverting call currently leads to a test failure, unless you have `vm.expectRevert` in which case execution continues. My understanding was that `vm.assumeNoRevert` would reject the test case if there's a revert, and generate new fuzz input values, just like `vm.assume(false)`",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1448262294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1448294208",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4090#issuecomment-1448294208",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4090",
    "id": 1448294208,
    "node_id": "IC_kwDOGBlvNc5WUzdA",
    "user": {
      "login": "0xPhaze",
      "id": 103113487,
      "node_id": "U_kgDOBiVjDw",
      "avatar_url": "https://avatars.githubusercontent.com/u/103113487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xPhaze",
      "html_url": "https://github.com/0xPhaze",
      "followers_url": "https://api.github.com/users/0xPhaze/followers",
      "following_url": "https://api.github.com/users/0xPhaze/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xPhaze/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xPhaze/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xPhaze/subscriptions",
      "organizations_url": "https://api.github.com/users/0xPhaze/orgs",
      "repos_url": "https://api.github.com/users/0xPhaze/repos",
      "events_url": "https://api.github.com/users/0xPhaze/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xPhaze/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-28T14:35:57Z",
    "updated_at": "2023-02-28T14:35:57Z",
    "author_association": "NONE",
    "body": "Yeah you’re right. Just found the name vm.assumeNoRevert a bit confusing, but if you think about it, it does make sense to name it that way.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1448294208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
