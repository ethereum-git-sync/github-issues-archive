{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6811",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6811/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6811/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6811/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6811",
  "id": 2083109083,
  "node_id": "I_kwDOGBlvNc58Kbjb",
  "number": 6811,
  "title": "forking using a transaction hash speed heavily depends on the tx position inside the block",
  "user": {
    "login": "maa105",
    "id": 5106107,
    "node_id": "MDQ6VXNlcjUxMDYxMDc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5106107?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maa105",
    "html_url": "https://github.com/maa105",
    "followers_url": "https://api.github.com/users/maa105/followers",
    "following_url": "https://api.github.com/users/maa105/following{/other_user}",
    "gists_url": "https://api.github.com/users/maa105/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maa105/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maa105/subscriptions",
    "organizations_url": "https://api.github.com/users/maa105/orgs",
    "repos_url": "https://api.github.com/users/maa105/repos",
    "events_url": "https://api.github.com/users/maa105/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maa105/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2024-01-16T06:32:48Z",
  "updated_at": "2024-01-17T10:38:05Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [X] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (293fad7 2024-01-14T00:19:14.283768427Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nforge test\r\n\r\n### Operating System\r\n\r\nLinux\r\n\r\n### Describe the bug\r\n\r\nIt seems the speed of createSelectFork when using it like `createSelectFork(rpcUrl, transactionHash)` heavily depends on the the order of set transaction within the block. In the below test the [0xe55 transaction](https://etherscan.io/tx/0xe55a899b252090c71988e0c069e75b7df468d7110993e89937cec29a2d503a9d) is the first transaction in eth mainnet block [19017590](https://etherscan.io/block/19017590) and [0x8e4 transaction](https://etherscan.io/tx/0x8e456439e743e9d85b4444e6221d395f4e6079acc4a392c0b1ca03e11a4f0e2b) is the last (137th) transaction in that same block. the code below attempts to create a fork at each of these transactions. the output of the code will be something like:\r\n\r\n![image](https://github.com/foundry-rs/foundry/assets/5106107/f493687f-30da-414b-b0b5-61703f5565ba)\r\n\r\n~340ms for last transaction, ~10ms for first transaction a significant degradation for later transactions.\r\n\r\nP.S. replace `valid-rpc-url` by your rpc url\r\n\r\nP.S. depending on your eth node's history retention and the time you run the below test the test might fail if the node does not keep the whole blockchain history. so to test just go to [ethscan blocks](https://etherscan.io/blocks) select latest block and then select first transaction hash and last transaction hash and replace below.\r\n\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.21;\r\n\r\nimport {console,Test} from \"forge-std/Test.sol\";\r\n\r\ncontract EntryTest is Test {\r\n\r\n    function testStart() public {\r\n        uint s1 = vm.unixTime();\r\n        vm.createSelectFork('ws://valid-rpc-url', vm.parseBytes32('0x8e456439e743e9d85b4444e6221d395f4e6079acc4a392c0b1ca03e11a4f0e2b')); // last tx\r\n        uint s2 = vm.unixTime();\r\n        vm.createSelectFork('ws://valid-rpc-url', vm.parseBytes32('0xe55a899b252090c71988e0c069e75b7df468d7110993e89937cec29a2d503a9d')); // first tx\r\n        uint s3 = vm.unixTime();\r\n        console.log(\"T1\", s2 - s1); // ~340ms\r\n        console.log(\"T2\", s3 - s2); // ~10ms\r\n    }\r\n}\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6811/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6811/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1893212786",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6811#issuecomment-1893212786",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6811",
    "id": 1893212786,
    "node_id": "IC_kwDOGBlvNc5w2CJy",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-16T07:43:03Z",
    "updated_at": "2024-01-16T07:43:03Z",
    "author_association": "MEMBER",
    "body": "> t seems the speed of createSelectFork when using it like createSelectFork(rpcUrl, transactionHash) heavily depends on the the order of set transaction within the block.\r\n\r\nthis is expected because it needs to replay the state up until the targeted transaction.\r\nThe way this works is, the fork is created based on the transaction's parent block and then all the previous transactions in the block are replayed so you get the exact state of the transaction.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1893212786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1895045607",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6811#issuecomment-1895045607",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6811",
    "id": 1895045607,
    "node_id": "IC_kwDOGBlvNc5w9Bnn",
    "user": {
      "login": "maa105",
      "id": 5106107,
      "node_id": "MDQ6VXNlcjUxMDYxMDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5106107?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maa105",
      "html_url": "https://github.com/maa105",
      "followers_url": "https://api.github.com/users/maa105/followers",
      "following_url": "https://api.github.com/users/maa105/following{/other_user}",
      "gists_url": "https://api.github.com/users/maa105/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maa105/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maa105/subscriptions",
      "organizations_url": "https://api.github.com/users/maa105/orgs",
      "repos_url": "https://api.github.com/users/maa105/repos",
      "events_url": "https://api.github.com/users/maa105/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maa105/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-17T06:31:54Z",
    "updated_at": "2024-01-17T06:31:54Z",
    "author_association": "NONE",
    "body": "@mattsse Thanks for the answer I expected as such. but is this sever degradation expected? Cause I believe the application of a transaction should be very fast and the bottleneck would be fetching the transactions from the network. I suspect that the transactions are not fetched in batch but rather one by one and applied which might explain the above results. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1895045607/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1895536868",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6811#issuecomment-1895536868",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6811",
    "id": 1895536868,
    "node_id": "IC_kwDOGBlvNc5w-5jk",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-17T10:38:04Z",
    "updated_at": "2024-01-17T10:38:04Z",
    "author_association": "MEMBER",
    "body": "when a tx is executed we need to fetch every unknown slot, so basically every SLOAD and account access is translated into rpc requests, which can easily lead to ratelimiting by the provider",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1895536868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
