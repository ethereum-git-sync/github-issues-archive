{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4097",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4097/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4097/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4097/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4097",
  "id": 1533930363,
  "node_id": "I_kwDOGBlvNc5bbet7",
  "number": 4097,
  "title": "Ability to get sorted arrays when fuzzing",
  "user": {
    "login": "PaulRBerg",
    "id": 8782666,
    "node_id": "MDQ6VXNlcjg3ODI2NjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PaulRBerg",
    "html_url": "https://github.com/PaulRBerg",
    "followers_url": "https://api.github.com/users/PaulRBerg/followers",
    "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
    "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
    "repos_url": "https://api.github.com/users/PaulRBerg/repos",
    "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3394554570,
      "node_id": "LA_kwDOGBlvNc7KVMrK",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-fuzzing",
      "name": "A-fuzzing",
      "color": "FBCA04",
      "default": false,
      "description": "Area: fuzzing"
    },
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-01-15T17:48:48Z",
  "updated_at": "2023-04-20T10:44:45Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nAs discussed in https://github.com/foundry-rs/foundry/discussions/3948, my protocol has some business logic that is dependent upon the end user sending a sorted array as a function argument.\r\n\r\nI've been bashing my head against the wall trying to fuzz the input arrays in a way that is scalable (tests don't take ages to run), to no fruition.\r\n\r\nI pulled together [an implementation of the quicksort algorithm in Solidity](https://gist.github.com/PaulRBerg/61e5a90434bd4bad31d9dbe9dd0c500e) based on the sources I found on the Internet. The issue is that sorting a fuzzed arrays slows down test run times.\r\n\r\nIt would be nice to be able to instruct Foundry to sort the array on our behalf. I'm thinking of something like this (echo-ing the proposal I left in https://github.com/foundry-rs/foundry/issues/4085):\r\n\r\n```solidity\r\n/// @custom:sort-array\r\nfunction test_Something(uint256[] memory arr) external {\r\n    // ...\r\n}\r\n```\r\n\r\nThat is, whenever the custom NatSpec tag above is specified, Foundry would provide the user with a sorted array `arr`, every time. It would be cheaper to let Foundry do this in Rust rather than sorting the array in memory in Solidity.\r\n\r\nAs an alternative to the above, we could consider using a specific prefix for the array variable names:\r\n\r\n```solidity\r\nfunction test_Something(uint256[] memory sortedArr) external {\r\n    // ...\r\n}\r\n```\r\n\r\nThe idea being, every time Foundry sees a function param that is an array type and its name starts with `sorted`, it would automatically sort the array.\r\n\r\nSorted arrays should be a common enough use case for a feature like this to be worth considering and implementing.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4097/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4097/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1516110664",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4097#issuecomment-1516110664",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4097",
    "id": 1516110664,
    "node_id": "IC_kwDOGBlvNc5aXgNI",
    "user": {
      "login": "0xMelkor",
      "id": 8720857,
      "node_id": "MDQ6VXNlcjg3MjA4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8720857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xMelkor",
      "html_url": "https://github.com/0xMelkor",
      "followers_url": "https://api.github.com/users/0xMelkor/followers",
      "following_url": "https://api.github.com/users/0xMelkor/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xMelkor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xMelkor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xMelkor/subscriptions",
      "organizations_url": "https://api.github.com/users/0xMelkor/orgs",
      "repos_url": "https://api.github.com/users/0xMelkor/repos",
      "events_url": "https://api.github.com/users/0xMelkor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xMelkor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-20T10:44:44Z",
    "updated_at": "2023-04-20T10:44:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "This sounds interesting. \r\n\r\n**Technically this is feasible**\r\n\r\nWe can use `proptest::prop_map` to generate a sorted array out of a proptest strategy.\r\nWe could also extend the input of the `fuzz_param` function to accept some kind of metadata associated to `param`.\r\nSuch metadata would let us generate more sophisticated compound strategies (i.e. for sorted arrays).\r\n\r\nhttps://github.com/foundry-rs/foundry/blob/8307d6dc09dbd99d64239b901413869dc33cfa3e/evm/src/fuzz/strategies/param.rs#L14\r\n\r\n**The config part**\r\n\r\nimho the NatSpec approach is probably more flexible than the param name. Given though we should define some meta language to convey strategy configs to the fuzzer i.e.\r\n```solidity\r\n/// forge-config:fuzz:strategy:sort(arr, desc)\r\nfunction test_Something(uint256[] memory arr) external {\r\n    // ...\r\n}\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1516110664/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
