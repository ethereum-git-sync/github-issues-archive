{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4405",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4405/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4405/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4405/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4405",
  "id": 1593683640,
  "node_id": "I_kwDOGBlvNc5e_a64",
  "number": 4405,
  "title": "Cheatcode `expectRevert` doesn't catch error messages from libraries",
  "user": {
    "login": "pedrommaiaa",
    "id": 100535780,
    "node_id": "U_kgDOBf4N5A",
    "avatar_url": "https://avatars.githubusercontent.com/u/100535780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pedrommaiaa",
    "html_url": "https://github.com/pedrommaiaa",
    "followers_url": "https://api.github.com/users/pedrommaiaa/followers",
    "following_url": "https://api.github.com/users/pedrommaiaa/following{/other_user}",
    "gists_url": "https://api.github.com/users/pedrommaiaa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pedrommaiaa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pedrommaiaa/subscriptions",
    "organizations_url": "https://api.github.com/users/pedrommaiaa/orgs",
    "repos_url": "https://api.github.com/users/pedrommaiaa/repos",
    "events_url": "https://api.github.com/users/pedrommaiaa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pedrommaiaa/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-02-21T15:31:21Z",
  "updated_at": "2023-06-20T22:54:46Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (b44b045 2023-02-21T00:22:41.521901Z)\n\n### What command(s) is the bug in?\n\nforge test\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\nHelper Contract:\r\n```Solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport {ERC20} from \"solmate/tokens/ERC20.sol\";\r\nimport {SafeTransferLib} from \"solmate/utils/SafeTransferLib.sol\";\r\n\r\ncontract Helper {\r\n    ERC20 public token;\r\n\r\n    constructor(ERC20 _token) { token = _token; }\r\n\r\n    function doSafeTransfer(address to, uint256 amount) external {\r\n        SafeTransferLib.safeTransfer(token, to, amount); \r\n    }\r\n}\r\n```\r\n\r\nIn the example bellow `testRevertTransfer` is expected to be successful as it was supposed to catch the error message from the library but in reality it doesn't.\r\n\r\n```Solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport {Test} from \"forge-std/Test.sol\";\r\nimport {Helper} from \"../src/Helper.sol\";\r\nimport {MockERC20} from \"solmate/test/utils/mocks/MockERC20.sol\";\r\nimport {SafeTransferLib} from \"solmate/utils/SafeTransferLib.sol\";\r\n\r\ncontract LibraryTest is Test {\r\n    Helper public helper;\r\n    MockERC20 public token;\r\n\r\n    function setUp() public {\r\n        token = new MockERC20(\"MockToken\", \"TST\", 18);\r\n        helper = new Helper(token);\r\n    }\r\n\r\n    // This doesn't work.\r\n    function testRevertTransfer() external {\r\n        vm.expectRevert(bytes(\"TRANSFER_FAILED\"));\r\n        SafeTransferLib.safeTransfer(token, address(0xBEEF), 1e18);\r\n    }\r\n\r\n    // This works fine.\r\n    function testRevertHelperTransfer() external {\r\n        vm.expectRevert(bytes(\"TRANSFER_FAILED\"));\r\n        helper.doSafeTransfer(address(0xBEEF), 1e18);\r\n    }\r\n}\r\n```\r\n\r\nRepo with reproducible error: https://github.com/pedrommaiaa/Foundry-Library-Error\r\nIssue also opened in the forge-std repo: https://github.com/foundry-rs/forge-std/issues/306",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4405/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4405/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1500594374",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4405#issuecomment-1500594374",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4405",
    "id": 1500594374,
    "node_id": "IC_kwDOGBlvNc5ZcUDG",
    "user": {
      "login": "ssadler",
      "id": 125019,
      "node_id": "MDQ6VXNlcjEyNTAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/125019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssadler",
      "html_url": "https://github.com/ssadler",
      "followers_url": "https://api.github.com/users/ssadler/followers",
      "following_url": "https://api.github.com/users/ssadler/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssadler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssadler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssadler/subscriptions",
      "organizations_url": "https://api.github.com/users/ssadler/orgs",
      "repos_url": "https://api.github.com/users/ssadler/repos",
      "events_url": "https://api.github.com/users/ssadler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssadler/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-07T19:55:20Z",
    "updated_at": "2023-04-07T19:55:20Z",
    "author_association": "NONE",
    "body": "As a workaround, you can define a wrapper for your pure function and call it using `this` in your test:\r\n\r\n```solidity\r\n\r\ncontract Tests {\r\n  function testThing() public {\r\n    vm.expectRevert(\"...\");\r\n    this.wrapPure();\r\n  }\r\n  function wrapPure() public { MyLib.wrapPure(); }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1500594374/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1500674835",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4405#issuecomment-1500674835",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4405",
    "id": 1500674835,
    "node_id": "IC_kwDOGBlvNc5ZcnsT",
    "user": {
      "login": "ssadler",
      "id": 125019,
      "node_id": "MDQ6VXNlcjEyNTAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/125019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssadler",
      "html_url": "https://github.com/ssadler",
      "followers_url": "https://api.github.com/users/ssadler/followers",
      "following_url": "https://api.github.com/users/ssadler/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssadler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssadler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssadler/subscriptions",
      "organizations_url": "https://api.github.com/users/ssadler/orgs",
      "repos_url": "https://api.github.com/users/ssadler/repos",
      "events_url": "https://api.github.com/users/ssadler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssadler/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-07T21:50:09Z",
    "updated_at": "2023-04-07T22:08:34Z",
    "author_association": "NONE",
    "body": "I have an example where it's not catching a revert but it's not a library, instead it's an abstract contract.\r\n\r\nThe wrapper trick above works also in this case.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1500674835/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1599684113",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4405#issuecomment-1599684113",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4405",
    "id": 1599684113,
    "node_id": "IC_kwDOGBlvNc5fWT4R",
    "user": {
      "login": "highskore",
      "id": 80688826,
      "node_id": "MDQ6VXNlcjgwNjg4ODI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/80688826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/highskore",
      "html_url": "https://github.com/highskore",
      "followers_url": "https://api.github.com/users/highskore/followers",
      "following_url": "https://api.github.com/users/highskore/following{/other_user}",
      "gists_url": "https://api.github.com/users/highskore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/highskore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/highskore/subscriptions",
      "organizations_url": "https://api.github.com/users/highskore/orgs",
      "repos_url": "https://api.github.com/users/highskore/repos",
      "events_url": "https://api.github.com/users/highskore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/highskore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-20T22:54:46Z",
    "updated_at": "2023-06-20T22:54:46Z",
    "author_association": "NONE",
    "body": "> I have an example where it's not catching a revert but it's not a library, instead it's an abstract contract.\r\n> \r\n> The wrapper trick above works also in this case.\r\n\r\nJust faced a similar issue with an abstract contract and I managed to solve it using this method",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1599684113/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
