{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3497",
  "id": 1409931081,
  "node_id": "I_kwDOGBlvNc5UCddJ",
  "number": 3497,
  "title": "`forge coverage` considers branches partially covered if they have CALL",
  "user": {
    "login": "adhusson",
    "id": 2977,
    "node_id": "MDQ6VXNlcjI5Nzc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2977?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/adhusson",
    "html_url": "https://github.com/adhusson",
    "followers_url": "https://api.github.com/users/adhusson/followers",
    "following_url": "https://api.github.com/users/adhusson/following{/other_user}",
    "gists_url": "https://api.github.com/users/adhusson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/adhusson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/adhusson/subscriptions",
    "organizations_url": "https://api.github.com/users/adhusson/orgs",
    "repos_url": "https://api.github.com/users/adhusson/repos",
    "events_url": "https://api.github.com/users/adhusson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/adhusson/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 4233058229,
      "node_id": "LA_kwDOGBlvNc78T1e1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-coverage",
      "name": "Cmd-forge-coverage",
      "color": "006B75",
      "default": false,
      "description": "Command: forge coverage"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 16,
  "created_at": "2022-10-14T22:29:28Z",
  "updated_at": "2023-02-15T04:54:57Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (1da2b65 2022-10-14T00:09:33.152136Z)\n\n### What command(s) is the bug in?\n\nforge coverage\n\n### Operating System\n\n_No response_\n\n### Describe the bug\n\nI may be missing something, but I'm surprised by this:\r\n\r\n<img width=\"318\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2977/195952888-896e20d6-cadc-47ee-b14b-3af439dea3ce.png\">\r\n\r\nwhere the tests are\r\n\r\n```solidity\r\n    function test_true() public {\r\n      counter.go(true);\r\n    }\r\n    function test_false() public {\r\n      counter.go(false);\r\n    }\r\n```\r\n\r\nin summary form:\r\n```\r\n+-----------------+---------------+---------------+--------------+---------------+\r\n| File            | % Lines       | % Statements  | % Branches   | % Funcs       |\r\n+================================================================================+\r\n| src/Counter.sol | 100.00% (8/8) | 100.00% (6/6) | 75.00% (3/4) | 100.00% (2/2) |\r\n|-----------------+---------------+---------------+--------------+---------------|\r\n| Total           | 100.00% (8/8) | 100.00% (6/6) | 75.00% (3/4) | 100.00% (2/2) |\r\n+-----------------+---------------+---------------+--------------+---------------+\r\n```\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1301581406",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3497#issuecomment-1301581406",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497",
    "id": 1301581406,
    "node_id": "IC_kwDOGBlvNc5NlI5e",
    "user": {
      "login": "KittyFu307",
      "id": 61280608,
      "node_id": "MDQ6VXNlcjYxMjgwNjA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/61280608?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KittyFu307",
      "html_url": "https://github.com/KittyFu307",
      "followers_url": "https://api.github.com/users/KittyFu307/followers",
      "following_url": "https://api.github.com/users/KittyFu307/following{/other_user}",
      "gists_url": "https://api.github.com/users/KittyFu307/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KittyFu307/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KittyFu307/subscriptions",
      "organizations_url": "https://api.github.com/users/KittyFu307/orgs",
      "repos_url": "https://api.github.com/users/KittyFu307/repos",
      "events_url": "https://api.github.com/users/KittyFu307/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KittyFu307/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-03T02:44:05Z",
    "updated_at": "2022-11-03T07:24:17Z",
    "author_association": "NONE",
    "body": "I have the same question \r\n Hi @rkrasiuk  Is there any solution for that?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1301581406/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1301729972",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3497#issuecomment-1301729972",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497",
    "id": 1301729972,
    "node_id": "IC_kwDOGBlvNc5NltK0",
    "user": {
      "login": "rkrasiuk",
      "id": 25429261,
      "node_id": "MDQ6VXNlcjI1NDI5MjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25429261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkrasiuk",
      "html_url": "https://github.com/rkrasiuk",
      "followers_url": "https://api.github.com/users/rkrasiuk/followers",
      "following_url": "https://api.github.com/users/rkrasiuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkrasiuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkrasiuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkrasiuk/subscriptions",
      "organizations_url": "https://api.github.com/users/rkrasiuk/orgs",
      "repos_url": "https://api.github.com/users/rkrasiuk/repos",
      "events_url": "https://api.github.com/users/rkrasiuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkrasiuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-03T07:26:53Z",
    "updated_at": "2022-11-03T07:26:53Z",
    "author_association": "COLLABORATOR",
    "body": "@onbjerg could you take a look pls? ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1301729972/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1304793692",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3497#issuecomment-1304793692",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497",
    "id": 1304793692,
    "node_id": "IC_kwDOGBlvNc5NxZJc",
    "user": {
      "login": "KittyFu307",
      "id": 61280608,
      "node_id": "MDQ6VXNlcjYxMjgwNjA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/61280608?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KittyFu307",
      "html_url": "https://github.com/KittyFu307",
      "followers_url": "https://api.github.com/users/KittyFu307/followers",
      "following_url": "https://api.github.com/users/KittyFu307/following{/other_user}",
      "gists_url": "https://api.github.com/users/KittyFu307/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KittyFu307/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KittyFu307/subscriptions",
      "organizations_url": "https://api.github.com/users/KittyFu307/orgs",
      "repos_url": "https://api.github.com/users/KittyFu307/repos",
      "events_url": "https://api.github.com/users/KittyFu307/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KittyFu307/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-06T12:45:08Z",
    "updated_at": "2022-11-06T12:45:08Z",
    "author_association": "NONE",
    "body": "~hello @rkrasiuk any updates for that?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1304793692/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1359324227",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3497#issuecomment-1359324227",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497",
    "id": 1359324227,
    "node_id": "IC_kwDOGBlvNc5RBaRD",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-20T13:06:15Z",
    "updated_at": "2022-12-20T13:06:15Z",
    "author_association": "MEMBER",
    "body": "Sorry for the late response. Not sure exactly what the issue is here, what was the exact expected behavior and how does this differ? This looks like a partially covered given you pass true and the if branch is hit but not the else? ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1359324227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1360483555",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3497#issuecomment-1360483555",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497",
    "id": 1360483555,
    "node_id": "IC_kwDOGBlvNc5RF1Tj",
    "user": {
      "login": "adhusson",
      "id": 2977,
      "node_id": "MDQ6VXNlcjI5Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2977?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adhusson",
      "html_url": "https://github.com/adhusson",
      "followers_url": "https://api.github.com/users/adhusson/followers",
      "following_url": "https://api.github.com/users/adhusson/following{/other_user}",
      "gists_url": "https://api.github.com/users/adhusson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adhusson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adhusson/subscriptions",
      "organizations_url": "https://api.github.com/users/adhusson/orgs",
      "repos_url": "https://api.github.com/users/adhusson/repos",
      "events_url": "https://api.github.com/users/adhusson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adhusson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-20T23:42:07Z",
    "updated_at": "2022-12-20T23:42:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Both branches are taken (the tests call `go(false)` and `go(true)`).  The first if/else is marked as partially covered despite both branches being hit. The two `if/else` are the same, except that the first calls `this.fn()` and the second calls `fn()` (`fn` is a noop function).\r\n\r\nLooking back, maybe `fn()` is compiled away, `this.fn()` is not, and the possibility of a non-tested revert inside `this.fn()` means coverage is not complete? Surprising, anyway.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1360483555/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1361048088",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3497#issuecomment-1361048088",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497",
    "id": 1361048088,
    "node_id": "IC_kwDOGBlvNc5RH_IY",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-21T09:12:51Z",
    "updated_at": "2022-12-21T09:12:51Z",
    "author_association": "MEMBER",
    "body": "> Looking back, maybe fn() is compiled away, this.fn() is not, and the possibility of a non-tested revert inside this.fn() means coverage is not complete?\n\nSounds right. Can you add a extra test for this.fn reverting, just to test the hypothesis?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1361048088/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1363321871",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3497#issuecomment-1363321871",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497",
    "id": 1363321871,
    "node_id": "IC_kwDOGBlvNc5RQqQP",
    "user": {
      "login": "adhusson",
      "id": 2977,
      "node_id": "MDQ6VXNlcjI5Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2977?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adhusson",
      "html_url": "https://github.com/adhusson",
      "followers_url": "https://api.github.com/users/adhusson/followers",
      "following_url": "https://api.github.com/users/adhusson/following{/other_user}",
      "gists_url": "https://api.github.com/users/adhusson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adhusson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adhusson/subscriptions",
      "organizations_url": "https://api.github.com/users/adhusson/orgs",
      "repos_url": "https://api.github.com/users/adhusson/repos",
      "events_url": "https://api.github.com/users/adhusson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adhusson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-22T20:38:50Z",
    "updated_at": "2022-12-22T20:38:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Confirmed. The `try/catch` will not display coverage info, btw.\r\n\r\nI don't know if the issue can be totally closed. Letting errors bubble up are a normal part of writing contracts. Maybe a `// forgecov: ignore-next-line-revert`?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1363321871/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1418406452",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3497#issuecomment-1418406452",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497",
    "id": 1418406452,
    "node_id": "IC_kwDOGBlvNc5Uiyo0",
    "user": {
      "login": "frontier159",
      "id": 103474701,
      "node_id": "U_kgDOBirmDQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/103474701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frontier159",
      "html_url": "https://github.com/frontier159",
      "followers_url": "https://api.github.com/users/frontier159/followers",
      "following_url": "https://api.github.com/users/frontier159/following{/other_user}",
      "gists_url": "https://api.github.com/users/frontier159/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frontier159/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frontier159/subscriptions",
      "organizations_url": "https://api.github.com/users/frontier159/orgs",
      "repos_url": "https://api.github.com/users/frontier159/repos",
      "events_url": "https://api.github.com/users/frontier159/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frontier159/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-06T02:25:07Z",
    "updated_at": "2023-02-06T02:25:07Z",
    "author_association": "NONE",
    "body": "Any update on where this stands @gakonst ? \r\n\r\nCurrently a blocker for me on fully replacing HH as the coverage here isn't accurate ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1418406452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1421670252",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3497#issuecomment-1421670252",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497",
    "id": 1421670252,
    "node_id": "IC_kwDOGBlvNc5UvPds",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-08T00:02:06Z",
    "updated_at": "2023-02-08T00:02:06Z",
    "author_association": "COLLABORATOR",
    "body": "Is the issue here that external calls contain \"hidden\" branches, because you also need to test the code path where the call reverts, which is only in the bytecode and not in the solidity itself? If so, I think we can close this and just document that in the book",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1421670252/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1422870935",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3497#issuecomment-1422870935",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497",
    "id": 1422870935,
    "node_id": "IC_kwDOGBlvNc5Uz0mX",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-08T16:11:26Z",
    "updated_at": "2023-02-09T09:26:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "**Update**: see my two comments below - the problem reported in this comment is a different bug, which I reported in #4310.\r\n\r\n---\r\n\r\n> Is the issue here that external calls contain \"hidden\" branches, because you also need to test the code path where the call reverts, which is only in the bytecode and not in the solidity itself?\r\n\r\nNo, I don't think so, @mds1. Let me share the case that I bumped into, which I shared recently in #3600 (a potentially related issue):\r\n\r\n<img width=\"1196\" alt=\"coverage-line-207\" src=\"https://user-images.githubusercontent.com/8782666/217584366-ef2526b2-bad4-4a2d-965e-0324b1d2271c.png\">\r\n\r\nLine 207 appears as partially covered, but I'm absolutely certain (I tested with console logs) that the if statement is covered properly by my tests.\r\n\r\nThis is the definition of the `getStatus` function:\r\n\r\n```solidity\r\nfunction getStatus(\r\n    uint256 streamId\r\n) public view virtual override returns (Lockup.Status status) {\r\n    status = _streams[streamId].status;\r\n}\r\n```\r\n\r\nThere's no potential revert in this function.\r\n\r\nSomehow the mere existence of the calls to the `_isApprovedOrOwner` and the `_withdraw` functions makes line 207 to not appear as fully covered. But this is wrong and, FWIW, I also have extensive testing for the full gamut of possible reverts in these latter functions (the proof is in the coverage report itself, which shows these other functions as fully covered).",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1422870935/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1422927763",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3497#issuecomment-1422927763",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497",
    "id": 1422927763,
    "node_id": "IC_kwDOGBlvNc5U0CeT",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-08T16:48:22Z",
    "updated_at": "2023-02-08T19:25:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "**Update**: I have managed to get to the bottom of the incorrect report I was getting, and it turns out it was unrelated to @adhusson's issue (though it definitely looked as if the situations were related):\r\n\r\nhttps://github.com/foundry-rs/foundry/issues/4310",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1422927763/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1423220193",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3497#issuecomment-1423220193",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497",
    "id": 1423220193,
    "node_id": "IC_kwDOGBlvNc5U1J3h",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-08T20:48:20Z",
    "updated_at": "2023-02-08T20:48:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Separately, I have managed to reproduce the issue reported by @adhusson. Take the following code (hidden by default for brevity reasons, click the toggle below to collapse it):\r\n\r\n<details>\r\n<summary>Click me to toggle the contracts</summary>\r\n\r\n```solidity\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ncontract Bar {\r\n    mapping(address => bool) internal _listed;\r\n\r\n    function isListed(address asset) external view returns (bool) {\r\n        return _listed[asset];\r\n    }\r\n\r\n    function setListed(address asset, bool listed) external {\r\n        _listed[asset] = listed;\r\n    }\r\n}\r\n\r\ncontract Foo {\r\n    Bar public bar;\r\n\r\n    constructor(Bar bar_) {\r\n        bar = bar_;\r\n    }\r\n\r\n    function maxFlashLoan(address asset) external view returns (uint256 amount) {\r\n        if (bar.isListed(asset)) {\r\n            amount = IERC20(asset).balanceOf(address(this));\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n</details>\r\n\r\nAnd the following tests (again, hidden for brevity):\r\n\r\n<details>\r\n<summary>Click me to toggle the tests</summary>\r\n\r\n```solidity\r\nimport { ERC20 } from \"@openzeppelin/token/ERC20/ERC20.sol\";\r\nimport { Test } from \"forge-std/Test.sol\";\r\n\r\nimport { Bar, Foo } from \"../src/Foo.sol\";\r\n\r\ncontract FooTest is PRBTest {\r\n    Bar internal bar = new Bar();\r\n    Foo internal foo = new Foo(bar);\r\n    ERC20 internal token = new ERC20(\"Token\", \"TKN\");\r\n\r\n    function test_MaxFlashLoan_NotListed() external {\r\n        bar.setListed(address(token), false);\r\n        address asset = address(token);\r\n        uint256 actualAmount = foo.maxFlashLoan(asset);\r\n        uint256 expectedAmount = 0;\r\n        assertEq(actualAmount, expectedAmount);\r\n    }\r\n\r\n    function test_MaxFlashLoan_Listed() external {\r\n        bar.setListed(address(token), true);\r\n        address asset = address(token);\r\n        uint256 actualAmount = foo.maxFlashLoan(asset);\r\n        uint256 expectedAmount = 0;\r\n        assertEq(actualAmount, expectedAmount);\r\n    }\r\n}\r\n\r\n```\r\n\r\n</details>\r\n\r\nNow, run `forge coverage`. You will get this report:\r\n\r\n```text\r\n| File        | % Lines       | % Statements  | % Branches   | % Funcs       |\r\n|-------------|---------------|---------------|--------------|---------------|\r\n| src/Foo.sol | 100.00% (4/4) | 100.00% (4/4) | 50.00% (1/2) | 100.00% (3/3) |\r\n| Total       | 100.00% (4/4) | 100.00% (4/4) | 50.00% (1/2) | 100.00% (3/3) |\r\n```\r\n\r\nNotice that the branch coverage is 50% instead of 100%, even if the tests cover both possible branches of the if statement `bar.isListed(asset)`.\r\n\r\nIs this intended? Does Forge consider that there may be a revert in `balanceOf` that technically the user did not handle? If the answer is yes, it would certainly be great to have a way to ignore this potential revent, e.g. with an annotation like the one suggested by @adlerjohn above: `// forgecov: ignore-next-line-revert`.\r\n\r\nFinally, I should note that this seems to happen only for calls made within if statements. Calls made outside if statements are not reported as having partial coverage.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1423220193/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1428741385",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3497#issuecomment-1428741385",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497",
    "id": 1428741385,
    "node_id": "IC_kwDOGBlvNc5VKN0J",
    "user": {
      "login": "dansimpson",
      "id": 23339,
      "node_id": "MDQ6VXNlcjIzMzM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/23339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dansimpson",
      "html_url": "https://github.com/dansimpson",
      "followers_url": "https://api.github.com/users/dansimpson/followers",
      "following_url": "https://api.github.com/users/dansimpson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dansimpson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dansimpson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dansimpson/subscriptions",
      "organizations_url": "https://api.github.com/users/dansimpson/orgs",
      "repos_url": "https://api.github.com/users/dansimpson/repos",
      "events_url": "https://api.github.com/users/dansimpson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dansimpson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-13T21:54:28Z",
    "updated_at": "2023-02-13T21:54:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am also experiencing this issue or a similar issue. Branches are not covered, even though all lines within the branch have hits.\r\n\r\n```\r\n| src/finance/MyContract.sol        | 100.00% (160/160) | 100.00% (166/166) | 79.35% (73/92) | 100.00% (51/51) |\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1428741385/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1429212685",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3497#issuecomment-1429212685",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497",
    "id": 1429212685,
    "node_id": "IC_kwDOGBlvNc5VMA4N",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-14T06:50:56Z",
    "updated_at": "2023-02-14T06:50:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dansimpson thanks for the report. Could you post the code you are trying to cover?\n\nThe problem you are experiencing might be unrelated to this GitHub issue (see this [comment](https://github.com/foundry-rs/foundry/issues/1961#issuecomment-1427113699)).",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1429212685/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1430590733",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3497#issuecomment-1430590733",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497",
    "id": 1430590733,
    "node_id": "IC_kwDOGBlvNc5VRRUN",
    "user": {
      "login": "dansimpson",
      "id": 23339,
      "node_id": "MDQ6VXNlcjIzMzM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/23339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dansimpson",
      "html_url": "https://github.com/dansimpson",
      "followers_url": "https://api.github.com/users/dansimpson/followers",
      "following_url": "https://api.github.com/users/dansimpson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dansimpson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dansimpson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dansimpson/subscriptions",
      "organizations_url": "https://api.github.com/users/dansimpson/orgs",
      "repos_url": "https://api.github.com/users/dansimpson/repos",
      "events_url": "https://api.github.com/users/dansimpson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dansimpson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-15T00:44:21Z",
    "updated_at": "2023-02-15T00:44:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@PaulRBerg thanks for compiling all of that. After further review I found I was simply confused by the reporting. I had a nested require statement that wasn't being tested for a revert. Coverage reported parent branches were not covered, which I found very confusing. From a DX perspective, I think the report should show 0 hits on branches that are not tested, but not their ancestors. I became fixated on the top level branch, knowing that I had tests covering it.\r\n\r\nI started working on the coverage from the bottom up, and figured it out.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1430590733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1430753932",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3497#issuecomment-1430753932",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3497",
    "id": 1430753932,
    "node_id": "IC_kwDOGBlvNc5VR5KM",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-15T04:54:57Z",
    "updated_at": "2023-02-15T04:54:57Z",
    "author_association": "MEMBER",
    "body": ">  From a DX perspective, I think the report should show 0 hits on branches that are not tested, but not their ancestors.\r\n\r\nUnderstood. This needs some thinking on how exactly to implement, but is an interesting point.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1430753932/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
