{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4927",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4927/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4927/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4927/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4927",
  "id": 1706934337,
  "node_id": "I_kwDOGBlvNc5lvcBB",
  "number": 4927,
  "title": "currentPrank currentBroadcast, ...",
  "user": {
    "login": "wighawag",
    "id": 790580,
    "node_id": "MDQ6VXNlcjc5MDU4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/790580?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wighawag",
    "html_url": "https://github.com/wighawag",
    "followers_url": "https://api.github.com/users/wighawag/followers",
    "following_url": "https://api.github.com/users/wighawag/following{/other_user}",
    "gists_url": "https://api.github.com/users/wighawag/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wighawag/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wighawag/subscriptions",
    "organizations_url": "https://api.github.com/users/wighawag/orgs",
    "repos_url": "https://api.github.com/users/wighawag/repos",
    "events_url": "https://api.github.com/users/wighawag/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wighawag/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-05-12T05:07:46Z",
  "updated_at": "2023-05-12T16:57:09Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nCurrently `prank`, `startPrank`, `stopPrank`  and the `broadcast` equivalent operate on a hidden state and code for script and test cannot know whether a prank and broadcast is active.\r\n\r\nThis prevents inner call to for example disable a prank as they cannot know whether they should reenable it.\r\n\r\nIt would be great if we could get the current prank status address, same for brroadcast\r\n\r\nsomething like\r\n\r\n```\r\nfunction currentPrank() external view returns(bool active, address account);\r\nfunction currentBroadcast() external view returns(bool active, address sender, address txOrigin);\r\n```\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4927/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 1,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4927/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1546029044",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4927#issuecomment-1546029044",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4927",
    "id": 1546029044,
    "node_id": "IC_kwDOGBlvNc5cJof0",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T16:57:08Z",
    "updated_at": "2023-05-12T16:57:08Z",
    "author_association": "COLLABORATOR",
    "body": "https://github.com/foundry-rs/foundry/pull/4884 is implementing a cheat of `function readPrank() external returns (bool isPrankActive, address msgSender, address txOrigin)`\r\n\r\nFor now the cheat will be disabled in scripts, but ultimately it should support both script and tests, and return the broadcast info when in a scripting mode and prank info in a testing mode. I don't think separate cheats is the right UX since you can run a script file in a test, which results in broadcasts behaving like pranks (so we might want to rename the cheat once it supports both). Open to ideas if you want to move the convo to that PR",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1546029044/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
