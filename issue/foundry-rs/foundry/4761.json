{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4761",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4761/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4761/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4761/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4761",
  "id": 1673108575,
  "node_id": "I_kwDOGBlvNc5juZxf",
  "number": 4761,
  "title": "createForkStepAccount: create a fork with an address replaced",
  "user": {
    "login": "joaquinlpereyra",
    "id": 3151940,
    "node_id": "MDQ6VXNlcjMxNTE5NDA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3151940?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/joaquinlpereyra",
    "html_url": "https://github.com/joaquinlpereyra",
    "followers_url": "https://api.github.com/users/joaquinlpereyra/followers",
    "following_url": "https://api.github.com/users/joaquinlpereyra/following{/other_user}",
    "gists_url": "https://api.github.com/users/joaquinlpereyra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/joaquinlpereyra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/joaquinlpereyra/subscriptions",
    "organizations_url": "https://api.github.com/users/joaquinlpereyra/orgs",
    "repos_url": "https://api.github.com/users/joaquinlpereyra/repos",
    "events_url": "https://api.github.com/users/joaquinlpereyra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/joaquinlpereyra/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-04-18T13:10:56Z",
  "updated_at": "2023-04-20T11:12:43Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nAs an auditor, the contract-under-test deployment is not under my control. Nor are all of the contracts-that-interact with my contract-under-test. I do have access to their source code. \r\n\r\nOne common idea when testing is to try to test different configurations which are set on contract initialization. One of the simplest way I can think to simplify these tests is to create a new instance of the contract-under-test (either via `new()` or using minimal proxies depending on the context) and then perform my tests. \r\n\r\nThe problem is that when you create a new instance of the contract, you of course get a new address. This makes all contracts that interact with your contract-under-test interact with the old instance of the test, which is not desired. \r\n\r\nAs such, I would like to have the possibility to `fork` to a new state where the `AccountInfo` of the `address originalAddr` is replaced by the `AccountInfo` of the `address newAddr`. In this way, all contracts that point to `originalAddr` would still work and I would be able to programatically test different configurations of the contracts under test.\r\n\r\nThis cannot be done by forking from an state where the contract does not exist, as it is possible that contracts that interact with my contract under test do not exist at that point either. \r\n\r\nThis can also not be done by `etch`, as `etch` only modifies the `code` and not the storage.\r\n\r\nThis can not be done by `StdStorage`, as it requires specific keys. I want to wipe all of the storage.\r\n\r\nOne of the most radical workarounds I thought of was using `etch` to replace the contract code with a single `selfdestruct()` call; but this does not work as the actual deletion is reserved for the end of the transaction... and when testing we are always inside the same transaction; so this does not work either.\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4761/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4761/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1513136794",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4761#issuecomment-1513136794",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4761",
    "id": 1513136794,
    "node_id": "IC_kwDOGBlvNc5aMKKa",
    "user": {
      "login": "joaquinlpereyra",
      "id": 3151940,
      "node_id": "MDQ6VXNlcjMxNTE5NDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3151940?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joaquinlpereyra",
      "html_url": "https://github.com/joaquinlpereyra",
      "followers_url": "https://api.github.com/users/joaquinlpereyra/followers",
      "following_url": "https://api.github.com/users/joaquinlpereyra/following{/other_user}",
      "gists_url": "https://api.github.com/users/joaquinlpereyra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joaquinlpereyra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joaquinlpereyra/subscriptions",
      "organizations_url": "https://api.github.com/users/joaquinlpereyra/orgs",
      "repos_url": "https://api.github.com/users/joaquinlpereyra/repos",
      "events_url": "https://api.github.com/users/joaquinlpereyra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joaquinlpereyra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-18T13:18:53Z",
    "updated_at": "2023-04-18T13:18:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have edited for clarity, as `constructors()` are annoying in this case. The idea would be to be able to set an already-existing address to an arbitrary new account. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1513136794/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
