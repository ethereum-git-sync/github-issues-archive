{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/286",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/286/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/286/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/286/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/286",
  "id": 1087006848,
  "node_id": "I_kwDOGBlvNc5AymiA",
  "number": 286,
  "title": "feat: `vm.assume` cheat code for discarding bad fuzz inputs",
  "user": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-12-22T16:48:57Z",
  "updated_at": "2022-01-06T03:40:31Z",
  "closed_at": "2022-01-06T03:40:31Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "Named after Hypothesis' [`assume`](https://hypothesis.readthedocs.io/en/latest/details.html#making-assumptions), this cheat code would let you mark fuzzer inputs as invalid. Invalid fuzz runs are not counted toward the number of executed runs, so new inputs would be generated and the test re-ran\r\n\r\nUse cases:\r\n- Ensure conditions on fuzzer inputs are met, such as \"don't test the zero address\" or \"make sure `x + y < z`\". \r\n- Bound inputs to a range: For this use case it's likely much faster to just [manually](https://github.com/Rari-Capital/solmate/blob/ce02b34f83e756852d1b1a036223b050e284ab29/src/test/utils/DSTestPlus.sol#L102-L121) wrap values into the desired range. However, if foundry ever supports generating fuzz statistics / saving fuzz inputs, foundry would not know about manual bounding so `assume` may become preferable to ensure more useful statistics/outputs\r\n\r\nDepending on the condition you pass in, it might take a long time to get enough valid fuzz runs for your test to complete, so ideally this method can be \"smart\" and learn from failed assumptions similar to what Hypothesis does. Hypothesis' `assume` method uses an \"adaptive exploration [strategy](https://hypothesis.readthedocs.io/en/latest/details.html#how-good-is-assume)\", to do this, and I believe the implementation of that strategy is [here](https://github.com/HypothesisWorks/hypothesis/blob/09e5035edbb68fafb1012c0e910da31d1bc3b370/hypothesis-python/src/hypothesis/internal/conjecture/shrinker.py#L959-L999)\r\n\r\n```solidity\r\ninterface Vm {\r\n  // If the input is false, mark this fuzz run as invalid and generate a new set if inputs\r\n  function assume(bool) external;\r\n}\r\n```",
  "closed_by": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/286/reactions",
    "total_count": 4,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 4,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/286/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1000250868",
    "html_url": "https://github.com/foundry-rs/foundry/issues/286#issuecomment-1000250868",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/286",
    "id": 1000250868,
    "node_id": "IC_kwDOGBlvNc47np30",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-23T11:49:36Z",
    "updated_at": "2021-12-23T11:49:36Z",
    "author_association": "MEMBER",
    "body": "`prop_assume!` is part of the crate we use (proptest), so it might be a simple matter of calling it when the `vm.assume` call is made.\r\n\r\nNeed to think about how to implement this, because the cheatcode logic in `cheatcode_handler.rs` is very separate from the fuzzer logic in `fuzz.rs` in `evm-adapters`..\r\n\r\nExtra info:\r\n* https://github.com/AltSysrq/proptest/blob/bc2d867a7cd06060e0b565b72fce1d94cc2fe943/proptest/src/sugar.rs#L250-L261\r\n* https://github.com/AltSysrq/proptest/blob/master/book/src/proptest/tutorial/filtering.md",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1000250868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006260146",
    "html_url": "https://github.com/foundry-rs/foundry/issues/286#issuecomment-1006260146",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/286",
    "id": 1006260146,
    "node_id": "IC_kwDOGBlvNc47-k-y",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-06T03:40:30Z",
    "updated_at": "2022-01-06T03:40:30Z",
    "author_association": "COLLABORATOR",
    "body": "closing in favor of https://github.com/gakonst/foundry/issues/387 to consolidate all fuzzer discussion",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006260146/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
