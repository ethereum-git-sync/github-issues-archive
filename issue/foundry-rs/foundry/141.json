{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/141",
  "id": 1056339886,
  "node_id": "I_kwDOGBlvNc4-9neu",
  "number": 141,
  "title": "Lazily iterate over tests instead of collecting",
  "user": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394235,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjM1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0052CC",
      "default": true,
      "description": "Good for newcomers"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 39,
  "created_at": "2021-11-17T16:36:59Z",
  "updated_at": "2022-02-07T13:53:45Z",
  "closed_at": "2022-02-07T13:53:39Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Instead of collecting [here](https://github.com/gakonst/foundry/blob/master/forge/src/runner.rs#L196-L211) and [here](https://github.com/gakonst/foundry/blob/0785187319a9cdbc070ad40040a360b2e23ddaf0/forge/src/multi_runner.rs#L151-L157), itâ€™d be nice if we could have an iterator which we can stream over\r\n\r\nThat'd allow us to then iterate in parallel [here](https://github.com/gakonst/foundry/blob/master/cli/src/cmd/test.rs#L189) for nicer UX & speed",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/141/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/998903095",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-998903095",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 998903095,
    "node_id": "IC_kwDOGBlvNc47ig03",
    "user": {
      "login": "tansawit",
      "id": 12265853,
      "node_id": "MDQ6VXNlcjEyMjY1ODUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12265853?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tansawit",
      "html_url": "https://github.com/tansawit",
      "followers_url": "https://api.github.com/users/tansawit/followers",
      "following_url": "https://api.github.com/users/tansawit/following{/other_user}",
      "gists_url": "https://api.github.com/users/tansawit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tansawit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tansawit/subscriptions",
      "organizations_url": "https://api.github.com/users/tansawit/orgs",
      "repos_url": "https://api.github.com/users/tansawit/repos",
      "events_url": "https://api.github.com/users/tansawit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tansawit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-21T16:05:11Z",
    "updated_at": "2021-12-21T16:06:51Z",
    "author_association": "NONE",
    "body": "Is this still applicable? The codebase seemed to have changed a lot since the issue was open (e.g. `dapp.rs` doesn't exist anymore).",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/998903095/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006117295",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1006117295",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1006117295,
    "node_id": "IC_kwDOGBlvNc47-CGv",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-05T22:09:39Z",
    "updated_at": "2022-01-05T22:09:39Z",
    "author_association": "MEMBER",
    "body": "I've updated the links, thanks for flagging.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006117295/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006299397",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1006299397",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1006299397,
    "node_id": "IC_kwDOGBlvNc47-ukF",
    "user": {
      "login": "lattejed",
      "id": 388048,
      "node_id": "MDQ6VXNlcjM4ODA0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/388048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lattejed",
      "html_url": "https://github.com/lattejed",
      "followers_url": "https://api.github.com/users/lattejed/followers",
      "following_url": "https://api.github.com/users/lattejed/following{/other_user}",
      "gists_url": "https://api.github.com/users/lattejed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lattejed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lattejed/subscriptions",
      "organizations_url": "https://api.github.com/users/lattejed/orgs",
      "repos_url": "https://api.github.com/users/lattejed/repos",
      "events_url": "https://api.github.com/users/lattejed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lattejed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-06T05:38:02Z",
    "updated_at": "2022-01-06T05:38:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "If no one is on this, I'll pick it up ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006299397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006314267",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1006314267",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1006314267,
    "node_id": "IC_kwDOGBlvNc47-yMb",
    "user": {
      "login": "CalebEverett",
      "id": 8947267,
      "node_id": "MDQ6VXNlcjg5NDcyNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8947267?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CalebEverett",
      "html_url": "https://github.com/CalebEverett",
      "followers_url": "https://api.github.com/users/CalebEverett/followers",
      "following_url": "https://api.github.com/users/CalebEverett/following{/other_user}",
      "gists_url": "https://api.github.com/users/CalebEverett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CalebEverett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CalebEverett/subscriptions",
      "organizations_url": "https://api.github.com/users/CalebEverett/orgs",
      "repos_url": "https://api.github.com/users/CalebEverett/repos",
      "events_url": "https://api.github.com/users/CalebEverett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CalebEverett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-06T06:18:45Z",
    "updated_at": "2022-01-06T06:23:26Z",
    "author_association": "NONE",
    "body": "I was taking a look at this as well and was wondering what the right parallelization strategy was with regard to the `evm`. Does it make sense to try to just use a single one or will that limit the potential speedup and would it be better to have multiple, potentially one per `ContractRunner` or even multiple within a `ContractRunner` since the state gets reset before each test runs anyway. That seemed like it would dictate whether to parellilize the `ContractRunner` tests or just the `ContractRunner`s.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006314267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006317727",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1006317727",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1006317727,
    "node_id": "IC_kwDOGBlvNc47-zCf",
    "user": {
      "login": "lattejed",
      "id": 388048,
      "node_id": "MDQ6VXNlcjM4ODA0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/388048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lattejed",
      "html_url": "https://github.com/lattejed",
      "followers_url": "https://api.github.com/users/lattejed/followers",
      "following_url": "https://api.github.com/users/lattejed/following{/other_user}",
      "gists_url": "https://api.github.com/users/lattejed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lattejed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lattejed/subscriptions",
      "organizations_url": "https://api.github.com/users/lattejed/orgs",
      "repos_url": "https://api.github.com/users/lattejed/repos",
      "events_url": "https://api.github.com/users/lattejed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lattejed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-06T06:28:08Z",
    "updated_at": "2022-01-06T06:28:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@CalebEverett I need to look at it in depth before I can comment. Did you want to pick this one up? I don't mind either way. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006317727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006319713",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1006319713",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1006319713,
    "node_id": "IC_kwDOGBlvNc47-zhh",
    "user": {
      "login": "CalebEverett",
      "id": 8947267,
      "node_id": "MDQ6VXNlcjg5NDcyNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8947267?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CalebEverett",
      "html_url": "https://github.com/CalebEverett",
      "followers_url": "https://api.github.com/users/CalebEverett/followers",
      "following_url": "https://api.github.com/users/CalebEverett/following{/other_user}",
      "gists_url": "https://api.github.com/users/CalebEverett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CalebEverett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CalebEverett/subscriptions",
      "organizations_url": "https://api.github.com/users/CalebEverett/orgs",
      "repos_url": "https://api.github.com/users/CalebEverett/repos",
      "events_url": "https://api.github.com/users/CalebEverett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CalebEverett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-06T06:33:47Z",
    "updated_at": "2022-01-06T06:33:47Z",
    "author_association": "NONE",
    "body": "@lattejed I'd be up for trying to figure it out, but it will probably take me longer to get all the way there than it would you. If you take a look at it and think it is something quick for you, in the interest of helping the repo, by all means take it. I'd be curious on the solution. But otherwise, happy to keep working on it.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006319713/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006320461",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1006320461",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1006320461,
    "node_id": "IC_kwDOGBlvNc47-ztN",
    "user": {
      "login": "lattejed",
      "id": 388048,
      "node_id": "MDQ6VXNlcjM4ODA0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/388048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lattejed",
      "html_url": "https://github.com/lattejed",
      "followers_url": "https://api.github.com/users/lattejed/followers",
      "following_url": "https://api.github.com/users/lattejed/following{/other_user}",
      "gists_url": "https://api.github.com/users/lattejed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lattejed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lattejed/subscriptions",
      "organizations_url": "https://api.github.com/users/lattejed/orgs",
      "repos_url": "https://api.github.com/users/lattejed/repos",
      "events_url": "https://api.github.com/users/lattejed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lattejed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-06T06:35:54Z",
    "updated_at": "2022-01-06T06:35:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@CalebEverett cool, I'll take a look. Worth discussing here regardless.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006320461/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006479686",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1006479686",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1006479686,
    "node_id": "IC_kwDOGBlvNc47_alG",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-06T11:02:00Z",
    "updated_at": "2022-01-06T11:04:13Z",
    "author_association": "MEMBER",
    "body": "I think we can start by naively creating a factory function `new_evm(<..args>) -> impl Evm` (I think Clone'ing the EVM might not be an option) which gets passed in the runner/multi_runner.rs and gets called in each test. \r\n\r\nWe are already clone'ing and passing the init state for each test, so I think we have most of the state related components set up.\r\n\r\nHighest performance gain will be by parallelizing the [execution of the fuzz tests per contract inside runner.rs](https://github.com/gakonst/foundry/blob/master/forge/src/runner.rs#L205-L212), so I'd start from there (vs trying to parallelize the `runner.run_test` calls inside multi_runner)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006479686/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006486793",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1006486793",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1006486793,
    "node_id": "IC_kwDOGBlvNc47_cUJ",
    "user": {
      "login": "lattejed",
      "id": 388048,
      "node_id": "MDQ6VXNlcjM4ODA0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/388048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lattejed",
      "html_url": "https://github.com/lattejed",
      "followers_url": "https://api.github.com/users/lattejed/followers",
      "following_url": "https://api.github.com/users/lattejed/following{/other_user}",
      "gists_url": "https://api.github.com/users/lattejed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lattejed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lattejed/subscriptions",
      "organizations_url": "https://api.github.com/users/lattejed/orgs",
      "repos_url": "https://api.github.com/users/lattejed/repos",
      "events_url": "https://api.github.com/users/lattejed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lattejed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-06T11:10:58Z",
    "updated_at": "2022-01-06T11:40:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Good suggestions, thanks. Looking at it now Evm is stateful / reset inside the runner for each test. Based on your comments I'll assume there are no issues instantiating a number of Evms in parallel so it should be straightforward to make these changes.\r\n\r\n[edit]\r\n\r\nJust started looking at this so I reserve the right to change my mind about how straightforward it is =)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006486793/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006503272",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1006503272",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1006503272,
    "node_id": "IC_kwDOGBlvNc47_gVo",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-06T11:32:02Z",
    "updated_at": "2022-01-06T11:32:12Z",
    "author_association": "MEMBER",
    "body": "Yes exactly, I think that because of the resetting of the state being already the case in each test, it should be doable",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1006503272/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007319033",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1007319033",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1007319033,
    "node_id": "IC_kwDOGBlvNc48Cnf5",
    "user": {
      "login": "lattejed",
      "id": 388048,
      "node_id": "MDQ6VXNlcjM4ODA0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/388048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lattejed",
      "html_url": "https://github.com/lattejed",
      "followers_url": "https://api.github.com/users/lattejed/followers",
      "following_url": "https://api.github.com/users/lattejed/following{/other_user}",
      "gists_url": "https://api.github.com/users/lattejed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lattejed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lattejed/subscriptions",
      "organizations_url": "https://api.github.com/users/lattejed/orgs",
      "repos_url": "https://api.github.com/users/lattejed/repos",
      "events_url": "https://api.github.com/users/lattejed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lattejed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T10:59:00Z",
    "updated_at": "2022-01-07T14:09:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Currently looking at implementing `Clone` for `Evm` as it may be cleaner overall. \r\n\r\nMain challenge with adding parallelism here will be managing lifetimes. `Clone` may be more straightforward than init-ing new Evms, but I need to experiment more to see what works best.\n\n[edit removed vague wording]",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007319033/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007512122",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1007512122",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1007512122,
    "node_id": "IC_kwDOGBlvNc48DWo6",
    "user": {
      "login": "brockelmore",
      "id": 31553173,
      "node_id": "MDQ6VXNlcjMxNTUzMTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31553173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brockelmore",
      "html_url": "https://github.com/brockelmore",
      "followers_url": "https://api.github.com/users/brockelmore/followers",
      "following_url": "https://api.github.com/users/brockelmore/following{/other_user}",
      "gists_url": "https://api.github.com/users/brockelmore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brockelmore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brockelmore/subscriptions",
      "organizations_url": "https://api.github.com/users/brockelmore/orgs",
      "repos_url": "https://api.github.com/users/brockelmore/repos",
      "events_url": "https://api.github.com/users/brockelmore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brockelmore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T15:47:01Z",
    "updated_at": "2022-01-07T15:47:01Z",
    "author_association": "MEMBER",
    "body": "@lattejed I would recommend just instantiating *inside* the test. You probably will run into `Send`+ `Sync` issues otherwise as I tried to hack something together yesterday using clone to no avail.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007512122/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007534904",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1007534904",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1007534904,
    "node_id": "IC_kwDOGBlvNc48DcM4",
    "user": {
      "login": "CalebEverett",
      "id": 8947267,
      "node_id": "MDQ6VXNlcjg5NDcyNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8947267?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CalebEverett",
      "html_url": "https://github.com/CalebEverett",
      "followers_url": "https://api.github.com/users/CalebEverett/followers",
      "following_url": "https://api.github.com/users/CalebEverett/following{/other_user}",
      "gists_url": "https://api.github.com/users/CalebEverett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CalebEverett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CalebEverett/subscriptions",
      "organizations_url": "https://api.github.com/users/CalebEverett/orgs",
      "repos_url": "https://api.github.com/users/CalebEverett/repos",
      "events_url": "https://api.github.com/users/CalebEverett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CalebEverett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T16:13:21Z",
    "updated_at": "2022-01-07T16:22:53Z",
    "author_association": "NONE",
    "body": "That was the approach I was working on as well as a starting place, removing the passing of an instantiated vm to [ContractRunner](https://github.com/gakonst/foundry/blob/cb279a21b562df7f57b5880584c722d77b93018c/forge/src/runner.rs#L139) and just creating ones inside [run_test](https://github.com/gakonst/foundry/blob/cb279a21b562df7f57b5880584c722d77b93018c/forge/src/runner.rs#L231) and [run_fuzz_test](https://github.com/gakonst/foundry/blob/cb279a21b562df7f57b5880584c722d77b93018c/forge/src/runner.rs#L307) with a `new_evm` method implemented on `ContractRunner`, but hadn't sorted out the trait bounds yet.\r\n\r\nI was starting with just the sputnik one since it didn't require any additional arguments to create.\r\n\r\n```rust\r\nimpl<'a, S: Clone, E: Evm<S>> ContractRunner<'a, S, E> {\r\n    pub fn new_evm() -> impl Evm<S> {\r\n        vm()\r\n    }\r\n```\r\n\r\nbut that is saying:\r\n```\r\nthe trait bound `Executor<MemoryStackStateOwned<'_, CheatcodeBackend<MemoryBackend<'_>>>, CheatcodeHandler<StackExecutor<'_, '_, MemoryStackStateOwned<'_, CheatcodeBackend<MemoryBackend<'_>>>, BTreeMap<H160, for<'r, 's> fn(&'r [u8], std::option::Option<u64>, &'s evm_adapters::sputnik::evm::Context, bool) -> Result<PrecompileOutput, PrecompileFailure>>>>>: evm_adapters::Evm<S>` is not satisfied\r\n```\r\n\r\nwhich was weird since that is the same way the evm that get's passed into `ContractRunner` gets created and the trait bound is satisfied. I was expecting the `Evm` trait to be satisfied whether the vm was created inside `ContractRunner` or passed in. I'm probably missing something basic in satisfying the trait bound in the new method.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007534904/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007543488",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1007543488",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1007543488,
    "node_id": "IC_kwDOGBlvNc48DeTA",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T16:25:05Z",
    "updated_at": "2022-01-07T16:25:05Z",
    "author_association": "MEMBER",
    "body": "If you push the code we can maybe take a look, not sure what this could be either. Maybe a missing `Sync + Send` trait bound?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007543488/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007552840",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1007552840",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1007552840,
    "node_id": "IC_kwDOGBlvNc48DglI",
    "user": {
      "login": "CalebEverett",
      "id": 8947267,
      "node_id": "MDQ6VXNlcjg5NDcyNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8947267?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CalebEverett",
      "html_url": "https://github.com/CalebEverett",
      "followers_url": "https://api.github.com/users/CalebEverett/followers",
      "following_url": "https://api.github.com/users/CalebEverett/following{/other_user}",
      "gists_url": "https://api.github.com/users/CalebEverett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CalebEverett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CalebEverett/subscriptions",
      "organizations_url": "https://api.github.com/users/CalebEverett/orgs",
      "repos_url": "https://api.github.com/users/CalebEverett/repos",
      "events_url": "https://api.github.com/users/CalebEverett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CalebEverett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T16:37:56Z",
    "updated_at": "2022-01-07T16:37:56Z",
    "author_association": "NONE",
    "body": "[Here](https://github.com/CalebEverett/foundry/blob/2f880a17a7595ef0e7c5e6b39f6b4d283ccfcf04/forge/src/runner.rs#L171) is the new method. Starting with just keeping everything as is and getting the [creation of the vm](https://github.com/CalebEverett/foundry/blob/2f880a17a7595ef0e7c5e6b39f6b4d283ccfcf04/forge/src/runner.rs#L202) and passed into [run_test](https://github.com/CalebEverett/foundry/blob/2f880a17a7595ef0e7c5e6b39f6b4d283ccfcf04/forge/src/runner.rs#L236) going.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007552840/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007598827",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1007598827",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1007598827,
    "node_id": "IC_kwDOGBlvNc48Drzr",
    "user": {
      "login": "brockelmore",
      "id": 31553173,
      "node_id": "MDQ6VXNlcjMxNTUzMTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31553173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brockelmore",
      "html_url": "https://github.com/brockelmore",
      "followers_url": "https://api.github.com/users/brockelmore/followers",
      "following_url": "https://api.github.com/users/brockelmore/following{/other_user}",
      "gists_url": "https://api.github.com/users/brockelmore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brockelmore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brockelmore/subscriptions",
      "organizations_url": "https://api.github.com/users/brockelmore/orgs",
      "repos_url": "https://api.github.com/users/brockelmore/repos",
      "events_url": "https://api.github.com/users/brockelmore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brockelmore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T17:37:49Z",
    "updated_at": "2022-01-07T17:37:49Z",
    "author_association": "MEMBER",
    "body": "the primary issue with the above is that we lose the command line configurations (like forking).\r\n\r\nThis is semi-ok but for forking we likely want a single evm anyway because otherwise caching becomes impossible in its current form (there is another fork caching implementation floating around some place that isnt used but may solve this)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007598827/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007636862",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1007636862",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1007636862,
    "node_id": "IC_kwDOGBlvNc48D1F-",
    "user": {
      "login": "CalebEverett",
      "id": 8947267,
      "node_id": "MDQ6VXNlcjg5NDcyNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8947267?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CalebEverett",
      "html_url": "https://github.com/CalebEverett",
      "followers_url": "https://api.github.com/users/CalebEverett/followers",
      "following_url": "https://api.github.com/users/CalebEverett/following{/other_user}",
      "gists_url": "https://api.github.com/users/CalebEverett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CalebEverett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CalebEverett/subscriptions",
      "organizations_url": "https://api.github.com/users/CalebEverett/orgs",
      "repos_url": "https://api.github.com/users/CalebEverett/repos",
      "events_url": "https://api.github.com/users/CalebEverett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CalebEverett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T18:28:46Z",
    "updated_at": "2022-01-07T18:28:46Z",
    "author_association": "NONE",
    "body": "I was thinking `new_evm` would accept arguments. I was messing around with putting the evm in a mutex and sharing it between threads, but If there is only one evm, how much speed up is there to be had over the current implementation? I was working on naively testing what the tradeoff was of having to create evms versus the benefit of having the tests themselves run in parallel as a first pass.\r\n\r\nIf I understand the [forking requirement](https://github.com/gakonst/foundry/blob/e1fb71dd622c407a92046b85fe2e2f2e5989eb82/evm-adapters/README.md#sputniks-cached-forking-backend), could you still make that work by storing that as the same initial `state`? `new_evm` would use whatever is in `state` as its initial state and if it received a forking argument, it would just grab the forked state once and then use that on each creation.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007636862/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007742735",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1007742735",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1007742735,
    "node_id": "IC_kwDOGBlvNc48EO8P",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-07T21:09:55Z",
    "updated_at": "2022-01-07T21:10:49Z",
    "author_association": "MEMBER",
    "body": "I'd use the \"SharedBackend\" that @mattsse wrote, it's a cloneable forking backend which caches and deduplicates requests and responses across all clones. You'd have one clone per backend used for each evm instance that you pass to all parallel tests. \r\n\r\nThe explicit reason it was created was for when we have multiple tests running in parallel to optimize network traffic.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007742735/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007882147",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1007882147",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1007882147,
    "node_id": "IC_kwDOGBlvNc48Ew-j",
    "user": {
      "login": "lattejed",
      "id": 388048,
      "node_id": "MDQ6VXNlcjM4ODA0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/388048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lattejed",
      "html_url": "https://github.com/lattejed",
      "followers_url": "https://api.github.com/users/lattejed/followers",
      "following_url": "https://api.github.com/users/lattejed/following{/other_user}",
      "gists_url": "https://api.github.com/users/lattejed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lattejed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lattejed/subscriptions",
      "organizations_url": "https://api.github.com/users/lattejed/orgs",
      "repos_url": "https://api.github.com/users/lattejed/repos",
      "events_url": "https://api.github.com/users/lattejed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lattejed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-08T04:13:49Z",
    "updated_at": "2022-01-08T04:13:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "The main issue I had with passing in a fn was that it looked like there were multiple factory functions per vm in the different implementations -- it looked like it might be necessary to pass around additional config for `fn() -> Evm` to work. Not that big of a deal but I was trying to avoid it. Maybe this won't be an issue in practice however., i.e., each vm has a single config for testing.\r\n\r\nSo I played around with passing in a closure so vm setup could be kept in the same places it currently lives. There are lifetime issues with that since closures are short lived out of the box. This is probably not worth pursuing.\r\n\r\n@brockelmore you're likely right. I stubbed out `Clone` but didn't try to pass it to a new thread yet. I like the ergonomics of it a lot better (clone, reset / copy state) but it's likely to be more trouble than it's worth, assuming it's possible at all.\r\n\r\nI'm currently wrapping up a late holiday and have a long drive today. It'll be a bit before I can do a deep dive and make any meaningful recommendations. @CalebEverett looks like you're making good progress, I'll see where you're at / what I can help with when I'm back online.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1007882147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1008260698",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1008260698",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1008260698,
    "node_id": "IC_kwDOGBlvNc48GNZa",
    "user": {
      "login": "lattejed",
      "id": 388048,
      "node_id": "MDQ6VXNlcjM4ODA0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/388048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lattejed",
      "html_url": "https://github.com/lattejed",
      "followers_url": "https://api.github.com/users/lattejed/followers",
      "following_url": "https://api.github.com/users/lattejed/following{/other_user}",
      "gists_url": "https://api.github.com/users/lattejed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lattejed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lattejed/subscriptions",
      "organizations_url": "https://api.github.com/users/lattejed/orgs",
      "repos_url": "https://api.github.com/users/lattejed/repos",
      "events_url": "https://api.github.com/users/lattejed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lattejed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-09T09:20:14Z",
    "updated_at": "2022-01-09T09:20:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Deleted a comment. Need to play around more.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1008260698/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1008302158",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1008302158",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1008302158,
    "node_id": "IC_kwDOGBlvNc48GXhO",
    "user": {
      "login": "lattejed",
      "id": 388048,
      "node_id": "MDQ6VXNlcjM4ODA0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/388048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lattejed",
      "html_url": "https://github.com/lattejed",
      "followers_url": "https://api.github.com/users/lattejed/followers",
      "following_url": "https://api.github.com/users/lattejed/following{/other_user}",
      "gists_url": "https://api.github.com/users/lattejed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lattejed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lattejed/subscriptions",
      "organizations_url": "https://api.github.com/users/lattejed/orgs",
      "repos_url": "https://api.github.com/users/lattejed/repos",
      "events_url": "https://api.github.com/users/lattejed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lattejed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-09T13:51:40Z",
    "updated_at": "2022-01-09T13:51:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, a bit clearer now.\r\n\r\nAfaik `fn() -> impl Evm` can only be used to return homogenous types. The common way to return heterogenous types is to use `fn() -> Box<dyn some_trait>` (or an `Enum` which won't really work here).\r\n\r\nHowever, in this case we need to return a `Box<evm_adapters::Evm<State>>` and `evm_adapters::Evm<State>` is considered 'object unsafe' or unboxable due the use of generics and some other issues.\r\n\r\nSo, passing around a factory function that can return `Box<evm_adapters::Evm<State>>` isn't going to work without modifying the trait. Rust forbids using generics with dynamic dispatch, so this is likely a no-go.\r\n\r\nAn alternative would be to move vm creation into the test runners where necessary. That somewhat defeats the purpose of having the vm's conform to `evm_adapters::Evm<State>`. However, it's still not an issue passing these trait objects to functions, so there's still gain there.\r\n\r\nIf vms have to be instantiated in multiple places, a macro could clean things up. I'm still on the fence about how awful that is.\r\n\r\nAn alternative would be to try to get everything implementing `Evm` to be `Clone`. I'm think we can work around `Send+Sync` issues by cloning and moving. However, `Clone` is probably nearly as problematic as `Send+Sync` to conform to.\r\n\r\nI also considered some kind of wrapper / builder,  but I believe the basic issues will remain. \r\n\r\nI'm reluctant to tightly couple the runners and evm creation, but maybe that's the only way out of here w/o a lot of rewrite. \r\n\r\nAny / all input welcome here. Also happy to be told I've overlooked something obvious.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1008302158/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1008617740",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1008617740",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1008617740,
    "node_id": "IC_kwDOGBlvNc48HkkM",
    "user": {
      "login": "lattejed",
      "id": 388048,
      "node_id": "MDQ6VXNlcjM4ODA0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/388048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lattejed",
      "html_url": "https://github.com/lattejed",
      "followers_url": "https://api.github.com/users/lattejed/followers",
      "following_url": "https://api.github.com/users/lattejed/following{/other_user}",
      "gists_url": "https://api.github.com/users/lattejed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lattejed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lattejed/subscriptions",
      "organizations_url": "https://api.github.com/users/lattejed/orgs",
      "repos_url": "https://api.github.com/users/lattejed/repos",
      "events_url": "https://api.github.com/users/lattejed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lattejed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-10T07:59:27Z",
    "updated_at": "2022-01-10T07:59:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm going to call `Clone` a dead end -- `derive` requires upstream changes and would be difficult to implement manually due to the use of generics.\r\n\r\nCurrently working on moving evm creation into the test runners. Probably going to go the route of adding a macro so evm creation logic doesn't have to be replicated.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1008617740/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1008619527",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1008619527",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1008619527,
    "node_id": "IC_kwDOGBlvNc48HlAH",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-10T08:02:38Z",
    "updated_at": "2022-01-10T08:02:38Z",
    "author_association": "MEMBER",
    "body": "Ideally we'd avoid the macro, can you share maybe what the roadblock with moving the evm creation function (instead of doing a macro) is?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1008619527/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1008633613",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1008633613",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1008633613,
    "node_id": "IC_kwDOGBlvNc48HocN",
    "user": {
      "login": "lattejed",
      "id": 388048,
      "node_id": "MDQ6VXNlcjM4ODA0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/388048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lattejed",
      "html_url": "https://github.com/lattejed",
      "followers_url": "https://api.github.com/users/lattejed/followers",
      "following_url": "https://api.github.com/users/lattejed/following{/other_user}",
      "gists_url": "https://api.github.com/users/lattejed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lattejed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lattejed/subscriptions",
      "organizations_url": "https://api.github.com/users/lattejed/orgs",
      "repos_url": "https://api.github.com/users/lattejed/repos",
      "events_url": "https://api.github.com/users/lattejed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lattejed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-10T08:22:48Z",
    "updated_at": "2022-01-10T08:32:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I flushed my changes already, but you can drop sth like this into `cli/src/cmd/test.rs`:\r\n\r\n```\r\npub fn new_evm<S: Clone, R>(opts: BuildArgs, evm_opts: EvmOpts) -> Box<dyn evm_adapters::Evm<S, ReturnReason = R>> {\r\n    let mut cfg = utils::sputnik_cfg(opts.compiler.evm_version);\r\n    let vicinity = evm_opts.vicinity().unwrap();\r\n    Box::new(utils::sputnik_helpers::evm(&evm_opts, &mut cfg, &vicinity).unwrap())\r\n        as Box<dyn evm_adapters::Evm<S, ReturnReason = R>>\r\n}\r\n```\r\n\r\n`Box<dyn trait>` is required b/c of how Rust deals with heterogenous return types. The simpler `-> impl Evm` will only work with homogenous types. \r\n\r\nYou could create multiple factory functions, but will still need some config passed along with it and some logic in place. \r\n\r\n[edit]\r\n\r\nThe error is:\r\n\r\n```\r\nerror[E0038]: the trait `evm_adapters::Evm` cannot be made into an object\r\n```\r\n\r\n`rustc --explain E0038` will give a rundown but the short version is dynamic dispatch is incompatible with generics (and some other parts of `trait Evm`). ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1008633613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1008651843",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1008651843",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1008651843,
    "node_id": "IC_kwDOGBlvNc48Hs5D",
    "user": {
      "login": "lattejed",
      "id": 388048,
      "node_id": "MDQ6VXNlcjM4ODA0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/388048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lattejed",
      "html_url": "https://github.com/lattejed",
      "followers_url": "https://api.github.com/users/lattejed/followers",
      "following_url": "https://api.github.com/users/lattejed/following{/other_user}",
      "gists_url": "https://api.github.com/users/lattejed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lattejed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lattejed/subscriptions",
      "organizations_url": "https://api.github.com/users/lattejed/orgs",
      "repos_url": "https://api.github.com/users/lattejed/repos",
      "events_url": "https://api.github.com/users/lattejed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lattejed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-10T08:44:25Z",
    "updated_at": "2022-01-10T08:44:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "To be clear, a macro isn't required. I was just considering it if evm creation logic has to be duplicated in multiple places. \r\n\r\nThe 'have to' afaict here is to move the creation logic into the runners.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1008651843/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1008881205",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1008881205",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1008881205,
    "node_id": "IC_kwDOGBlvNc48Ik41",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-10T13:36:40Z",
    "updated_at": "2022-01-10T13:36:40Z",
    "author_association": "MEMBER",
    "body": "yeah the Evm trait is not object-safe\r\n\r\nsince we only use the Evm trait, would it be possible to do something like\r\n\r\n```rust\r\n\r\nenum Evm {Sputnik(..), Evmodin(..)}\r\n\r\n```\r\n\r\nI guess that would require wrapper types for the state as well, so maybe too complex\r\n\r\nSince they are both mutually exclusive, can make this work with cfg type aliases\r\n\r\n```rust\r\n#[cfg(feature = \"sputnik\")\r\ntype Evm = Sputnik<..>;\r\n\r\n#[cfg(feature = \"evmodin\")\r\ntype Evm = Evmodin<..>;\r\n```\r\nsame for factories",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1008881205/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1008911096",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1008911096",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1008911096,
    "node_id": "IC_kwDOGBlvNc48IsL4",
    "user": {
      "login": "lattejed",
      "id": 388048,
      "node_id": "MDQ6VXNlcjM4ODA0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/388048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lattejed",
      "html_url": "https://github.com/lattejed",
      "followers_url": "https://api.github.com/users/lattejed/followers",
      "following_url": "https://api.github.com/users/lattejed/following{/other_user}",
      "gists_url": "https://api.github.com/users/lattejed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lattejed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lattejed/subscriptions",
      "organizations_url": "https://api.github.com/users/lattejed/orgs",
      "repos_url": "https://api.github.com/users/lattejed/repos",
      "events_url": "https://api.github.com/users/lattejed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lattejed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-10T14:12:52Z",
    "updated_at": "2022-01-10T14:12:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, I was wondering about that. This\r\n\r\n```\r\nmatch evm_opts.evm_type {\r\n    #[cfg(feature = \"sputnik-evm\")]\r\n    EvmType::Sputnik => {}\r\n    #[cfg(feature = \"evmodin-evm\")]\r\n    EvmType::EvmOdin => {}\r\n}\r\n```\r\nmade me think they weren't mutually exclusive, but if they are that gives some more leeway.\r\n\r\nI'll see if the aliases you're suggesting can work. Thanks for the input @mattsse  \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1008911096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1009348614",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1009348614",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1009348614,
    "node_id": "IC_kwDOGBlvNc48KXAG",
    "user": {
      "login": "CalebEverett",
      "id": 8947267,
      "node_id": "MDQ6VXNlcjg5NDcyNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8947267?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CalebEverett",
      "html_url": "https://github.com/CalebEverett",
      "followers_url": "https://api.github.com/users/CalebEverett/followers",
      "following_url": "https://api.github.com/users/CalebEverett/following{/other_user}",
      "gists_url": "https://api.github.com/users/CalebEverett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CalebEverett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CalebEverett/subscriptions",
      "organizations_url": "https://api.github.com/users/CalebEverett/orgs",
      "repos_url": "https://api.github.com/users/CalebEverett/repos",
      "events_url": "https://api.github.com/users/CalebEverett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CalebEverett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-10T21:13:53Z",
    "updated_at": "2022-01-10T21:19:13Z",
    "author_association": "NONE",
    "body": "@lattejed I managed to get a super crude version of this running with the tests parallelized in `run_tests` and sputnik vms created in `run_test` and `run_fuzz_test`. I was working on getting the initial state with the deployed contracts passed into `run_tests` so it can be cloned for each `run_test` call and was then going to circle back to getting the cli args passed in and generalizing to include evmodin. I can push up what I have and then happy to collaborate if useful.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1009348614/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1009379028",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1009379028",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1009379028,
    "node_id": "IC_kwDOGBlvNc48KebU",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-10T21:52:43Z",
    "updated_at": "2022-01-10T21:52:43Z",
    "author_association": "MEMBER",
    "body": "@CalebEverett pushing this code would be very valuable. I'm very curious to hear how long [solmate](https://github.com/Rari-Capital/solmate) tests take with your code",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1009379028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1009387138",
    "html_url": "https://github.com/foundry-rs/foundry/issues/141#issuecomment-1009387138",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/141",
    "id": 1009387138,
    "node_id": "IC_kwDOGBlvNc48KgaC",
    "user": {
      "login": "CalebEverett",
      "id": 8947267,
      "node_id": "MDQ6VXNlcjg5NDcyNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8947267?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CalebEverett",
      "html_url": "https://github.com/CalebEverett",
      "followers_url": "https://api.github.com/users/CalebEverett/followers",
      "following_url": "https://api.github.com/users/CalebEverett/following{/other_user}",
      "gists_url": "https://api.github.com/users/CalebEverett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CalebEverett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CalebEverett/subscriptions",
      "organizations_url": "https://api.github.com/users/CalebEverett/orgs",
      "repos_url": "https://api.github.com/users/CalebEverett/repos",
      "events_url": "https://api.github.com/users/CalebEverett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CalebEverett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-10T22:04:42Z",
    "updated_at": "2022-01-10T22:04:42Z",
    "author_association": "NONE",
    "body": "@gakonst [Here](https://github.com/CalebEverett/foundry/commit/9c66cea8d29d8d8b91b55c4010b16477dd5e0c9c) is what I've got - super crude, intended as concept demo only, to be refined, etc. I think the state with the deployed contracts and cli args need to get completed before being able to try out in the wild.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1009387138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
