{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/326",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/326",
  "id": 1090497295,
  "node_id": "I_kwDOGBlvNc5A_6sP",
  "number": 326,
  "title": "forge: Deploying and testing contracts compiled by older Solidity versions",
  "user": {
    "login": "Jeiwan",
    "id": 8029346,
    "node_id": "MDQ6VXNlcjgwMjkzNDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8029346?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Jeiwan",
    "html_url": "https://github.com/Jeiwan",
    "followers_url": "https://api.github.com/users/Jeiwan/followers",
    "following_url": "https://api.github.com/users/Jeiwan/following{/other_user}",
    "gists_url": "https://api.github.com/users/Jeiwan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Jeiwan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Jeiwan/subscriptions",
    "organizations_url": "https://api.github.com/users/Jeiwan/orgs",
    "repos_url": "https://api.github.com/users/Jeiwan/repos",
    "events_url": "https://api.github.com/users/Jeiwan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Jeiwan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394237,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjM3",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-question",
      "name": "T-question",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: question"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2021-12-29T12:45:55Z",
  "updated_at": "2022-01-31T07:14:07Z",
  "closed_at": "2022-01-31T07:14:07Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "When compiling a test contract that imports a contract that uses an older Solidity version, it fails with:\r\n> Error:\r\n   0:\r\n      ParserError: Source file requires different compiler version (current compiler is 0.8.10+commit.fc410830.Darwin.appleclang) - note that nightly builds are considered to be strictly less than the released version\r\n       --> /Users/jeiwan/.tmp/foundrysolversions/lib/v2-core/contracts/UniswapV2Pair.sol:1:1:\r\n        |\r\n      1 | pragma solidity =0.5.16;\r\n        |\r\n        \r\nSteps to reproduce:\r\n1. `mkdir foundrysolversions && cd $_`\r\n1. `forge init`\r\n1. `forge install Uniswap/v2-core`\r\n1. Edit `src/test/Contract.t.sol` and add `import \"v2-core/UniswapV2Pair.sol\";`\r\n1. `forge test`\r\n\r\nIs there a workaround? Is it possible to compile contracts with different compilers and then reuse binary code?",
  "closed_by": {
    "login": "Jeiwan",
    "id": 8029346,
    "node_id": "MDQ6VXNlcjgwMjkzNDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8029346?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Jeiwan",
    "html_url": "https://github.com/Jeiwan",
    "followers_url": "https://api.github.com/users/Jeiwan/followers",
    "following_url": "https://api.github.com/users/Jeiwan/following{/other_user}",
    "gists_url": "https://api.github.com/users/Jeiwan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Jeiwan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Jeiwan/subscriptions",
    "organizations_url": "https://api.github.com/users/Jeiwan/orgs",
    "repos_url": "https://api.github.com/users/Jeiwan/repos",
    "events_url": "https://api.github.com/users/Jeiwan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Jeiwan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/326/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1002631711",
    "html_url": "https://github.com/foundry-rs/foundry/issues/326#issuecomment-1002631711",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326",
    "id": 1002631711,
    "node_id": "IC_kwDOGBlvNc47wvIf",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-29T14:51:19Z",
    "updated_at": "2021-12-29T14:51:56Z",
    "author_association": "MEMBER",
    "body": "I don't think this is possible in general? You should not be able to import & use a file that is `pragma solidity =0.5.16` in a non -0.5.16 file. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1002631711/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003121971",
    "html_url": "https://github.com/foundry-rs/foundry/issues/326#issuecomment-1003121971",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326",
    "id": 1003121971,
    "node_id": "IC_kwDOGBlvNc47ym0z",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-30T17:37:52Z",
    "updated_at": "2021-12-30T17:37:52Z",
    "author_association": "MEMBER",
    "body": "`pragma solidity =0.5.16;` pins to `0.5.16` and `0.5.16` only, meaning it won't compile with any other version.\r\n\r\nthis leaves two possible solutions:\r\n* use the exact version yourself (or a range that includes it like >=0.5.16)\r\n* upgrade the contract's pragma to a newer version \r\n\r\nThere is an unrecommended third possible workaround:\r\ntechnically, it's not necessarily required to have a version pragma in a solidity file, but it's highly! recommended and the defacto standard. depending on the build tool you don't need a version pragma in your imports.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003121971/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003191971",
    "html_url": "https://github.com/foundry-rs/foundry/issues/326#issuecomment-1003191971",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326",
    "id": 1003191971,
    "node_id": "IC_kwDOGBlvNc47y36j",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-30T21:50:10Z",
    "updated_at": "2021-12-30T21:50:10Z",
    "author_association": "MEMBER",
    "body": "Yep, matches my understanding above. Closing then as it's not a Foundry issue and isn't something support-able in any framework afaict.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003191971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003268502",
    "html_url": "https://github.com/foundry-rs/foundry/issues/326#issuecomment-1003268502",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326",
    "id": 1003268502,
    "node_id": "IC_kwDOGBlvNc47zKmW",
    "user": {
      "login": "Jeiwan",
      "id": 8029346,
      "node_id": "MDQ6VXNlcjgwMjkzNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8029346?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jeiwan",
      "html_url": "https://github.com/Jeiwan",
      "followers_url": "https://api.github.com/users/Jeiwan/followers",
      "following_url": "https://api.github.com/users/Jeiwan/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jeiwan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jeiwan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jeiwan/subscriptions",
      "organizations_url": "https://api.github.com/users/Jeiwan/orgs",
      "repos_url": "https://api.github.com/users/Jeiwan/repos",
      "events_url": "https://api.github.com/users/Jeiwan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jeiwan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-31T04:52:07Z",
    "updated_at": "2021-12-31T04:52:07Z",
    "author_association": "NONE",
    "body": "This is doable in Hardhat, although with a hack. I think it's also possible to deploy binary code compiled by older Solidity compiler as a contract using inline assembly or some other magic. Probably this can be implemented as another cheat code (the VM contract).\r\n\r\nThis feature can be needed when testint a contract that interacts with third-party contracts deployed on mainnet. For example, a contract that uses flash loans of Uniswap. Upgrading outdated contracts can cause bugs or result in different behavior. Also, since Forge dependencies are git submodule, one would have to fork original repo and add it as a dependency instead of the original one, to be able to save changes.\r\n\r\nMocking is a solution but mocking is generally considered a bad practice because mocks are not exact copies and can differ in behavior. For simple cases like flash loans mocks are ok, but for more complex cases they can be problematic: imagine you used a slightly incorrect mock and then deployed to mainnet where the contract you depend on works differently. At this point though mocks seems like the simplest solution.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003268502/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003350125",
    "html_url": "https://github.com/foundry-rs/foundry/issues/326#issuecomment-1003350125",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326",
    "id": 1003350125,
    "node_id": "IC_kwDOGBlvNc47zeht",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-31T11:20:11Z",
    "updated_at": "2021-12-31T11:20:11Z",
    "author_association": "MEMBER",
    "body": "What is the way it's doable in hardhat? Maybe we can streamline that hack?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003350125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003373018",
    "html_url": "https://github.com/foundry-rs/foundry/issues/326#issuecomment-1003373018",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326",
    "id": 1003373018,
    "node_id": "IC_kwDOGBlvNc47zkHa",
    "user": {
      "login": "Jeiwan",
      "id": 8029346,
      "node_id": "MDQ6VXNlcjgwMjkzNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8029346?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jeiwan",
      "html_url": "https://github.com/Jeiwan",
      "followers_url": "https://api.github.com/users/Jeiwan/followers",
      "following_url": "https://api.github.com/users/Jeiwan/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jeiwan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jeiwan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jeiwan/subscriptions",
      "organizations_url": "https://api.github.com/users/Jeiwan/orgs",
      "repos_url": "https://api.github.com/users/Jeiwan/repos",
      "events_url": "https://api.github.com/users/Jeiwan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jeiwan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-31T13:08:12Z",
    "updated_at": "2021-12-31T13:08:12Z",
    "author_association": "NONE",
    "body": "First step is to compile a dependency contract separately from other contracts. In Hardhat, I use an empty contract like:\r\n```solidity\r\npragma solidity =0.5.16;\r\n\r\nimport \"@uniswap/v2-core/contracts/UniswapV2Factory.sol\";\r\n\r\ncontract DependencyUniswapV2 {}\r\n```\r\nThen, in tests, it can be easily used via:\r\n```js\r\nconst Factory = await ethers.getContractFactory(\"UniswapV2Factory\");\r\n```\r\n`getContractFactory` is a feature of Hardhat, it loads contracts from artifacts by contract name and it can instantiate a contract from bytecode and ABI:\r\nhttps://github.com/nomiclabs/hardhat/blob/767f68dee84d6a47cd40153a8ab8552f41a95d5e/packages/hardhat-ethers/src/internal/helpers.ts#L60\r\nI wish we could have something like that in Forge because writing tests in Solidity is so much better than in JS. It also feels like making Solidity compiler import contracts from bytecode is not a big problem, but it might be easier to hack it in Forge first.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003373018/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003441665",
    "html_url": "https://github.com/foundry-rs/foundry/issues/326#issuecomment-1003441665",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326",
    "id": 1003441665,
    "node_id": "IC_kwDOGBlvNc47z04B",
    "user": {
      "login": "jparklev",
      "id": 24902242,
      "node_id": "MDQ6VXNlcjI0OTAyMjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/24902242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jparklev",
      "html_url": "https://github.com/jparklev",
      "followers_url": "https://api.github.com/users/jparklev/followers",
      "following_url": "https://api.github.com/users/jparklev/following{/other_user}",
      "gists_url": "https://api.github.com/users/jparklev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jparklev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jparklev/subscriptions",
      "organizations_url": "https://api.github.com/users/jparklev/orgs",
      "repos_url": "https://api.github.com/users/jparklev/repos",
      "events_url": "https://api.github.com/users/jparklev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jparklev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-31T19:42:42Z",
    "updated_at": "2021-12-31T19:45:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's what i'm doing for this atm lmao \r\n\r\n<img width=\"744\" alt=\"Screen Shot 2021-12-31 at 2 44 59 PM\" src=\"https://user-images.githubusercontent.com/24902242/147837428-c2fccf9d-b23d-4843-83e9-b152eaa74453.png\">\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003441665/reactions",
      "total_count": 6,
      "+1": 6,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003443267",
    "html_url": "https://github.com/foundry-rs/foundry/issues/326#issuecomment-1003443267",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326",
    "id": 1003443267,
    "node_id": "IC_kwDOGBlvNc47z1RD",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-31T19:59:27Z",
    "updated_at": "2021-12-31T19:59:27Z",
    "author_association": "MEMBER",
    "body": "Honestly that's not a bad workaround, maybe something we should add on the stdlib?\r\n\r\n2 qs:\r\n1. What does _compileSpace() do?\r\n2. How do you get its interface for further usage in the tests?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003443267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003447372",
    "html_url": "https://github.com/foundry-rs/foundry/issues/326#issuecomment-1003447372",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326",
    "id": 1003447372,
    "node_id": "IC_kwDOGBlvNc47z2RM",
    "user": {
      "login": "jparklev",
      "id": 24902242,
      "node_id": "MDQ6VXNlcjI0OTAyMjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/24902242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jparklev",
      "html_url": "https://github.com/jparklev",
      "followers_url": "https://api.github.com/users/jparklev/followers",
      "following_url": "https://api.github.com/users/jparklev/following{/other_user}",
      "gists_url": "https://api.github.com/users/jparklev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jparklev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jparklev/subscriptions",
      "organizations_url": "https://api.github.com/users/jparklev/orgs",
      "repos_url": "https://api.github.com/users/jparklev/repos",
      "events_url": "https://api.github.com/users/jparklev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jparklev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-31T20:29:14Z",
    "updated_at": "2022-01-02T06:32:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "> What does _compileSpace() do?\r\n\r\nThis is in a monorepo, so it's making sure the other pkg has been compiled first (does something like `cd ../space-pkg; forge build`)\r\n\r\n> How do you get its interface for further usage in the tests?\r\n\r\nJust defining a new interface for it [maker-style](https://github.com/makerdao/dss/blob/c666ab1fdac4cb3dd8a8b4223f951a9773a64c55/src/pot.sol#L45) in this case\r\n\r\n> maybe something we should add on the stdlib\r\n\r\nYea! Guess it depends if there are any gotchas with appending calldata to bin bytecodes compiled with different versions? I don't know of anything like that, but I would defer to others who are more familiar\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003447372/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003655392",
    "html_url": "https://github.com/foundry-rs/foundry/issues/326#issuecomment-1003655392",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326",
    "id": 1003655392,
    "node_id": "IC_kwDOGBlvNc470pDg",
    "user": {
      "login": "Jeiwan",
      "id": 8029346,
      "node_id": "MDQ6VXNlcjgwMjkzNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8029346?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jeiwan",
      "html_url": "https://github.com/Jeiwan",
      "followers_url": "https://api.github.com/users/Jeiwan/followers",
      "following_url": "https://api.github.com/users/Jeiwan/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jeiwan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jeiwan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jeiwan/subscriptions",
      "organizations_url": "https://api.github.com/users/Jeiwan/orgs",
      "repos_url": "https://api.github.com/users/Jeiwan/repos",
      "events_url": "https://api.github.com/users/Jeiwan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jeiwan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-02T02:53:58Z",
    "updated_at": "2022-01-02T02:53:58Z",
    "author_association": "NONE",
    "body": "I've ended up using the same solution. Learned about it from this blog post:\r\nhttps://www.libevm.com/2021/12/18/yulp-smart-contract-dev/",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1003655392/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1011057485",
    "html_url": "https://github.com/foundry-rs/foundry/issues/326#issuecomment-1011057485",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326",
    "id": 1011057485,
    "node_id": "IC_kwDOGBlvNc48Q4NN",
    "user": {
      "login": "brockelmore",
      "id": 31553173,
      "node_id": "MDQ6VXNlcjMxNTUzMTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31553173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brockelmore",
      "html_url": "https://github.com/brockelmore",
      "followers_url": "https://api.github.com/users/brockelmore/followers",
      "following_url": "https://api.github.com/users/brockelmore/following{/other_user}",
      "gists_url": "https://api.github.com/users/brockelmore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brockelmore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brockelmore/subscriptions",
      "organizations_url": "https://api.github.com/users/brockelmore/orgs",
      "repos_url": "https://api.github.com/users/brockelmore/repos",
      "events_url": "https://api.github.com/users/brockelmore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brockelmore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-12T13:41:21Z",
    "updated_at": "2022-01-12T13:41:21Z",
    "author_association": "MEMBER",
    "body": "May i suggest to reduce external dependencies like `jq`, that we make it a cheatcode for loading deplyoment (and runtime) bytecode from a compiled contract? This would also make the `etch` cheatcode more useful i imagine",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1011057485/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1011115473",
    "html_url": "https://github.com/foundry-rs/foundry/issues/326#issuecomment-1011115473",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326",
    "id": 1011115473,
    "node_id": "IC_kwDOGBlvNc48RGXR",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-12T14:42:44Z",
    "updated_at": "2022-01-12T14:42:44Z",
    "author_association": "MEMBER",
    "body": "Supportive @brockelmore ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1011115473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1011682517",
    "html_url": "https://github.com/foundry-rs/foundry/issues/326#issuecomment-1011682517",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326",
    "id": 1011682517,
    "node_id": "IC_kwDOGBlvNc48TQzV",
    "user": {
      "login": "ncitron",
      "id": 16858330,
      "node_id": "MDQ6VXNlcjE2ODU4MzMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16858330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncitron",
      "html_url": "https://github.com/ncitron",
      "followers_url": "https://api.github.com/users/ncitron/followers",
      "following_url": "https://api.github.com/users/ncitron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncitron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncitron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncitron/subscriptions",
      "organizations_url": "https://api.github.com/users/ncitron/orgs",
      "repos_url": "https://api.github.com/users/ncitron/repos",
      "events_url": "https://api.github.com/users/ncitron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncitron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-13T02:17:12Z",
    "updated_at": "2022-01-13T02:17:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "If nobody else has, I'd like to give this one a shot. I've been wanting this feature for a while now in dapptools/foundry.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1011682517/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1023150445",
    "html_url": "https://github.com/foundry-rs/foundry/issues/326#issuecomment-1023150445",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326",
    "id": 1023150445,
    "node_id": "IC_kwDOGBlvNc48_Alt",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-27T12:21:03Z",
    "updated_at": "2022-01-27T12:21:03Z",
    "author_association": "MEMBER",
    "body": "Is this solved by #440?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1023150445/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1025442948",
    "html_url": "https://github.com/foundry-rs/foundry/issues/326#issuecomment-1025442948",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/326",
    "id": 1025442948,
    "node_id": "IC_kwDOGBlvNc49HwSE",
    "user": {
      "login": "Jeiwan",
      "id": 8029346,
      "node_id": "MDQ6VXNlcjgwMjkzNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8029346?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jeiwan",
      "html_url": "https://github.com/Jeiwan",
      "followers_url": "https://api.github.com/users/Jeiwan/followers",
      "following_url": "https://api.github.com/users/Jeiwan/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jeiwan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jeiwan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jeiwan/subscriptions",
      "organizations_url": "https://api.github.com/users/Jeiwan/orgs",
      "repos_url": "https://api.github.com/users/Jeiwan/repos",
      "events_url": "https://api.github.com/users/Jeiwan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jeiwan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-31T07:14:07Z",
    "updated_at": "2022-01-31T07:14:07Z",
    "author_association": "NONE",
    "body": "@onbjerg Yes! Thanks.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1025442948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
