{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4033",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4033/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4033/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4033/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4033",
  "id": 1519056908,
  "node_id": "I_kwDOGBlvNc5aivgM",
  "number": 4033,
  "title": "Preserve state of the anvil fork after the test (`forge test`) has been completed",
  "user": {
    "login": "KirillDogadin-std",
    "id": 59374892,
    "node_id": "MDQ6VXNlcjU5Mzc0ODky",
    "avatar_url": "https://avatars.githubusercontent.com/u/59374892?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KirillDogadin-std",
    "html_url": "https://github.com/KirillDogadin-std",
    "followers_url": "https://api.github.com/users/KirillDogadin-std/followers",
    "following_url": "https://api.github.com/users/KirillDogadin-std/following{/other_user}",
    "gists_url": "https://api.github.com/users/KirillDogadin-std/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KirillDogadin-std/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KirillDogadin-std/subscriptions",
    "organizations_url": "https://api.github.com/users/KirillDogadin-std/orgs",
    "repos_url": "https://api.github.com/users/KirillDogadin-std/repos",
    "events_url": "https://api.github.com/users/KirillDogadin-std/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KirillDogadin-std/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-01-04T14:17:01Z",
  "updated_at": "2023-01-06T19:20:27Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nBeing able to provide a flag to `forge test` command that turns off fork reset for every test. E.g. `forge test --preserve-fork-state`\n\n### Additional context\n\nThanks for the great project, we love the execution speed and the possibility to write concise solidity-based tests.\r\n \r\nBut according to the docs, the blockchain state is being reset between the tests, and it's not possible to overwrite this behaviour (via, let's say `--preserve-state` flag). The reason it will be helpful: to reuse solidity test code for other purposes.\r\n \r\n- Simple use-case: after executing one specific test the user connects to the (still running) anvil fork via RPC and validates something by hand. Useful for debugging frontend\r\n- Complex use-case: run hardhat tests on top of the state changes produced by the solidity test. Useful when execution parameters coming off-chain (i.e. routing data)\r\n \r\nOne other possible implementation of the same functionality would be via cheat codes that work inside anvil fork, but outside tests. E.g. a user deploys `t.sol` contract, then executes specific \"test\" function via RPC to reach desired state. There is no documentation on this, but according to our trials cheat codes don't work outside tests (i.e. when ran by `foundry test`)\r\n \r\nPlease let me know what you think about this functionality and if we're using it wrong!",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4033/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 2
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4033/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
