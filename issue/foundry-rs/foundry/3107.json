{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3107",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3107/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3107/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3107/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3107",
  "id": 1363800437,
  "node_id": "I_kwDOGBlvNc5RSfF1",
  "number": 3107,
  "title": "`vm.setEnv` won't work",
  "user": {
    "login": "nduchak",
    "id": 41945483,
    "node_id": "MDQ6VXNlcjQxOTQ1NDgz",
    "avatar_url": "https://avatars.githubusercontent.com/u/41945483?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nduchak",
    "html_url": "https://github.com/nduchak",
    "followers_url": "https://api.github.com/users/nduchak/followers",
    "following_url": "https://api.github.com/users/nduchak/following{/other_user}",
    "gists_url": "https://api.github.com/users/nduchak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nduchak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nduchak/subscriptions",
    "organizations_url": "https://api.github.com/users/nduchak/orgs",
    "repos_url": "https://api.github.com/users/nduchak/repos",
    "events_url": "https://api.github.com/users/nduchak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nduchak/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 4182991461,
      "node_id": "LA_kwDOGBlvNc75U2Jl",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-script",
      "name": "Cmd-forge-script",
      "color": "006B75",
      "default": false,
      "description": "Command: forge script"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-09-06T20:52:16Z",
  "updated_at": "2022-09-07T14:47:53Z",
  "closed_at": "2022-09-07T14:47:52Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [ ] Foundryup\n\n### What version of Foundry are you on?\n\n2.0\n\n### What command(s) is the bug in?\n\nforge script\n\n### Operating System\n\nmacOS (Intel)\n\n### Describe the bug\n\nLet's say we have a contract that deploys a butch of contracts. If we rich block limit then this deployment will fail (execution of SC method). I try to split deployment into 2 methods and run `forge script` for both of them. As I need deployed addresses from first deployment run in the second method I simply try to put it to env using `vm.setEnv`, but when I try to execute the second method this env vars is empty. Not sure maybe I misunderstood or doing something wrong.",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3107/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3107/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1238985113",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3107#issuecomment-1238985113",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3107",
    "id": 1238985113,
    "node_id": "IC_kwDOGBlvNc5J2WmZ",
    "user": {
      "login": "Elyx0",
      "id": 706218,
      "node_id": "MDQ6VXNlcjcwNjIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/706218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Elyx0",
      "html_url": "https://github.com/Elyx0",
      "followers_url": "https://api.github.com/users/Elyx0/followers",
      "following_url": "https://api.github.com/users/Elyx0/following{/other_user}",
      "gists_url": "https://api.github.com/users/Elyx0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Elyx0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Elyx0/subscriptions",
      "organizations_url": "https://api.github.com/users/Elyx0/orgs",
      "repos_url": "https://api.github.com/users/Elyx0/repos",
      "events_url": "https://api.github.com/users/Elyx0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Elyx0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-07T06:58:02Z",
    "updated_at": "2022-09-07T06:58:02Z",
    "author_association": "NONE",
    "body": "Your deployment script can use storage to split deployment in several txs if needed can't it?\r\n\r\n```c\r\ncontract Deploy is Script {\r\n\t\r\n\tdeployedAddressPart1 address[];\r\n\r\n\tdoPartOne() public {\r\n\t\t// deploy\r\n\t\tdeployedAddressPart1 = (new Part1Deployer()).getDeployedAddresses();\r\n\t}\r\n\r\n\tdoPartTwo() public returns (address[]) {\r\n\t\t// deploy\r\n\t\tnew Part2Deployer(deployedAddressPart1);\r\n\t}\r\n\r\n\trun(){\r\n\t\tdoPartOne()\r\n\t\tdoPartTwo()\r\n\t}\t\t\r\n\r\n}\r\n```\r\n\r\nor you can look at `vm.readFile` / `vm.writeFile`. You might be able to read from the `./out/` informations about part1",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1238985113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1239225869",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3107#issuecomment-1239225869",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3107",
    "id": 1239225869,
    "node_id": "IC_kwDOGBlvNc5J3RYN",
    "user": {
      "login": "nduchak",
      "id": 41945483,
      "node_id": "MDQ6VXNlcjQxOTQ1NDgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/41945483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nduchak",
      "html_url": "https://github.com/nduchak",
      "followers_url": "https://api.github.com/users/nduchak/followers",
      "following_url": "https://api.github.com/users/nduchak/following{/other_user}",
      "gists_url": "https://api.github.com/users/nduchak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nduchak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nduchak/subscriptions",
      "organizations_url": "https://api.github.com/users/nduchak/orgs",
      "repos_url": "https://api.github.com/users/nduchak/repos",
      "events_url": "https://api.github.com/users/nduchak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nduchak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-07T10:49:04Z",
    "updated_at": "2022-09-07T10:49:04Z",
    "author_association": "NONE",
    "body": "```\r\nrun(){\r\n\t\tdoPartOne()\r\n\t\tdoPartTwo()\r\n\t}\r\n```\r\nThis one doesn't solve the block limit issue. I want to have two runs of `forge script` for `partOne()` and `partTwo()`\r\nDo you confirm that `vm.setEvm` doesn't work?(As this one is a most easier way to share state which doesn't require any additional parsing of json file)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1239225869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1239227910",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3107#issuecomment-1239227910",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3107",
    "id": 1239227910,
    "node_id": "IC_kwDOGBlvNc5J3R4G",
    "user": {
      "login": "nduchak",
      "id": 41945483,
      "node_id": "MDQ6VXNlcjQxOTQ1NDgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/41945483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nduchak",
      "html_url": "https://github.com/nduchak",
      "followers_url": "https://api.github.com/users/nduchak/followers",
      "following_url": "https://api.github.com/users/nduchak/following{/other_user}",
      "gists_url": "https://api.github.com/users/nduchak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nduchak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nduchak/subscriptions",
      "organizations_url": "https://api.github.com/users/nduchak/orgs",
      "repos_url": "https://api.github.com/users/nduchak/repos",
      "events_url": "https://api.github.com/users/nduchak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nduchak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-07T10:51:04Z",
    "updated_at": "2022-09-07T10:52:02Z",
    "author_association": "NONE",
    "body": "I already have a workaround where I parse `broadcast`  file, but it's quite tricky to determine which address is related to which contract (If you deploy the same contract a few times, you have the same `contractName` in the broadcast file, so you need to parse constructor args for deployment)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1239227910/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1239474031",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3107#issuecomment-1239474031",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3107",
    "id": 1239474031,
    "node_id": "IC_kwDOGBlvNc5J4N9v",
    "user": {
      "login": "0xYYY",
      "id": 86655648,
      "node_id": "MDQ6VXNlcjg2NjU1NjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/86655648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xYYY",
      "html_url": "https://github.com/0xYYY",
      "followers_url": "https://api.github.com/users/0xYYY/followers",
      "following_url": "https://api.github.com/users/0xYYY/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xYYY/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xYYY/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xYYY/subscriptions",
      "organizations_url": "https://api.github.com/users/0xYYY/orgs",
      "repos_url": "https://api.github.com/users/0xYYY/repos",
      "events_url": "https://api.github.com/users/0xYYY/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xYYY/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-07T14:33:46Z",
    "updated_at": "2022-09-07T14:43:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "environment variables set by a process are only accessible by itself and its child processes\r\n\r\nthus, calling `setEnv` will only modify env vars of the currently running `forge` process, and won't affect the shell (`forge`'s parent process), that's why you can't access them in the second `forge` run\r\n\r\n(we should probably clarify this in the book)\r\n\r\n[file cheatcodes](https://book.getfoundry.sh/cheatcodes/fs) should be reasonable alternative solutions to your usecase",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1239474031/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1239492512",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3107#issuecomment-1239492512",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3107",
    "id": 1239492512,
    "node_id": "IC_kwDOGBlvNc5J4Seg",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-07T14:47:52Z",
    "updated_at": "2022-09-07T14:47:52Z",
    "author_association": "MEMBER",
    "body": "Yeah if I understand correctly you're doing:\r\n\r\n- Run the first script, which does `vm.setEnv` and then exits.\r\n- Run the second script, expecting environment variables to be set from the first run\r\n\r\nThis won't work and is not the intended use case - environment variables only exist for the current process in which it is set, so once the process exits the environment variable is not persisted.\r\n\r\nYou can write what you need to a file using the file cheatcodes, and read it in the other script. It seems like you're also saying that you're running out of gas - would you mind opening up a discussion on this repository with some more information on how you achieve that/what the gas limit is? It should be *very* high, so it should not present a problem. You might also be able to raise it.\r\n\r\nInformation you'd ideally give:\r\n\r\n- What is the gas limit in your script?\r\n- How much gas does the script use?\r\n- A trace of the script so we can figure out if something else is consuming all of your gas\r\n\r\nClosing this since environment variables can't work this way",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1239492512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
