{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5506",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5506/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5506/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5506/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5506",
  "id": 1828095382,
  "node_id": "I_kwDOGBlvNc5s9oWW",
  "number": 5506,
  "title": "expectEmit fails",
  "user": {
    "login": "Craigson",
    "id": 4640172,
    "node_id": "MDQ6VXNlcjQ2NDAxNzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4640172?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Craigson",
    "html_url": "https://github.com/Craigson",
    "followers_url": "https://api.github.com/users/Craigson/followers",
    "following_url": "https://api.github.com/users/Craigson/following{/other_user}",
    "gists_url": "https://api.github.com/users/Craigson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Craigson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Craigson/subscriptions",
    "organizations_url": "https://api.github.com/users/Craigson/orgs",
    "repos_url": "https://api.github.com/users/Craigson/repos",
    "events_url": "https://api.github.com/users/Craigson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Craigson/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2023-07-30T21:38:05Z",
  "updated_at": "2023-08-26T00:21:10Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (d93312b 2023-07-30T00:26:55.660686000Z)\n\n### What command(s) is the bug in?\n\nforge test\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\nAfter running `foundryup` for the first time in a while, all of my tests containing `vm.expectEmit` are suddenly failing.  I cannot create a new test to reproduce the issue, as the behavior in the new test is as expected.  I have read through #5117 and other similar issues, but none seem to apply to my use case.  Here is my test:\r\n\r\n```solidity\r\n    // should fail performing an admin action while still pending\r\n    function testCallingAdminFunctionAsPendingAdminFails(uint256 eoaUint) public {\r\n        address eoa = _generateRandomEoa(eoaUint);\r\n\r\n        _deployDummyIntegration();\r\n        address newAdmin = makeAddr(\"newAdmin\");\r\n        vm.startPrank(integrationDeployer);\r\n        vm.expectEmit(true, true, false, true);\r\n        emit SecurityAdminTransferStarted(integrationDeployer,newAdmin);\r\n        dummyIntegration.transferSecurityAdministration(newAdmin);\r\n        vm.stopPrank();\r\n\r\n        assertEq(newAdmin, dummyIntegration.pendingSecurityAdmin(), \"SA02: not pending admin\");\r\n\r\n        vm.startPrank(newAdmin);\r\n        vm.expectRevert(bytes(\"SA01: security admin only\"));\r\n        dummyIntegration.transferSecurityAdministration(eoa);\r\n        vm.stopPrank();\r\n    }\r\n```\r\n\r\nI have confirmed that both events, defined in my contract, and my test file, are identical.\r\n\r\n```solidity\r\n    event SecurityAdminTransferStarted(address indexed oldAdmin, address indexed pendingAdmin);\r\n```\r\n\r\nI tried moving the event definition into the test file, and still no dice.  From the console output, we can see that the event is fired inside the first call being made, and the args match exactly.\r\n\r\n```\r\n    ├─ [0] VM::addr(<pk>) [staticcall]\r\n    │   └─ ← newAdmin: [0x67ED0Ac45b537A79406E01656d90659325455585]\r\n    ├─ [0] VM::label(newAdmin: [0x67ED0Ac45b537A79406E01656d90659325455585], newAdmin)\r\n    │   └─ ← ()\r\n    ├─ [0] VM::startPrank(0xA4B9D41Efb6b3d2C684f3909bdA5356f4F58a899)\r\n    │   └─ ← ()\r\n    ├─ [0] VM::expectEmit(true, true, false, true)\r\n    │   └─ ← ()\r\n    ├─ emit SecurityAdminTransferStarted(oldAdmin: 0xA4B9D41Efb6b3d2C684f3909bdA5356f4F58a899, pendingAdmin: newAdmin: [0x67ED0Ac45b537A79406E01656d90659325455585])\r\n    ├─ [22386] DummyIntegration::transferSecurityAdministration(newAdmin: [0x67ED0Ac45b537A79406E01656d90659325455585])\r\n    │   ├─ emit SecurityAdminTransferStarted(oldAdmin: 0xA4B9D41Efb6b3d2C684f3909bdA5356f4F58a899, pendingAdmin: newAdmin: [0x67ED0Ac45b537A79406E01656d90659325455585])\r\n    │   └─ ← ()\r\n    └─ ← \"Log != expected log\"\r\n\r\nTest result: FAILED. 0 passed; 1 failed; 0 skipped; finished in 109.19ms\r\nRan 1 test suites: 0 tests passed, 1 failed, 0 skipped (1 total tests)\r\n\r\nFailing tests:\r\nEncountered 1 failing test in test/foundry/MyTest.t.sol:MyTestTest\r\n[FAIL. Reason: Expected an emit, but the call reverted instead. Ensure you're testing the happy path when using the `expectEmit` cheatcode. Counterexample: calldata=0x5710534d0000000000000000000000000000000000000000000000000000000000000000, args=[0]] testCallingAdminFunctionAsPendingAdminFails(uint256) (runs: 0, μ: 0, ~: 0)\r\n```\r\n\r\nThe reason seems to indicate that the issue has to do with the call reverting, but that is expected behaviour with the `expectRevert` included. As a sanity check, the test still fails when the `expectRevert` portion of the test is commented out.\r\n\r\nAttempting to reproduce the error was unsuccessful, as the behavior is as expected and the test passes:\r\n\r\n```solidity\r\npragma solidity 0.8.19;\r\n\r\nimport \"forge-std/Test.sol\";\r\n\r\ncontract EmitContract {\r\n     event TestEvent(address indexed sender, uint256 indexed value);\r\n\r\n     function shouldEmit(uint256 val) public {\r\n       emit TestEvent(msg.sender, val);\r\n     }\r\n}\r\n\r\ninterface IEvents {\r\n     event TestEvent(address indexed sender, uint256 indexed value);\r\n}\r\n\r\ncontract EmitTest is Test, IEvents {\r\n\r\n\r\n    EmitContract emitContract;\r\n\r\n    function setUp() public {\r\n      emitContract = new EmitContract();\r\n    }\r\n    function testEvent(uint256 val) public {\r\n\r\n       address eoa = makeAddr(\"eoa\");\r\n       vm.startPrank(eoa);\r\n       vm.expectEmit(true, true, false, true);\r\n       emit TestEvent(eoa, val);\r\n       emitContract.shouldEmit(val);\r\n       vm.stopPrank();\r\n    }\r\n}\r\n```\r\n\r\nI have tried expecting the emission with all values set to false, and without any args, and the result is the same.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5506/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5506/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1658405559",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5506#issuecomment-1658405559",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5506",
    "id": 1658405559,
    "node_id": "IC_kwDOGBlvNc5i2UK3",
    "user": {
      "login": "Evalir",
      "id": 26014927,
      "node_id": "MDQ6VXNlcjI2MDE0OTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evalir",
      "html_url": "https://github.com/Evalir",
      "followers_url": "https://api.github.com/users/Evalir/followers",
      "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
      "organizations_url": "https://api.github.com/users/Evalir/orgs",
      "repos_url": "https://api.github.com/users/Evalir/repos",
      "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evalir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-31T13:44:33Z",
    "updated_at": "2023-07-31T13:44:33Z",
    "author_association": "MEMBER",
    "body": "thanks for reporting this!\r\n\r\nI know reproing was unsuccessful, but could we at least get a few instructions on how to repro with your repo? It's much harder to track this down otherwise",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1658405559/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1658772213",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5506#issuecomment-1658772213",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5506",
    "id": 1658772213,
    "node_id": "IC_kwDOGBlvNc5i3tr1",
    "user": {
      "login": "Craigson",
      "id": 4640172,
      "node_id": "MDQ6VXNlcjQ2NDAxNzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4640172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Craigson",
      "html_url": "https://github.com/Craigson",
      "followers_url": "https://api.github.com/users/Craigson/followers",
      "following_url": "https://api.github.com/users/Craigson/following{/other_user}",
      "gists_url": "https://api.github.com/users/Craigson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Craigson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Craigson/subscriptions",
      "organizations_url": "https://api.github.com/users/Craigson/orgs",
      "repos_url": "https://api.github.com/users/Craigson/repos",
      "events_url": "https://api.github.com/users/Craigson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Craigson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-31T16:57:30Z",
    "updated_at": "2023-07-31T16:57:30Z",
    "author_association": "NONE",
    "body": "The contracts are part of a larger protocol that's in a private repo, so I can't share any of the code, but I'll try modify the example to better resemble the conditions. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1658772213/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1666399826",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5506#issuecomment-1666399826",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5506",
    "id": 1666399826,
    "node_id": "IC_kwDOGBlvNc5jUz5S",
    "user": {
      "login": "jmanywhere",
      "id": 41244007,
      "node_id": "MDQ6VXNlcjQxMjQ0MDA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/41244007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmanywhere",
      "html_url": "https://github.com/jmanywhere",
      "followers_url": "https://api.github.com/users/jmanywhere/followers",
      "following_url": "https://api.github.com/users/jmanywhere/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmanywhere/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmanywhere/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmanywhere/subscriptions",
      "organizations_url": "https://api.github.com/users/jmanywhere/orgs",
      "repos_url": "https://api.github.com/users/jmanywhere/repos",
      "events_url": "https://api.github.com/users/jmanywhere/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmanywhere/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-05T05:41:43Z",
    "updated_at": "2023-08-05T05:42:35Z",
    "author_association": "NONE",
    "body": "This is happening as well on my end. Things in common:\r\n- Working on with a Mac using M1 chip\r\n- Exact same error.\r\nMy project is a staking pool and can share the repo:\r\nhttps://github.com/jmanywhere/wecoin-stk\r\n![image](https://github.com/foundry-rs/foundry/assets/41244007/be88aaa7-afd7-4193-9d78-d6ebfd1a5c93)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1666399826/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1679120743",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5506#issuecomment-1679120743",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5506",
    "id": 1679120743,
    "node_id": "IC_kwDOGBlvNc5kFVln",
    "user": {
      "login": "Evalir",
      "id": 26014927,
      "node_id": "MDQ6VXNlcjI2MDE0OTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evalir",
      "html_url": "https://github.com/Evalir",
      "followers_url": "https://api.github.com/users/Evalir/followers",
      "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
      "organizations_url": "https://api.github.com/users/Evalir/orgs",
      "repos_url": "https://api.github.com/users/Evalir/repos",
      "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evalir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-15T15:21:47Z",
    "updated_at": "2023-08-15T15:22:15Z",
    "author_association": "MEMBER",
    "body": "Hey @jmanywhere i can't reproduce—I downloaded your repo, and using the latest foundry version I uncommented the offending part and it passed. Also tried moving the prank after the expect emit and subsequent event emission (which should be the correct usage too) and can't reproduce as well. everything works fine. Also working on an M1 Mac here.\r\n\r\nInclined to close if this can't be accurately reproduced, because if it was a more widespread issue we'd see more reports.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1679120743/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1682628653",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5506#issuecomment-1682628653",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5506",
    "id": 1682628653,
    "node_id": "IC_kwDOGBlvNc5kSuAt",
    "user": {
      "login": "jmanywhere",
      "id": 41244007,
      "node_id": "MDQ6VXNlcjQxMjQ0MDA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/41244007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmanywhere",
      "html_url": "https://github.com/jmanywhere",
      "followers_url": "https://api.github.com/users/jmanywhere/followers",
      "following_url": "https://api.github.com/users/jmanywhere/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmanywhere/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmanywhere/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmanywhere/subscriptions",
      "organizations_url": "https://api.github.com/users/jmanywhere/orgs",
      "repos_url": "https://api.github.com/users/jmanywhere/repos",
      "events_url": "https://api.github.com/users/jmanywhere/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmanywhere/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-17T16:51:23Z",
    "updated_at": "2023-08-17T16:51:23Z",
    "author_association": "NONE",
    "body": "Thanks @Evalir will run foundryup again and reach back. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1682628653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1690057984",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5506#issuecomment-1690057984",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5506",
    "id": 1690057984,
    "node_id": "IC_kwDOGBlvNc5kvD0A",
    "user": {
      "login": "bd21",
      "id": 15368912,
      "node_id": "MDQ6VXNlcjE1MzY4OTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/15368912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bd21",
      "html_url": "https://github.com/bd21",
      "followers_url": "https://api.github.com/users/bd21/followers",
      "following_url": "https://api.github.com/users/bd21/following{/other_user}",
      "gists_url": "https://api.github.com/users/bd21/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bd21/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bd21/subscriptions",
      "organizations_url": "https://api.github.com/users/bd21/orgs",
      "repos_url": "https://api.github.com/users/bd21/repos",
      "events_url": "https://api.github.com/users/bd21/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bd21/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-23T14:22:03Z",
    "updated_at": "2023-08-26T00:21:10Z",
    "author_association": "NONE",
    "body": "Running into this issue on a M1 Mac as well.  Tests pass with the expectEmit(...) commented out and I can see the events correctly emitted in the trace logs.\r\n```\r\nsolidity: 0.7.6\r\nforge: 0.2.0 (06a17bf 2023-08-19T00:24:01.238378000Z)\r\n```\r\n\r\n\r\nUpdate: no bug, I was just being stupid",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1690057984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1691011748",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5506#issuecomment-1691011748",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5506",
    "id": 1691011748,
    "node_id": "IC_kwDOGBlvNc5kysqk",
    "user": {
      "login": "LogiqueClergyman",
      "id": 115564022,
      "node_id": "U_kgDOBuNd9g",
      "avatar_url": "https://avatars.githubusercontent.com/u/115564022?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LogiqueClergyman",
      "html_url": "https://github.com/LogiqueClergyman",
      "followers_url": "https://api.github.com/users/LogiqueClergyman/followers",
      "following_url": "https://api.github.com/users/LogiqueClergyman/following{/other_user}",
      "gists_url": "https://api.github.com/users/LogiqueClergyman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LogiqueClergyman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LogiqueClergyman/subscriptions",
      "organizations_url": "https://api.github.com/users/LogiqueClergyman/orgs",
      "repos_url": "https://api.github.com/users/LogiqueClergyman/repos",
      "events_url": "https://api.github.com/users/LogiqueClergyman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LogiqueClergyman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-24T05:10:23Z",
    "updated_at": "2023-08-24T05:10:23Z",
    "author_association": "NONE",
    "body": "Same issue, but on Windows 10 here. Commenting out expectEmit(...) works with the events emitting correctly in the logs. I am following along a YouTube tutorial, and it works fine in his code and I am following along exactly the same way but the error persists. timestamp: [https://youtu.be/sas02qSFZ74?si=kLOd8xjAs6iHCUep&t=18742](url)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1691011748/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
