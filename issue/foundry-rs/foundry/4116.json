{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4116",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4116/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4116/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4116/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4116",
  "id": 1537801646,
  "node_id": "I_kwDOGBlvNc5bqP2u",
  "number": 4116,
  "title": "forge fmt: Additional formatting features ",
  "user": {
    "login": "0xfarhaan",
    "id": 59924029,
    "node_id": "MDQ6VXNlcjU5OTI0MDI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/59924029?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0xfarhaan",
    "html_url": "https://github.com/0xfarhaan",
    "followers_url": "https://api.github.com/users/0xfarhaan/followers",
    "following_url": "https://api.github.com/users/0xfarhaan/following{/other_user}",
    "gists_url": "https://api.github.com/users/0xfarhaan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0xfarhaan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0xfarhaan/subscriptions",
    "organizations_url": "https://api.github.com/users/0xfarhaan/orgs",
    "repos_url": "https://api.github.com/users/0xfarhaan/repos",
    "events_url": "https://api.github.com/users/0xfarhaan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0xfarhaan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3854691308,
      "node_id": "LA_kwDOGBlvNc7lwevs",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-fmt",
      "name": "Cmd-forge-fmt",
      "color": "006B75",
      "default": false,
      "description": "Command: forge fmt"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-01-18T11:02:23Z",
  "updated_at": "2023-05-29T20:16:34Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nHey folks from Maple here, we would like to switch to using `forge fmt`, currently we're doing everything manually so this would save us alot of time and we're sure others could benefit too. Also happy to help with implementing! \r\n\r\nHere are a list of options we would like in the formatter to make the switch:\r\n\r\n1. A new line at the top and bottom of top level declarations\r\n\r\n```solidity\r\ninterface interfaceName {\r\n\r\n    code;\r\n    code;\r\n    code;\r\n\r\n}\r\n\r\ncontract contractName1 {\r\n\r\n    code;\r\n    code;\r\n\r\n}\r\n```\r\n\r\n2. Ignore section headers (as they currently get reformatted)\r\n```solidity\r\n/**************************************************************************************************************************************/\r\n/*** Helpers                                                                                                                        ***/\r\n/**************************************************************************************************************************************/\r\n```\r\n\r\n3. For assertions of the same type, the parameters must be aligned so that the second set of parameters are left justified for each code block (this can be focussed around test helpers to start with)\r\n```solidity\r\nassertEq(mockToken.balanceOf(address(treasury)), 0);    \r\nassertEq(mockToken.balanceOf(address(mpl)),      100);  \r\nassertEq(mockToken.balanceOf(address(holder1)),  0); \r\nassertEq(mockToken.balanceOf(address(holder2)),  0);    \r\n\r\nassertEq(token.fundsBalance(),   60_000);\r\nassertEq(token.pointsPerShare(), expectedPointsPerShare);\r\n```\r\n\r\n4. Align the assignment operator for code blocks\r\n```solidity\r\nfunction increaseCustodyAllowance(address custodian, uint256 amount) external override {\r\n    uint256 oldAllowance      = custodyAllowance[msg.sender][custodian];\r\n    uint256 newAllowance      = oldAllowance.add(amount);\r\n    uint256 newTotalAllowance = totalCustodyAllowance[msg.sender].add(amount);\r\n\r\n    PoolLib.increaseCustodyAllowanceChecks(custodian, amount, newTotalAllowance, balanceOf(msg.sender));\r\n\r\n    custodyAllowance[msg.sender][custodian] = newAllowance;\r\n    totalCustodyAllowance[msg.sender]       = newTotalAllowance;\r\n}\r\n\r\n```\r\n\r\n5. Add a space after the opening and before the closing bracket of a tuple\r\n```solidity\r\n( , , uint256 foo, uint256 bar, , uint256 baz, , , ) = functionName();\r\n( success, ) = functionName();\r\n```\r\n\r\n6. Left justify align state variables by longest type for each code block\r\n```solidity\r\nuint256 internal nextDelegateOriginationFee;\r\nuint256 internal nextDelegateServiceFee;\r\n\r\nuint256 internal start;\r\n\r\n// Helper mapping to assert differences in balance\r\nmapping(address => uint256) internal partialAssetBalances;\r\n\r\nAsset        internal collateralAsset;\r\nAsset        internal fundsAsset;\r\nGlobals      internal globals;\r\nPoolDeployer internal deployer;\r\n\r\nFeeManager        internal feeManager;\r\nLoanManager       internal loanManager;\r\nPool              internal pool;\r\nPoolDelegateCover internal poolCover;\r\nPoolManager       internal poolManager;\r\nWithdrawalManager internal withdrawalManager;\r\n``` \r\n\r\n7. Align imports by the furthest 'from' keyword in each code block\r\n```solidity\r\nimport { Address, TestUtils } from \"../modules/contract-test-utils/contracts/test.sol\";\r\n\r\nimport { MockERC20 as Asset } from \"../modules/erc20/contracts/test/mocks/MockERC20.sol\";\r\n\r\nimport { MapleGlobals as Globals } from \"../modules/globals-v2/contracts/MapleGlobals.sol\";\r\nimport { NonTransparentProxy }     from \"../modules/globals-v2/modules/non-transparent-proxy/contracts/NonTransparentProxy.sol\";\r\n\r\nimport { Liquidator }            from \"../modules/liquidations/contracts/Liquidator.sol\";\r\nimport { LiquidatorFactory }     from \"../modules/liquidations/contracts/LiquidatorFactory.sol\";\r\nimport { LiquidatorInitializer } from \"../modules/liquidations/contracts/LiquidatorInitializer.sol\";\r\n\r\nimport { MapleLoan as Loan }                       from \"../modules/loan-v400/contracts/MapleLoan.sol\";\r\nimport { MapleLoanFactory as LoanFactory }         from \"../modules/loan-v400/contracts/MapleLoanFactory.sol\";\r\nimport { MapleLoanFeeManager as FeeManager }       from \"../modules/loan-v400/contracts/MapleLoanFeeManager.sol\";\r\nimport { MapleLoanInitializer as LoanInitializer } from \"../modules/loan-v400/contracts/MapleLoanInitializer.sol\";\r\n```\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4116/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4116/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1387509951",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4116#issuecomment-1387509951",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4116",
    "id": 1387509951,
    "node_id": "IC_kwDOGBlvNc5Ss7i_",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-18T18:19:04Z",
    "updated_at": "2023-01-18T18:19:04Z",
    "author_association": "MEMBER",
    "body": "Open to all of these! Would recommend doing 1 PR per, and thinking about \"what does the config look like\" for these, as Maple has a pretty unique formatting style which some may not want to use.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1387509951/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1396770092",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4116#issuecomment-1396770092",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4116",
    "id": 1396770092,
    "node_id": "IC_kwDOGBlvNc5TQQUs",
    "user": {
      "login": "0xfarhaan",
      "id": 59924029,
      "node_id": "MDQ6VXNlcjU5OTI0MDI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/59924029?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xfarhaan",
      "html_url": "https://github.com/0xfarhaan",
      "followers_url": "https://api.github.com/users/0xfarhaan/followers",
      "following_url": "https://api.github.com/users/0xfarhaan/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xfarhaan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xfarhaan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xfarhaan/subscriptions",
      "organizations_url": "https://api.github.com/users/0xfarhaan/orgs",
      "repos_url": "https://api.github.com/users/0xfarhaan/repos",
      "events_url": "https://api.github.com/users/0xfarhaan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xfarhaan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T10:43:24Z",
    "updated_at": "2023-01-19T10:45:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yup agree a separate PR for each. In terms of config had the following suggestion for each:\r\n\r\n1. top_level_spacing: bool\r\n2. ignore_section_headers: bool\r\n3. assertion_alignment: bool (could be further extended with different options later)\r\n4. assignment_alignment: bool\r\n5. tuple_spacing: bool\r\n6. state_variable_alignment: bool\r\n7. import_alignment: {false, \"left_justify_from\"} (I can foresee options being added here so being specific would help)\r\n\r\nThe defaults for these would all be set false or the equivalent. Agree some of these items are unique so would be an opt-in approach. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1396770092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1397627646",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4116#issuecomment-1397627646",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4116",
    "id": 1397627646,
    "node_id": "IC_kwDOGBlvNc5TThr-",
    "user": {
      "login": "rkrasiuk",
      "id": 25429261,
      "node_id": "MDQ6VXNlcjI1NDI5MjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25429261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkrasiuk",
      "html_url": "https://github.com/rkrasiuk",
      "followers_url": "https://api.github.com/users/rkrasiuk/followers",
      "following_url": "https://api.github.com/users/rkrasiuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkrasiuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkrasiuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkrasiuk/subscriptions",
      "organizations_url": "https://api.github.com/users/rkrasiuk/orgs",
      "repos_url": "https://api.github.com/users/rkrasiuk/repos",
      "events_url": "https://api.github.com/users/rkrasiuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkrasiuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T21:24:19Z",
    "updated_at": "2023-01-19T21:24:19Z",
    "author_association": "COLLABORATOR",
    "body": "@0xfarhaan my recommendation is to delay 2. since #3786 refactors comment handling. otherwise, these requests fall into two categories - spacing and alignment. spacing most likely would have to be handled on-site - embedding logic into visiting tuples and function calls. as for alignment, there could be a nice abstracted helper method for doing this, dunno yet 💭 ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1397627646/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1567484067",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4116#issuecomment-1567484067",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4116",
    "id": 1567484067,
    "node_id": "IC_kwDOGBlvNc5dbeij",
    "user": {
      "login": "lucas-manuel",
      "id": 44272939,
      "node_id": "MDQ6VXNlcjQ0MjcyOTM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/44272939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucas-manuel",
      "html_url": "https://github.com/lucas-manuel",
      "followers_url": "https://api.github.com/users/lucas-manuel/followers",
      "following_url": "https://api.github.com/users/lucas-manuel/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucas-manuel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucas-manuel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucas-manuel/subscriptions",
      "organizations_url": "https://api.github.com/users/lucas-manuel/orgs",
      "repos_url": "https://api.github.com/users/lucas-manuel/repos",
      "events_url": "https://api.github.com/users/lucas-manuel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucas-manuel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-29T20:16:34Z",
    "updated_at": "2023-05-29T20:16:34Z",
    "author_association": "NONE",
    "body": "Hey all, going to make individual issues to discuss these and provide diff examples so we can prioritize and revive this awesome future feature!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1567484067/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
