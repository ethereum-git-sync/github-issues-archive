{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4078",
  "id": 1530927481,
  "node_id": "I_kwDOGBlvNc5bQBl5",
  "number": 4078,
  "title": "Ignore balance check in `cast call/estimate`",
  "user": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394235,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjM1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0052CC",
      "default": true,
      "description": "Good for newcomers"
    },
    {
      "id": 3703752609,
      "node_id": "LA_kwDOGBlvNc7cwseh",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-cast",
      "name": "C-cast",
      "color": "5319E7",
      "default": false,
      "description": "Command: cast"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2023-01-12T15:32:31Z",
  "updated_at": "2023-01-26T15:34:37Z",
  "closed_at": "2023-01-26T15:34:37Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Allow cast call/estimate from any from address\r\n\r\n        Similar to this issue: Can we also have `cast call/estimate` ignore the amount of ETH in the account? I find myself having to use an account with a bunch of ETH in it to call functions. Similar to how we shouldn't need a password if `ETH_FROM` is set we also shouldn't have to worry about having insufficient ETH to make a call. It should assume infinite ETH.\r\n\r\n_Originally posted by @hexonaut in https://github.com/foundry-rs/foundry/issues/4038#issuecomment-1379443024_\r\n      ",
  "closed_by": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 2,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380616817",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4078#issuecomment-1380616817",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078",
    "id": 1380616817,
    "node_id": "IC_kwDOGBlvNc5SSopx",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T16:02:37Z",
    "updated_at": "2023-01-12T16:02:37Z",
    "author_association": "COLLABORATOR",
    "body": "Is this a cast internal check before executing the `eth_call`, or just the node's check? If the latter, AFAIK nodes don't implement any overrides by default when executing an `eth_call`, meaning the scope here would be adding a flag to make it easy to set a state override on the `from` account's balance. A more general solution would letting users specify any state overrides with the call. See the [state override set](https://geth.ethereum.org/docs/interacting-with-geth/rpc/ns-eth) part of the geth docs for more info",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380616817/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380623645",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4078#issuecomment-1380623645",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078",
    "id": 1380623645,
    "node_id": "IC_kwDOGBlvNc5SSqUd",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T16:05:11Z",
    "updated_at": "2023-01-12T16:05:11Z",
    "author_association": "MEMBER",
    "body": "I'm not entirely sure yet whether is a cast issue or happens in anvil @hexonaut ?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380623645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380646867",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4078#issuecomment-1380646867",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078",
    "id": 1380646867,
    "node_id": "IC_kwDOGBlvNc5SSv_T",
    "user": {
      "login": "hexonaut",
      "id": 588921,
      "node_id": "MDQ6VXNlcjU4ODkyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/588921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hexonaut",
      "html_url": "https://github.com/hexonaut",
      "followers_url": "https://api.github.com/users/hexonaut/followers",
      "following_url": "https://api.github.com/users/hexonaut/following{/other_user}",
      "gists_url": "https://api.github.com/users/hexonaut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hexonaut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hexonaut/subscriptions",
      "organizations_url": "https://api.github.com/users/hexonaut/orgs",
      "repos_url": "https://api.github.com/users/hexonaut/repos",
      "events_url": "https://api.github.com/users/hexonaut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hexonaut/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T16:13:58Z",
    "updated_at": "2023-01-12T16:13:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is an internal check in `cast`.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380646867/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380740287",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4078#issuecomment-1380740287",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078",
    "id": 1380740287,
    "node_id": "IC_kwDOGBlvNc5STGy_",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T17:11:34Z",
    "updated_at": "2023-01-12T17:11:34Z",
    "author_association": "COLLABORATOR",
    "body": "Where is this check? From what I can tell it looks like we just forward the call data on to the provider",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380740287/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380756464",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4078#issuecomment-1380756464",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078",
    "id": 1380756464,
    "node_id": "IC_kwDOGBlvNc5STKvw",
    "user": {
      "login": "hexonaut",
      "id": 588921,
      "node_id": "MDQ6VXNlcjU4ODkyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/588921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hexonaut",
      "html_url": "https://github.com/hexonaut",
      "followers_url": "https://api.github.com/users/hexonaut/followers",
      "following_url": "https://api.github.com/users/hexonaut/following{/other_user}",
      "gists_url": "https://api.github.com/users/hexonaut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hexonaut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hexonaut/subscriptions",
      "organizations_url": "https://api.github.com/users/hexonaut/orgs",
      "repos_url": "https://api.github.com/users/hexonaut/repos",
      "events_url": "https://api.github.com/users/hexonaut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hexonaut/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T17:25:07Z",
    "updated_at": "2023-01-12T17:25:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can easily replicate this for yourself. Just set `ETH_FROM` to an address with 0 ETH and `cast call` any contract.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380756464/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380776715",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4078#issuecomment-1380776715",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078",
    "id": 1380776715,
    "node_id": "IC_kwDOGBlvNc5STPsL",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T17:44:13Z",
    "updated_at": "2023-01-12T17:44:13Z",
    "author_association": "COLLABORATOR",
    "body": "Generated a random address that has no balance, and it seems to work\r\n\r\n```\r\n$ ETH_FROM=0x209884F676AF1b993dE5d453Ee38eFD0082D6cCa cast call 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 \"name()(string)\" --rpc-url $MAINNET_RPC_URL\r\nWrapped Ether\r\n\r\n$ cast call 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 \"name()(string)\" --rpc-url $MAINNET_RPC_URL --from 0x209884F676AF1b993dE5d453Ee38eFD0082D6cCa\r\nWrapped Ether",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380776715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380879585",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4078#issuecomment-1380879585",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078",
    "id": 1380879585,
    "node_id": "IC_kwDOGBlvNc5STozh",
    "user": {
      "login": "hexonaut",
      "id": 588921,
      "node_id": "MDQ6VXNlcjU4ODkyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/588921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hexonaut",
      "html_url": "https://github.com/hexonaut",
      "followers_url": "https://api.github.com/users/hexonaut/followers",
      "following_url": "https://api.github.com/users/hexonaut/following{/other_user}",
      "gists_url": "https://api.github.com/users/hexonaut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hexonaut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hexonaut/subscriptions",
      "organizations_url": "https://api.github.com/users/hexonaut/orgs",
      "repos_url": "https://api.github.com/users/hexonaut/repos",
      "events_url": "https://api.github.com/users/hexonaut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hexonaut/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T19:07:56Z",
    "updated_at": "2023-01-12T19:07:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Weird. I'm getting this:\r\n\r\n```\r\n$ ETH_FROM=0x209884F676AF1b993dE5d453Ee38eFD0082D6cCa cast call 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 \"name()(string)\" --rpc-url $MAINNET_RPC_URL\r\nError: \r\n(code: -32000, message: err: insufficient funds for gas * price + value: address 0x209884F676AF1b993dE5d453Ee38eFD0082D6cCa have 0 want 64298293177800000000 (supplied gas 550000000), data: None)\r\n```\r\n\r\nI'm using latest foundryup, Alchemy RPC, `ETH_GAS`, `ETH_GAS_PRICE` and `ETH_PRIO_FEE` are all set.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380879585/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380898844",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4078#issuecomment-1380898844",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078",
    "id": 1380898844,
    "node_id": "IC_kwDOGBlvNc5STtgc",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T19:21:51Z",
    "updated_at": "2023-01-12T19:22:04Z",
    "author_association": "COLLABORATOR",
    "body": "Ahh yes I believe by default a call will use a gas price of zero, so by having an override there with those env vars now the account needs ETH\r\n\r\n```\r\n$ ETH_FROM=0x209884F676AF1b993dE5d453Ee38eFD0082D6cCa ETH_GAS_PRICE=30881057458 cast call 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 \"name()(string)\" --rpc-url $MAINNET_RPC_URL\r\nError:\r\n(code: -32000, message: err: insufficient funds for gas * price + value: address 0x209884F676AF1b993dE5d453Ee38eFD0082D6cCa have 0 want 16984581601900000000 (supplied gas 550000000), data: None)\r\n```\r\n\r\nThat error message is from the node, not cast, and the easiest fix would just be setting the gas price to zero (or you may need to unset the env vars, not sure exactly, but when I don't have those env vars set the gas price is zero so calls are free)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380898844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380970017",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4078#issuecomment-1380970017",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078",
    "id": 1380970017,
    "node_id": "IC_kwDOGBlvNc5ST-4h",
    "user": {
      "login": "hexonaut",
      "id": 588921,
      "node_id": "MDQ6VXNlcjU4ODkyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/588921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hexonaut",
      "html_url": "https://github.com/hexonaut",
      "followers_url": "https://api.github.com/users/hexonaut/followers",
      "following_url": "https://api.github.com/users/hexonaut/following{/other_user}",
      "gists_url": "https://api.github.com/users/hexonaut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hexonaut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hexonaut/subscriptions",
      "organizations_url": "https://api.github.com/users/hexonaut/orgs",
      "repos_url": "https://api.github.com/users/hexonaut/repos",
      "events_url": "https://api.github.com/users/hexonaut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hexonaut/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T20:39:27Z",
    "updated_at": "2023-01-12T20:40:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "How do you guys normally deal with gas prices? It's a bit weird to have to set and unset gas prices between `send` and `call`. Can cast just assume a gas price of zero and ignore the value provided?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380970017/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380984398",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4078#issuecomment-1380984398",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078",
    "id": 1380984398,
    "node_id": "IC_kwDOGBlvNc5SUCZO",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T20:55:52Z",
    "updated_at": "2023-01-12T20:56:04Z",
    "author_association": "COLLABORATOR",
    "body": "I never use the env vars actually, so I have them all unset by default, and just use CLI flags to override params as needed. I’d be curious to hear why you keep them set by default, since all those gas params change between txs anyway + cast will estimate values for you if they’re unset when sending a tx",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380984398/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380996090",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4078#issuecomment-1380996090",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078",
    "id": 1380996090,
    "node_id": "IC_kwDOGBlvNc5SUFP6",
    "user": {
      "login": "hexonaut",
      "id": 588921,
      "node_id": "MDQ6VXNlcjU4ODkyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/588921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hexonaut",
      "html_url": "https://github.com/hexonaut",
      "followers_url": "https://api.github.com/users/hexonaut/followers",
      "following_url": "https://api.github.com/users/hexonaut/following{/other_user}",
      "gists_url": "https://api.github.com/users/hexonaut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hexonaut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hexonaut/subscriptions",
      "organizations_url": "https://api.github.com/users/hexonaut/orgs",
      "repos_url": "https://api.github.com/users/hexonaut/repos",
      "events_url": "https://api.github.com/users/hexonaut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hexonaut/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T21:09:18Z",
    "updated_at": "2023-01-12T21:09:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I never use the env vars actually, so I have them all unset by default, and just use CLI flags to override params as needed. I’d be curious to hear why you keep them set by default, since all those gas params change between txs anyway + cast will estimate values for you if they’re unset when sending a tx\r\n\r\nI've only actually just been realizing cast is doing all this work automatically. I'll blame the years of dapp tools and pre eip-1559. I've had my environment configured for that which I'm now realizing has been screwing me over. 😆 \r\n\r\nOk, so maybe this isn't a big deal I'm going to stop setting the gas vars. Feel free to close this issue.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380996090/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1381001815",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4078#issuecomment-1381001815",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078",
    "id": 1381001815,
    "node_id": "IC_kwDOGBlvNc5SUGpX",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T21:15:22Z",
    "updated_at": "2023-01-12T21:15:22Z",
    "author_association": "COLLABORATOR",
    "body": "Heh yea I do feel like a lot of the \"configuration by env vars\" that foundry supports is legacy from dapptools and prob not the best way to do things, since cast does a lot more under the hood automatically. For example, automatically resolving ENS names:\r\n\r\n```\r\n$ cast call $dai \"balanceOf(address)(uint256)\" \"vitalik.eth\"\r\n355502493698012633714742\r\n\r\n$ seth call $dai \"balanceOf(address)(uint256)\" \"vitalik.eth\"\r\nhevm: could not parse abi argument: vitalik.eth : address\r\nCallStack (from HasCallStack):\r\n  error, called at src/EVM/ABI.hs:488:8 in hevm-0.49.0-1OgpCom5DBh3xWwR8mjsIg:EVM.ABI\r\n```\r\n\r\nEither way sounds good, thanks! 🙂",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1381001815/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1405146169",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4078#issuecomment-1405146169",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078",
    "id": 1405146169,
    "node_id": "IC_kwDOGBlvNc5TwNQ5",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-26T15:05:09Z",
    "updated_at": "2023-01-26T15:05:09Z",
    "author_association": "MEMBER",
    "body": "revisiting this,\r\n\r\nis this still an issue or can this be closed?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1405146169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1405149161",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4078#issuecomment-1405149161",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4078",
    "id": 1405149161,
    "node_id": "IC_kwDOGBlvNc5TwN_p",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-26T15:07:03Z",
    "updated_at": "2023-01-26T15:07:03Z",
    "author_association": "COLLABORATOR",
    "body": "This can be closed ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1405149161/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
