{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4790",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4790/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4790/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4790/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4790",
  "id": 1678685899,
  "node_id": "I_kwDOGBlvNc5kDrbL",
  "number": 4790,
  "title": "feat(forge): Cheatcode to receive public key of private key",
  "user": {
    "login": "pmerkleplant",
    "id": 85061506,
    "node_id": "MDQ6VXNlcjg1MDYxNTA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/85061506?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pmerkleplant",
    "html_url": "https://github.com/pmerkleplant",
    "followers_url": "https://api.github.com/users/pmerkleplant/followers",
    "following_url": "https://api.github.com/users/pmerkleplant/following{/other_user}",
    "gists_url": "https://api.github.com/users/pmerkleplant/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pmerkleplant/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pmerkleplant/subscriptions",
    "organizations_url": "https://api.github.com/users/pmerkleplant/orgs",
    "repos_url": "https://api.github.com/users/pmerkleplant/repos",
    "events_url": "https://api.github.com/users/pmerkleplant/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pmerkleplant/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394235,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjM1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0052CC",
      "default": true,
      "description": "Good for newcomers"
    },
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2023-04-21T15:14:04Z",
  "updated_at": "2023-08-15T14:59:30Z",
  "closed_at": "2023-08-15T14:59:30Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nForge provides a cheatcode to receive the address of a private key, see `forge-std/Vm.sol::addr(uint)(address)`.\r\n\r\nIt would be great if we could get a cheatcode to receive the public key too. The public key should be returned in affine coordinates, e.g. `vm.pubKey(uint privkey)(uint xCoordinate, unit yCoordinate)`.\r\n\r\nTo receive the public key of a private key, you currently either have to implement an `ecMul` function in solidity, quickly leading to out-of-gas errors or use `ffi`, leading to big overhead and long-running testsuites.\n\n### Additional context\n\nIssue initially opened in `forge-std` repo: https://github.com/foundry-rs/forge-std/issues/356",
  "closed_by": {
    "login": "Evalir",
    "id": 26014927,
    "node_id": "MDQ6VXNlcjI2MDE0OTI3",
    "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Evalir",
    "html_url": "https://github.com/Evalir",
    "followers_url": "https://api.github.com/users/Evalir/followers",
    "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
    "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
    "organizations_url": "https://api.github.com/users/Evalir/orgs",
    "repos_url": "https://api.github.com/users/Evalir/repos",
    "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Evalir/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4790/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 2,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4790/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1517999114",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4790#issuecomment-1517999114",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4790",
    "id": 1517999114,
    "node_id": "IC_kwDOGBlvNc5aetQK",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T15:26:35Z",
    "updated_at": "2023-04-21T15:26:35Z",
    "author_association": "COLLABORATOR",
    "body": "Thanks! This is a good idea. What do you think of generalizing this a bit to something like this:\r\n\r\n```solidity\r\nstruct Wallet {\r\n  address addr;\r\n  uint256 publicKeyX;\r\n  uint256 publicKeyY;\r\n  uint256 privateKey;\r\n}\r\n\r\n// New cheats below:\r\n\r\n// Derives a private key from the name, labels the account with that name, and returns the wallet\r\nfunction createWallet(string calldata name) external returns (Wallet);\r\n\r\n// Generates a wallet from the private key and returns the wallet\r\nfunction createWallet(uint256 privateKey) external returns (Wallet);\r\n\r\n// Generates a wallet from the private key, labels the account with that name, and returns the wallet\r\nfunction createWallet(uint256 privateKey, string calldata name) external returns (Wallet);",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1517999114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1518010459",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4790#issuecomment-1518010459",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4790",
    "id": 1518010459,
    "node_id": "IC_kwDOGBlvNc5aewBb",
    "user": {
      "login": "pmerkleplant",
      "id": 85061506,
      "node_id": "MDQ6VXNlcjg1MDYxNTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/85061506?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmerkleplant",
      "html_url": "https://github.com/pmerkleplant",
      "followers_url": "https://api.github.com/users/pmerkleplant/followers",
      "following_url": "https://api.github.com/users/pmerkleplant/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmerkleplant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmerkleplant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmerkleplant/subscriptions",
      "organizations_url": "https://api.github.com/users/pmerkleplant/orgs",
      "repos_url": "https://api.github.com/users/pmerkleplant/repos",
      "events_url": "https://api.github.com/users/pmerkleplant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmerkleplant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T15:36:15Z",
    "updated_at": "2023-04-21T15:36:15Z",
    "author_association": "NONE",
    "body": "This looks great!\r\n\r\nThere are two more functions I can think of that may benefit from being implemented for such a `Wallet` type:\r\n```solidity\r\nfunction sign(uint256 privateKey, bytes32 digest) external pure returns (uint8 v, bytes32 r, bytes32 s);\r\nfunction getNonce(address account) external view returns (uint64 nonce);\r\n\r\n// For Wallet:\r\nfunction sign(Wallet calldata wallet, bytes32 digest) external pure returns (uint8, bytes32, bytes32);\r\nfunction getNonce(Wallet calldata wallet) external pure returns (unit);\r\n```\r\n\r\nThis is probably more of an issue for `forge-std` though. `StdWallet.sol` sounds intriguing ;)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1518010459/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1518020844",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4790#issuecomment-1518020844",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4790",
    "id": 1518020844,
    "node_id": "IC_kwDOGBlvNc5aeyjs",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T15:45:46Z",
    "updated_at": "2023-04-21T15:45:46Z",
    "author_association": "COLLABORATOR",
    "body": "> This is probably more of an issue for `forge-std` though. `StdWallet.sol` sounds intriguing ;)\r\n\r\nActually per https://github.com/foundry-rs/foundry/issues/3782 we'll end up upstreaming most of those things, and this does feel like a good simple one to upstream from the start. Those extra cheats/overloads make sense to me though\r\n\r\ncc'ing @jameswenzel since you might be interested in this discussion per https://github.com/foundry-rs/forge-std/pull/331",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1518020844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1585442137",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4790#issuecomment-1585442137",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4790",
    "id": 1585442137,
    "node_id": "IC_kwDOGBlvNc5ef-1Z",
    "user": {
      "login": "drewstone",
      "id": 13153687,
      "node_id": "MDQ6VXNlcjEzMTUzNjg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13153687?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drewstone",
      "html_url": "https://github.com/drewstone",
      "followers_url": "https://api.github.com/users/drewstone/followers",
      "following_url": "https://api.github.com/users/drewstone/following{/other_user}",
      "gists_url": "https://api.github.com/users/drewstone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drewstone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drewstone/subscriptions",
      "organizations_url": "https://api.github.com/users/drewstone/orgs",
      "repos_url": "https://api.github.com/users/drewstone/repos",
      "events_url": "https://api.github.com/users/drewstone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drewstone/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-10T03:10:07Z",
    "updated_at": "2023-06-10T03:10:07Z",
    "author_association": "NONE",
    "body": "I guess the hacky way to get the pubkey would be to sign something and recover the pubkey with ecrecover. Though, I'm looking forward to this feature!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1585442137/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1588730770",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4790#issuecomment-1588730770",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4790",
    "id": 1588730770,
    "node_id": "IC_kwDOGBlvNc5eshuS",
    "user": {
      "login": "pmerkleplant",
      "id": 85061506,
      "node_id": "MDQ6VXNlcjg1MDYxNTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/85061506?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmerkleplant",
      "html_url": "https://github.com/pmerkleplant",
      "followers_url": "https://api.github.com/users/pmerkleplant/followers",
      "following_url": "https://api.github.com/users/pmerkleplant/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmerkleplant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmerkleplant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmerkleplant/subscriptions",
      "organizations_url": "https://api.github.com/users/pmerkleplant/orgs",
      "repos_url": "https://api.github.com/users/pmerkleplant/repos",
      "events_url": "https://api.github.com/users/pmerkleplant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmerkleplant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-13T07:44:46Z",
    "updated_at": "2023-06-13T07:44:46Z",
    "author_association": "NONE",
    "body": "> recover the pubkey with ecrecover.\r\n\r\nThat's the issue, `ecrecover` does not return the signer's public key but its Ethereum address, see [here](https://www.evm.codes/precompiled#0x01?fork=shanghai).",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1588730770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1589565696",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4790#issuecomment-1589565696",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4790",
    "id": 1589565696,
    "node_id": "IC_kwDOGBlvNc5evtkA",
    "user": {
      "login": "drewstone",
      "id": 13153687,
      "node_id": "MDQ6VXNlcjEzMTUzNjg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13153687?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drewstone",
      "html_url": "https://github.com/drewstone",
      "followers_url": "https://api.github.com/users/drewstone/followers",
      "following_url": "https://api.github.com/users/drewstone/following{/other_user}",
      "gists_url": "https://api.github.com/users/drewstone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drewstone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drewstone/subscriptions",
      "organizations_url": "https://api.github.com/users/drewstone/orgs",
      "repos_url": "https://api.github.com/users/drewstone/repos",
      "events_url": "https://api.github.com/users/drewstone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drewstone/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-13T15:40:07Z",
    "updated_at": "2023-06-13T15:40:07Z",
    "author_association": "NONE",
    "body": "Gotcha ok, mis-spoke.\r\n\r\nOn Tue, Jun 13, 2023 at 12:44 AM merkleplant ***@***.***>\r\nwrote:\r\n\r\n> recover the pubkey with ecrecover.\r\n>\r\n> That's the issue, ecrecover does not return the signer's public key but\r\n> its Ethereum address, see here\r\n> <https://www.evm.codes/precompiled#0x01?fork=shanghai>.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/foundry-rs/foundry/issues/4790#issuecomment-1588730770>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/ADELLF36TONKK5PPPMQ4CM3XLAK7TANCNFSM6AAAAAAXG724V4>\r\n> .\r\n> You are receiving this because you commented.Message ID:\r\n> ***@***.***>\r\n>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1589565696/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1679085048",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4790#issuecomment-1679085048",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4790",
    "id": 1679085048,
    "node_id": "IC_kwDOGBlvNc5kFM34",
    "user": {
      "login": "Evalir",
      "id": 26014927,
      "node_id": "MDQ6VXNlcjI2MDE0OTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evalir",
      "html_url": "https://github.com/Evalir",
      "followers_url": "https://api.github.com/users/Evalir/followers",
      "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
      "organizations_url": "https://api.github.com/users/Evalir/orgs",
      "repos_url": "https://api.github.com/users/Evalir/repos",
      "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evalir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-15T14:59:30Z",
    "updated_at": "2023-08-15T14:59:30Z",
    "author_association": "MEMBER",
    "body": "Closed with #5332",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1679085048/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
