{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3837",
  "id": 1475845839,
  "node_id": "I_kwDOGBlvNc5X957P",
  "number": 3837,
  "title": "Where does `anvil` store fork's state?",
  "user": {
    "login": "xphoniex",
    "id": 14107758,
    "node_id": "MDQ6VXNlcjE0MTA3NzU4",
    "avatar_url": "https://avatars.githubusercontent.com/u/14107758?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/xphoniex",
    "html_url": "https://github.com/xphoniex",
    "followers_url": "https://api.github.com/users/xphoniex/followers",
    "following_url": "https://api.github.com/users/xphoniex/following{/other_user}",
    "gists_url": "https://api.github.com/users/xphoniex/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/xphoniex/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/xphoniex/subscriptions",
    "organizations_url": "https://api.github.com/users/xphoniex/orgs",
    "repos_url": "https://api.github.com/users/xphoniex/repos",
    "events_url": "https://api.github.com/users/xphoniex/events{/privacy}",
    "received_events_url": "https://api.github.com/users/xphoniex/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394237,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjM3",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-question",
      "name": "T-question",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: question"
    },
    {
      "id": 4077188949,
      "node_id": "LA_kwDOGBlvNc7zBPdV",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-anvil",
      "name": "C-anvil",
      "color": "5319E7",
      "default": false,
      "description": "Command: anvil"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 17,
  "created_at": "2022-12-05T07:04:37Z",
  "updated_at": "2023-01-04T17:59:43Z",
  "closed_at": "2022-12-13T17:02:55Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I'm running `anvil --fork-url <rpc>` and first thing I noticed is that the logs don't show interactions with rpc, e.g:\r\n\r\n```\r\n$ cast balance 0x81...c7\r\n\r\n# anvil\r\neth_getBalance\r\n```\r\n\r\nwhereas I expect it to show something like:\r\n```\r\n# anvil\r\neth_getBalance\r\neth_getBalance (RPC https://rpc...)\r\n```\r\n\r\nregardless, I don't know where the state is stored. It seems like `anvil` retrieves bare minimum for the task and keeps it in-memory (?), in [`BlockchainDb`](https://github.com/foundry-rs/foundry/blob/master/evm/src/executor/fork/cache.rs) (?). \r\n\r\nI'm also seeing a file in `.foundry/cache/rpc/goerli/8077534` which is the chain/block I'm interacting with but it's not growing in size, so I'm assuming the state has to be kept in-memory.\r\n\r\nIf it is in-memory, then I suggest we add a flag so that state data can be stored on disk. This would enable further offline state retrieval which can be useful for CI purposes (e.g. committed to repo), as well as secure isolated environments.\r\n\r\nI'd be interested to implement it myself as well, if given some pointers on how the internals work.\r\n\r\nP.S. please consider creating a discord server.",
  "closed_by": {
    "login": "xphoniex",
    "id": 14107758,
    "node_id": "MDQ6VXNlcjE0MTA3NzU4",
    "avatar_url": "https://avatars.githubusercontent.com/u/14107758?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/xphoniex",
    "html_url": "https://github.com/xphoniex",
    "followers_url": "https://api.github.com/users/xphoniex/followers",
    "following_url": "https://api.github.com/users/xphoniex/following{/other_user}",
    "gists_url": "https://api.github.com/users/xphoniex/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/xphoniex/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/xphoniex/subscriptions",
    "organizations_url": "https://api.github.com/users/xphoniex/orgs",
    "repos_url": "https://api.github.com/users/xphoniex/repos",
    "events_url": "https://api.github.com/users/xphoniex/events{/privacy}",
    "received_events_url": "https://api.github.com/users/xphoniex/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1345616376",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3837#issuecomment-1345616376",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
    "id": 1345616376,
    "node_id": "IC_kwDOGBlvNc5QNHn4",
    "user": {
      "login": "xphoniex",
      "id": 14107758,
      "node_id": "MDQ6VXNlcjE0MTA3NzU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14107758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xphoniex",
      "html_url": "https://github.com/xphoniex",
      "followers_url": "https://api.github.com/users/xphoniex/followers",
      "following_url": "https://api.github.com/users/xphoniex/following{/other_user}",
      "gists_url": "https://api.github.com/users/xphoniex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xphoniex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xphoniex/subscriptions",
      "organizations_url": "https://api.github.com/users/xphoniex/orgs",
      "repos_url": "https://api.github.com/users/xphoniex/repos",
      "events_url": "https://api.github.com/users/xphoniex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xphoniex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-11T17:53:07Z",
    "updated_at": "2022-12-11T17:53:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mattsse polite reminder.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1345616376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1345647058",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3837#issuecomment-1345647058",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
    "id": 1345647058,
    "node_id": "IC_kwDOGBlvNc5QNPHS",
    "user": {
      "login": "xphoniex",
      "id": 14107758,
      "node_id": "MDQ6VXNlcjE0MTA3NzU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14107758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xphoniex",
      "html_url": "https://github.com/xphoniex",
      "followers_url": "https://api.github.com/users/xphoniex/followers",
      "following_url": "https://api.github.com/users/xphoniex/following{/other_user}",
      "gists_url": "https://api.github.com/users/xphoniex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xphoniex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xphoniex/subscriptions",
      "organizations_url": "https://api.github.com/users/xphoniex/orgs",
      "repos_url": "https://api.github.com/users/xphoniex/repos",
      "events_url": "https://api.github.com/users/xphoniex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xphoniex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-11T20:18:57Z",
    "updated_at": "2022-12-11T20:22:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay, I just realized that `cache` exists, and only gets flushed to disc when fork's block number is specified. (Setting `RUST_LOG=\"cache=trace\"` helps)\r\n\r\nHowever, if I disconnect my internet connection and run the `anvil` again, I'd get:\r\n\r\n```\r\nthread 'main' panicked at 'Failed to fetch network chain id: HTTPError(reqwest::Error { kind: Request, url: Url { scheme: \"https\", cannot_be_a_base: false, username: \"\", password: None, host: Some(Domain(\"...\")), port: None, path: \"/\", query: None, fragment: None }, source: hyper::Error(Connect, ConnectError(\"dns error\", Custom { kind: Uncategorized, error: \"failed to lookup address information: Name or service not known\" })) })', /github.com/foundry-rs/foundry/anvil/src/config.rs:746:58\r\n```\r\n\r\nObviously, any operation on `provider` such as [`provider.get_chainid()`](https://github.com/foundry-rs/foundry/blob/master/anvil/src/config.rs#L765) would now fail. Good news is, we have the required data stored, e.g. `chain_id`:\r\n\r\nstorage.json\r\n```\r\n{\"meta\":{\"cfg_env\":{\"chain_id\":\"0x5\" ...\r\n```\r\n\r\nnext issue is returning a `block` [here](https://github.com/foundry-rs/foundry/blob/master/anvil/src/config.rs#L788):\r\n```\r\n            let block = provider\r\n                .get_block(BlockNumber::Number(fork_block_number.into()))\r\n                .await\r\n                .expect(\"Failed to get fork block\");\r\n```\r\n\r\nwhich we can check for `--offline` or `--fork-chain-id` flag and return `Default::default()` instead.\r\n\r\nFinal issue is, `cache` [compares](https://github.com/foundry-rs/foundry/blob/master/evm/src/executor/fork/cache.rs#L44) metadata, and rejects the cache if they are not the same, before giving us access to cache.\r\n\r\nI then realized that only a few of the fields are different:\r\n```\r\nmeta = BlockchainDbMeta { cfg_env: CfgEnv { chain_id: 5, spec_id: LATEST, perf_all_precompiles_have_balance: false, perf_analyse_created_bytecodes: Analyse, limit_contract_code_size: None, memory_limit: 4294967295 }, block_env: BlockEnv { number: 8117594, coinbase: 0x0000000000000000000000000000000000000000, timestamp: 0, difficulty: 0, basefee: 1000000000, gas_limit: 30000000 }, hosts: {\"x.com\"} }\r\n\r\nexis = BlockchainDbMeta { cfg_env: CfgEnv { chain_id: 5, spec_id: LATEST, perf_all_precompiles_have_balance: false, perf_analyse_created_bytecodes: Analyse, limit_contract_code_size: None, memory_limit: 4294967295 }, block_env: BlockEnv { number: 8117594, coinbase: 0x0000000000000000000000000000000000000000, timestamp: 1670783616, difficulty: 0, basefee: 151409, gas_limit: 30000000 }, hosts: {\"x.com\"} }\r\n```\r\n\r\nif we somehow match or skip that, then our node spins up and we can interact with it. Note that I only checked for ETH balance so far.\r\n\r\nWe can read the json file separately and substitute the values in `block` or maybe skip the check altogether if an offline flag (`--offline` or `--fork-chain-id`) exists in [cache.rs](https://github.com/foundry-rs/foundry/blob/master/evm/src/executor/fork/cache.rs#L44).\r\n\r\nThoughts?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1345647058/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1346882545",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3837#issuecomment-1346882545",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
    "id": 1346882545,
    "node_id": "IC_kwDOGBlvNc5QR8vx",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-12T17:01:25Z",
    "updated_at": "2022-12-12T17:01:25Z",
    "author_association": "MEMBER",
    "body": "thanks for writing this down, however, I'm having a hard time parsing what the actual issue(s) are here.\r\n\r\nI looked at the corresponding PR, but having trouble understanding the exact motivation here and how this relates to this issue.\r\n\r\n\r\nrpc storage is flushed to disk on exit",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1346882545/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1346892528",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3837#issuecomment-1346892528",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
    "id": 1346892528,
    "node_id": "IC_kwDOGBlvNc5QR_Lw",
    "user": {
      "login": "xphoniex",
      "id": 14107758,
      "node_id": "MDQ6VXNlcjE0MTA3NzU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14107758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xphoniex",
      "html_url": "https://github.com/xphoniex",
      "followers_url": "https://api.github.com/users/xphoniex/followers",
      "following_url": "https://api.github.com/users/xphoniex/following{/other_user}",
      "gists_url": "https://api.github.com/users/xphoniex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xphoniex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xphoniex/subscriptions",
      "organizations_url": "https://api.github.com/users/xphoniex/orgs",
      "repos_url": "https://api.github.com/users/xphoniex/repos",
      "events_url": "https://api.github.com/users/xphoniex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xphoniex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-12T17:06:38Z",
    "updated_at": "2022-12-12T17:10:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "> thanks for writing this down, however, I'm having a hard time parsing what the actual issue(s) are here.\r\n> \r\n> I looked at the corresponding PR, but having trouble understanding the exact motivation here and how this relates to this issue.\r\n> \r\n> rpc storage is flushed to disk on exit\r\n\r\nI'm testing contracts inside an isolated network which provides increased security.\r\n\r\nThere is no route to public internet to begin with, so the only way to test against a fork is to move/commit state files of a certain block to a repository and test against that.\r\n\r\nMoving the state file (storage.json) alone is not enough because of the issues mentioned in the PR, and if merged, it wouldn't affect anything related to normal operations of a fork.\r\n\r\nDoes this make sense?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1346892528/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1346912293",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3837#issuecomment-1346912293",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
    "id": 1346912293,
    "node_id": "IC_kwDOGBlvNc5QSEAl",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-12T17:18:30Z",
    "updated_at": "2022-12-12T17:18:30Z",
    "author_association": "MEMBER",
    "body": "kinda but I'm still slow to understand this completely.\r\n\r\n> There is no route to public internet to begin with, so the only way to test against a fork is to move/commit state files of a certain block to a repository and test against that.\r\n\r\nI really don't understand this, because the matching cache file to the block-number will be picked up if it exists, no?\r\n\r\n> Moving the state file (storage.json) alone is not enough because of the issues mentioned in the PR,\r\n\r\nwhy is `--chain-id` not sufficient here?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1346912293/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1346930130",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3837#issuecomment-1346930130",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
    "id": 1346930130,
    "node_id": "IC_kwDOGBlvNc5QSIXS",
    "user": {
      "login": "xphoniex",
      "id": 14107758,
      "node_id": "MDQ6VXNlcjE0MTA3NzU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14107758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xphoniex",
      "html_url": "https://github.com/xphoniex",
      "followers_url": "https://api.github.com/users/xphoniex/followers",
      "following_url": "https://api.github.com/users/xphoniex/following{/other_user}",
      "gists_url": "https://api.github.com/users/xphoniex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xphoniex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xphoniex/subscriptions",
      "organizations_url": "https://api.github.com/users/xphoniex/orgs",
      "repos_url": "https://api.github.com/users/xphoniex/repos",
      "events_url": "https://api.github.com/users/xphoniex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xphoniex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-12T17:32:28Z",
    "updated_at": "2022-12-12T17:32:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I really don't understand this, because the matching cache file to the block-number will be picked up if it exists, no?\r\n\r\nYes, but not before making two http(s) requests to remote endpoint, which will panic when not connected to internet:\r\n```\r\nthread 'main' panicked at 'Failed to fetch network chain id: HTTPError(reqwest::Error { kind: Request, url: Url { scheme: \"https\", cannot_be_a_base: false, username: \"\", password: None, host: Some(Domain(\"...\")), port: None, path: \"/\", query: None, fragment: None }, source: hyper::Error(Connect, ConnectError(\"dns error\", Custom { kind: Uncategorized, error: \"failed to lookup address information: Name or service not known\" })) })', /github.com/foundry-rs/foundry/anvil/src/config.rs:746:58\r\n```\r\n\r\n> why is `--chain-id` not sufficient here?\r\n\r\n`--fork-chain-id` is basically synonyms with \"start anvil only from offline cache, and skip meta check\", whereas `--chain-id` has got nothing to do with a fork and could mean start a testnet with my own 0x9 id or whatever. \r\n\r\nto give you a code example:\r\n```\r\n            let block = if self.fork_chain_id.is_some() {\r\n                Some(Default::default())\r\n            } else {\r\n                provider\r\n                .get_block(BlockNumber::Number(fork_block_number.into()))\r\n                .await\r\n                .expect(\"Failed to get fork block\")\r\n            };\r\n```\r\n\r\nyou don't want to create a default `block` when `--chain-id` is set, that's only something you want to do when `--fork-chain-id` is set. (because with in offline-fork, you don't have access to `block` and don't want to retrieve it from remote).",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1346930130/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1346932013",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3837#issuecomment-1346932013",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
    "id": 1346932013,
    "node_id": "IC_kwDOGBlvNc5QSI0t",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-12T17:34:10Z",
    "updated_at": "2022-12-12T17:34:10Z",
    "author_association": "MEMBER",
    "body": "okay, thanks for clearing this up. I believe I get it now.\r\n\r\nSupportive of an offline feature, \r\n\r\nwdyt about adding an `--offline` flag instead? would this have the same effect?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1346932013/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1346937361",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3837#issuecomment-1346937361",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
    "id": 1346937361,
    "node_id": "IC_kwDOGBlvNc5QSKIR",
    "user": {
      "login": "xphoniex",
      "id": 14107758,
      "node_id": "MDQ6VXNlcjE0MTA3NzU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14107758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xphoniex",
      "html_url": "https://github.com/xphoniex",
      "followers_url": "https://api.github.com/users/xphoniex/followers",
      "following_url": "https://api.github.com/users/xphoniex/following{/other_user}",
      "gists_url": "https://api.github.com/users/xphoniex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xphoniex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xphoniex/subscriptions",
      "organizations_url": "https://api.github.com/users/xphoniex/orgs",
      "repos_url": "https://api.github.com/users/xphoniex/repos",
      "events_url": "https://api.github.com/users/xphoniex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xphoniex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-12T17:38:11Z",
    "updated_at": "2022-12-12T17:38:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "> okay, thanks for clearing this up. I believe I get it now.\r\n> \r\n> Supportive of an offline feature,\r\n> \r\n> wdyt about adding an `--offline` flag instead? would this have the same effect?\r\n\r\nI already had added a `--fork-offline` flag, but removed it in favor of  `--fork-chain-id` because:\r\n\r\n1. with current implementation, it's not really just \"offline\", it's an \"offline-start\".\r\n2. you still need to pass `chain-id` somehow, even if you use `--offline` because there's no way for anvil to pick up where to look for the config.json file. e.g. initially it'd look for it in `/hardhat-env/config.json`. it's a chicken-and-egg problem.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1346937361/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1346944516",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3837#issuecomment-1346944516",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
    "id": 1346944516,
    "node_id": "IC_kwDOGBlvNc5QSL4E",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-12T17:44:32Z",
    "updated_at": "2022-12-12T17:44:32Z",
    "author_association": "MEMBER",
    "body": "I see, that makes sense if you want to use the cache file of chain x but override with y, right?\r\n\r\nbut, correct me, isn't `--fork-chain-id` then just --offline + `--chain-id` ?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1346944516/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1347076811",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3837#issuecomment-1347076811",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
    "id": 1347076811,
    "node_id": "IC_kwDOGBlvNc5QSsLL",
    "user": {
      "login": "xphoniex",
      "id": 14107758,
      "node_id": "MDQ6VXNlcjE0MTA3NzU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14107758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xphoniex",
      "html_url": "https://github.com/xphoniex",
      "followers_url": "https://api.github.com/users/xphoniex/followers",
      "following_url": "https://api.github.com/users/xphoniex/following{/other_user}",
      "gists_url": "https://api.github.com/users/xphoniex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xphoniex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xphoniex/subscriptions",
      "organizations_url": "https://api.github.com/users/xphoniex/orgs",
      "repos_url": "https://api.github.com/users/xphoniex/repos",
      "events_url": "https://api.github.com/users/xphoniex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xphoniex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-12T18:51:00Z",
    "updated_at": "2022-12-12T18:54:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I see, that makes sense if you want to use the cache file of chain x but override with y, right?\r\n\r\nNot sure what you mean. Chain number is overridden by the cache file and we only need the chain id in order to know which folder to look for config.json in the first place.\r\n\r\n> but, correct me, isn't `--fork-chain-id` then just --offline + `--chain-id` ?\r\n\r\nYes. let's call `--offline`, `--local-start` from now on or something like that. In case you use two flags, that'd be more verbose, e.g.:\r\n\r\n```\r\n            let (fork_block_number, fork_chain_id) =\r\n                if let Some(fork_block_number) = self.fork_block_number {\r\n                    let chain_id = if let Some(chain_id) = self.fork_chain_id {\r\n                        Some(chain_id)\r\n```\r\n\r\nbecomes\r\n\r\n```\r\n            let (fork_block_number, fork_chain_id) =\r\n                if let Some(fork_block_number) = self.fork_block_number {\r\n                    let chain_id = if self.chain_id.is_some() && self.local_start() {\r\n                        Some(self.chain_id.clone().unwrap())\r\n```\r\n                    \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1347076811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1347852597",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3837#issuecomment-1347852597",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
    "id": 1347852597,
    "node_id": "IC_kwDOGBlvNc5QVpk1",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-13T07:23:43Z",
    "updated_at": "2022-12-13T07:23:43Z",
    "author_association": "MEMBER",
    "body": "gotcha, thanks for guiding me through this.\r\n\r\nI'll have a closer look at the PR in a bit but this should be a reasonable addon. thanks",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1347852597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1370301311",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3837#issuecomment-1370301311",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
    "id": 1370301311,
    "node_id": "IC_kwDOGBlvNc5RrSN_",
    "user": {
      "login": "0xalecks",
      "id": 99347981,
      "node_id": "U_kgDOBevuDQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/99347981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xalecks",
      "html_url": "https://github.com/0xalecks",
      "followers_url": "https://api.github.com/users/0xalecks/followers",
      "following_url": "https://api.github.com/users/0xalecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xalecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xalecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xalecks/subscriptions",
      "organizations_url": "https://api.github.com/users/0xalecks/orgs",
      "repos_url": "https://api.github.com/users/0xalecks/repos",
      "events_url": "https://api.github.com/users/0xalecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xalecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T22:48:12Z",
    "updated_at": "2023-01-03T22:48:12Z",
    "author_association": "NONE",
    "body": "@xphoniex Did you have to do anything special (edit the storage.json file?) to get anvil to load the state? \r\n\r\nI can get Anvil to save the state by starting with:\r\n```\r\nanvil \\\r\n--fork-url https://whatever \\\r\n--chain-id 1337 \\\r\n--fork-block-number 16328288\r\n```\r\n\r\nI see the storage file in ~/.foundry/cache/rpc/dev/16328288/storage.json\r\n\r\nBut when I restart it with:\r\n```\r\nanvil \\\r\n--fork-url https://whatever \\\r\n--chain-id 1337 \\\r\n--fork-block-number 16328288\r\n--fork-chain-id 1\r\n```\r\n\r\n.. the state isn't there, shows blockhash 0x0...0\r\n\r\nDid you do anything different to restore the state?\r\n\r\nThanks",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1370301311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1370303823",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3837#issuecomment-1370303823",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
    "id": 1370303823,
    "node_id": "IC_kwDOGBlvNc5RrS1P",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T22:52:19Z",
    "updated_at": "2023-01-03T22:52:19Z",
    "author_association": "MEMBER",
    "body": "> the state isn't there, shows blockhash 0x0...0\r\n\r\ncan you please elaborate on this?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1370303823/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1370375908",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3837#issuecomment-1370375908",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
    "id": 1370375908,
    "node_id": "IC_kwDOGBlvNc5Rrkbk",
    "user": {
      "login": "0xalecks",
      "id": 99347981,
      "node_id": "U_kgDOBevuDQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/99347981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xalecks",
      "html_url": "https://github.com/0xalecks",
      "followers_url": "https://api.github.com/users/0xalecks/followers",
      "following_url": "https://api.github.com/users/0xalecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xalecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xalecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xalecks/subscriptions",
      "organizations_url": "https://api.github.com/users/0xalecks/orgs",
      "repos_url": "https://api.github.com/users/0xalecks/repos",
      "events_url": "https://api.github.com/users/0xalecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xalecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-04T00:59:42Z",
    "updated_at": "2023-01-04T01:00:44Z",
    "author_association": "NONE",
    "body": "> can you please elaborate on this?\r\n\r\nAnvil startup shows this in logs:\r\n```\r\nFork\r\n==================\r\nEndpoint:       https://eth-mainnet.g.alchemy.com/v2/ID\r\nBlock number:   16328288\r\nBlock hash:     0x0000000000000000000000000000000000000000000000000000000000000000\r\nChain ID:       1337\r\n\r\n```\r\n\r\nBlock hash shows an actual value when starting w/o --fork-chain-id option\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1370375908/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1370802970",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3837#issuecomment-1370802970",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
    "id": 1370802970,
    "node_id": "IC_kwDOGBlvNc5RtMsa",
    "user": {
      "login": "xphoniex",
      "id": 14107758,
      "node_id": "MDQ6VXNlcjE0MTA3NzU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14107758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xphoniex",
      "html_url": "https://github.com/xphoniex",
      "followers_url": "https://api.github.com/users/xphoniex/followers",
      "following_url": "https://api.github.com/users/xphoniex/following{/other_user}",
      "gists_url": "https://api.github.com/users/xphoniex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xphoniex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xphoniex/subscriptions",
      "organizations_url": "https://api.github.com/users/xphoniex/orgs",
      "repos_url": "https://api.github.com/users/xphoniex/repos",
      "events_url": "https://api.github.com/users/xphoniex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xphoniex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-04T11:23:38Z",
    "updated_at": "2023-01-04T11:23:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "The state is there, only blockhash is missing (read the whole issue and adjacent pr to know why).\r\n\r\nTry running a command which retrieves actual state, e.g. `cast balance <some_address>` and report back if it's not there.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1370802970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1371009037",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3837#issuecomment-1371009037",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
    "id": 1371009037,
    "node_id": "IC_kwDOGBlvNc5Rt_AN",
    "user": {
      "login": "0xalecks",
      "id": 99347981,
      "node_id": "U_kgDOBevuDQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/99347981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xalecks",
      "html_url": "https://github.com/0xalecks",
      "followers_url": "https://api.github.com/users/0xalecks/followers",
      "following_url": "https://api.github.com/users/0xalecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xalecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xalecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xalecks/subscriptions",
      "organizations_url": "https://api.github.com/users/0xalecks/orgs",
      "repos_url": "https://api.github.com/users/0xalecks/repos",
      "events_url": "https://api.github.com/users/0xalecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xalecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-04T14:37:14Z",
    "updated_at": "2023-01-04T14:37:14Z",
    "author_association": "NONE",
    "body": "Yes you're right, the state is there, at least in part. I think there's another issue going on as well as me not understanding things properly. I just now realized that storage.json only stores the state from upstream. If I change the state in Anvil after forking, those changes are not going to be stored in storage.json. That was my first mistaken assumption.\r\n\r\nHaving said that, contract calls don't work for some reason against the loaded storage.json state. cast balance X works, but if I try to read an ERC20 balance, it fails with `EVM error PrevrandaoNotSet` (and yes I read the balance previously, when saving the state file). Either way, even if this worked, it doesn't help me since I need the state with changes. \r\n\r\nI wish --dump-state and --load-state would work when using a fork :/\r\n\r\nAnyways, thanks for the tip!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1371009037/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1371247263",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3837#issuecomment-1371247263",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3837",
    "id": 1371247263,
    "node_id": "IC_kwDOGBlvNc5Ru5Kf",
    "user": {
      "login": "xphoniex",
      "id": 14107758,
      "node_id": "MDQ6VXNlcjE0MTA3NzU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14107758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xphoniex",
      "html_url": "https://github.com/xphoniex",
      "followers_url": "https://api.github.com/users/xphoniex/followers",
      "following_url": "https://api.github.com/users/xphoniex/following{/other_user}",
      "gists_url": "https://api.github.com/users/xphoniex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xphoniex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xphoniex/subscriptions",
      "organizations_url": "https://api.github.com/users/xphoniex/orgs",
      "repos_url": "https://api.github.com/users/xphoniex/repos",
      "events_url": "https://api.github.com/users/xphoniex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xphoniex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-04T17:59:42Z",
    "updated_at": "2023-01-04T17:59:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was not able to run anvil offline yet because of this [issue](https://github.com/foundry-rs/foundry/issues/3050). I'll revisit what you said once I can get it working, and hopefully fix contract calls as well. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1371247263/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
