{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1740",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1740/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1740/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1740/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1740",
  "id": 1249147872,
  "node_id": "I_kwDOGBlvNc5KdHvg",
  "number": 1740,
  "title": "Trying to compile generates unable to resolve import and expected pragma error",
  "user": {
    "login": "bitcoinmeetups",
    "id": 2834754,
    "node_id": "MDQ6VXNlcjI4MzQ3NTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2834754?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bitcoinmeetups",
    "html_url": "https://github.com/bitcoinmeetups",
    "followers_url": "https://api.github.com/users/bitcoinmeetups/followers",
    "following_url": "https://api.github.com/users/bitcoinmeetups/following{/other_user}",
    "gists_url": "https://api.github.com/users/bitcoinmeetups/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bitcoinmeetups/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bitcoinmeetups/subscriptions",
    "organizations_url": "https://api.github.com/users/bitcoinmeetups/orgs",
    "repos_url": "https://api.github.com/users/bitcoinmeetups/repos",
    "events_url": "https://api.github.com/users/bitcoinmeetups/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bitcoinmeetups/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-05-26T06:16:40Z",
  "updated_at": "2022-05-27T16:33:07Z",
  "closed_at": "2022-05-27T16:33:07Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Trying to compile this:\r\n\r\n```solidity\r\npragma solidity ^0.8.0;\r\n\r\n import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\n import \"@openzeppelin/contracts/utils/Counters.sol\";\r\n\r\n contract NFT is ERC721 {\r\n     using Counters for Counters.Counter;\r\n     Counters.Counter private currentTokenId;\r\n\r\n     constructor() ERC721(\"NFTTutorial\", \"NFT\") {}\r\n\r\n     function mintTo(address recipient)\r\n         public\r\n         returns (uint256)\r\n     {\r\n         currentTokenId.increment();\r\n         uint256 newItemId = currentTokenId.current();\r\n         _safeMint(recipient, newItemId);\r\n         return newItemId;\r\n     }\r\n }\r\n```\r\n\r\nGenerates this error message:\r\n\r\n```\r\n[⠰] Unable to resolve import: \"@openzeppelin/contracts/utils/Counters.sol\" with remappings:\r\n        ds-test/=/home/pi/forge6/lib/solmate/lib/ds-test/src/\r\n        forge-std/=/home/pi/forge6/lib/forge-std/src/\r\n        openzeppelin-contracts/=/home/pi/forge6/lib/openzeppelin-contracts/\r\n        solmate/=/home/pi/forge6/lib/solmate/src/\r\n        src/=/home/pi/forge6/src/\r\n[⠔] Compiling 1 files with 0.8.13\r\n[⠒] Solc 0.8.13 finished in 6.85ms\r\nError:\r\n   0: Compiler run failed\r\n      error[7858]: ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.\r\n       --> /home/pi/forge6/src/NFT.sol:1:1:\r\n        |\r\n      1 | [ Submit ]// SPDX-License-Identifier: MIT\r\n        | ^\r\n\r\n\r\n   0:\r\n```\r\n\r\nI would like to say something. These tools are a bit difficult to work with. There's a lot of error messages. Thing is, if normal web developers find them difficult to work with then everyone will just switch to solana or something like that. I want ethereum to work but making an ERC-20 and an ERC-721 is not something that should be difficult or generate a lot of error messages. It's something that everyone in the world should be able to do. The platform that can empower everyday users with something like ERC-20 and ERC-721 tools conveniently is the platform that will win the users.\r\n   Maybe someone should just write another unix tool on top of foundry which makes it super easy to make an ERC-20 and an ERC-721, a bit like the gochain/web3 tool. There has been attempts. But timing is a bit of the essence now. Everyone wants to make NFT's these days. Can ethereum and L2 deliver tools that everyone can use?\r\n   Love foundry, just wish there was like one higher-level tool built on top of foundry or even implemented into foundry so everyone can make at least an ERC-20 and an ERC-721 in 5 seconds with unix piping and bash in a one-liner without thinking about imports, error messages, deserialization, underpriced transactions and so on.",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1740/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1740/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1139779423",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1740#issuecomment-1139779423",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1740",
    "id": 1139779423,
    "node_id": "IC_kwDOGBlvNc5D76df",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-27T16:33:07Z",
    "updated_at": "2022-05-27T16:33:07Z",
    "author_association": "MEMBER",
    "body": "For the first error you need to setup your remappings: https://book.getfoundry.sh/projects/dependencies.html#remapping-dependencies\r\n\r\nSpecifically, you need a remapping that looks like:\r\n\r\n```\r\n@openzeppelin/=lib/openzeppelin-contracts/\r\n```\r\n\r\nFor the second error, it tells you where the error is:\r\n\r\n```\r\nError:\r\n   0: Compiler run failed\r\n      error[7858]: ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.\r\n       --> /home/pi/forge6/src/NFT.sol:1:1:\r\n        |\r\n      1 | [ Submit ]// SPDX-License-Identifier: MIT\r\n        | ^\r\n```\r\n\r\nYou have some text that is not valid Solidity in your `NFT.sol` file: it says `[ Submit ]`, but that's not valid.\r\n\r\n>I would like to say something. These tools are a bit difficult to work with. There's a lot of error messages. Thing is, if normal web developers find them difficult to work with then everyone will just switch to solana or something like that.\r\n\r\nThis is a bit off-topic, but I don't think this is true. Solana is also difficult to use since the programs are mostly written in Rust. If you just want to create an ERC20 or ERC721 and deploy it without bothering with code, it's possible to use one of the many available visual tools. For example, OpenZeppelin has one: https://docs.openzeppelin.com/contracts/4.x/wizard\r\n\r\nI'm closing this since it's not a bug in Foundry, but feel free to ask for help on Telegram: https://t.me/foundry_support :smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1139779423/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
