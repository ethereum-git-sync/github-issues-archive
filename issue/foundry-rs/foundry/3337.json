{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3337",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3337/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3337/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3337/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3337",
  "id": 1384735221,
  "node_id": "I_kwDOGBlvNc5SiWH1",
  "number": 3337,
  "title": "forge fails to compile contracts although pragmas seem to be set correctly",
  "user": {
    "login": "samtvlabs",
    "id": 112424909,
    "node_id": "U_kgDOBrN3zQ",
    "avatar_url": "https://avatars.githubusercontent.com/u/112424909?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/samtvlabs",
    "html_url": "https://github.com/samtvlabs",
    "followers_url": "https://api.github.com/users/samtvlabs/followers",
    "following_url": "https://api.github.com/users/samtvlabs/following{/other_user}",
    "gists_url": "https://api.github.com/users/samtvlabs/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/samtvlabs/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/samtvlabs/subscriptions",
    "organizations_url": "https://api.github.com/users/samtvlabs/orgs",
    "repos_url": "https://api.github.com/users/samtvlabs/repos",
    "events_url": "https://api.github.com/users/samtvlabs/events{/privacy}",
    "received_events_url": "https://api.github.com/users/samtvlabs/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-09-24T16:31:53Z",
  "updated_at": "2022-09-24T19:27:10Z",
  "closed_at": "2022-09-24T19:27:10Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [X] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (ddaf100 2022-09-24T00:05:44.382307Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nforge build\r\n\r\n### Operating System\r\n\r\nmacOS (Intel)\r\n\r\n### Describe the bug\r\n\r\nI am working with balancer v2 contracts which require solc 0.7.0. \r\n\r\nI have therefore set all my contracts to 0.7.0.\r\n\r\nHowever , when I try to build them , I hit the following error.\r\n\r\n```\r\nDiscovered incompatible solidity versions in following\r\n: src/Custody.sol (0.7.0) imports:\r\n    lib/openzeppelin-contracts/contracts/access/Ownable.sol (^0.8.0)\r\n    src/utils/Errors.sol (0.7.0)\r\n    lib/openzeppelin-contracts/contracts/utils/Context.sol (^0.8.0)\r\nDiscovered incompatible solidity versions in following\r\n: src/Gateway.sol (0.7.0) imports:\r\n    src/interfaces/ICustody.sol (0.8.17)\r\n    src/interfaces/IAMB.sol (>= 0.7.5)\r\n    src/utils/Errors.sol (0.7.0)\r\nDiscovered incompatible solidity versions in following\r\n: test/Custody.t.sol (0.7.0) imports:\r\n    lib/forge-std/src/Test.sol (>=0.6.0 <0.9.0)\r\n    src/Custody.sol (0.7.0)\r\n    src/Gateway.sol (0.7.0)\r\n    lib/forge-std/src/Script.sol (>=0.6.0 <0.9.0)\r\n    lib/forge-std/lib/ds-test/src/test.sol (>=0.5.0)\r\n    lib/openzeppelin-contracts/contracts/access/Ownable.sol (^0.8.0)\r\n    src/utils/Errors.sol (0.7.0)\r\n    src/interfaces/ICustody.sol (0.8.17)\r\n    src/interfaces/IAMB.sol (>= 0.7.5)\r\n    src/utils/Errors.sol (0.7.0)\r\n    lib/forge-std/src/console.sol (>=0.4.22 <0.9.0)\r\n    lib/forge-std/src/console2.sol (>=0.4.22 <0.9.0)\r\n    lib/forge-std/src/StdJson.sol (>=0.6.0 <0.9.0)\r\n    lib/openzeppelin-contracts/contracts/utils/Context.sol (^0.8.0)\r\n    lib/forge-std/src/Vm.sol (>=0.6.0 <0.9.0)\r\nDiscovered incompatible solidity versions in following\r\n: test/Nexus.t.sol (0.7.0) imports:\r\n    lib/forge-std/src/Test.sol (>=0.6.0 <0.9.0)\r\n    src/Nexus.sol (0.7.0)\r\n    src/Gateway.sol (0.7.0)\r\n    lib/forge-std/src/Script.sol (>=0.6.0 <0.9.0)\r\n    lib/forge-std/lib/ds-test/src/test.sol (>=0.5.0)\r\n    src/interfaces/balancer/IVault.sol (0.7.0)\r\n    src/interfaces/ICustody.sol (0.8.17)\r\n    src/interfaces/IAMB.sol (>= 0.7.5)\r\n    src/utils/Errors.sol (0.7.0)\r\n    lib/forge-std/src/console.sol (>=0.4.22 <0.9.0)\r\n    lib/forge-std/src/console2.sol (>=0.4.22 <0.9.0)\r\n    lib/forge-std/src/StdJson.sol (>=0.6.0 <0.9.0)\r\n    src/interfaces/balancer/IERC20.sol (0.7.0)\r\n    src/interfaces/balancer/IWETH.sol (0.7.0)\r\n    src/interfaces/balancer/IAsset.sol (0.7.0)\r\n    src/interfaces/balancer/IAuthorizer.sol (0.7.0)\r\n    src/interfaces/balancer/IFlashLoanRecipient.sol (0.7.0)\r\n    src/interfaces/balancer/ProtocolFeesCollector.sol (0.7.0)\r\n    src/interfaces/balancer/ISignaturesValidator.sol (0.7.0)\r\n    src/interfaces/balancer/ITemporarilyPausable.sol (0.7.0)\r\n    lib/forge-std/src/Vm.sol (>=0.6.0 <0.9.0)\r\n    src/interfaces/balancer/IERC20.sol (0.7.0)\r\n    src/interfaces/balancer/IERC20.sol (0.7.0)\r\n    src/interfaces/balancer/IERC20.sol (0.7.0)\r\n    src/interfaces/balancer/InputHelpers.sol (0.7.0)\r\n    src/interfaces/balancer/Authentication.sol (0.7.0)\r\n    src/interfaces/balancer/ReentrancyGuard.sol (0.7.0)\r\n    src/interfaces/balancer/SafeERC20.sol (0.7.0)\r\n    src/interfaces/balancer/IVault.sol (0.7.0)\r\n    src/interfaces/balancer/IAuthorizer.sol (0.7.0)\r\n    src/interfaces/balancer/IERC20.sol (0.7.0)\r\n    src/interfaces/balancer/BalancerErrors.sol (0.7.0)\r\n    src/interfaces/balancer/IAsset.sol (0.7.0)\r\n    src/interfaces/balancer/BalancerErrors.sol (0.7.0)\r\n    src/interfaces/balancer/IAuthentication.sol (0.7.0)\r\n    src/interfaces/balancer/BalancerErrors.sol (0.7.0)\r\n    src/interfaces/balancer/BalancerErrors.sol (0.7.0)\r\n    src/interfaces/balancer/IERC20.sol (0.7.0)\r\nDiscovered incompatible solidity versions in following\r\n: test/PSM.t.sol (0.7.0) imports:\r\n    lib/forge-std/src/Test.sol (>=0.6.0 <0.9.0)\r\n    src/PSM.sol (0.8.17)\r\n    lib/forge-std/src/Script.sol (>=0.6.0 <0.9.0)\r\n    lib/forge-std/lib/ds-test/src/test.sol (>=0.5.0)\r\n    lib/forge-std/src/console.sol (>=0.4.22 <0.9.0)\r\n    lib/forge-std/src/console2.sol (>=0.4.22 <0.9.0)\r\n    lib/forge-std/src/StdJson.sol (>=0.6.0 <0.9.0)\r\n    lib/forge-std/src/Vm.sol (>=0.6.0 <0.9.0)\r\n  ```\r\n  \r\n  I would appreciate some clarity on this.",
  "closed_by": {
    "login": "samtvlabs",
    "id": 112424909,
    "node_id": "U_kgDOBrN3zQ",
    "avatar_url": "https://avatars.githubusercontent.com/u/112424909?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/samtvlabs",
    "html_url": "https://github.com/samtvlabs",
    "followers_url": "https://api.github.com/users/samtvlabs/followers",
    "following_url": "https://api.github.com/users/samtvlabs/following{/other_user}",
    "gists_url": "https://api.github.com/users/samtvlabs/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/samtvlabs/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/samtvlabs/subscriptions",
    "organizations_url": "https://api.github.com/users/samtvlabs/orgs",
    "repos_url": "https://api.github.com/users/samtvlabs/repos",
    "events_url": "https://api.github.com/users/samtvlabs/events{/privacy}",
    "received_events_url": "https://api.github.com/users/samtvlabs/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3337/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3337/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1257010835",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3337#issuecomment-1257010835",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3337",
    "id": 1257010835,
    "node_id": "IC_kwDOGBlvNc5K7HaT",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-24T16:43:17Z",
    "updated_at": "2022-09-24T16:43:17Z",
    "author_association": "MEMBER",
    "body": "there are contracts that are semver incompatible with =0.7.0 like\r\n\r\n> lib/openzeppelin-contracts/contracts/access/Ownable.sol (^0.8.0)\r\n\r\n> src/interfaces/IAMB.sol (>= 0.7.5)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1257010835/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1257025636",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3337#issuecomment-1257025636",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3337",
    "id": 1257025636,
    "node_id": "IC_kwDOGBlvNc5K7LBk",
    "user": {
      "login": "samtvlabs",
      "id": 112424909,
      "node_id": "U_kgDOBrN3zQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/112424909?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samtvlabs",
      "html_url": "https://github.com/samtvlabs",
      "followers_url": "https://api.github.com/users/samtvlabs/followers",
      "following_url": "https://api.github.com/users/samtvlabs/following{/other_user}",
      "gists_url": "https://api.github.com/users/samtvlabs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samtvlabs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samtvlabs/subscriptions",
      "organizations_url": "https://api.github.com/users/samtvlabs/orgs",
      "repos_url": "https://api.github.com/users/samtvlabs/repos",
      "events_url": "https://api.github.com/users/samtvlabs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samtvlabs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-24T17:35:23Z",
    "updated_at": "2022-09-24T17:35:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks . I have managed to quiet most of the error , but I am gettting this one that seems a bit random\r\n\r\n```\r\nCompiler run failed\r\nerror[7858]: src/interfaces/balancer/BalancerErrors.sol:23:1: ParserError: Expected pragma, import directive or contract/interface/library/struct/enum definition.\r\nfunction _require(bool condition, uint256 errorCode) pure {\r\n^------^\r\n```\r\n\r\nHere is the contract in question\r\n\r\n\r\n```\r\n// SPDX-License-Identifier: GPL-3.0-or-later\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\npragma solidity 0.7.0;\r\n\r\n// solhint-disable\r\n\r\n/**\r\n * @dev Reverts if `condition` is false, with a revert reason containing `errorCode`. Only codes up to 999 are\r\n * supported.\r\n */\r\nfunction _require(bool condition, uint256 errorCode) pure {\r\n    if (!condition) _revert(errorCode);\r\n}\r\n\r\n/**\r\n * @dev Reverts with a revert reason containing `errorCode`. Only codes up to 999 are supported.\r\n */\r\nfunction _revert(uint256 errorCode) pure {\r\n    // We're going to dynamically create a revert string based on the error code, with the following format:\r\n    // 'BAL#{errorCode}'\r\n    // where the code is left-padded with zeroes to three digits (so they range from 000 to 999).\r\n    //\r\n    // We don't have revert strings embedded in the contract to save bytecode size: it takes much less space to store a\r\n    // number (8 to 16 bits) than the individual string characters.\r\n    //\r\n    // The dynamic string creation algorithm that follows could be implemented in Solidity, but assembly allows for a\r\n    // much denser implementation, again saving bytecode size. Given this function unconditionally reverts, this is a\r\n    // safe place to rely on it without worrying about how its usage might affect e.g. memory contents.\r\n    assembly {\r\n        // First, we need to compute the ASCII representation of the error code. We assume that it is in the 0-999\r\n        // range, so we only need to convert three digits. To convert the digits to ASCII, we add 0x30, the value for\r\n        // the '0' character.\r\n\r\n        let units := add(mod(errorCode, 10), 0x30)\r\n\r\n        errorCode := div(errorCode, 10)\r\n        let tenths := add(mod(errorCode, 10), 0x30)\r\n\r\n        errorCode := div(errorCode, 10)\r\n        let hundreds := add(mod(errorCode, 10), 0x30)\r\n\r\n        // With the individual characters, we can now construct the full string. The \"BAL#\" part is a known constant\r\n        // (0x42414c23): we simply shift this by 24 (to provide space for the 3 bytes of the error code), and add the\r\n        // characters to it, each shifted by a multiple of 8.\r\n        // The revert reason is then shifted left by 200 bits (256 minus the length of the string, 7 characters * 8 bits\r\n        // per character = 56) to locate it in the most significant part of the 256 slot (the beginning of a byte\r\n        // array).\r\n\r\n        let revertReason := shl(200, add(0x42414c23000000, add(add(units, shl(8, tenths)), shl(16, hundreds))))\r\n\r\n        // We can now encode the reason in memory, which can be safely overwritten as we're about to revert. The encoded\r\n        // message will have the following layout:\r\n        // [ revert reason identifier ] [ string location offset ] [ string length ] [ string contents ]\r\n\r\n        // The Solidity revert reason identifier is 0x08c739a0, the function selector of the Error(string) function. We\r\n        // also write zeroes to the next 28 bytes of memory, but those are about to be overwritten.\r\n        mstore(0x0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\r\n        // Next is the offset to the location of the string, which will be placed immediately after (20 bytes away).\r\n        mstore(0x04, 0x0000000000000000000000000000000000000000000000000000000000000020)\r\n        // The string length is fixed: 7 characters.\r\n        mstore(0x24, 7)\r\n        // Finally, the string itself is stored.\r\n        mstore(0x44, revertReason)\r\n\r\n        // Even if the string is only 7 bytes long, we need to return a full 32 byte slot containing it. The length of\r\n        // the encoded message is therefore 4 + 32 + 32 + 32 = 100.\r\n        revert(0, 100)\r\n    }\r\n}\r\n\r\nlibrary Errors {\r\n    // Math\r\n    uint256 internal constant ADD_OVERFLOW = 0;\r\n    uint256 internal constant SUB_OVERFLOW = 1;\r\n    uint256 internal constant SUB_UNDERFLOW = 2;\r\n    uint256 internal constant MUL_OVERFLOW = 3;\r\n    uint256 internal constant ZERO_DIVISION = 4;\r\n    uint256 internal constant DIV_INTERNAL = 5;\r\n    uint256 internal constant X_OUT_OF_BOUNDS = 6;\r\n    uint256 internal constant Y_OUT_OF_BOUNDS = 7;\r\n    uint256 internal constant PRODUCT_OUT_OF_BOUNDS = 8;\r\n    uint256 internal constant INVALID_EXPONENT = 9;\r\n\r\n    // Input\r\n    uint256 internal constant OUT_OF_BOUNDS = 100;\r\n    uint256 internal constant UNSORTED_ARRAY = 101;\r\n    uint256 internal constant UNSORTED_TOKENS = 102;\r\n    uint256 internal constant INPUT_LENGTH_MISMATCH = 103;\r\n    uint256 internal constant ZERO_TOKEN = 104;\r\n\r\n    // Shared pools\r\n    uint256 internal constant MIN_TOKENS = 200;\r\n    uint256 internal constant MAX_TOKENS = 201;\r\n    uint256 internal constant MAX_SWAP_FEE_PERCENTAGE = 202;\r\n    uint256 internal constant MIN_SWAP_FEE_PERCENTAGE = 203;\r\n    uint256 internal constant MINIMUM_BPT = 204;\r\n    uint256 internal constant CALLER_NOT_VAULT = 205;\r\n    uint256 internal constant UNINITIALIZED = 206;\r\n    uint256 internal constant BPT_IN_MAX_AMOUNT = 207;\r\n    uint256 internal constant BPT_OUT_MIN_AMOUNT = 208;\r\n    uint256 internal constant EXPIRED_PERMIT = 209;\r\n\r\n    // Pools\r\n    uint256 internal constant MIN_AMP = 300;\r\n    uint256 internal constant MAX_AMP = 301;\r\n    uint256 internal constant MIN_WEIGHT = 302;\r\n    uint256 internal constant MAX_STABLE_TOKENS = 303;\r\n    uint256 internal constant MAX_IN_RATIO = 304;\r\n    uint256 internal constant MAX_OUT_RATIO = 305;\r\n    uint256 internal constant MIN_BPT_IN_FOR_TOKEN_OUT = 306;\r\n    uint256 internal constant MAX_OUT_BPT_FOR_TOKEN_IN = 307;\r\n    uint256 internal constant NORMALIZED_WEIGHT_INVARIANT = 308;\r\n    uint256 internal constant INVALID_TOKEN = 309;\r\n    uint256 internal constant UNHANDLED_JOIN_KIND = 310;\r\n    uint256 internal constant ZERO_INVARIANT = 311;\r\n\r\n    // Lib\r\n    uint256 internal constant REENTRANCY = 400;\r\n    uint256 internal constant SENDER_NOT_ALLOWED = 401;\r\n    uint256 internal constant PAUSED = 402;\r\n    uint256 internal constant PAUSE_WINDOW_EXPIRED = 403;\r\n    uint256 internal constant MAX_PAUSE_WINDOW_DURATION = 404;\r\n    uint256 internal constant MAX_BUFFER_PERIOD_DURATION = 405;\r\n    uint256 internal constant INSUFFICIENT_BALANCE = 406;\r\n    uint256 internal constant INSUFFICIENT_ALLOWANCE = 407;\r\n    uint256 internal constant ERC20_TRANSFER_FROM_ZERO_ADDRESS = 408;\r\n    uint256 internal constant ERC20_TRANSFER_TO_ZERO_ADDRESS = 409;\r\n    uint256 internal constant ERC20_MINT_TO_ZERO_ADDRESS = 410;\r\n    uint256 internal constant ERC20_BURN_FROM_ZERO_ADDRESS = 411;\r\n    uint256 internal constant ERC20_APPROVE_FROM_ZERO_ADDRESS = 412;\r\n    uint256 internal constant ERC20_APPROVE_TO_ZERO_ADDRESS = 413;\r\n    uint256 internal constant ERC20_TRANSFER_EXCEEDS_ALLOWANCE = 414;\r\n    uint256 internal constant ERC20_DECREASED_ALLOWANCE_BELOW_ZERO = 415;\r\n    uint256 internal constant ERC20_TRANSFER_EXCEEDS_BALANCE = 416;\r\n    uint256 internal constant ERC20_BURN_EXCEEDS_ALLOWANCE = 417;\r\n    uint256 internal constant SAFE_ERC20_CALL_FAILED = 418;\r\n    uint256 internal constant ADDRESS_INSUFFICIENT_BALANCE = 419;\r\n    uint256 internal constant ADDRESS_CANNOT_SEND_VALUE = 420;\r\n    uint256 internal constant SAFE_CAST_VALUE_CANT_FIT_INT256 = 421;\r\n    uint256 internal constant GRANT_SENDER_NOT_ADMIN = 422;\r\n    uint256 internal constant REVOKE_SENDER_NOT_ADMIN = 423;\r\n    uint256 internal constant RENOUNCE_SENDER_NOT_ALLOWED = 424;\r\n    uint256 internal constant BUFFER_PERIOD_EXPIRED = 425;\r\n\r\n    // Vault\r\n    uint256 internal constant INVALID_POOL_ID = 500;\r\n    uint256 internal constant CALLER_NOT_POOL = 501;\r\n    uint256 internal constant SENDER_NOT_ASSET_MANAGER = 502;\r\n    uint256 internal constant USER_DOESNT_ALLOW_RELAYER = 503;\r\n    uint256 internal constant INVALID_SIGNATURE = 504;\r\n    uint256 internal constant EXIT_BELOW_MIN = 505;\r\n    uint256 internal constant JOIN_ABOVE_MAX = 506;\r\n    uint256 internal constant SWAP_LIMIT = 507;\r\n    uint256 internal constant SWAP_DEADLINE = 508;\r\n    uint256 internal constant CANNOT_SWAP_SAME_TOKEN = 509;\r\n    uint256 internal constant UNKNOWN_AMOUNT_IN_FIRST_SWAP = 510;\r\n    uint256 internal constant MALCONSTRUCTED_MULTIHOP_SWAP = 511;\r\n    uint256 internal constant INTERNAL_BALANCE_OVERFLOW = 512;\r\n    uint256 internal constant INSUFFICIENT_INTERNAL_BALANCE = 513;\r\n    uint256 internal constant INVALID_ETH_INTERNAL_BALANCE = 514;\r\n    uint256 internal constant INVALID_POST_LOAN_BALANCE = 515;\r\n    uint256 internal constant INSUFFICIENT_ETH = 516;\r\n    uint256 internal constant UNALLOCATED_ETH = 517;\r\n    uint256 internal constant ETH_TRANSFER = 518;\r\n    uint256 internal constant CANNOT_USE_ETH_SENTINEL = 519;\r\n    uint256 internal constant TOKENS_MISMATCH = 520;\r\n    uint256 internal constant TOKEN_NOT_REGISTERED = 521;\r\n    uint256 internal constant TOKEN_ALREADY_REGISTERED = 522;\r\n    uint256 internal constant TOKENS_ALREADY_SET = 523;\r\n    uint256 internal constant TOKENS_LENGTH_MUST_BE_2 = 524;\r\n    uint256 internal constant NONZERO_TOKEN_BALANCE = 525;\r\n    uint256 internal constant BALANCE_TOTAL_OVERFLOW = 526;\r\n    uint256 internal constant POOL_NO_TOKENS = 527;\r\n    uint256 internal constant INSUFFICIENT_FLASH_LOAN_BALANCE = 528;\r\n\r\n    // Fees\r\n    uint256 internal constant SWAP_FEE_PERCENTAGE_TOO_HIGH = 600;\r\n    uint256 internal constant FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH = 601;\r\n    uint256 internal constant INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT = 602;\r\n}\r\n```\r\n\r\n\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1257025636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1257044432",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3337#issuecomment-1257044432",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3337",
    "id": 1257044432,
    "node_id": "IC_kwDOGBlvNc5K7PnQ",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-24T18:56:46Z",
    "updated_at": "2022-09-24T18:57:08Z",
    "author_association": "MEMBER",
    "body": "> error[7858]: src/interfaces/balancer/BalancerErrors.sol:23:1: ParserError: Expected pragma, import directive or contract/interface/library/struct/enum definition.\r\n\r\nthis is a grammar error. top level functions are not supported in 0.7.0, not sure when they were added exactly, but they should be supported in at least >=0.8.0",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1257044432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1257050061",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3337#issuecomment-1257050061",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3337",
    "id": 1257050061,
    "node_id": "IC_kwDOGBlvNc5K7Q_N",
    "user": {
      "login": "samtvlabs",
      "id": 112424909,
      "node_id": "U_kgDOBrN3zQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/112424909?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samtvlabs",
      "html_url": "https://github.com/samtvlabs",
      "followers_url": "https://api.github.com/users/samtvlabs/followers",
      "following_url": "https://api.github.com/users/samtvlabs/following{/other_user}",
      "gists_url": "https://api.github.com/users/samtvlabs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samtvlabs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samtvlabs/subscriptions",
      "organizations_url": "https://api.github.com/users/samtvlabs/orgs",
      "repos_url": "https://api.github.com/users/samtvlabs/repos",
      "events_url": "https://api.github.com/users/samtvlabs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samtvlabs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-24T19:27:10Z",
    "updated_at": "2022-09-24T19:27:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1257050061/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
