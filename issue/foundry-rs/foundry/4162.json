{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4162",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4162/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4162/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4162/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4162",
  "id": 1553358758,
  "node_id": "I_kwDOGBlvNc5cll-m",
  "number": 4162,
  "title": "Confusing users by creating a dichotomy between fuzz testing and invariant testing",
  "user": {
    "login": "0xalpharush",
    "id": 87383155,
    "node_id": "MDQ6VXNlcjg3MzgzMTU1",
    "avatar_url": "https://avatars.githubusercontent.com/u/87383155?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0xalpharush",
    "html_url": "https://github.com/0xalpharush",
    "followers_url": "https://api.github.com/users/0xalpharush/followers",
    "following_url": "https://api.github.com/users/0xalpharush/following{/other_user}",
    "gists_url": "https://api.github.com/users/0xalpharush/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0xalpharush/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0xalpharush/subscriptions",
    "organizations_url": "https://api.github.com/users/0xalpharush/orgs",
    "repos_url": "https://api.github.com/users/0xalpharush/repos",
    "events_url": "https://api.github.com/users/0xalpharush/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0xalpharush/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2023-01-23T16:05:27Z",
  "updated_at": "2023-05-18T11:03:10Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I think the documentation and conventions such as test naming should be clarified to avoid confusing users regarding what a testing mode does. Currently, fuzz tests and invariant tests are *perceived* as two separate things when both can test program invariants; however, one does not persist states across test runs and the other does but both test invariants (forgive me if this does not exactly align with Foundry's impl.). Perhaps stateless/ single-tx and stateful/ multi-tx could be used instead? This may have the benefit of encouraging users to favor stateful tests (which may be more likely to identify bugs) unless they're testing something like pure functions. Additionally, it would help to clarify that fuzzing is being used as the testing method to break invariants/ properties but that fuzzing itself is not invariant testing as invariants can be proven and falsified via a variety of techniques.\r\n\r\nref discussions on Twitter https://twitter.com/PaulRBerg/status/1616913668985298947",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4162/reactions",
    "total_count": 8,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 7,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4162/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1402670772",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4162#issuecomment-1402670772",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4162",
    "id": 1402670772,
    "node_id": "IC_kwDOGBlvNc5Tmw60",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-24T21:11:34Z",
    "updated_at": "2023-01-24T21:11:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for opening this issue based on the discussion I started on Twitter, @0xalpharush.\r\n\r\nI will also link to issue https://github.com/foundry-rs/foundry/issues/3005, where I had a bit of a headache trying to understand where state is persisted while testing with Foundry.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1402670772/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1456190254",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4162#issuecomment-1456190254",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4162",
    "id": 1456190254,
    "node_id": "IC_kwDOGBlvNc5Wy7Mu",
    "user": {
      "login": "montyly",
      "id": 13798342,
      "node_id": "MDQ6VXNlcjEzNzk4MzQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13798342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/montyly",
      "html_url": "https://github.com/montyly",
      "followers_url": "https://api.github.com/users/montyly/followers",
      "following_url": "https://api.github.com/users/montyly/following{/other_user}",
      "gists_url": "https://api.github.com/users/montyly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/montyly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/montyly/subscriptions",
      "organizations_url": "https://api.github.com/users/montyly/orgs",
      "repos_url": "https://api.github.com/users/montyly/repos",
      "events_url": "https://api.github.com/users/montyly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/montyly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-06T14:01:10Z",
    "updated_at": "2023-03-06T14:01:10Z",
    "author_association": "NONE",
    "body": "Is there any update on this?\r\n\r\nImho using the wrong terminology for something that have been existing for years end up creating a lot of confusion for the users. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1456190254/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1543995376",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4162#issuecomment-1543995376",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4162",
    "id": 1543995376,
    "node_id": "IC_kwDOGBlvNc5cB3_w",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T13:18:21Z",
    "updated_at": "2023-05-11T13:18:21Z",
    "author_association": "COLLABORATOR",
    "body": "Hey @0xalpharush @PaulRBerg @montyly, would love to get some suggestions on alternate names here\r\n\r\nCurrently the convention is `function test*` for stateless, single-tx fuzz tests and `function invariant*` for stateful, multi-tx fuzz tests. \r\n\r\nAn initial version was merged in https://github.com/foundry-rs/foundry/pull/4922 which adds `statefulFuzz` as an alternative to `invariant`. This is not set in stone as the final change so curious to get some thoughts. Currently my ideas are:\r\n- `singleTx` and `multiTx`\r\n- `stateless` and `stateful`\r\n- and we can decide to add the word `test` or `fuzz` before or after each to make it less likely to have naming conflicts with other functions users have.\r\n\r\nBut I'm not convinced those ideas are the best, so open to suggestions here",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1543995376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1544442870",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4162#issuecomment-1544442870",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4162",
    "id": 1544442870,
    "node_id": "IC_kwDOGBlvNc5cDlP2",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T17:56:25Z",
    "updated_at": "2023-05-18T11:03:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @mds1. Feedback on your ideas:\r\n\r\n| Your Idea | My Feedback |\r\n|--------|--------|\r\n| `statefulFuzz` | Impartial, it sounds okay |\r\n| `singleTx` and `multiTx` | Confusing because the user might mistake \"multiple txs\" to mean \"multiple calls\" |\r\n| `stateless` and `stateful` | Confusing when the `stateless` tests have state variables defined in the test contract; also the problems discussed in https://github.com/foundry-rs/foundry/issues/3005 | \r\n| add the word `test` before or after | Yes, please |\r\n| add the word `fuzz` before or after | Impartial because I'm already using the [`testFuzz_`](https://twitter.com/PaulRBerg/status/1616068157088714765) naming convention |\r\n\r\nMy suggestions for `function test*`:\r\n\r\n- `simple`\r\n- `basic`\r\n- `single` (no `Tx` suffix)\r\n\r\nMy suggestions for `function invariant*`:\r\n\r\n- `campaign` (the Foundry Book [refers](https://book.getfoundry.sh/forge/invariant-testing?highlight=campaign#overview) to invariant tests as \"campaigns\")\r\n- `sequence`\r\n- `multi` (no `Tx` suffix)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1544442870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1546952363",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4162#issuecomment-1546952363",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4162",
    "id": 1546952363,
    "node_id": "IC_kwDOGBlvNc5cNJ6r",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-14T17:21:27Z",
    "updated_at": "2023-05-14T17:21:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW, I always use the label `testFuzz` for stateless, single-tx fuzz tests. I also introduced this approach in OpenZeppelin test contracts, see e.g. [here](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4134/files#diff-d12d3598582819b5c94a9b9ec200e9134d4cc616f528543e4ebe83d53faab5f5R35).",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1546952363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1546981808",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4162#issuecomment-1546981808",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4162",
    "id": 1546981808,
    "node_id": "IC_kwDOGBlvNc5cNRGw",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-14T19:25:23Z",
    "updated_at": "2023-05-14T19:25:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I always use the label `testFuzz` for stateless\r\n\r\nSame, though I add an underscore i.e. `testFuzz_`. See the rationale [here](https://twitter.com/PaulRBerg/status/1616068157088714765).",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1546981808/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
