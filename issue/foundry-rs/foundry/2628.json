{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2628",
  "id": 1329576737,
  "node_id": "I_kwDOGBlvNc5PP7sh",
  "number": 2628,
  "title": "Cheatcode `vm.setNonce` does not allow for a nonce value of `type(uint64).max`",
  "user": {
    "login": "pcaversaccio",
    "id": 25297591,
    "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pcaversaccio",
    "html_url": "https://github.com/pcaversaccio",
    "followers_url": "https://api.github.com/users/pcaversaccio/followers",
    "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
    "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
    "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
    "repos_url": "https://api.github.com/users/pcaversaccio/repos",
    "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 17,
  "created_at": "2022-08-05T07:44:34Z",
  "updated_at": "2022-08-08T16:29:16Z",
  "closed_at": "2022-08-05T16:39:18Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [X] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (0dc266d 2022-08-05T00:05:53.884289904Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nforge test\r\n\r\n### Operating System\r\n\r\nLinux\r\n\r\n### Describe the bug\r\n\r\nThe cheatcode `vm.setNonce` does not allow for a nonce value of `type(uint64).max`. It's the max threshold that is actually allowed in theory. If I substract 1 from the max value it works smoothly. Maybe there are some internal reasons for that but I thought I would quickly raise the issue.\r\n\r\n![image](https://user-images.githubusercontent.com/25297591/183027642-a92f3b82-4333-4f0c-a776-6a1cd202342d.png)\r\n\r\nEDIT: The screenshot is from using the Windows version (built from source) but usually I use WSL Ubuntu for foundry and also there is the same error.\r\n",
  "closed_by": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206447382",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2628#issuecomment-1206447382",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
    "id": 1206447382,
    "node_id": "IC_kwDOGBlvNc5H6O0W",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T13:15:00Z",
    "updated_at": "2022-08-05T13:16:05Z",
    "author_association": "MEMBER",
    "body": "this happens because the vm increases the nonce here after the call exited\r\n\r\nhttps://github.com/bluealloy/revm/blob/77487187521ca920b4078b1a908b2630e3ee2818/crates/revm/src/subroutine.rs#L179\r\n\r\n@onbjerg I think we should just reject a nonce of u64::MAX, as this isn't a realistic scenario anyways.\r\n\r\nalternatively we need something like a cleanup hook to make everything safe to exit",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206447382/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206450658",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2628#issuecomment-1206450658",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
    "id": 1206450658,
    "node_id": "IC_kwDOGBlvNc5H6Pni",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T13:18:22Z",
    "updated_at": "2022-08-05T13:18:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would appreciate not rejecting `u64::MAX` since I actually have a test against this (RLP encoding scheme for address computation via `CREATE`). The theoretical limit given by clients is `type(uint64).max`. That's why I test it. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206450658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206452183",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2628#issuecomment-1206452183",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
    "id": 1206452183,
    "node_id": "IC_kwDOGBlvNc5H6P_X",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T13:20:06Z",
    "updated_at": "2022-08-05T13:20:06Z",
    "author_association": "MEMBER",
    "body": "wait, did you run this in release mode or debug?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206452183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206453357",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2628#issuecomment-1206453357",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
    "id": 1206453357,
    "node_id": "IC_kwDOGBlvNc5H6QRt",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T13:21:18Z",
    "updated_at": "2022-08-05T13:21:18Z",
    "author_association": "COLLABORATOR",
    "body": "> I would appreciate not rejecting `u64::MAX` since I actually have a test against this (RLP encoding scheme for address computation via `CREATE`). The theoretical limit given by clients is `type(uint64).max`. That's why I test it.\r\n\r\nIf the cheatcode rejects a value of `u64::MAX`, you could set the nonce to `u64::MAX - 1` then send a tx to bump the nonce to `u64::MAX`. (I have no preference on the resolution of this issue, just throwing out an idea that may help 🙂)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206453357/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206455932",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2628#issuecomment-1206455932",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
    "id": 1206455932,
    "node_id": "IC_kwDOGBlvNc5H6Q58",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T13:24:06Z",
    "updated_at": "2022-08-05T13:24:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "in release mode. @mds1 I'm currently using this approach here already: https://github.com/pcaversaccio/snekmate/blob/main/test/utils/CreateAddress.t.sol#L218. I mean obviously, it's an edge case, but if you check the other tests for `uint56` etc. you will see why I encountered it. I want to test the RLP encoding scheme against the uint64 max value.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206455932/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206456920",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2628#issuecomment-1206456920",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
    "id": 1206456920,
    "node_id": "IC_kwDOGBlvNc5H6RJY",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T13:25:12Z",
    "updated_at": "2022-08-05T13:26:00Z",
    "author_association": "MEMBER",
    "body": "```solidity\r\n    function testMaxNonce() public {\r\n       vm.setNonce(0x0000000000000000000000000000000000000000,  type(uint64).max);\r\n    }\r\n```\r\n\r\nthis should still work when using the release version (or installed via foundryup)\r\n\r\n```console\r\nRunning 1 test for test/Contract.t.sol:ContractTest\r\n[PASS] testMaxNonce() (gas: 3035)\r\nTest result: ok. 1 passed; 0 failed; finished in 10.32ms\r\n```\r\n\r\nah my bad you use the sender's address?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206456920/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206459595",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2628#issuecomment-1206459595",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
    "id": 1206459595,
    "node_id": "IC_kwDOGBlvNc5H6RzL",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T13:28:07Z",
    "updated_at": "2022-08-05T13:28:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mattsse yes exactly - you can clone my repo and remove the `-1` and you will see it. I mean I can live with the current solution but to make everything exact we would need probably need a cleanup hook somehow.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206459595/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206462399",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2628#issuecomment-1206462399",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
    "id": 1206462399,
    "node_id": "IC_kwDOGBlvNc5H6Se_",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T13:30:58Z",
    "updated_at": "2022-08-05T13:30:58Z",
    "author_association": "MEMBER",
    "body": "ok, I finally read the example contract.\r\nyou set the nonce of `create` to max and then deploy with that address?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206462399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206466180",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2628#issuecomment-1206466180",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
    "id": 1206466180,
    "node_id": "IC_kwDOGBlvNc5H6TaE",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T13:34:32Z",
    "updated_at": "2022-08-05T13:35:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes: I have a (Vyper) [function](https://github.com/pcaversaccio/snekmate/blob/main/src/utils/CreateAddress.vy#L34) that computes the address (based on the nonce & address) and I compare this against the deployed contract address. The RLP encoding is different, given the nonce byte length. I just want to test against the last possible value essentially.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206466180/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206614603",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2628#issuecomment-1206614603",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
    "id": 1206614603,
    "node_id": "IC_kwDOGBlvNc5H63pL",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T16:03:24Z",
    "updated_at": "2022-08-05T16:03:24Z",
    "author_association": "MEMBER",
    "body": "finally managed to get python+vyper installed properly\r\n\r\nI wish for once in my life I could get Python to work right away -.-\r\n\r\nI wasn't able to reproduce this with a `--release` build but could reproduce with debug:\r\n\r\n\r\n```console\r\nforge test -m testComputeAddressNonceUint64 -vvv --ffi                                                                                      ! main \r\n[⠢] Compiling...\r\n[⠢] Compiling 24 files with 0.8.15\r\n[⠔] Solc 0.8.15 finished in 5.09s\r\nCompiler run successful\r\n\r\nRunning 1 test for test/utils/CreateAddress.t.sol:CreateAddressTest\r\n[PASS] testComputeAddressNonceUint64() (gas: 738242)\r\nTest result: ok. 1 passed; 0 failed; finished in 1.05s\r\n                                                                                                                                                      \r\n~/git/rust/foundry-integration-tests/testdata/snekmate  v18.7.0\r\n❯ ~/git/rust/foundry/target/debug/forge test -m testComputeAddressNonceUint64 -vvv --ffi                                                      ! main \r\n[⠊] Compiling...\r\n[⠃] Compiling 24 files with 0.8.15\r\n[⠢] Solc 0.8.15 finished in 5.07s\r\nCompiler run successful\r\nThe application panicked (crashed).\r\nMessage:  attempt to add with overflow\r\nLocation: /Users/Matthias/.cargo/registry/src/github.com-1ecc6299db9ec823/revm-1.8.0/src/subroutine.rs:179\r\n\r\n```\r\n\r\nthe reason for this is that rust's primitive types don't overflow in release mode, instead they wrap.\r\nonly in debug mode an overflow results in a panic, which happens here\r\n\r\nhttps://github.com/bluealloy/revm/blob/77487187521ca920b4078b1a908b2630e3ee2818/crates/revm/src/subroutine.rs#L179\r\n\r\ncheck this minimal example\r\n\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=16c9e6288f5c7887d730e8ba651221d6\r\n\r\nand compare `DEBUG` `RELEASE` toggle\r\n\r\nso this overflow shouldn't happen with a release build\r\n\r\n\r\ncan you try with forge from foundryup?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206614603/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206623770",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2628#issuecomment-1206623770",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
    "id": 1206623770,
    "node_id": "IC_kwDOGBlvNc5H654a",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T16:13:50Z",
    "updated_at": "2022-08-05T16:13:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "you are completely right - problem is that I use for Windows a built from source while for WSL I use the `foundryup` version. Is there I fast way to get the `foundryup` version on Windows instead of building from source?  ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206623770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206634453",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2628#issuecomment-1206634453",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
    "id": 1206634453,
    "node_id": "IC_kwDOGBlvNc5H68fV",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T16:26:45Z",
    "updated_at": "2022-08-05T16:27:55Z",
    "author_association": "COLLABORATOR",
    "body": "Wait, is sending a tx with a nonce of `type(uint64).max` even allowed? Seems like no based on https://eips.ethereum.org/EIPS/eip-2681:\r\n\r\n> Consider any transaction invalid, where the nonce exceeds or equals to `2^64-1`.\r\n\r\nSo @pcaversaccio I don't think you need to even handle/test that case, since IIUC you're trying to compute the address of a contract created when the deployer has that nonce.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206634453/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206637647",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2628#issuecomment-1206637647",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
    "id": 1206637647,
    "node_id": "IC_kwDOGBlvNc5H69RP",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T16:30:27Z",
    "updated_at": "2022-08-05T16:30:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mds1 you are right: \r\n![image](https://user-images.githubusercontent.com/25297591/183120897-436dd8a9-e0b4-4abf-8d98-643f2413b7b3.png)\r\n\r\ninteresting - in Geth they define it as `uint64`: https://github.com/ethereum/go-ethereum/blob/master/core/types/transaction.go#L280\r\n\r\nMaybe they have someone else a check for that equality.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206637647/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206639849",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2628#issuecomment-1206639849",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
    "id": 1206639849,
    "node_id": "IC_kwDOGBlvNc5H69zp",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T16:33:19Z",
    "updated_at": "2022-08-05T16:33:19Z",
    "author_association": "COLLABORATOR",
    "body": "Here's the PR where this EIP was implemented: https://github.com/ethereum/go-ethereum/pull/23853/files",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206639849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206641460",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2628#issuecomment-1206641460",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
    "id": 1206641460,
    "node_id": "IC_kwDOGBlvNc5H6-M0",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T16:35:13Z",
    "updated_at": "2022-08-05T16:35:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "awesome thx - so I think we can close that issue @mattsse?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206641460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206645072",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2628#issuecomment-1206645072",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
    "id": 1206645072,
    "node_id": "IC_kwDOGBlvNc5H6_FQ",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-05T16:39:18Z",
    "updated_at": "2022-08-05T16:39:18Z",
    "author_association": "MEMBER",
    "body": "yeh let's close.\r\n\r\nre static builds for windows, not sure if we ship them yet, cc @onbjerg ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1206645072/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1208344000",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2628#issuecomment-1208344000",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2628",
    "id": 1208344000,
    "node_id": "IC_kwDOGBlvNc5IBd3A",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-08T16:29:16Z",
    "updated_at": "2022-08-08T16:29:16Z",
    "author_association": "MEMBER",
    "body": "We do, foundryup just doesn't install them for you",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1208344000/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
