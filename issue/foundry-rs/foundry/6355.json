{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6355",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6355/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6355/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6355/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6355",
  "id": 2000576006,
  "node_id": "I_kwDOGBlvNc53Pl4G",
  "number": 6355,
  "title": "Test non-deterministically fails in test suite with vm.revertTo",
  "user": {
    "login": "anna-carroll",
    "id": 11050853,
    "node_id": "MDQ6VXNlcjExMDUwODUz",
    "avatar_url": "https://avatars.githubusercontent.com/u/11050853?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/anna-carroll",
    "html_url": "https://github.com/anna-carroll",
    "followers_url": "https://api.github.com/users/anna-carroll/followers",
    "following_url": "https://api.github.com/users/anna-carroll/following{/other_user}",
    "gists_url": "https://api.github.com/users/anna-carroll/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/anna-carroll/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/anna-carroll/subscriptions",
    "organizations_url": "https://api.github.com/users/anna-carroll/orgs",
    "repos_url": "https://api.github.com/users/anna-carroll/repos",
    "events_url": "https://api.github.com/users/anna-carroll/events{/privacy}",
    "received_events_url": "https://api.github.com/users/anna-carroll/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-11-18T20:51:58Z",
  "updated_at": "2023-12-21T20:13:45Z",
  "closed_at": "2023-12-21T20:13:45Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [X] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (c948388 2023-11-18T00:19:51.373226000Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nforge test\r\n\r\n### Operating System\r\n\r\nmacOS (Apple Silicon)\r\n\r\n### Describe the bug\r\n\r\nI wrote a test contract with 3 tests - 1 should always pass, 2 should always fail. In practice, the test that should always pass actually fails sometimes and passes other times, with no code changes (e.g. behaves non-deterministically). \r\n\r\nOf the 2 always-failing tests, one of them calls `vm.revertTo(snapshot)` - could this be causing the strange behavior? To test this hypothesis, I commented out the `vm.revertTo(snapshot)` call, and the test suite behaved as expected deterministically (1 always passing, 2 always failing). \r\n\r\nTest file is included below. Tests are \r\n- `test_shouldPass` (should be always-passing, but in practice passes/fails non-deterministically) \r\n- `test_shouldFail`  (always-failing)\r\n- `test_shouldFailWithRevertTo` (always-failing, calls vm.revertTo)\r\n\r\nHere is the entire test file: \r\n```\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport {Test} from \"forge-std/Test.sol\";\r\n\r\ncontract Target {\r\n    function num() public pure returns (uint256) {\r\n        return 2;\r\n    }\r\n}\r\n\r\ncontract RevertTest is Test {\r\n    uint256 snapshot;\r\n    Target targ;\r\n\r\n    function setUp() public {\r\n        snapshot = vm.snapshot();\r\n        targ = new Target();\r\n    }\r\n\r\n    // this non-deterministically fails sometimes and passes sometimes\r\n    function test_shouldPass() public {\r\n        assertEq(2, targ.num());\r\n    }\r\n\r\n    // always fails\r\n    function test_shouldFaillWithRevertTo() public {\r\n        assertEq(3, targ.num());\r\n        vm.revertTo(snapshot);\r\n    }\r\n\r\n    // always fails\r\n    function test_shouldFail() public {\r\n        assertEq(3, targ.num());\r\n    }\r\n}\r\n```\r\n\r\nhere is a trace of a run where all three fail: \r\n```\r\n[FAIL. Reason: assertion failed] test_shouldFail() (gas: 19933)\r\nLogs:\r\n  Error: a == b not satisfied [uint]\r\n        Left: 3\r\n       Right: 2\r\n\r\nTraces:\r\n  [83407] RevertTest::setUp()\r\n    ├─ [0] VM::snapshot()\r\n    │   └─ ← 0\r\n    ├─ [23875] → new Target@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f\r\n    │   └─ ← 119 bytes of code\r\n    └─ ← ()\r\n\r\n  [19933] RevertTest::test_shouldFail()\r\n    ├─ [146] Target::num() [staticcall]\r\n    │   └─ ← 2\r\n    ├─ emit log(: \"Error: a == b not satisfied [uint]\")\r\n    ├─ emit log_named_uint(key: \"      Left\", val: 3)\r\n    ├─ emit log_named_uint(key: \"     Right\", val: 2)\r\n    ├─ [0] VM::store(VM: [0x7109709ECfa91a80626fF3989D68f67F5b1DD12D], 0x6661696c65640000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000001)\r\n    │   └─ ← ()\r\n    └─ ← ()\r\n\r\n[FAIL. Reason: assertion failed] test_shouldFaillWithRevert() (gas: 22400)\r\nLogs:\r\n  Error: a == b not satisfied [uint]\r\n        Left: 3\r\n       Right: 2\r\n\r\nTraces:\r\n  [83407] RevertTest::setUp()\r\n    ├─ [0] VM::snapshot()\r\n    │   └─ ← 0\r\n    ├─ [23875] → new Target@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f\r\n    │   └─ ← 119 bytes of code\r\n    └─ ← ()\r\n\r\n  [22400] RevertTest::test_shouldFaillWithRevert()\r\n    ├─ [146] Target::num() [staticcall]\r\n    │   └─ ← 2\r\n    ├─ emit log(: \"Error: a == b not satisfied [uint]\")\r\n    ├─ emit log_named_uint(key: \"      Left\", val: 3)\r\n    ├─ emit log_named_uint(key: \"     Right\", val: 2)\r\n    ├─ [0] VM::store(VM: [0x7109709ECfa91a80626fF3989D68f67F5b1DD12D], 0x6661696c65640000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000001)\r\n    │   └─ ← ()\r\n    ├─ [0] VM::revertTo(0)\r\n    │   └─ ← true\r\n    └─ ← ()\r\n\r\n[FAIL. Reason: assertion failed] test_shouldPass() (gas: 5431)\r\nTraces:\r\n  [83407] RevertTest::setUp()\r\n    ├─ [0] VM::snapshot()\r\n    │   └─ ← 0\r\n    ├─ [23875] → new Target@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f\r\n    │   └─ ← 119 bytes of code\r\n    └─ ← ()\r\n\r\n  [5431] RevertTest::test_shouldPass()\r\n    ├─ [146] Target::num() [staticcall]\r\n    │   └─ ← 2\r\n    └─ ← ()\r\n\r\nTest result: FAILED. 0 passed; 3 failed; 0 skipped; finished in 495.54µs\r\n\r\nRan 1 test suites: 0 tests passed, 3 failed, 0 skipped (3 total tests)\r\n\r\nFailing tests:\r\nEncountered 3 failing tests in test/Counter.t.sol:RevertTest\r\n[FAIL. Reason: assertion failed] test_shouldFail() (gas: 19933)\r\n[FAIL. Reason: assertion failed] test_shouldFaillWithRevert() (gas: 22400)\r\n[FAIL. Reason: assertion failed] test_shouldPass() (gas: 5431)\r\n\r\nEncountered a total of 3 failing tests, 0 tests succeeded\r\n```\r\n\r\nand here is a trace of a run where it passed: \r\n```\r\n➜  auth-template git:(main) ✗ forge test -vvvvv\r\n[⠒] Compiling...\r\nNo files changed, compilation skipped\r\n\r\nRunning 3 tests for test/Counter.t.sol:RevertTest\r\n[FAIL. Reason: assertion failed] test_shouldFail() (gas: 19933)\r\nLogs:\r\n  Error: a == b not satisfied [uint]\r\n        Left: 3\r\n       Right: 2\r\n\r\nTraces:\r\n  [83407] RevertTest::setUp()\r\n    ├─ [0] VM::snapshot()\r\n    │   └─ ← 0\r\n    ├─ [23875] → new Target@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f\r\n    │   └─ ← 119 bytes of code\r\n    └─ ← ()\r\n\r\n  [19933] RevertTest::test_shouldFail()\r\n    ├─ [146] Target::num() [staticcall]\r\n    │   └─ ← 2\r\n    ├─ emit log(: \"Error: a == b not satisfied [uint]\")\r\n    ├─ emit log_named_uint(key: \"      Left\", val: 3)\r\n    ├─ emit log_named_uint(key: \"     Right\", val: 2)\r\n    ├─ [0] VM::store(VM: [0x7109709ECfa91a80626fF3989D68f67F5b1DD12D], 0x6661696c65640000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000001)\r\n    │   └─ ← ()\r\n    └─ ← ()\r\n\r\n[FAIL. Reason: assertion failed] test_shouldFaillWithRevert() (gas: 22400)\r\nLogs:\r\n  Error: a == b not satisfied [uint]\r\n        Left: 3\r\n       Right: 2\r\n\r\nTraces:\r\n  [83407] RevertTest::setUp()\r\n    ├─ [0] VM::snapshot()\r\n    │   └─ ← 0\r\n    ├─ [23875] → new Target@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f\r\n    │   └─ ← 119 bytes of code\r\n    └─ ← ()\r\n\r\n  [22400] RevertTest::test_shouldFaillWithRevert()\r\n    ├─ [146] Target::num() [staticcall]\r\n    │   └─ ← 2\r\n    ├─ emit log(: \"Error: a == b not satisfied [uint]\")\r\n    ├─ emit log_named_uint(key: \"      Left\", val: 3)\r\n    ├─ emit log_named_uint(key: \"     Right\", val: 2)\r\n    ├─ [0] VM::store(VM: [0x7109709ECfa91a80626fF3989D68f67F5b1DD12D], 0x6661696c65640000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000001)\r\n    │   └─ ← ()\r\n    ├─ [0] VM::revertTo(0)\r\n    │   └─ ← true\r\n    └─ ← ()\r\n\r\n[PASS] test_shouldPass() (gas: 5431)\r\nTraces:\r\n  [83407] RevertTest::setUp()\r\n    ├─ [0] VM::snapshot()\r\n    │   └─ ← 0\r\n    ├─ [23875] → new Target@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f\r\n    │   └─ ← 119 bytes of code\r\n    └─ ← ()\r\n\r\n  [5431] RevertTest::test_shouldPass()\r\n    ├─ [146] Target::num() [staticcall]\r\n    │   └─ ← 2\r\n    └─ ← ()\r\n\r\nTest result: FAILED. 1 passed; 2 failed; 0 skipped; finished in 604.75µs\r\n\r\nRan 1 test suites: 1 tests passed, 2 failed, 0 skipped (3 total tests)\r\n\r\nFailing tests:\r\nEncountered 2 failing tests in test/Counter.t.sol:RevertTest\r\n[FAIL. Reason: assertion failed] test_shouldFail() (gas: 19933)\r\n[FAIL. Reason: assertion failed] test_shouldFaillWithRevert() (gas: 22400)\r\n\r\nEncountered a total of 2 failing tests, 1 tests succeeded\r\n```",
  "closed_by": {
    "login": "Evalir",
    "id": 26014927,
    "node_id": "MDQ6VXNlcjI2MDE0OTI3",
    "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Evalir",
    "html_url": "https://github.com/Evalir",
    "followers_url": "https://api.github.com/users/Evalir/followers",
    "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
    "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
    "organizations_url": "https://api.github.com/users/Evalir/orgs",
    "repos_url": "https://api.github.com/users/Evalir/repos",
    "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Evalir/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6355/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6355/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1856441926",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6355#issuecomment-1856441926",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6355",
    "id": 1856441926,
    "node_id": "IC_kwDOGBlvNc5upw5G",
    "user": {
      "login": "Evalir",
      "id": 26014927,
      "node_id": "MDQ6VXNlcjI2MDE0OTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evalir",
      "html_url": "https://github.com/Evalir",
      "followers_url": "https://api.github.com/users/Evalir/followers",
      "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
      "organizations_url": "https://api.github.com/users/Evalir/orgs",
      "repos_url": "https://api.github.com/users/Evalir/repos",
      "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evalir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-14T19:18:51Z",
    "updated_at": "2023-12-14T19:18:51Z",
    "author_association": "MEMBER",
    "body": "hey @anna-carroll we've added some fixes regarding this—is this still happening?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1856441926/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1866876861",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6355#issuecomment-1866876861",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6355",
    "id": 1866876861,
    "node_id": "IC_kwDOGBlvNc5vRke9",
    "user": {
      "login": "Evalir",
      "id": 26014927,
      "node_id": "MDQ6VXNlcjI2MDE0OTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evalir",
      "html_url": "https://github.com/Evalir",
      "followers_url": "https://api.github.com/users/Evalir/followers",
      "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
      "organizations_url": "https://api.github.com/users/Evalir/orgs",
      "repos_url": "https://api.github.com/users/Evalir/repos",
      "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evalir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-21T20:13:45Z",
    "updated_at": "2023-12-21T20:13:45Z",
    "author_association": "MEMBER",
    "body": "Closing—tested a few times and can't reproduce anymore. Feel free to reopen if you see this behavior again!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1866876861/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
