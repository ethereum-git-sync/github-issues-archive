{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4991",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4991/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4991/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4991/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4991",
  "id": 1718217428,
  "node_id": "I_kwDOGBlvNc5maerU",
  "number": 4991,
  "title": "test function stops after vm.expectedRevert() when testing a library",
  "user": {
    "login": "apuigsech",
    "id": 2170708,
    "node_id": "MDQ6VXNlcjIxNzA3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2170708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/apuigsech",
    "html_url": "https://github.com/apuigsech",
    "followers_url": "https://api.github.com/users/apuigsech/followers",
    "following_url": "https://api.github.com/users/apuigsech/following{/other_user}",
    "gists_url": "https://api.github.com/users/apuigsech/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/apuigsech/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/apuigsech/subscriptions",
    "organizations_url": "https://api.github.com/users/apuigsech/orgs",
    "repos_url": "https://api.github.com/users/apuigsech/repos",
    "events_url": "https://api.github.com/users/apuigsech/events{/privacy}",
    "received_events_url": "https://api.github.com/users/apuigsech/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-05-20T16:17:32Z",
  "updated_at": "2023-05-22T00:31:59Z",
  "closed_at": "2023-05-22T00:31:59Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [ ] Foundry\n- [ ] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (db96393 2023-05-11T00:10:51.773583000Z)\n\n### What command(s) is the bug in?\n\nforge test -vvv\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\nI have identified an anomalous behavior in the testing process when it comes to testing libraries, and I would like to provide a more detailed explanation using the given code example:\r\n\r\n```\r\npragma solidity ^0.8.19;\r\n\r\nimport \"forge-std/Test.sol\";\r\n\r\nlibrary Lib {\r\n    struct Item {\r\n        uint A;\r\n        uint B;\r\n        uint C;\r\n    }\r\n\r\n    function _isValid(Item memory item) internal view {\r\n        console.log(\"_isValid IN\");\r\n        require(item.A > 10, \"A need to be higher than 10\");\r\n        console.log(\"A ok\");\r\n        require(item.B > 100, \"B need to be higher than 100\");\r\n        console.log(\"B ok\");\r\n        require(item.C > 1000, \"A need to be higher than 1000\");\r\n        console.log(\"C ok\");\r\n        console.log(\"_isValid OUT\");\r\n    }\r\n}\r\n\r\ncontract Contract {\r\n    function _isValid(Lib.Item memory item) public view {\r\n        console.log(\"_isValid IN\");\r\n        require(item.A > 10, \"A need to be higher than 10\");\r\n        console.log(\"A ok\");\r\n        require(item.B > 100, \"B need to be higher than 100\");\r\n        console.log(\"B ok\");\r\n        require(item.C > 1000, \"A need to be higher than 1000\");\r\n        console.log(\"C ok\");\r\n        console.log(\"_isValid OUT\");\r\n    }\r\n}\r\n\r\ncontract testLib is Test {\r\n    using Lib for Lib.Item;\r\n\r\n    function testIsValidLib() public {\r\n        Lib.Item memory item = Lib.Item({A: 0, B: 0, C: 0});\r\n\r\n        vm.expectRevert(\"A need to be higher than 10\");\r\n        item._isValid();\r\n\r\n        // This is NOT executed\r\n        console.log(\"This is NOT shown\");\r\n        item.A = 11;\r\n        vm.expectRevert(\"B need to be higher than 100\");\r\n        item._isValid();\r\n    }\r\n\r\n    function testIsValidContract() public {\r\n        Contract c = new Contract();\r\n\r\n        Lib.Item memory item = Lib.Item({A: 0, B: 0, C: 0});\r\n\r\n        vm.expectRevert(\"A need to be higher than 10\");\r\n        c._isValid(item);\r\n\r\n        console.log(\"This is shown\");\r\n        item.A = 11;\r\n        vm.expectRevert(\"B need to be higher than 100\");\r\n        c._isValid(item);\r\n    }\r\n}\r\n```\r\n\r\nThe library, named `Lib`, defines a struct called Item, along with an internal function `_isValid` that performs specific validations on an Item object. The contract, named `Contract`, also includes a function _isValid that performs the same validations as the library's `_isValid` function.\r\n\r\nIn the testing process, there is a discrepancy between the behavior of the `testIsValidContract` function and the `testIsValidLib` function when encountering a revert caused by the `_isValid` call. Specifically.\r\n\r\nThe issue is that the `testIsValidLib` function does not proceed with its execution beyond the point of the revert, despite the presence of the vm.expectRevert() statement in the code, while `testIsValidContract` is successfully executed until the end.\r\n\r\nI think this inconsistency is unexpected considering the usage of vm.expectRevert() in both scenarios.\r\n\r\nThis is the outcome that illustrates this behaviour:\r\n\r\n```\r\n❯ forge test -vvv\r\n[⠢] Compiling...\r\n[⠘] Compiling 1 files with 0.8.19\r\n[⠊] Solc 0.8.19 finished in 490.66ms\r\nCompiler run successful!\r\n\r\nRunning 2 tests for test/Bug.t.sol:testLib\r\n[PASS] testIsValidContract() (gas: 217389)\r\nLogs:\r\n  _isValid IN\r\n  This is shown\r\n  _isValid IN\r\n  A ok\r\n\r\n[PASS] testIsValidLib() (gas: 6631)\r\nLogs:\r\n  _isValid IN\r\n\r\nTest result: ok. 2 passed; 0 failed; finished in 311.58µs\r\n```\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4991/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4991/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1556350238",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4991#issuecomment-1556350238",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4991",
    "id": 1556350238,
    "node_id": "IC_kwDOGBlvNc5cxAUe",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-22T00:31:58Z",
    "updated_at": "2023-05-22T00:31:58Z",
    "author_association": "COLLABORATOR",
    "body": "Thanks for the detailed writeup :) \r\n\r\nClosing as a duplicate of https://github.com/foundry-rs/foundry/issues/3437, this is currently being fixed in https://github.com/foundry-rs/foundry/pull/4945",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1556350238/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
