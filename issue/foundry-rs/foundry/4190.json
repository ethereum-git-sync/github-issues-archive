{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4190",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4190/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4190/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4190/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4190",
  "id": 1558255191,
  "node_id": "I_kwDOGBlvNc5c4RZX",
  "number": 4190,
  "title": "feat: `vm.assume` support in invariant tests",
  "user": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-01-26T14:44:33Z",
  "updated_at": "2023-04-04T08:50:25Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nInvariant tests support this cheat, which I believe is because `assume` was added before invariant tests. There are two ways we should support:\r\n- `vm.assume` directly in a `function invariant_MyInvariantTest()` method. Currently a failed assume here fails the test with `[FAIL. Reason: Assertion failed.]`. To be fair this usage is a bit limited since you can't make assumptions on fuzzed inputs, but still seems worthwhile to support\r\n- `vm.assume` in a handler contract. This lets you reject e.g. owner addresses from a fuzzed owner input. I tried putting a quick test together and it seems these are just ignored since the cheat isn't being called in a test method\n\n### Additional context\n\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4190/reactions",
    "total_count": 3,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4190/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1491626438",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4190#issuecomment-1491626438",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4190",
    "id": 1491626438,
    "node_id": "IC_kwDOGBlvNc5Y6GnG",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-31T09:30:02Z",
    "updated_at": "2023-03-31T09:30:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "For historical context on this issue, see the discussion here:\r\n\r\nhttps://github.com/foundry-rs/book/pull/760#issuecomment-1405122320",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1491626438/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1495483955",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4190#issuecomment-1495483955",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4190",
    "id": 1495483955,
    "node_id": "IC_kwDOGBlvNc5ZI0Yz",
    "user": {
      "login": "amarcu",
      "id": 6408302,
      "node_id": "MDQ6VXNlcjY0MDgzMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6408302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amarcu",
      "html_url": "https://github.com/amarcu",
      "followers_url": "https://api.github.com/users/amarcu/followers",
      "following_url": "https://api.github.com/users/amarcu/following{/other_user}",
      "gists_url": "https://api.github.com/users/amarcu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amarcu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amarcu/subscriptions",
      "organizations_url": "https://api.github.com/users/amarcu/orgs",
      "repos_url": "https://api.github.com/users/amarcu/repos",
      "events_url": "https://api.github.com/users/amarcu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amarcu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-04T07:30:51Z",
    "updated_at": "2023-04-04T07:38:26Z",
    "author_association": "NONE",
    "body": "What are good ways to work around this issue for now? I'm considering using `bound()` to filter out addresses like address(0). Would love to be able to use `vm.assume()` in handler contracts. We're using the `fail_on_revert = true` flag for invariant tests and it would make everything a lot easier to manage.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1495483955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1495590044",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4190#issuecomment-1495590044",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4190",
    "id": 1495590044,
    "node_id": "IC_kwDOGBlvNc5ZJOSc",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-04T08:50:24Z",
    "updated_at": "2023-04-04T08:50:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "The only workarounds for now are:\r\n\r\n1. Use `bound` (as you suggested)\r\n2. Good old if and return statements, e.g.\r\n\r\n```solidity\r\nif (value == address(0) {\r\n    return;\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1495590044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
