{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4843",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4843/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4843/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4843/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4843",
  "id": 1688044416,
  "node_id": "I_kwDOGBlvNc5knYOA",
  "number": 4843,
  "title": "BlockOutOfRangeError: block height is 23 but requested was 21",
  "user": {
    "login": "lnist",
    "id": 16150076,
    "node_id": "MDQ6VXNlcjE2MTUwMDc2",
    "avatar_url": "https://avatars.githubusercontent.com/u/16150076?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lnist",
    "html_url": "https://github.com/lnist",
    "followers_url": "https://api.github.com/users/lnist/followers",
    "following_url": "https://api.github.com/users/lnist/following{/other_user}",
    "gists_url": "https://api.github.com/users/lnist/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lnist/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lnist/subscriptions",
    "organizations_url": "https://api.github.com/users/lnist/orgs",
    "repos_url": "https://api.github.com/users/lnist/repos",
    "events_url": "https://api.github.com/users/lnist/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lnist/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 4077188949,
      "node_id": "LA_kwDOGBlvNc7zBPdV",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-anvil",
      "name": "C-anvil",
      "color": "5319E7",
      "default": false,
      "description": "Command: anvil"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-04-28T07:25:50Z",
  "updated_at": "2023-05-03T09:22:02Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nAnvil\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (8f246e0 2023-04-28T00:03:59.802167368Z)\n\n### What command(s) is the bug in?\n\nanvil\n\n### Operating System\n\nLinux\n\n### Describe the bug\n\nAs the title says, we occasionally get errors similar to `BlockOutOfRangeError: block height is 23 but requested was 21`  and it seems like a race-condition happening when using emv_revert+evm_snapshot.\r\n\r\nSince the requested is lower than the height, I assume the error is raised by https://github.com/foundry-rs/foundry/blob/8f246e07c89129b6effa89f0d71c4ac67758a155/anvil/src/eth/backend/mem/mod.rs#L1493 \r\n\r\nWe cannot reproduce locally, and it only happens occasionally when running our typescript test suite in GitHub actions with the default runners (which is very resource constrained, but, e.g. cpulimit of anvil does not seem to reproduce).\r\n\r\nWe use (evm_snapshot+)evm_revert+evm_snapshot to reset state between each test. So I definitely expect that to be the culprit.\r\n\r\nWe are not using --prune-history (so https://github.com/foundry-rs/foundry/issues/4252 seems irrelevant)\r\nWe are not using forks in these tests (so https://github.com/foundry-rs/foundry/issues/4082 , https://github.com/foundry-rs/foundry/issues/3700 and https://github.com/foundry-rs/foundry/issues/3718 seems irrelevant)\r\n\r\nI am not sure whether we are doing something we should not be doing or whether this is an actual bug.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4843/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4843/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1532705546",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4843#issuecomment-1532705546",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4843",
    "id": 1532705546,
    "node_id": "IC_kwDOGBlvNc5bWzsK",
    "user": {
      "login": "lnist",
      "id": 16150076,
      "node_id": "MDQ6VXNlcjE2MTUwMDc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/16150076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lnist",
      "html_url": "https://github.com/lnist",
      "followers_url": "https://api.github.com/users/lnist/followers",
      "following_url": "https://api.github.com/users/lnist/following{/other_user}",
      "gists_url": "https://api.github.com/users/lnist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lnist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lnist/subscriptions",
      "organizations_url": "https://api.github.com/users/lnist/orgs",
      "repos_url": "https://api.github.com/users/lnist/repos",
      "events_url": "https://api.github.com/users/lnist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lnist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-03T09:22:02Z",
    "updated_at": "2023-05-03T09:22:02Z",
    "author_association": "NONE",
    "body": "One thing that can happen in our tests are 1) there can be pending transactions when we call revert - I would expect these to be dropped, but maybe the behavior is undefined? 2) we may have pending RPC calls to read from the chain - could this mess up the revert?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1532705546/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
