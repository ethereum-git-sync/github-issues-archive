{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3362",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3362/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3362/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3362/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3362",
  "id": 1386111179,
  "node_id": "I_kwDOGBlvNc5SnmDL",
  "number": 3362,
  "title": "Add `rpc` cheatcode: integrate cast rpc as cheatcode",
  "user": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394235,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjM1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0052CC",
      "default": true,
      "description": "Good for newcomers"
    },
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-09-26T13:44:00Z",
  "updated_at": "2023-12-17T18:15:58Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nref #2051\r\ncast rpc allows sending rpc requests like ` cast rpc eth_getBalance \"0xa0ee7a142d267c1f36714e4a8f75612f20a79720\" \"latest\"`\r\n\r\nit'd be useful to have this as general purpose cheatcode and also have some dedicated helper functions for eg. `anvil_impersonateAccount`\r\n\r\nperhaps we can move this to a new Rpc Interface contract, wdyt @mds1 ?\n\n### Additional context\n\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3362/reactions",
    "total_count": 6,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 2,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3362/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1258146763",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3362#issuecomment-1258146763",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3362",
    "id": 1258146763,
    "node_id": "IC_kwDOGBlvNc5K_cvL",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-26T14:42:18Z",
    "updated_at": "2022-09-26T14:42:18Z",
    "author_association": "COLLABORATOR",
    "body": "Yea a `vm.rpc` cheat seems useful, in the past I've used ffi to deal tokens on anvil as part of a forge script but this would definitely be more convenient. Two questions:\r\n1. What would be the UX? `vm.rpc(string memory urlOrAlias, string memory method, string memory params)`?  You'd have to format the JSON string manually which is a bit clunky but not terrible.\r\n2. Should this be disabled by default? ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1258146763/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1258169249",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3362#issuecomment-1258169249",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3362",
    "id": 1258169249,
    "node_id": "IC_kwDOGBlvNc5K_iOh",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-26T14:58:59Z",
    "updated_at": "2022-09-26T14:58:59Z",
    "author_association": "MEMBER",
    "body": "an array of strings is probably sufficient, same as `cast rpc` works rn.\r\n\r\nsince this is POST I think we'd need another permission for this",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1258169249/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1717916541",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3362#issuecomment-1717916541",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3362",
    "id": 1717916541,
    "node_id": "IC_kwDOGBlvNc5mZVN9",
    "user": {
      "login": "Tudmotu",
      "id": 506487,
      "node_id": "MDQ6VXNlcjUwNjQ4Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/506487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tudmotu",
      "html_url": "https://github.com/Tudmotu",
      "followers_url": "https://api.github.com/users/Tudmotu/followers",
      "following_url": "https://api.github.com/users/Tudmotu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tudmotu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tudmotu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tudmotu/subscriptions",
      "organizations_url": "https://api.github.com/users/Tudmotu/orgs",
      "repos_url": "https://api.github.com/users/Tudmotu/repos",
      "events_url": "https://api.github.com/users/Tudmotu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tudmotu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-13T16:03:25Z",
    "updated_at": "2023-09-13T16:03:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Henlo, is there any way I can help implement this?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1717916541/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1858642400",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3362#issuecomment-1858642400",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3362",
    "id": 1858642400,
    "node_id": "IC_kwDOGBlvNc5uyKHg",
    "user": {
      "login": "sam-goldman",
      "id": 106038229,
      "node_id": "U_kgDOBlID1Q",
      "avatar_url": "https://avatars.githubusercontent.com/u/106038229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sam-goldman",
      "html_url": "https://github.com/sam-goldman",
      "followers_url": "https://api.github.com/users/sam-goldman/followers",
      "following_url": "https://api.github.com/users/sam-goldman/following{/other_user}",
      "gists_url": "https://api.github.com/users/sam-goldman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sam-goldman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sam-goldman/subscriptions",
      "organizations_url": "https://api.github.com/users/sam-goldman/orgs",
      "repos_url": "https://api.github.com/users/sam-goldman/repos",
      "events_url": "https://api.github.com/users/sam-goldman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sam-goldman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-16T00:40:27Z",
    "updated_at": "2023-12-16T00:40:27Z",
    "author_association": "NONE",
    "body": "Would this cheatcode work with the in-process node? It'd be useful to call `eth_estimateGas` without needing to spin up a standalone Anvil node (ref #6590). I'm not familiar with Foundry's internals so I don't know if this is feasible :)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1858642400/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1859086380",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3362#issuecomment-1859086380",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3362",
    "id": 1859086380,
    "node_id": "IC_kwDOGBlvNc5uz2gs",
    "user": {
      "login": "Tudmotu",
      "id": 506487,
      "node_id": "MDQ6VXNlcjUwNjQ4Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/506487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tudmotu",
      "html_url": "https://github.com/Tudmotu",
      "followers_url": "https://api.github.com/users/Tudmotu/followers",
      "following_url": "https://api.github.com/users/Tudmotu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tudmotu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tudmotu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tudmotu/subscriptions",
      "organizations_url": "https://api.github.com/users/Tudmotu/orgs",
      "repos_url": "https://api.github.com/users/Tudmotu/repos",
      "events_url": "https://api.github.com/users/Tudmotu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tudmotu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-17T09:33:00Z",
    "updated_at": "2023-12-17T09:33:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sam-goldman I believe this cheatcode was actually implemented but not documented:\r\nhttps://github.com/foundry-rs/foundry/blob/master/crates/cheatcodes/src/evm/fork.rs#L221\r\n\r\nDid not try it out myself yet.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1859086380/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1859241302",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3362#issuecomment-1859241302",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3362",
    "id": 1859241302,
    "node_id": "IC_kwDOGBlvNc5u0cVW",
    "user": {
      "login": "Evalir",
      "id": 26014927,
      "node_id": "MDQ6VXNlcjI2MDE0OTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evalir",
      "html_url": "https://github.com/Evalir",
      "followers_url": "https://api.github.com/users/Evalir/followers",
      "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
      "organizations_url": "https://api.github.com/users/Evalir/orgs",
      "repos_url": "https://api.github.com/users/Evalir/repos",
      "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evalir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-17T18:15:57Z",
    "updated_at": "2023-12-17T18:15:57Z",
    "author_association": "MEMBER",
    "body": "Correct @Tudmotu — this is implemented, just undocumented. I'd be great if someone takes it up, else I'll add the docs to the book soon :).",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1859241302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
