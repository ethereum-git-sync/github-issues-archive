{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/416",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/416/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/416/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/416/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/416",
  "id": 1098604558,
  "node_id": "I_kwDOGBlvNc5Be2AO",
  "number": 416,
  "title": "Bug: forge sends RPC requests for non-existent methods regardless of EVM Version specified ",
  "user": {
    "login": "sambacha",
    "id": 32783916,
    "node_id": "MDQ6VXNlcjMyNzgzOTE2",
    "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sambacha",
    "html_url": "https://github.com/sambacha",
    "followers_url": "https://api.github.com/users/sambacha/followers",
    "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
    "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
    "organizations_url": "https://api.github.com/users/sambacha/orgs",
    "repos_url": "https://api.github.com/users/sambacha/repos",
    "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sambacha/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-01-11T03:16:55Z",
  "updated_at": "2022-01-11T11:33:00Z",
  "closed_at": "2022-01-11T11:18:17Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Bug: forge sends request for `eth_feeHistory` on non-london+ EVM Versions\r\n\r\nWhen running `forge create` and specifying an EVM Version lower than `berlin` forge will attempt to request `eth_feeHistory`\r\n\r\n\r\nOutput\r\n```sh\r\ncompiling...\r\nsuccess.\r\nError:\r\n   0: (code: -32700, message: The method eth_feeHistory does not exist/is not available, data: None)\r\n```\r\n\r\nIt *should* handle none, as I did not specify `numberOfRequestedBlocks`.  \r\n\r\n## Desired Behavior \r\n\r\nby default it should use a value of 1 for `blockCount` and `newestBlock` - or simply do not send this request on any EVM version (or limit it just to post london EVM Versions)\r\n\r\n\r\n### `eth_feeHistory` response (example)\r\n\r\n```json\r\n{\r\n  \"1\": {\r\n    \"response\": {\r\n      \"baseFeePerGas\": [\r\n        \"139569467980\",\r\n        \"123568107321\",\r\n        \"139010354553\",\r\n        \"141881786034\",\r\n        \"159611134013\",\r\n        \"157601697097\"\r\n      ],\r\n      \"gasUsedRatio\": [\r\n        0.041407990167479085,\r\n        0.9998780855982294,\r\n        0.5826249667732252,\r\n        0.9998343281249537,\r\n        0.4496416706275115\r\n      ],\r\n      \"oldestBlock\": \"0xd557fd\",\r\n      \"reward\": [\r\n        [\r\n          \"1500000000\",\r\n          \"1500000000\",\r\n          \"1500000000\"\r\n        ],\r\n        [\r\n          \"1500000000\",\r\n          \"1500000000\",\r\n          \"1500000000\"\r\n        ],\r\n        [\r\n          \"1258880691\",\r\n          \"1410000000\",\r\n          \"1500000000\"\r\n        ],\r\n        [\r\n          \"1500000000\",\r\n          \"1500000000\",\r\n          \"1500000000\"\r\n        ],\r\n        [\r\n          \"1409999999\",\r\n          \"1500000000\",\r\n          \"1500000000\"\r\n        ]\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n### Debug/RUSTC Log output\r\n\r\n<details>\r\n<summary> Raw Log Output </summary>\r\n```sh\r\nLocation:\r\n   /rustc/f1edd0429582dd29cccacaf50fd134b05593bd9c/library/core/src/result.rs:1914\r\n\r\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ BACKTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\r\n                                ⋮ 10 frames hidden ⋮\r\n  11: <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual::h20d1fb275751fe54\r\n      at /rustc/f1edd0429582dd29cccacaf50fd134b05593bd9c/library/core/src/result.rs:1914\r\n  12: forge::cmd::create::CreateArgs::deploy::{{closure}}::h93c90620ed9e5073\r\n      at /Users/sbacha/foundry-docker/foundry/cli/src/cmd/create.rs:<unknown line>\r\n  13: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll::ha84a55ea845c6e7f\r\n      at /rustc/f1edd0429582dd29cccacaf50fd134b05593bd9c/library/core/src/future/mod.rs:80\r\n  14: tokio::park::thread::CachedParkThread::block_on::{{closure}}::haf8ca52c607682ca\r\n      at /Users/sbacha/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/park/thread.rs:263\r\n  15: tokio::coop::with_budget::{{closure}}::ha97f2f476892933f\r\n      at /Users/sbacha/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/coop.rs:102\r\n  16: std::thread::local::LocalKey<T>::try_with::h0f67afacad12cbc9\r\n      at /rustc/f1edd0429582dd29cccacaf50fd134b05593bd9c/library/std/src/thread/local.rs:399\r\n  17: std::thread::local::LocalKey<T>::with::he5fd0962d8fef72e\r\n      at /rustc/f1edd0429582dd29cccacaf50fd134b05593bd9c/library/std/src/thread/local.rs:375\r\n  18: tokio::coop::with_budget::h78a464ccd1aefed4\r\n      at /Users/sbacha/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/coop.rs:95\r\n  19: tokio::coop::budget::h78b34f00bbe5f4a7\r\n      at /Users/sbacha/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/coop.rs:72\r\n  20: tokio::park::thread::CachedParkThread::block_on::hd1d7fa6b9d8cfb73\r\n      at /Users/sbacha/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/park/thread.rs:263\r\n  21: tokio::runtime::enter::Enter::block_on::hd88631fb2265fbe6\r\n      at /Users/sbacha/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/runtime/enter.rs:151\r\n  22: tokio::runtime::thread_pool::ThreadPool::block_on::h982920b3c061fb06\r\n      at /Users/sbacha/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/runtime/thread_pool/mod.rs:77\r\n  23: tokio::runtime::Runtime::block_on::h7ad6a6e06036d78c\r\n      at /Users/sbacha/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/runtime/mod.rs:463\r\n  24: <forge::cmd::create::CreateArgs as forge::cmd::Cmd>::run::h12c3c7d54b26cdc8\r\n      at /Users/sbacha/foundry-docker/foundry/cli/src/cmd/create.rs:60\r\n  25: forge::main::ha36bb5ae4dda7416\r\n      at /Users/sbacha/foundry-docker/foundry/cli/src/forge.rs:34\r\n  26: core::ops::function::FnOnce::call_once::h35391823e5f9df29\r\n      at /rustc/f1edd0429582dd29cccacaf50fd134b05593bd9c/library/core/src/ops/function.rs:227\r\n                                ⋮ 2 frames hidden ⋮\r\n\r\n```\r\n</detail>",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/416/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/416/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1009840434",
    "html_url": "https://github.com/foundry-rs/foundry/issues/416#issuecomment-1009840434",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/416",
    "id": 1009840434,
    "node_id": "IC_kwDOGBlvNc48MPEy",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-11T10:49:25Z",
    "updated_at": "2022-01-11T10:50:34Z",
    "author_association": "MEMBER",
    "body": "Good catch, this happens due to fee estimation [here](https://github.com/gakonst/ethers-rs/blob/e24117a1e1d6301d80101c7cc83c93ac4a8b1258/ethers-providers/src/provider.rs#L428-L455). The \"real\" fix is to check if the chain has enabled EIP1559, and if not, call `.legacy()` on the deployer. The fix from https://github.com/gakonst/foundry/pull/412 should address this.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1009840434/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1009855633",
    "html_url": "https://github.com/foundry-rs/foundry/issues/416#issuecomment-1009855633",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/416",
    "id": 1009855633,
    "node_id": "IC_kwDOGBlvNc48MSyR",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-11T11:08:35Z",
    "updated_at": "2022-01-11T11:08:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Good catch, this happens due to fee estimation [here](https://github.com/gakonst/ethers-rs/blob/e24117a1e1d6301d80101c7cc83c93ac4a8b1258/ethers-providers/src/provider.rs#L428-L455). The \"real\" fix is to check if the chain has enabled EIP1559, and if not, call `.legacy()` on the deployer. The fix from #412 should address this.\r\n\r\nwhy not just use a constant for `maxFeePerGas` - this is how both ethersjs and web3js are currently configured (2.5gwei)\r\n\r\n```ts\r\n            maxPriorityFeePerGas = BigNumber.from(\"2500000000\");\r\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\r\n```\r\n\r\nfor some reason I was thinking that `pragma` would change this behavior - thanks ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1009855633/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1009862038",
    "html_url": "https://github.com/foundry-rs/foundry/issues/416#issuecomment-1009862038",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/416",
    "id": 1009862038,
    "node_id": "IC_kwDOGBlvNc48MUWW",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-11T11:16:48Z",
    "updated_at": "2022-01-11T11:16:48Z",
    "author_association": "MEMBER",
    "body": "Because having a constant max fee per gas is not really correct :D We re-use the algorithm that MyCrypto uses, using the historical values: https://github.com/gakonst/ethers-rs/blob/e24117a1e1d6301d80101c7cc83c93ac4a8b1258/ethers-core/src/utils/mod.rs#L300-L318, which tends to give better estimates in my experience vs hardcoded.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1009862038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1009866742",
    "html_url": "https://github.com/foundry-rs/foundry/issues/416#issuecomment-1009866742",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/416",
    "id": 1009866742,
    "node_id": "IC_kwDOGBlvNc48MVf2",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-11T11:22:40Z",
    "updated_at": "2022-01-11T11:22:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Because having a constant max fee per gas is not really correct :D We re-use the algorithm that MyCrypto uses, using the historical values: [gakonst/ethers-rs@`e24117a`/ethers-core/src/utils/mod.rs#L300-L318](https://github.com/gakonst/ethers-rs/blob/e24117a1e1d6301d80101c7cc83c93ac4a8b1258/ethers-core/src/utils/mod.rs#L300-L318), which tends to give better estimates in my experience vs hardcoded.\r\n\r\nfyi this fails when using ganache (v7) - ganache does not have this RPC method implemented :( ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1009866742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1009873692",
    "html_url": "https://github.com/foundry-rs/foundry/issues/416#issuecomment-1009873692",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/416",
    "id": 1009873692,
    "node_id": "IC_kwDOGBlvNc48MXMc",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-11T11:31:34Z",
    "updated_at": "2022-01-11T11:33:00Z",
    "author_association": "MEMBER",
    "body": "Yeah Ganache is still not fully London compatible, nothing we can do about that lol :D The method is in the JSON-RPC spec, tracked here for Ganache https://github.com/trufflesuite/ganache/issues/1470\r\n\r\nI added a `--legacy` flag you can use from the CLI, which will force usage of legacy transactions so you can still use it with Ganache.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1009873692/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
