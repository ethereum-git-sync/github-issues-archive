{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4858",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4858/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4858/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4858/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4858",
  "id": 1690928654,
  "node_id": "I_kwDOGBlvNc5kyYYO",
  "number": 4858,
  "title": "Add a vm.iter cheatecode",
  "user": {
    "login": "1anyway",
    "id": 89972904,
    "node_id": "MDQ6VXNlcjg5OTcyOTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/89972904?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/1anyway",
    "html_url": "https://github.com/1anyway",
    "followers_url": "https://api.github.com/users/1anyway/followers",
    "following_url": "https://api.github.com/users/1anyway/following{/other_user}",
    "gists_url": "https://api.github.com/users/1anyway/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/1anyway/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/1anyway/subscriptions",
    "organizations_url": "https://api.github.com/users/1anyway/orgs",
    "repos_url": "https://api.github.com/users/1anyway/repos",
    "events_url": "https://api.github.com/users/1anyway/events{/privacy}",
    "received_events_url": "https://api.github.com/users/1anyway/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2023-05-01T15:07:11Z",
  "updated_at": "2023-05-05T01:32:54Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nIn my development practice, i came across scenarios where I had to iterate through all possible values, but i found that Foundry didn't provide the tools or cheatcodes. So I had to do it that way: \r\n```\r\naddress[] private tokens = [WBTC, USDC, USDT, UNI, LINK];\r\nfor (uint256 _index = 0; _index < tokens.length; ++_index) {\r\n            deal(tokens[_index], alice, assetAmount);\r\n            \r\n            IERC20(tokens[_index]).approve(address(gloopZapper), assetAmount);\r\n            gloopZapper.mintWGLP(\r\n                tokens[_index], \r\n                assetAmount,\r\n                0,\r\n                0\r\n            );\r\n```\r\nIt would be greater to provide a cheatecode like `vm.iter()` to iterate through all values.\r\n\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4858/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4858/timeline",
  "performed_via_github_app": null,
  "state_reason": "reopened"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1529858593",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4858#issuecomment-1529858593",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4858",
    "id": 1529858593,
    "node_id": "IC_kwDOGBlvNc5bL8oh",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-01T15:52:27Z",
    "updated_at": "2023-05-01T15:52:27Z",
    "author_association": "COLLABORATOR",
    "body": "Can you expand on how this cheatcode would work with some examples? I'm not sure I understand what this would do that you can't do with a regular solidity `for` loop?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1529858593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1530958421",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4858#issuecomment-1530958421",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4858",
    "id": 1530958421,
    "node_id": "IC_kwDOGBlvNc5bQJJV",
    "user": {
      "login": "1anyway",
      "id": 89972904,
      "node_id": "MDQ6VXNlcjg5OTcyOTA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/89972904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1anyway",
      "html_url": "https://github.com/1anyway",
      "followers_url": "https://api.github.com/users/1anyway/followers",
      "following_url": "https://api.github.com/users/1anyway/following{/other_user}",
      "gists_url": "https://api.github.com/users/1anyway/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1anyway/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1anyway/subscriptions",
      "organizations_url": "https://api.github.com/users/1anyway/orgs",
      "repos_url": "https://api.github.com/users/1anyway/repos",
      "events_url": "https://api.github.com/users/1anyway/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1anyway/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-02T06:37:36Z",
    "updated_at": "2023-05-02T06:37:36Z",
    "author_association": "NONE",
    "body": "Yes, it can be finished by `for` loop. But if there is a iterator to help us to do it, foundry will become more convenient and powerful ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1530958421/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1531662203",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4858#issuecomment-1531662203",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4858",
    "id": 1531662203,
    "node_id": "IC_kwDOGBlvNc5bS097",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-02T15:18:04Z",
    "updated_at": "2023-05-02T15:18:04Z",
    "author_association": "COLLABORATOR",
    "body": "I still don't understand how this would look or work, given the limitations of solidity. I'm going to close this as a result, but can reopen if you share a more detailed proposal :)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1531662203/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1534152210",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4858#issuecomment-1534152210",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4858",
    "id": 1534152210,
    "node_id": "IC_kwDOGBlvNc5bcU4S",
    "user": {
      "login": "1anyway",
      "id": 89972904,
      "node_id": "MDQ6VXNlcjg5OTcyOTA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/89972904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1anyway",
      "html_url": "https://github.com/1anyway",
      "followers_url": "https://api.github.com/users/1anyway/followers",
      "following_url": "https://api.github.com/users/1anyway/following{/other_user}",
      "gists_url": "https://api.github.com/users/1anyway/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1anyway/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1anyway/subscriptions",
      "organizations_url": "https://api.github.com/users/1anyway/orgs",
      "repos_url": "https://api.github.com/users/1anyway/repos",
      "events_url": "https://api.github.com/users/1anyway/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1anyway/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-04T06:24:38Z",
    "updated_at": "2023-05-04T06:24:38Z",
    "author_association": "NONE",
    "body": "This is the using example \r\n```\r\naddress[] private tokens = [WBTC, USDC, USDT, UNI, LINK];\r\n\r\nfunction test(address _token) public {\r\n  _token = iter(_token, tokens);\r\n  deal(_token, alice, assetAmount);\r\n  IERC20(_token).approve(user, assetAmount);\r\n  // Do sth else\r\n}\r\n```\r\nIt's kind of like `vm.assume` and `bound` in foundry, but the difference is `vm.assume` and `bound` only run a limited number of scenarios in fuzzy tests, I hope to have a cheatcode `vm.iter()` to iterate through all discrete values in an array.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1534152210/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1534762208",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4858#issuecomment-1534762208",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4858",
    "id": 1534762208,
    "node_id": "IC_kwDOGBlvNc5bepzg",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-04T13:14:38Z",
    "updated_at": "2023-05-04T13:14:38Z",
    "author_association": "COLLABORATOR",
    "body": "So in your example, the `_token = vm.iter(_token, tokens)` line at the start of the test has the effect of changing this from a standard fuzz test to a test that actually only runs 5 times (once for each entry in the `tokens` array)? If so, maybe this issue is a duplicate of https://github.com/foundry-rs/foundry/issues/858 and https://github.com/foundry-rs/foundry/issues/4839",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1534762208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1534868267",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4858#issuecomment-1534868267",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4858",
    "id": 1534868267,
    "node_id": "IC_kwDOGBlvNc5bfDsr",
    "user": {
      "login": "1anyway",
      "id": 89972904,
      "node_id": "MDQ6VXNlcjg5OTcyOTA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/89972904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1anyway",
      "html_url": "https://github.com/1anyway",
      "followers_url": "https://api.github.com/users/1anyway/followers",
      "following_url": "https://api.github.com/users/1anyway/following{/other_user}",
      "gists_url": "https://api.github.com/users/1anyway/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1anyway/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1anyway/subscriptions",
      "organizations_url": "https://api.github.com/users/1anyway/orgs",
      "repos_url": "https://api.github.com/users/1anyway/repos",
      "events_url": "https://api.github.com/users/1anyway/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1anyway/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-04T14:18:17Z",
    "updated_at": "2023-05-04T14:18:17Z",
    "author_association": "NONE",
    "body": "Yes, it runs each discrete value in the array once. It's similar to #858 and #4839, but I guess not exactly.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1534868267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1534991917",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4858#issuecomment-1534991917",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4858",
    "id": 1534991917,
    "node_id": "IC_kwDOGBlvNc5bfh4t",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-04T15:33:07Z",
    "updated_at": "2023-05-04T15:33:07Z",
    "author_association": "COLLABORATOR",
    "body": "Ok, I've reopened this for discussion, but I still don't know how something like this could be implemented in solidity without a ton of overloads to the `vm.iter` cheat for all type combinations, or requiring users to ABI encode/decode data. So I think implementing things like this with a loop or one of the ideas in #858 is the best option for now",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1534991917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1535590748",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4858#issuecomment-1535590748",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4858",
    "id": 1535590748,
    "node_id": "IC_kwDOGBlvNc5bh0Fc",
    "user": {
      "login": "1anyway",
      "id": 89972904,
      "node_id": "MDQ6VXNlcjg5OTcyOTA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/89972904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1anyway",
      "html_url": "https://github.com/1anyway",
      "followers_url": "https://api.github.com/users/1anyway/followers",
      "following_url": "https://api.github.com/users/1anyway/following{/other_user}",
      "gists_url": "https://api.github.com/users/1anyway/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1anyway/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1anyway/subscriptions",
      "organizations_url": "https://api.github.com/users/1anyway/orgs",
      "repos_url": "https://api.github.com/users/1anyway/repos",
      "events_url": "https://api.github.com/users/1anyway/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1anyway/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-05T01:32:53Z",
    "updated_at": "2023-05-05T01:32:53Z",
    "author_association": "NONE",
    "body": "If all type combinations become overloaded, you can divide them into different types, For example, `vm.iter_Address()`, `vm.iter_Uint()` and so on. I think this is more user friendly than requesting an ABI.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1535590748/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
