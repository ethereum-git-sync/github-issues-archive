{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5941",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5941/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5941/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5941/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5941",
  "id": 1917823295,
  "node_id": "I_kwDOGBlvNc5yT6k_",
  "number": 5941,
  "title": "Forge test not handling revert with custom error",
  "user": {
    "login": "Orland0x",
    "id": 37511817,
    "node_id": "MDQ6VXNlcjM3NTExODE3",
    "avatar_url": "https://avatars.githubusercontent.com/u/37511817?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Orland0x",
    "html_url": "https://github.com/Orland0x",
    "followers_url": "https://api.github.com/users/Orland0x/followers",
    "following_url": "https://api.github.com/users/Orland0x/following{/other_user}",
    "gists_url": "https://api.github.com/users/Orland0x/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Orland0x/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Orland0x/subscriptions",
    "organizations_url": "https://api.github.com/users/Orland0x/orgs",
    "repos_url": "https://api.github.com/users/Orland0x/repos",
    "events_url": "https://api.github.com/users/Orland0x/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Orland0x/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-09-28T15:49:59Z",
  "updated_at": "2023-09-29T11:01:46Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (96ab913 2023-09-28T00:20:52.121517000Z)\n\n### What command(s) is the bug in?\n\nforge test\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\nThe below test fails with message: `[FAIL. Reason: Call did not revert as expected]`.\r\n\r\nhowever when the `vvm.expectRevert(InvalidMember.selector);` is removed the test again fails with message: `[FAIL. Reason: InvalidMember()]`. \r\n\r\n```solidity\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\nimport { Test } from \"forge-std/Test.sol\";\r\nimport { GasSnapshot } from \"forge-gas-snapshot/GasSnapshot.sol\";\r\nimport { Merkle } from \"@murky/Merkle.sol\";\r\nimport { MerkleProof } from \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\r\nimport { IVotingStrategy } from \"../src/interfaces/IVotingStrategy.sol\";\r\n\r\ncontract MerkleWhitelistVotingStrategy is IVotingStrategy {\r\n    error InvalidProof();\r\n    error InvalidMember();\r\n\r\n    struct Member {\r\n        address addr;\r\n        uint96 vp;\r\n    }\r\n\r\n    function getVotingPower(\r\n        uint32 /* blockNumber */,\r\n        address voter,\r\n        bytes calldata params,\r\n        bytes calldata userParams\r\n    ) external pure override returns (uint256 votingPower) {\r\n        bytes32 root = abi.decode(params, (bytes32));\r\n        (bytes32[] memory proof, Member memory member) = abi.decode(userParams, (bytes32[], Member));\r\n\r\n        if (member.addr != voter) revert InvalidMember();\r\n        if (MerkleProof.verify(proof, root, keccak256(abi.encode(member))) != true) revert InvalidProof();\r\n\r\n        return member.vp;\r\n    }\r\n}\r\n\r\ncontract DemoTest is Test, GasSnapshot {\r\n    error InvalidProof();\r\n    error InvalidMember();\r\n\r\n    MerkleWhitelistVotingStrategy public merkleWhitelistVotingStrategy;\r\n    Merkle public merkleLib;\r\n\r\n    function setUp() public {\r\n        merkleWhitelistVotingStrategy = new MerkleWhitelistVotingStrategy();\r\n        merkleLib = new Merkle();\r\n    }\r\n\r\n    function testDemo() public {\r\n        MerkleWhitelistVotingStrategy.Member[] memory members = new MerkleWhitelistVotingStrategy.Member[](4);\r\n        members[0] = MerkleWhitelistVotingStrategy.Member(address(3), 33);\r\n        members[1] = MerkleWhitelistVotingStrategy.Member(address(1), 11);\r\n        members[2] = MerkleWhitelistVotingStrategy.Member(address(5), 55);\r\n        members[3] = MerkleWhitelistVotingStrategy.Member(address(5), 77);\r\n\r\n        bytes32[] memory leaves = new bytes32[](4);\r\n        leaves[0] = keccak256(abi.encode(members[0]));\r\n        leaves[1] = keccak256(abi.encode(members[1]));\r\n        leaves[2] = keccak256(abi.encode(members[2]));\r\n        leaves[3] = keccak256(abi.encode(members[3]));\r\n\r\n        bytes32 root = merkleLib.getRoot(leaves);\r\n\r\n        // Proof is for a different member than the voter address\r\n        vm.expectRevert(InvalidMember.selector);\r\n        merkleWhitelistVotingStrategy.getVotingPower(\r\n            0,\r\n            members[1].addr,\r\n            abi.encode(root),\r\n            abi.encode(merkleLib.getProof(leaves, 2), members[2])\r\n        );\r\n    }\r\n}\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5941/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5941/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1739606616",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5941#issuecomment-1739606616",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5941",
    "id": 1739606616,
    "node_id": "IC_kwDOGBlvNc5nsEpY",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-28T15:57:17Z",
    "updated_at": "2023-09-28T16:03:11Z",
    "author_association": "MEMBER",
    "body": "thanks for flagging.\r\n\r\ncould you please prepare a repro for this so we can debug what's going on here?\r\n\r\nFYI @Evalir ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1739606616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1740690867",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5941#issuecomment-1740690867",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5941",
    "id": 1740690867,
    "node_id": "IC_kwDOGBlvNc5nwNWz",
    "user": {
      "login": "Orland0x",
      "id": 37511817,
      "node_id": "MDQ6VXNlcjM3NTExODE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/37511817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Orland0x",
      "html_url": "https://github.com/Orland0x",
      "followers_url": "https://api.github.com/users/Orland0x/followers",
      "following_url": "https://api.github.com/users/Orland0x/following{/other_user}",
      "gists_url": "https://api.github.com/users/Orland0x/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Orland0x/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Orland0x/subscriptions",
      "organizations_url": "https://api.github.com/users/Orland0x/orgs",
      "repos_url": "https://api.github.com/users/Orland0x/repos",
      "events_url": "https://api.github.com/users/Orland0x/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Orland0x/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-29T10:45:59Z",
    "updated_at": "2023-09-29T10:45:59Z",
    "author_association": "NONE",
    "body": "Okay did some digging myself and found it works as expected if the library call is made prior to the expect revert statement. like so \r\n```solidity\r\n        bytes32[] memory proof = merkleLib.getProof(leaves, 2);\r\n\r\n        // Proof is for a different member than the voter address\r\n        vm.expectRevert(InvalidMember.selector);\r\n        merkleWhitelistVotingStrategy.getVotingPower(\r\n            0,\r\n            members[1].addr,\r\n            abi.encode(root),\r\n            abi.encode(proof, members[2])\r\n        );\r\n```\r\n\r\nI assume what is happening is forge is expecting the first call to fail (which is the library call), then getting confused when it doesnt. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1740690867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1740710519",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5941#issuecomment-1740710519",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5941",
    "id": 1740710519,
    "node_id": "IC_kwDOGBlvNc5nwSJ3",
    "user": {
      "login": "Orland0x",
      "id": 37511817,
      "node_id": "MDQ6VXNlcjM3NTExODE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/37511817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Orland0x",
      "html_url": "https://github.com/Orland0x",
      "followers_url": "https://api.github.com/users/Orland0x/followers",
      "following_url": "https://api.github.com/users/Orland0x/following{/other_user}",
      "gists_url": "https://api.github.com/users/Orland0x/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Orland0x/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Orland0x/subscriptions",
      "organizations_url": "https://api.github.com/users/Orland0x/orgs",
      "repos_url": "https://api.github.com/users/Orland0x/repos",
      "events_url": "https://api.github.com/users/Orland0x/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Orland0x/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-29T11:01:46Z",
    "updated_at": "2023-09-29T11:01:46Z",
    "author_association": "NONE",
    "body": "repro here: https://github.com/Orland0x/foundry-revert-issue-demo/blob/main/test/Demo.t.sol",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1740710519/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
