{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4854",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4854/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4854/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4854/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4854",
  "id": 1689719749,
  "node_id": "I_kwDOGBlvNc5ktxPF",
  "number": 4854,
  "title": "Coverage doesn't cover internal libs when passing implicit storage vars via the `using` syntax",
  "user": {
    "login": "Craigson",
    "id": 4640172,
    "node_id": "MDQ6VXNlcjQ2NDAxNzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4640172?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Craigson",
    "html_url": "https://github.com/Craigson",
    "followers_url": "https://api.github.com/users/Craigson/followers",
    "following_url": "https://api.github.com/users/Craigson/following{/other_user}",
    "gists_url": "https://api.github.com/users/Craigson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Craigson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Craigson/subscriptions",
    "organizations_url": "https://api.github.com/users/Craigson/orgs",
    "repos_url": "https://api.github.com/users/Craigson/repos",
    "events_url": "https://api.github.com/users/Craigson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Craigson/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 4233058229,
      "node_id": "LA_kwDOGBlvNc78T1e1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-coverage",
      "name": "Cmd-forge-coverage",
      "color": "006B75",
      "default": false,
      "description": "Command: forge coverage"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-04-29T23:39:52Z",
  "updated_at": "2024-01-04T14:54:22Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (8f246e0 2023-04-28T00:14:27.758082000Z)\n\n### What command(s) is the bug in?\n\nforge coverage --report lcov && genhtml -o forge-coverage lcov.info\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\nWhen importing an internal lib and utilizing it with the `using` syntax, coverage does not detect any hits on the functions in the library.\r\n\r\nExample is shown below (some code omitted for brevity):\r\n\r\n```js\r\nimport \"./lib/StakeManagerLibs.sol\";\r\n\r\ncontract StakeManager is IStakeManager, Initializable {\r\n    ...\r\n    using LibStakesManager for Stakes;\r\n\r\n    function stakeFor(uint256 id, uint256 amount) external {\r\n        require(id != 0 && id <= _chains.counter, \"INVALID_ID\");\r\n        MATIC.safeTransferFrom(msg.sender, address(this), amount);\r\n        _stakes.addStake(msg.sender, id, amount); // <========= Coverage registers no hits here\r\n        ISupernetManager manager = managerOf(id);\r\n        manager.onStake(msg.sender, amount);\r\n        emit StakeAdded(id, msg.sender, amount);\r\n    }\r\n\r\n\r\n```\r\n\r\nYields the following coverage report:\r\n\r\n![Screen Shot 2023-04-29 at 7 33 30 PM](https://user-images.githubusercontent.com/4640172/235328259-c082d6a4-e51a-49df-a8aa-757b956f3c55.png)\r\n\r\nHowever, if I change the syntax of how the library function is called, where the storage variable isn't implicitly passed as the first argument, the coverage is correct.\r\n\r\n```js\r\n    function stakeFor(uint256 id, uint256 amount) external {\r\n        require(id != 0 && id <= _chains.counter, \"INVALID_ID\");\r\n        MATIC.safeTransferFrom(msg.sender, address(this), amount);\r\n        LibStakesManager.addStake(_stakes, msg.sender, id, amount); // <======= Use the library explicitly\r\n        // _stakes.addStake(msg.sender, id, amount);\r\n        ISupernetManager manager = managerOf(id);\r\n        manager.onStake(msg.sender, amount);\r\n        emit StakeAdded(id, msg.sender, amount);\r\n    }\r\n```\r\n\r\nThen coverage report is accurate:\r\n\r\n![Screen Shot 2023-04-29 at 7 36 41 PM](https://user-images.githubusercontent.com/4640172/235328329-d4ef4c6e-c63a-4cdb-952f-1bd8ac26f1db.png)\r\n\r\nAnother important piece of information to add is that calling the Library function explicitly just once, ie the remainder of the `_stakes.addStake(...)` and any additional library calls to any/all functions using the implicit syntax are now covered.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4854/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4854/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1528897219",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4854#issuecomment-1528897219",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4854",
    "id": 1528897219,
    "node_id": "IC_kwDOGBlvNc5bIR7D",
    "user": {
      "login": "Craigson",
      "id": 4640172,
      "node_id": "MDQ6VXNlcjQ2NDAxNzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4640172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Craigson",
      "html_url": "https://github.com/Craigson",
      "followers_url": "https://api.github.com/users/Craigson/followers",
      "following_url": "https://api.github.com/users/Craigson/following{/other_user}",
      "gists_url": "https://api.github.com/users/Craigson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Craigson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Craigson/subscriptions",
      "organizations_url": "https://api.github.com/users/Craigson/orgs",
      "repos_url": "https://api.github.com/users/Craigson/repos",
      "events_url": "https://api.github.com/users/Craigson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Craigson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-29T23:40:23Z",
    "updated_at": "2023-04-29T23:40:23Z",
    "author_association": "NONE",
    "body": "@gretzke for visibility",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1528897219/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1528899232",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4854#issuecomment-1528899232",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4854",
    "id": 1528899232,
    "node_id": "IC_kwDOGBlvNc5bISag",
    "user": {
      "login": "gretzke",
      "id": 10338391,
      "node_id": "MDQ6VXNlcjEwMzM4Mzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/10338391?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gretzke",
      "html_url": "https://github.com/gretzke",
      "followers_url": "https://api.github.com/users/gretzke/followers",
      "following_url": "https://api.github.com/users/gretzke/following{/other_user}",
      "gists_url": "https://api.github.com/users/gretzke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gretzke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gretzke/subscriptions",
      "organizations_url": "https://api.github.com/users/gretzke/orgs",
      "repos_url": "https://api.github.com/users/gretzke/repos",
      "events_url": "https://api.github.com/users/gretzke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gretzke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-29T23:57:16Z",
    "updated_at": "2023-04-29T23:57:16Z",
    "author_association": "NONE",
    "body": "The workaround of calling the library directly once also only works once. If you have a second internal library in the same contract you can call it directly as often as you want, it won't show up in the coverage report as covered. This does not seem to be connected to the `using X for Y` syntax, calling all internal libraries directly shows the same behaviour.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1528899232/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1545741963",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4854#issuecomment-1545741963",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4854",
    "id": 1545741963,
    "node_id": "IC_kwDOGBlvNc5cIiaL",
    "user": {
      "login": "FredCoen",
      "id": 43670554,
      "node_id": "MDQ6VXNlcjQzNjcwNTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/43670554?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FredCoen",
      "html_url": "https://github.com/FredCoen",
      "followers_url": "https://api.github.com/users/FredCoen/followers",
      "following_url": "https://api.github.com/users/FredCoen/following{/other_user}",
      "gists_url": "https://api.github.com/users/FredCoen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FredCoen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FredCoen/subscriptions",
      "organizations_url": "https://api.github.com/users/FredCoen/orgs",
      "repos_url": "https://api.github.com/users/FredCoen/repos",
      "events_url": "https://api.github.com/users/FredCoen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FredCoen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T13:24:30Z",
    "updated_at": "2023-05-12T13:24:30Z",
    "author_association": "NONE",
    "body": "having similar issue with using for directive on custom types",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1545741963/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1707109731",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4854#issuecomment-1707109731",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4854",
    "id": 1707109731,
    "node_id": "IC_kwDOGBlvNc5lwG1j",
    "user": {
      "login": "aiwowo1",
      "id": 89056917,
      "node_id": "MDQ6VXNlcjg5MDU2OTE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/89056917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aiwowo1",
      "html_url": "https://github.com/aiwowo1",
      "followers_url": "https://api.github.com/users/aiwowo1/followers",
      "following_url": "https://api.github.com/users/aiwowo1/following{/other_user}",
      "gists_url": "https://api.github.com/users/aiwowo1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aiwowo1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aiwowo1/subscriptions",
      "organizations_url": "https://api.github.com/users/aiwowo1/orgs",
      "repos_url": "https://api.github.com/users/aiwowo1/repos",
      "events_url": "https://api.github.com/users/aiwowo1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aiwowo1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-05T18:26:18Z",
    "updated_at": "2023-09-05T18:31:18Z",
    "author_association": "NONE",
    "body": "I think I have the similar issue by using the `using` syntax to define a state struct define in an internal library. The code coverage report 0 coverage. \r\n\r\nwhat it doesn't work is:\r\n```\r\n   using GeometricBWAP for GeometricBWAP.Observations;\r\n   GeometricBWAP.Observations private obs;\r\n \r\n   obs.configLongTermInterval(longTermIntervalConfig);\r\n```\r\n\r\nwhat's my work around is:\r\n```\r\n  GeometricBWAP.configLongTermInterval(obs, longTermIntervalConfig);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1707109731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1877227526",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4854#issuecomment-1877227526",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4854",
    "id": 1877227526,
    "node_id": "IC_kwDOGBlvNc5v5DgG",
    "user": {
      "login": "aviggiano",
      "id": 3029017,
      "node_id": "MDQ6VXNlcjMwMjkwMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3029017?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aviggiano",
      "html_url": "https://github.com/aviggiano",
      "followers_url": "https://api.github.com/users/aviggiano/followers",
      "following_url": "https://api.github.com/users/aviggiano/following{/other_user}",
      "gists_url": "https://api.github.com/users/aviggiano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aviggiano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aviggiano/subscriptions",
      "organizations_url": "https://api.github.com/users/aviggiano/orgs",
      "repos_url": "https://api.github.com/users/aviggiano/repos",
      "events_url": "https://api.github.com/users/aviggiano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aviggiano/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-04T14:54:21Z",
    "updated_at": "2024-01-04T14:54:21Z",
    "author_association": "NONE",
    "body": "I am having the same issue, but interestingly I don't get 0 coverage, only partial coverage, even though all lines are being touched by my tests.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1877227526/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
