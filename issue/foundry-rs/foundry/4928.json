{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4928",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4928/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4928/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4928/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4928",
  "id": 1707231560,
  "node_id": "I_kwDOGBlvNc5lwklI",
  "number": 4928,
  "title": "refactor foundry-evm",
  "user": {
    "login": "DaniPopes",
    "id": 57450786,
    "node_id": "MDQ6VXNlcjU3NDUwNzg2",
    "avatar_url": "https://avatars.githubusercontent.com/u/57450786?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/DaniPopes",
    "html_url": "https://github.com/DaniPopes",
    "followers_url": "https://api.github.com/users/DaniPopes/followers",
    "following_url": "https://api.github.com/users/DaniPopes/following{/other_user}",
    "gists_url": "https://api.github.com/users/DaniPopes/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/DaniPopes/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/DaniPopes/subscriptions",
    "organizations_url": "https://api.github.com/users/DaniPopes/orgs",
    "repos_url": "https://api.github.com/users/DaniPopes/repos",
    "events_url": "https://api.github.com/users/DaniPopes/events{/privacy}",
    "received_events_url": "https://api.github.com/users/DaniPopes/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-05-12T08:55:27Z",
  "updated_at": "2023-05-13T02:27:58Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "The `foundry-evm` crate is massive. Compiling it takes more than 4 seconds on simple incremental `cargo check` builds (which goes to 7 or 8 seconds including `rust-analyzer`), and over 30 seconds on optimized builds.\r\n\r\nRoughly 2 to 3 seconds are spent on each new build on just the `abigen!` macro invocations, which is most of the time spent in debug checking (see [`-Zprofile-self`](https://blog.rust-lang.org/inside-rust/2020/02/25/intro-rustc-self-profile.html)). Separating these into their own crate would mean they would only need to get expanded once, and much earlier in the build since they only require basic ethers types.\r\n\r\nSome other ideas:\r\n- further split off from the crate `foundry-cheatcodes` or `foundry-inspector`. Also provides a clearer way to contribute to cheatcodes, and could help with tests.\r\n  - Maybe derive the cheatcodes bindings by compiling the Solidity interface in a build script? Less maintenance burden.\r\n- use `ethers-*` sub-crates instead of `ethers`\r\n- merge `utils.rs`, `decode.rs`, `error.rs` into `foundry-utils`\r\n- remove `hashbrown` dependency and just use `std::collections`, because they're the same, minus the hasher. This can be imported separately.\r\n- remove `ethers-solc` dependency to allow compilation to start earlier from as many crates as possible. Compiling `ethers-solc` is a major bottleneck due to its huge size and its dependencies `lalrpop` -> `solang-parser`.\r\nIts utils can be vendored separately, and everything else can go into `foundry-solc`. Maybe one day in the future we'll also be able to have a language-agnostic backend too, and this certainly helps towards it.\r\n\r\nAs we add more crates, we should also consider to flatten the project structure into a \"crates/\" directory.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4928/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4928/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1545444774",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4928#issuecomment-1545444774",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4928",
    "id": 1545444774,
    "node_id": "IC_kwDOGBlvNc5cHZ2m",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T09:22:03Z",
    "updated_at": "2023-05-12T09:22:03Z",
    "author_association": "MEMBER",
    "body": "yes!!!\r\n\r\n> further split off from the crate foundry-cheatcodes or foundry-inspector. Also provides a clearer way to contribute to cheatcodes, and could help with tests.\r\n\r\n100%\r\n\r\n> As we add more crates, we should also consider to flatten the project structure into a \"crates/\" directory.\r\n\r\nsupportive",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1545444774/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
