{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4071",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4071/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4071/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4071/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4071",
  "id": 1529653306,
  "node_id": "I_kwDOGBlvNc5bLKg6",
  "number": 4071,
  "title": "Feat: Coverage Snapshot ",
  "user": {
    "login": "sambacha",
    "id": 32783916,
    "node_id": "MDQ6VXNlcjMyNzgzOTE2",
    "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sambacha",
    "html_url": "https://github.com/sambacha",
    "followers_url": "https://api.github.com/users/sambacha/followers",
    "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
    "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
    "organizations_url": "https://api.github.com/users/sambacha/orgs",
    "repos_url": "https://api.github.com/users/sambacha/repos",
    "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sambacha/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-01-11T20:31:48Z",
  "updated_at": "2023-01-11T20:31:48Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\n## Coverage Snapshot\r\n\r\ni.e. `gas-snapshot` but for `coverage`. \r\n\r\n\r\n### Snapshot\r\n\r\nThis script records line and function coverage in the format:\r\n\r\n```\r\nlineCoverage result 66.7 %\r\nfunctionCoverage result 50.0 %\r\n```\r\n\r\n#### Coverage Script \r\n\r\n```bash\r\n#!/usr/bin/env bash\r\n\r\nset -euo pipefail\r\n\r\nmkdir -p \"$PWD\"/.coverage/\r\n\r\ncoverageSnapshotPhase() \r\n{\r\n    mkdir -p \"$PWD\"/.coverage/ \r\n    genhtml lcov.info -o  --branch-coverage \"$PWD\"/.coverage > log\r\n    # genhtml lcov.info $lcovExtraTraceFiles -o $out/.coverage > log\r\n    lineCoverage=\"$(sed 's/.*lines\\.*: \\([0-9\\.]\\+\\)%.*/\\1/; t ; d' log)\"\r\n    functionCoverage=\"$(sed 's/.*functions\\.*: \\([0-9\\.]\\+\\)%.*/\\1/; t ; d' log)\"\r\n        if [ -z \"$lineCoverage\" -o -z \"$functionCoverage\" ]; then\r\n            echo \"⛔︎ Failed to get coverage statistics\"\r\n            exit 1\r\n        fi\r\n    echo \"lineCoverage result $lineCoverage %\" >> \"$PWD\"/.coverage/snapshot\r\n    echo \"functionCoverage result $functionCoverage %\" >> \"$PWD\"/.coverage/snapshot\r\n    touch \"$PWD\"/.coverage/CI_TIMESTAMP\r\n    date +\"%Y%m%d%H%M%S\" >> \"$PWD\"/.coverage/CI_TIMESTAMP\r\n}\r\n\r\ncoverageSnapshotPhase\r\n\r\necho \"Snapshot recorded\"\r\n\r\nFOUND_WARNINGS=$(grep \"\\d+ result\" -Po .coverage/snapshot | sed 's/ result//g')\r\nif (( $(echo \"$FOUND_WARNINGS <= 50\" | bc -l) )) ; then\r\n  COLOR=red\r\nelif (( $(echo \"$FOUND_WARNINGS > 60\" | bc -l) )); then\r\n  COLOR=green\r\nelse\r\n  COLOR=orange\r\nfi\r\n\r\necho \"$FOUND_WARNINGS\"\r\n\r\nrm log\r\nsleep 1\r\nexit 0\r\n```\r\n\r\n\r\nThis does not follow the `gas snapshot` format which tbh I dislike as it is difficult to regex against. \n\n### Additional context\n\n**Note**: I flatten the contract to run coverage reporting against, ergo this script works for that context. ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4071/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4071/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
