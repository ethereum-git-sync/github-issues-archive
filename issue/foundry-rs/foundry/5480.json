{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5480",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5480/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5480/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5480/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5480",
  "id": 1822700865,
  "node_id": "I_kwDOGBlvNc5spDVB",
  "number": 5480,
  "title": "Add a way to enforce that a mocked function is called with certain arguments",
  "user": {
    "login": "JasoonS",
    "id": 6032276,
    "node_id": "MDQ6VXNlcjYwMzIyNzY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6032276?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JasoonS",
    "html_url": "https://github.com/JasoonS",
    "followers_url": "https://api.github.com/users/JasoonS/followers",
    "following_url": "https://api.github.com/users/JasoonS/following{/other_user}",
    "gists_url": "https://api.github.com/users/JasoonS/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JasoonS/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JasoonS/subscriptions",
    "organizations_url": "https://api.github.com/users/JasoonS/orgs",
    "repos_url": "https://api.github.com/users/JasoonS/repos",
    "events_url": "https://api.github.com/users/JasoonS/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JasoonS/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2022-05-04T10:30:19Z",
  "updated_at": "2023-07-26T15:43:07Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nCurrently tests don't break if a mocked function is called with different arguments to what was expected.\r\n\r\nCurrently for example:\r\n```solidity\r\n    cheats.mockCall(\r\n      address(mocker),\r\n      abi.encodeWithSelector(\r\n        SomeContract.someFunction.selector,\r\n        5\r\n      ),\r\n      abi.encode(6)\r\n    );\r\n```\r\nWith the above code it will return 6 if the function is called with an argument of 5 or anything else, additionally it won't fail if it isn't called with 5 (which is something you sometimes want to check.\r\n\r\nI propose adding a function called something like `mockCallStrict` to the cheats so that tests can be more strict about this.\n\n### Additional context\n\nThis is a feature of Smock: https://smock.readthedocs.io/en/latest/fakes.html#asserting-call-arguments",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5480/reactions",
    "total_count": 6,
    "+1": 6,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5480/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1652076166",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5480#issuecomment-1652076166",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5480",
    "id": 1652076166,
    "node_id": "IC_kwDOGBlvNc5ieK6G",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-04T15:37:18Z",
    "updated_at": "2022-05-04T15:38:22Z",
    "author_association": "MEMBER",
    "body": "You might be interested in `expectCall` instead. I don't think `mockCall` should be a superset of `expectCall`. Sometimes you definitely do want to only mock for a certain parameter, but still retain the ability to get real data for all other cases. If you want a stricter version perhaps this is a good addition to Forge Std instead as a wrapper around `expectCall` + `mockCall`",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1652076166/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1652076178",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5480#issuecomment-1652076178",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5480",
    "id": 1652076178,
    "node_id": "IC_kwDOGBlvNc5ieK6S",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-04T18:32:19Z",
    "updated_at": "2022-05-04T18:32:19Z",
    "author_association": "MEMBER",
    "body": "adding a mock+expect combination in forge-std makes sense to me",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1652076178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1652076186",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5480#issuecomment-1652076186",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5480",
    "id": 1652076186,
    "node_id": "IC_kwDOGBlvNc5ieK6a",
    "user": {
      "login": "JasoonS",
      "id": 6032276,
      "node_id": "MDQ6VXNlcjYwMzIyNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6032276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JasoonS",
      "html_url": "https://github.com/JasoonS",
      "followers_url": "https://api.github.com/users/JasoonS/followers",
      "following_url": "https://api.github.com/users/JasoonS/following{/other_user}",
      "gists_url": "https://api.github.com/users/JasoonS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JasoonS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JasoonS/subscriptions",
      "organizations_url": "https://api.github.com/users/JasoonS/orgs",
      "repos_url": "https://api.github.com/users/JasoonS/repos",
      "events_url": "https://api.github.com/users/JasoonS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JasoonS/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-05T11:47:09Z",
    "updated_at": "2022-05-05T11:47:09Z",
    "author_association": "NONE",
    "body": "Thanks, that makes sense to me too.\r\n\r\nI won't make any changes to the std lib right now, but I'm working on some code-gen stuff that might be useful for others once it is done to assist with mocking.\r\nMaybe that can be upstreamed at some point if it is useful.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1652076186/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1652076193",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5480#issuecomment-1652076193",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5480",
    "id": 1652076193,
    "node_id": "IC_kwDOGBlvNc5ieK6h",
    "user": {
      "login": "JasoonS",
      "id": 6032276,
      "node_id": "MDQ6VXNlcjYwMzIyNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6032276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JasoonS",
      "html_url": "https://github.com/JasoonS",
      "followers_url": "https://api.github.com/users/JasoonS/followers",
      "following_url": "https://api.github.com/users/JasoonS/following{/other_user}",
      "gists_url": "https://api.github.com/users/JasoonS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JasoonS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JasoonS/subscriptions",
      "organizations_url": "https://api.github.com/users/JasoonS/orgs",
      "repos_url": "https://api.github.com/users/JasoonS/repos",
      "events_url": "https://api.github.com/users/JasoonS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JasoonS/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-05T11:49:03Z",
    "updated_at": "2022-05-05T11:49:03Z",
    "author_association": "NONE",
    "body": "Also FYI - my codegen work will allow mocking of internal functions without needing to move the the REVM as mentioned in this PR - https://github.com/foundry-rs/foundry/issues/432 . \r\n\r\nLike I say, I'll definitely share my work on that in the coming weeks/months :+1:  ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1652076193/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1652076203",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5480#issuecomment-1652076203",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5480",
    "id": 1652076203,
    "node_id": "IC_kwDOGBlvNc5ieK6r",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-05T15:36:03Z",
    "updated_at": "2022-05-05T15:36:03Z",
    "author_association": "MEMBER",
    "body": "@brockelmore Perhaps we should transfer this to Forge Std as well? Or maybe just close it and open up a new issue? Wdyt?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1652076203/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1652076212",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5480#issuecomment-1652076212",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5480",
    "id": 1652076212,
    "node_id": "IC_kwDOGBlvNc5ieK60",
    "user": {
      "login": "dtu96303e",
      "id": 138565319,
      "node_id": "U_kgDOCEJWxw",
      "avatar_url": "https://avatars.githubusercontent.com/u/138565319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dtu96303e",
      "html_url": "https://github.com/dtu96303e",
      "followers_url": "https://api.github.com/users/dtu96303e/followers",
      "following_url": "https://api.github.com/users/dtu96303e/following{/other_user}",
      "gists_url": "https://api.github.com/users/dtu96303e/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dtu96303e/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dtu96303e/subscriptions",
      "organizations_url": "https://api.github.com/users/dtu96303e/orgs",
      "repos_url": "https://api.github.com/users/dtu96303e/repos",
      "events_url": "https://api.github.com/users/dtu96303e/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dtu96303e/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-24T20:44:52Z",
    "updated_at": "2023-07-24T20:44:52Z",
    "author_association": "NONE",
    "body": "> ### Component\r\n> Forge\r\n> \r\n> ### Describe the feature you would like\r\n> Currently tests don't break if a mocked function is called with different arguments to what was expected.\r\n> \r\n> Currently for example:\r\n> \r\n> ```solidity\r\n>     cheats.mockCall(\r\n>       address(mocker),\r\n>       abi.encodeWithSelector(\r\n>         SomeContract.someFunction.selector,\r\n>         5\r\n>       ),\r\n>       abi.encode(6)\r\n>     );\r\n> ```\r\n> \r\n> With the above code it will return 6 if the function is called with an argument of 5 or anything else, additionally it won't fail if it isn't called with 5 (which is something you sometimes want to check.\r\n> \r\n> I propose adding a function called something like `mockCallStrict` to the cheats so that tests can be more strict about this.\r\n> \r\n> ### Additional context\r\n> This is a feature of Smock: https://smock.readthedocs.io/en/latest/fakes.html#asserting-call-arguments\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1652076212/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1652076221",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5480#issuecomment-1652076221",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5480",
    "id": 1652076221,
    "node_id": "IC_kwDOGBlvNc5ieK69",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-26T15:42:53Z",
    "updated_at": "2023-07-26T15:42:53Z",
    "author_association": "COLLABORATOR",
    "body": "Per https://github.com/foundry-rs/foundry/issues/3782, I'm going to move this back to the foundry repo\r\n\r\nI'm also not too clear on the exact proposal here, I'd be curious to see sample code of that the cheat/UX would look like",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1652076221/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
