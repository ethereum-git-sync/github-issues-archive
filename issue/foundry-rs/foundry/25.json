{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/25",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/25/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/25/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/25/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/25",
  "id": 1001485227,
  "node_id": "I_kwDOGBlvNc47sXOr",
  "number": 25,
  "title": "forking mode ",
  "user": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3394555740,
      "node_id": "LA_kwDOGBlvNc7KVM9c",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-evm",
      "name": "A-evm",
      "color": "FBCA04",
      "default": false,
      "description": "Area: EVM"
    },
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759720362,
      "node_id": "LA_kwDOGBlvNc7gGMeq",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-average",
      "name": "D-average",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: average"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-09-20T22:05:59Z",
  "updated_at": "2023-02-25T18:56:47Z",
  "closed_at": "2023-02-25T18:56:46Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "https://github.com/brockelmore/rust-cevm/commit/30eefd0dde797554a2548ce4b44ed64d4b48c44c pretty clean\r\nhttps://github.com/brockelmore/rust-cevm/search?q=fork+backend\r\n\r\nif we can parallelize requests with `join`s, multithreaded tokio runtime etc. to get very high performance that'd be great",
  "closed_by": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/25/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/25/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/924080655",
    "html_url": "https://github.com/foundry-rs/foundry/issues/25#issuecomment-924080655",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/25",
    "id": 924080655,
    "node_id": "IC_kwDOGBlvNc43FFoP",
    "user": {
      "login": "wolflo",
      "id": 33909953,
      "node_id": "MDQ6VXNlcjMzOTA5OTUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/33909953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wolflo",
      "html_url": "https://github.com/wolflo",
      "followers_url": "https://api.github.com/users/wolflo/followers",
      "following_url": "https://api.github.com/users/wolflo/following{/other_user}",
      "gists_url": "https://api.github.com/users/wolflo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wolflo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wolflo/subscriptions",
      "organizations_url": "https://api.github.com/users/wolflo/orgs",
      "repos_url": "https://api.github.com/users/wolflo/repos",
      "events_url": "https://api.github.com/users/wolflo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wolflo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-21T15:07:35Z",
    "updated_at": "2021-09-21T15:07:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Possible feature addition:\r\n\r\nPut all state-touching opcodes behind an async trait, which allows alternatives to RPC calls for getting the original forked state. For instance, we could implement this trait for a `GethDBProvider` that talks directly to the DB of a synced, locally running Geth node. The inspiration here is from [dialecticch/sibyl](https://github.com/dialecticch/sibyl).\r\n\r\nA rough outline of how this might be possible:\r\n\r\nI assume fork mode would take each state-reading opcode and attempt to read from the in-memory state (i.e. the state diff of our fork from the mainnet state). If there is no in-memory alteration there, it would make an RPC call to read from the forked network state.\r\n[brockelmore/rust-cevm](https://github.com/brockelmore/rust-cevm/blob/30eefd0dde797554a2548ce4b44ed64d4b48c44c/src/backend/fork_memory.rs#L94-L105)\r\n\r\n As an alternative, if no in-memory alteration is found, we could delagate to the `GethDBProvider`. Instead of making an RPC call, this would read directly from Geth's LevelDB database at a provided path. These alternative fork-readers could be implemented per-client with each one understanding a particular clients DB layout.\r\n\r\nIt's possible these could also be used for fuzzing the current state for a particular test. This could be a sort of modified fork mode where we might take some realistic state from a forked network but fuzz the possible values for a particular storage slot.\r\n\r\nI'm unsure what the plan is for using or building an EVM implementation, but as an example these DB providers could all implement evmodin's Host trait, then a storage read would fallback to `host.get_storage()`, which might make an RPC call or read from a local DB.\r\n[vorot93/evmodin](https://github.com/vorot93/evmodin/blob/ef1bee33aeee962421e32bf23cfb0bb4903a3125/src/host.rs#L55-L61)\r\n\r\nIt looks like Akula actually uses execution interrupts for this:\r\n[akula-bft/akula](https://github.com/akula-bft/akula/blob/809773a03dc6e62e844bc681d58d035364c837f3/src/execution/evm.rs#L330-L336)\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/924080655/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/927828812",
    "html_url": "https://github.com/foundry-rs/foundry/issues/25#issuecomment-927828812",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/25",
    "id": 927828812,
    "node_id": "IC_kwDOGBlvNc43TYtM",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-27T12:33:22Z",
    "updated_at": "2021-09-27T12:33:22Z",
    "author_association": "MEMBER",
    "body": "Base RPC support was added in #42. Leaving this open for implementing the other forking methods above.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/927828812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1445181975",
    "html_url": "https://github.com/foundry-rs/foundry/issues/25#issuecomment-1445181975",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/25",
    "id": 1445181975,
    "node_id": "IC_kwDOGBlvNc5WI7oX",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-25T18:56:46Z",
    "updated_at": "2023-02-25T18:56:46Z",
    "author_association": "COLLABORATOR",
    "body": "Seems this can be closed since we now have forking",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1445181975/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
