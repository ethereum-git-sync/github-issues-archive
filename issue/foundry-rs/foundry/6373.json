{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6373",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6373/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6373/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6373/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6373",
  "id": 2002791819,
  "node_id": "I_kwDOGBlvNc53YC2L",
  "number": 6373,
  "title": "[feature] foundry.toml settings conditional on OS type",
  "user": {
    "login": "marktoda",
    "id": 40770586,
    "node_id": "MDQ6VXNlcjQwNzcwNTg2",
    "avatar_url": "https://avatars.githubusercontent.com/u/40770586?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/marktoda",
    "html_url": "https://github.com/marktoda",
    "followers_url": "https://api.github.com/users/marktoda/followers",
    "following_url": "https://api.github.com/users/marktoda/following{/other_user}",
    "gists_url": "https://api.github.com/users/marktoda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/marktoda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/marktoda/subscriptions",
    "organizations_url": "https://api.github.com/users/marktoda/orgs",
    "repos_url": "https://api.github.com/users/marktoda/repos",
    "events_url": "https://api.github.com/users/marktoda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/marktoda/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-11-20T18:42:47Z",
  "updated_at": "2023-11-20T20:19:40Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nIt would be nice to be able to set some settings in `foundry.toml` depending on the current OS. \r\n\r\nMy specific use case is that Uniswap/v4-core uses a custom solc binary, which has a [different target](https://github.com/Uniswap/v4-core/tree/main/bin) for different OSes. We currently set the target using $OSTYPE in a sourced .env file, but this is annoying \r\n\r\nOne API would be something like\r\n```\r\n[os.linux]\r\nsolc = ./bin/static-linux-solc\r\n\r\n[os.mac]\r\nsolc = ./bin/mac-solc\r\n\r\n[os.default]\r\nsolc = ./bin/solc\r\n```\r\n\r\nBut even better would be allowing some light variable definitions and callable functions in foundry.toml, similar to `[just](https://github.com/casey/just/blob/master/examples/cross-platform.just)` \n\n### Additional context\n\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6373/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6373/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1819659346",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6373#issuecomment-1819659346",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6373",
    "id": 1819659346,
    "node_id": "IC_kwDOGBlvNc5sdcxS",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-20T19:18:36Z",
    "updated_at": "2023-11-20T19:18:36Z",
    "author_association": "MEMBER",
    "body": "this is definitely something we want to support.\r\n\r\na profile specific `[os]` table that supports all config values would be possible and not to complex to add I believe like\r\n\r\n`[profile.default.{linux,macos,windows}]` that is then merged into `profile.default` depending on the platform?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1819659346/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1819722925",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6373#issuecomment-1819722925",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6373",
    "id": 1819722925,
    "node_id": "IC_kwDOGBlvNc5sdsSt",
    "user": {
      "login": "marktoda",
      "id": 40770586,
      "node_id": "MDQ6VXNlcjQwNzcwNTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/40770586?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marktoda",
      "html_url": "https://github.com/marktoda",
      "followers_url": "https://api.github.com/users/marktoda/followers",
      "following_url": "https://api.github.com/users/marktoda/following{/other_user}",
      "gists_url": "https://api.github.com/users/marktoda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marktoda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marktoda/subscriptions",
      "organizations_url": "https://api.github.com/users/marktoda/orgs",
      "repos_url": "https://api.github.com/users/marktoda/repos",
      "events_url": "https://api.github.com/users/marktoda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marktoda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-20T20:05:20Z",
    "updated_at": "2023-11-20T20:05:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "That would work great!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1819722925/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1819724482",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6373#issuecomment-1819724482",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6373",
    "id": 1819724482,
    "node_id": "IC_kwDOGBlvNc5sdsrC",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-20T20:06:38Z",
    "updated_at": "2023-11-20T20:06:38Z",
    "author_association": "MEMBER",
    "body": "wdyt @Evalir @DaniPopes ?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1819724482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1819725669",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6373#issuecomment-1819725669",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6373",
    "id": 1819725669,
    "node_id": "IC_kwDOGBlvNc5sds9l",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-20T20:07:35Z",
    "updated_at": "2023-11-20T20:07:35Z",
    "author_association": "COLLABORATOR",
    "body": "> `[profile.default.{linux,macos,windows}]` that is then merged into `profile.default` depending on the platform?\r\n\r\nWould the OS specific sections support all keys that regular profiles support, e.g. `profile.default.linux.fuzz.seed` would replace what is defined in `profile.default.fuzz.seed`?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1819725669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1819744448",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6373#issuecomment-1819744448",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6373",
    "id": 1819744448,
    "node_id": "IC_kwDOGBlvNc5sdxjA",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-20T20:19:39Z",
    "updated_at": "2023-11-20T20:19:39Z",
    "author_association": "MEMBER",
    "body": "I think we can support all keys, and those set under `[..linux]` replace the others, if on linux.\r\n\r\nso \r\n\r\n> Would the OS specific sections support all keys that regular profiles support, e.g. profile.default.linux.fuzz.seed would replace what is defined in profile.default.fuzz.seed?\r\n\r\nyes",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1819744448/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
