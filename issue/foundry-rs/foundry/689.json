{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/689",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/689/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/689/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/689/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/689",
  "id": 1125501986,
  "node_id": "I_kwDOGBlvNc5DFcwi",
  "number": 689,
  "title": "Add config support to cast",
  "user": {
    "login": "ncitron",
    "id": 16858330,
    "node_id": "MDQ6VXNlcjE2ODU4MzMw",
    "avatar_url": "https://avatars.githubusercontent.com/u/16858330?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ncitron",
    "html_url": "https://github.com/ncitron",
    "followers_url": "https://api.github.com/users/ncitron/followers",
    "following_url": "https://api.github.com/users/ncitron/following{/other_user}",
    "gists_url": "https://api.github.com/users/ncitron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ncitron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ncitron/subscriptions",
    "organizations_url": "https://api.github.com/users/ncitron/orgs",
    "repos_url": "https://api.github.com/users/ncitron/repos",
    "events_url": "https://api.github.com/users/ncitron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ncitron/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752609,
      "node_id": "LA_kwDOGBlvNc7cwseh",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-cast",
      "name": "C-cast",
      "color": "5319E7",
      "default": false,
      "description": "Command: cast"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2022-02-07T04:39:53Z",
  "updated_at": "2022-04-16T09:31:11Z",
  "closed_at": "2022-04-16T09:31:11Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nCast\n\n### Describe the feature you would like\n\nRight now the config items only are only consumed by forge. Many of the options in cast could benefit from the config feature such as ETH_RPC_URL and ETHERSCAN_API_KEY.\r\n\r\nI was looking into how the implementation of this would work but have gotten a bit stuck. Forge relies on having a common `BuildArgs` struct that can be deserialized from the config file. Unfortunately, this is not the case for cast. One thought I had was creating a `CastCommon` struct that served the same purpose as `BuildArgs`, but this might make the help sections generated by clap confusing, since some of the fields of `CastCommon` may not make sense in the context of certain commands.\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/689/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/689/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1036053590",
    "html_url": "https://github.com/foundry-rs/foundry/issues/689#issuecomment-1036053590",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/689",
    "id": 1036053590,
    "node_id": "IC_kwDOGBlvNc49wOxW",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-11T10:17:59Z",
    "updated_at": "2022-02-11T10:19:00Z",
    "author_association": "MEMBER",
    "body": "good point.\r\n\r\nA `CastCommon` could be tricky, instead we should try to make it easier to implement `figment::Provider` for cast commands that have fields that need to be merged with the config.\r\n\r\nthere a essentially two steps for integration a command with the `Config`\r\n\r\n1. implement `figment::Provider` which should provide the `Figment` with the values the command overrides in the config, see BuildArgs for example\r\n2. implement a helper functions that `merge` the `Config` figment with the command:\r\n\r\nhttps://github.com/gakonst/foundry/blob/cfc4ff01e56fda35a584c125a87f9959285dabf6/cli/src/cmd/build.rs#L21-L45\r\n\r\nbasically `Config::figment_with_root(find_project_root_path().unwrap()).merge(args)`\r\n\r\nthen you can do:\r\n`let config: Config = self.into();` \r\nwhen the command is executed\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1036053590/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1053504683",
    "html_url": "https://github.com/foundry-rs/foundry/issues/689#issuecomment-1053504683",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/689",
    "id": 1053504683,
    "node_id": "IC_kwDOGBlvNc4-yzSr",
    "user": {
      "login": "psushi",
      "id": 22870103,
      "node_id": "MDQ6VXNlcjIyODcwMTAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/22870103?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psushi",
      "html_url": "https://github.com/psushi",
      "followers_url": "https://api.github.com/users/psushi/followers",
      "following_url": "https://api.github.com/users/psushi/following{/other_user}",
      "gists_url": "https://api.github.com/users/psushi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/psushi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/psushi/subscriptions",
      "organizations_url": "https://api.github.com/users/psushi/orgs",
      "repos_url": "https://api.github.com/users/psushi/repos",
      "events_url": "https://api.github.com/users/psushi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/psushi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-27T11:07:44Z",
    "updated_at": "2022-02-27T11:07:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Anyone working on this? really want this added to cast, so can give a shot ðŸ˜„ ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1053504683/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1060826582",
    "html_url": "https://github.com/foundry-rs/foundry/issues/689#issuecomment-1060826582",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/689",
    "id": 1060826582,
    "node_id": "IC_kwDOGBlvNc4_Ou3W",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-07T15:42:47Z",
    "updated_at": "2022-03-07T15:42:47Z",
    "author_association": "MEMBER",
    "body": "Feel free, I don't think anyone is working on it @SusheendharVijay :smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1060826582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1065085181",
    "html_url": "https://github.com/foundry-rs/foundry/issues/689#issuecomment-1065085181",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/689",
    "id": 1065085181,
    "node_id": "IC_kwDOGBlvNc4_e-j9",
    "user": {
      "login": "psushi",
      "id": 22870103,
      "node_id": "MDQ6VXNlcjIyODcwMTAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/22870103?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psushi",
      "html_url": "https://github.com/psushi",
      "followers_url": "https://api.github.com/users/psushi/followers",
      "following_url": "https://api.github.com/users/psushi/following{/other_user}",
      "gists_url": "https://api.github.com/users/psushi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/psushi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/psushi/subscriptions",
      "organizations_url": "https://api.github.com/users/psushi/orgs",
      "repos_url": "https://api.github.com/users/psushi/repos",
      "events_url": "https://api.github.com/users/psushi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/psushi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-11T12:51:04Z",
    "updated_at": "2022-03-11T12:51:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @mattsse, some questions while working on this, \r\n- So if I understand correctly, we need structs like BuildArgs, BindArgs, CreateArgs etc, but for cast commands that consume config items? \r\n- For a new cast command that uses config values, \r\n    - we create an Args struct, impl Provider trait, impl From(Arg) for Config (merge here), and impl Cmd. \r\n\r\n\r\nIs this what you were talking about? I'm still wrapping my head around it. Thanks!\r\n\r\nSample `CallArgs` for `cast call` that uses config data (it won't compile, just sharing for basic structure). \r\n\r\n```rust\r\npub struct CallArgs {\r\n    #[clap(help = \"the address you want to query\", parse(try_from_str = parse_name_or_address))]\r\n    address: NameOrAddress,\r\n    sig: String,\r\n    args: Vec<String>,\r\n    #[clap(long, short, help = \"the block you want to query, can also be earliest/latest/pending\", parse(try_from_str = parse_block_id))]\r\n    block: Option<BlockId>,\r\n    #[clap(flatten)]\r\n    eth: EthereumOpts,\r\n}\r\n\r\nimpl<'a> From<&'a CallArgs> for Config {\r\n    fn from(args: &'a CallArgs) -> Self {\r\n        let config = Config::figment_with_root(find_project_root_path().unwrap())\r\n            .merge(args)\r\n            .extract::<Config>()\r\n            .unwrap();\r\n        config\r\n    }\r\n}\r\n\r\nimpl Provider for CallArgs {\r\n    fn metadata(&self) -> Metadata {\r\n        Metadata::named(\"Call args provider\")\r\n    }\r\n\r\n    fn data(&self) -> Result<Map<Profile, Dict>, figment::Error> {\r\n        let value = Value::serialize(self)?;\r\n        let error = InvalidType(self.to_actual(), \"map\".into());\r\n        let mut dict = value.into_dict().ok_or(error)?;\r\n\r\n        let rpc = self.eth.rpc_url().map_err(|err| err.to_string())?;\r\n        dict.insert(\"eth_rpc_url\".to_string(), Value::from(rpc.to_string()));\r\n\r\n        dict.insert(\"chain\".to_string(), Value::from(self.eth.chain.to_string()));\r\n        Ok(Map::from([(Config::selected_profile(), dict)]))\r\n    }\r\n}",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1065085181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1066098961",
    "html_url": "https://github.com/foundry-rs/foundry/issues/689#issuecomment-1066098961",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/689",
    "id": 1066098961,
    "node_id": "IC_kwDOGBlvNc4_i2ER",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-13T13:15:43Z",
    "updated_at": "2022-03-13T13:15:43Z",
    "author_association": "MEMBER",
    "body": "sorry, missed this one -.-\r\n\r\n> So if I understand correctly, we need structs like BuildArgs, BindArgs, CreateArgs etc, but for cast commands that consume config items?\r\n\r\nwe can go the struct route where it makes sense, so extracting the named fields of some `Subcommands` to their own struct. \r\n\r\n> For a new cast command that uses config values,\r\nwe create an Args struct, impl Provider trait, impl From(Arg) for Config (merge here), and impl Cmd.\r\n\r\nYes this is how it's currently used in `forge`, given that cast's inputs are simpler, I think we don't necessarily need the `Cmd` impl\r\n\r\nYour example looks correct.\r\nMerging entries into the Data/Figment can either be done via `serde` or manually, or even both.\r\n\r\nFor example to serialize all fields into a `Data` you can use \r\n\r\n```rust\r\n let mut data = Serialized::defaults(self).data()?;\r\n // insert manually, see also config/src/lib.rs:805\r\n```\r\n\r\nSo I think in this case you could derive Serialize and use `serde(skip)` to ignore fields that should not be included in the figment and then use the approach above when implementing Provider.\r\n\r\nI think we could perhaps also extend the existing `impl_figment_convert` macros to accept varargs of `(key: field_name)`?\r\nthis would be the most elegant solution as it would remove lots of boilerplate code (impl Provider...) but more challenging, lmk if you need more pointers, have questions etc.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1066098961/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1066103121",
    "html_url": "https://github.com/foundry-rs/foundry/issues/689#issuecomment-1066103121",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/689",
    "id": 1066103121,
    "node_id": "IC_kwDOGBlvNc4_i3FR",
    "user": {
      "login": "psushi",
      "id": 22870103,
      "node_id": "MDQ6VXNlcjIyODcwMTAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/22870103?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psushi",
      "html_url": "https://github.com/psushi",
      "followers_url": "https://api.github.com/users/psushi/followers",
      "following_url": "https://api.github.com/users/psushi/following{/other_user}",
      "gists_url": "https://api.github.com/users/psushi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/psushi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/psushi/subscriptions",
      "organizations_url": "https://api.github.com/users/psushi/orgs",
      "repos_url": "https://api.github.com/users/psushi/repos",
      "events_url": "https://api.github.com/users/psushi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/psushi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-13T13:31:12Z",
    "updated_at": "2022-03-13T13:31:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Great, was worried I was working in the wrong direction, I'll get a bit more familiar with serde and make the changes. Totally agree about extending `impl_figment_convert` . Seems worth it. Once I get this working, I'll work on that ðŸ˜„ ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1066103121/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1092888670",
    "html_url": "https://github.com/foundry-rs/foundry/issues/689#issuecomment-1092888670",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/689",
    "id": 1092888670,
    "node_id": "IC_kwDOGBlvNc5BJChe",
    "user": {
      "login": "psushi",
      "id": 22870103,
      "node_id": "MDQ6VXNlcjIyODcwMTAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/22870103?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psushi",
      "html_url": "https://github.com/psushi",
      "followers_url": "https://api.github.com/users/psushi/followers",
      "following_url": "https://api.github.com/users/psushi/following{/other_user}",
      "gists_url": "https://api.github.com/users/psushi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/psushi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/psushi/subscriptions",
      "organizations_url": "https://api.github.com/users/psushi/orgs",
      "repos_url": "https://api.github.com/users/psushi/repos",
      "events_url": "https://api.github.com/users/psushi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/psushi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-08T13:57:56Z",
    "updated_at": "2022-04-16T09:12:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay since the setup is done in #1222, now will add support for all cast commands that need it. \r\n\r\nTracking here: \r\n\r\n- [x] `cast call`\r\n- [x]  `cast send`\r\n- [x] `cast access-list`\r\n- [x] `cast block`\r\n- [x] `cast block-number`\r\n- [x] `cast chain`\r\n- [x] `cast chain-id`\r\n- [x] `cast client`\r\n- [x] `cast compute-address`\r\n- [x] `cast code`\r\n- [x] `cast tx`\r\n- [x] `cast publish`\r\n- [x] `cast estimate`\r\n- [x] `cast age`\r\n- [x] `cast balance`\r\n- [x] `cast basefee`\r\n- [x] `cast gas-price`\r\n- [x] `cast interface`\r\n- [x] `cast resolve-name`\r\n- [x] `cast storage`\r\n- [x] `cast proof`\r\n- [x] `cast receipt`\r\n- [x] `cast nonce`\r\n- [x] `cast etherscan-source`\r\n- [x] `cast find-block`\r\n- [x] `cast lookup-address`\r\n\r\nlmk if I missed something\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1092888670/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1092931356",
    "html_url": "https://github.com/foundry-rs/foundry/issues/689#issuecomment-1092931356",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/689",
    "id": 1092931356,
    "node_id": "IC_kwDOGBlvNc5BJM8c",
    "user": {
      "login": "psushi",
      "id": 22870103,
      "node_id": "MDQ6VXNlcjIyODcwMTAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/22870103?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psushi",
      "html_url": "https://github.com/psushi",
      "followers_url": "https://api.github.com/users/psushi/followers",
      "following_url": "https://api.github.com/users/psushi/following{/other_user}",
      "gists_url": "https://api.github.com/users/psushi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/psushi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/psushi/subscriptions",
      "organizations_url": "https://api.github.com/users/psushi/orgs",
      "repos_url": "https://api.github.com/users/psushi/repos",
      "events_url": "https://api.github.com/users/psushi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/psushi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-08T14:37:19Z",
    "updated_at": "2022-04-08T14:37:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mattsse, most commands just use the rpc_url, so I'm thinking just a helper function should do. Like this: \r\n\r\n```rust\r\nfn consume_config_rpc_url(rpc_url: Option<String>) -> Result<String, eyre::Error> {\r\n    let final_rpc_url: String;\r\n    if let Some(cli_rpc_url) = rpc_url {\r\n        final_rpc_url = cli_rpc_url;\r\n    } else {\r\n        final_rpc_url = Config::load().eth_rpc_url.unwrap();\r\n    }\r\n\r\n    Ok(final_rpc_url)\r\n}\r\n```\r\ncast block: \r\n```rust\r\n Subcommands::Block { rpc_url, block, full, field, to_json } => {\r\n            let rpc_url = consume_config_rpc_url(rpc_url)?;\r\n            let provider = Provider::try_from(rpc_url)?;\r\n            println!(\"{}\", Cast::new(provider).block(block, full, field, to_json).await?);\r\n        }\r\n```\r\nSound good to you?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1092931356/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1093335366",
    "html_url": "https://github.com/foundry-rs/foundry/issues/689#issuecomment-1093335366",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/689",
    "id": 1093335366,
    "node_id": "IC_kwDOGBlvNc5BKvlG",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-08T20:33:44Z",
    "updated_at": "2022-04-08T20:33:44Z",
    "author_association": "MEMBER",
    "body": "that seems reasonable!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1093335366/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1100616606",
    "html_url": "https://github.com/foundry-rs/foundry/issues/689#issuecomment-1100616606",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/689",
    "id": 1100616606,
    "node_id": "IC_kwDOGBlvNc5BmhOe",
    "user": {
      "login": "psushi",
      "id": 22870103,
      "node_id": "MDQ6VXNlcjIyODcwMTAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/22870103?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psushi",
      "html_url": "https://github.com/psushi",
      "followers_url": "https://api.github.com/users/psushi/followers",
      "following_url": "https://api.github.com/users/psushi/following{/other_user}",
      "gists_url": "https://api.github.com/users/psushi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/psushi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/psushi/subscriptions",
      "organizations_url": "https://api.github.com/users/psushi/orgs",
      "repos_url": "https://api.github.com/users/psushi/repos",
      "events_url": "https://api.github.com/users/psushi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/psushi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-16T09:14:42Z",
    "updated_at": "2022-04-16T09:14:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@onbjerg, we can close this issue now? ðŸ˜„ ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1100616606/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1100619937",
    "html_url": "https://github.com/foundry-rs/foundry/issues/689#issuecomment-1100619937",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/689",
    "id": 1100619937,
    "node_id": "IC_kwDOGBlvNc5BmiCh",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-16T09:31:11Z",
    "updated_at": "2022-04-16T09:31:11Z",
    "author_association": "MEMBER",
    "body": "Yep!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1100619937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
