{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6893",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6893/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6893/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6893/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6893",
  "id": 2099040226,
  "node_id": "I_kwDOGBlvNc59HM_i",
  "number": 6893,
  "title": "feat: `forge verify-bytecode <address>` to verify that code at a commit hash matches on-chain code",
  "user": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2024-01-24T20:31:18Z",
  "updated_at": "2024-01-24T21:30:16Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\n## Motivation\r\n\r\nUsers often want to make sure that bytecode at an address can be tied to a certain git commit. Common use cases of this are:\r\n\r\n1. Verifying that the code from the fix commit of an audit or security review matches the code that was actually deployed.\r\n2. Verifying that the code of a repo commit being proposed in a governance proposal matches the code that was actually deployed.\r\n\r\nIt's a lot of work for a contract verification service to also validate that the code being verified exists at a given commit, for all frameworks and languages. But it is easy for frameworks themselves to implement this feature on a case by case basis.\r\n\r\n## Solution\r\n\r\nA new feature named `forge verify-bytecode <address>` (open to other names) to execute this check. It has the following syntax:\r\n\r\n```\r\nforge verify-bytecode <address> \\\r\n    [--block <blockTag>] \\\r\n    [--constructor-args <args> | --constructor-args-path <path> | --guess-constructor-args] \\\r\n    [--verification-type <full | partial>] \\\r\n    [--rpc-url <rpcUrl>]\r\n```\r\n\r\nAnd it behaves as follows:\r\n1. User clones some repo and checks out a commit.\r\n2. User executes `forge verify-bytecode <address>`.\r\n    1. Similar to cast, `ETH_RPC_URL` is used as the default RPC, but an alternative can be provided using the `--rpc-url` flag. \r\n    2. They can also optionally specify a build profile, or any other CLI flags allowed during `forge build`.\r\n3. Forge fetches the runtime bytecode at that address on the given chain. It also fetches the creation code from Etherscan or another verification service. This gives us the bytecodes we want to verify against.\r\n4. Forge compiles the repo using the given config. It now has build artifacts.\r\n5. Forge needs constructor arguments for the creation code. These can be obtained in multiple ways, in order of what should be preferred:\r\n    1.  User provides `--constructor-args` or `--constructor-args-path`, or uses `--guess-constructor-args` (from https://github.com/foundry-rs/foundry/pull/6724)\r\n    2. Constructor arguments are fetched from Etherscan/verification service.\r\n6. Creation code check can now be performed by appending the constructor arguments to the generated creation code and checking for a match. The metadata hash check defaults to using what’s specified in the build profile, but can be overridden with the `--verification-type` flag \r\n7. Runtime code check can now be performed by executing deployment of the creation code on a fork of the RPC URL. Metadata hash check is the same as above. For block number, in order of what should be preferred:\r\n    1. If the user provided a `--block <blockTag>` arg, fork from the RPC at that block and simulate to get the runtime code.\r\n    2. If the verification service returns the block number of deployment, use that\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6893/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6893/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1908905661",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6893#issuecomment-1908905661",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6893",
    "id": 1908905661,
    "node_id": "IC_kwDOGBlvNc5xx5a9",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-24T20:59:55Z",
    "updated_at": "2024-01-24T20:59:55Z",
    "author_association": "NONE",
    "body": "I believe that this will also need to take into account whether the metadata hash is included. \r\nIf not, the above should suffice. \r\n\r\nIf the hash is included, then either [full](https://docs.sourcify.dev/docs/full-vs-partial-match/#full-perfect-matches) or [partial](https://docs.sourcify.dev/docs/full-vs-partial-match/#partial-matches) verification can be performed.\r\n\r\nThis could be an additional flag `--verification-type=full|partial`, or else the existing `metadata_hash` config value could be used so that full verification is done whenever possible.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1908905661/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1908914181",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6893#issuecomment-1908914181",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6893",
    "id": 1908914181,
    "node_id": "IC_kwDOGBlvNc5xx7gF",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-24T21:05:54Z",
    "updated_at": "2024-01-24T21:05:54Z",
    "author_association": "COLLABORATOR",
    "body": "Good point. My understanding is the metadata hash will likely differ since the command will usually be run on a different machine than the one that originally compiled the code, and the hash can sometimes be machine-dependent in my experience. \r\n\r\nI’d suggest  the command defaults to the metadata hash setting specified in the build profile, but allow overriding it with a flag like you suggested. I’ll update the spec above accordingly ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1908914181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1908948147",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6893#issuecomment-1908948147",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6893",
    "id": 1908948147,
    "node_id": "IC_kwDOGBlvNc5xyDyz",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-24T21:30:15Z",
    "updated_at": "2024-01-24T21:30:15Z",
    "author_association": "COLLABORATOR",
    "body": "I could also imagine adding a `--use-remote-solc-config` flag to ignore the local build profile and use the solc config returned by the verification service. However, in most workflows there should be a profile that matches that config, so I don't think this is strictly necessary, but it might be nice to have as an alternate option",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1908948147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
