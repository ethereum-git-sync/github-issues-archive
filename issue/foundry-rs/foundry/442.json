{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/442",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/442",
  "id": 1101542251,
  "node_id": "I_kwDOGBlvNc5BqDNr",
  "number": 442,
  "title": "Text file busy flake in tests",
  "user": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3759721040,
      "node_id": "LA_kwDOGBlvNc7gGMpQ",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-chore",
      "name": "D-chore",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: chore"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2022-01-13T10:58:51Z",
  "updated_at": "2022-02-09T16:10:57Z",
  "closed_at": "2022-02-09T16:10:30Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "For some reason, tests fail sometimes with the error below:\r\n\r\n```\r\n---- multi_runner::tests::sputnik::test_sputnik_abstract_contract stdout ----\r\ncompiling...\r\nthread 'multi_runner::tests::sputnik::test_sputnik_abstract_contract' panicked at 'called `Result::unwrap()` on an `Err` value: Text file busy (os error 26)\r\n```\r\n\r\nOther times it fails with this one:\r\n\r\n```\r\n---- multi_runner::tests::sputnik::test_sputnik_abstract_contract stdout ----\r\ncompiling...\r\nthread 'multi_runner::tests::sputnik::test_sputnik_abstract_contract' panicked at 'called `Result::unwrap()` on an `Err` value: \"/home/runner/.svm/0.8.1/solc-0.8.1\": Text file busy (os error 26)\r\n```\r\n\r\nI suspect this might be related to the Solc downloader trying to download a binary multiple times, and write it over an existing file? Not sure.",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/442/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014485110",
    "html_url": "https://github.com/foundry-rs/foundry/issues/442#issuecomment-1014485110",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442",
    "id": 1014485110,
    "node_id": "IC_kwDOGBlvNc48d9B2",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T12:50:37Z",
    "updated_at": "2022-01-17T12:50:37Z",
    "author_association": "MEMBER",
    "body": "Going by backtrace:\r\n\r\n```\r\n---- multi_runner::tests::sputnik::test_sputnik_abstract_contract stdout ----\r\ncompiling...\r\nthread 'multi_runner::tests::sputnik::test_sputnik_abstract_contract' panicked at 'called `Result::unwrap()` on an `Err` value: Text file busy (os error 26)\r\n\r\nLocation:\r\n    /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/result.rs:1915:27', forge/src/multi_runner.rs:223:82\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/panicking.rs:517:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/panicking.rs:101:14\r\n   2: core::result::unwrap_failed\r\n             at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/result.rs:1617:5\r\n   3: core::result::Result<T,E>::unwrap\r\n             at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/result.rs:1299:23\r\n   4: forge::multi_runner::tests::runner\r\n             at ./src/multi_runner.rs:223:9\r\n   5: forge::multi_runner::tests::test_abstract_contract\r\n             at ./src/multi_runner.rs:251:26\r\n   6: forge::multi_runner::tests::sputnik::test_sputnik_abstract_contract\r\n             at ./src/multi_runner.rs:301:13\r\n   7: forge::multi_runner::tests::sputnik::test_sputnik_abstract_contract::{{closure}}\r\n             at ./src/multi_runner.rs:300:9\r\n   8: core::ops::function::FnOnce::call_once\r\n             at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/ops/function.rs:227:5\r\n   9: core::ops::function::FnOnce::call_once\r\n             at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/ops/function.rs:227:5\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\n\r\nfailures:\r\n    multi_runner::tests::sputnik::test_sputnik_abstract_contract\r\n```\r\n\r\nWe end up at `MultiContractRunnerBuilder::build` that can only return an `Err` in one place, which is when it calls `project.compile()?`. Since we're running with `--all-features` we end up in `Project::svm_compile` for the next `Result`.\r\n\r\nMy best bet is that *either* it is that we are building the same contracts in two tests, so the cache/artifacts are being written at the same time, *or* it is SVM as you suspected.\r\n\r\nI don't see a super elegant solution, maybe using [`serial_test`](https://github.com/palfrey/serial_test) or running with `-- --test-threads=1` (slow!)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014485110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014498552",
    "html_url": "https://github.com/foundry-rs/foundry/issues/442#issuecomment-1014498552",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442",
    "id": 1014498552,
    "node_id": "IC_kwDOGBlvNc48eAT4",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T12:57:10Z",
    "updated_at": "2022-01-17T12:57:36Z",
    "author_association": "MEMBER",
    "body": "> My best bet is that either it is that we are building the same contracts in two tests, so the cache/artifacts are being written at the same time, or it is SVM as you suspected.\r\n\r\n@mattsse this seems to align with how we've been thinking about the caching issue?\r\n\r\nI think there should be a \"right\" way to solve it, serial tests would be a big no-no, so let's try to brainstorm it a bit?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014498552/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014504801",
    "html_url": "https://github.com/foundry-rs/foundry/issues/442#issuecomment-1014504801",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442",
    "id": 1014504801,
    "node_id": "IC_kwDOGBlvNc48eB1h",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T13:01:48Z",
    "updated_at": "2022-01-17T13:02:06Z",
    "author_association": "MEMBER",
    "body": "so text file busy happens if a program tries to modify a file that's currently being executed or otherwise used in write mode.\r\n\r\nthis could be a race condition within our svm abstraction.\r\nis there a way to reproduce this?\r\n`RUST_LOG=ethers=trace` should also be helpful to locate the root cause\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014504801/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014506342",
    "html_url": "https://github.com/foundry-rs/foundry/issues/442#issuecomment-1014506342",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442",
    "id": 1014506342,
    "node_id": "IC_kwDOGBlvNc48eCNm",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T13:03:01Z",
    "updated_at": "2022-01-17T13:04:45Z",
    "author_association": "MEMBER",
    "body": "To reproduce: run `cargo test --all --all-features -- --test-threads=high number` where high number is the amount of threads you are able to use before your computer flies off into space. For good measure also delete or move `$HOME/.svm` before running. Run until the test fails. :shrug: \r\n\r\nI used a thread count of 32 and ran it 2 or 3 times before I encountered the failing test",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014506342/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014509815",
    "html_url": "https://github.com/foundry-rs/foundry/issues/442#issuecomment-1014509815",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442",
    "id": 1014509815,
    "node_id": "IC_kwDOGBlvNc48eDD3",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T13:05:39Z",
    "updated_at": "2022-01-17T13:05:39Z",
    "author_association": "MEMBER",
    "body": "that makes a bit more sense now,\r\nthis happens only during tests, right?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014509815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014511754",
    "html_url": "https://github.com/foundry-rs/foundry/issues/442#issuecomment-1014511754",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442",
    "id": 1014511754,
    "node_id": "IC_kwDOGBlvNc48eDiK",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T13:07:04Z",
    "updated_at": "2022-01-17T13:07:04Z",
    "author_association": "MEMBER",
    "body": "my guess is, two tests run in parallel, both need solc x.y.z which is missing, so they both try to install it...",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014511754/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014512494",
    "html_url": "https://github.com/foundry-rs/foundry/issues/442#issuecomment-1014512494",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442",
    "id": 1014512494,
    "node_id": "IC_kwDOGBlvNc48eDtu",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T13:07:35Z",
    "updated_at": "2022-01-17T13:07:43Z",
    "author_association": "MEMBER",
    "body": "Yeah that's typically what happened in the past, which I thought we had solved with a mutex in the installation step, maybe the mutex got lost during our ethers-solc refactors?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014512494/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014525774",
    "html_url": "https://github.com/foundry-rs/foundry/issues/442#issuecomment-1014525774",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442",
    "id": 1014525774,
    "node_id": "IC_kwDOGBlvNc48eG9O",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T13:17:25Z",
    "updated_at": "2022-01-17T13:21:32Z",
    "author_association": "MEMBER",
    "body": "lock in test is still there but perhaps this is an integration test issue where multiple bins are executed\r\n\r\n~~maybe we can try using a lockfile instead, https://crates.io/crates/fslock ?~~",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014525774/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014529561",
    "html_url": "https://github.com/foundry-rs/foundry/issues/442#issuecomment-1014529561",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442",
    "id": 1014529561,
    "node_id": "IC_kwDOGBlvNc48eH4Z",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T13:20:14Z",
    "updated_at": "2022-01-17T13:20:14Z",
    "author_association": "MEMBER",
    "body": "Oh I think I've found it,\r\n\r\nI changed version detection in the new graph implementation",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1014529561/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1015313233",
    "html_url": "https://github.com/foundry-rs/foundry/issues/442#issuecomment-1015313233",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442",
    "id": 1015313233,
    "node_id": "IC_kwDOGBlvNc48hHNR",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-18T11:17:07Z",
    "updated_at": "2022-01-18T11:17:07Z",
    "author_association": "MEMBER",
    "body": "I don't think an in-process mutex solves it, think we do need a lockfile. AFAIK tests are built as a special executable that Cargo just runs in parallel or something :/",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1015313233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1015359200",
    "html_url": "https://github.com/foundry-rs/foundry/issues/442#issuecomment-1015359200",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442",
    "id": 1015359200,
    "node_id": "IC_kwDOGBlvNc48hSbg",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-18T12:22:07Z",
    "updated_at": "2022-01-18T12:22:15Z",
    "author_association": "MEMBER",
    "body": "I think adding a lockfile under ~/.svm and the artifacts dir could be a fine solution if we don't have a better one, as long as it gets cleaned up instantly and we document it nicely (it's never cool when the user needs to manually remove index/lockfiles)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1015359200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1015382020",
    "html_url": "https://github.com/foundry-rs/foundry/issues/442#issuecomment-1015382020",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442",
    "id": 1015382020,
    "node_id": "IC_kwDOGBlvNc48hYAE",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-18T12:53:18Z",
    "updated_at": "2022-01-18T12:55:40Z",
    "author_association": "MEMBER",
    "body": "Ok, looked at it to be sure, it does *not* run the executable multiple times side by side. Perhaps it's just because we call other install methods than `Solc::ensure_installed` so the lock should actually be in `Solc::install` and `Solc::blocking_install`\r\n\r\nhttps://github.com/gakonst/ethers-rs/pull/808",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1015382020/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1028163909",
    "html_url": "https://github.com/foundry-rs/foundry/issues/442#issuecomment-1028163909",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442",
    "id": 1028163909,
    "node_id": "IC_kwDOGBlvNc49SIlF",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-02T17:13:57Z",
    "updated_at": "2022-02-02T17:13:57Z",
    "author_association": "MEMBER",
    "body": "\r\nFrom latest CI:\r\n![telegram-cloud-photo-size-2-5463169594622591722-y](https://user-images.githubusercontent.com/17802178/152182492-07c2470c-cfbd-466f-bc76-aa31998d4592.jpg)\r\n\r\nThe println makes me believe the issue is during the svm installation step [here](https://github.com/gakonst/ethers-rs/blob/8b9a18ce017d40f99ee5f74da5c4fbb8a47538f9/ethers-solc/src/compile.rs#L411-L413), which proceeds to call `svm::install`.\r\n\r\nI think the offending code is either the [`std::io::copy`](https://github.com/roynalnaruto/svm-rs/blob/71b47750044d4f2a0e4917c707c8b4423ba41b36/src/lib.rs#L110-L149) or the `std::fs::File::create` above it\r\n\r\n@mattse mentioned that if https://github.com/gakonst/ethers-rs/pull/802 doesn't address this, we should consider using a lockfile, given that our existing mutexes in ethers-solc seem to not be getting hit",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1028163909/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1033817010",
    "html_url": "https://github.com/foundry-rs/foundry/issues/442#issuecomment-1033817010",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442",
    "id": 1033817010,
    "node_id": "IC_kwDOGBlvNc49nsuy",
    "user": {
      "login": "roynalnaruto",
      "id": 5194933,
      "node_id": "MDQ6VXNlcjUxOTQ5MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5194933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roynalnaruto",
      "html_url": "https://github.com/roynalnaruto",
      "followers_url": "https://api.github.com/users/roynalnaruto/followers",
      "following_url": "https://api.github.com/users/roynalnaruto/following{/other_user}",
      "gists_url": "https://api.github.com/users/roynalnaruto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roynalnaruto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roynalnaruto/subscriptions",
      "organizations_url": "https://api.github.com/users/roynalnaruto/orgs",
      "repos_url": "https://api.github.com/users/roynalnaruto/repos",
      "events_url": "https://api.github.com/users/roynalnaruto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roynalnaruto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-09T14:25:59Z",
    "updated_at": "2022-02-09T14:25:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gakonst @mattsse added a PR above that will block the installation until lock file is released (up to a timeout period of 10 seconds).",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1033817010/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1033930613",
    "html_url": "https://github.com/foundry-rs/foundry/issues/442#issuecomment-1033930613",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/442",
    "id": 1033930613,
    "node_id": "IC_kwDOGBlvNc49oId1",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-09T16:10:57Z",
    "updated_at": "2022-02-09T16:10:57Z",
    "author_association": "MEMBER",
    "body": "Let's see if this finally fixes it..",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1033930613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
