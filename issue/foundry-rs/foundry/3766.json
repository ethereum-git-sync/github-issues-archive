{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3766",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3766/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3766/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3766/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3766",
  "id": 1464642084,
  "node_id": "I_kwDOGBlvNc5XTKok",
  "number": 3766,
  "title": "Gas reports for free functions",
  "user": {
    "login": "PaulRBerg",
    "id": 8782666,
    "node_id": "MDQ6VXNlcjg3ODI2NjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PaulRBerg",
    "html_url": "https://github.com/PaulRBerg",
    "followers_url": "https://api.github.com/users/PaulRBerg/followers",
    "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
    "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
    "repos_url": "https://api.github.com/users/PaulRBerg/repos",
    "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759773804,
      "node_id": "LA_kwDOGBlvNc7gGZhs",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-gas-snapshots",
      "name": "A-gas-snapshots",
      "color": "FBCA04",
      "default": false,
      "description": "Area: gas snapshotting/reporting"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-11-25T14:44:08Z",
  "updated_at": "2022-11-28T09:25:24Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nI would like to have [gas reports](https://book.getfoundry.sh/forge/gas-reports) for [free functions][1], e.g.\r\n\r\n```solidity\r\nfunction min(uint x, uint y) pure returns (uint) {\r\n    return x < y ? x : y;\r\n}\r\n```\r\n\r\nPassing `--gas-report` to Forge doesn't generate a report. The only solution as of now is to wrap my free functions in an intermediary mock contract used specifically for testing.\r\n\r\n[1]: https://blog.soliditylang.org/2020/09/02/solidity-0.7.1-release-announcement/#:~:text=A%20free%20function%20behaves%20like,and%20in%20this%20case%2C%20msg.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3766/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3766/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1328724320",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3766#issuecomment-1328724320",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3766",
    "id": 1328724320,
    "node_id": "IC_kwDOGBlvNc5PMrlg",
    "user": {
      "login": "rkrasiuk",
      "id": 25429261,
      "node_id": "MDQ6VXNlcjI1NDI5MjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25429261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkrasiuk",
      "html_url": "https://github.com/rkrasiuk",
      "followers_url": "https://api.github.com/users/rkrasiuk/followers",
      "following_url": "https://api.github.com/users/rkrasiuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkrasiuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkrasiuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkrasiuk/subscriptions",
      "organizations_url": "https://api.github.com/users/rkrasiuk/orgs",
      "repos_url": "https://api.github.com/users/rkrasiuk/repos",
      "events_url": "https://api.github.com/users/rkrasiuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkrasiuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-28T08:43:46Z",
    "updated_at": "2022-11-28T09:14:19Z",
    "author_association": "COLLABORATOR",
    "body": "@paulrberg as described in the book, gas reporting traces [the external contract calls](https://book.getfoundry.sh/forge/gas-tracking). since free functions act as internal functions, we cannot correctly identify calls to them.\r\n\r\ntheoretically, we could record the jumps within each call, but 1) we wouldn't be able to decode them since free/internal functions are not a part of the artifacts 2) encountering a jump doesn't necessarily mean we've entered the internal function 3) that'd produce a lot of data which imo would dilute the value of gas reports\r\n\r\n@mattsse @onbjerg @draganrakita @mds1 curious to hear your thoughts\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1328724320/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1328742970",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3766#issuecomment-1328742970",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3766",
    "id": 1328742970,
    "node_id": "IC_kwDOGBlvNc5PMwI6",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-28T09:01:50Z",
    "updated_at": "2022-11-28T09:01:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for explaining the difficulties of implementing this, @rkrasiuk.\r\n\r\nI wonder if the user could somehow help Forge identify the functions that should be metered? e.g. what if there was a field in the Foundry config like `meter_free_functions` or `gas_reports_free_functions` (or something along those lines)? Would that help in any way?\r\n\r\nBtw, this is related to https://github.com/foundry-rs/foundry/issues/3723.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1328742970/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1328774044",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3766#issuecomment-1328774044",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3766",
    "id": 1328774044,
    "node_id": "IC_kwDOGBlvNc5PM3uc",
    "user": {
      "login": "rkrasiuk",
      "id": 25429261,
      "node_id": "MDQ6VXNlcjI1NDI5MjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25429261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkrasiuk",
      "html_url": "https://github.com/rkrasiuk",
      "followers_url": "https://api.github.com/users/rkrasiuk/followers",
      "following_url": "https://api.github.com/users/rkrasiuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkrasiuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkrasiuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkrasiuk/subscriptions",
      "organizations_url": "https://api.github.com/users/rkrasiuk/orgs",
      "repos_url": "https://api.github.com/users/rkrasiuk/repos",
      "events_url": "https://api.github.com/users/rkrasiuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkrasiuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-28T09:25:24Z",
    "updated_at": "2022-11-28T09:25:24Z",
    "author_association": "COLLABORATOR",
    "body": "the config would still not solve the instruction to code reverse lookup, only the collected functions.\r\n\r\nsome thought dump:\r\n- debugger already performs the reverse lookup. we could attempt to match jumps to the code by using source maps? this would be a cursed piece of code 😆 \r\n- roll a custom ASTInspector? the idea is to traverse the AST alongside the execution bytecode",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1328774044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
