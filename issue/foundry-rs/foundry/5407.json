{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5407",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5407/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5407/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5407/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5407",
  "id": 1806538727,
  "node_id": "I_kwDOGBlvNc5rrZfn",
  "number": 5407,
  "title": "Add `randomUint`/`randomInt` cheatcodes",
  "user": {
    "login": "LilaRest",
    "id": 48853371,
    "node_id": "MDQ6VXNlcjQ4ODUzMzcx",
    "avatar_url": "https://avatars.githubusercontent.com/u/48853371?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/LilaRest",
    "html_url": "https://github.com/LilaRest",
    "followers_url": "https://api.github.com/users/LilaRest/followers",
    "following_url": "https://api.github.com/users/LilaRest/following{/other_user}",
    "gists_url": "https://api.github.com/users/LilaRest/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/LilaRest/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/LilaRest/subscriptions",
    "organizations_url": "https://api.github.com/users/LilaRest/orgs",
    "repos_url": "https://api.github.com/users/LilaRest/repos",
    "events_url": "https://api.github.com/users/LilaRest/events{/privacy}",
    "received_events_url": "https://api.github.com/users/LilaRest/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-07-16T11:01:29Z",
  "updated_at": "2023-07-17T18:17:52Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nWhile property-based testing (fuzz) should fit for most case of general testing, there are some other cases where a test function would require generating random values dynamically.\r\n\r\nAs an example, here is a function that ensures rewards of a staking contract are properly applied no matter the number of time the APR has changed after an investment, as well as no matter the intervals between each pair of APRs changes.\r\n\r\n```solidity\r\nfunction test_rewardsOf_1(\r\n    uint256 initialInvestment,\r\n    uint256 numberOfAPRChanges\r\n) public {\r\n    // Initially invest random amount of tokens\r\n    deal(investedToken, address(1234), initialInvestment);\r\n    vm.prank(address(1234));\r\n    testedContract.stake(initialInvestment);\r\n\r\n    // Bound numberOfAPRChanges to [0,200]\r\n    numberOfAPRChanges = bound(numberOfAPRChanges, 0, 200);\r\n\r\n    // Create random number of APR change after investment\r\n    for (uint256 i = 0; i < numberOfCheckpoints; i++) {\r\n        testedContract.setAPR(randomNumber(0, type(uint16).max));\r\n\r\n        // Move forward a random amount of time until next APR\r\n        skip(randomNumber(0, type(uint40).max));\r\n    }\r\n\r\n    // ... Verify that rewards are properly calculated\r\n}\r\n```\r\n\r\nIn this example using `randomNumber()` would be better than using static values as it would potentially reveal more complex errors scenarios.\r\n\r\nHowever, I think those random values wouldn't offer the same trust than random values received through functions parameters (as they are simple random values and don't use any shrinking/resolve mechanism).\r\n\r\nMaybe a solution could be to implement shrinking/resolve on those too, but its seems complex.\r\n\r\nSo I'm a bit mixed on this idea, but I'd be happy to read your thoughts on it :) \r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5407/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5407/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1637054502",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5407#issuecomment-1637054502",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5407",
    "id": 1637054502,
    "node_id": "IC_kwDOGBlvNc5hk3gm",
    "user": {
      "login": "LilaRest",
      "id": 48853371,
      "node_id": "MDQ6VXNlcjQ4ODUzMzcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/48853371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LilaRest",
      "html_url": "https://github.com/LilaRest",
      "followers_url": "https://api.github.com/users/LilaRest/followers",
      "following_url": "https://api.github.com/users/LilaRest/following{/other_user}",
      "gists_url": "https://api.github.com/users/LilaRest/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LilaRest/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LilaRest/subscriptions",
      "organizations_url": "https://api.github.com/users/LilaRest/orgs",
      "repos_url": "https://api.github.com/users/LilaRest/repos",
      "events_url": "https://api.github.com/users/LilaRest/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LilaRest/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-16T11:07:58Z",
    "updated_at": "2023-07-16T11:07:58Z",
    "author_association": "NONE",
    "body": "Note that I've already tried [this library](https://github.com/joejordan/foundry-random) but it slows my tests run by ~200x.\r\n\r\nI also tried to implement my own helper contract relying on ffi to retrieve `$RANDOM` environment variable, but it also slows so much my tests runs and may produce inaccurate results on numbers that don't fit in 64 bits.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1637054502/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1638642765",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5407#issuecomment-1638642765",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5407",
    "id": 1638642765,
    "node_id": "IC_kwDOGBlvNc5hq7RN",
    "user": {
      "login": "Evalir",
      "id": 26014927,
      "node_id": "MDQ6VXNlcjI2MDE0OTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evalir",
      "html_url": "https://github.com/Evalir",
      "followers_url": "https://api.github.com/users/Evalir/followers",
      "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
      "organizations_url": "https://api.github.com/users/Evalir/orgs",
      "repos_url": "https://api.github.com/users/Evalir/repos",
      "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evalir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-17T18:17:52Z",
    "updated_at": "2023-07-17T18:17:52Z",
    "author_association": "MEMBER",
    "body": "imho @mds1 this sounds like a good idea to build this in. wdyt?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1638642765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
