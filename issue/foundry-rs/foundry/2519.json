{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2519",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2519/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2519/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2519/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2519",
  "id": 1322710555,
  "node_id": "I_kwDOGBlvNc5O1vYb",
  "number": 2519,
  "title": "Multi Chain Deployment",
  "user": {
    "login": "joshieDo",
    "id": 93316087,
    "node_id": "U_kgDOBY_j9w",
    "avatar_url": "https://avatars.githubusercontent.com/u/93316087?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/joshieDo",
    "html_url": "https://github.com/joshieDo",
    "followers_url": "https://api.github.com/users/joshieDo/followers",
    "following_url": "https://api.github.com/users/joshieDo/following{/other_user}",
    "gists_url": "https://api.github.com/users/joshieDo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/joshieDo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/joshieDo/subscriptions",
    "organizations_url": "https://api.github.com/users/joshieDo/orgs",
    "repos_url": "https://api.github.com/users/joshieDo/repos",
    "events_url": "https://api.github.com/users/joshieDo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/joshieDo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 4182991461,
      "node_id": "LA_kwDOGBlvNc75U2Jl",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-script",
      "name": "Cmd-forge-script",
      "color": "006B75",
      "default": false,
      "description": "Command: forge script"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "joshieDo",
    "id": 93316087,
    "node_id": "U_kgDOBY_j9w",
    "avatar_url": "https://avatars.githubusercontent.com/u/93316087?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/joshieDo",
    "html_url": "https://github.com/joshieDo",
    "followers_url": "https://api.github.com/users/joshieDo/followers",
    "following_url": "https://api.github.com/users/joshieDo/following{/other_user}",
    "gists_url": "https://api.github.com/users/joshieDo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/joshieDo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/joshieDo/subscriptions",
    "organizations_url": "https://api.github.com/users/joshieDo/orgs",
    "repos_url": "https://api.github.com/users/joshieDo/repos",
    "events_url": "https://api.github.com/users/joshieDo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/joshieDo/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "joshieDo",
      "id": 93316087,
      "node_id": "U_kgDOBY_j9w",
      "avatar_url": "https://avatars.githubusercontent.com/u/93316087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshieDo",
      "html_url": "https://github.com/joshieDo",
      "followers_url": "https://api.github.com/users/joshieDo/followers",
      "following_url": "https://api.github.com/users/joshieDo/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshieDo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshieDo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshieDo/subscriptions",
      "organizations_url": "https://api.github.com/users/joshieDo/orgs",
      "repos_url": "https://api.github.com/users/joshieDo/repos",
      "events_url": "https://api.github.com/users/joshieDo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshieDo/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-07-29T22:06:40Z",
  "updated_at": "2022-11-09T23:07:25Z",
  "closed_at": "2022-11-09T23:07:25Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nIt would be cool to have a multi chain deployment, now that we have multi fork capabilities on the `vm`. [pending #2301]\r\n\r\nI was working on a MVP, but there are a couple gotchas and decisions to be made. So I decided to start writing them here.\r\n\r\n### Execution\r\n1. Currently `vm.broadcast()` takes the `caller` as the signer. However, multi fork backends make the `caller`'s nonce persistent across forks. Ideally it should be non-persistent by default and tied to each backend.\r\n2. Library Linking. This is kind of a chicken-egg problem. Not all forks may require the predeployed libraries coming from the build output, and we only know the ones that might need it once we run everything. Addresses and linkage have to be handled/calculated on a per-fork basis.\r\n\r\n### Broadcast\r\n1. Which log structure:\r\n    1.1 One single file: `broadcast/multi/Contract.s.sol/[latest | timestamp]/[sig].json` \r\n    1.2 One folder/multiple files: `broadcast/multi/Contract.s.sol/[latest | timestamp]/[chain_id]/[sig].json` There'd be one extra file dictating the sequence.\r\n2. Which broadcasting behaviour.\r\n    2.1  Deploy to every chain in parallel. And we log it `Map<chain, ScriptSequence>`?\r\n    2.2  Deploy sequentially regarding to chains. Example: chain1 -> chain2 -> chain1 -> chain3. And we log it `Vec<ScriptSequence>`\r\n   \r\n### Verification\r\n1. Should we add a `vm.addEtherscanKey(forkId, key_str)` ?   Doesn't seem UX friendly to add and match `--etherscan-keys` to the command line.\r\n    1.1. If we do... how do we handle `--verify` without any broadcast flag? We could run `setUp` every time, just to collect these keys. What if the code has changed since then?\r\n    1.2 If not 1.1... then what?\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2519/reactions",
    "total_count": 5,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 5
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2519/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1200310314",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2519#issuecomment-1200310314",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2519",
    "id": 1200310314,
    "node_id": "IC_kwDOGBlvNc5Hi0gq",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-30T23:10:16Z",
    "updated_at": "2022-07-30T23:10:34Z",
    "author_association": "MEMBER",
    "body": "Afaik Etherscan keys are universal, so a key from mainnet also works on Rinkeby? Otherwise I lean more towards us adding some config for it vs a cheatcode",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1200310314/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1200892316",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2519#issuecomment-1200892316",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2519",
    "id": 1200892316,
    "node_id": "IC_kwDOGBlvNc5HlCmc",
    "user": {
      "login": "wiasliaw",
      "id": 37038019,
      "node_id": "MDQ6VXNlcjM3MDM4MDE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/37038019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wiasliaw",
      "html_url": "https://github.com/wiasliaw",
      "followers_url": "https://api.github.com/users/wiasliaw/followers",
      "following_url": "https://api.github.com/users/wiasliaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/wiasliaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wiasliaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wiasliaw/subscriptions",
      "organizations_url": "https://api.github.com/users/wiasliaw/orgs",
      "repos_url": "https://api.github.com/users/wiasliaw/repos",
      "events_url": "https://api.github.com/users/wiasliaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wiasliaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-01T08:34:39Z",
    "updated_at": "2022-08-01T08:55:11Z",
    "author_association": "NONE",
    "body": "~~IDK if using forking cheatcode can deploy to multiple chain.~~\r\n \r\nIt can't, all deploy to the url which provide to `--rpc-url`. Below is the suggestion for multichain deployment.\r\n\r\n```toml\r\n# foundry.toml\r\n[rpc_endpoints]\r\noptimism = \"https://opt-goerli.g.alchemy.com/v2/<api key>\"\r\ngoerli = \"https://eth-goerli.g.alchemy.com/v2/<api key>\"\r\n```\r\n\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport \"../lib/forge-std/src/Script.sol\";\r\n\r\ncontract Try {}\r\n\r\ncontract MultipleDeployment is Script {\r\n    function run() external {\r\n        vm.startBroadcast();\r\n\r\n        // create and select for optimism\r\n        vm.createSelectFork(vm.rpcUrl(\"optimism\"));\r\n        address t1 = address(new Try());\r\n        console.log(t1);\r\n\r\n        // create and select fork for goerli\r\n        vm.createSelectFork(vm.rpcUrl(\"goerli\"));\r\n        address t2 = address(new Try());\r\n        console.log(t2);\r\n\r\n        vm.stopBroadcast();\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1200892316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1201337885",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2519#issuecomment-1201337885",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2519",
    "id": 1201337885,
    "node_id": "IC_kwDOGBlvNc5HmvYd",
    "user": {
      "login": "joshieDo",
      "id": 93316087,
      "node_id": "U_kgDOBY_j9w",
      "avatar_url": "https://avatars.githubusercontent.com/u/93316087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshieDo",
      "html_url": "https://github.com/joshieDo",
      "followers_url": "https://api.github.com/users/joshieDo/followers",
      "following_url": "https://api.github.com/users/joshieDo/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshieDo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshieDo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshieDo/subscriptions",
      "organizations_url": "https://api.github.com/users/joshieDo/orgs",
      "repos_url": "https://api.github.com/users/joshieDo/repos",
      "events_url": "https://api.github.com/users/joshieDo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshieDo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-01T15:15:24Z",
    "updated_at": "2022-08-01T15:16:46Z",
    "author_association": "COLLABORATOR",
    "body": "> Afaik Etherscan keys are universal, so a key from mainnet also works on Rinkeby?\r\n\r\nIn that scenario sure. But avalance != eth != polygon \r\n\r\n> Otherwise I lean more towards us adding some config for it vs a cheatcode\r\n\r\nTrue,  it's better\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1201337885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1205561549",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2519#issuecomment-1205561549",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2519",
    "id": 1205561549,
    "node_id": "IC_kwDOGBlvNc5H22jN",
    "user": {
      "login": "ultrasecreth",
      "id": 241804,
      "node_id": "MDQ6VXNlcjI0MTgwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ultrasecreth",
      "html_url": "https://github.com/ultrasecreth",
      "followers_url": "https://api.github.com/users/ultrasecreth/followers",
      "following_url": "https://api.github.com/users/ultrasecreth/following{/other_user}",
      "gists_url": "https://api.github.com/users/ultrasecreth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ultrasecreth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ultrasecreth/subscriptions",
      "organizations_url": "https://api.github.com/users/ultrasecreth/orgs",
      "repos_url": "https://api.github.com/users/ultrasecreth/repos",
      "events_url": "https://api.github.com/users/ultrasecreth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ultrasecreth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-04T17:31:36Z",
    "updated_at": "2022-08-04T17:31:36Z",
    "author_association": "NONE",
    "body": "I think this also needs the ability to link the same library to different addresses on a per chain basis\r\n\r\nThis would be also great for fork testing, as you most probably need to point your code to different instances of the library when you fork different networks",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1205561549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
