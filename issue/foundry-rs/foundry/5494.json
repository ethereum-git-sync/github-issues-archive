{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5494",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5494/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5494/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5494/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5494",
  "id": 1826048343,
  "node_id": "I_kwDOGBlvNc5s10lX",
  "number": 5494,
  "title": "forge test -vvvv reports less gasUsed than the actual tx in mainnet",
  "user": {
    "login": "y1cunhui",
    "id": 38470282,
    "node_id": "MDQ6VXNlcjM4NDcwMjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/38470282?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/y1cunhui",
    "html_url": "https://github.com/y1cunhui",
    "followers_url": "https://api.github.com/users/y1cunhui/followers",
    "following_url": "https://api.github.com/users/y1cunhui/following{/other_user}",
    "gists_url": "https://api.github.com/users/y1cunhui/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/y1cunhui/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/y1cunhui/subscriptions",
    "organizations_url": "https://api.github.com/users/y1cunhui/orgs",
    "repos_url": "https://api.github.com/users/y1cunhui/repos",
    "events_url": "https://api.github.com/users/y1cunhui/events{/privacy}",
    "received_events_url": "https://api.github.com/users/y1cunhui/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-07-28T09:15:52Z",
  "updated_at": "2023-07-28T09:15:52Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (8e365be 2023-07-18T00:28:12.648082999Z)\n\n### What command(s) is the bug in?\n\nforge test -vvvv\n\n### Operating System\n\nLinux\n\n### Describe the bug\n\nI want to compare the gas usage of my own MEV bot and the real-world MEV bots.\r\nWhen I simulate the real-world MEV bot transaction locally, it reports really different gasUsed compared with explorers.\r\n\r\nThe tx I want to simulate: 0x40aeb6ef9d4d74baa249cc41a1d24cdef08ab4e93b94a7929269822494eb929b\r\n\r\nThe code I run locally:\r\n```solidity\r\nfunction setUp() public {\r\n        vm.createSelectFork(\"eth\", 17789587);\r\n        vm.label(address(this), \"owner\");\r\n        //... omitted\r\n    }\r\nfunction test1C09() public {\r\n// ...omitted\r\naddress bot = 0xD7f3FBe8C72a961A5515203eADA59750437Fa762;\r\n        vm.startPrank(0x1C09A10047fcc944efDE9226e259edDfde2c1cF0);\r\n        bytes memory a = hex\"0000000600000000000000000000000000000000000000000000000633f4f445050f0ce0000000000000000000000000000000000000000000000000000000317dc0e0ff0000000000000000000000000000000000000000000000000000000064c357a4\";\r\n        bot.call(a);\r\n        vm.stopPrank();\r\n}\r\n```\r\n\r\nThe gas result when I run `forge test -vvvv`:\r\n![image](https://github.com/foundry-rs/foundry/assets/38470282/1181c932-c061-4ddc-9ab5-ca7bc00e3e30)\r\n\r\nThe actual gas usage:(images from https://explorer.phalcon.xyz/tx/eth/0x40aeb6ef9d4d74baa249cc41a1d24cdef08ab4e93b94a7929269822494eb929b)\r\n\r\n![image](https://github.com/foundry-rs/foundry/assets/38470282/5434934d-ae91-4c9b-ae2b-e2b5ad7ac99e)\r\n![image](https://github.com/foundry-rs/foundry/assets/38470282/f8039ad6-624f-44e1-9f04-ce76d79ba79d)\r\n\r\nAfter comparison, we can see they have the same gasUsed in the staticcalls(like balanceOf), and the uniswapV3Callback call also have the same gasUsed. However, when considering the whole tx or even the single `USDC.transfer`, the gas gap is huge.\r\n\r\nWhen simulate this tx using `trace_call` JSON-RPC interface, it gives me the right number(identical to the `executed gas` part of the Gas Profiler of Phalcon) \r\n\r\nI don't know where the gas gap comes from, so open this issue.\r\n\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5494/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5494/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
