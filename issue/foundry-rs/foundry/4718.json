{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4718",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4718/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4718/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4718/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4718",
  "id": 1661597491,
  "node_id": "I_kwDOGBlvNc5jCfcz",
  "number": 4718,
  "title": "Function-level assertions don't work when using invariants.",
  "user": {
    "login": "wirew0lf",
    "id": 11537225,
    "node_id": "MDQ6VXNlcjExNTM3MjI1",
    "avatar_url": "https://avatars.githubusercontent.com/u/11537225?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wirew0lf",
    "html_url": "https://github.com/wirew0lf",
    "followers_url": "https://api.github.com/users/wirew0lf/followers",
    "following_url": "https://api.github.com/users/wirew0lf/following{/other_user}",
    "gists_url": "https://api.github.com/users/wirew0lf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wirew0lf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wirew0lf/subscriptions",
    "organizations_url": "https://api.github.com/users/wirew0lf/orgs",
    "repos_url": "https://api.github.com/users/wirew0lf/repos",
    "events_url": "https://api.github.com/users/wirew0lf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wirew0lf/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3394554570,
      "node_id": "LA_kwDOGBlvNc7KVMrK",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-fuzzing",
      "name": "A-fuzzing",
      "color": "FBCA04",
      "default": false,
      "description": "Area: fuzzing"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-04-11T00:37:18Z",
  "updated_at": "2023-06-30T13:32:19Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (388c3c0 2023-04-10T00:15:22.461433000Z)\n\n### What command(s) is the bug in?\n\nforge test -m invariant\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\nAccording to the [invariant testing documentation](https://book.getfoundry.sh/forge/invariant-testing#function-level-assertions) in the foundry book it is possible to use function-level assertions in a handler. However, this doesn't seem to work. Minimal working example:\r\n\r\n**Counter.sol**\r\n```solidity\r\ncontract Counter {\r\n    uint256 public number;\r\n\r\n    function setNumber(uint256 newNumber) public {\r\n        if(newNumber != 100) {\r\n            number = newNumber;\r\n        } \r\n    }\r\n}\r\n````\r\n\r\n**CounterHandler.sol**\r\n```solidity\r\ncontract CounterHandler is Test {\r\n    Counter counter;\r\n\r\n    constructor(Counter _counter) {\r\n        counter = _counter;\r\n    }\r\n\r\n    function setNumber(uint256 newNumber) public {\r\n        counter.setNumber(newNumber);\r\n        assertEq(uint(0), uint(1));\r\n        assertTrue(false);\r\n    }\r\n}\r\n````\r\n\r\n**CounterInvariants**\r\n```solidity\r\ncontract CounterInvariants is Test {\r\n    Counter counter;\r\n    CounterHandler handler;\r\n\r\n    function setUp() public {\r\n        counter = new Counter();\r\n        handler = new CounterHandler(counter);\r\n        targetContract(address(handler));\r\n    }\r\n\r\n    function invariant_numberNotZero() public {\r\n        assertEq(counter.number() != 100, true);\r\n    }\r\n}\r\n```\r\n\r\nAs shown in the CounterHandler contract I've introduced some assertions that should fail such as `assertTrue(false)` and `assertEq(uint(0), uint(1))`. However, when running the invariant test it will succeed.\r\n<img width=\"716\" alt=\"image\" src=\"https://user-images.githubusercontent.com/11537225/231025564-9db0769d-b7c5-4240-bfe1-af6f0313bb05.png\">\r\n",
  "closed_by": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4718/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4718/timeline",
  "performed_via_github_app": null,
  "state_reason": "reopened"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1502550439",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4718#issuecomment-1502550439",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4718",
    "id": 1502550439,
    "node_id": "IC_kwDOGBlvNc5Zjxmn",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-11T01:21:03Z",
    "updated_at": "2023-04-11T01:21:03Z",
    "author_association": "COLLABORATOR",
    "body": "@joshieDo This sounds like a bug in how we check invariant failures? Since the global failure introduced in https://github.com/dapphub/ds-test/pull/30 should allow this to be supported. Also cc'ing @lucas-manuel who wrote the docs\r\n\r\n@wirew0lf in the meantime you should be able to work around this by using `require` statements in your handler contract instead",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1502550439/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1532784476",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4718#issuecomment-1532784476",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4718",
    "id": 1532784476,
    "node_id": "IC_kwDOGBlvNc5bXG9c",
    "user": {
      "login": "0xfarhaan",
      "id": 59924029,
      "node_id": "MDQ6VXNlcjU5OTI0MDI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/59924029?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xfarhaan",
      "html_url": "https://github.com/0xfarhaan",
      "followers_url": "https://api.github.com/users/0xfarhaan/followers",
      "following_url": "https://api.github.com/users/0xfarhaan/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xfarhaan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xfarhaan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xfarhaan/subscriptions",
      "organizations_url": "https://api.github.com/users/0xfarhaan/orgs",
      "repos_url": "https://api.github.com/users/0xfarhaan/repos",
      "events_url": "https://api.github.com/users/0xfarhaan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xfarhaan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-03T10:23:56Z",
    "updated_at": "2023-05-03T10:23:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah we've also noticed the same issue, using require statements across the handlers isn't desirable as we have built alot of assertion helpers to assert state across our system. \r\n\r\nWe really could use this functionality!  ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1532784476/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1553180457",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4718#issuecomment-1553180457",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4718",
    "id": 1553180457,
    "node_id": "IC_kwDOGBlvNc5ck6cp",
    "user": {
      "login": "lucas-manuel",
      "id": 44272939,
      "node_id": "MDQ6VXNlcjQ0MjcyOTM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/44272939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucas-manuel",
      "html_url": "https://github.com/lucas-manuel",
      "followers_url": "https://api.github.com/users/lucas-manuel/followers",
      "following_url": "https://api.github.com/users/lucas-manuel/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucas-manuel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucas-manuel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucas-manuel/subscriptions",
      "organizations_url": "https://api.github.com/users/lucas-manuel/orgs",
      "repos_url": "https://api.github.com/users/lucas-manuel/repos",
      "events_url": "https://api.github.com/users/lucas-manuel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucas-manuel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-18T14:50:11Z",
    "updated_at": "2023-05-18T14:50:11Z",
    "author_association": "NONE",
    "body": "@mds1 pinging this issue again for visibility, would be a huge unlock for invariant testing.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1553180457/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1614658283",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4718#issuecomment-1614658283",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4718",
    "id": 1614658283,
    "node_id": "IC_kwDOGBlvNc5gPbrr",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-30T13:32:18Z",
    "updated_at": "2023-06-30T13:32:18Z",
    "author_association": "COLLABORATOR",
    "body": "@Evalir since #4980 was reverted by #5013 I've reopened this since I assume it's still an issue then",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1614658283/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
