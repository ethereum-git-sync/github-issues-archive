{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5240",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5240/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5240/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5240/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5240",
  "id": 1778426680,
  "node_id": "I_kwDOGBlvNc5qAKM4",
  "number": 5240,
  "title": "forge build --sizes ignores contents of at least one sol in the project",
  "user": {
    "login": "aathan",
    "id": 24279435,
    "node_id": "MDQ6VXNlcjI0Mjc5NDM1",
    "avatar_url": "https://avatars.githubusercontent.com/u/24279435?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aathan",
    "html_url": "https://github.com/aathan",
    "followers_url": "https://api.github.com/users/aathan/followers",
    "following_url": "https://api.github.com/users/aathan/following{/other_user}",
    "gists_url": "https://api.github.com/users/aathan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aathan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aathan/subscriptions",
    "organizations_url": "https://api.github.com/users/aathan/orgs",
    "repos_url": "https://api.github.com/users/aathan/repos",
    "events_url": "https://api.github.com/users/aathan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aathan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-06-28T08:04:31Z",
  "updated_at": "2023-07-04T00:56:00Z",
  "closed_at": "2023-07-03T17:27:19Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [X] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (31d6498 2023-06-28T00:10:20.700537031Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nforge build\r\n\r\n### Operating System\r\n\r\nLinux\r\n\r\n### Describe the bug\r\n\r\nThere is a bug in `forge build` which prevents it from outputting at least `--sizes` info for a .sol files in my project. Dunno if the abi is valid (I'll try to figure that out tomorrow). No syntax errors or warnings are emitted. Is there a way for me to get forge to output the solc command line it's using so I can see if solc is emitting some console output that may be a hint?\r\n\r\n```\r\nlibrary { ... }\r\ncontract {\r\n erc20 stuff...\r\n other stuff...\r\n struct localVars {}\r\n function problemFunction(... calldata params ... ) public view returns (SomeOtherStruct memory ret) {\r\n    ... body that uses localVars / body may be removed...\r\n  }\r\n}\r\n```\r\n\r\n\r\nThe out/ directory contains abi for the affected file. I've tried removing parts of the file to see if it's something about the contents. I placed a certain function definition at the bottom of the contract. If that function appears, no output from `--sizes` occurs UNLESS it's the only function defined in the file (other than a few generic IERC20's at the top). I can remove the BODY of the function and it still causes problems with `--sizes` output if `other stuff...` is in the file. If `other stuff...` does not appear, then irrespective of the existence of the body, `--sizes` contains a line for the file.\r\n\r\nThis would seem to imply there is some interaction with what's in the body of the function and `other stuff...` , but what kind of interaction would cause NO warnings or errors to be emitted and `forge build --sizes` to not work? Again, the abi seems to exist, and it is too late right now for me to verify what's in it.\r\n\r\nLet me know what to look for. This sounds like a problem with forge interpreting the abi output.\r\n\r\nusing solc 8.19\r\n ",
  "closed_by": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5240/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5240/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1611746724",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5240#issuecomment-1611746724",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5240",
    "id": 1611746724,
    "node_id": "IC_kwDOGBlvNc5gEU2k",
    "user": {
      "login": "aathan",
      "id": 24279435,
      "node_id": "MDQ6VXNlcjI0Mjc5NDM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24279435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aathan",
      "html_url": "https://github.com/aathan",
      "followers_url": "https://api.github.com/users/aathan/followers",
      "following_url": "https://api.github.com/users/aathan/following{/other_user}",
      "gists_url": "https://api.github.com/users/aathan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aathan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aathan/subscriptions",
      "organizations_url": "https://api.github.com/users/aathan/orgs",
      "repos_url": "https://api.github.com/users/aathan/repos",
      "events_url": "https://api.github.com/users/aathan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aathan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-28T16:33:46Z",
    "updated_at": "2023-06-28T16:33:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, it looks like the issue is actually this:\r\n\r\n```\r\n\r\n    event TestEvent(address indexed);\r\n    function test() public {\r\n        emit TestEvent(msg.sender);\r\n    }\r\n\r\n```\r\n\r\nIf this is included in the contract, `forge build --sizes` shows no output for the file.\r\n\r\nIf forge is triaging things simply based on the word \"test\" appearing in places, that's just (IMHO) ... wrong.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1611746724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1611759064",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5240#issuecomment-1611759064",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5240",
    "id": 1611759064,
    "node_id": "IC_kwDOGBlvNc5gEX3Y",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-28T16:43:47Z",
    "updated_at": "2023-06-28T16:43:57Z",
    "author_association": "MEMBER",
    "body": "can you please prepare a repro?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1611759064/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1611788947",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5240#issuecomment-1611788947",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5240",
    "id": 1611788947,
    "node_id": "IC_kwDOGBlvNc5gEfKT",
    "user": {
      "login": "aathan",
      "id": 24279435,
      "node_id": "MDQ6VXNlcjI0Mjc5NDM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24279435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aathan",
      "html_url": "https://github.com/aathan",
      "followers_url": "https://api.github.com/users/aathan/followers",
      "following_url": "https://api.github.com/users/aathan/following{/other_user}",
      "gists_url": "https://api.github.com/users/aathan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aathan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aathan/subscriptions",
      "organizations_url": "https://api.github.com/users/aathan/orgs",
      "repos_url": "https://api.github.com/users/aathan/repos",
      "events_url": "https://api.github.com/users/aathan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aathan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-28T17:07:19Z",
    "updated_at": "2023-06-28T17:09:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll try but I've already spent a lot of time finding this issue. Please just try copy/pasting that into one of your projects and see if `forge build --sizes` stops providing output for the contract into which you pasted that. Doing so will also help triage whether there is something else special about my settup that's causing this snippet's existence in a contract to affect forge.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1611788947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1618918599",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5240#issuecomment-1618918599",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5240",
    "id": 1618918599,
    "node_id": "IC_kwDOGBlvNc5gfrzH",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-03T17:27:19Z",
    "updated_at": "2023-07-03T17:27:19Z",
    "author_association": "COLLABORATOR",
    "body": "The issue here is because the method is named `test`, so forge thinks it's a test or script contract and excludes it from the size check:\r\n\r\nhttps://github.com/foundry-rs/foundry/blob/642376210f0151794e1bb34c9448c2ee30ab0d88/common/src/compile.rs#L150-L160\r\n\r\nhttps://github.com/foundry-rs/foundry/blob/642376210f0151794e1bb34c9448c2ee30ab0d88/common/src/traits.rs#L63-L65\r\n\r\n> If forge is triaging things simply based on the word \"test\" appearing in places, that's just (IMHO) ... wrong.\r\n\r\n`test` is a special function prefix used by forge to identify test functions to execute. Without a special prefix UX would be worse. An alternative is to identify test/script contracts exclusively on the presence of the `IS_TEST` and `IS_SCRIPT` method, but tests still need the special `test` prefix, so also using that is more robust since the user's test contract might not have that method. Additionally, there's not really use cases where a production contract needs to have a method that starts with `test` so this heuristic seems ok, but other ideas welcome :)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1618918599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1619303626",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5240#issuecomment-1619303626",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5240",
    "id": 1619303626,
    "node_id": "IC_kwDOGBlvNc5ghJzK",
    "user": {
      "login": "aathan",
      "id": 24279435,
      "node_id": "MDQ6VXNlcjI0Mjc5NDM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24279435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aathan",
      "html_url": "https://github.com/aathan",
      "followers_url": "https://api.github.com/users/aathan/followers",
      "following_url": "https://api.github.com/users/aathan/following{/other_user}",
      "gists_url": "https://api.github.com/users/aathan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aathan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aathan/subscriptions",
      "organizations_url": "https://api.github.com/users/aathan/orgs",
      "repos_url": "https://api.github.com/users/aathan/repos",
      "events_url": "https://api.github.com/users/aathan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aathan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-04T00:46:19Z",
    "updated_at": "2023-07-04T00:56:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's not clear whether this is a \"wontfix\" or some change to resolve what's a test class differently, has been made?\r\n\r\nLets not make a big deal over trivial things but come on. As developers of potentially foundational technology the attitude of making statements like \"there's not really use cases where a production contract needs to have a method that starts with test\" is simply inappropriate. Contracts may be deployed to either private or public blockchains for any reason and naming conventions that are not limited by the EVM itself should not be limited by the tooling, if reasonably possible.\r\n\r\nAlso, you seem to be conflating the naming of test functions with the marking of the entire contract as a test contract. I am not sure what UX you are referring to. There seem to be much better ways to potentially decide that a contract is a test contract, including whether it exists in the `test/` directory, whether it derives from `Test`, etc etc. Key word \"seem,\" as I'm not claiming to know everything about how forge does its work. Maybe \"test/\" is not a special dir, but if it's settable in the toml, and that's the only place tests are compiled/run from, then that seems like a better test than the current one.\r\n\r\nIt would be MUCH better IMHO to tag a contract as a special contract type based on available information about the devops environment (such as filesystem location), or the presence of forge-specific contents in the ABI, such as a *solitary/single* method of some special name, preferably one that is extremely unlikely to be important in a production deployment, such as \"____is_test()\" rather than a multitude of methods such as \"anything that starts with test\"\r\n\r\nImagine a contract with `function testValidityOfSignatureForThisTransaction()`\r\n\r\nAnyway, not a big deal, but I do want to push back on the implied attitude towards imposing naming conventions globally on projects by excluding any prefix across a large number of possible function names, particularly when the prefix is a natural language word.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1619303626/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
