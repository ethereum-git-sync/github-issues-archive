{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1924",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1924/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1924/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1924/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1924",
  "id": 1268500560,
  "node_id": "I_kwDOGBlvNc5Lm8hQ",
  "number": 1924,
  "title": "Parametrizable setUp",
  "user": {
    "login": "Van0k",
    "id": 19663524,
    "node_id": "MDQ6VXNlcjE5NjYzNTI0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19663524?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Van0k",
    "html_url": "https://github.com/Van0k",
    "followers_url": "https://api.github.com/users/Van0k/followers",
    "following_url": "https://api.github.com/users/Van0k/following{/other_user}",
    "gists_url": "https://api.github.com/users/Van0k/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Van0k/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Van0k/subscriptions",
    "organizations_url": "https://api.github.com/users/Van0k/orgs",
    "repos_url": "https://api.github.com/users/Van0k/repos",
    "events_url": "https://api.github.com/users/Van0k/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Van0k/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3394554570,
      "node_id": "LA_kwDOGBlvNc7KVMrK",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-fuzzing",
      "name": "A-fuzzing",
      "color": "FBCA04",
      "default": false,
      "description": "Area: fuzzing"
    },
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759720129,
      "node_id": "LA_kwDOGBlvNc7gGMbB",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-hard",
      "name": "D-hard",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: hard"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-06-12T08:03:07Z",
  "updated_at": "2023-07-15T09:42:50Z",
  "closed_at": "2022-08-15T18:40:12Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nIt would be useful to have fuzzing for the `setUp()` function before tests, in order to run tests for various settings of a testing suite.\r\n\r\nCurrently this can be done, but requires creating a parametrized `setUp<X>()` function and calling it at the beginning of each test where fuzzing is needed. Sometimes one can forget to add this at the beginning of the test, which leads to improper coverage.\r\n\r\nE.g.:\r\nInstead of:\r\n```solidity=\r\n   function setUp() public {\r\n   }\r\n\r\n   function test(uint8 setupParam) public {\r\n       _setupSuite(setupParam);\r\n      ....\r\n   }\r\n```\r\n\r\nIt should be like this:\r\n```solidity=\r\n   function setUp(uint8 setupParam) public {\r\n     _setupSuite(setupParam);\r\n   }\r\n\r\n   function test() public {   \r\n      ....\r\n   }\r\n```\r\n\r\nDoing this would automatically make all tests fuzzed, even if there are no parameters in the test itself.\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1924/reactions",
    "total_count": 4,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 2,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1924/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1153705474",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1924#issuecomment-1153705474",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1924",
    "id": 1153705474,
    "node_id": "IC_kwDOGBlvNc5ExCYC",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-13T09:44:37Z",
    "updated_at": "2022-06-13T09:44:37Z",
    "author_association": "MEMBER",
    "body": "Not super simple to implement and also has some open questions:\r\n\r\nIf `setUp` is parameterized, how do fuzz tests works? Would you run 256 runs of setup, each with 256 fuzz tests, i.e. 65536 fuzz runs total? Seems a little bit excessive, but I'm not sure how this should work otherwise.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1153705474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1215597604",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1924#issuecomment-1215597604",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1924",
    "id": 1215597604,
    "node_id": "IC_kwDOGBlvNc5IdIwk",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-15T18:40:11Z",
    "updated_at": "2022-08-15T18:40:11Z",
    "author_association": "MEMBER",
    "body": "Closing as out of scope for now since it is unclear how this would work in practice",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1215597604/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1636717200",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1924#issuecomment-1636717200",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1924",
    "id": 1636717200,
    "node_id": "IC_kwDOGBlvNc5hjlKQ",
    "user": {
      "login": "LilaRest",
      "id": 48853371,
      "node_id": "MDQ6VXNlcjQ4ODUzMzcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/48853371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LilaRest",
      "html_url": "https://github.com/LilaRest",
      "followers_url": "https://api.github.com/users/LilaRest/followers",
      "following_url": "https://api.github.com/users/LilaRest/following{/other_user}",
      "gists_url": "https://api.github.com/users/LilaRest/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LilaRest/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LilaRest/subscriptions",
      "organizations_url": "https://api.github.com/users/LilaRest/orgs",
      "repos_url": "https://api.github.com/users/LilaRest/repos",
      "events_url": "https://api.github.com/users/LilaRest/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LilaRest/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-15T09:13:09Z",
    "updated_at": "2023-07-15T09:13:46Z",
    "author_association": "NONE",
    "body": "@onbjerg I think `setUp()` would indeed be inefficient when requiring >50 executions and at the same time being combined with fuzz tests.\r\n\r\nHowever, in all other scenarios, `setUp()` fuzz would be terribly useful.\r\n\r\nFor example, I'm writing tests for a kind of staking contract that can accept any invested ERC20 token at initialization-time, and therefore any `decimals()` possible value.\r\n\r\nI want to make sure that this contract works for all decimals in `[0, 18]` using `vm.assume(decimals <= 18)`. In this scenario, the `setUp` fuzzing would have allowed me to test this with just one extra line of code.\r\n\r\nI think this feature should definitely be implemented but with a message in the documentation to inform users that in some scenarios it can be really inefficient and should therefore be used with caution.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1636717200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1636721026",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1924#issuecomment-1636721026",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1924",
    "id": 1636721026,
    "node_id": "IC_kwDOGBlvNc5hjmGC",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-15T09:35:44Z",
    "updated_at": "2023-07-15T09:35:44Z",
    "author_association": "MEMBER",
    "body": "That still exhibits the exact same issue. We don't use a solver for fuzz tests, we use shrinking, so your security here is directly proportional to the amount of runs you do.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1636721026/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1636722552",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1924#issuecomment-1636722552",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1924",
    "id": 1636722552,
    "node_id": "IC_kwDOGBlvNc5hjmd4",
    "user": {
      "login": "LilaRest",
      "id": 48853371,
      "node_id": "MDQ6VXNlcjQ4ODUzMzcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/48853371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LilaRest",
      "html_url": "https://github.com/LilaRest",
      "followers_url": "https://api.github.com/users/LilaRest/followers",
      "following_url": "https://api.github.com/users/LilaRest/following{/other_user}",
      "gists_url": "https://api.github.com/users/LilaRest/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LilaRest/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LilaRest/subscriptions",
      "organizations_url": "https://api.github.com/users/LilaRest/orgs",
      "repos_url": "https://api.github.com/users/LilaRest/repos",
      "events_url": "https://api.github.com/users/LilaRest/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LilaRest/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-15T09:42:50Z",
    "updated_at": "2023-07-15T09:42:50Z",
    "author_association": "NONE",
    "body": "> That still exhibits the exact same issue. We don't use a solver for fuzz tests, we use shrinking, so your security here is directly proportional to the amount of runs you do.\r\n\r\nI'm not sure to properly understand shrinking, but an idea could be to allow pre-defining a set of values to runs `setUp()` with. In my use case this would prevent writing 18 times the same contracts for the 18 decimals scenarios",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1636722552/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
