{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5565",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5565/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5565/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5565/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5565",
  "id": 1841695518,
  "node_id": "I_kwDOGBlvNc5txgse",
  "number": 5565,
  "title": "Update foundry to use latest revm",
  "user": {
    "login": "snreynolds",
    "id": 30504811,
    "node_id": "MDQ6VXNlcjMwNTA0ODEx",
    "avatar_url": "https://avatars.githubusercontent.com/u/30504811?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/snreynolds",
    "html_url": "https://github.com/snreynolds",
    "followers_url": "https://api.github.com/users/snreynolds/followers",
    "following_url": "https://api.github.com/users/snreynolds/following{/other_user}",
    "gists_url": "https://api.github.com/users/snreynolds/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/snreynolds/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/snreynolds/subscriptions",
    "organizations_url": "https://api.github.com/users/snreynolds/orgs",
    "repos_url": "https://api.github.com/users/snreynolds/repos",
    "events_url": "https://api.github.com/users/snreynolds/events{/privacy}",
    "received_events_url": "https://api.github.com/users/snreynolds/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-08-08T17:08:19Z",
  "updated_at": "2023-08-08T17:13:47Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nBuilding foundry from source after pointing to the latest revm branch breaks. Seems like maybe there were breaking changes since release/v25.\r\n\r\n### Additional context\r\nThis is a snapshot of some of the error messages I am seeing:\r\n```error[E0308]: mismatched types\r\n   --> evm/src/executor/mod.rs:390:39\r\n    |\r\n390 |             self.backend_mut().commit(changes.clone());\r\n    |                                ------ ^^^^^^^^^^^^^^^ expected `HashMap<B160, Account>`, found a different `HashMap<B160, Account>`\r\n    |                                |\r\n    |                                arguments to this method are incorrect\r\n    |\r\n    = note: `HashMap<B160, Account>` and `HashMap<B160, Account>` have similar names, but are actually distinct types\r\nnote: `HashMap<B160, Account>` is defined in crate `hashbrown`\r\n   --> /Users/sara/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hashbrown-0.13.2/src/map.rs:188:1\r\n    |\r\n188 | pub struct HashMap<K, V, S = DefaultHashBuilder, A: Allocator + Clone = Global> {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: `HashMap<B160, Account>` is defined in crate `hashbrown`\r\n   --> /Users/sara/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hashbrown-0.14.0/src/map.rs:188:1\r\n    |\r\n188 | pub struct HashMap<K, V, S = DefaultHashBuilder, A: Allocator + Clone = Global> {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    = note: perhaps two different versions of crate `hashbrown` are being used?\r\nnote: method defined here\r\n   --> /Users/sara/.cargo/git/checkouts/revm-bf744d8ffabcbad9/12558c5/crates/primitives/src/db.rs:30:8\r\n    |\r\n30  |     fn commit(&mut self, changes: Map<B160, Account>);\r\n    |        ^^^^^^\r\n\r\nerror[E0308]: mismatched types\r\n   --> evm/src/executor/mod.rs:564:24\r\n    |\r\n564 |         backend.commit(state_changeset);\r\n    |                 ------ ^^^^^^^^^^^^^^^ expected `HashMap<B160, Account>`, found a different `HashMap<B160, Account>`\r\n    |                 |\r\n    |                 arguments to this method are incorrect\r\n    |\r\n    = note: `HashMap<B160, Account>` and `HashMap<B160, Account>` have similar names, but are actually distinct types\r\nnote: `HashMap<B160, Account>` is defined in crate `hashbrown`\r\n   --> /Users/sara/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hashbrown-0.13.2/src/map.rs:188:1\r\n    |\r\n188 | pub struct HashMap<K, V, S = DefaultHashBuilder, A: Allocator + Clone = Global> {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: `HashMap<B160, Account>` is defined in crate `hashbrown`\r\n   --> /Users/sara/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hashbrown-0.14.0/src/map.rs:188:1\r\n    |\r\n188 | pub struct HashMap<K, V, S = DefaultHashBuilder, A: Allocator + Clone = Global> {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    = note: perhaps two different versions of crate `hashbrown` are being used?\r\nnote: method defined here\r\n   --> /Users/sara/.cargo/git/checkouts/revm-bf744d8ffabcbad9/12558c5/crates/primitives/src/db.rs:30:8\r\n    |\r\n30  |     fn commit(&mut self, changes: Map<B160, Account>);\r\n    |        ^^^^^^\r\n\r\nerror[E0308]: mismatched types\r\n   --> evm/src/executor/mod.rs:844:31\r\n    |\r\n844 |         state_changeset: Some(state_changeset),\r\n    |                          ---- ^^^^^^^^^^^^^^^ expected `HashMap<B160, Account>`, found a different `HashMap<B160, Account>`\r\n    |                          |\r\n    |                          arguments to this enum variant are incorrect\r\n    |\r\n    = note: `HashMap<B160, Account>` and `HashMap<B160, Account>` have similar names, but are actually distinct types\r\nnote: `HashMap<B160, Account>` is defined in crate `hashbrown`\r\n   --> /Users/sara/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hashbrown-0.14.0/src/map.rs:188:1\r\n    |\r\n188 | pub struct HashMap<K, V, S = DefaultHashBuilder, A: Allocator + Clone = Global> {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: `HashMap<B160, Account>` is defined in crate `hashbrown`\r\n   --> /Users/sara/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hashbrown-0.13.2/src/map.rs:188:1\r\n    |\r\n188 | pub struct HashMap<K, V, S = DefaultHashBuilder, A: Allocator + Clone = Global> {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    = note: perhaps two different versions of crate `hashbrown` are being used?\r\nhelp: the type constructed contains `revm::revm_precompile::HashMap<B160, revm::revm_primitives::Account>` due to the type of the argument passed\r\n   --> evm/src/executor/mod.rs:844:26\r\n    |\r\n844 |         state_changeset: Some(state_changeset),\r\n    |                          ^^^^^---------------^\r\n    |                               |\r\n    |                               this argument influences the type of `Some`\r\nnote: tuple variant defined here\r\n   --> /rustc/eb26296b556cef10fb713a38f3d16b9886080f26/library/core/src/option.rs:571:5\r\n\r\nerror[E0308]: mismatched types\r\n   --> evm/src/fuzz/invariant/executor.rs:176:51\r\n    |\r\n176 |                     executor.backend_mut().commit(state_changeset.clone());\r\n    |                                            ------ ^^^^^^^^^^^^^^^^^^^^^^^ expected `HashMap<B160, Account>`, found a different `HashMap<B160, Account>`\r\n    |                                            |\r\n    |                                            arguments to this method are incorrect\r\n    |\r\n    = note: `HashMap<B160, Account>` and `HashMap<B160, Account>` have similar names, but are actually distinct types\r\nnote: `HashMap<B160, Account>` is defined in crate `hashbrown`\r\n   --> /Users/sara/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hashbrown-0.13.2/src/map.rs:188:1\r\n    |\r\n188 | pub struct HashMap<K, V, S = DefaultHashBuilder, A: Allocator + Clone = Global> {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: `HashMap<B160, Account>` is defined in crate `hashbrown`\r\n   --> /Users/sara/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hashbrown-0.14.0/src/map.rs:188:1\r\n    |\r\n188 | pub struct HashMap<K, V, S = DefaultHashBuilder, A: Allocator + Clone = Global> {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    = note: perhaps two different versions of crate `hashbrown` are being used?\r\nnote: method defined here\r\n   --> /Users/sara/.cargo/git/checkouts/revm-bf744d8ffabcbad9/12558c5/crates/primitives/src/db.rs:30:8\r\n    |\r\n30  |     fn commit(&mut self, changes: Map<B160, Account>);\r\n    |        ^^^^^^\r\n\r\nerror[E0615]: attempted to take value of method `is_touched` on type `&revm::revm_primitives::Account`\r\n   --> evm/src/fuzz/strategies/state.rs:263:51\r\n    |\r\n263 |             if let (true, Some(code)) = (&account.is_touched, &account.info.code) {\r\n    |                                                   ^^^^^^^^^^ method, not a field\r\n    |\r\nhelp: use parentheses to call the method\r\n    |\r\n263 |             if let (true, Some(code)) = (&account.is_touched(), &account.info.code) {\r\n\r\n```\r\n\r\n\r\nAlso to produce errors I changed [this](https://github.com/foundry-rs/foundry/blob/master/Cargo.toml#L90) line to point to the main branch and ran `cargo install --path ./cli --profile local --bins --force`",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5565/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5565/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
