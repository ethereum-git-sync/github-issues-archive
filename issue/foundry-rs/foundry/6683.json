{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6683",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6683/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6683/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6683/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6683",
  "id": 2059941617,
  "node_id": "I_kwDOGBlvNc56yDbx",
  "number": 6683,
  "title": "Invariant shrinking does not find the smallest sequence of transactions",
  "user": {
    "login": "aviggiano",
    "id": 3029017,
    "node_id": "MDQ6VXNlcjMwMjkwMTc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3029017?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aviggiano",
    "html_url": "https://github.com/aviggiano",
    "followers_url": "https://api.github.com/users/aviggiano/followers",
    "following_url": "https://api.github.com/users/aviggiano/following{/other_user}",
    "gists_url": "https://api.github.com/users/aviggiano/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aviggiano/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aviggiano/subscriptions",
    "organizations_url": "https://api.github.com/users/aviggiano/orgs",
    "repos_url": "https://api.github.com/users/aviggiano/repos",
    "events_url": "https://api.github.com/users/aviggiano/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aviggiano/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2023-12-29T13:13:01Z",
  "updated_at": "2023-12-30T02:11:48Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (67ab870 2023-12-28T00:18:11.567460000Z)\n\n### What command(s) is the bug in?\n\nforge test --mc FoundryTester\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\nI am running a Foundry invariant test campaign, and I know for a fact that only 1 transaction is required to break the invariant. However, Foundry consistently fails to shrink down to that one.\r\n\r\nI restarted the run 10 times and took note of how many txs it was able to shrink to:\r\n\r\n1. 6\r\n2. 12\r\n3. 3\r\n4. 10\r\n5. 15\r\n6. 12\r\n7. 13\r\n8. 10\r\n9. 12\r\n10. 1\r\n\r\n\r\nI also tried doubling the `shrink_run_limit` parameter up to `524288`, but it made no difference, neither in the \"performance\" of the shrinking algorithm nor in the time to shrink. This is unexpected. I'd like to crank the \"shrinking\" limit up to infinity and be able to get to \"the\" smallest possible.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6683/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6683/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1872232475",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6683#issuecomment-1872232475",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6683",
    "id": 1872232475,
    "node_id": "IC_kwDOGBlvNc5vmAAb",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-29T17:24:27Z",
    "updated_at": "2023-12-29T17:24:27Z",
    "author_association": "COLLABORATOR",
    "body": "@aviggiano can you share the test case to reproduce with? \r\n\r\ncc @brockelmore ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1872232475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1872247085",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6683#issuecomment-1872247085",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6683",
    "id": 1872247085,
    "node_id": "IC_kwDOGBlvNc5vmDkt",
    "user": {
      "login": "aviggiano",
      "id": 3029017,
      "node_id": "MDQ6VXNlcjMwMjkwMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3029017?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aviggiano",
      "html_url": "https://github.com/aviggiano",
      "followers_url": "https://api.github.com/users/aviggiano/followers",
      "following_url": "https://api.github.com/users/aviggiano/following{/other_user}",
      "gists_url": "https://api.github.com/users/aviggiano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aviggiano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aviggiano/subscriptions",
      "organizations_url": "https://api.github.com/users/aviggiano/orgs",
      "repos_url": "https://api.github.com/users/aviggiano/repos",
      "events_url": "https://api.github.com/users/aviggiano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aviggiano/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-29T17:55:26Z",
    "updated_at": "2023-12-29T17:55:26Z",
    "author_association": "NONE",
    "body": "@mds1 The codebase is still private, but I'll create a generic MWE.\r\nI'll share it when it's done.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1872247085/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1872268368",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6683#issuecomment-1872268368",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6683",
    "id": 1872268368,
    "node_id": "IC_kwDOGBlvNc5vmIxQ",
    "user": {
      "login": "aviggiano",
      "id": 3029017,
      "node_id": "MDQ6VXNlcjMwMjkwMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3029017?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aviggiano",
      "html_url": "https://github.com/aviggiano",
      "followers_url": "https://api.github.com/users/aviggiano/followers",
      "following_url": "https://api.github.com/users/aviggiano/following{/other_user}",
      "gists_url": "https://api.github.com/users/aviggiano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aviggiano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aviggiano/subscriptions",
      "organizations_url": "https://api.github.com/users/aviggiano/orgs",
      "repos_url": "https://api.github.com/users/aviggiano/repos",
      "events_url": "https://api.github.com/users/aviggiano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aviggiano/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-29T18:36:07Z",
    "updated_at": "2023-12-29T18:36:07Z",
    "author_association": "NONE",
    "body": "@mds1 I was able to create a very simple MWE using the sample Foundry project:\r\n\r\nhttps://github.com/aviggiano/shrinking-mwe\r\n\r\nTests:\r\n\r\n```\r\n[I] âžœ i=0; while [ $i -lt 10 ]; do; forge test | grep -o sender= | wc -l; i=$((i+1)); done;\r\n      22\r\n      22\r\n      28\r\n       4\r\n      30\r\n      26\r\n       4\r\n       8\r\n      18\r\n       6\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1872268368/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1872280712",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6683#issuecomment-1872280712",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6683",
    "id": 1872280712,
    "node_id": "IC_kwDOGBlvNc5vmLyI",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-29T19:02:16Z",
    "updated_at": "2023-12-29T19:02:16Z",
    "author_association": "COLLABORATOR",
    "body": "I think the issue here (though Iâ€™ll let @brockelmore confirm) is that forgeâ€™s shrinking can only find the _local_ minimal sequence based on the initial sequence and that broke the invariant, and does not back out to look for a global minimal sequence. \r\n\r\nFor example, if you can break the invariant with a single call of `addThree` OR three calls of `increment`, forge wonâ€™t shrink to the global minimum of a single `addThree` call if that method was never called in the original sequence. \r\n\r\nIâ€™m not familiar with echidnaâ€™s approach, but does it consistently find the global minimum?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1872280712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1872294383",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6683#issuecomment-1872294383",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6683",
    "id": 1872294383,
    "node_id": "IC_kwDOGBlvNc5vmPHv",
    "user": {
      "login": "aviggiano",
      "id": 3029017,
      "node_id": "MDQ6VXNlcjMwMjkwMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3029017?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aviggiano",
      "html_url": "https://github.com/aviggiano",
      "followers_url": "https://api.github.com/users/aviggiano/followers",
      "following_url": "https://api.github.com/users/aviggiano/following{/other_user}",
      "gists_url": "https://api.github.com/users/aviggiano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aviggiano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aviggiano/subscriptions",
      "organizations_url": "https://api.github.com/users/aviggiano/orgs",
      "repos_url": "https://api.github.com/users/aviggiano/repos",
      "events_url": "https://api.github.com/users/aviggiano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aviggiano/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-29T19:23:38Z",
    "updated_at": "2023-12-29T19:23:38Z",
    "author_association": "NONE",
    "body": "> Iâ€™m not familiar with echidnaâ€™s approach, but does it consistently find the global minimum?\r\n\r\nBoth Echidna and Medusa will attempt to find the \"global minimum\", and I expect them to eventually find it if I increase the shrink limit. See below:\r\n\r\n```\r\n# Echidna\r\n[I] âžœ i=0; while [ $i -lt 10 ]; do; echidna . --contract CryticTester --config echidna.yaml | grep -v '^\\[' | grep '(' | wc -l; i=$((i+1)); done;\r\n       1\r\n       2\r\n       2\r\n       4\r\n       5\r\n       1\r\n       1\r\n       2\r\n       4\r\n       5\r\n\r\n# Medusa\r\n[I] âžœ i=0; while [ $i -lt 10 ]; do; medusa fuzz | grep -o '^[0-9]\\+) ' | wc -l; i=$((i+1)); done;\r\n       2\r\n       2\r\n       2\r\n       2\r\n       1\r\n       1\r\n       2\r\n       2\r\n       2\r\n       2\r\n```\r\n\r\nI've updated the MWE to support those 2 fuzzers as a benchmark.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1872294383/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1872427630",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6683#issuecomment-1872427630",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6683",
    "id": 1872427630,
    "node_id": "IC_kwDOGBlvNc5vmvpu",
    "user": {
      "login": "brockelmore",
      "id": 31553173,
      "node_id": "MDQ6VXNlcjMxNTUzMTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31553173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brockelmore",
      "html_url": "https://github.com/brockelmore",
      "followers_url": "https://api.github.com/users/brockelmore/followers",
      "following_url": "https://api.github.com/users/brockelmore/following{/other_user}",
      "gists_url": "https://api.github.com/users/brockelmore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brockelmore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brockelmore/subscriptions",
      "organizations_url": "https://api.github.com/users/brockelmore/orgs",
      "repos_url": "https://api.github.com/users/brockelmore/repos",
      "events_url": "https://api.github.com/users/brockelmore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brockelmore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-30T02:09:54Z",
    "updated_at": "2023-12-30T02:11:48Z",
    "author_association": "MEMBER",
    "body": "hmm interesting\r\n\r\nI would expect all of them to reduce down to at most 3 or 4. I will take a look, thanks for repro.\r\n\r\nWhatâ€™s strange is that if the initial sequence is < 13 calls long, we use a power set so we are guaranteed to get the minimum number of calls (without modifying the calldata, i.e. 3 increments wonâ€™t shrink to a setNumber(3)). ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1872427630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
