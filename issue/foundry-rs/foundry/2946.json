{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2946",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2946/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2946/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2946/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2946",
  "id": 1351605553,
  "node_id": "I_kwDOGBlvNc5Qj90x",
  "number": 2946,
  "title": "fuzzing should have a flag that avoids addresses with contracts",
  "user": {
    "login": "varunsrin",
    "id": 528882,
    "node_id": "MDQ6VXNlcjUyODg4Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/528882?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/varunsrin",
    "html_url": "https://github.com/varunsrin",
    "followers_url": "https://api.github.com/users/varunsrin/followers",
    "following_url": "https://api.github.com/users/varunsrin/following{/other_user}",
    "gists_url": "https://api.github.com/users/varunsrin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/varunsrin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/varunsrin/subscriptions",
    "organizations_url": "https://api.github.com/users/varunsrin/orgs",
    "repos_url": "https://api.github.com/users/varunsrin/repos",
    "events_url": "https://api.github.com/users/varunsrin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/varunsrin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3394554570,
      "node_id": "LA_kwDOGBlvNc7KVMrK",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-fuzzing",
      "name": "A-fuzzing",
      "color": "FBCA04",
      "default": false,
      "description": "Area: fuzzing"
    },
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-08-26T01:06:50Z",
  "updated_at": "2022-08-26T17:54:06Z",
  "closed_at": "2022-08-26T17:54:06Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nWhen writing a fuzz test where the input is an address and the address sends money, the fuzz will usually fail if it the address is one of: \r\n\r\n```solidity\r\n        address(0xCe71065D4017F316EC606Fe4422e11eB2c47c246), // FuzzerDict\r\n        address(0x4e59b44847b379578588920cA78FbF26c0B4956C), // CREATE2 Factory (?)\r\n        address(0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84), // address(this)\r\n        address(0x185a4dc360CE69bDCceE33b3784B0282f7961aea), // ???\r\n        address(0x7109709ECfa91a80626fF3989D68f67F5b1DD12D) // ???\r\n        address(0x9) // or other precompiles like 0x4\r\n```\r\n\r\nThere are two problems: \r\n\r\n1. When some runs start failing, it's not immediately obvious to the user why these addresses fail and it takes some sleuthing around to figure it out \r\n\r\n2. Then you have to trial and error lots of times to figure out all the addresses that would fail and then exclude them. \r\n\r\n\r\nFor 1, whenever we release fuzzer docs it would be nice to explain this somewhere that shows up in a google search result. \r\n\r\nFor 2, it might be useful to have a flag that allows you to just avoid these as inputs. I don't think avoiding them should be the default behavior, because there may be cases when you genuinely want to fuzz them. \n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "varunsrin",
    "id": 528882,
    "node_id": "MDQ6VXNlcjUyODg4Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/528882?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/varunsrin",
    "html_url": "https://github.com/varunsrin",
    "followers_url": "https://api.github.com/users/varunsrin/followers",
    "following_url": "https://api.github.com/users/varunsrin/following{/other_user}",
    "gists_url": "https://api.github.com/users/varunsrin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/varunsrin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/varunsrin/subscriptions",
    "organizations_url": "https://api.github.com/users/varunsrin/orgs",
    "repos_url": "https://api.github.com/users/varunsrin/repos",
    "events_url": "https://api.github.com/users/varunsrin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/varunsrin/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2946/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2946/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1228066206",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2946#issuecomment-1228066206",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2946",
    "id": 1228066206,
    "node_id": "IC_kwDOGBlvNc5JMs2e",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-26T05:23:04Z",
    "updated_at": "2022-08-26T05:23:50Z",
    "author_association": "MEMBER",
    "body": "Previously we've discussed excluding them but ultimately it makes sense to include them since they're valid inputs (cc @mds1). The hard-to-debug failures related to these addreses + fuzzing is usually due to the address being passed into a cheatcode like `prank` which is what #1159 is about.\r\n\r\nGiven this, I vote to close the issue - what do you think?\r\n\r\nEdit: Also, this can be solved by using `vm.assume` if you have additional addresses you would like to ignore",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1228066206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1228067875",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2946#issuecomment-1228067875",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2946",
    "id": 1228067875,
    "node_id": "IC_kwDOGBlvNc5JMtQj",
    "user": {
      "login": "transmissions11",
      "id": 26209401,
      "node_id": "MDQ6VXNlcjI2MjA5NDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26209401?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/transmissions11",
      "html_url": "https://github.com/transmissions11",
      "followers_url": "https://api.github.com/users/transmissions11/followers",
      "following_url": "https://api.github.com/users/transmissions11/following{/other_user}",
      "gists_url": "https://api.github.com/users/transmissions11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/transmissions11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/transmissions11/subscriptions",
      "organizations_url": "https://api.github.com/users/transmissions11/orgs",
      "repos_url": "https://api.github.com/users/transmissions11/repos",
      "events_url": "https://api.github.com/users/transmissions11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/transmissions11/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-26T05:26:18Z",
    "updated_at": "2022-08-26T05:26:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "agree with @onbjerg, filtering out contracts by default or even as an option is an antipattern. your code should handle contract addresses properly or explicitly state it does not via assume",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1228067875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1228767225",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2946#issuecomment-1228767225",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2946",
    "id": 1228767225,
    "node_id": "IC_kwDOGBlvNc5JPX_5",
    "user": {
      "login": "varunsrin",
      "id": 528882,
      "node_id": "MDQ6VXNlcjUyODg4Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/528882?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/varunsrin",
      "html_url": "https://github.com/varunsrin",
      "followers_url": "https://api.github.com/users/varunsrin/followers",
      "following_url": "https://api.github.com/users/varunsrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/varunsrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/varunsrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/varunsrin/subscriptions",
      "organizations_url": "https://api.github.com/users/varunsrin/orgs",
      "repos_url": "https://api.github.com/users/varunsrin/repos",
      "events_url": "https://api.github.com/users/varunsrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/varunsrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-26T17:54:06Z",
    "updated_at": "2022-08-26T17:54:06Z",
    "author_association": "NONE",
    "body": "on further reflection, i agree that it shouldn't be a flag. forcing you to `vm.assume` explicitly in code is much better for readability. \r\n\r\ni have some thoughts on #1159, will move discussion there. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1228767225/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
