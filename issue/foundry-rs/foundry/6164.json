{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6164",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6164/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6164/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6164/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6164",
  "id": 1967106668,
  "node_id": "I_kwDOGBlvNc51P6ps",
  "number": 6164,
  "title": "`gasleft()` are inconsistent between tests, appear to depend on test name",
  "user": {
    "login": "yi-sun",
    "id": 5178036,
    "node_id": "MDQ6VXNlcjUxNzgwMzY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5178036?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/yi-sun",
    "html_url": "https://github.com/yi-sun",
    "followers_url": "https://api.github.com/users/yi-sun/followers",
    "following_url": "https://api.github.com/users/yi-sun/following{/other_user}",
    "gists_url": "https://api.github.com/users/yi-sun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/yi-sun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yi-sun/subscriptions",
    "organizations_url": "https://api.github.com/users/yi-sun/orgs",
    "repos_url": "https://api.github.com/users/yi-sun/repos",
    "events_url": "https://api.github.com/users/yi-sun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/yi-sun/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-10-29T18:32:37Z",
  "updated_at": "2023-10-31T13:40:27Z",
  "closed_at": "2023-10-31T13:15:15Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (dee4181 2023-10-29T00:18:36.507223145Z)\n\n### What command(s) is the bug in?\n\n_No response_\n\n### Operating System\n\nLinux\n\n### Describe the bug\n\nThe behavior of `gasleft()` is not consistent across tests.  In particular, it appears to depend on the name of the test.  To reproduce, consider the following 3 test files:\r\n\r\nTest.t.sol:\r\n```\r\npragma solidity 0.8.19;\r\n\r\nimport \"forge-std/console.sol\";\r\nimport \"forge-std/Test.sol\";\r\n\r\ncontract GasTest is Test {\r\n    function setUp() public { }\r\n\r\n    function test_x() public {\r\n        console.log(gasleft());\r\n    }\r\n\r\n    function test_x2() public {\r\n        console.log(gasleft());\r\n    }\r\n}\r\n```\r\nTest2.t.sol:\r\n```\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\n\r\nimport \"forge-std/console.sol\";\r\nimport \"forge-std/Test.sol\";\r\n\r\ncontract GasTest2 is Test {\r\n    function setUp() public { }\r\n\r\n    function test_x() public {\r\n        console.log(gasleft());\r\n    }\r\n}\r\n```\r\nTest3.t.sol\r\n```\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\n\r\nimport \"forge-std/console.sol\";\r\nimport \"forge-std/Test.sol\";\r\n\r\ncontract GasTest3 is Test {\r\n    function setUp() public { }\r\n\r\n    function test_x3() public {\r\n        console.log(gasleft());\r\n    }\r\n}\r\n```\r\nRunning `forge test --mt test_x -vv` yields:\r\n```\r\nRunning 2 tests for test/query/Test.t.sol:GasTest\r\n[PASS] test_x() (gas: 3220)\r\nLogs:\r\n  9223372036854754427\r\n\r\n[PASS] test_x2() (gas: 3264)\r\nLogs:\r\n  9223372036854754383\r\n\r\nTest result: ok. 2 passed; 0 failed; 0 skipped; finished in 522.66µs\r\n\r\nRunning 1 test for test/query/Test3.t.sol:GasTest3\r\n[PASS] test_x3() (gas: 3132)\r\nLogs:\r\n  9223372036854754515\r\n\r\nTest result: ok. 1 passed; 0 failed; 0 skipped; finished in 196.88µs\r\n\r\nRunning 1 test for test/query/Test2.t.sol:GasTest2\r\n[PASS] test_x() (gas: 3220)\r\nLogs:\r\n  9223372036854754427\r\n\r\nTest result: ok. 1 passed; 0 failed; 0 skipped; finished in 408.53µs\r\n \r\nRan 3 test suites: 4 tests passed, 0 failed, 0 skipped (4 total tests)\r\n```",
  "closed_by": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6164/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6164/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1784557677",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6164#issuecomment-1784557677",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6164",
    "id": 1784557677,
    "node_id": "IC_kwDOGBlvNc5qXjBt",
    "user": {
      "login": "jameswenzel",
      "id": 6371847,
      "node_id": "MDQ6VXNlcjYzNzE4NDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6371847?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jameswenzel",
      "html_url": "https://github.com/jameswenzel",
      "followers_url": "https://api.github.com/users/jameswenzel/followers",
      "following_url": "https://api.github.com/users/jameswenzel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jameswenzel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jameswenzel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jameswenzel/subscriptions",
      "organizations_url": "https://api.github.com/users/jameswenzel/orgs",
      "repos_url": "https://api.github.com/users/jameswenzel/repos",
      "events_url": "https://api.github.com/users/jameswenzel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jameswenzel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-30T06:27:53Z",
    "updated_at": "2023-10-30T06:28:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is a quirk of function dispatch in smart contracts – by the time an external function is called, Solidity's done a fair bit of work to match the function selector to a valid function. Solc doesn't (yet) have constant-gas/constant-time function dispatch, so calls that satisfy earlier function signature checks will consume less gas before entering the function (Seaport 1.6 has an \"efficient\" `fulfillBasic` endpoint with a different function selector that saves a couple hundred gas – otherwise it was _dead last_ in the function dispatch checks).\r\n\r\nYou have some potential workarounds by using the `pauseGasMetering` and `resumeGasMetering` cheatcodes – but there are some issues with the cheatcodes at present (see #5491, #5564).\r\n\r\nYou may be able to pause gas metering in the setUp function, then resume it during tests; that should bypass metering during the function dispatch for the tests themselves. Hopefully, you won't run into the cheatcodes' quirks/bugs. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1784557677/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1787197726",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6164#issuecomment-1787197726",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6164",
    "id": 1787197726,
    "node_id": "IC_kwDOGBlvNc5qhnke",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-31T13:15:15Z",
    "updated_at": "2023-10-31T13:15:15Z",
    "author_association": "COLLABORATOR",
    "body": "Closing per @jameswenzel's comment which is correct. If you share more about what you're trying to do we may be able to provide guidance on how to do it to avoid bias from function dispatch gas",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1787197726/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1787242390",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6164#issuecomment-1787242390",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6164",
    "id": 1787242390,
    "node_id": "IC_kwDOGBlvNc5qhyeW",
    "user": {
      "login": "yi-sun",
      "id": 5178036,
      "node_id": "MDQ6VXNlcjUxNzgwMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5178036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yi-sun",
      "html_url": "https://github.com/yi-sun",
      "followers_url": "https://api.github.com/users/yi-sun/followers",
      "following_url": "https://api.github.com/users/yi-sun/following{/other_user}",
      "gists_url": "https://api.github.com/users/yi-sun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yi-sun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yi-sun/subscriptions",
      "organizations_url": "https://api.github.com/users/yi-sun/orgs",
      "repos_url": "https://api.github.com/users/yi-sun/repos",
      "events_url": "https://api.github.com/users/yi-sun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yi-sun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-31T13:40:26Z",
    "updated_at": "2023-10-31T13:40:26Z",
    "author_association": "NONE",
    "body": "Thanks @jameswenzel !  Was not aware function dispatch could cause different gas costs.\r\n\r\nI'm trying to create positive and negative tests for a function which should revert or not based on the value of `gasleft()` at a certain middle point of its execution.  Any guidance on the best practice for this in Foundry would be much appreciated!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1787242390/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
