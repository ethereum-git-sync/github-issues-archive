{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1987",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1987/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1987/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1987/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1987",
  "id": 1272785553,
  "node_id": "I_kwDOGBlvNc5L3SqR",
  "number": 1987,
  "title": "`extcodesize` check bypass for `mockCall`",
  "user": {
    "login": "JChiaramonte7",
    "id": 4015977,
    "node_id": "MDQ6VXNlcjQwMTU5Nzc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4015977?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JChiaramonte7",
    "html_url": "https://github.com/JChiaramonte7",
    "followers_url": "https://api.github.com/users/JChiaramonte7/followers",
    "following_url": "https://api.github.com/users/JChiaramonte7/following{/other_user}",
    "gists_url": "https://api.github.com/users/JChiaramonte7/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JChiaramonte7/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JChiaramonte7/subscriptions",
    "organizations_url": "https://api.github.com/users/JChiaramonte7/orgs",
    "repos_url": "https://api.github.com/users/JChiaramonte7/repos",
    "events_url": "https://api.github.com/users/JChiaramonte7/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JChiaramonte7/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-06-15T21:49:42Z",
  "updated_at": "2022-08-03T11:36:21Z",
  "closed_at": "2022-08-03T11:36:21Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nAdding an `extcodesize` check bypass when mocking functions. Functions that have **no return data** are still subject to an `extcodesize` check (see https://github.com/ethereum/solidity/issues/12204). This makes it challenging when working with external integrations in a non forked environment (mocked calls still revert because extcodesize == 0). \r\n\r\nCurrently, my local solution is to fill junk bytes at a target address before mocking:\r\n```solidity\r\nfunction mockCall(address where, bytes memory data) internal {\r\n        cheats.etch(where, \"0xdeadbeef\");\r\n        cheats.mockCall(where, data, abi.encode());\r\n}\r\n```\r\nIt would be nice to have this feature integrated into foundry that way `mockCall` covers all possible scenarios. Just not sure if my solution is ideal because it leaves junk bytecode at addresses. \r\n\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1987/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1987/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1157653025",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1987#issuecomment-1157653025",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1987",
    "id": 1157653025,
    "node_id": "IC_kwDOGBlvNc5FAGIh",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-16T13:18:57Z",
    "updated_at": "2022-06-16T13:18:57Z",
    "author_association": "COLLABORATOR",
    "body": "Check out all the discussion in https://github.com/foundry-rs/forge-std/issues/46 around how foundry should handle mocking, including questions about what should be upstreamed to foundry and what should be part of forge-std. The discussion has stalled, but would love your input there, as this is one of things covered.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1157653025/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1159576681",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1987#issuecomment-1159576681",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1987",
    "id": 1159576681,
    "node_id": "IC_kwDOGBlvNc5FHbxp",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-18T22:40:47Z",
    "updated_at": "2022-06-18T22:40:47Z",
    "author_association": "MEMBER",
    "body": "I'm not entirely sure how we can solve this specific issue in Forge, I'd love some input. Here are some different approaches and the issues I see with them:\r\n\r\n- We could write junk data to the address ourselves and reset it after - however, this makes the contract completely unuseable for anything than the mocked function, which is obviously not ideal.\r\n- We could try to bypass extcodesize checks smartly, but this requires us to basically look ahead and do some \"fake\" execution every time we hit an extcodesizecheck to see if we're about to call a mocked function.\r\n\r\nIt seems like your scenario is using mockCall on an empty address which is why you're having this issue, but a lot of people also use mockCall on an address that has a bytecode, where they only mock one or two functions that should still work as intended.\r\n\r\nFor your use case specifically, can I suggest doing the `vm.etch` in `setUp`? That should clean up your test a bit, I assume.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1159576681/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1162416578",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1987#issuecomment-1162416578",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1987",
    "id": 1162416578,
    "node_id": "IC_kwDOGBlvNc5FSRHC",
    "user": {
      "login": "JChiaramonte7",
      "id": 4015977,
      "node_id": "MDQ6VXNlcjQwMTU5Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015977?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JChiaramonte7",
      "html_url": "https://github.com/JChiaramonte7",
      "followers_url": "https://api.github.com/users/JChiaramonte7/followers",
      "following_url": "https://api.github.com/users/JChiaramonte7/following{/other_user}",
      "gists_url": "https://api.github.com/users/JChiaramonte7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JChiaramonte7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JChiaramonte7/subscriptions",
      "organizations_url": "https://api.github.com/users/JChiaramonte7/orgs",
      "repos_url": "https://api.github.com/users/JChiaramonte7/repos",
      "events_url": "https://api.github.com/users/JChiaramonte7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JChiaramonte7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-21T22:12:39Z",
    "updated_at": "2022-06-21T22:12:39Z",
    "author_association": "NONE",
    "body": "Thanks @mds1, must have missed it the first time around, but I'll take a look at the discussion there!\r\n\r\nAnd @onbjerg thanks for response. My suggestions would either be:\r\n- Improve error messaging to show a call has failed due to an `extcodesize` check. (currently just reverts without any message)\r\n- Write junk data to an address when mocking if we detect **no code** at an address. Really there shouldn't be a scenario where mocking fails.\r\n\r\n> For your use case specifically, can I suggest doing the vm.etch in setUp? That should clean up your test a bit, I assume.\r\n\r\nYeah this is a good call, we will do this for now. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1162416578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1203772985",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1987#issuecomment-1203772985",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1987",
    "id": 1203772985,
    "node_id": "IC_kwDOGBlvNc5HwB45",
    "user": {
      "login": "sendra",
      "id": 6848271,
      "node_id": "MDQ6VXNlcjY4NDgyNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848271?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sendra",
      "html_url": "https://github.com/sendra",
      "followers_url": "https://api.github.com/users/sendra/followers",
      "following_url": "https://api.github.com/users/sendra/following{/other_user}",
      "gists_url": "https://api.github.com/users/sendra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sendra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sendra/subscriptions",
      "organizations_url": "https://api.github.com/users/sendra/orgs",
      "repos_url": "https://api.github.com/users/sendra/repos",
      "events_url": "https://api.github.com/users/sendra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sendra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-03T10:33:47Z",
    "updated_at": "2022-08-03T10:33:47Z",
    "author_association": "NONE",
    "body": "How is the state of this issue? Encountered the same problem when trying to mock a function that does not return.\r\nWas able to solve it with the solution used by @JChiaramonte7 adding ```vm.etch(where, '0xdeadbeef');``` on setUp, but would be nice to have this option already included on mockCall for the cases where there are no return params",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1203772985/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1203794116",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1987#issuecomment-1203794116",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1987",
    "id": 1203794116,
    "node_id": "IC_kwDOGBlvNc5HwHDE",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-03T10:57:23Z",
    "updated_at": "2022-08-03T10:57:23Z",
    "author_association": "MEMBER",
    "body": "Hasn't been a priority because there is so much else to look at. I think the solution is pretty simple, so I'll take a look at it now since it was bumped",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1203794116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1203809247",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1987#issuecomment-1203809247",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1987",
    "id": 1203809247,
    "node_id": "IC_kwDOGBlvNc5HwKvf",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-03T11:14:18Z",
    "updated_at": "2022-08-03T11:14:18Z",
    "author_association": "MEMBER",
    "body": "PR is up, should be good for the nightly tonight :)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1203809247/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
