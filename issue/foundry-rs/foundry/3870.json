{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3870",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3870/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3870/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3870/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3870",
  "id": 1489726670,
  "node_id": "I_kwDOGBlvNc5Yy2zO",
  "number": 3870,
  "title": "Cannot broadcast transaction through forge script even with --skip-simulation",
  "user": {
    "login": "Skelectric",
    "id": 58760447,
    "node_id": "MDQ6VXNlcjU4NzYwNDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/58760447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Skelectric",
    "html_url": "https://github.com/Skelectric",
    "followers_url": "https://api.github.com/users/Skelectric/followers",
    "following_url": "https://api.github.com/users/Skelectric/following{/other_user}",
    "gists_url": "https://api.github.com/users/Skelectric/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Skelectric/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Skelectric/subscriptions",
    "organizations_url": "https://api.github.com/users/Skelectric/orgs",
    "repos_url": "https://api.github.com/users/Skelectric/repos",
    "events_url": "https://api.github.com/users/Skelectric/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Skelectric/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-12-11T09:31:22Z",
  "updated_at": "2022-12-20T23:48:30Z",
  "closed_at": "2022-12-20T23:48:30Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [ ] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (e9f274d 2022-12-11T09:13:41.7515405Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nforge script\r\n\r\n### Operating System\r\n\r\nWindows\r\n\r\n### Describe the bug\r\n\r\nI've been attempting to change the owner of a simple contract on Goerli that is currently set to the proxy address it was deployed through.\r\n\r\nI was able to do this successfully during tests, but upon trying to execute function calls through the proxy on Goerli, forge just keeps failing the script with an \"EvmError: Revert\". The traces are unhelpful and don't indicate any obvious reason for the error, so I want to broadcast the transaction anyway to attempt to troubleshoot using Tenderly. \r\n\r\nHowever, the --skip-simulation flag appears to have no effect - forge still simulates the transaction and reverts. \r\n\r\nThe script is:\r\n\r\n```\r\ncontract SetOwnerScript is Script, Test {\r\n\r\n    address public constant PROXY_ADDRESS = address(0x621D085E689C06a5fD0231A595CAF3e3C7770127);\r\n    address public constant OWNED_CONTRACT_ADDRESS = address(0xa0933cA0A4782904649d029f28d27FD2027088cE);\r\n\r\n    Proxy proxy = Proxy(payable(PROXY_ADDRESS));\r\n    OwnedContract ownedContract = OwnedContract(OWNED_CONTRACT_ADDRESS);\r\n\r\n    function run() external {\r\n        // load private key and derive address\r\n        uint256 deployerPrivateKey = vm.envUint(\"PRIVATE_KEY\");\r\n        address deployerAddress = vm.addr(deployerPrivateKey);\r\n\r\n        console.log(\"ownedContract address: %s\", OWNED_CONTRACT_ADDRESS);\r\n        console.log(\"ownedContract.owner(): %s\", ownedContract.getOwner());\r\n\r\n        vm.startBroadcast(deployerPrivateKey);\r\n\r\n        // set/get owner - either call below results in a \"EvmError: Revert\"\r\n        proxy.execute(OWNED_CONTRACT_ADDRESS, abi.encodeWithSignature(\"setOwner(address)\", deployerAddress));\r\n        // proxy.execute(OWNED_CONTRACT_ADDRESS, abi.encodeWithSignature(\"getOwner()\"));\r\n\r\n        vm.stopBroadcast();\r\n\r\n    }\r\n}\r\n```\r\n\r\nTerminal IO\r\n\r\n```\r\n$ forge script script/OwnedContract.s.sol:SetOwnerScript --rpc-url=$env:GOERLI_RPC_URL -vvvvv --broadcast --skip-simulation\r\n[⠒] Compiling...\r\nNo files changed, compilation skipped\r\nTraces:\r\n  [571339] → new SetOwnerScript@0x5b73C5498c1E3b4dbA84de0F1833c4a029d90519\r\n    └─ ← 2522 bytes of code\r\n\r\n  [46137] SetOwnerScript::run()\r\n    ├─ [0] VM::envUint(PRIVATE_KEY) [staticcall]\r\n    │   └─ ← <env var value>\r\n    ├─ [0] VM::addr(<pk>) [staticcall]\r\n    │   └─ ← 0xd6E1fE2d44555597828eD5a7401A481a7654A530\r\n    ├─ [0] console::log(ownedContract address: %s, OwnedContract: [0xa0933cA0A4782904649d029f28d27FD2027088cE]) [staticcall]\r\n    │   └─ ← ()\r\n    ├─ [2280] OwnedContract::getOwner() [staticcall]\r\n    │   └─ ← Proxy: [0x621D085E689C06a5fD0231A595CAF3e3C7770127]\r\n    ├─ [0] console::log(ownedContract.owner(): %s, Proxy: [0x621D085E689C06a5fD0231A595CAF3e3C7770127]) [staticcall]\r\n    │   └─ ← ()\r\n    ├─ [0] VM::startBroadcast(<pk>)\r\n    │   └─ ← ()\r\n    ├─ [4530] Proxy::execute(OwnedContract: [0xa0933cA0A4782904649d029f28d27FD2027088cE], 0x13af4035000000000000000000000000d6e1fe2d44555597828ed5a7401a481a7654a530)\r\n    │   ├─ [3403] OwnedContract::setOwner(0xd6E1fE2d44555597828eD5a7401A481a7654A530)\r\n    │   │   └─ ← ()\r\n    │   └─ ← ()\r\n    └─ ← \"EvmError: Revert\"\r\n\r\n\r\n\r\n== Logs ==\r\n  ownedContract address: 0xa0933cA0A4782904649d029f28d27FD2027088cE\r\n  ownedContract.owner(): 0x621D085E689C06a5fD0231A595CAF3e3C7770127\r\nError:\r\nScript failed.\r\n```\r\n\r\n\r\n\r\n\r\n\r\n ",
  "closed_by": {
    "login": "Skelectric",
    "id": 58760447,
    "node_id": "MDQ6VXNlcjU4NzYwNDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/58760447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Skelectric",
    "html_url": "https://github.com/Skelectric",
    "followers_url": "https://api.github.com/users/Skelectric/followers",
    "following_url": "https://api.github.com/users/Skelectric/following{/other_user}",
    "gists_url": "https://api.github.com/users/Skelectric/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Skelectric/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Skelectric/subscriptions",
    "organizations_url": "https://api.github.com/users/Skelectric/orgs",
    "repos_url": "https://api.github.com/users/Skelectric/repos",
    "events_url": "https://api.github.com/users/Skelectric/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Skelectric/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3870/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3870/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1345507538",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3870#issuecomment-1345507538",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3870",
    "id": 1345507538,
    "node_id": "IC_kwDOGBlvNc5QMtDS",
    "user": {
      "login": "Skelectric",
      "id": 58760447,
      "node_id": "MDQ6VXNlcjU4NzYwNDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/58760447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Skelectric",
      "html_url": "https://github.com/Skelectric",
      "followers_url": "https://api.github.com/users/Skelectric/followers",
      "following_url": "https://api.github.com/users/Skelectric/following{/other_user}",
      "gists_url": "https://api.github.com/users/Skelectric/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Skelectric/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Skelectric/subscriptions",
      "organizations_url": "https://api.github.com/users/Skelectric/orgs",
      "repos_url": "https://api.github.com/users/Skelectric/repos",
      "events_url": "https://api.github.com/users/Skelectric/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Skelectric/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-11T09:53:11Z",
    "updated_at": "2022-12-11T09:53:57Z",
    "author_association": "NONE",
    "body": "I just encoded this setOwner() call manually on hashex, broadcasted through etherscan, and it worked fine:\r\n\r\nhttps://goerli.etherscan.io/tx/0x3bb016587c128cf5620bb80ec33e3205856167de0e984676a1a308e884a4fe80\r\n\r\nSo clearly there shouldn't be a revert. \r\n\r\nI guess this is 2 issues in one.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1345507538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
