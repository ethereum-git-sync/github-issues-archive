{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4397",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4397/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4397/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4397/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4397",
  "id": 1591610945,
  "node_id": "I_kwDOGBlvNc5e3g5B",
  "number": 4397,
  "title": "Optimize fuzzer value generation to prevent duplicate values and improve coverage",
  "user": {
    "login": "wirew0lf",
    "id": 11537225,
    "node_id": "MDQ6VXNlcjExNTM3MjI1",
    "avatar_url": "https://avatars.githubusercontent.com/u/11537225?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wirew0lf",
    "html_url": "https://github.com/wirew0lf",
    "followers_url": "https://api.github.com/users/wirew0lf/followers",
    "following_url": "https://api.github.com/users/wirew0lf/following{/other_user}",
    "gists_url": "https://api.github.com/users/wirew0lf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wirew0lf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wirew0lf/subscriptions",
    "organizations_url": "https://api.github.com/users/wirew0lf/orgs",
    "repos_url": "https://api.github.com/users/wirew0lf/repos",
    "events_url": "https://api.github.com/users/wirew0lf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wirew0lf/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-02-20T10:56:55Z",
  "updated_at": "2023-04-22T17:58:07Z",
  "closed_at": "2023-04-22T17:58:07Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nAfter doing some testing with the basic fuzzer I've found out the fuzzer generates lots of duplicate values.\r\n\r\nIn order to test this I created the following test which generates a .csv file with both forge fuzzer ouput and bound function ouput:\r\n\r\n``` solidity\r\nfunction testGenerateUint(uint a) public {\r\n  uint b = bound(a, 0, 1_000_000*10e18);\r\n  \r\n  string memory path = \"./results/FuzzUintGenerationResults.csv\"; \r\n  string memory line = string.concat(string.concat(vm.toString(a), \",\"), vm.toString(b));\r\n  vm.writeLine(path, line);\r\n}\r\n```\r\nThen post-processed this information and this are the results:\r\n<img width=\"500\" alt=\"image\" src=\"https://user-images.githubusercontent.com/11537225/220078001-36bc720a-dfec-40a1-8376-b8871d82b77d.png\">\r\n\r\n\r\nOut of 256 runs, 101 of them are duplicate runs with a value already tested, I've also tried with other type of value such as bytes32 and obtained similar results.\r\n\r\nFor example, the max value of uint256 was run 33 times,  althoughI believe the number of duplicate runs may decrease in functions with more than one parameter. Focusing on numbers near 0 and near the max value for uint256 might be useful to trigger edge cases however, the fuzzer is not generating much values in mid ranges. Also, given that most deApps use 18 decimals I think it would be better to focus more on generating values in a range of for example, between 1e17 and 100_000_000e18.\r\n\r\nI think a better approach could be:\r\n- 20% of values generated should be values near 0 and max uint256 including both, to trigger edge cases.\r\n- 60% of values between 1e17 and 1e25.\r\n- The remaining 20% throughout the whole uint256 range.\r\n\r\nI could also prepare a pull request if any of the more senior contributors agrees this should be addressed.\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "wirew0lf",
    "id": 11537225,
    "node_id": "MDQ6VXNlcjExNTM3MjI1",
    "avatar_url": "https://avatars.githubusercontent.com/u/11537225?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wirew0lf",
    "html_url": "https://github.com/wirew0lf",
    "followers_url": "https://api.github.com/users/wirew0lf/followers",
    "following_url": "https://api.github.com/users/wirew0lf/following{/other_user}",
    "gists_url": "https://api.github.com/users/wirew0lf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wirew0lf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wirew0lf/subscriptions",
    "organizations_url": "https://api.github.com/users/wirew0lf/orgs",
    "repos_url": "https://api.github.com/users/wirew0lf/repos",
    "events_url": "https://api.github.com/users/wirew0lf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wirew0lf/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4397/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4397/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1518204345",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4397#issuecomment-1518204345",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4397",
    "id": 1518204345,
    "node_id": "IC_kwDOGBlvNc5affW5",
    "user": {
      "login": "KholdStare",
      "id": 836110,
      "node_id": "MDQ6VXNlcjgzNjExMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836110?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KholdStare",
      "html_url": "https://github.com/KholdStare",
      "followers_url": "https://api.github.com/users/KholdStare/followers",
      "following_url": "https://api.github.com/users/KholdStare/following{/other_user}",
      "gists_url": "https://api.github.com/users/KholdStare/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KholdStare/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KholdStare/subscriptions",
      "organizations_url": "https://api.github.com/users/KholdStare/orgs",
      "repos_url": "https://api.github.com/users/KholdStare/repos",
      "events_url": "https://api.github.com/users/KholdStare/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KholdStare/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T18:37:33Z",
    "updated_at": "2023-04-21T18:37:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Did not know that this was the case. Perhaps the random generation is biased (which it should be), but each draw is independent (it shouldn't be). Probably need some state per fuzzed input to know whether an extreme value was already tried.\r\n\r\nHow does the \"OG\" Quickcheck from Haskell draw random values?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1518204345/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1518309979",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4397#issuecomment-1518309979",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4397",
    "id": 1518309979,
    "node_id": "IC_kwDOGBlvNc5af5Jb",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T20:35:49Z",
    "updated_at": "2023-04-21T20:35:49Z",
    "author_association": "COLLABORATOR",
    "body": "IIRC the cause is due to the fact that the edge bias strategy is chosen too frequently relative to the number of values the edge bias strategy can actually generate. More info in https://github.com/foundry-rs/foundry/issues/3521 with my proposed fix in https://github.com/foundry-rs/foundry/issues/3521#issuecomment-1445529404\r\n\r\nDraws are independent like you said, changing that is also a possible solution but requires tracking more data which increases memory usage and incurs a performance penalty, especially as number of fuzz runs grows, which is why my proposed solution avoids that by leveraging the dictionary",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1518309979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1518717497",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4397#issuecomment-1518717497",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4397",
    "id": 1518717497,
    "node_id": "IC_kwDOGBlvNc5ahco5",
    "user": {
      "login": "wirew0lf",
      "id": 11537225,
      "node_id": "MDQ6VXNlcjExNTM3MjI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/11537225?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wirew0lf",
      "html_url": "https://github.com/wirew0lf",
      "followers_url": "https://api.github.com/users/wirew0lf/followers",
      "following_url": "https://api.github.com/users/wirew0lf/following{/other_user}",
      "gists_url": "https://api.github.com/users/wirew0lf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wirew0lf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wirew0lf/subscriptions",
      "organizations_url": "https://api.github.com/users/wirew0lf/orgs",
      "repos_url": "https://api.github.com/users/wirew0lf/repos",
      "events_url": "https://api.github.com/users/wirew0lf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wirew0lf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-22T17:58:07Z",
    "updated_at": "2023-04-22T17:58:07Z",
    "author_association": "NONE",
    "body": "I'm closing the issue, let's keep the discussion on #3521 ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1518717497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
