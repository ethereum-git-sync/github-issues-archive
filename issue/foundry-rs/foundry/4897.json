{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4897",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4897/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4897/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4897/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4897",
  "id": 1700132676,
  "node_id": "I_kwDOGBlvNc5lVfdE",
  "number": 4897,
  "title": "It seems i can't use `cast wallet sign` to sign rawTx ? ",
  "user": {
    "login": "nzhl",
    "id": 16397293,
    "node_id": "MDQ6VXNlcjE2Mzk3Mjkz",
    "avatar_url": "https://avatars.githubusercontent.com/u/16397293?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nzhl",
    "html_url": "https://github.com/nzhl",
    "followers_url": "https://api.github.com/users/nzhl/followers",
    "following_url": "https://api.github.com/users/nzhl/following{/other_user}",
    "gists_url": "https://api.github.com/users/nzhl/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nzhl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nzhl/subscriptions",
    "organizations_url": "https://api.github.com/users/nzhl/orgs",
    "repos_url": "https://api.github.com/users/nzhl/repos",
    "events_url": "https://api.github.com/users/nzhl/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nzhl/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-05-08T12:07:44Z",
  "updated_at": "2023-05-08T13:14:01Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nCast\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [ ] Foundry\r\n- [X] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\ncast 0.2.0 (de47eb8 2023-05-08T11:42:26.063038000Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\ncast wallet sign\r\n\r\n### Operating System\r\n\r\nmacOS (Apple Silicon)\r\n\r\n### Describe the bug\r\n\r\nI am trying to generate the signature (say y, r, s) for a tx using `cast wallet sign` which will be needed when i undertake rpc call `eth_sendRawTransaction`.\r\n\r\nSo basically, i have the following tx:\r\n\r\n```js\r\n  let transaction = {\r\n    to: '0x7ae1e913465d81ad32d682cceae5c14599456c63',\r\n    value: ethers.utils.parseEther('0'),\r\n    gasLimit: 0x02f287,\r\n    maxPriorityFeePerGas: 0x0121152080,\r\n    maxFeePerGas: 0x0a0e7b58821f,\r\n    data: '0x617ba037000000000000000000000000328507dc29c95c170b56a1b3a758eb7a9e73455c0000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000bf0135be6a39257c659fd1955324dc3cdb342f290000000000000000000000000000000000000000000000000000000000000000',\r\n    nonce: 0x0315,\r\n    type: 2,\r\n    chainId: 0x05 \r\n  };\r\n\r\n```\r\n\r\nAnd after rlp encoding and sha256 i get the following hash:\r\n\r\n```\r\n❯ cast --to-rlp '[\r\n  \"0x05\",\r\n  \"0x0315\",\r\n  \"0x0121152080\",\r\n  \"0x0a0e7b58821f\",\r\n  \"0x02f287\",\r\n  \"0x7ae1e913465d81ad32d682cceae5c14599456c63\",\r\n  \"0x\",\r\n  \"0x617ba037000000000000000000000000328507dc29c95c170b56a1b3a758eb7a9e73455c0000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000bf0135be6a39257c659fd1955324dc3cdb342f290000000000000000000000000000000000000000000000000000000000000000\",\r\n  []]'\r\n0xf8b205820315850121152080860a0e7b58821f8302f287947ae1e913465d81ad32d682cceae5c14599456c6380b884617ba037000000000000000000000000328507dc29c95c170b56a1b3a758eb7a9e73455c0000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000bf0135be6a39257c659fd1955324dc3cdb342f290000000000000000000000000000000000000000000000000000000000000000c0\r\n❯ cast k 0x02f8b205820315850121152080860a0e7b58821f8302f287947ae1e913465d81ad32d682cceae5c14599456c6380b884617ba037000000000000000000000000328507dc29c95c170b56a1b3a758eb7a9e73455c0000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000bf0135be6a39257c659fd1955324dc3cdb342f290000000000000000000000000000000000000000000000000000000000000000c0\r\n0x3b5dd528fe510056ae401cb9d83ed148df68c310a89da516d13e8a7166a97166\r\n```\r\n\r\n`0x3b5dd528fe510056ae401cb9d83ed148df68c310a89da516d13e8a7166a97166` is perfect correct which i have verified with result calculated from etherjs script.\r\n\r\n*~~~Here comes the problem~~~*\r\n\r\nAfter i signed the hash with my secret, i got the following signature \r\n\r\n```\r\n> cast wallet  sign --mnemonic $TEST 0x3b5dd528fe510056ae401cb9d83ed148df68c310a89da516d13e8a7166a97166\r\n\r\n>0x06ad1ca9425fa04e73b54e9d558568ebb6ab539552b4b125bd844a971e7f875f496482cbfc480b53eafd6c6bd3bbe505b4faea02d66a0e52554bc4f4ef3319ad1b\r\n```\r\n\r\n`0x06ad1ca9425fa04e73b54e9d558568ebb6ab539552b4b125bd844a971e7f875f496482cbfc480b53eafd6c6bd3bbe505b4faea02d66a0e52554bc4f4ef3319ad1b` can not be true because either Metamask or my etherjs script gives me the following r, s:\r\n\r\n```\r\n❯ cast --from-rlp 0xf8f505820315850121152080860a0e7b58821f8302f287947ae1e913465d81ad32d682cceae5c14599456c6380b884617ba037000000000000000000000000328507dc29c95c170b56a1b3a758eb7a9e73455c0000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000bf0135be6a39257c659fd1955324dc3cdb342f290000000000000000000000000000000000000000000000000000000000000000c001a09e52033d31027d31f3b1acfcbcf933ff24a643ab1c64f45d4d0a2d3d38639da1a07dd2129b139723fd7951d5313f40c567024ef8069cec6b7f7ce714c0c2a9ce31 | jq\r\n[\r\n  \"0x05\",\r\n  \"0x0315\",\r\n  \"0x0121152080\",\r\n  \"0x0a0e7b58821f\",\r\n  \"0x02f287\",\r\n  \"0x7ae1e913465d81ad32d682cceae5c14599456c63\",\r\n  \"0x\",\r\n  \"0x617ba037000000000000000000000000328507dc29c95c170b56a1b3a758eb7a9e73455c0000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000bf0135be6a39257c659fd1955324dc3cdb342f290000000000000000000000000000000000000000000000000000000000000000\",\r\n  [],\r\n  \"0x01\",              => y\r\n  \"0x9e52033d31027d31f3b1acfcbcf933ff24a643ab1c64f45d4d0a2d3d38639da1\",      =>  r\r\n  \"0x7dd2129b139723fd7951d5313f40c567024ef8069cec6b7f7ce714c0c2a9ce31\"        => s\r\n]\r\n```\r\n\r\n\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4897/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4897/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1538268730",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4897#issuecomment-1538268730",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4897",
    "id": 1538268730,
    "node_id": "IC_kwDOGBlvNc5bsB46",
    "user": {
      "login": "nzhl",
      "id": 16397293,
      "node_id": "MDQ6VXNlcjE2Mzk3Mjkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16397293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nzhl",
      "html_url": "https://github.com/nzhl",
      "followers_url": "https://api.github.com/users/nzhl/followers",
      "following_url": "https://api.github.com/users/nzhl/following{/other_user}",
      "gists_url": "https://api.github.com/users/nzhl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nzhl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nzhl/subscriptions",
      "organizations_url": "https://api.github.com/users/nzhl/orgs",
      "repos_url": "https://api.github.com/users/nzhl/repos",
      "events_url": "https://api.github.com/users/nzhl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nzhl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-08T12:19:39Z",
    "updated_at": "2023-05-08T12:19:39Z",
    "author_association": "NONE",
    "body": "To make it complete. This is the ethersjs script i used:\r\n\r\n```js\r\nconst ethers = require('ethers');\r\nconst { computeAddress, recoverAddress, serialize, UnsignedTransaction } = require(\"@ethersproject/transactions\");\r\n\r\nasync function main() {\r\n\r\n  let privatekey = '';\r\n  let wallet = new ethers.Wallet(privatekey);\r\n\r\n  console.log('Using wallet address ' + wallet.address);\r\n\r\n  let transaction = {\r\n    to: '0x7ae1e913465d81ad32d682cceae5c14599456c63',\r\n    value: ethers.utils.parseEther('0'),\r\n    gasLimit: 0x02f287,\r\n    maxPriorityFeePerGas: 0x0121152080,\r\n    maxFeePerGas: 0x0a0e7b58821f,\r\n    data: '0x617ba037000000000000000000000000328507dc29c95c170b56a1b3a758eb7a9e73455c0000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000bf0135be6a39257c659fd1955324dc3cdb342f290000000000000000000000000000000000000000000000000000000000000000',\r\n    nonce: 0x0315,\r\n    type: 2,\r\n    chainId: 0x05 \r\n  };\r\n\r\n\r\n  // sign and serialize the transaction \r\n  let rawTransaction =  serialize(transaction)\r\n  let rawTxHash = ethers.utils.keccak256(rawTransaction);\r\n  let signedRawTransaction = await wallet.signTransaction(transaction)\r\n    // .then(ethers.utils.serializeTransaction(transaction));\r\n  \r\n  // print the raw transaction hash\r\n  console.log('rawTx: ' + rawTransaction);\r\n  console.log();\r\n  console.log('rawTxHash: ' + rawTxHash);\r\n  console.log();\r\n  console.log('signedRawTransaction: ' + signedRawTransaction);\r\n}\r\n\r\nmain();\r\n\r\n```\r\n\r\nThe output\r\n```\r\nrawTx: 0x02f8b205820315850121152080860a0e7b58821f8302f287947ae1e913465d81ad32d682cceae5c14599456c6380b884617ba037000000000000000000000000328507dc29c95c170b56a1b3a758eb7a9e73455c0000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000bf0135be6a39257c659fd1955324dc3cdb342f290000000000000000000000000000000000000000000000000000000000000000c0\r\n\r\nrawTxHash: 0x3b5dd528fe510056ae401cb9d83ed148df68c310a89da516d13e8a7166a97166\r\n\r\nsignedRawTransaction: 0x02f8f505820315850121152080860a0e7b58821f8302f287947ae1e913465d81ad32d682cceae5c14599456c6380b884617ba037000000000000000000000000328507dc29c95c170b56a1b3a758eb7a9e73455c0000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000bf0135be6a39257c659fd1955324dc3cdb342f290000000000000000000000000000000000000000000000000000000000000000c001a09e52033d31027d31f3b1acfcbcf933ff24a643ab1c64f45d4d0a2d3d38639da1a07dd2129b139723fd7951d5313f40c567024ef8069cec6b7f7ce714c0c2a9ce31\r\n```\r\n\r\n```\r\n❯ cast --from-rlp f8f505820315850121152080860a0e7b58821f8302f287947ae1e913465d81ad32d682cceae5c14599456c6380b884617ba037000000000000000000000000328507dc29c95c170b56a1b3a758eb7a9e73455c0000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000bf0135be6a39257c659fd1955324dc3cdb342f290000000000000000000000000000000000000000000000000000000000000000c001a09e52033d31027d31f3b1acfcbcf933ff24a643ab1c64f45d4d0a2d3d38639da1a07dd2129b139723fd7951d5313f40c567024ef8069cec6b7f7ce714c0c2a9ce31 | jq\r\n\r\n\r\n❯ [\r\n  \"0x05\",\r\n  \"0x0315\",\r\n  \"0x0121152080\",\r\n  \"0x0a0e7b58821f\",\r\n  \"0x02f287\",\r\n  \"0x7ae1e913465d81ad32d682cceae5c14599456c63\",\r\n  \"0x\",\r\n  \"0x617ba037000000000000000000000000328507dc29c95c170b56a1b3a758eb7a9e73455c0000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000bf0135be6a39257c659fd1955324dc3cdb342f290000000000000000000000000000000000000000000000000000000000000000\",\r\n  [],\r\n  \"0x01\",\r\n  \"0x9e52033d31027d31f3b1acfcbcf933ff24a643ab1c64f45d4d0a2d3d38639da1\",\r\n  \"0x7dd2129b139723fd7951d5313f40c567024ef8069cec6b7f7ce714c0c2a9ce31\"\r\n]\r\n\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1538268730/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1538338808",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4897#issuecomment-1538338808",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4897",
    "id": 1538338808,
    "node_id": "IC_kwDOGBlvNc5bsS_4",
    "user": {
      "login": "nzhl",
      "id": 16397293,
      "node_id": "MDQ6VXNlcjE2Mzk3Mjkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16397293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nzhl",
      "html_url": "https://github.com/nzhl",
      "followers_url": "https://api.github.com/users/nzhl/followers",
      "following_url": "https://api.github.com/users/nzhl/following{/other_user}",
      "gists_url": "https://api.github.com/users/nzhl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nzhl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nzhl/subscriptions",
      "organizations_url": "https://api.github.com/users/nzhl/orgs",
      "repos_url": "https://api.github.com/users/nzhl/repos",
      "events_url": "https://api.github.com/users/nzhl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nzhl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-08T13:11:11Z",
    "updated_at": "2023-05-08T13:14:01Z",
    "author_association": "NONE",
    "body": "After digging a little bit, now i realize what is happening here. Basically i confused  `sign message` with `sign tx`. Only the former is currently supported (also this is what `cast wallet sign` is doing ).  😂\r\n\r\n<img width=\"1295\" alt=\"image\" src=\"https://user-images.githubusercontent.com/16397293/236832939-a2bdb0bd-157a-4f5e-900d-e1763c86ced0.png\">\r\n\r\n\r\n\r\nbtw, Is there any plan to support sign tx ? Would appreciate if we support it.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1538338808/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
