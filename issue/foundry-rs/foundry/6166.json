{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6166",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6166/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6166/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6166/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6166",
  "id": 1967112334,
  "node_id": "I_kwDOGBlvNc51P8CO",
  "number": 6166,
  "title": "Contract & function selector outside of target contracts & selector list is running in invariant/stateful fuzz test",
  "user": {
    "login": "PatrickAlphaC",
    "id": 54278053,
    "node_id": "MDQ6VXNlcjU0Mjc4MDUz",
    "avatar_url": "https://avatars.githubusercontent.com/u/54278053?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PatrickAlphaC",
    "html_url": "https://github.com/PatrickAlphaC",
    "followers_url": "https://api.github.com/users/PatrickAlphaC/followers",
    "following_url": "https://api.github.com/users/PatrickAlphaC/following{/other_user}",
    "gists_url": "https://api.github.com/users/PatrickAlphaC/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PatrickAlphaC/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PatrickAlphaC/subscriptions",
    "organizations_url": "https://api.github.com/users/PatrickAlphaC/orgs",
    "repos_url": "https://api.github.com/users/PatrickAlphaC/repos",
    "events_url": "https://api.github.com/users/PatrickAlphaC/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PatrickAlphaC/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-10-29T18:50:05Z",
  "updated_at": "2023-10-29T19:03:51Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (dee4181 2023-10-29T00:19:39.178906000Z)\n\n### What command(s) is the bug in?\n\nforge test --mt invariant_deltaXFollowsMath --fuzz-seed 1 -vvvvv\n\n### Operating System\n\nmacOS (Intel)\n\n### Describe the bug\n\nI have the following setup for running stateful fuzz/invariant tests.\r\n\r\n```javascript\r\n    function setUp() public {\r\n        // deploy some contracts here...\r\n\r\n        // Override the WETH address cuz it's hard-coded in the codebase and I want to mint easily\r\n        deployCodeTo(\"ERC20Mock.sol:ERC20Mock\", address(pool.WETH_TOKEN()));\r\n\r\n        // do some parameter setup here...\r\n        handler = new Handler();\r\n\r\n        bytes4[] memory selectors = new bytes4[](2);\r\n        selectors[0] = handler.deposit.selector;\r\n        selectors[1] = handler.swapPoolTokenForWethBasedOnOutputWeth.selector;\r\n\r\n        targetSelector(FuzzSelector({ addr: address(handler), selectors: selectors }));\r\n        targetContract(address(handler));\r\n    }\r\n```\r\n\r\nThe setup clearly states there are 2 selectors to call function on:\r\n- `swapPoolTokenForWethBasedOnOutputWeth`\r\n- `deposit`\r\n\r\nHowever, when I run my test, it appears to be adding odd function selectors & contracts. Here is my test:\r\n\r\n(I have some ghost variables that I'm checking an invariant on)\r\n```javascript\r\n    function invariant_deltaXFollowsMath() public {\r\n        assertEq(handler.actualDeltaX(), handler.expectedDeltaX());\r\n    }\r\n```\r\n\r\nAnd after running:\r\n\r\n```\r\nforge test --mt invariant_deltaXFollowsMath --fuzz-seed 1 -vvvvv\r\n```\r\n\r\nI keep breaking on this:\r\n```\r\n  [10349] Invariant::invariant_deltaXFollowsMath() \r\n    ├─ [2351] Handler::actualDeltaX() [staticcall]\r\n    │   └─ ← -49999999999000000407\r\n    ├─ [2308] Handler::expectedDeltaX() [staticcall]\r\n    │   └─ ← -49999999999000000407\r\n    └─ ← ()\r\n\r\n  [2854] WETH9::burn(0x6E220FA17Fa68558Dc8884247dcD3d4D915Bba78, 115792089237316195423570985008687907853269984665640564039457584007913129639934 [1.157e77]) \r\n    └─ ← \"ERC20InsufficientBalance(0x6E220FA17Fa68558Dc8884247dcD3d4D915Bba78, 0, 115792089237316195423570985008687907853269984665640564039457584007913129639934 [1.157e77])\"\r\n```\r\n\r\nIt appears to be adding the `WETH9` contract to my target list, and all it's selector. \r\n\r\n...so my question is, why? \r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6166/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6166/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1784198769",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6166#issuecomment-1784198769",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6166",
    "id": 1784198769,
    "node_id": "IC_kwDOGBlvNc5qWLZx",
    "user": {
      "login": "PatrickAlphaC",
      "id": 54278053,
      "node_id": "MDQ6VXNlcjU0Mjc4MDUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/54278053?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PatrickAlphaC",
      "html_url": "https://github.com/PatrickAlphaC",
      "followers_url": "https://api.github.com/users/PatrickAlphaC/followers",
      "following_url": "https://api.github.com/users/PatrickAlphaC/following{/other_user}",
      "gists_url": "https://api.github.com/users/PatrickAlphaC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PatrickAlphaC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PatrickAlphaC/subscriptions",
      "organizations_url": "https://api.github.com/users/PatrickAlphaC/orgs",
      "repos_url": "https://api.github.com/users/PatrickAlphaC/repos",
      "events_url": "https://api.github.com/users/PatrickAlphaC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PatrickAlphaC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-29T19:03:50Z",
    "updated_at": "2023-10-29T19:03:50Z",
    "author_association": "NONE",
    "body": "After some testing, I removed:\r\n```\r\n// Override the WETH address cuz it's hard-coded in the codebase and I want to mint easily\r\ndeployCodeTo(\"ERC20Mock.sol:ERC20Mock\", address(pool.WETH_TOKEN()));\r\n```\r\n\r\nAnd replaced the hard-coded values with immutable ones, and the error went away. Looks like something fishy happens to target contracts & selectors when you use `deployCodeTo` to overwrite a contract address. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1784198769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
