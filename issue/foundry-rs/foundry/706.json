{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/706",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/706/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/706/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/706/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/706",
  "id": 1127682066,
  "node_id": "I_kwDOGBlvNc5DNxAS",
  "number": 706,
  "title": "Plugin system",
  "user": {
    "login": "jrhe",
    "id": 4038905,
    "node_id": "MDQ6VXNlcjQwMzg5MDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4038905?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jrhe",
    "html_url": "https://github.com/jrhe",
    "followers_url": "https://api.github.com/users/jrhe/followers",
    "following_url": "https://api.github.com/users/jrhe/following{/other_user}",
    "gists_url": "https://api.github.com/users/jrhe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jrhe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jrhe/subscriptions",
    "organizations_url": "https://api.github.com/users/jrhe/orgs",
    "repos_url": "https://api.github.com/users/jrhe/repos",
    "events_url": "https://api.github.com/users/jrhe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jrhe/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759719790,
      "node_id": "LA_kwDOGBlvNc7gGMVu",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-low",
      "name": "P-low",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: low"
    },
    {
      "id": 3759720129,
      "node_id": "LA_kwDOGBlvNc7gGMbB",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-hard",
      "name": "D-hard",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: hard"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-02-08T19:40:27Z",
  "updated_at": "2022-02-19T15:16:06Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nOther (please describe)\n\n### Describe the feature you would like\n\nA plugin system to add additional tasks to both forge and cast is desirable. \r\n\r\n- Users expect to be able to extend tooling, both with existing tools and their own scripts. I think this is probably particularly true for those coming from hardhat.\r\n- Implementing a plugin system allows the scope of foundry to stay focused on testing/ building and chain interaction.\r\n- Keeps the surface area of both forge and cast small, making them easier to learn and use.\r\n- Can wrap functionality from other tools easily without re-implementing. \r\n\r\nTo illustrate, #610 suggests adding functionality to print the variable layout of a contract. This functionality is clearly useful, however:\r\n- it doesn't obviously fall under the scope of forge or cask.\r\n- the functionality is already implemented in slither and there is no obvious reason to reimplement it (speed etc).\r\n- I expect the implementation would be fairly large, to be done in a reasonable way.\r\n- it's not clear why you'd stop at just this one printer/ analysis out of the whole suite that slither implements.\r\n\r\nInstead, a slither plugin could provide optional static analysis functionality from within foundry.\r\n\r\n\n\n### Additional context\n\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/706/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/706/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1042684170",
    "html_url": "https://github.com/foundry-rs/foundry/issues/706#issuecomment-1042684170",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/706",
    "id": 1042684170,
    "node_id": "IC_kwDOGBlvNc4-JhkK",
    "user": {
      "login": "ayushm2003",
      "id": 62571011,
      "node_id": "MDQ6VXNlcjYyNTcxMDEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/62571011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ayushm2003",
      "html_url": "https://github.com/ayushm2003",
      "followers_url": "https://api.github.com/users/ayushm2003/followers",
      "following_url": "https://api.github.com/users/ayushm2003/following{/other_user}",
      "gists_url": "https://api.github.com/users/ayushm2003/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ayushm2003/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ayushm2003/subscriptions",
      "organizations_url": "https://api.github.com/users/ayushm2003/orgs",
      "repos_url": "https://api.github.com/users/ayushm2003/repos",
      "events_url": "https://api.github.com/users/ayushm2003/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ayushm2003/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-17T08:19:33Z",
    "updated_at": "2022-02-17T08:19:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Clap allows external commands by enabling [`external_subcommands`](https://docs.rs/clap/latest/clap/struct.App.html#method.allow_external_subcommands). But this doesn't help in actually calling the asked command.\r\n\r\nCargo too allows external subcommands so I looked at some of its code to see how it invokes the called function. Looks like it internally makes use of `std::process::Command`. Can read some snippets [here](https://github.com/rust-lang/cargo/blob/b5e2e397d9e05d9b9267f2eca5d3635d72c53548/src/bin/cargo/cli.rs#L37), [here](https://github.com/rust-lang/cargo/blob/528ab1235366dedc91ff448ac291d18ca95a7f70/src/bin/cargo/main.rs#L166) and [here](https://github.com/rust-lang/cargo/blob/9a3c162dc3b912cde1a0f436958adb2cb8f21e5e/crates/cargo-util/src/process_builder.rs#L327).\r\n\r\nMaybe we can do this too, so a possible flow could look like -\r\n* User implements plugins as a separate cli app on their system\r\n* Sets the path to this program as env or smthng (cargo somehow searches for the command but probably overkill for our purpose)\r\n* If foundry detects an unknown command, it uses `std::process::Command` to call the cli app with the arguments.\r\n\r\nWould love everyone's thoughts on this and any other ways we can implement plugins.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1042684170/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1046040903",
    "html_url": "https://github.com/foundry-rs/foundry/issues/706#issuecomment-1046040903",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/706",
    "id": 1046040903,
    "node_id": "IC_kwDOGBlvNc4-WVFH",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-19T15:16:06Z",
    "updated_at": "2022-02-19T15:16:06Z",
    "author_association": "MEMBER",
    "body": "I think another consideration for the plugin system is what kind of API we would expose, which requires us to think about some possible plugins that people would want to create. For example, I'd assume a lot of plugins would need access to things like the project config, artifacts and sources",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1046040903/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
