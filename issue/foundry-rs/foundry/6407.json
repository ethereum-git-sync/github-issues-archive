{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6407",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6407/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6407/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6407/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6407",
  "id": 2007413019,
  "node_id": "I_kwDOGBlvNc53prEb",
  "number": 6407,
  "title": " Memory Bug in Test",
  "user": {
    "login": "goheesheng",
    "id": 77826239,
    "node_id": "MDQ6VXNlcjc3ODI2MjM5",
    "avatar_url": "https://avatars.githubusercontent.com/u/77826239?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/goheesheng",
    "html_url": "https://github.com/goheesheng",
    "followers_url": "https://api.github.com/users/goheesheng/followers",
    "following_url": "https://api.github.com/users/goheesheng/following{/other_user}",
    "gists_url": "https://api.github.com/users/goheesheng/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/goheesheng/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/goheesheng/subscriptions",
    "organizations_url": "https://api.github.com/users/goheesheng/orgs",
    "repos_url": "https://api.github.com/users/goheesheng/repos",
    "events_url": "https://api.github.com/users/goheesheng/events{/privacy}",
    "received_events_url": "https://api.github.com/users/goheesheng/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-11-23T03:09:45Z",
  "updated_at": "2023-12-15T17:05:22Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [ ] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (0e33b3e 2023-07-26T07:07:06.336177323Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nforge test\r\n\r\n### Operating System\r\n\r\nLinux\r\n\r\n### Describe the bug\r\n\r\n## Bug Description:\r\nI encountered a memory bug while writing a test case using the Foundry framework. The error message indicates an invalid type for an argument in a function call, specifically an invalid implicit conversion from enum CoinType to enum CoinType requested. The relevant code snippet is as follows:\r\n```solidity\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.7;\r\n\r\nimport {Test, console2} from \"forge-std/Test.sol\";\r\nimport { ZRC20 } from \"../../contracts/zevm/ZRC20.sol\";\r\nimport { SystemContractMock } from \"../../contracts/zevm/testing/SystemContractMock.sol\";\r\nimport \"./Interfaces.sol\";\r\n\r\ncontract zrc20_interface is Test {\r\n    ZRC20 public zrc20;\r\n    SystemContractMock public systemContract;\r\n    CoinType cointype;\r\n\r\n    function setUp() public {\r\n        cointype = CoinType.Zeta;\r\n        systemContract = new SystemContractMock(address(0), address(0), address(0));\r\n        zrc20 = new ZRC20(\"TOKEN\",\"TKN\",18,1,cointype,0,address(systemContract));\r\n    }\r\n}\r\n```\r\n## Explanation:\r\nIf contract A imports B, and when you write a contract that imports the same context in B but in a different file C. There issue will occur.\r\n\r\nThe enum CoinType is defined in Interfaces.sol, and it seems there might be an issue with how it is imported in the test case.\r\n```diff\r\n\r\nimport {Test, console2} from \"forge-std/Test.sol\";\r\n-- import { ZRC20 } from \"../../contracts/zevm/ZRC20.sol\";\r\n++ import { ZRC20, CoinType } from \"../../contracts/zevm/ZRC20.sol\";\r\nimport { SystemContractMock } from \"../../contracts/zevm/testing/SystemContractMock.sol\";\r\n-- import \"./Interfaces.sol\";\r\n```\r\nThe error:\r\n```\r\nError (9553): Invalid type for argument in function call. Invalid implicit conversion from enum CoinType to enum CoinType requested.\r\n  --> test/foundry/zrc20_interface.t.sol:16:46:\r\n   |\r\n16 |         zrc20 = new ZRC20(\"TOKEN\",\"TKN\",18,1,cointype,0,address(systemContract));\r\n   |       \r\n```\r\n\r\n## Expected Behavior:\r\nThe contract should compile successfully without any memory-related errors.\r\n\r\n## Actual Behavior:\r\nThe compiler throws an error related to an invalid type for an argument in a function call.\r\n\r\n## Recommendation:\r\nCreate a new error log that specify the issue correctly to increase efficiency in debugging. ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6407/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6407/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1851218838",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6407#issuecomment-1851218838",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6407",
    "id": 1851218838,
    "node_id": "IC_kwDOGBlvNc5uV1uW",
    "user": {
      "login": "kamikazebr",
      "id": 691510,
      "node_id": "MDQ6VXNlcjY5MTUxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/691510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kamikazebr",
      "html_url": "https://github.com/kamikazebr",
      "followers_url": "https://api.github.com/users/kamikazebr/followers",
      "following_url": "https://api.github.com/users/kamikazebr/following{/other_user}",
      "gists_url": "https://api.github.com/users/kamikazebr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kamikazebr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kamikazebr/subscriptions",
      "organizations_url": "https://api.github.com/users/kamikazebr/orgs",
      "repos_url": "https://api.github.com/users/kamikazebr/repos",
      "events_url": "https://api.github.com/users/kamikazebr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kamikazebr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-12T02:51:17Z",
    "updated_at": "2023-12-12T02:51:17Z",
    "author_association": "NONE",
    "body": "Got similiar error but using structs in storage when i try use that as memory it give me that error.\r\n\r\n`Error (9553): Invalid type for argument in function call. Invalid implicit conversion from struct Metadata storage ref to struct Metadata memory requested.`",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1851218838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1851219610",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6407#issuecomment-1851219610",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6407",
    "id": 1851219610,
    "node_id": "IC_kwDOGBlvNc5uV16a",
    "user": {
      "login": "goheesheng",
      "id": 77826239,
      "node_id": "MDQ6VXNlcjc3ODI2MjM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/77826239?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/goheesheng",
      "html_url": "https://github.com/goheesheng",
      "followers_url": "https://api.github.com/users/goheesheng/followers",
      "following_url": "https://api.github.com/users/goheesheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/goheesheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/goheesheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/goheesheng/subscriptions",
      "organizations_url": "https://api.github.com/users/goheesheng/orgs",
      "repos_url": "https://api.github.com/users/goheesheng/repos",
      "events_url": "https://api.github.com/users/goheesheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/goheesheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-12T02:52:23Z",
    "updated_at": "2023-12-12T02:52:23Z",
    "author_association": "NONE",
    "body": "> Got similiar error but using structs in storage when i try use that as memory it give me that error.\r\n> \r\n> `Error (9553): Invalid type for argument in function call. Invalid implicit conversion from struct Metadata storage ref to struct Metadata memory requested.`\r\n\r\nDo show the codes for clarity thanks",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1851219610/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1851226955",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6407#issuecomment-1851226955",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6407",
    "id": 1851226955,
    "node_id": "IC_kwDOGBlvNc5uV3tL",
    "user": {
      "login": "kamikazebr",
      "id": 691510,
      "node_id": "MDQ6VXNlcjY5MTUxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/691510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kamikazebr",
      "html_url": "https://github.com/kamikazebr",
      "followers_url": "https://api.github.com/users/kamikazebr/followers",
      "following_url": "https://api.github.com/users/kamikazebr/following{/other_user}",
      "gists_url": "https://api.github.com/users/kamikazebr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kamikazebr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kamikazebr/subscriptions",
      "organizations_url": "https://api.github.com/users/kamikazebr/orgs",
      "repos_url": "https://api.github.com/users/kamikazebr/repos",
      "events_url": "https://api.github.com/users/kamikazebr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kamikazebr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-12T03:02:40Z",
    "updated_at": "2023-12-15T17:05:22Z",
    "author_association": "NONE",
    "body": "> > Got similiar error but using structs in storage when i try use that as memory it give me that error.\r\n> > `Error (9553): Invalid type for argument in function call. Invalid implicit conversion from struct Metadata storage ref to struct Metadata memory requested.`\r\n> \r\n> Do show the codes for clarity thanks\r\n\r\nEDITED: The behaviour for me its unclear, but a snip code below\r\n\r\n```solidity\r\nMetadata memory _metadata = Metadata({protocol: 1, pointer: \"strategy pointer\"});\r\nuint256 poolId = allo().createPool(poolProfile_id(), strategy, \"0x\", NATIVE, 0, _metadata, pool_managers());\r\n```\r\nError image below:\r\n\r\n![image](https://github.com/foundry-rs/foundry/assets/691510/36f931c9-fbba-44ed-bbce-c8cc45cd959e)\r\n\r\nThe strange part is: I have the exact code in another place that just work, the only different its i'm using different import locations.\r\n\r\n----\r\n## Update 1\r\nThat code just works \r\nhttps://github.com/allo-protocol/allo-v2/blob/main/test/foundry/core/Allo.t.sol#L124\r\n\r\nBut that that its the same functions but importing the dependencies from the repo above don't.\r\n\r\nhttps://github.com/1Hive/gardens-v2/pull/3/files#diff-5ea3162dcb6cfe676607b4926179a19fe5873cb293434dbbce0c8035f4272be0R75\r\n\r\n----\r\n## Update 2\r\nIf i remove the Metadata import and take that from the RegistrySetup it works.\r\n```diff\r\n-- import {Metadata} from \"allo-v2/core/libraries/Metadata.sol\";\r\nimport {Native} from \"allo-v2/core/libraries/Native.sol\";\r\n// Test libraries\r\nimport {AlloSetup} from \"allo-v2/../test/foundry/shared/AlloSetup.sol\";\r\n-- import {RegistrySetupFull} from \"allo-v2/../test/foundry/shared/RegistrySetup.sol\";\r\n++ import {RegistrySetupFull, Metadata} from \"allo-v2/../test/foundry/shared/RegistrySetup.sol\";\r\n\r\n```\r\n---\r\n## Update 3\r\nAfter \"solving\" the Metadata now i'm getting that in another struct\r\n\r\n![image](https://github.com/foundry-rs/foundry/assets/691510/521ab4cd-bd45-4f72-aeb3-d7883150d8e4)\r\n\r\nTried import it in many different ways, but nothing yet.\r\n\r\n---\r\n## Update 4\r\n\r\nI replace all the imports to relative instead using the alias that configured in the remappings.txt file and now it works.\r\n\r\n## Update 5 (FINAL)\r\n\r\nI remade the remmapings in different way to avoid use relative on top the mappings and that works.\r\nhttps://github.com/1Hive/gardens-v2/pull/3/files#diff-6ea402a2ca81b3b6f5dba5eed6bfac5e5d8bf8660be870732ad6e202e1038a68R3-R5",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1851226955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
