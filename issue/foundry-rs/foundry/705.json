{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/705",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/705",
  "id": 1127630974,
  "node_id": "I_kwDOGBlvNc5DNkh-",
  "number": 705,
  "title": "Adding more content to the compilation artifacts output",
  "user": {
    "login": "montyly",
    "id": 13798342,
    "node_id": "MDQ6VXNlcjEzNzk4MzQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/13798342?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/montyly",
    "html_url": "https://github.com/montyly",
    "followers_url": "https://api.github.com/users/montyly/followers",
    "following_url": "https://api.github.com/users/montyly/following{/other_user}",
    "gists_url": "https://api.github.com/users/montyly/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/montyly/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/montyly/subscriptions",
    "organizations_url": "https://api.github.com/users/montyly/orgs",
    "repos_url": "https://api.github.com/users/montyly/repos",
    "events_url": "https://api.github.com/users/montyly/events{/privacy}",
    "received_events_url": "https://api.github.com/users/montyly/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759719580,
      "node_id": "LA_kwDOGBlvNc7gGMSc",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-normal",
      "name": "P-normal",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: normal"
    },
    {
      "id": 3777098561,
      "node_id": "LA_kwDOGBlvNc7hIfNB",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-build",
      "name": "Cmd-forge-build",
      "color": "006B75",
      "default": false,
      "description": "Command: forge build"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2022-02-08T18:47:10Z",
  "updated_at": "2022-04-18T16:27:50Z",
  "closed_at": "2022-04-18T16:27:50Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nHi,\r\n\r\nRunning `forge build` leads to generating compilation artifacts in `out` with only `abi`/`bytecode`/`deployed_bytecode`. This limits the integration with other tools (like Slither, Echidna etc..).\r\n\r\nWould it be possible to generate all the compilation artifacts? (or to have a flag for it)? The ones that are needed for crytic-tools are (and probably for most of the other third parties integration):\r\n- abi\r\n- ast\r\n- bin\r\n- bin-runtime\r\n- srcmap\r\n- srcmap-runtime\r\n- userdoc\r\n- devdoc\r\n- hashes [from 0.4.12]\r\n- compact-format [from 0.4.12, and until 0.8.10, after that this was dropped as the legacy ast format was removed]\r\n\r\nI tried with `--extra-output ast` but it did not work. However because some of these flags depend on the compiler version, it would be great to let foundry figure out which ones are available. \r\n\r\nRelated: https://github.com/crytic/crytic-compile/issues/230\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/705/reactions",
    "total_count": 4,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1033007059",
    "html_url": "https://github.com/foundry-rs/foundry/issues/705#issuecomment-1033007059",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705",
    "id": 1033007059,
    "node_id": "IC_kwDOGBlvNc49km_T",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-08T19:59:25Z",
    "updated_at": "2022-02-08T19:59:25Z",
    "author_association": "MEMBER",
    "body": "I think this should be possible via foundry toml? Cc @mattsse ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1033007059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1034227990",
    "html_url": "https://github.com/foundry-rs/foundry/issues/705#issuecomment-1034227990",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705",
    "id": 1034227990,
    "node_id": "IC_kwDOGBlvNc49pREW",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-09T21:54:14Z",
    "updated_at": "2022-02-09T21:54:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "this question was also asked in the support chat today by me and another individual. \r\n\r\nI need to output the `metadata.json` so that I can verify on sourcify ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1034227990/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1035977874",
    "html_url": "https://github.com/foundry-rs/foundry/issues/705#issuecomment-1035977874",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705",
    "id": 1035977874,
    "node_id": "IC_kwDOGBlvNc49v8SS",
    "user": {
      "login": "montyly",
      "id": 13798342,
      "node_id": "MDQ6VXNlcjEzNzk4MzQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13798342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/montyly",
      "html_url": "https://github.com/montyly",
      "followers_url": "https://api.github.com/users/montyly/followers",
      "following_url": "https://api.github.com/users/montyly/following{/other_user}",
      "gists_url": "https://api.github.com/users/montyly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/montyly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/montyly/subscriptions",
      "organizations_url": "https://api.github.com/users/montyly/orgs",
      "repos_url": "https://api.github.com/users/montyly/repos",
      "events_url": "https://api.github.com/users/montyly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/montyly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-11T08:32:28Z",
    "updated_at": "2022-02-11T08:32:28Z",
    "author_association": "NONE",
    "body": "@gakonst it would be great to have a flag's integration instead of the config file, as it would allow smooth third parties integration.\r\nOtherwise, it would mean that every foundry's user that wants to use Slither need to update their config file (as opposed to a flag that Slither will directly use when running foundry) ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1035977874/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1036010268",
    "html_url": "https://github.com/foundry-rs/foundry/issues/705#issuecomment-1036010268",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705",
    "id": 1036010268,
    "node_id": "IC_kwDOGBlvNc49wEMc",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-11T09:19:42Z",
    "updated_at": "2022-02-11T09:19:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @gakonst it would be great to have a flag's integration instead of the config file, as it would allow smooth third parties integration.\n> \n> Otherwise, it would mean that every foundry's user that wants to use Slither need to update their config file (as opposed to a flag that Slither will directly use when running foundry) \n\n\nusing the flags as-is is flakey. \n\nhttps://github.com/gakonst/foundry/issues/718\n\nIt will be a very very nested toml file if you want to configure it using some of the more nested options too.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1036010268/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1036011388",
    "html_url": "https://github.com/foundry-rs/foundry/issues/705#issuecomment-1036011388",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705",
    "id": 1036011388,
    "node_id": "IC_kwDOGBlvNc49wEd8",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-11T09:21:15Z",
    "updated_at": "2022-02-11T09:21:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Metadata is also needed for verification ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1036011388/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1036044044",
    "html_url": "https://github.com/foundry-rs/foundry/issues/705#issuecomment-1036044044",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705",
    "id": 1036044044,
    "node_id": "IC_kwDOGBlvNc49wMcM",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-11T10:04:55Z",
    "updated_at": "2022-02-11T10:04:55Z",
    "author_association": "MEMBER",
    "body": "better metadata bindings have been added to ethers-rs https://github.com/gakonst/ethers-rs/pull/894\r\n\r\nIs there any (good) reason we should support configuring the output on a file or contract basis? \r\nI feel only supporting  `{ \"*\": { \"*\": [<contract level settings>] } }` is reasonable\r\n\r\nthis should be either a list of\r\n\r\noutput_selection = [\"ir\", \"storageLayout\", \"evm\",...]\r\n\r\nor \r\noutput_selection = [\"all\"] which is `{ \"*\": { \"*\": [ \"*\" ], \"\": [ \"*\" ] } }`\r\n\r\nFrom the docs, the only file level config is `ast`, right?\r\n\r\nwhat if we make a\r\n`metadata = true` field to\r\n1. set \"metadata\" field in output selection\r\n2. write a metadata.json file for every contract\r\n\r\n@sambacha ?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1036044044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1036097980",
    "html_url": "https://github.com/foundry-rs/foundry/issues/705#issuecomment-1036097980",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705",
    "id": 1036097980,
    "node_id": "IC_kwDOGBlvNc49wZm8",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-11T11:14:41Z",
    "updated_at": "2022-02-11T11:14:41Z",
    "author_association": "MEMBER",
    "body": "+1 on @montyly's point on also having a flag on the CLI to allow doing that without a Config file ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1036097980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1038478764",
    "html_url": "https://github.com/foundry-rs/foundry/issues/705#issuecomment-1038478764",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705",
    "id": 1038478764,
    "node_id": "IC_kwDOGBlvNc495e2s",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-13T23:42:42Z",
    "updated_at": "2022-02-13T23:42:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> better metadata bindings have been added to ethers-rs [gakonst/ethers-rs#894](https://github.com/gakonst/ethers-rs/pull/894)\r\n> \r\n> Is there any (good) reason we should support configuring the output on a file or contract basis? I feel only supporting `{ \"*\": { \"*\": [<contract level settings>] } }` is reasonable\r\n> \r\n> this should be either a list of\r\n> \r\n> output_selection = [\"ir\", \"storageLayout\", \"evm\",...]\r\n> \r\n> or output_selection = [\"all\"] which is `{ \"*\": { \"*\": [ \"*\" ], \"\": [ \"*\" ] } }`\r\n> \r\n> From the docs, the only file level config is `ast`, right?\r\n> \r\n> what if we make a `metadata = true` field to\r\n> \r\n> 1. set \"metadata\" field in output selection\r\n> 2. write a metadata.json file for every contract\r\n> \r\n> @sambacha ?\r\n\r\nThe reason we would want this is for verification, which is dependent on how etherscan consumes this. I would guess that they normally get 1 metadata.json file, as opposed to 1 for every contract. I will email their support and ask, thanks @mattsse ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1038478764/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1043145798",
    "html_url": "https://github.com/foundry-rs/foundry/issues/705#issuecomment-1043145798",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705",
    "id": 1043145798,
    "node_id": "IC_kwDOGBlvNc4-LSRG",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-17T16:21:27Z",
    "updated_at": "2022-02-17T16:22:00Z",
    "author_association": "MEMBER",
    "body": "@montyly should be fixed now! Will be released on today's nightly. From @mattsse's PR:\r\n> --extra-output <metadata|ir|ir-optimized|...> will add the provided selection to the contract's json artifact.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1043145798/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1066902624",
    "html_url": "https://github.com/foundry-rs/foundry/issues/705#issuecomment-1066902624",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705",
    "id": 1066902624,
    "node_id": "IC_kwDOGBlvNc4_l6Rg",
    "user": {
      "login": "montyly",
      "id": 13798342,
      "node_id": "MDQ6VXNlcjEzNzk4MzQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13798342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/montyly",
      "html_url": "https://github.com/montyly",
      "followers_url": "https://api.github.com/users/montyly/followers",
      "following_url": "https://api.github.com/users/montyly/following{/other_user}",
      "gists_url": "https://api.github.com/users/montyly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/montyly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/montyly/subscriptions",
      "organizations_url": "https://api.github.com/users/montyly/orgs",
      "repos_url": "https://api.github.com/users/montyly/repos",
      "events_url": "https://api.github.com/users/montyly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/montyly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-14T14:55:35Z",
    "updated_at": "2022-03-14T14:55:35Z",
    "author_association": "NONE",
    "body": "I am not sure that @762 fixed this issue. I can't find a way to generate `ast`, or `hashes` (but I can generate all the others). Am I missing something?\r\n\r\nFor `ast`, it would be great if `compact-format` was enabled for solc from 0.4.12, and until 0.8.10.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1066902624/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1066910698",
    "html_url": "https://github.com/foundry-rs/foundry/issues/705#issuecomment-1066910698",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705",
    "id": 1066910698,
    "node_id": "IC_kwDOGBlvNc4_l8Pq",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-14T15:02:41Z",
    "updated_at": "2022-03-14T15:04:50Z",
    "author_association": "MEMBER",
    "body": "wrt to `hashes`, do you mean `evm.methodIdentifiers`? https://docs.soliditylang.org/en/v0.4.12/using-the-compiler.html#input-description\r\n\r\nThe `ast` can only be set for the whole solc CompilerInput, it's enabled by default but we currently do not move the `ast`, which is stored separately in the CompilerOutput to the `Artifact`.\r\nwill add this shortly.\r\n\r\n> compact-format\r\n\r\nyou mean the `solc --ast-compact-json` argument?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1066910698/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1067001596",
    "html_url": "https://github.com/foundry-rs/foundry/issues/705#issuecomment-1067001596",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705",
    "id": 1067001596,
    "node_id": "IC_kwDOGBlvNc4_mSb8",
    "user": {
      "login": "montyly",
      "id": 13798342,
      "node_id": "MDQ6VXNlcjEzNzk4MzQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13798342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/montyly",
      "html_url": "https://github.com/montyly",
      "followers_url": "https://api.github.com/users/montyly/followers",
      "following_url": "https://api.github.com/users/montyly/following{/other_user}",
      "gists_url": "https://api.github.com/users/montyly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/montyly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/montyly/subscriptions",
      "organizations_url": "https://api.github.com/users/montyly/orgs",
      "repos_url": "https://api.github.com/users/montyly/repos",
      "events_url": "https://api.github.com/users/montyly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/montyly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-14T16:04:58Z",
    "updated_at": "2022-03-14T16:04:58Z",
    "author_association": "NONE",
    "body": "Great, thanks.\r\n\r\nFor `hashes`: yes it is `evm.methodIdentifiers`; this one actually already works in forge with this name (I got confused because `hashes` is the naming with solc's `--combined-json`)\r\n\r\nFor the compact format, yes it is ` --ast-compact-json` (or `compact-format` through `--combined-json`)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1067001596/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1088280050",
    "html_url": "https://github.com/foundry-rs/foundry/issues/705#issuecomment-1088280050",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705",
    "id": 1088280050,
    "node_id": "IC_kwDOGBlvNc5A3dXy",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-05T05:23:22Z",
    "updated_at": "2022-04-05T05:23:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "just to be sure, the JSON interface returns contract metadata in case of an internal compiler error while the CLI interface does not for solc.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1088280050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1100594070",
    "html_url": "https://github.com/foundry-rs/foundry/issues/705#issuecomment-1100594070",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705",
    "id": 1100594070,
    "node_id": "IC_kwDOGBlvNc5BmbuW",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-16T07:24:21Z",
    "updated_at": "2022-04-16T07:24:21Z",
    "author_association": "MEMBER",
    "body": "@montyly You can now get `ast` and `evm.methodIdentifiers` as well - good to close? :smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1100594070/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1101544284",
    "html_url": "https://github.com/foundry-rs/foundry/issues/705#issuecomment-1101544284",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/705",
    "id": 1101544284,
    "node_id": "IC_kwDOGBlvNc5BqDtc",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-18T16:27:50Z",
    "updated_at": "2022-04-18T16:27:50Z",
    "author_association": "MEMBER",
    "body": "I think so - here's a slither job example https://github.com/thirdweb-dev/contracts/blob/main/.github/workflows/slither.yml#L27-L43. feel free to re-open if still an issue",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1101544284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
