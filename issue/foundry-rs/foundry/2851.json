{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2851",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2851/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2851/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2851/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2851",
  "id": 1344643497,
  "node_id": "I_kwDOGBlvNc5QJaGp",
  "number": 2851,
  "title": "condition not caught by invariant/fuzzer",
  "user": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3394554570,
      "node_id": "LA_kwDOGBlvNc7KVMrK",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-fuzzing",
      "name": "A-fuzzing",
      "color": "FBCA04",
      "default": false,
      "description": "Area: fuzzing"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-08-19T16:17:09Z",
  "updated_at": "2022-08-19T20:50:08Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [ ] Foundry\n- [ ] Foundryup\n\n### What version of Foundry are you on?\n\n_No response_\n\n### What command(s) is the bug in?\n\n_No response_\n\n### Operating System\n\n_No response_\n\n### Describe the bug\n\n![telegram-cloud-photo-size-2-5188374473173220884-y](https://user-images.githubusercontent.com/19890894/185662217-37e6376f-e021-4d5d-966d-f2f8c8b03972.jpg)\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2851/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2851/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1220906879",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2851#issuecomment-1220906879",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2851",
    "id": 1220906879,
    "node_id": "IC_kwDOGBlvNc5IxY9_",
    "user": {
      "login": "joshieDo",
      "id": 93316087,
      "node_id": "U_kgDOBY_j9w",
      "avatar_url": "https://avatars.githubusercontent.com/u/93316087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshieDo",
      "html_url": "https://github.com/joshieDo",
      "followers_url": "https://api.github.com/users/joshieDo/followers",
      "following_url": "https://api.github.com/users/joshieDo/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshieDo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshieDo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshieDo/subscriptions",
      "organizations_url": "https://api.github.com/users/joshieDo/orgs",
      "repos_url": "https://api.github.com/users/joshieDo/repos",
      "events_url": "https://api.github.com/users/joshieDo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshieDo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-19T17:14:08Z",
    "updated_at": "2022-08-19T17:14:20Z",
    "author_association": "COLLABORATOR",
    "body": "I'm not sure invariant testing is the best for this kind of scenario. We have `x` on the dictionary, but we need `x+1`, so we're stuck on somehow getting `x+1` in the middle of the uint256 space.\r\n\r\nAlso, does normal fuzzing even reach `number = 0` ?\r\n\r\n--\r\n\r\nIf we wanted to reach this, we could probably come up with a strategy that adds `x - n`, `x + n` to the dictionary... but that seems too niche.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1220906879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1221012548",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2851#issuecomment-1221012548",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2851",
    "id": 1221012548,
    "node_id": "IC_kwDOGBlvNc5IxyxE",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-19T19:06:51Z",
    "updated_at": "2022-08-19T19:06:51Z",
    "author_association": "COLLABORATOR",
    "body": "Just curious, where is this example from? I'm inclined to say we shouldn't worry too much about trying to tune the fuzzer to find this particular exampleâ€”it's a bit contrived and I haven't seen much solidity code with similar logic, so you could argue it's is more of an academic issue than a practical issue.\r\n\r\nI think a more worthwhile (but also bigger) effort is ensuring foundry can match echidna's performance, which we haven't demonstrated yet. The echidna [readme](https://github.com/crytic/echidna#trophies) has a \"Trophies\" section showing real issues it's found, and a \"Research\" section reproducing examples from papers. Some of those research examples are _similar_ to the above, but I think simpler in that there's not the `- 1` and therefore collecting PUSH bytes should solve it. \r\n\r\nAll of the echidna test cases (excluding \"trophies\", including \"research\" and other tests) can be found here: https://github.com/crytic/echidna/tree/master/tests/solidity\r\n\r\nIt would be great if we setup all of those test cases as part of foundry CI and make sure fuzz/invariant tests can reliably catch those",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1221012548/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1221038330",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2851#issuecomment-1221038330",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2851",
    "id": 1221038330,
    "node_id": "IC_kwDOGBlvNc5Ix5D6",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-19T19:44:13Z",
    "updated_at": "2022-08-19T19:44:13Z",
    "author_association": "MEMBER",
    "body": "@gakonst can probably provide some context and the expectations here",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1221038330/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1221082712",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2851#issuecomment-1221082712",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2851",
    "id": 1221082712,
    "node_id": "IC_kwDOGBlvNc5IyD5Y",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-19T20:50:02Z",
    "updated_at": "2022-08-19T20:50:02Z",
    "author_association": "MEMBER",
    "body": "Imo this kind of test case is what symbolic execution is more geared for. The kind of fuzzer we have is borderline a blackbox fuzzer, so it's essentially just bruteforcing its way there. We have a dictionary as well but the chance of hitting that particular number is still very low.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1221082712/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
