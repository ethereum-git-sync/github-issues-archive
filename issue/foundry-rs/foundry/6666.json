{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6666",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6666/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6666/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6666/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6666",
  "id": 2055409964,
  "node_id": "I_kwDOGBlvNc56gxEs",
  "number": 6666,
  "title": "Capacity Overflow During Invariant Testing",
  "user": {
    "login": "DanielGelfand",
    "id": 33498710,
    "node_id": "MDQ6VXNlcjMzNDk4NzEw",
    "avatar_url": "https://avatars.githubusercontent.com/u/33498710?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/DanielGelfand",
    "html_url": "https://github.com/DanielGelfand",
    "followers_url": "https://api.github.com/users/DanielGelfand/followers",
    "following_url": "https://api.github.com/users/DanielGelfand/following{/other_user}",
    "gists_url": "https://api.github.com/users/DanielGelfand/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/DanielGelfand/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/DanielGelfand/subscriptions",
    "organizations_url": "https://api.github.com/users/DanielGelfand/orgs",
    "repos_url": "https://api.github.com/users/DanielGelfand/repos",
    "events_url": "https://api.github.com/users/DanielGelfand/events{/privacy}",
    "received_events_url": "https://api.github.com/users/DanielGelfand/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-12-25T06:02:31Z",
  "updated_at": "2024-01-16T15:12:31Z",
  "closed_at": "2024-01-16T15:12:31Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [X] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (67ab870 2023-12-25T00:25:37.702950000Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nforge test\r\n\r\n### Operating System\r\n\r\nmacOS (Apple Silicon)\r\n\r\n### Describe the bug\r\n\r\n```\r\n[⠆] Compiling...\r\nNo files changed, compilation skipped\r\nThe application panicked (crashed).\r\nMessage:  capacity overflow\r\nLocation: library/alloc/src/raw_vec.rs:534\r\n\r\nThis is a bug. Consider reporting it at https://github.com/foundry-rs/foundry\r\n\r\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ BACKTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\r\n   1: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   2: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   3: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   4: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   5: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   6: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   7: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   8: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   9: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  10: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  11: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  12: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  13: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  14: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  15: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  16: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  17: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  18: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  19: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  20: __pthread_deallocate<unknown>\r\n      at <unknown source file>:<unknown line>\r\n```\r\n\r\nDuring invariant testing (with a fork), if I were to add a console log or an extra operation such as a simple `balanceOf` the error `capacity overflow` would show up. I would then have to play with removing/rearranging certain lines or modifying runs/depth to get the invariant test to run.\r\n\r\n",
  "closed_by": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6666/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6666/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1871512474",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6666#issuecomment-1871512474",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6666",
    "id": 1871512474,
    "node_id": "IC_kwDOGBlvNc5vjQOa",
    "user": {
      "login": "aviggiano",
      "id": 3029017,
      "node_id": "MDQ6VXNlcjMwMjkwMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3029017?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aviggiano",
      "html_url": "https://github.com/aviggiano",
      "followers_url": "https://api.github.com/users/aviggiano/followers",
      "following_url": "https://api.github.com/users/aviggiano/following{/other_user}",
      "gists_url": "https://api.github.com/users/aviggiano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aviggiano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aviggiano/subscriptions",
      "organizations_url": "https://api.github.com/users/aviggiano/orgs",
      "repos_url": "https://api.github.com/users/aviggiano/repos",
      "events_url": "https://api.github.com/users/aviggiano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aviggiano/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-28T21:53:28Z",
    "updated_at": "2023-12-29T09:52:54Z",
    "author_association": "NONE",
    "body": "I am also experiencing this issue with an invariant test.\r\nMy setup does not involve a fork\r\n\r\n_Update_: FYI I changed `assertTrue` to `assert` and the issue went away\r\n\r\n\r\n### Component\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n- [x]  Foundry\r\n- [x]  Foundryup\r\n\r\n### What version of Foundry are you on?\r\nforge 0.2.0 (nightly-67ab8704476d55e47545cf6217e236553c427a80)\r\n\r\n### What command(s) is the bug in?\r\nforge test\r\n\r\n### Operating System\r\nmacOS (Apple Silicon)\r\n\r\n### Describe the bug\r\n```\r\n[I] ➜ RUST_BACKTRACE=full COLORBT_SHOW_HIDDEN=1 forge test --mc FoundryTester\r\n[⠆] Compiling...\r\nNo files changed, compilation skipped\r\nThe application panicked (crashed).\r\nMessage:  capacity overflow\r\nLocation: library/alloc/src/raw_vec.rs:534\r\n\r\nThis is a bug. Consider reporting it at https://github.com/foundry-rs/foundry\r\n\r\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ BACKTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\r\n   1: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   2: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   3: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   4: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   5: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   6: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   7: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   8: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   9: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  10: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  11: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  12: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  13: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  14: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  15: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  16: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  17: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  18: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  19: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  20: __pthread_joiner_wake<unknown>\r\n      at <unknown source file>:<unknown line>\r\n\r\nRun with COLORBT_SHOW_HIDDEN=1 environment variable to disable frame filtering.\r\nzsh: abort      RUST_BACKTRACE=full COLORBT_SHOW_HIDDEN=1 forge test --mc FoundryTester\r\n```\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1871512474/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1878845375",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6666#issuecomment-1878845375",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6666",
    "id": 1878845375,
    "node_id": "IC_kwDOGBlvNc5v_Oe_",
    "user": {
      "login": "zaqk",
      "id": 10659278,
      "node_id": "MDQ6VXNlcjEwNjU5Mjc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/10659278?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zaqk",
      "html_url": "https://github.com/zaqk",
      "followers_url": "https://api.github.com/users/zaqk/followers",
      "following_url": "https://api.github.com/users/zaqk/following{/other_user}",
      "gists_url": "https://api.github.com/users/zaqk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zaqk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zaqk/subscriptions",
      "organizations_url": "https://api.github.com/users/zaqk/orgs",
      "repos_url": "https://api.github.com/users/zaqk/repos",
      "events_url": "https://api.github.com/users/zaqk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zaqk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-05T15:24:28Z",
    "updated_at": "2024-01-05T15:28:21Z",
    "author_association": "NONE",
    "body": "I'm on an M1 macOS (Apple Silicon).\r\n\r\nIf I change my assertion from `assertGt` to `assertGe` the error goes away.\r\n\r\n\r\nGetting this error as well:\r\n```\r\n▶ RUST_BACKTRACE=full forge test --mp test/invariant/MyTest.invariant.t.sol\r\n[⠒] Compiling...No files changed, compilation skipped\r\n[⠢] Compiling...\r\nThe application panicked (crashed).\r\nMessage:  capacity overflow\r\nLocation: library/alloc/src/raw_vec.rs:545\r\n\r\nThis is a bug. Consider reporting it at https://github.com/foundry-rs/foundry\r\n\r\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ BACKTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\r\n   1: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   2: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   3: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   4: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   5: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   6: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   7: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   8: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n   9: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  10: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  11: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  12: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  13: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  14: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  15: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  16: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  17: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  18: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  19: __mh_execute_header<unknown>\r\n      at <unknown source file>:<unknown line>\r\n  20: __pthread_joiner_wake<unknown>\r\n      at <unknown source file>:<unknown line>\r\n\r\nRun with COLORBT_SHOW_HIDDEN=1 environment variable to disable frame filtering.\r\n[1]    87586 abort      RUST_BACKTRACE=full forge test --mp test/invariant/MyTest.invariant.t.sol\r\n```\r\n\r\nIf I move a specific invariant test it goes away. This invariant test is being inherited from an abstract contract into two different test contracts. One of the test contracts works. The other does not.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1878845375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1893638055",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6666#issuecomment-1893638055",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6666",
    "id": 1893638055,
    "node_id": "IC_kwDOGBlvNc5w3p-n",
    "user": {
      "login": "m-waqas88",
      "id": 62002637,
      "node_id": "MDQ6VXNlcjYyMDAyNjM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/62002637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m-waqas88",
      "html_url": "https://github.com/m-waqas88",
      "followers_url": "https://api.github.com/users/m-waqas88/followers",
      "following_url": "https://api.github.com/users/m-waqas88/following{/other_user}",
      "gists_url": "https://api.github.com/users/m-waqas88/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m-waqas88/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m-waqas88/subscriptions",
      "organizations_url": "https://api.github.com/users/m-waqas88/orgs",
      "repos_url": "https://api.github.com/users/m-waqas88/repos",
      "events_url": "https://api.github.com/users/m-waqas88/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m-waqas88/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-16T12:22:51Z",
    "updated_at": "2024-01-16T12:22:51Z",
    "author_association": "NONE",
    "body": "Versions:\r\n```\r\nforge 0.2.0 (24abca6 2024-01-16T00:28:45.101177000Z)\r\ncast 0.2.0 (24abca6 2024-01-16T00:28:45.162187000Z)\r\nanvil 0.2.0 (24abca6 2024-01-16T00:28:45.105452000Z)\r\nchisel 0.2.0 (24abca6 2024-01-16T00:28:45.523635000Z)\r\n```\r\n\r\n\r\nI am also experiencing a similar error, when I am trying to play with the variables in `assertGe` statement.\r\n\r\n```\r\nThe application panicked (crashed).\r\nMessage:  capacity overflow\r\nLocation: library/alloc/src/raw_vec.rs:545\r\n\r\nThis is a bug. Consider reporting it at https://github.com/foundry-rs/foundry\r\n\r\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\r\nRun with RUST_BACKTRACE=full to include source snippets.\r\nzsh: abort      forge test --match-path test/Invariant_2.t.sol\r\n```\r\nI am using below command\r\n`forge test --match-path test/Invariant_2.t.sol `\r\n\r\nBelow are my code files\r\n\r\nInvariant_2.t.sol\r\n```solidity\r\npragma solidity ^0.8.22;\r\n\r\nimport \"forge-std/Test.sol\";\r\nimport {Handler} from \"../src/InvariantHandler.sol\";\r\nimport {WETH} from \"../src/WETH.sol\";\r\n\r\ncontract InvariantHandlerTest is Test {\r\n    WETH private weth;\r\n    Handler private handler;\r\n\r\n    function setUp() public {\r\n        weth = new WETH();\r\n        handler = new Handler(weth);\r\n        deal(address(handler), 100 ether);\r\n        targetContract(address(handler));\r\n    }\r\n\r\n    function invariant_WETH_ETH_balance_should_be_greater_than_or_equal_to_eth_deposited_by_Hanlder() public {\r\n        assertGe(address(weth).balance, weth.balanceOf(address(handler)) + 5);\r\n    }\r\n\r\n}\r\n```\r\nWhen I add `+5` in the `assertGe` statement then this error is thrown. Otherwise it works fine.\r\n\r\nInvariantHandler.sol\r\n```solidity\r\npragma solidity ^0.8.22;\r\n\r\nimport {WETH} from \"./WETH.sol\";\r\nimport {CommonBase} from \"forge-std/Base.sol\";\r\nimport {StdCheats} from \"forge-std/StdCheats.sol\";\r\nimport {StdUtils} from \"forge-std/StdUtils.sol\";\r\n\r\ncontract Handler is CommonBase, StdCheats, StdUtils {\r\n    WETH private weth;\r\n\r\n    constructor(WETH _weth) {\r\n        weth = _weth;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function deposit(uint256 _amount) public {\r\n        _amount = bound(_amount, 0, address(this).balance);\r\n        weth.deposit{value: _amount}();\r\n    }\r\n\r\n    function withdraw(uint256 _amount) public {\r\n        _amount = bound(_amount, 0, weth.balanceOf(address(this)));\r\n        weth.withdraw(_amount);\r\n    }\r\n\r\n    function sendToFallback(uint256 _amount) public {\r\n        _amount = bound(_amount, 0, address(this).balance);\r\n        (bool success,) = address(weth).call{value: _amount}(\"\");\r\n        require(success, \"ETH send to fallback failed\");\r\n    }\r\n\r\n}\r\n```\r\n\r\nWETH.sol\r\n\r\n```solidity\r\npragma solidity ^0.8.22;\r\n\r\ncontract WETH {\r\n    string public name = \"Wrapped Ether\";\r\n    string public symbol = \"WETH\";\r\n    uint8 public decimals = 18;\r\n\r\n    event Approval(address indexed src, address indexed guy, uint256 wad);\r\n    event Transfer(address indexed src, address indexed dst, uint256 wad);\r\n    event Deposit(address indexed dst, uint256 wad);\r\n    event Withdrawal(address indexed src, uint256 wad);\r\n\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    receive() external payable {\r\n        deposit();\r\n    }\r\n\r\n    function deposit() public payable {\r\n        balanceOf[msg.sender] += msg.value;\r\n        emit Deposit(msg.sender, msg.value);\r\n    }\r\n\r\n    function withdraw(uint256 wad) public {\r\n        balanceOf[msg.sender] -= wad;\r\n        payable(msg.sender).transfer(wad);\r\n        emit Withdrawal(msg.sender, wad);\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function approve(address guy, uint256 wad) public returns (bool) {\r\n        allowance[msg.sender][guy] = wad;\r\n        emit Approval(msg.sender, guy, wad);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address dst, uint256 wad) public returns (bool) {\r\n        return transferFrom(msg.sender, dst, wad);\r\n    }\r\n\r\n    function transferFrom(address src, address dst, uint256 wad)\r\n    public\r\n    returns (bool)\r\n    {\r\n        if (\r\n            src != msg.sender && allowance[src][msg.sender] != type(uint256).max\r\n        ) {\r\n            allowance[src][msg.sender] -= wad;\r\n        }\r\n\r\n        balanceOf[src] -= wad;\r\n        balanceOf[dst] += wad;\r\n\r\n        emit Transfer(src, dst, wad);\r\n\r\n        return true;\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1893638055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1893855217",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6666#issuecomment-1893855217",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6666",
    "id": 1893855217,
    "node_id": "IC_kwDOGBlvNc5w4e_x",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-16T14:26:29Z",
    "updated_at": "2024-01-16T14:27:31Z",
    "author_association": "MEMBER",
    "body": "tysm for the repro @m-waqas88 !\r\n\r\nwith that I was able to track this down #6819\r\n\r\nof course #6666 is a very cursed issue -.-",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1893855217/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
