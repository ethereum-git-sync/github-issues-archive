{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4480",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4480/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4480/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4480/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4480",
  "id": 1610424049,
  "node_id": "I_kwDOGBlvNc5f_R7x",
  "number": 4480,
  "title": "Support Encrypt/Decrypt function with specified private key.",
  "user": {
    "login": "jhweintraub",
    "id": 26035072,
    "node_id": "MDQ6VXNlcjI2MDM1MDcy",
    "avatar_url": "https://avatars.githubusercontent.com/u/26035072?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jhweintraub",
    "html_url": "https://github.com/jhweintraub",
    "followers_url": "https://api.github.com/users/jhweintraub/followers",
    "following_url": "https://api.github.com/users/jhweintraub/following{/other_user}",
    "gists_url": "https://api.github.com/users/jhweintraub/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jhweintraub/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jhweintraub/subscriptions",
    "organizations_url": "https://api.github.com/users/jhweintraub/orgs",
    "repos_url": "https://api.github.com/users/jhweintraub/repos",
    "events_url": "https://api.github.com/users/jhweintraub/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jhweintraub/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-03-05T23:36:54Z",
  "updated_at": "2023-03-29T01:35:51Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nI'm building some things and need to be able to encrypt and decrypt data before passing it as a function parameter. You already allow for signing using a private key with `vm.sign`, I would like two functions \r\n\r\n`decryptMessage(uint256 ownerPrivateKey, bytes message)` and returns the bytes returned from decrypting with ownerPrivateKey\r\n\r\n`encrypt message(uint256 recipientPublicKey, bytes message)` that encrypts `message` using `recipientPublicKey`\r\n\n\n### Additional context\n\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4480/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4480/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1458689783",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4480#issuecomment-1458689783",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4480",
    "id": 1458689783,
    "node_id": "IC_kwDOGBlvNc5W8db3",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-07T19:13:46Z",
    "updated_at": "2023-03-07T19:13:46Z",
    "author_association": "COLLABORATOR",
    "body": "I think this is out of forge's scope and something that makes more sense as an external library, not a native forge feature. There are many ways to encrypt something, each with various tradeoffs, and devs should understand the encryption approach they are using.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1458689783/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1478862190",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4480#issuecomment-1478862190",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4480",
    "id": 1478862190,
    "node_id": "IC_kwDOGBlvNc5YJaVu",
    "user": {
      "login": "jhweintraub",
      "id": 26035072,
      "node_id": "MDQ6VXNlcjI2MDM1MDcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26035072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhweintraub",
      "html_url": "https://github.com/jhweintraub",
      "followers_url": "https://api.github.com/users/jhweintraub/followers",
      "following_url": "https://api.github.com/users/jhweintraub/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhweintraub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhweintraub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhweintraub/subscriptions",
      "organizations_url": "https://api.github.com/users/jhweintraub/orgs",
      "repos_url": "https://api.github.com/users/jhweintraub/repos",
      "events_url": "https://api.github.com/users/jhweintraub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhweintraub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-22T03:12:10Z",
    "updated_at": "2023-03-22T03:12:10Z",
    "author_association": "NONE",
    "body": "How would you suggest going about using this as an external library with foundry?  I think it would be a simple feature to implement to just utilize the ECC secp256k1 curve that Ethereum uses. If I write this functionality in myself would yall consider approving it?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1478862190/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1487824916",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4480#issuecomment-1487824916",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4480",
    "id": 1487824916,
    "node_id": "IC_kwDOGBlvNc5YrmgU",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-29T01:35:35Z",
    "updated_at": "2023-03-29T01:35:35Z",
    "author_association": "COLLABORATOR",
    "body": "I'd recommend using `vm.ffi` and calling out to a script to handle encryption/decryption. In theory adding this as a cheat code is reasonable, but I'm not convinced it's a good idea yet. Can you share more info about your use case? My main concerns are around:\r\n- Adding a cheat code tailored to a use case, when encryption needs vary quite a bit, and now a niche use case needs to be maintained.\r\n- What encryption algorithm are you going to use? You can use ECDH to generate a shared secret but still need to encrypt the data somehow. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1487824916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
