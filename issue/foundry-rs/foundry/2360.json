{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2360",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2360/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2360/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2360/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2360",
  "id": 1307405313,
  "node_id": "I_kwDOGBlvNc5N7WwB",
  "number": 2360,
  "title": "forge audit to check/list all ffi usage",
  "user": {
    "login": "OliverNChalk",
    "id": 11343499,
    "node_id": "MDQ6VXNlcjExMzQzNDk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/11343499?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/OliverNChalk",
    "html_url": "https://github.com/OliverNChalk",
    "followers_url": "https://api.github.com/users/OliverNChalk/followers",
    "following_url": "https://api.github.com/users/OliverNChalk/following{/other_user}",
    "gists_url": "https://api.github.com/users/OliverNChalk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/OliverNChalk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/OliverNChalk/subscriptions",
    "organizations_url": "https://api.github.com/users/OliverNChalk/orgs",
    "repos_url": "https://api.github.com/users/OliverNChalk/repos",
    "events_url": "https://api.github.com/users/OliverNChalk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/OliverNChalk/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2022-07-18T04:55:28Z",
  "updated_at": "2022-08-30T17:09:01Z",
  "closed_at": "2022-08-30T17:09:01Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nPrompted by #2326, it would be good if there was a way to sanity check the ffi usage within a given project. @mds1 pointed out this could be achieved via `grep -r \\\\.ffi`. A `forge audit` command could do something similar but leverage `remappings` to determine where to search for ffi usage.\r\n\r\nWould be good to discuss scope & possible solution space.\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2360/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2360/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1187359959",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2360#issuecomment-1187359959",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2360",
    "id": 1187359959,
    "node_id": "IC_kwDOGBlvNc5GxazX",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-18T13:01:17Z",
    "updated_at": "2022-07-18T13:01:17Z",
    "author_association": "COLLABORATOR",
    "body": "Some ideas on what `forge audit` should include below. IMO the scope of this command should be anything that can result in malicious software on your machine, which means this _excludes_ contract bugs (e.g. we wouldn't run slither or `forge lint` here).\r\n\r\nI'm imagining each item below is its own section of the output that gets printed to the terminal. Probably should support a `--json` formatted output too.\r\n\r\n1. Potentially dangerous cheat codes. This section would report all usage of cheat codes that touch the filesystem. Right now this is `ffi`, `readFile`, `readLine`, `writeFile`, `writeLine`, `closeFile`, `removeFile`. One implementation approach is to simply alias this check to printing results from `grep`, but that assumes `grep` is installed which wouldn't work on windows so we may need another approach (or a conditional approach based on what tools are installed).\r\n2. Known vulnerable solidity dependencies. For everything in the `lib/` folder, check for known vulnerabilities (analogous to `yarn audit` and `cargo audit`, but for contracts). I'm not too familiar with the best way to do this, but I'm guessing the easiest is to just check for security advisories on the specified repo, e.g. see how OZ has [a few](https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories) listed.\r\n3. Known vulnerable node dependencies. Lots of people have a `package.json` in their foundry projects and install deps that way. We can check the lockfile to see if it's yarn or npm, and alias this check to the `npm audit` or `yarn audit` equivalent.\r\n4. Known vulnerable rust dependencies. Same as above, but for `cargo audit` if a `Cargo.lock` file is present.\r\n\r\nMay be worth leaving out the last 2 for simplicity, since user's can run those commands manually when applicable.\r\n\r\n--------\r\n\r\nUsing `audit` as the command name is consistent with similar tools in other ecosystems, but it's also worth considering a different name than `audit`, since most people will associate that with a security review from an auditing firm. Alternative ideas include `forge check`, `forge report`, `forge review`. I think keeping `audit` is ok though since it's a standard name for this type of command.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1187359959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1187811522",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2360#issuecomment-1187811522",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2360",
    "id": 1187811522,
    "node_id": "IC_kwDOGBlvNc5GzJDC",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-18T17:15:52Z",
    "updated_at": "2022-07-18T17:15:52Z",
    "author_association": "MEMBER",
    "body": "how about `forge geiger` that lists all `unsafe` calls?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1187811522/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1204092652",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2360#issuecomment-1204092652",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2360",
    "id": 1204092652,
    "node_id": "IC_kwDOGBlvNc5HxP7s",
    "user": {
      "login": "PatrickAlphaC",
      "id": 54278053,
      "node_id": "MDQ6VXNlcjU0Mjc4MDUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/54278053?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PatrickAlphaC",
      "html_url": "https://github.com/PatrickAlphaC",
      "followers_url": "https://api.github.com/users/PatrickAlphaC/followers",
      "following_url": "https://api.github.com/users/PatrickAlphaC/following{/other_user}",
      "gists_url": "https://api.github.com/users/PatrickAlphaC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PatrickAlphaC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PatrickAlphaC/subscriptions",
      "organizations_url": "https://api.github.com/users/PatrickAlphaC/orgs",
      "repos_url": "https://api.github.com/users/PatrickAlphaC/repos",
      "events_url": "https://api.github.com/users/PatrickAlphaC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PatrickAlphaC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-03T15:18:11Z",
    "updated_at": "2022-08-03T15:18:11Z",
    "author_association": "NONE",
    "body": "Bump ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1204092652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1204149271",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2360#issuecomment-1204149271",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2360",
    "id": 1204149271,
    "node_id": "IC_kwDOGBlvNc5HxdwX",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-03T15:59:10Z",
    "updated_at": "2022-08-03T15:59:10Z",
    "author_association": "MEMBER",
    "body": "@rkrasiuk I think scanning the AST for certain calls would be rather straightforward, right?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1204149271/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1204165427",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2360#issuecomment-1204165427",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2360",
    "id": 1204165427,
    "node_id": "IC_kwDOGBlvNc5Hxhsz",
    "user": {
      "login": "rkrasiuk",
      "id": 25429261,
      "node_id": "MDQ6VXNlcjI1NDI5MjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25429261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkrasiuk",
      "html_url": "https://github.com/rkrasiuk",
      "followers_url": "https://api.github.com/users/rkrasiuk/followers",
      "following_url": "https://api.github.com/users/rkrasiuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkrasiuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkrasiuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkrasiuk/subscriptions",
      "organizations_url": "https://api.github.com/users/rkrasiuk/orgs",
      "repos_url": "https://api.github.com/users/rkrasiuk/repos",
      "events_url": "https://api.github.com/users/rkrasiuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkrasiuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-03T16:10:52Z",
    "updated_at": "2022-08-03T16:11:39Z",
    "author_association": "COLLABORATOR",
    "body": "yes, sir. ffi call specifically should roughly look like\r\n```\r\nFunctionCall(\r\n  _,\r\n  MemberAccess(\r\n    _, Variable(Identifier { loc: _, name: \"Vm\" }), Identifier { loc: _, name: \"ffi\" }\r\n  ),\r\n  [ /* args */ ]\r\n)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1204165427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1204205051",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2360#issuecomment-1204205051",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2360",
    "id": 1204205051,
    "node_id": "IC_kwDOGBlvNc5HxrX7",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-03T16:35:59Z",
    "updated_at": "2022-08-03T16:35:59Z",
    "author_association": "MEMBER",
    "body": "with the existing visitors, this should be very easy to write a scanner for calls, right? we just need a list of calls and some matching code?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1204205051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1204280394",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2360#issuecomment-1204280394",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2360",
    "id": 1204280394,
    "node_id": "IC_kwDOGBlvNc5Hx9xK",
    "user": {
      "login": "rkrasiuk",
      "id": 25429261,
      "node_id": "MDQ6VXNlcjI1NDI5MjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25429261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkrasiuk",
      "html_url": "https://github.com/rkrasiuk",
      "followers_url": "https://api.github.com/users/rkrasiuk/followers",
      "following_url": "https://api.github.com/users/rkrasiuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkrasiuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkrasiuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkrasiuk/subscriptions",
      "organizations_url": "https://api.github.com/users/rkrasiuk/orgs",
      "repos_url": "https://api.github.com/users/rkrasiuk/repos",
      "events_url": "https://api.github.com/users/rkrasiuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkrasiuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-03T17:44:25Z",
    "updated_at": "2022-08-03T17:44:44Z",
    "author_association": "COLLABORATOR",
    "body": "yup, you can write the matched functions & their location into some output buffer and that should be it",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1204280394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
