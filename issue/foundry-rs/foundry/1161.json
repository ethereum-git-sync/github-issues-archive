{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1161",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1161/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1161/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1161/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1161",
  "id": 1189255897,
  "node_id": "I_kwDOGBlvNc5G4prZ",
  "number": 1161,
  "title": "feat: getCode for linked contracts",
  "user": {
    "login": "jparklev",
    "id": 24902242,
    "node_id": "MDQ6VXNlcjI0OTAyMjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/24902242?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jparklev",
    "html_url": "https://github.com/jparklev",
    "followers_url": "https://api.github.com/users/jparklev/followers",
    "following_url": "https://api.github.com/users/jparklev/following{/other_user}",
    "gists_url": "https://api.github.com/users/jparklev/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jparklev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jparklev/subscriptions",
    "organizations_url": "https://api.github.com/users/jparklev/orgs",
    "repos_url": "https://api.github.com/users/jparklev/repos",
    "events_url": "https://api.github.com/users/jparklev/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jparklev/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    },
    {
      "id": 3759719790,
      "node_id": "LA_kwDOGBlvNc7gGMVu",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-low",
      "name": "P-low",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: low"
    },
    {
      "id": 3759720129,
      "node_id": "LA_kwDOGBlvNc7gGMbB",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-hard",
      "name": "D-hard",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: hard"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-04-01T05:24:20Z",
  "updated_at": "2022-04-01T21:50:14Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nThis is quite a niche feature request, I think. But currently it's not possible to use the `getCode` cheatcode with contracts that have linked libraries, so you can't import a local contract using a different solidity version in your tests if it's using one. \r\n\r\n### Additional context\r\n\r\nThe specific use case I ran into was importing a Balancer pool (`0.7.6`) that implemented an oracle using Balancer's [query processor library](https://github.com/balancer-labs/balancer-v2-monorepo/blob/bd197c7d80e712dbcbe362a402156c528ab10bd9/pkg/pool-utils/contracts/oracle/QueryProcessor.sol) into a testing suite of a newer project (`0.8.11`).",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1161/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1161/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1086349158",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1161#issuecomment-1086349158",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1161",
    "id": 1086349158,
    "node_id": "IC_kwDOGBlvNc5AwF9m",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-01T21:38:39Z",
    "updated_at": "2022-04-01T21:38:39Z",
    "author_association": "MEMBER",
    "body": "This adds a lot of complexity to `getCode`. Right now it's a pretty simple \"find the artifact, extract the bytecode\" which requires close to 0 knowledge of how the project is structured and what was compiled.\r\n\r\nThis change would require a lot of information about the project, such as what contracts were compiled, which ones are unlinked, what the bytecode is of those libraries and then linking them.\r\n\r\nSince this is hard I'm marking it https://github.com/gakonst/foundry/labels/D-hard and since the problem is pretty niche, I'm marking this as https://github.com/gakonst/foundry/labels/P-low\r\n\r\nIs there any way you can achieve what you want to achieve *without* using `getCode`? The primary use case for `getCode` (I think, at least) is importing non-Solidity contracts",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1086349158/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1086357131",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1161#issuecomment-1086357131",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1161",
    "id": 1086357131,
    "node_id": "IC_kwDOGBlvNc5AwH6L",
    "user": {
      "login": "jparklev",
      "id": 24902242,
      "node_id": "MDQ6VXNlcjI0OTAyMjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/24902242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jparklev",
      "html_url": "https://github.com/jparklev",
      "followers_url": "https://api.github.com/users/jparklev/followers",
      "following_url": "https://api.github.com/users/jparklev/following{/other_user}",
      "gists_url": "https://api.github.com/users/jparklev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jparklev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jparklev/subscriptions",
      "organizations_url": "https://api.github.com/users/jparklev/orgs",
      "repos_url": "https://api.github.com/users/jparklev/repos",
      "events_url": "https://api.github.com/users/jparklev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jparklev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-01T21:50:14Z",
    "updated_at": "2022-04-01T21:50:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Since this is hard I'm marking it [D-hard](https://github.com/gakonst/foundry/labels/D-hard) and since the problem is pretty niche, I'm marking this as [P-low](https://github.com/gakonst/foundry/labels/P-low)\r\n\r\nYea, sounds v reasonable to me\r\n\r\n> Is there any way you can achieve what you want to achieve without using getCode? \r\n\r\nSince the contract i'm testing against is now live on mainnet, i'm interacting with the deployed code using a mainnet fork, which mostly meets my needs here ~\r\n\r\n> The primary use case for getCode (I think, at least) is importing non-Solidity contracts\r\n\r\nAhh I think it was added for different compiler versions as well! https://github.com/gakonst/foundry/issues/326",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1086357131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
