{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/618",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/618/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/618/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/618/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/618",
  "id": 1117607257,
  "node_id": "I_kwDOGBlvNc5CnVVZ",
  "number": 618,
  "title": "Forge-generated abi lacks \"name\" and \"internalType\" fields when structs are passed as function args",
  "user": {
    "login": "juniorbeef",
    "id": 98562839,
    "node_id": "U_kgDOBd_zFw",
    "avatar_url": "https://avatars.githubusercontent.com/u/98562839?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/juniorbeef",
    "html_url": "https://github.com/juniorbeef",
    "followers_url": "https://api.github.com/users/juniorbeef/followers",
    "following_url": "https://api.github.com/users/juniorbeef/following{/other_user}",
    "gists_url": "https://api.github.com/users/juniorbeef/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/juniorbeef/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/juniorbeef/subscriptions",
    "organizations_url": "https://api.github.com/users/juniorbeef/orgs",
    "repos_url": "https://api.github.com/users/juniorbeef/repos",
    "events_url": "https://api.github.com/users/juniorbeef/events{/privacy}",
    "received_events_url": "https://api.github.com/users/juniorbeef/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759719580,
      "node_id": "LA_kwDOGBlvNc7gGMSc",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-normal",
      "name": "P-normal",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: normal"
    },
    {
      "id": 3759720362,
      "node_id": "LA_kwDOGBlvNc7gGMeq",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-average",
      "name": "D-average",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: average"
    },
    {
      "id": 3777098561,
      "node_id": "LA_kwDOGBlvNc7hIfNB",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-build",
      "name": "Cmd-forge-build",
      "color": "006B75",
      "default": false,
      "description": "Command: forge build"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2022-01-28T16:34:40Z",
  "updated_at": "2022-03-05T19:36:36Z",
  "closed_at": "2022-03-05T19:36:36Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.1.0 (4caf64f 2022-01-28T00:26:02.267938+00:00)\n\n### What command(s) is the bug in?\n\nforge build\n\n### Operating System\n\nmacOS (M1)\n\n### Describe the bug\n\nI am using `forge build` to compile my contracts, and have noticed that the resulting ABI lacks `name` and `internalType` fields (under `inputs/components` in the json) when I pass struct arguments. These fields are present when I just run `solc` directly or when I compile the same contract using hardhat.\r\n\r\nThe forge-produced abi works, but I'm using it with the `ethers-rs` `abigen` macro, and `abigen` produces more ergonomic bindings when these fields are present (you can pass actual rust struct values as args rather than just a tuple), so it would be nice to have them.\r\n\r\nI'd be happy to try fixing this if it would be helpful, but the flow of data from solc through to the forge output wasn't totally obvious to me from a really quick look, so I could use some pointers as to where to look in the source.\r\n\r\nHere's a small example contract:\r\n\r\n\r\n```\r\npragma solidity =0.8.6;\r\n\r\ncontract StructArg {\r\n    struct Arg {\r\n        address addressArg;\r\n        bytes bytesArg;\r\n    }\r\n    function firstAddr(Arg[] calldata args) external pure returns (address){\r\n        return args[0].addressArg;\r\n    }\r\n}\r\n\r\n```\r\n\r\nThis is the ABI produced by forge:\r\n\r\n```\r\n[\r\n    {\r\n      \"type\": \"function\",\r\n      \"name\": \"firstAddr\",\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"struct StructArg.Arg[]\",\r\n          \"name\": \"args\",\r\n          \"type\": \"tuple[]\",\r\n          \"components\": [\r\n            {\r\n              \"type\": \"address\"\r\n            },\r\n            {\r\n              \"type\": \"bytes\"\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"outputs\": [\r\n        {\r\n          \"internalType\": \"address\",\r\n          \"name\": \"\",\r\n          \"type\": \"address\"\r\n        }\r\n      ],\r\n      \"constant\": null,\r\n      \"stateMutability\": \"nonpayable\"\r\n    }\r\n  ]\r\n```\r\n\r\nAnd this is the ABI produced directly by solc (and hardhat):\r\n```\r\n[\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"components\": [\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"addressArg\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"internalType\": \"bytes\",\r\n            \"name\": \"bytesArg\",\r\n            \"type\": \"bytes\"\r\n          }\r\n        ],\r\n        \"internalType\": \"struct StructArg.Arg[]\",\r\n        \"name\": \"args\",\r\n        \"type\": \"tuple[]\"\r\n      }\r\n    ],\r\n    \"name\": \"firstAddr\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"pure\",\r\n    \"type\": \"function\"\r\n  }\r\n]\r\n```\r\n",
  "closed_by": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/618/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/618/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1024490630",
    "html_url": "https://github.com/foundry-rs/foundry/issues/618#issuecomment-1024490630",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/618",
    "id": 1024490630,
    "node_id": "IC_kwDOGBlvNc49EHyG",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-28T18:20:13Z",
    "updated_at": "2022-01-28T18:20:23Z",
    "author_association": "MEMBER",
    "body": "This is most likely something missing in ethers-solc in the ethers-rs repo (https://github.com/gakonst/ethers-rs). Pinging @mattsse as I am not suuuuper comfortable in that crate yet, so he probably has some better insights/pointers for you if you want to try and take this on :slightly_smiling_face: ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1024490630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1024975863",
    "html_url": "https://github.com/foundry-rs/foundry/issues/618#issuecomment-1024975863",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/618",
    "id": 1024975863,
    "node_id": "IC_kwDOGBlvNc49F-P3",
    "user": {
      "login": "joshieDo",
      "id": 93316087,
      "node_id": "U_kgDOBY_j9w",
      "avatar_url": "https://avatars.githubusercontent.com/u/93316087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshieDo",
      "html_url": "https://github.com/joshieDo",
      "followers_url": "https://api.github.com/users/joshieDo/followers",
      "following_url": "https://api.github.com/users/joshieDo/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshieDo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshieDo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshieDo/subscriptions",
      "organizations_url": "https://api.github.com/users/joshieDo/orgs",
      "repos_url": "https://api.github.com/users/joshieDo/repos",
      "events_url": "https://api.github.com/users/joshieDo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshieDo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-29T19:51:32Z",
    "updated_at": "2022-01-29T19:51:32Z",
    "author_association": "COLLABORATOR",
    "body": "Just as a side-note, but it would be great not to include `\"constant\": null,` as well, if null. Although valid abi, there are some services (eg. `graph-node`) that crash if passed that [which I have been removing manually...].\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1024975863/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1024991300",
    "html_url": "https://github.com/foundry-rs/foundry/issues/618#issuecomment-1024991300",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/618",
    "id": 1024991300,
    "node_id": "IC_kwDOGBlvNc49GCBE",
    "user": {
      "login": "brockelmore",
      "id": 31553173,
      "node_id": "MDQ6VXNlcjMxNTUzMTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31553173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brockelmore",
      "html_url": "https://github.com/brockelmore",
      "followers_url": "https://api.github.com/users/brockelmore/followers",
      "following_url": "https://api.github.com/users/brockelmore/following{/other_user}",
      "gists_url": "https://api.github.com/users/brockelmore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brockelmore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brockelmore/subscriptions",
      "organizations_url": "https://api.github.com/users/brockelmore/orgs",
      "repos_url": "https://api.github.com/users/brockelmore/repos",
      "events_url": "https://api.github.com/users/brockelmore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brockelmore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-29T21:39:31Z",
    "updated_at": "2022-01-29T21:39:31Z",
    "author_association": "MEMBER",
    "body": "This is caused upstream in https://github.com/rust-ethereum/ethabi. I think @gakonst had asked them about including internal type information before, but I dont know if he made progress.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1024991300/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1025210837",
    "html_url": "https://github.com/foundry-rs/foundry/issues/618#issuecomment-1025210837",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/618",
    "id": 1025210837,
    "node_id": "IC_kwDOGBlvNc49G3nV",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-30T19:17:28Z",
    "updated_at": "2022-01-30T19:17:28Z",
    "author_association": "MEMBER",
    "body": "Tried to find the issue where we were discussing this, maybe @mattsse remembers? It wasn't clear how we should approach it IIRC",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1025210837/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1025861688",
    "html_url": "https://github.com/foundry-rs/foundry/issues/618#issuecomment-1025861688",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/618",
    "id": 1025861688,
    "node_id": "IC_kwDOGBlvNc49JWg4",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-31T15:10:00Z",
    "updated_at": "2022-01-31T15:10:00Z",
    "author_association": "MEMBER",
    "body": "this is probably due some lossy conversion when we're going from `CompilerOutput` -> `Artifact`\r\n\r\nwill have at the nested components type, we're probably missing something when deserializing.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1025861688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1027860278",
    "html_url": "https://github.com/foundry-rs/foundry/issues/618#issuecomment-1027860278",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/618",
    "id": 1027860278,
    "node_id": "IC_kwDOGBlvNc49Q-c2",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-02T11:49:13Z",
    "updated_at": "2022-02-02T11:49:13Z",
    "author_association": "MEMBER",
    "body": "I looked into this and this happens inside `ethabi::Param`,\r\n\r\na `Param` represents an input in the context of a function, a `Param` stores its `components` as a list of `ParamType` named `kind`\r\n\r\nhttps://github.com/rust-ethereum/ethabi/blob/master/ethabi/src/param.rs#L32-L33\r\n\r\nhttps://github.com/rust-ethereum/ethabi/blob/451d029c69a1fce7c4d57cc117e985a31dc53627/ethabi/src/param_type/param_type.rs#L17-L40\r\n\r\nUnfortunately, a `ParamType` only knows about the `type`, the name and internaltype field is simply omitted when parsing json to `ethabi::Contract`\r\n\r\nSo this is lossy, the only way to mitigate this would be to roll our own `Contract` type",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1027860278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1031008933",
    "html_url": "https://github.com/foundry-rs/foundry/issues/618#issuecomment-1031008933",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/618",
    "id": 1031008933,
    "node_id": "IC_kwDOGBlvNc49c_Kl",
    "user": {
      "login": "juniorbeef",
      "id": 98562839,
      "node_id": "U_kgDOBd_zFw",
      "avatar_url": "https://avatars.githubusercontent.com/u/98562839?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juniorbeef",
      "html_url": "https://github.com/juniorbeef",
      "followers_url": "https://api.github.com/users/juniorbeef/followers",
      "following_url": "https://api.github.com/users/juniorbeef/following{/other_user}",
      "gists_url": "https://api.github.com/users/juniorbeef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juniorbeef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juniorbeef/subscriptions",
      "organizations_url": "https://api.github.com/users/juniorbeef/orgs",
      "repos_url": "https://api.github.com/users/juniorbeef/repos",
      "events_url": "https://api.github.com/users/juniorbeef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juniorbeef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-07T02:20:55Z",
    "updated_at": "2022-02-07T02:20:55Z",
    "author_association": "NONE",
    "body": "Thanks all for taking a look at this. I now see what @mattsse is saying: looks like the actual type info I want gets dropped right on this line:\r\n\r\nhttps://github.com/rust-ethereum/ethabi/blob/6f18e11621d29b6cd978ef39b48fa572b823bb80/ethabi/src/param.rs#L156\r\n\r\nIt seems like ParamType should perhaps have a Param instead of a ParamType here, though I have no idea what else that might end up breaking:\r\n\r\nhttps://github.com/rust-ethereum/ethabi/blob/6f18e11621d29b6cd978ef39b48fa572b823bb80/ethabi/src/param_type/param_type.rs#L39\r\n\r\nIs changing this upstream in ethabi an option? I don't suspect I'll get to it any time soon as I know very little about the eth ABI at the moment, though I'll keep it in mind.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1031008933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1031196436",
    "html_url": "https://github.com/foundry-rs/foundry/issues/618#issuecomment-1031196436",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/618",
    "id": 1031196436,
    "node_id": "IC_kwDOGBlvNc49ds8U",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-07T08:29:15Z",
    "updated_at": "2022-02-07T08:29:22Z",
    "author_association": "MEMBER",
    "body": "I'd give the upstream change a try, even if it causes some small downstream breakage, ethabi is pre-1.0\r\n\r\nIf that's not possible, we have been toying with the idea of re-implementing ethabi in a way that we have more control over its performance and fix any of our issues without causing downstream breakages.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1031196436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1059820661",
    "html_url": "https://github.com/foundry-rs/foundry/issues/618#issuecomment-1059820661",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/618",
    "id": 1059820661,
    "node_id": "IC_kwDOGBlvNc4_K5R1",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-05T19:36:36Z",
    "updated_at": "2022-03-05T19:36:36Z",
    "author_association": "MEMBER",
    "body": "we're emitting the complete abi now",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1059820661/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
