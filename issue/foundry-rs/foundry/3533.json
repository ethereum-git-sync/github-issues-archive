{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3533",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3533/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3533/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3533/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3533",
  "id": 1419539667,
  "node_id": "I_kwDOGBlvNc5UnHTT",
  "number": 3533,
  "title": "vm.prank(<address>) invalidates payable property of address when using forge test --fork-url",
  "user": {
    "login": "adrianriv",
    "id": 35906416,
    "node_id": "MDQ6VXNlcjM1OTA2NDE2",
    "avatar_url": "https://avatars.githubusercontent.com/u/35906416?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/adrianriv",
    "html_url": "https://github.com/adrianriv",
    "followers_url": "https://api.github.com/users/adrianriv/followers",
    "following_url": "https://api.github.com/users/adrianriv/following{/other_user}",
    "gists_url": "https://api.github.com/users/adrianriv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/adrianriv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/adrianriv/subscriptions",
    "organizations_url": "https://api.github.com/users/adrianriv/orgs",
    "repos_url": "https://api.github.com/users/adrianriv/repos",
    "events_url": "https://api.github.com/users/adrianriv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/adrianriv/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-10-22T22:50:45Z",
  "updated_at": "2022-10-24T16:24:23Z",
  "closed_at": "2022-10-24T16:24:23Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (75ca1a8 2022-10-22T00:11:54.268748Z)\n\n### What command(s) is the bug in?\n\nforge test --fork-url\n\n### Operating System\n\nmacOS (Intel)\n\n### Describe the bug\n\nAs the title says, if I run `forge test --fork-url ALCHEMY_KEY` and my contract uses vm.prank(\"0xfoo\") where \"0xfoo\" is a payable address, if I call a contract that sends eth to \"0xfoo\" the transaction reverts.\r\n\r\nA simple contract to reproduce the issue:\r\n`\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport \"forge-std/Test.sol\";\r\n\r\ncontract FreeETH {\r\n    receive() external payable {\r\n    }\r\n    function withdraw(uint _amount, address payable _to) public {\r\n        require(_amount <= address(this).balance);\r\n        _to.transfer(_amount);\r\n    }\r\n}\r\n\r\ncontract FreeETHTest is Test {\r\n    function setUp() public {\r\n    }\r\n\r\n    receive() external payable {\r\n    }\r\n\r\n    function testPrankPayable() public {\r\n        FreeETH freeETH = new FreeETH();\r\n        vm.deal(address(freeETH), 10 ether);\r\n        freeETH.withdraw(1 ether, payable(this));\r\n        assertEq(address(freeETH).balance, 9 ether);\r\n\r\n        address payable liquidatorAddress = payable(0x64187ae08781B09368e6253F9E94951243A493D5);\r\n        vm.prank(liquidatorAddress);\r\n        freeETH.withdraw(2 ether, liquidatorAddress);\r\n        assertEq(address(freeETH).balance, 7 ether);\r\n    }\r\n}\r\n`\r\n\r\nthe stacktrace is:\r\n'\r\nRunning 1 test for test/Example.t.sol:FreeETHTest\r\n[FAIL. Reason: C19] testPrankPayable() (gas: 101946)\r\nTraces:\r\n  [99] FreeETHTest::setUp() \r\n    └─ ← ()\r\n\r\n  [101946] FreeETHTest::testPrankPayable() \r\n    ├─ [50699] → new FreeETH@0xCe71065D4017F316EC606Fe4422e11eB2c47c246\r\n    │   └─ ← 253 bytes of code\r\n    ├─ [0] VM::deal(FreeETH: [0xCe71065D4017F316EC606Fe4422e11eB2c47c246], 10000000000000000000) \r\n    │   └─ ← ()\r\n    ├─ [7273] FreeETH::withdraw(1000000000000000000, FreeETHTest: [0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84]) \r\n    │   ├─ [55] FreeETHTest::fallback{value: 1000000000000000000}() \r\n    │   │   └─ ← ()\r\n    │   └─ ← ()\r\n    ├─ [0] VM::prank(0x64187ae08781B09368e6253F9E94951243A493D5) \r\n    │   └─ ← ()\r\n    ├─ [7471] FreeETH::withdraw(2000000000000000000, 0x64187ae08781B09368e6253F9E94951243A493D5) \r\n    │   ├─ [238] 0x64187ae08781B09368e6253F9E94951243A493D5::fallback{value: 2000000000000000000}() \r\n    │   │   └─ ← \"C19\"\r\n    │   └─ ← \"C19\"\r\n    └─ ← \"C19\"\r\n\r\nTest result: FAILED. 0 passed; 1 failed; finished in 1.09s\r\n\r\nFailing tests:\r\nEncountered 1 failing test in test/Example.t.sol:FreeETHTest\r\n[FAIL. Reason: C19] testPrankPayable() (gas: 101946)'\r\n\r\nrunning `forge test` works as expected.\r\n\r\nHope i'm not missing something silly :)",
  "closed_by": {
    "login": "rkrasiuk",
    "id": 25429261,
    "node_id": "MDQ6VXNlcjI1NDI5MjYx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25429261?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rkrasiuk",
    "html_url": "https://github.com/rkrasiuk",
    "followers_url": "https://api.github.com/users/rkrasiuk/followers",
    "following_url": "https://api.github.com/users/rkrasiuk/following{/other_user}",
    "gists_url": "https://api.github.com/users/rkrasiuk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rkrasiuk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rkrasiuk/subscriptions",
    "organizations_url": "https://api.github.com/users/rkrasiuk/orgs",
    "repos_url": "https://api.github.com/users/rkrasiuk/repos",
    "events_url": "https://api.github.com/users/rkrasiuk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rkrasiuk/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3533/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3533/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1289284317",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3533#issuecomment-1289284317",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3533",
    "id": 1289284317,
    "node_id": "IC_kwDOGBlvNc5M2Ord",
    "user": {
      "login": "rkrasiuk",
      "id": 25429261,
      "node_id": "MDQ6VXNlcjI1NDI5MjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25429261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkrasiuk",
      "html_url": "https://github.com/rkrasiuk",
      "followers_url": "https://api.github.com/users/rkrasiuk/followers",
      "following_url": "https://api.github.com/users/rkrasiuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkrasiuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkrasiuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkrasiuk/subscriptions",
      "organizations_url": "https://api.github.com/users/rkrasiuk/orgs",
      "repos_url": "https://api.github.com/users/rkrasiuk/repos",
      "events_url": "https://api.github.com/users/rkrasiuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkrasiuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-24T16:24:17Z",
    "updated_at": "2022-10-24T16:24:17Z",
    "author_association": "COLLABORATOR",
    "body": "hey, @adrianriv. `address payable` is [a data type](https://docs.soliditylang.org/en/latest/types.html#address) that exists within your code rather than a property of any given address. looking through the source code of `0x64187ae08781B09368e6253F9E94951243A493D5` on mainnet, the `receive` function will not accept incoming ETH transfers unless the sender is WETH. notice that it will revert with `C19` error which is also the error that you can see in your trace. hope this helps, closing the issue as unrelated",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1289284317/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
