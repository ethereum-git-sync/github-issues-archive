{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4751",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4751/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4751/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4751/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4751",
  "id": 1670731788,
  "node_id": "I_kwDOGBlvNc5jlVgM",
  "number": 4751,
  "title": "`cast sig` - param of uint256 and uint return the same selector",
  "user": {
    "login": "0xfarhaan",
    "id": 59924029,
    "node_id": "MDQ6VXNlcjU5OTI0MDI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/59924029?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0xfarhaan",
    "html_url": "https://github.com/0xfarhaan",
    "followers_url": "https://api.github.com/users/0xfarhaan/followers",
    "following_url": "https://api.github.com/users/0xfarhaan/following{/other_user}",
    "gists_url": "https://api.github.com/users/0xfarhaan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0xfarhaan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0xfarhaan/subscriptions",
    "organizations_url": "https://api.github.com/users/0xfarhaan/orgs",
    "repos_url": "https://api.github.com/users/0xfarhaan/repos",
    "events_url": "https://api.github.com/users/0xfarhaan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0xfarhaan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2023-04-17T09:04:08Z",
  "updated_at": "2023-04-17T11:56:53Z",
  "closed_at": "2023-04-17T11:56:53Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nCast\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (04ce078 2023-04-17T00:04:57.209269000Z)\n\n### What command(s) is the bug in?\n\ncast sig\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\nWhen using cast sig with the `uint` param type it returns the same signature as the `uint256` type.\r\n\r\nExample:\r\n`cast sig \"test(uint)\"` returns `0x29e99f07`\r\n`cast sig \"test(uint256)\"` returns `0x29e99f07`\r\n\r\nbut `bytes4(keccak256(\"test(uint)\"))` returns `0x1acb6f77`\r\n\r\nNot sure if this was done on purpose as `uint` is an alias for `uint256` but there is a difference when generating the function selectors. ",
  "closed_by": {
    "login": "0xfarhaan",
    "id": 59924029,
    "node_id": "MDQ6VXNlcjU5OTI0MDI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/59924029?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0xfarhaan",
    "html_url": "https://github.com/0xfarhaan",
    "followers_url": "https://api.github.com/users/0xfarhaan/followers",
    "following_url": "https://api.github.com/users/0xfarhaan/following{/other_user}",
    "gists_url": "https://api.github.com/users/0xfarhaan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0xfarhaan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0xfarhaan/subscriptions",
    "organizations_url": "https://api.github.com/users/0xfarhaan/orgs",
    "repos_url": "https://api.github.com/users/0xfarhaan/repos",
    "events_url": "https://api.github.com/users/0xfarhaan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0xfarhaan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4751/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4751/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1511008978",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4751#issuecomment-1511008978",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4751",
    "id": 1511008978,
    "node_id": "IC_kwDOGBlvNc5aECrS",
    "user": {
      "login": "DaniPopes",
      "id": 57450786,
      "node_id": "MDQ6VXNlcjU3NDUwNzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/57450786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DaniPopes",
      "html_url": "https://github.com/DaniPopes",
      "followers_url": "https://api.github.com/users/DaniPopes/followers",
      "following_url": "https://api.github.com/users/DaniPopes/following{/other_user}",
      "gists_url": "https://api.github.com/users/DaniPopes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DaniPopes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DaniPopes/subscriptions",
      "organizations_url": "https://api.github.com/users/DaniPopes/orgs",
      "repos_url": "https://api.github.com/users/DaniPopes/repos",
      "events_url": "https://api.github.com/users/DaniPopes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DaniPopes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-17T09:29:48Z",
    "updated_at": "2023-04-17T09:29:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is intended since it's just an alias for \"uint256\". (newer versions of?) Solidity does the same, treats \"uint\" and \"uint256\" in a function sig as the same and throws an error if both functions are present in the same contract.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1511008978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1511026637",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4751#issuecomment-1511026637",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4751",
    "id": 1511026637,
    "node_id": "IC_kwDOGBlvNc5aEG_N",
    "user": {
      "login": "0xfarhaan",
      "id": 59924029,
      "node_id": "MDQ6VXNlcjU5OTI0MDI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/59924029?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xfarhaan",
      "html_url": "https://github.com/0xfarhaan",
      "followers_url": "https://api.github.com/users/0xfarhaan/followers",
      "following_url": "https://api.github.com/users/0xfarhaan/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xfarhaan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xfarhaan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xfarhaan/subscriptions",
      "organizations_url": "https://api.github.com/users/0xfarhaan/orgs",
      "repos_url": "https://api.github.com/users/0xfarhaan/repos",
      "events_url": "https://api.github.com/users/0xfarhaan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xfarhaan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-17T09:43:19Z",
    "updated_at": "2023-04-17T09:43:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Whilst I agree if you're using the types directly it differs if you use strings or encodeWithSignature to generate the selector.\r\n\r\nSay you do a low level call: \r\n\r\n`address.call(abi.encodeWithSignature(\"test(uint)\", amount))`\r\n\r\nThe signature this generates for `uint` and `uint256` is different. So if the contract you're calling has the signature `test(uint256)` it won't match the signature we generated above. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1511026637/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1511039436",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4751#issuecomment-1511039436",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4751",
    "id": 1511039436,
    "node_id": "IC_kwDOGBlvNc5aEKHM",
    "user": {
      "login": "DaniPopes",
      "id": 57450786,
      "node_id": "MDQ6VXNlcjU3NDUwNzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/57450786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DaniPopes",
      "html_url": "https://github.com/DaniPopes",
      "followers_url": "https://api.github.com/users/DaniPopes/followers",
      "following_url": "https://api.github.com/users/DaniPopes/following{/other_user}",
      "gists_url": "https://api.github.com/users/DaniPopes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DaniPopes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DaniPopes/subscriptions",
      "organizations_url": "https://api.github.com/users/DaniPopes/orgs",
      "repos_url": "https://api.github.com/users/DaniPopes/repos",
      "events_url": "https://api.github.com/users/DaniPopes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DaniPopes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-17T09:52:51Z",
    "updated_at": "2023-04-17T09:52:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't see where the problem is if Solidity generates \"uint256\" in both cases. You shouldn't be using \"uint\" in the first place, and if you really have to, you can use the manual keccak256",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1511039436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1511047911",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4751#issuecomment-1511047911",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4751",
    "id": 1511047911,
    "node_id": "IC_kwDOGBlvNc5aEMLn",
    "user": {
      "login": "0xfarhaan",
      "id": 59924029,
      "node_id": "MDQ6VXNlcjU5OTI0MDI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/59924029?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xfarhaan",
      "html_url": "https://github.com/0xfarhaan",
      "followers_url": "https://api.github.com/users/0xfarhaan/followers",
      "following_url": "https://api.github.com/users/0xfarhaan/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xfarhaan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xfarhaan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xfarhaan/subscriptions",
      "organizations_url": "https://api.github.com/users/0xfarhaan/orgs",
      "repos_url": "https://api.github.com/users/0xfarhaan/repos",
      "events_url": "https://api.github.com/users/0xfarhaan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xfarhaan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-17T09:58:46Z",
    "updated_at": "2023-04-17T09:59:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't follow this comment? \"I don't see where the problem is if Solidity generates \"uint256\" in both cases.\"\r\n\r\nThe problem is with `cast` in the end the utility shouldn't return the same sig for both `uint` and `uint256` because if you create the selector yourself `bytes4(keccak256(\"test(uint)\"))` vs `bytes4(keccak256(\"test(uint256)\"))` the selectors are different.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1511047911/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1511092258",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4751#issuecomment-1511092258",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4751",
    "id": 1511092258,
    "node_id": "IC_kwDOGBlvNc5aEXAi",
    "user": {
      "login": "DaniPopes",
      "id": 57450786,
      "node_id": "MDQ6VXNlcjU3NDUwNzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/57450786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DaniPopes",
      "html_url": "https://github.com/DaniPopes",
      "followers_url": "https://api.github.com/users/DaniPopes/followers",
      "following_url": "https://api.github.com/users/DaniPopes/following{/other_user}",
      "gists_url": "https://api.github.com/users/DaniPopes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DaniPopes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DaniPopes/subscriptions",
      "organizations_url": "https://api.github.com/users/DaniPopes/orgs",
      "repos_url": "https://api.github.com/users/DaniPopes/repos",
      "events_url": "https://api.github.com/users/DaniPopes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DaniPopes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-17T10:28:59Z",
    "updated_at": "2023-04-17T10:28:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Solidity generates the same ABI for both uint and uint256, namely both are encoded as uint256. \"cast sig\" generates a selector from a solidity function signature by parsing it as such. It is intended that it has the same behaviour as Solidity.\n\nWhat it *doesn't do* is run \"keccak256(bytes4(<sig>))\" as if it were a raw string. If you want that behaviour, you can use this command instead to hash the raw bytes:\n\n```sh\ncast sha3 \"sig()\" | cut -c-6\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1511092258/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1511202283",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4751#issuecomment-1511202283",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4751",
    "id": 1511202283,
    "node_id": "IC_kwDOGBlvNc5aEx3r",
    "user": {
      "login": "0xfarhaan",
      "id": 59924029,
      "node_id": "MDQ6VXNlcjU5OTI0MDI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/59924029?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xfarhaan",
      "html_url": "https://github.com/0xfarhaan",
      "followers_url": "https://api.github.com/users/0xfarhaan/followers",
      "following_url": "https://api.github.com/users/0xfarhaan/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xfarhaan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xfarhaan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xfarhaan/subscriptions",
      "organizations_url": "https://api.github.com/users/0xfarhaan/orgs",
      "repos_url": "https://api.github.com/users/0xfarhaan/repos",
      "events_url": "https://api.github.com/users/0xfarhaan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xfarhaan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-17T11:56:49Z",
    "updated_at": "2023-04-17T11:56:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing issue, above makes sense. Thanks @DaniPopes ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1511202283/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
