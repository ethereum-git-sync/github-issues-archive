{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1901",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1901/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1901/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1901/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1901",
  "id": 1267181776,
  "node_id": "I_kwDOGBlvNc5Lh6jQ",
  "number": 1901,
  "title": "Limit fuzz runs to possible inputs",
  "user": {
    "login": "0xmikko",
    "id": 26343374,
    "node_id": "MDQ6VXNlcjI2MzQzMzc0",
    "avatar_url": "https://avatars.githubusercontent.com/u/26343374?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0xmikko",
    "html_url": "https://github.com/0xmikko",
    "followers_url": "https://api.github.com/users/0xmikko/followers",
    "following_url": "https://api.github.com/users/0xmikko/following{/other_user}",
    "gists_url": "https://api.github.com/users/0xmikko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0xmikko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0xmikko/subscriptions",
    "organizations_url": "https://api.github.com/users/0xmikko/orgs",
    "repos_url": "https://api.github.com/users/0xmikko/repos",
    "events_url": "https://api.github.com/users/0xmikko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0xmikko/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3394554570,
      "node_id": "LA_kwDOGBlvNc7KVMrK",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-fuzzing",
      "name": "A-fuzzing",
      "color": "FBCA04",
      "default": false,
      "description": "Area: fuzzing"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759719790,
      "node_id": "LA_kwDOGBlvNc7gGMVu",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-low",
      "name": "P-low",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: low"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-06-10T07:41:46Z",
  "updated_at": "2023-02-26T22:21:35Z",
  "closed_at": "2023-02-26T22:21:35Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (6130af7 2022-04-07T00:08:44.543037+00:00)\n\n### What command(s) is the bug in?\n\nforge test\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\nThe problem is connected with fuzzing testing. \r\nWe use `bool` parameter to cover possible test. So, some of our tests looks so:\r\n\r\n```solidity=\r\nfunction test_ACV1_2_05_remove_liquidity_works_as_expected(bool multicall)\r\n        public;\r\n```\r\nSo, as you can see there are only 2 options to check: true or false, btw, it passes through 256 test or the quantity is set in env var. \r\n\r\nPlease, check the max possible options to limit fuzzing.",
  "closed_by": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1901/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1901/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1152507180",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1901#issuecomment-1152507180",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1901",
    "id": 1152507180,
    "node_id": "IC_kwDOGBlvNc5Esd0s",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-10T15:55:28Z",
    "updated_at": "2022-06-10T15:55:40Z",
    "author_association": "MEMBER",
    "body": "you're of course right\r\n\r\nit should be possible to implement full coverage for arguments that allow it",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1152507180/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1152554726",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1901#issuecomment-1152554726",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1901",
    "id": 1152554726,
    "node_id": "IC_kwDOGBlvNc5Espbm",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-10T16:53:27Z",
    "updated_at": "2022-06-10T16:53:27Z",
    "author_association": "COLLABORATOR",
    "body": "> it should be possible to implement full coverage for arguments that allow it\r\n\r\nThis is true in the case of `bool` here, as well as other cases like a single `uint8` or with two `bool` inputs. But this doesn't scale well because you'd basically need to hardcode a set of signatures for which foundry says \"don't use regular fuzz rules, instead enumerate all inputs if the user's number of fuzz runs allow it\".\r\n\r\nIdeas for approaches that might scale better:\r\n- Use a table test format: #858 \r\n- Use a library like [solidity-generators](https://github.com/mds1/solidity-generators) to generate your test arrays and loop over it as a concrete test instead of a fuzz test\r\n- Architect your tests differently, such as:\r\n\r\n```solidity\r\n// This is the actual test foundry executes.\r\nfunction test_ACV1_2_05_remove_liquidity_works_as_expected() public {\r\n  _test_ACV1_2_05_remove_liquidity_works_as_expected(true);\r\n  _test_ACV1_2_05_remove_liquidity_works_as_expected(false);\r\n}\r\n\r\n// Actual test logic and assertions here.\r\nfunction _test_ACV1_2_05_remove_liquidity_works_as_expected(bool) internal {\r\n    // --- snip ---\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1152554726/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169505584",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1901#issuecomment-1169505584",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1901",
    "id": 1169505584,
    "node_id": "IC_kwDOGBlvNc5FtT0w",
    "user": {
      "login": "OliverNChalk",
      "id": 11343499,
      "node_id": "MDQ6VXNlcjExMzQzNDk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/11343499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OliverNChalk",
      "html_url": "https://github.com/OliverNChalk",
      "followers_url": "https://api.github.com/users/OliverNChalk/followers",
      "following_url": "https://api.github.com/users/OliverNChalk/following{/other_user}",
      "gists_url": "https://api.github.com/users/OliverNChalk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OliverNChalk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OliverNChalk/subscriptions",
      "organizations_url": "https://api.github.com/users/OliverNChalk/orgs",
      "repos_url": "https://api.github.com/users/OliverNChalk/repos",
      "events_url": "https://api.github.com/users/OliverNChalk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OliverNChalk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-29T03:54:23Z",
    "updated_at": "2022-06-29T03:54:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would it not be possible to check the number of possible combinations basis the byte-size of the function arguments? E.g. if you have a signature of:\r\n```solidity\r\nfunc(bool,bool)\r\n```\r\nyou have 2 bits of possible inputs, ergo 4 cases. Similarly, if you have:\r\n```solidity\r\nfunc(uint8,uint8)\r\n```\r\nyou have 16 bits = 65536 possible combinations. So in this case, 256 fuzz runs can only cover 8 bits of input information. Assuming most people won't fuzz more than `10_000` times in their CI runs, it would only be possible to exhaustively cover ~13 bits of input. The question would then be is it worth implementing a secondary strategy that generally won't cover more than 13-16 bits of input.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169505584/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169593196",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1901#issuecomment-1169593196",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1901",
    "id": 1169593196,
    "node_id": "IC_kwDOGBlvNc5FtpNs",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-29T06:40:46Z",
    "updated_at": "2022-06-29T06:41:00Z",
    "author_association": "MEMBER",
    "body": "We just don't have a way currently to limit the fuzz runs based on input size. As to feasibility with our current setup I couldn't tell, we'd need to check the proptest docs :) But yes, the general idea you outlined applies",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169593196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1212420544",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1901#issuecomment-1212420544",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1901",
    "id": 1212420544,
    "node_id": "IC_kwDOGBlvNc5IRBHA",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-11T19:48:50Z",
    "updated_at": "2022-08-11T19:48:50Z",
    "author_association": "MEMBER",
    "body": "I've investigated more and it is not possible to do with proptest. We would essentially need to manually calculate the input space and forego using proptest all together if the number of possible inputs is less than the number of fuzz runs and just do a loop instead.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1212420544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1445483461",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1901#issuecomment-1445483461",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1901",
    "id": 1445483461,
    "node_id": "IC_kwDOGBlvNc5WKFPF",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-26T22:21:35Z",
    "updated_at": "2023-02-26T22:21:35Z",
    "author_association": "COLLABORATOR",
    "body": "Going to close this since it would be difficult to implement with the current fuzz architecture, afaik it's not a feature of most other fuzzers, and there are workarounds described above to get similar behavior",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1445483461/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
