{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1475",
  "id": 1224285784,
  "node_id": "I_kwDOGBlvNc5I-R5Y",
  "number": 1475,
  "title": "Print return value for `forge run`",
  "user": {
    "login": "pcaversaccio",
    "id": 25297591,
    "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pcaversaccio",
    "html_url": "https://github.com/pcaversaccio",
    "followers_url": "https://api.github.com/users/pcaversaccio/followers",
    "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
    "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
    "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
    "repos_url": "https://api.github.com/users/pcaversaccio/repos",
    "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759719790,
      "node_id": "LA_kwDOGBlvNc7gGMVu",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-low",
      "name": "P-low",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: low"
    },
    {
      "id": 3759720362,
      "node_id": "LA_kwDOGBlvNc7gGMeq",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-average",
      "name": "D-average",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: average"
    },
    {
      "id": 3776975605,
      "node_id": "LA_kwDOGBlvNc7hIBL1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-debug",
      "name": "Cmd-forge-debug",
      "color": "006B75",
      "default": false,
      "description": "Command: forge run"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2022-05-03T15:56:25Z",
  "updated_at": "2022-05-13T00:33:26Z",
  "closed_at": "2022-05-13T00:33:26Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nPrint the return values for `returns` functions when using `forge run`.\r\n\r\n### Additional context\r\n\r\nAn example function:\r\n```solidity\r\nfunction greater(uint256 a) view external returns (uint256 gasUsed) {\r\n    uint256 startGas = gasleft();\r\n    require(a > 0, \"!a > 0\");\r\n    gasUsed = startGas - gasleft();\r\n}\r\n```\r\n\r\nNow if I e.g. run:\r\n```bash\r\nforge run --optimize --optimizer-runs 200 --use 0.8.13 --via-ir GasTesting.sol --sig \"greater(uint256)\" 0x64\r\n```\r\n\r\nit should print the value of `gasUsed`.",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1119631948",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1475#issuecomment-1119631948",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475",
    "id": 1119631948,
    "node_id": "IC_kwDOGBlvNc5CvDpM",
    "user": {
      "login": "jtriley-eth",
      "id": 41972979,
      "node_id": "MDQ6VXNlcjQxOTcyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/41972979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtriley-eth",
      "html_url": "https://github.com/jtriley-eth",
      "followers_url": "https://api.github.com/users/jtriley-eth/followers",
      "following_url": "https://api.github.com/users/jtriley-eth/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtriley-eth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtriley-eth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtriley-eth/subscriptions",
      "organizations_url": "https://api.github.com/users/jtriley-eth/orgs",
      "repos_url": "https://api.github.com/users/jtriley-eth/repos",
      "events_url": "https://api.github.com/users/jtriley-eth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtriley-eth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-06T13:36:40Z",
    "updated_at": "2022-05-06T13:36:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Working on this. What is the preferred printing format? Currently, I'm printing the returned data using\r\n\r\n`println!(\"{:?}\", returned_data)`\r\n\r\n```\r\n[⠘] Compiling...\r\n[⠊] Compiling 1 files with 0.8.13\r\n[⠒] Solc 0.8.13 finished in 100.44ms\r\nCompiler run successful\r\nScript ran successfully.\r\nGas used: 220\r\nResult: b\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\x1d\"\r\n== Logs ==\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1119631948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1119668285",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1475#issuecomment-1119668285",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475",
    "id": 1119668285,
    "node_id": "IC_kwDOGBlvNc5CvMg9",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-06T14:13:14Z",
    "updated_at": "2022-05-06T14:13:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Awesome, thx for working on this issue - well I would suggest having something like the following:\r\n```bash\r\n[⠘] Compiling...\r\n[⠊] Compiling 1 files with 0.8.13\r\n[⠒] Solc 0.8.13 finished in 100.44ms\r\nCompiler run successful\r\nScript ran successfully.\r\nGas used: 220\r\n== Result ==\r\n0: <type>: <variable_name> <return_value>\r\n1: <type>: <variable_name> <return_value>\r\n⋮\r\n== Logs ==\r\n```\r\n\r\nSo let's say you have a function like that:\r\n```solidity\r\nfunction bar(uint256 x) external view returns (bool result, uint256 gasUsed) {\r\n    uint256 startGas = gasleft();\r\n    assembly {\r\n        result := iszero(x)\r\n    }\r\n    gasUsed = startGas - gasleft();\r\n    return (result, gasUsed);\r\n}\r\n```\r\n\r\nThe output could look like this (similar to Remix):\r\n\r\n```bash\r\n[⠘] Compiling...\r\n[⠊] Compiling 1 files with 0.8.13\r\n[⠒] Solc 0.8.13 finished in 100.44ms\r\nCompiler run successful\r\nScript ran successfully.\r\nGas used: 220\r\n== Result ==\r\n0: bool: result true\r\n1: uint256: gasUsed 18\r\n== Logs ==\r\n```\r\n\r\n@onbjerg what do you think?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1119668285/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1121762423",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1475#issuecomment-1121762423",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475",
    "id": 1121762423,
    "node_id": "IC_kwDOGBlvNc5C3Lx3",
    "user": {
      "login": "jtriley-eth",
      "id": 41972979,
      "node_id": "MDQ6VXNlcjQxOTcyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/41972979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtriley-eth",
      "html_url": "https://github.com/jtriley-eth",
      "followers_url": "https://api.github.com/users/jtriley-eth/followers",
      "following_url": "https://api.github.com/users/jtriley-eth/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtriley-eth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtriley-eth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtriley-eth/subscriptions",
      "organizations_url": "https://api.github.com/users/jtriley-eth/orgs",
      "repos_url": "https://api.github.com/users/jtriley-eth/repos",
      "events_url": "https://api.github.com/users/jtriley-eth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtriley-eth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-10T01:12:32Z",
    "updated_at": "2022-05-10T01:12:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "So on digging into how the function is getting called, there doesn't seem to be a straight forward way of getting the function's return types, since `run` is just encoding the calldata using arguments from the command line then passing it to the runtime bytecode. The way this is being done doesn't seem to involve fetching the contract ABI.\r\n\r\nOne way to enable return data decoding could be to include an option such as `--decode (<return_types>)` to decode the return data.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1121762423/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1121992747",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1475#issuecomment-1121992747",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475",
    "id": 1121992747,
    "node_id": "IC_kwDOGBlvNc5C4EAr",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-10T06:45:01Z",
    "updated_at": "2022-05-10T20:46:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JoshuaTrujillo15 since we compile the contract before running the script, we could simply retrieve the ABI beforehand under the hood using `solc Contract.sol --combined-json abi,bin` (adding the flag `abi`)? The `bin` code is anyhow used somehow to deploy the contract locally iirc.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1121992747/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1122340606",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1475#issuecomment-1122340606",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475",
    "id": 1122340606,
    "node_id": "IC_kwDOGBlvNc5C5Y7-",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-10T12:41:58Z",
    "updated_at": "2022-05-10T12:41:58Z",
    "author_association": "MEMBER",
    "body": "> So on digging into how the function is getting called, there doesn't seem to be a straight forward way of getting the function's return types, since `run` is just encoding the calldata using arguments from the command line then passing it to the runtime bytecode. The way this is being done doesn't seem to involve fetching the contract ABI.\r\n> \r\n> One way to enable return data decoding could be to include an option such as `--decode (<return_types>)` to decode the return data.\r\n\r\nIf you pass `--sig \"myFunc(uint256)(uint256)\"` it will be parsed into a function that takes a `uint256` and returns a `uint256` - this information should be possible to get in `forge run`. For raw calldata it will not be possible",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1122340606/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1123016943",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1475#issuecomment-1123016943",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475",
    "id": 1123016943,
    "node_id": "IC_kwDOGBlvNc5C7-Dv",
    "user": {
      "login": "jtriley-eth",
      "id": 41972979,
      "node_id": "MDQ6VXNlcjQxOTcyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/41972979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtriley-eth",
      "html_url": "https://github.com/jtriley-eth",
      "followers_url": "https://api.github.com/users/jtriley-eth/followers",
      "following_url": "https://api.github.com/users/jtriley-eth/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtriley-eth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtriley-eth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtriley-eth/subscriptions",
      "organizations_url": "https://api.github.com/users/jtriley-eth/orgs",
      "repos_url": "https://api.github.com/users/jtriley-eth/repos",
      "events_url": "https://api.github.com/users/jtriley-eth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtriley-eth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-10T23:40:27Z",
    "updated_at": "2022-05-10T23:40:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "I found a way to get the function ABI without adding any additional commands. The `Token` enum that gets printed below seems to print numbers as hexadecimal, but not in an appropriate hexadecimal format. This seems to be because of how `fmt` is implemented for `Token`.\r\n```\r\n== Result ==\r\n0: bool      true\r\n1: int256    ff\r\n2: uint256   2\r\n3: address   0000000000000000000000000000000000000003\r\n4: bytes32   0000000000000000000000000000000000000000000000000000000000000004\r\n5: bytes     \r\n6: string    test\r\n7: uint8[]   []\r\n```\r\nIt seems the best way to get this formatted is to run a match against every `Token` type and append the appropriate prefix, since some types such as string just print naturally, but this may be overkill for a single feature. Thoughts?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1123016943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1123277135",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1475#issuecomment-1123277135",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475",
    "id": 1123277135,
    "node_id": "IC_kwDOGBlvNc5C89lP",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-11T07:20:34Z",
    "updated_at": "2022-05-11T07:20:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think running a match against every `Token` type and appending the appropriate prefix _and_ converting them appropriately (e.g. `hex` to `int`) significantly impacts the overall speed. I don't see another way tbh (changing the implemented `fmt` approach is not the way to go IMHO). Also, we probably need to test thoroughly every type to assure that e.g. strings are always naturally printed. @onbjerg @gakonst you know much more about the inner workings of Foundry - what would be your recommendation here?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1123277135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1124008582",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1475#issuecomment-1124008582",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475",
    "id": 1124008582,
    "node_id": "IC_kwDOGBlvNc5C_wKG",
    "user": {
      "login": "zk-tarts",
      "id": 78189066,
      "node_id": "MDQ6VXNlcjc4MTg5MDY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/78189066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zk-tarts",
      "html_url": "https://github.com/zk-tarts",
      "followers_url": "https://api.github.com/users/zk-tarts/followers",
      "following_url": "https://api.github.com/users/zk-tarts/following{/other_user}",
      "gists_url": "https://api.github.com/users/zk-tarts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zk-tarts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zk-tarts/subscriptions",
      "organizations_url": "https://api.github.com/users/zk-tarts/orgs",
      "repos_url": "https://api.github.com/users/zk-tarts/repos",
      "events_url": "https://api.github.com/users/zk-tarts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zk-tarts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-11T16:46:21Z",
    "updated_at": "2022-05-11T16:46:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just chipping in to say that if you run forge run with verbosity over 4\r\n```bash\r\nforge run $input -vvvv \r\n```\r\nThe functions return value will be contained within the logs. So you could build off that functionality if you wanted just the final return value to be printed out at the end.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1124008582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1124020651",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1475#issuecomment-1124020651",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475",
    "id": 1124020651,
    "node_id": "IC_kwDOGBlvNc5C_zGr",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-11T16:59:38Z",
    "updated_at": "2022-05-11T16:59:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@zk-tarts that's awesome input! just tested it and it works: \r\n\r\n![image](https://user-images.githubusercontent.com/25297591/167905643-e1137369-d194-482d-9569-efee052c97f7.png)\r\n\r\ndo you know by chance what are the output formats within the logs for e.g. `string`, arrays & co.? \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1124020651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1124135249",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1475#issuecomment-1124135249",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475",
    "id": 1124135249,
    "node_id": "IC_kwDOGBlvNc5DAPFR",
    "user": {
      "login": "zk-tarts",
      "id": 78189066,
      "node_id": "MDQ6VXNlcjc4MTg5MDY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/78189066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zk-tarts",
      "html_url": "https://github.com/zk-tarts",
      "followers_url": "https://api.github.com/users/zk-tarts/followers",
      "following_url": "https://api.github.com/users/zk-tarts/following{/other_user}",
      "gists_url": "https://api.github.com/users/zk-tarts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zk-tarts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zk-tarts/subscriptions",
      "organizations_url": "https://api.github.com/users/zk-tarts/orgs",
      "repos_url": "https://api.github.com/users/zk-tarts/repos",
      "events_url": "https://api.github.com/users/zk-tarts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zk-tarts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-11T18:15:37Z",
    "updated_at": "2022-05-11T18:16:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "> do you know by chance what are the output formats within the logs for e.g. `string`, arrays & co.?\r\n\r\nstring outputs as a quoted string, arrays should be output as the comma seperated values surrounded by square brackets",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1124135249/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1124243422",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1475#issuecomment-1124243422",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475",
    "id": 1124243422,
    "node_id": "IC_kwDOGBlvNc5DApfe",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-11T20:11:35Z",
    "updated_at": "2022-05-11T20:12:03Z",
    "author_association": "MEMBER",
    "body": "> I don't think running a match against every Token type and appending the appropriate prefix and converting them appropriately (e.g. hex to int) significantly impacts the overall speed. I don't see another way tbh (changing the implemented fmt approach is not the way to go IMHO). Also, we probably need to test thoroughly every type to assure that e.g. strings are always naturally printed. @onbjerg @gakonst you know much more about the inner workings of Foundry - what would be your recommendation here?\r\n\r\nBelieve that's what we do here regarding conversion: https://github.com/foundry-rs/foundry/blob/master/utils/src/lib.rs#L750-L773, so maybe worth just calling this?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1124243422/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1124881277",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1475#issuecomment-1124881277",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475",
    "id": 1124881277,
    "node_id": "IC_kwDOGBlvNc5DDFN9",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-12T11:33:17Z",
    "updated_at": "2022-05-12T11:33:17Z",
    "author_association": "MEMBER",
    "body": "As @gakonst said you can use `format_token` to display the return values etc. You can get the output tokens using [this](https://docs.rs/ethers/latest/ethers/abi/struct.Function.html#method.decode_output) function from ethers-rs\r\n\r\n>Also, we probably need to test thoroughly every type to assure that e.g. strings are always naturally printed\r\n\r\nThis is tested in ethers-rs (and ethabi?), not sure if there is much value in duplicating that here.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1124881277/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1125417693",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1475#issuecomment-1125417693",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475",
    "id": 1125417693,
    "node_id": "IC_kwDOGBlvNc5DFILd",
    "user": {
      "login": "jtriley-eth",
      "id": 41972979,
      "node_id": "MDQ6VXNlcjQxOTcyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/41972979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtriley-eth",
      "html_url": "https://github.com/jtriley-eth",
      "followers_url": "https://api.github.com/users/jtriley-eth/followers",
      "following_url": "https://api.github.com/users/jtriley-eth/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtriley-eth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtriley-eth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtriley-eth/subscriptions",
      "organizations_url": "https://api.github.com/users/jtriley-eth/orgs",
      "repos_url": "https://api.github.com/users/jtriley-eth/repos",
      "events_url": "https://api.github.com/users/jtriley-eth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtriley-eth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-12T21:01:23Z",
    "updated_at": "2022-05-12T21:01:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Awesome, thank you all for your help! I'll have a PR up soon. 🤘 ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1125417693/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1125424167",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1475#issuecomment-1125424167",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475",
    "id": 1125424167,
    "node_id": "IC_kwDOGBlvNc5DFJwn",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-12T21:07:27Z",
    "updated_at": "2022-05-12T21:07:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "LFG 💥",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1125424167/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1125538145",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1475#issuecomment-1125538145",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1475",
    "id": 1125538145,
    "node_id": "IC_kwDOGBlvNc5DFllh",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-13T00:20:14Z",
    "updated_at": "2022-05-13T00:20:14Z",
    "author_association": "MEMBER",
    "body": "Fixed in https://github.com/foundry-rs/foundry/pull/1592",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1125538145/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
