{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/111",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/111/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/111/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/111/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/111",
  "id": 1031863382,
  "node_id": "I_kwDOGBlvNc49gPxW",
  "number": 111,
  "title": "Any directory named `lib` in contracts dir throws error",
  "user": {
    "login": "brockelmore",
    "id": 31553173,
    "node_id": "MDQ6VXNlcjMxNTUzMTcz",
    "avatar_url": "https://avatars.githubusercontent.com/u/31553173?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brockelmore",
    "html_url": "https://github.com/brockelmore",
    "followers_url": "https://api.github.com/users/brockelmore/followers",
    "following_url": "https://api.github.com/users/brockelmore/following{/other_user}",
    "gists_url": "https://api.github.com/users/brockelmore/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brockelmore/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brockelmore/subscriptions",
    "organizations_url": "https://api.github.com/users/brockelmore/orgs",
    "repos_url": "https://api.github.com/users/brockelmore/repos",
    "events_url": "https://api.github.com/users/brockelmore/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brockelmore/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-10-20T21:56:58Z",
  "updated_at": "2021-11-17T01:50:16Z",
  "closed_at": "2021-11-17T01:50:16Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "When you have a structure like this:\r\n```\r\n./\r\n|->lib\r\n|->src\r\n      |-> lib\r\n      |-> my_thing\r\n...\r\n```\r\n\r\nThe automated remapping tries to treat the `./src/lib` directory as a remapping directory and will likely fail because of that (seen [here](https://github.com/gakonst/dapptools-rs/blob/b5555f910096929125a51e797d85b7a6b6c8bf36/dapptools/src/utils.rs#L85-L98)). I don't know upstream ramifications of a change like this, but it is one option:\r\n```\r\n /// Gets all the remappings detected\r\n    pub fn find_many(path: &str) -> eyre::Result<Vec<Self>> {\r\n        let path = std::path::Path::new(path);\r\n\r\n        if let Ok(paths) = std::fs::read_dir(path) {\r\n            let remappings = paths\r\n                .into_iter()\r\n                // TODO: Surely there must be a better way to convert to str\r\n                .map(|path| Self::find(&path?.path().display().to_string()))\r\n                // Do we want to silently ignore the errors?\r\n                .filter_map(|x| x.ok())\r\n                .collect();\r\n            Ok(remappings)\r\n        } else {\r\n            Ok(vec![])\r\n        }\r\n    }\r\n```\r\n\r\nBasically just ignore any errors when remapping fails for a directory. This would likely hide error associated with other remappings?\r\n",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/111/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/111/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/948095883",
    "html_url": "https://github.com/foundry-rs/foundry/issues/111#issuecomment-948095883",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/111",
    "id": 948095883,
    "node_id": "IC_kwDOGBlvNc44gsuL",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-20T22:54:10Z",
    "updated_at": "2021-10-20T22:54:10Z",
    "author_association": "MEMBER",
    "body": "So the error is really because `path` does not exist and hence `std::fs::read_dir(path)` fails?\r\n\r\nI briefly looked at this https://github.com/dapphub/dapptools/blob/b8958a0f01f8f2bde0b489e9793e86e3a8f9a044/src/dapp/libexec/dapp/dapp-remappings, which seems to recursively visit folders and skip those mappings which [do not exist?](https://github.com/dapphub/dapptools/blob/b8958a0f01f8f2bde0b489e9793e86e3a8f9a044/src/dapp/libexec/dapp/dapp-remappings#L22-L25)\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/948095883/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/971071493",
    "html_url": "https://github.com/foundry-rs/foundry/issues/111#issuecomment-971071493",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/111",
    "id": 971071493,
    "node_id": "IC_kwDOGBlvNc454WAF",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-17T01:50:15Z",
    "updated_at": "2021-11-17T01:50:15Z",
    "author_association": "MEMBER",
    "body": "This should no longer be the case since https://github.com/gakonst/dapptools-rs/pull/130. Could you please re-run with your same test and re-open if still an issue?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/971071493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
