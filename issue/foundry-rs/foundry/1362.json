{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1362",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1362/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1362/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1362/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1362",
  "id": 1208551010,
  "node_id": "I_kwDOGBlvNc5ICQZi",
  "number": 1362,
  "title": "forge create, cast call/send returns an error message saying transaction did not go through, even though it did",
  "user": {
    "login": "holma91",
    "id": 64333867,
    "node_id": "MDQ6VXNlcjY0MzMzODY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/64333867?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/holma91",
    "html_url": "https://github.com/holma91",
    "followers_url": "https://api.github.com/users/holma91/followers",
    "following_url": "https://api.github.com/users/holma91/following{/other_user}",
    "gists_url": "https://api.github.com/users/holma91/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/holma91/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/holma91/subscriptions",
    "organizations_url": "https://api.github.com/users/holma91/orgs",
    "repos_url": "https://api.github.com/users/holma91/repos",
    "events_url": "https://api.github.com/users/holma91/events{/privacy}",
    "received_events_url": "https://api.github.com/users/holma91/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3334394235,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjM1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0052CC",
      "default": true,
      "description": "Good for newcomers"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759719580,
      "node_id": "LA_kwDOGBlvNc7gGMSc",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-normal",
      "name": "P-normal",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: normal"
    },
    {
      "id": 3759720552,
      "node_id": "LA_kwDOGBlvNc7gGMho",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-easy",
      "name": "D-easy",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: easy"
    },
    {
      "id": 3777109787,
      "node_id": "LA_kwDOGBlvNc7hIh8b",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-create",
      "name": "Cmd-forge-create",
      "color": "006B75",
      "default": false,
      "description": "Command: forge create"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2022-04-19T15:50:34Z",
  "updated_at": "2022-07-01T18:49:00Z",
  "closed_at": "2022-07-01T18:48:59Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge, Cast\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (90617a5 2022-04-12T00:13:04.257461+00:00)\n\n### What command(s) is the bug in?\n\nforge create, cast call, cast send\n\n### Operating System\n\nmacOS (M1)\n\n### Describe the bug\n\nrunning `forge create --rpc-url $my_rpc --private-key $my_pk src/Contract.sol:Contract`\r\n\r\nwith this contract:\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.13;\r\n\r\ncontract Contract {\r\n    uint256 public a;\r\n\r\n    constructor() {\r\n        a = 1 + 2;\r\n    }\r\n}\r\n```\r\ngives me this error message:\r\n```txt\r\n[â †] Compiling...\r\nCompiler run successful\r\nError: \r\n   0: Contract was not deployed\r\n\r\nLocation:\r\n   cli/src/cmd/forge/create.rs:194\r\n\r\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\r\nRun with RUST_BACKTRACE=full to include source snippets.\r\n```\r\nHowever if I go to my address on etherscan, the contract was deployed. I get this output from forge create around 80% of the time, and the expected \"successful deployment\" message 20% of the time.\r\n\r\nIf I instead run like this\r\n```txt\r\nRUST_LOG=ethers_providers=trace forge create --rpc-url $rpc_rinkeby --private-key $pk src/Contract.sol:Contract\r\n```\r\nthis line stands out to me:\r\n```txt\r\n2022-04-19T15:40:36.326634Z DEBUG ethers_providers::pending_transaction: Dropped from mempool, pending tx 0xe1856bc98482d2d60b6e2def894d2241dc1314e28746662399157454437506fe\r\n```\r\nEssentially the same happens if I use cast call or cast send, for example this command:\r\n```txt\r\ncast call <address> \"a()(uint)\" --rpc-url $my_rpc\r\n```\r\nresults in:\r\n```txt\r\nreceipt not found when polling pending tx. was the transaction dropped from the mempool?\r\n```\r\neven though the message call went through. (exactly the same issue with cast send)",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1362/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1362/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1105663059",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1362#issuecomment-1105663059",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1362",
    "id": 1105663059,
    "node_id": "IC_kwDOGBlvNc5B5xRT",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-21T19:21:09Z",
    "updated_at": "2022-04-22T02:01:48Z",
    "author_association": "MEMBER",
    "body": "This is more of an [`ethers-rs`](https://github.com/gakonst/ethers-rs/) issue since that is where we get the provider from. Out of curiosity, what RPC do you use (alchemy, infura etc), and is your internet connection spotty?\r\n\r\nFor a fix in Forge, we should consider doing what casts does and emit a warning when we think the transaction has been dropped, so the user can check for themselves: https://github.com/foundry-rs/foundry/blob/92427e73b75e41c50d1d0afef85ae32454cd1cfe/cast/src/lib.rs#L600\r\n\r\nAlso looping in @mattsse, maybe he has some ideas for fixing this in ethers\r\n\r\nEdit: Ah, I see some of these are cast commands. If cast returns that message, then it basically just means that the node you are talking to has no knowledge of the transaction. This can happen if the node is out of sync, but sometimes it's just because the node has not received the transaction yet.\r\n\r\nWe should make the `ContractError::ContractNotDeployed` variant a bit more robust - currently, if we think the transaction was dropped from the mempool then we just assume the contract was not deployed, which might not be the case",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1105663059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1106578404",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1362#issuecomment-1106578404",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1362",
    "id": 1106578404,
    "node_id": "IC_kwDOGBlvNc5B9Qvk",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-22T14:34:25Z",
    "updated_at": "2022-04-22T14:35:59Z",
    "author_association": "MEMBER",
    "body": "yeh this mempool related,\r\nthe core problem is that `PendingTransaction` can't distinguish between a tx that's temporarily unavailable or actually dropped from the mempool, depending on the node you're connecting to. But I think we made some improvements on that front some time ago, but rinkeby was always not really reliable\r\n\r\nthis is rather an issue in ether's `PendingTransaction` impl I believe\r\n\r\ncc @prestwich ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1106578404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1106950009",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1362#issuecomment-1106950009",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1362",
    "id": 1106950009,
    "node_id": "IC_kwDOGBlvNc5B-rd5",
    "user": {
      "login": "prestwich",
      "id": 10149425,
      "node_id": "MDQ6VXNlcjEwMTQ5NDI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10149425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestwich",
      "html_url": "https://github.com/prestwich",
      "followers_url": "https://api.github.com/users/prestwich/followers",
      "following_url": "https://api.github.com/users/prestwich/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestwich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestwich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestwich/subscriptions",
      "organizations_url": "https://api.github.com/users/prestwich/orgs",
      "repos_url": "https://api.github.com/users/prestwich/repos",
      "events_url": "https://api.github.com/users/prestwich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestwich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-22T22:28:57Z",
    "updated_at": "2022-04-22T22:28:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah, I'm somewhat at a loss as to how to improve it. Maybe a grace period of n attempts before it assumes the tx was dropped?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1106950009/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107396851",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1362#issuecomment-1107396851",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1362",
    "id": 1107396851,
    "node_id": "IC_kwDOGBlvNc5CAYjz",
    "user": {
      "login": "holma91",
      "id": 64333867,
      "node_id": "MDQ6VXNlcjY0MzMzODY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/64333867?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holma91",
      "html_url": "https://github.com/holma91",
      "followers_url": "https://api.github.com/users/holma91/followers",
      "following_url": "https://api.github.com/users/holma91/following{/other_user}",
      "gists_url": "https://api.github.com/users/holma91/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holma91/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holma91/subscriptions",
      "organizations_url": "https://api.github.com/users/holma91/orgs",
      "repos_url": "https://api.github.com/users/holma91/repos",
      "events_url": "https://api.github.com/users/holma91/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holma91/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T06:41:46Z",
    "updated_at": "2022-04-23T06:41:46Z",
    "author_association": "NONE",
    "body": "> This is more of an [`ethers-rs`](https://github.com/gakonst/ethers-rs/) issue since that is where we get the provider from. Out of curiosity, what RPC do you use (alchemy, infura etc), and is your internet connection spotty?\r\n> \r\n> For a fix in Forge, we should consider doing what casts does and emit a warning when we think the transaction has been dropped, so the user can check for themselves:\r\n> \r\n> https://github.com/foundry-rs/foundry/blob/92427e73b75e41c50d1d0afef85ae32454cd1cfe/cast/src/lib.rs#L600\r\n> \r\n> Also looping in @mattsse, maybe he has some ideas for fixing this in ethers\r\n> \r\n> Edit: Ah, I see some of these are cast commands. If cast returns that message, then it basically just means that the node you are talking to has no knowledge of the transaction. This can happen if the node is out of sync, but sometimes it's just because the node has not received the transaction yet.\r\n> \r\n> We should make the `ContractError::ContractNotDeployed` variant a bit more robust - currently, if we think the transaction was dropped from the mempool then we just assume the contract was not deployed, which might not be the case\r\n\r\ngood internet connection, and have tested with different rpcs (alchemy, infura and quicknode) with the same results. Mainly on rinkeby!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107396851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107414533",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1362#issuecomment-1107414533",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1362",
    "id": 1107414533,
    "node_id": "IC_kwDOGBlvNc5CAc4F",
    "user": {
      "login": "prestwich",
      "id": 10149425,
      "node_id": "MDQ6VXNlcjEwMTQ5NDI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10149425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestwich",
      "html_url": "https://github.com/prestwich",
      "followers_url": "https://api.github.com/users/prestwich/followers",
      "following_url": "https://api.github.com/users/prestwich/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestwich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestwich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestwich/subscriptions",
      "organizations_url": "https://api.github.com/users/prestwich/orgs",
      "repos_url": "https://api.github.com/users/prestwich/repos",
      "events_url": "https://api.github.com/users/prestwich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestwich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T07:37:11Z",
    "updated_at": "2022-04-23T07:37:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mattsse @onbjerg I'm doing some research. ethers.js uses this code to wait for a transaction\r\n\r\nhttps://github.com/ethers-io/ethers.js/blob/bc400c7b87b03438abb2f9874ec136dbf7b6437c/packages/providers/src.ts/base-provider.ts#L1273-L1405\r\n\r\nI'm traveling and it might take me a bit to parse the promise spaghetti. Generally the flow of the logic looks to be scanning each incoming block for the tx or its replacement. which is just... great ðŸ˜… ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107414533/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107428614",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1362#issuecomment-1107428614",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1362",
    "id": 1107428614,
    "node_id": "IC_kwDOGBlvNc5CAgUG",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T08:20:44Z",
    "updated_at": "2022-04-23T08:20:44Z",
    "author_association": "MEMBER",
    "body": "-.-\r\nthat's one way to do it, they also check for replacements.\r\n\r\n> Maybe a grace period of n attempts before it assumes the tx was dropped?\r\n\r\nthat's probably an easier fix for us, maybe with a retry counter or something",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107428614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107429982",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1362#issuecomment-1107429982",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1362",
    "id": 1107429982,
    "node_id": "IC_kwDOGBlvNc5CAgpe",
    "user": {
      "login": "prestwich",
      "id": 10149425,
      "node_id": "MDQ6VXNlcjEwMTQ5NDI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10149425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestwich",
      "html_url": "https://github.com/prestwich",
      "followers_url": "https://api.github.com/users/prestwich/followers",
      "following_url": "https://api.github.com/users/prestwich/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestwich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestwich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestwich/subscriptions",
      "organizations_url": "https://api.github.com/users/prestwich/orgs",
      "repos_url": "https://api.github.com/users/prestwich/repos",
      "events_url": "https://api.github.com/users/prestwich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestwich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T08:25:00Z",
    "updated_at": "2022-04-23T08:25:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "could do something like a loop querying `get_transaction_count` for both latest and pending? compare those numbers to see if any txns have confirmed with the expected nonce?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107429982/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107471858",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1362#issuecomment-1107471858",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1362",
    "id": 1107471858,
    "node_id": "IC_kwDOGBlvNc5CAq3y",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T13:25:58Z",
    "updated_at": "2022-04-23T13:25:58Z",
    "author_association": "MEMBER",
    "body": "I think a grace period makes more sense. FWIW I've heard of multiple people having this issue on some testnets, in particular Rinkeby, so perhaps it's just a Rinkeby thing",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107471858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1172623941",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1362#issuecomment-1172623941",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1362",
    "id": 1172623941,
    "node_id": "IC_kwDOGBlvNc5F5NJF",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-01T18:48:59Z",
    "updated_at": "2022-07-01T18:48:59Z",
    "author_association": "MEMBER",
    "body": "This should have been fixed in https://github.com/gakonst/ethers-rs/issues/1221, let us know if it is not!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1172623941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
