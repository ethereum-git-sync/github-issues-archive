{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5012",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5012/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5012/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5012/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5012",
  "id": 1722150383,
  "node_id": "I_kwDOGBlvNc5mpe3v",
  "number": 5012,
  "title": "Forge: `forge selectors` feature request meta issue",
  "user": {
    "login": "lmanini",
    "id": 58728166,
    "node_id": "MDQ6VXNlcjU4NzI4MTY2",
    "avatar_url": "https://avatars.githubusercontent.com/u/58728166?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lmanini",
    "html_url": "https://github.com/lmanini",
    "followers_url": "https://api.github.com/users/lmanini/followers",
    "following_url": "https://api.github.com/users/lmanini/following{/other_user}",
    "gists_url": "https://api.github.com/users/lmanini/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lmanini/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lmanini/subscriptions",
    "organizations_url": "https://api.github.com/users/lmanini/orgs",
    "repos_url": "https://api.github.com/users/lmanini/repos",
    "events_url": "https://api.github.com/users/lmanini/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lmanini/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-05-23T14:00:57Z",
  "updated_at": "2023-05-31T18:12:15Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nMain feature I'd like to add is a cmd to check for colliding method selectors between two given contracts.\r\n@mds1 suggested to implement a `forge selectors` cmd and have the following initial subcommands:\r\n- `forge selector collision` for what my original PR does\r\n- `forge selector list <options>` to list function selectors and/or error selectors and/or event sigs for certain/all files in a project\r\n- `forge selector upload` to replace `forge upload-selectors`\r\n\n\n### Additional context\n\ncontext: #4973 ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5012/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5012/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1559533268",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5012#issuecomment-1559533268",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5012",
    "id": 1559533268,
    "node_id": "IC_kwDOGBlvNc5c9JbU",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-23T14:30:13Z",
    "updated_at": "2023-05-23T14:30:13Z",
    "author_association": "COLLABORATOR",
    "body": "Thanks for opening this @lmanini. I'll defer to @mattsse and @Evalir but in the interest of keeping PRs easy to review/test, my suggestion would be as follows:\r\n\r\nThe first PR just structures things:\r\n- Adds the `forge selectors` subcommand with a `forge selectors upload` command that duplicates the `forge upload-selectors` functionality\r\n- Adds a warning to `forge upload-selectors` that it's deprecated and will be removed in v1 (cc @Evalir)\r\n\r\nThen follow up PRs for:\r\n- `forge selectors collision <ContractA> <ContractB>. Should be able to just specify contract names if there's no duplicate names, or use the `ContractA.sol:ContractA` when there are duplicates. Should exit with an error on collision and print the colliding signatures and their selectors\r\n- `forge selectors list` prints all function selectors, error selectors, and event signatures for the src directory\r\n    - Supports additive `--functions`, `--errors`, `--events` flags to specify a subset of the above, e.g. if you only want error selectors\r\n    - Supports `--contracts <ContractA> <ContractB> ...` flag for limiting the contracts it's printed for\r\n    - I'm open to other syntaxes/UX for the CLI args here\r\n\r\n(Also I think `forge selectors`, plural, is better than `forge selector`, singular)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1559533268/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1570680687",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5012#issuecomment-1570680687",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5012",
    "id": 1570680687,
    "node_id": "IC_kwDOGBlvNc5dnq9v",
    "user": {
      "login": "lmanini",
      "id": 58728166,
      "node_id": "MDQ6VXNlcjU4NzI4MTY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/58728166?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmanini",
      "html_url": "https://github.com/lmanini",
      "followers_url": "https://api.github.com/users/lmanini/followers",
      "following_url": "https://api.github.com/users/lmanini/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmanini/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmanini/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmanini/subscriptions",
      "organizations_url": "https://api.github.com/users/lmanini/orgs",
      "repos_url": "https://api.github.com/users/lmanini/repos",
      "events_url": "https://api.github.com/users/lmanini/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmanini/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-31T18:04:50Z",
    "updated_at": "2023-05-31T18:04:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Should exit with an error on collision and print the colliding signatures and their selectors\r\n\r\nIs there an example of how this should be handled? I was thinking of just doing a `shell::println(Paint::red(...))`. Do you have something else in mind?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1570680687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1570687528",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5012#issuecomment-1570687528",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5012",
    "id": 1570687528,
    "node_id": "IC_kwDOGBlvNc5dnsoo",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-31T18:09:22Z",
    "updated_at": "2023-05-31T18:09:22Z",
    "author_association": "COLLABORATOR",
    "body": "`std::process::exit(1)` will exit the process with exit code 1 which indicates an error. So just call that after printing the relevant info\r\n\r\nhttps://github.com/foundry-rs/foundry/blob/cae66aa8dd246b6707f682a1481ea494b8240526/common/src/compile.rs#L168",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1570687528/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1570692331",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5012#issuecomment-1570692331",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5012",
    "id": 1570692331,
    "node_id": "IC_kwDOGBlvNc5dntzr",
    "user": {
      "login": "lmanini",
      "id": 58728166,
      "node_id": "MDQ6VXNlcjU4NzI4MTY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/58728166?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmanini",
      "html_url": "https://github.com/lmanini",
      "followers_url": "https://api.github.com/users/lmanini/followers",
      "following_url": "https://api.github.com/users/lmanini/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmanini/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmanini/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmanini/subscriptions",
      "organizations_url": "https://api.github.com/users/lmanini/orgs",
      "repos_url": "https://api.github.com/users/lmanini/repos",
      "events_url": "https://api.github.com/users/lmanini/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmanini/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-31T18:12:15Z",
    "updated_at": "2023-05-31T18:12:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "oh ok haha - just started off with rust, still got a long way to go",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1570692331/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
