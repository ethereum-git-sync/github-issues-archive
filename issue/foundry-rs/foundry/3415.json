{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3415",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3415/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3415/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3415/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3415",
  "id": 1391131468,
  "node_id": "I_kwDOGBlvNc5S6vtM",
  "number": 3415,
  "title": "Unable to build arrays to feed in as function input parameters within test.",
  "user": {
    "login": "ZrowGz",
    "id": 80988768,
    "node_id": "MDQ6VXNlcjgwOTg4NzY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/80988768?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZrowGz",
    "html_url": "https://github.com/ZrowGz",
    "followers_url": "https://api.github.com/users/ZrowGz/followers",
    "following_url": "https://api.github.com/users/ZrowGz/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZrowGz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZrowGz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZrowGz/subscriptions",
    "organizations_url": "https://api.github.com/users/ZrowGz/orgs",
    "repos_url": "https://api.github.com/users/ZrowGz/repos",
    "events_url": "https://api.github.com/users/ZrowGz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZrowGz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2022-09-29T16:09:34Z",
  "updated_at": "2023-04-11T20:30:18Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (98fa895 2022-09-28T00:16:57.000625Z)\n\n### What command(s) is the bug in?\n\nforge test --match-test $(test) --fork-url ${MAINNET_RPC_URL} -vvvv\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\nAlso using forge test --match-contract  and forked.\r\n\r\nAttempting to build two arrays within the test, to then feed into the function call as input parameters. I run the forge test command & it compiles no problem. After that it just hangs, doesn't crash, and begins utilizing massive amounts of system resources (6-15gb ram, 500+ gb wired memory, 100% cpu). \r\n\r\nThis is the function being called with these inputs:\r\n![Screen Shot 2022-09-29 at 09 01 47](https://user-images.githubusercontent.com/80988768/193081358-34f01c9d-ffb9-4be0-9186-1e53fe2d5ab9.png)\r\n\r\nThis is the getter function that builds the second array of addresses based on the first (this works too):\r\n![Screen Shot 2022-09-29 at 09 02 44](https://user-images.githubusercontent.com/80988768/193081525-49700126-9977-4a32-bc87-509fa1f8928d.png)\r\n\r\nThis is all this being put together within the test:\r\n![Screen Shot 2022-09-29 at 09 04 47](https://user-images.githubusercontent.com/80988768/193081939-d66f2513-08cd-4ae1-b9ab-2c6388085627.png)\r\n\r\n\r\nThe arrays build correctly (console logs from that first part, assertEq's don't fail either): \r\n![Screen Shot 2022-09-29 at 09 05 12](https://user-images.githubusercontent.com/80988768/193082034-651303ea-11ca-4332-a592-5a00b904e3d6.png)\r\n\r\nWhen I uncomment the createMultipleStrategyVault function, it compiles:\r\n![Screen Shot 2022-09-29 at 09 06 59](https://user-images.githubusercontent.com/80988768/193082392-c649a29f-527d-44f6-afa6-d7d5057a96b6.png)\r\n\r\nThen eats up system resources until I ctrl+c:\r\n![2022-09-28 18 53 03](https://user-images.githubusercontent.com/80988768/193082702-02647558-cf17-4f73-bfc6-d0610c951d2c.jpg)\r\n![Screen Shot 2022-09-29 at 09 08 44](https://user-images.githubusercontent.com/80988768/193082789-939b5014-5d8c-42c4-9ca9-719dba90c838.png)\r\n\r\n\r\nI have tried switching the input param values from calldata to memory also, but no change.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3415/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3415/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1262524777",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3415#issuecomment-1262524777",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3415",
    "id": 1262524777,
    "node_id": "IC_kwDOGBlvNc5LQJlp",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-29T16:32:32Z",
    "updated_at": "2022-09-29T16:33:56Z",
    "author_association": "MEMBER",
    "body": "thanks for flagging.\r\n\r\ncould you please dump these functions as clear text here?\r\n\r\nthis is definitely tracing related (-vvvv)\r\n\r\nwhat's the length of `_strategyIds` here?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1262524777/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1262626870",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3415#issuecomment-1262626870",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3415",
    "id": 1262626870,
    "node_id": "IC_kwDOGBlvNc5LQig2",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-29T18:01:39Z",
    "updated_at": "2022-09-29T18:01:39Z",
    "author_association": "MEMBER",
    "body": "cc @shekhirin my best guess at this point is that the loop here makes the tracer very memory-hungry.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1262626870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1262688118",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3415#issuecomment-1262688118",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3415",
    "id": 1262688118,
    "node_id": "IC_kwDOGBlvNc5LQxd2",
    "user": {
      "login": "shekhirin",
      "id": 5773434,
      "node_id": "MDQ6VXNlcjU3NzM0MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5773434?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shekhirin",
      "html_url": "https://github.com/shekhirin",
      "followers_url": "https://api.github.com/users/shekhirin/followers",
      "following_url": "https://api.github.com/users/shekhirin/following{/other_user}",
      "gists_url": "https://api.github.com/users/shekhirin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shekhirin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shekhirin/subscriptions",
      "organizations_url": "https://api.github.com/users/shekhirin/orgs",
      "repos_url": "https://api.github.com/users/shekhirin/repos",
      "events_url": "https://api.github.com/users/shekhirin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shekhirin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-29T18:55:31Z",
    "updated_at": "2022-09-29T19:11:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "> what's the length of _strategyIds here?\r\n\r\nseem to be just `1` because of these parts?\r\n<img width=\"238\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5773434/193121416-c41073ab-44ee-4415-8d78-2f9e4e86b3ce.png\">\r\n<img width=\"777\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5773434/193121185-acffea31-03ad-4a60-8a32-7f3a50ec0f08.png\">\r\n\r\n\r\n\r\n> this is definitely tracing related (-vvvv)\r\n\r\nsounds like that, but i'd say it's not related to steps tracing because iiuc any verbosity level in `forge test` doesn't enable steps tracing\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1262688118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1262709642",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3415#issuecomment-1262709642",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3415",
    "id": 1262709642,
    "node_id": "IC_kwDOGBlvNc5LQ2uK",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-29T19:16:02Z",
    "updated_at": "2022-09-29T19:18:58Z",
    "author_association": "MEMBER",
    "body": "![image](https://user-images.githubusercontent.com/19890894/193122030-8d340a30-25f0-43d5-81ea-39068338879d.png)\r\nah here it is.\r\n\r\nbtw, you can't rely on assertEq if it hangs, because failures are only evaluated after the test ends, by checking the fail flag in DSTest.\r\n\r\n\r\nwould need to debug this.\r\n\r\nwhat do you get if you enable logs `RUST_LOG=forge,foundry_evm forge test....` ?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1262709642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1262711565",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3415#issuecomment-1262711565",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3415",
    "id": 1262711565,
    "node_id": "IC_kwDOGBlvNc5LQ3MN",
    "user": {
      "login": "shekhirin",
      "id": 5773434,
      "node_id": "MDQ6VXNlcjU3NzM0MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5773434?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shekhirin",
      "html_url": "https://github.com/shekhirin",
      "followers_url": "https://api.github.com/users/shekhirin/followers",
      "following_url": "https://api.github.com/users/shekhirin/following{/other_user}",
      "gists_url": "https://api.github.com/users/shekhirin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shekhirin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shekhirin/subscriptions",
      "organizations_url": "https://api.github.com/users/shekhirin/orgs",
      "repos_url": "https://api.github.com/users/shekhirin/repos",
      "events_url": "https://api.github.com/users/shekhirin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shekhirin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-29T19:18:10Z",
    "updated_at": "2022-09-29T19:18:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "> When I uncomment the createMultipleStrategyVault function, it compiles:\r\n\r\ndoes it run until the end with `createMultipleStrategyVault` commented?\r\n\r\nalso, is there any expensive computation inside that `createMultipleStrategyVault` function? ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1262711565/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1374907833",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3415#issuecomment-1374907833",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3415",
    "id": 1374907833,
    "node_id": "IC_kwDOGBlvNc5R8225",
    "user": {
      "login": "ZrowGz",
      "id": 80988768,
      "node_id": "MDQ6VXNlcjgwOTg4NzY4",
      "avatar_url": "https://avatars.githubusercontent.com/u/80988768?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ZrowGz",
      "html_url": "https://github.com/ZrowGz",
      "followers_url": "https://api.github.com/users/ZrowGz/followers",
      "following_url": "https://api.github.com/users/ZrowGz/following{/other_user}",
      "gists_url": "https://api.github.com/users/ZrowGz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ZrowGz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ZrowGz/subscriptions",
      "organizations_url": "https://api.github.com/users/ZrowGz/orgs",
      "repos_url": "https://api.github.com/users/ZrowGz/repos",
      "events_url": "https://api.github.com/users/ZrowGz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ZrowGz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-08T19:19:57Z",
    "updated_at": "2023-01-08T19:19:57Z",
    "author_association": "NONE",
    "body": "It turned out the unchecked version of i ++ for the array loop wasn't cutting off once it went through the array.length. \r\n\r\nI removed that unchecked part and just did the normal way, this fixed it. BUT, it still seems like it may have been a bug that it didn't catch the cutoff? Or maybe since it was a dynamic array with 2 values, it thought the length was actually type(uint256).max?\r\n\r\nI think that it would have stopped after the two values were looped through.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1374907833/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1504050714",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3415#issuecomment-1504050714",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3415",
    "id": 1504050714,
    "node_id": "IC_kwDOGBlvNc5Zpf4a",
    "user": {
      "login": "jdbertron",
      "id": 1455998,
      "node_id": "MDQ6VXNlcjE0NTU5OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1455998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdbertron",
      "html_url": "https://github.com/jdbertron",
      "followers_url": "https://api.github.com/users/jdbertron/followers",
      "following_url": "https://api.github.com/users/jdbertron/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdbertron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdbertron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdbertron/subscriptions",
      "organizations_url": "https://api.github.com/users/jdbertron/orgs",
      "repos_url": "https://api.github.com/users/jdbertron/repos",
      "events_url": "https://api.github.com/users/jdbertron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdbertron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-11T20:30:18Z",
    "updated_at": "2023-04-11T20:30:18Z",
    "author_association": "NONE",
    "body": "Can you elaborate on what you did exactly ?  \r\n\"I removed that unchecked part and just did the normal way, this fixed it.\"  is pretty vague. \r\nI have a similar situation, and I agree it must be a bug. \r\nDid you have to add a condition inside the loop to break out of it ? ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1504050714/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
