{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6506",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6506/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6506/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6506/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6506",
  "id": 2022273423,
  "node_id": "I_kwDOGBlvNc54iXGP",
  "number": 6506,
  "title": "Incorrect bytecode after linking breaks verification",
  "user": {
    "login": "klkvr",
    "id": 62447812,
    "node_id": "MDQ6VXNlcjYyNDQ3ODEy",
    "avatar_url": "https://avatars.githubusercontent.com/u/62447812?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/klkvr",
    "html_url": "https://github.com/klkvr",
    "followers_url": "https://api.github.com/users/klkvr/followers",
    "following_url": "https://api.github.com/users/klkvr/following{/other_user}",
    "gists_url": "https://api.github.com/users/klkvr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/klkvr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/klkvr/subscriptions",
    "organizations_url": "https://api.github.com/users/klkvr/orgs",
    "repos_url": "https://api.github.com/users/klkvr/repos",
    "events_url": "https://api.github.com/users/klkvr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/klkvr/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-12-03T00:54:32Z",
  "updated_at": "2023-12-03T01:02:12Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [ ] Foundry\n- [ ] Foundryup\n\n### What version of Foundry are you on?\n\n_No response_\n\n### What command(s) is the bug in?\n\n_No response_\n\n### Operating System\n\nNone\n\n### Describe the bug\n\nVerification of the following script will not complete in full:\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport {Script, console2} from \"forge-std/Script.sol\";\r\n\r\nlibrary Lib1 {\r\n    function f() external {}\r\n}\r\n\r\nlibrary Lib2 {\r\n    function f() external {}\r\n}\r\n\r\nlibrary Lib3 {\r\n    function f() external {}\r\n}\r\n\r\n\r\ncontract Contract1 {\r\n    function f() external {\r\n        Lib1.f();\r\n        Lib2.f();\r\n    }\r\n}\r\n\r\ncontract Contract2 {\r\n    function f() external {\r\n        Lib1.f();\r\n        Lib3.f();\r\n    }\r\n}\r\n\r\ncontract Deploy is Script {\r\n    function run() public {\r\n        vm.startBroadcast();\r\n        new Contract1();\r\n        new Contract2();\r\n    }\r\n}\r\n```\r\n\r\nOutput will say `We haven't found any matching bytecode for the following contracts: [<Contract2_Address>]`\r\n\r\nI've been debugging this for some time and it seems that somehow bytecodes for Contract1 and Deploy contracts end up as they should be, however bytecode for Contract2 has Lib1 address in place, but instead of Lib3 address it has Lib2 address.\r\n\r\nAlso, when resuming script, all contracts are getting verified normally. I think that it happens because when resuming the script, library addresses are taken from `sequence.libraries` and no library addresses are getting computed using sender and nonce.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6506/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6506/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1837297453",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6506#issuecomment-1837297453",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6506",
    "id": 1837297453,
    "node_id": "IC_kwDOGBlvNc5tgu8t",
    "user": {
      "login": "klkvr",
      "id": 62447812,
      "node_id": "MDQ6VXNlcjYyNDQ3ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/62447812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klkvr",
      "html_url": "https://github.com/klkvr",
      "followers_url": "https://api.github.com/users/klkvr/followers",
      "following_url": "https://api.github.com/users/klkvr/following{/other_user}",
      "gists_url": "https://api.github.com/users/klkvr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klkvr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klkvr/subscriptions",
      "organizations_url": "https://api.github.com/users/klkvr/orgs",
      "repos_url": "https://api.github.com/users/klkvr/repos",
      "events_url": "https://api.github.com/users/klkvr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klkvr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-03T01:02:11Z",
    "updated_at": "2023-12-03T01:02:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "It worth mentioning that deployement bytecode is computed correctly for the target contract (script contract) and all contracts which are getting deployed in it. This issue affects only artifacts which are used in `VerifyBundle.known_contracts` to match deployed bytecodes with artifacts for verification.\r\n\r\nBut it seems that in general `link_with_nonce_or_address` is able to link contracts to invalid libraries. And it is not clear if it can result in bugs when contracts will be deployed with incorrect libraries which is much worse than just failed verification",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1837297453/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
