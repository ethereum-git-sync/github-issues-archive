{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3805",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3805/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3805/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3805/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3805",
  "id": 1471775654,
  "node_id": "I_kwDOGBlvNc5XuYOm",
  "number": 3805,
  "title": "`forge test --debug` hangs on large-ish memory expansion",
  "user": {
    "login": "karmacoma-eth",
    "id": 85039585,
    "node_id": "MDQ6VXNlcjg1MDM5NTg1",
    "avatar_url": "https://avatars.githubusercontent.com/u/85039585?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karmacoma-eth",
    "html_url": "https://github.com/karmacoma-eth",
    "followers_url": "https://api.github.com/users/karmacoma-eth/followers",
    "following_url": "https://api.github.com/users/karmacoma-eth/following{/other_user}",
    "gists_url": "https://api.github.com/users/karmacoma-eth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karmacoma-eth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karmacoma-eth/subscriptions",
    "organizations_url": "https://api.github.com/users/karmacoma-eth/orgs",
    "repos_url": "https://api.github.com/users/karmacoma-eth/repos",
    "events_url": "https://api.github.com/users/karmacoma-eth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karmacoma-eth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703753247,
      "node_id": "LA_kwDOGBlvNc7cwsof",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-debugger",
      "name": "A-debugger",
      "color": "FBCA04",
      "default": false,
      "description": "Area: debugger"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-12-01T18:45:10Z",
  "updated_at": "2022-12-22T11:37:03Z",
  "closed_at": "2022-12-01T23:01:31Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (f6361e6 2022-12-01T15:20:08.643454Z)\n\n### What command(s) is the bug in?\n\nforge test --debug testCheckMem\n\n### Operating System\n\nmacOS (Intel)\n\n### Describe the bug\n\nUsing the following test:\r\n\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport \"forge-std/Test.sol\";\r\n\r\ncontract MemTest is Test {\r\n    function setUp() public view {}\r\n\r\n    function testCheckMem() public {\r\n        uint256 _ptr = 1e6;\r\n        uint256 val;\r\n        assembly {\r\n            mstore(_ptr, 1)\r\n            val := mload(_ptr)\r\n        }\r\n\r\n        assertEq(val, 1);\r\n    }\r\n}\r\n```\r\n\r\nRun `forge test --debug testCheckMem`, then `G` to go to the end of the execution.\r\n\r\nThe `forge` process now stays stuck on 100% for 5+ minutes, even without further interactions with the debugger.",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3805/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3805/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1334197070",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3805#issuecomment-1334197070",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3805",
    "id": 1334197070,
    "node_id": "IC_kwDOGBlvNc5PhjtO",
    "user": {
      "login": "karmacoma-eth",
      "id": 85039585,
      "node_id": "MDQ6VXNlcjg1MDM5NTg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/85039585?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karmacoma-eth",
      "html_url": "https://github.com/karmacoma-eth",
      "followers_url": "https://api.github.com/users/karmacoma-eth/followers",
      "following_url": "https://api.github.com/users/karmacoma-eth/following{/other_user}",
      "gists_url": "https://api.github.com/users/karmacoma-eth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karmacoma-eth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karmacoma-eth/subscriptions",
      "organizations_url": "https://api.github.com/users/karmacoma-eth/orgs",
      "repos_url": "https://api.github.com/users/karmacoma-eth/repos",
      "events_url": "https://api.github.com/users/karmacoma-eth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karmacoma-eth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-01T18:46:49Z",
    "updated_at": "2022-12-01T18:46:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "A process sample suggests that forge is continuously allocating and moving memory with plenty of calls such as \r\n\r\n`_malloc_zone_malloc  (in libsystem_malloc.dylib) `\r\n`_platform_memmove$VARIANT$Haswell  (in libsystem_platform.dylib)`",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1334197070/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1334199240",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3805#issuecomment-1334199240",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3805",
    "id": 1334199240,
    "node_id": "IC_kwDOGBlvNc5PhkPI",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-01T18:49:04Z",
    "updated_at": "2022-12-01T18:49:04Z",
    "author_association": "MEMBER",
    "body": "@brockelmore any ideas or suggestions where to start debugging this?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1334199240/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1334525007",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3805#issuecomment-1334525007",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3805",
    "id": 1334525007,
    "node_id": "IC_kwDOGBlvNc5PizxP",
    "user": {
      "login": "brockelmore",
      "id": 31553173,
      "node_id": "MDQ6VXNlcjMxNTUzMTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31553173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brockelmore",
      "html_url": "https://github.com/brockelmore",
      "followers_url": "https://api.github.com/users/brockelmore/followers",
      "following_url": "https://api.github.com/users/brockelmore/following{/other_user}",
      "gists_url": "https://api.github.com/users/brockelmore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brockelmore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brockelmore/subscriptions",
      "organizations_url": "https://api.github.com/users/brockelmore/orgs",
      "repos_url": "https://api.github.com/users/brockelmore/repos",
      "events_url": "https://api.github.com/users/brockelmore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brockelmore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-01T22:24:05Z",
    "updated_at": "2022-12-01T22:50:22Z",
    "author_association": "MEMBER",
    "body": "Yeah so the TUI is very poorly designed and is 99% tech debt from getting a basic MVP (but its a relatively low usage feature so it never got much love).\r\n\r\nMy guess is that given we draw the page every 200ms, there is a decent chance we are allocating a ton of stuff each time. I am gonna profile it and post it here...\r\n\r\n<img width=\"1719\" alt=\"Screen Shot 2022-12-01 at 2 22 55 PM\" src=\"https://user-images.githubusercontent.com/31553173/205171683-53e8f309-15bc-4c0e-972a-2802df21cb7f.png\">\r\n\r\nAs I suspected, we do a *ton* of allocations due to strings and building up the TUI. So converting things to `&str`, `&'static str`, etc should help a lot. In general, string manipulation and allocation are brutal for speed and memory usage.\r\n\r\nEdit: omg just realized we only skip *previous* hidden lines, not *future* hidden lines: https://github.com/foundry-rs/foundry/blob/39483d286e27ae09e8dc3894524b7f2d65bb6592/ui/src/lib.rs#L903\r\n\r\nIf we limit this iterator to *just* visible lines, we will save an absolute ton of time and memory usage. This should fix it:\r\n```rust\r\n        let height = area.height as usize;\r\n        let end_line = draw_mem.current_mem_startline + height;\r\n\r\n        let text: Vec<Spans> = memory\r\n            .chunks(32)\r\n            .enumerate()\r\n            .skip(draw_mem.current_mem_startline)\r\n            .take_while(|(i, _)| i < &end_line)\r\n            // snip\r\n```\r\n\r\nThis drops my cpu usage from 40% to 3%\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1334525007/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1334575471",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3805#issuecomment-1334575471",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3805",
    "id": 1334575471,
    "node_id": "IC_kwDOGBlvNc5PjAFv",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-01T23:25:57Z",
    "updated_at": "2022-12-01T23:26:37Z",
    "author_association": "MEMBER",
    "body": "@brockelmore should we add a 1-line doc on the README on how to generate flamegraphs and in which platforms it works / doesnt (i haven't tried generating one in a couple months, but mac's lack of pprof made that not super easy)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1334575471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1334652590",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3805#issuecomment-1334652590",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3805",
    "id": 1334652590,
    "node_id": "IC_kwDOGBlvNc5PjS6u",
    "user": {
      "login": "brockelmore",
      "id": 31553173,
      "node_id": "MDQ6VXNlcjMxNTUzMTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31553173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brockelmore",
      "html_url": "https://github.com/brockelmore",
      "followers_url": "https://api.github.com/users/brockelmore/followers",
      "following_url": "https://api.github.com/users/brockelmore/following{/other_user}",
      "gists_url": "https://api.github.com/users/brockelmore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brockelmore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brockelmore/subscriptions",
      "organizations_url": "https://api.github.com/users/brockelmore/orgs",
      "repos_url": "https://api.github.com/users/brockelmore/repos",
      "events_url": "https://api.github.com/users/brockelmore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brockelmore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-02T01:29:57Z",
    "updated_at": "2022-12-02T01:29:57Z",
    "author_association": "MEMBER",
    "body": "> @brockelmore should we add a 1-line doc on the README on how to generate flamegraphs and in which platforms it works / doesnt (i haven't tried generating one in a couple months, but mac's lack of pprof made that not super easy)\r\n\r\nI believe it should work on macos via dtrace (the above was ran on macos w/o anything besides `cargo flamegraph`). just have to run the tracer as root. \r\n\r\n`sudo cargo flamegraph --manifest-path ./path/to/foundry/Cargo.toml --bin <package> -- <[OPTIONS]>`",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1334652590/reactions",
      "total_count": 3,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 3,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
