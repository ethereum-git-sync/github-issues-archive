{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/916",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/916/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/916/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/916/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/916",
  "id": 1167353106,
  "node_id": "I_kwDOGBlvNc5FlGUS",
  "number": 916,
  "title": "Built-in labels",
  "user": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394237,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjM3",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-question",
      "name": "T-question",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: question"
    },
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703753090,
      "node_id": "LA_kwDOGBlvNc7cwsmC",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-tracing",
      "name": "A-tracing",
      "color": "FBCA04",
      "default": false,
      "description": "Area: tracing"
    },
    {
      "id": 3759719790,
      "node_id": "LA_kwDOGBlvNc7gGMVu",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-low",
      "name": "P-low",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: low"
    },
    {
      "id": 3759720552,
      "node_id": "LA_kwDOGBlvNc7gGMho",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-easy",
      "name": "D-easy",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: easy"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-03-12T17:51:15Z",
  "updated_at": "2023-05-22T15:25:45Z",
  "closed_at": "2023-05-22T15:25:45Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": ">Nit for other PR probably: Should we also add labels for precompiles? At the limit, should we start shipping our own 'opinionated' labels for popular contracts, perhaps using ethers-addressbook?\r\n\r\n_Originally posted by @gakonst in https://github.com/gakonst/foundry/pull/867#discussion_r825235255_\r\n\r\n>agree that would be nice - tho we should think about how we want to handle L2 precompiles. I would like to get to the point of easily supporting a different set of precompiles for various chains & L2s\r\n\r\n_Originally posted by @brockelmore in https://github.com/gakonst/foundry/pull/867#discussion_r825305671_\r\n\r\nWe should figure out if we want to ship more built-in labels, and if so, which and under what conditions. We already ship with a built-in label for the cheatcode address (\"VM\"), but per the comments quoted it might make sense to also ship:\r\n\r\n- Labels for precompiles depending on the chain in fork mode, and mainnet precompiles when not in fork mode\r\n- Labels from `ethers-addressbook` (such as Dai, USDC etc.) in fork mode",
  "closed_by": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/916/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/916/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1553198725",
    "html_url": "https://github.com/foundry-rs/foundry/issues/916#issuecomment-1553198725",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/916",
    "id": 1553198725,
    "node_id": "IC_kwDOGBlvNc5ck-6F",
    "user": {
      "login": "lucas-manuel",
      "id": 44272939,
      "node_id": "MDQ6VXNlcjQ0MjcyOTM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/44272939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucas-manuel",
      "html_url": "https://github.com/lucas-manuel",
      "followers_url": "https://api.github.com/users/lucas-manuel/followers",
      "following_url": "https://api.github.com/users/lucas-manuel/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucas-manuel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucas-manuel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucas-manuel/subscriptions",
      "organizations_url": "https://api.github.com/users/lucas-manuel/orgs",
      "repos_url": "https://api.github.com/users/lucas-manuel/repos",
      "events_url": "https://api.github.com/users/lucas-manuel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucas-manuel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-18T15:02:57Z",
    "updated_at": "2023-05-18T15:02:57Z",
    "author_association": "NONE",
    "body": "Close-able? @mds1 ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1553198725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1553269367",
    "html_url": "https://github.com/foundry-rs/foundry/issues/916#issuecomment-1553269367",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/916",
    "id": 1553269367,
    "node_id": "IC_kwDOGBlvNc5clQJ3",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-18T15:57:07Z",
    "updated_at": "2023-05-18T15:57:07Z",
    "author_association": "COLLABORATOR",
    "body": "I think we should leave this open as I believe some of the default addresses (test contract, default sender, maybe other) might not have default labels. I could be wrong, but want to leave this open to confirm. cc @Evalir might be a good quick one to knock out\r\n\r\nposting a related question I have which affects which addresses to label below:\r\n\r\n--------\r\n\r\n```sh\r\n$ cast compute-address --nonce 0 0x1804c8AB1F12E6bbf3894d4083f33e07309d1f38\r\nComputed Address: 0x5b73C5498c1E3b4dbA84de0F1833c4a029d90519\r\n$ cast compute-address --nonce 1 0x1804c8AB1F12E6bbf3894d4083f33e07309d1f38\r\nComputed Address: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496\r\n```\r\n\r\nThe 0x1804 addr is the default sender. If I run `address(this)` in a test it returns the 0x7FA9 addr of nonce 1. This matches up with the below forge test: https://github.com/foundry-rs/foundry/blob/8d0099be497922b53cded74b77a3e0b3c1079336/testdata/core/ContractEnvironment.t.sol#L16\r\n\r\nBut why is the addr not the nonce 0 addr of 0x5b73, which is what we (erroneously?) have in forge-std here, i.e. what's the default sender doing with nonce 0 before they deploy the test contract? https://github.com/foundry-rs/forge-std/blob/f06ad8944e436e639bce09cfccc55466d99e79d8/src/Base.sol#L15 \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1553269367/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
