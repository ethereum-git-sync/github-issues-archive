{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2429",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2429/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2429/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2429/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2429",
  "id": 1313298029,
  "node_id": "I_kwDOGBlvNc5OR1Zt",
  "number": 2429,
  "title": "More flexibility to measure gas usage for tests",
  "user": {
    "login": "RickVM",
    "id": 26252443,
    "node_id": "MDQ6VXNlcjI2MjUyNDQz",
    "avatar_url": "https://avatars.githubusercontent.com/u/26252443?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/RickVM",
    "html_url": "https://github.com/RickVM",
    "followers_url": "https://api.github.com/users/RickVM/followers",
    "following_url": "https://api.github.com/users/RickVM/following{/other_user}",
    "gists_url": "https://api.github.com/users/RickVM/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/RickVM/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/RickVM/subscriptions",
    "organizations_url": "https://api.github.com/users/RickVM/orgs",
    "repos_url": "https://api.github.com/users/RickVM/repos",
    "events_url": "https://api.github.com/users/RickVM/events{/privacy}",
    "received_events_url": "https://api.github.com/users/RickVM/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    },
    {
      "id": 3759719790,
      "node_id": "LA_kwDOGBlvNc7gGMVu",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-low",
      "name": "P-low",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: low"
    },
    {
      "id": 3759720129,
      "node_id": "LA_kwDOGBlvNc7gGMbB",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-hard",
      "name": "D-hard",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: hard"
    },
    {
      "id": 3759773804,
      "node_id": "LA_kwDOGBlvNc7gGZhs",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-gas-snapshots",
      "name": "A-gas-snapshots",
      "color": "FBCA04",
      "default": false,
      "description": "Area: gas snapshotting/reporting"
    },
    {
      "id": 4182991461,
      "node_id": "LA_kwDOGBlvNc75U2Jl",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-script",
      "name": "Cmd-forge-script",
      "color": "006B75",
      "default": false,
      "description": "Command: forge script"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-07-21T13:52:32Z",
  "updated_at": "2023-03-09T23:06:25Z",
  "closed_at": "2023-03-09T23:06:24Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nI would like a way to do specific pre-test setups without it counting towards the gas-usage for that test.\r\nSetup() is fine for a lof of cases, but I require a bit more flexibility to effectively write various test scenarios.\r\n\r\nI'm open for ideas but can propose a solution:\r\nA cheatcode that allows us to reset gas measurements from that point on during a test. \r\nThis will give users the most flexibility regarding what they want to measure.\r\n\r\n\r\n``` \r\n    function testRemoveStates() public {\r\n        uint256 amount = 100;\r\n        States[] memory states = fillStates(100);\r\n        vm.resetGas(); // I only want to measure the performance of removeStates in this scenario\r\n        removeStates(states);\r\n    }\r\n```\r\n\r\nContext:\r\nI have a contract that keeps track of data, initialized with an empty state and various general parameters during setup(). (Struct[] with specific data)   \r\n\r\nOn this contract, I want to run various tests to measure gas performance, e.g. for data retrieval and deletion.  \r\nSome tests would contain more values, some less.  I do not want the part where I fill the state to be part of the gas measurements.  Right now I'm finding myself needing to write abstract contracts with helper functions and extending that contract multiple times for each Test case (eg filled with 100, 1000, 10000 states), far from ideal\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2429/reactions",
    "total_count": 4,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2429/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191544372",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2429#issuecomment-1191544372",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2429",
    "id": 1191544372,
    "node_id": "IC_kwDOGBlvNc5HBYY0",
    "user": {
      "login": "RickVM",
      "id": 26252443,
      "node_id": "MDQ6VXNlcjI2MjUyNDQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/26252443?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RickVM",
      "html_url": "https://github.com/RickVM",
      "followers_url": "https://api.github.com/users/RickVM/followers",
      "following_url": "https://api.github.com/users/RickVM/following{/other_user}",
      "gists_url": "https://api.github.com/users/RickVM/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RickVM/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RickVM/subscriptions",
      "organizations_url": "https://api.github.com/users/RickVM/orgs",
      "repos_url": "https://api.github.com/users/RickVM/repos",
      "events_url": "https://api.github.com/users/RickVM/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RickVM/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T14:18:51Z",
    "updated_at": "2022-07-21T14:19:21Z",
    "author_association": "NONE",
    "body": "I just noticed that the skip and vm.prank functions also add to the measured gas usage.\r\nThat's an additional reason to implement some kind of reset feature to allow for more fine-grained measurements  :)\r\n\r\n```    \r\nfunction testRemoveStates() public {\r\n        skip(900000);\r\n        vm.prank(theMint);\r\n       // registry.removeOldData(removeKeys);\r\n    }```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191544372/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191837646",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2429#issuecomment-1191837646",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2429",
    "id": 1191837646,
    "node_id": "IC_kwDOGBlvNc5HCf_O",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T19:08:13Z",
    "updated_at": "2022-07-21T19:11:40Z",
    "author_association": "MEMBER",
    "body": "skip is a helper function in Forge Std, not an actual cheatcode, so it will impact gas consumption. vm.prank only impacts gas consumption because of Solidity opcodes to perform the call, the actual cheatcode logic itself does not add to gas consumption - not easy to remove since we can't reasonably have perfect knowledge of the emitted bytecode for the call\r\n\r\nCurrently this is not really possible with the EVM implementation we use since it's not just setting some gas used variable to 0, there is a lot of other considerations about cold/warm accoutns and storage slots. Warm storage slots and accounts also change other state of accounts that is used to figure out what to persist and so on, so it's definitely a hard challenge. I know it's been requested a lot though, so definitely worth exploring a lot more at some point\r\n\r\nCurrently the best we have is `forge test --gas-report` which will give you the gas cost of individual function calls, but again it may vary dependign on cold/warm accounts and storage slots.\r\n\r\nEdit: A note on the API, I don't think `vm.resetGas` makes a lot of sense since you might have multiple points in your test you want to measure, so I think better UX would be something like `vm.startGasMeasurement(\"some span name\")` and `vm.stopGasMeasurement()` where the span name would be displayed in a report (names suck but that's a tomorrow problem)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191837646/reactions",
      "total_count": 6,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1462947783",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2429#issuecomment-1462947783",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2429",
    "id": 1462947783,
    "node_id": "IC_kwDOGBlvNc5XMs_H",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-09T23:06:24Z",
    "updated_at": "2023-03-09T23:06:24Z",
    "author_association": "COLLABORATOR",
    "body": "Going to close this per the above comment. If there is a need for better ways to measure gas usage than what's currently available, we'll need to come up with a good UX and implementation and create a new issue with that proposal",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1462947783/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
