{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1433",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1433/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1433/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1433/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1433",
  "id": 1217763944,
  "node_id": "I_kwDOGBlvNc5IlZpo",
  "number": 1433,
  "title": "`cast --from-rlp` and `cast --to-rlp`",
  "user": {
    "login": "tynes",
    "id": 6626818,
    "node_id": "MDQ6VXNlcjY2MjY4MTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6626818?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tynes",
    "html_url": "https://github.com/tynes",
    "followers_url": "https://api.github.com/users/tynes/followers",
    "following_url": "https://api.github.com/users/tynes/following{/other_user}",
    "gists_url": "https://api.github.com/users/tynes/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tynes/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tynes/subscriptions",
    "organizations_url": "https://api.github.com/users/tynes/orgs",
    "repos_url": "https://api.github.com/users/tynes/repos",
    "events_url": "https://api.github.com/users/tynes/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tynes/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752609,
      "node_id": "LA_kwDOGBlvNc7cwseh",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-cast",
      "name": "C-cast",
      "color": "5319E7",
      "default": false,
      "description": "Command: cast"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-04-27T18:59:52Z",
  "updated_at": "2022-06-07T04:52:20Z",
  "closed_at": "2022-06-07T04:52:20Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nCast\n\n### Describe the feature you would like\n\nI would like to be able to RLP encode and decode using `cast`. This would be generally useful for inspecting and creating RLP encoded data. There are a couple of existing tools that do this already but having them built into `cast` would remove the need to add these tools as dependencies.\r\n\r\n- https://www.npmjs.com/package/rlp\r\n- [geth's rlpdump](https://github.com/ethereum/go-ethereum/blob/master/cmd/rlpdump/main.go)\r\n\r\nI could imagine two commands being added to `cast`\r\n\r\n- `cast --from-rlp` which could accept a hex string from stdin or a hex string argument and pretty print the result. A flag could be used to allow decoding of [EIP 2718](https://eips.ethereum.org/EIPS/eip-2718) transactions, which would look at the first byte and slice it off if it falls in the correct range before decoding\r\n- `cast --to-rlp` which could accept a string and RLP encode it. Lists could be indicated with `[ ]` syntax and either hex or unicode could be used and a hex string could be returned\r\n\r\nRLP encoding using `cast` is particularly useful for computing the transaction hash of an L1 to L2 transaction on optimism bedrock, because the transaction hash can be derived completely from fields in the L1 transactions receipt. I would like to be able to use `cast` to deposit to optimism by sending an L1 transaction and then parse the receipt and compute the corresponding L2 transaction hash so that I can poll for the L2 transaction's execution using `seth receipt`. This requires RLP encoding data in the L1 receipt and then hashing it with `cast keccak`. See this [link](https://github.com/ethereum-optimism/optimistic-specs/blob/main/specs/deposits.md#the-deposited-transaction-type) for the spec.\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1433/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1433/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
