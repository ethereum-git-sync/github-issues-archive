{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/804",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/804/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/804/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/804/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/804",
  "id": 1148889533,
  "node_id": "I_kwDOGBlvNc5Eeqm9",
  "number": 804,
  "title": "Testing on ERC20 token which has no return data (ex, USDT) fail and reverted.",
  "user": {
    "login": "dalgarim",
    "id": 21157356,
    "node_id": "MDQ6VXNlcjIxMTU3MzU2",
    "avatar_url": "https://avatars.githubusercontent.com/u/21157356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dalgarim",
    "html_url": "https://github.com/dalgarim",
    "followers_url": "https://api.github.com/users/dalgarim/followers",
    "following_url": "https://api.github.com/users/dalgarim/following{/other_user}",
    "gists_url": "https://api.github.com/users/dalgarim/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dalgarim/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dalgarim/subscriptions",
    "organizations_url": "https://api.github.com/users/dalgarim/orgs",
    "repos_url": "https://api.github.com/users/dalgarim/repos",
    "events_url": "https://api.github.com/users/dalgarim/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dalgarim/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-02-24T05:51:29Z",
  "updated_at": "2022-03-03T21:59:17Z",
  "closed_at": "2022-02-28T14:18:06Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [x] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.1.0 (67f9ed1 2022-02-23T00:32:01.483845067+00:00)\n\n### What command(s) is the bug in?\n\nforge test --rpc-url {...}\n\n### Operating System\n\nLinux\n\n### Describe the bug\n\n\r\nHi,\r\n\r\nWhen I called transfer function of USDT, It reverts an return to fallback().\r\n\r\nI guess it is due to USDT's implemetation of transfer function which has no return value.\r\n\r\nI tested other ERC20 tokens LINK and Dai which have not reverted.\r\n\r\nAnd also, when I use OZ's SafeERC20 library, USDT doesn't reverted.\r\n\r\n```\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.7.6;\r\n\r\nimport \"ds-test/test.sol\";\r\nimport \"./utils/Console.sol\";\r\nimport \"src/interface/IERC20.sol\";\r\n\r\ninterface CheatCodes {\r\n  function prank(address) external;\r\n  function startPrank(address) external;\r\n  function stopPrank() external;\r\n}\r\n\r\ncontract Test2 is DSTest {\r\n    address constant FAUCET = 0xF977814e90dA44bFA03b6295A0616a897441aceC;\r\n    address constant TESTER = 0x00a329c0648769A73afAc7F9381E08FB43dBEA72;\r\n\r\n    CheatCodes cheats = CheatCodes(HEVM_ADDRESS);\r\n    IERC20 usdt = IERC20(0xdAC17F958D2ee523a2206206994597C13D831ec7);\r\n\r\n    function faucet() public {\r\n        cheats.startPrank(FAUCET);\r\n        usdt.transfer(TESTER, 1*1e6);\r\n        cheats.stopPrank();\r\n    }\r\n\r\n    function setUp() public {\r\n        faucet();\r\n    }\r\n    function testTest() public {\r\n        console.log(usdt.balanceOf(TESTER));\r\n    }\r\n}\r\n```\r\n\r\n```\r\nroot# forge test --fork-url http://localhost:8545/ --fork-block-number 14261277 -vvvv --debug --match-contract Test2\r\ncompiling...\r\nCompiling 1 files with 0.7.6\r\nCompilation finished successfully\r\nsuccess.\r\nRunning 1 test for Test2.json:Test2\r\n[FAIL. Reason: Setup failed: Execution reverted: Revert(Reverted), (gas: 9079256848778621134)] testTest() (gas: 0)\r\nTraces:\r\n\r\n  [9079256848778621134] Test2::setUp()\r\n    ├─ [0] VM::startPrank(0xf977814e90da44bfa03b6295a0616a897441acec)\r\n    │   └─ ← ()\r\n    ├─ [9079256848778614990] 0xdac1…1ec7::transfer(0x00a329c0648769a73afac7f9381e08fb43dbea72, 1000000)\r\n    │   └─ ← ()\r\n    └─ ← ()\r\n  [0] 0x0000…0000::fallback()\r\n    └─ ← ()\r\n\r\n\r\nFailed tests:\r\n[FAIL. Reason: Setup failed: Execution reverted: Revert(Reverted), (gas: 9079256848778621134)] testTest() (gas: 0)\r\n\r\nEncountered a total of 1 failing tests, 0 tests succeeded\r\n```\r\n\r\n\r\n",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/804/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/804/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1054271636",
    "html_url": "https://github.com/foundry-rs/foundry/issues/804#issuecomment-1054271636",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/804",
    "id": 1054271636,
    "node_id": "IC_kwDOGBlvNc4-1uiU",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-28T13:44:49Z",
    "updated_at": "2022-02-28T13:44:49Z",
    "author_association": "MEMBER",
    "body": "ACK - I've reproduced and investigating",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1054271636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1054302933",
    "html_url": "https://github.com/foundry-rs/foundry/issues/804#issuecomment-1054302933",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/804",
    "id": 1054302933,
    "node_id": "IC_kwDOGBlvNc4-12LV",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-28T14:18:06Z",
    "updated_at": "2022-02-28T14:18:06Z",
    "author_association": "MEMBER",
    "body": "OK so this is intended behavior.\r\n\r\nTrying to integrate with USDT (or any of the tokens that were deployed with that bug) from a newer Solidity version without safe-transfer is expected to fail when using the \"standard\" ERC20 interface. This is because newer Solidity versions will try to decode the boolean return data, which in USDT case's there is none.\r\n\r\nThere's 3 ways to solve this:\r\n1. Use Solidity 0.4.20 (not ideal)\r\n2. Define `interface ERC20 { function transfer(address,uint256) external; }` (without the `returns (bool)` part so that Solidity doesn't try to decode the return data)\r\n3. Use Safe Transfer",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1054302933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
