{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2390",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2390/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2390/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2390/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2390",
  "id": 1309783185,
  "node_id": "I_kwDOGBlvNc5OEbSR",
  "number": 2390,
  "title": "Don't keep `CALLER` balance as `U256::MAX`",
  "user": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3334394235,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjM1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0052CC",
      "default": true,
      "description": "Good for newcomers"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 4182991461,
      "node_id": "LA_kwDOGBlvNc75U2Jl",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-script",
      "name": "Cmd-forge-script",
      "color": "006B75",
      "default": false,
      "description": "Command: forge script"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2022-07-19T16:35:53Z",
  "updated_at": "2022-08-11T19:07:31Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [ ] Foundryup\n\n### What version of Foundry are you on?\n\n_No response_\n\n### What command(s) is the bug in?\n\n_No response_\n\n### Operating System\n\n_No response_\n\n### Describe the bug\n\nHere, we set the balance of `CALLER` and other addresses  to `U256::MAX` to make sure they can execute deploys.\r\nhttps://github.com/foundry-rs/foundry/blob/7e12adbc30d56174320d12be52f94a34d7405c69/forge/src/runner.rs#L69-L71\r\n\r\nA few lines below, we set the balances to the user-specified initial balance.\r\nhttps://github.com/foundry-rs/foundry/blob/7e12adbc30d56174320d12be52f94a34d7405c69/forge/src/runner.rs#L128-L131\r\n\r\nHowever, `CALLER` is left out of there, so if a fuzz test chooses the `CALLER` address and that test sends ETH to that address, the test reverts with balance overflow.\r\n\r\nProposed fix is to set the `CALLER` balance after L132 to either 0, or to `self.initial_balance`. I believe either should be suitable since `CALLER` isn't used afterwards AFAIK.\r\n\r\nThis is partially related to #2322 in that I don't think the default balance of an account should ever be kept at `U256::MAX`, so in that PR I'd suggest using the default `self.initial_balance` that's typically used instead.",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2390/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2390/timeline",
  "performed_via_github_app": null,
  "state_reason": "reopened"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189405371",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2390#issuecomment-1189405371",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2390",
    "id": 1189405371,
    "node_id": "IC_kwDOGBlvNc5G5OK7",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-19T18:15:17Z",
    "updated_at": "2022-07-19T18:15:17Z",
    "author_association": "MEMBER",
    "body": "sounds reasonable,\r\n\r\nlet's set it to `self.initial_balance` again, setting it to 0 could have side-effects if sender == CALLER I think ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189405371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189526352",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2390#issuecomment-1189526352",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2390",
    "id": 1189526352,
    "node_id": "IC_kwDOGBlvNc5G5rtQ",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-19T20:35:55Z",
    "updated_at": "2022-07-19T20:35:55Z",
    "author_association": "COLLABORATOR",
    "body": "@jferas pointed out to me this happens with another address too:\r\n\r\nhttps://github.com/foundry-rs/foundry/blob/71541ee0c27908e4e90b979f8501149085afa65d/evm/src/executor/mod.rs#L108-L115\r\n\r\nI wonder if instead the right solution is to exclude these addresses from the fuzzer dict? 0x3fAB184622Dc19b6109349B94811493BF2a45362 definitely seems safe to exclude because it seems it's only used to deploy the create2 contract, but `CALLER` maybe is used elsewhere and still should be included?\r\n\r\nEither way, 0x3fAB184622Dc19b6109349B94811493BF2a45362 definitely doesn't need a balance of `U256::MAX`. Let me know what you all think",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189526352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189901606",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2390#issuecomment-1189901606",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2390",
    "id": 1189901606,
    "node_id": "IC_kwDOGBlvNc5G7HUm",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-20T06:57:39Z",
    "updated_at": "2022-07-20T06:57:39Z",
    "author_association": "MEMBER",
    "body": "Unsure, I don't know what that address is being used for. I think it's for script?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1189901606/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1190538781",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2390#issuecomment-1190538781",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2390",
    "id": 1190538781,
    "node_id": "IC_kwDOGBlvNc5G9i4d",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-20T17:11:04Z",
    "updated_at": "2022-07-20T17:11:04Z",
    "author_association": "MEMBER",
    "body": "that sounds right, wdyt @joshieDo \r\n\r\nwhile we're at it, can we make these constants?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1190538781/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191878060",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2390#issuecomment-1191878060",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2390",
    "id": 1191878060,
    "node_id": "IC_kwDOGBlvNc5HCp2s",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T19:58:16Z",
    "updated_at": "2022-07-21T19:58:16Z",
    "author_association": "MEMBER",
    "body": "Reopened because I don't think it resolved https://github.com/foundry-rs/foundry/issues/2390#issuecomment-1189526352",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191878060/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191880625",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2390#issuecomment-1191880625",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2390",
    "id": 1191880625,
    "node_id": "IC_kwDOGBlvNc5HCqex",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T20:01:29Z",
    "updated_at": "2022-07-21T20:01:41Z",
    "author_association": "COLLABORATOR",
    "body": "Yep, thanks. Interestingly, @jferas and I both did not see fuzz failures with either of those two addresses until recently, but I don't recall seeing a change that would cause them to start being included in the fuzz dict.\r\n\r\nSo I think the scope of this issue may be three items:\r\n1. Reduce the initial balance of `0x3fAB184622Dc19b6109349B94811493BF2a45362` to something smaller.\r\n2. Make these addresses constants\r\n3. Decide if these addresses should really be in the fuzz dict or not\r\n\r\nLet me know if that sounds right",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191880625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191884635",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2390#issuecomment-1191884635",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2390",
    "id": 1191884635,
    "node_id": "IC_kwDOGBlvNc5HCrdb",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T20:06:10Z",
    "updated_at": "2022-07-21T20:07:45Z",
    "author_association": "MEMBER",
    "body": "Hmm, I think `self.sender` and `self.test_address` could both be valid inputs(?) and should not be excluded. For `CALLER` I think we should not have any balance on it before it is actually used - as far as I remember it is only used to call `failed()` on the test contracts? So potentially `CALLER` could have it's balance increased in `Executor::is_success` before the call, and reduced to 0 after the call",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191884635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191887300",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2390#issuecomment-1191887300",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2390",
    "id": 1191887300,
    "node_id": "IC_kwDOGBlvNc5HCsHE",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T20:09:36Z",
    "updated_at": "2022-07-21T20:09:36Z",
    "author_association": "COLLABORATOR",
    "body": "> Hmm, I think `self.sender` and `self.test_address` could both be valid inputs(?) and should not be excluded.\r\n\r\nYea I think I lean this way also, just want to make sure they have more realistic default balances in that case\r\n\r\n> For `CALLER` I think we should not have any balance on it before it is actually used - as far as I remember it is only used to call `failed()` on the test contracts?\r\n\r\nAh ok, yea that seems like a reasonable approach to me then. Perhaps we keep the balance zero, set it to nonzero to call `failed()`, then reset back to zero after the call?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191887300/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191887835",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2390#issuecomment-1191887835",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2390",
    "id": 1191887835,
    "node_id": "IC_kwDOGBlvNc5HCsPb",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T20:10:19Z",
    "updated_at": "2022-07-21T20:12:34Z",
    "author_association": "MEMBER",
    "body": ">Ah ok, yea that seems like a reasonable approach to me then. Perhaps we keep the balance zero, set it to nonzero to call failed(), then reset back to zero after the call?\r\n\r\nYea that's what I meant\r\n\r\n>Yea I think I lean this way also, just want to make sure they have more realistic default balances in that case\r\n\r\nAfaik both balances add up to `U256::max` so it should be safe unless explicitly increased in `foundry.toml` beyond that. However I do wonder if DappTools used to set the balance of the test *caller* itself to something other than 0? It would be nice if we could do that but afaik it's not really possible since REVM always does gas accounting and checks the calling account has a balance - if we do the same trick with setting balance > 0 for `self.sender` before we call a test function and set it to 0 afterwards it wouldn't mean anything since the balance would still be set for the test lol",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191887835/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1193307719",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2390#issuecomment-1193307719",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2390",
    "id": 1193307719,
    "node_id": "IC_kwDOGBlvNc5HIG5H",
    "user": {
      "login": "joshieDo",
      "id": 93316087,
      "node_id": "U_kgDOBY_j9w",
      "avatar_url": "https://avatars.githubusercontent.com/u/93316087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshieDo",
      "html_url": "https://github.com/joshieDo",
      "followers_url": "https://api.github.com/users/joshieDo/followers",
      "following_url": "https://api.github.com/users/joshieDo/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshieDo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshieDo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshieDo/subscriptions",
      "organizations_url": "https://api.github.com/users/joshieDo/orgs",
      "repos_url": "https://api.github.com/users/joshieDo/repos",
      "events_url": "https://api.github.com/users/joshieDo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshieDo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-24T12:23:39Z",
    "updated_at": "2022-07-24T12:35:44Z",
    "author_association": "COLLABORATOR",
    "body": "> 0x3fAB184622Dc19b6109349B94811493BF2a45362\r\n\r\nDoes it still have issues with the latest version? Current master branch should handle that\r\n\r\nhttps://github.com/foundry-rs/foundry/blob/f0fa5da3c53858dbf9ac602ffeb633e15c39b9a3/evm/src/executor/mod.rs#L108-L120",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1193307719/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1193378027",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2390#issuecomment-1193378027",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2390",
    "id": 1193378027,
    "node_id": "IC_kwDOGBlvNc5HIYDr",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-24T19:17:46Z",
    "updated_at": "2022-07-24T19:17:46Z",
    "author_association": "MEMBER",
    "body": "The ask is to set it to 0 again after deployment :smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1193378027/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
