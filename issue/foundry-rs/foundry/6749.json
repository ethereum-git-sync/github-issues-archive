{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6749",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6749/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6749/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6749/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6749",
  "id": 2073060882,
  "node_id": "I_kwDOGBlvNc57kGYS",
  "number": 6749,
  "title": "`eth_blockNumber` returns L1 block for Arbitrum fork",
  "user": {
    "login": "ian-eulith",
    "id": 131399468,
    "node_id": "U_kgDOB9T_LA",
    "avatar_url": "https://avatars.githubusercontent.com/u/131399468?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ian-eulith",
    "html_url": "https://github.com/ian-eulith",
    "followers_url": "https://api.github.com/users/ian-eulith/followers",
    "following_url": "https://api.github.com/users/ian-eulith/following{/other_user}",
    "gists_url": "https://api.github.com/users/ian-eulith/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ian-eulith/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ian-eulith/subscriptions",
    "organizations_url": "https://api.github.com/users/ian-eulith/orgs",
    "repos_url": "https://api.github.com/users/ian-eulith/repos",
    "events_url": "https://api.github.com/users/ian-eulith/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ian-eulith/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "Evalir",
    "id": 26014927,
    "node_id": "MDQ6VXNlcjI2MDE0OTI3",
    "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Evalir",
    "html_url": "https://github.com/Evalir",
    "followers_url": "https://api.github.com/users/Evalir/followers",
    "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
    "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
    "organizations_url": "https://api.github.com/users/Evalir/orgs",
    "repos_url": "https://api.github.com/users/Evalir/repos",
    "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Evalir/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "Evalir",
      "id": 26014927,
      "node_id": "MDQ6VXNlcjI2MDE0OTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evalir",
      "html_url": "https://github.com/Evalir",
      "followers_url": "https://api.github.com/users/Evalir/followers",
      "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
      "organizations_url": "https://api.github.com/users/Evalir/orgs",
      "repos_url": "https://api.github.com/users/Evalir/repos",
      "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evalir/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2024-01-09T19:54:17Z",
  "updated_at": "2024-01-15T13:42:48Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nAnvil\n\n### Have you ensured that all of these are up to date?\n\n- [x] Foundry\n- [x] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (6defdce 2023-05-17T00:04:50.286076000Z)\n\n### What command(s) is the bug in?\n\nanvil\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\n```shell\r\n$ anvil --chain-id 42161 --fork-url https://arb1.arbitrum.io/rpc &>/dev/null &\r\n$ cast block-number --rpc-url https://arb1.arbitrum.io/rpc\r\n168785678\r\n$ cast block-number --rpc-url http://127.0.0.1:8545\r\n18971606\r\n```\r\n\r\nAn Anvil fork of Arbitrum returns the L1 block number over JSON-RPC. Based on the [Arbitrum docs](https://docs.arbitrum.io/for-devs/concepts/differences-between-arbitrum-ethereum/block-numbers-and-time) and the behavior of other providers, I expected it to return the L2 block number.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6749/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6749/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1883706669",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6749#issuecomment-1883706669",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6749",
    "id": 1883706669,
    "node_id": "IC_kwDOGBlvNc5wRxUt",
    "user": {
      "login": "ian-eulith",
      "id": 131399468,
      "node_id": "U_kgDOB9T_LA",
      "avatar_url": "https://avatars.githubusercontent.com/u/131399468?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ian-eulith",
      "html_url": "https://github.com/ian-eulith",
      "followers_url": "https://api.github.com/users/ian-eulith/followers",
      "following_url": "https://api.github.com/users/ian-eulith/following{/other_user}",
      "gists_url": "https://api.github.com/users/ian-eulith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ian-eulith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ian-eulith/subscriptions",
      "organizations_url": "https://api.github.com/users/ian-eulith/orgs",
      "repos_url": "https://api.github.com/users/ian-eulith/repos",
      "events_url": "https://api.github.com/users/ian-eulith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ian-eulith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-09T20:08:22Z",
    "updated_at": "2024-01-09T20:08:22Z",
    "author_association": "NONE",
    "body": "I realized I was running an old version of Anvil. I updated to the latest:\r\n\r\n```\r\nanvil 0.2.0 (71d8ea5 2024-01-09T15:10:35.401468000Z)\r\n```\r\n\r\nSame result.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1883706669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1884622054",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6749#issuecomment-1884622054",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6749",
    "id": 1884622054,
    "node_id": "IC_kwDOGBlvNc5wVQzm",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-10T10:56:01Z",
    "updated_at": "2024-01-10T10:56:01Z",
    "author_association": "MEMBER",
    "body": "I see, this makes me think calling this when we instantiate the fork is wrong:\r\n\r\nhttps://github.com/foundry-rs/foundry/blob/177a1f41658db813fc4d7f50f40ab7804fcb427c/crates/evm/core/src/utils.rs#L163-L169\r\n\r\nbut in solidity `block.number` is still the L1 block, right?\r\n\r\nso this is a bit horrible. We want to fork off the L2, what should happen with the `block.number` variable over time?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1884622054/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1885184621",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6749#issuecomment-1885184621",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6749",
    "id": 1885184621,
    "node_id": "IC_kwDOGBlvNc5wXaJt",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-10T16:27:14Z",
    "updated_at": "2024-01-10T16:27:14Z",
    "author_association": "COLLABORATOR",
    "body": "Partly related to #748, you can see the arbitrum `block.number` case is called out there. @mattsse you are right that in solidity `block.number` returns L1 block values as described in https://docs.arbitrum.io/for-devs/concepts/differences-between-arbitrum-ethereum/block-numbers-and-time",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1885184621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1887608864",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6749#issuecomment-1887608864",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6749",
    "id": 1887608864,
    "node_id": "IC_kwDOGBlvNc5wgqAg",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-11T17:15:21Z",
    "updated_at": "2024-01-11T17:15:21Z",
    "author_association": "MEMBER",
    "body": "hmm, okay so the right fix for abitrum would be to not use the l1blocknumber for the fork target block number (L2), but unclear what we should do to `evm.blocknumber` once new blocks are mined, simply increase by one as well or with some multiplier (L2 blocktime vs mainnet blocktime?)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1887608864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1888030935",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6749#issuecomment-1888030935",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6749",
    "id": 1888030935,
    "node_id": "IC_kwDOGBlvNc5wiRDX",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-11T21:55:19Z",
    "updated_at": "2024-01-11T21:55:19Z",
    "author_association": "COLLABORATOR",
    "body": "> hmm, okay so the right fix for abitrum would be to not use the l1blocknumber for the fork target block number (L2)\r\n\r\nI believe this is correct, since the RPC returns the L2 block number, we want to use L2 block numbers as the fork blocks\r\n\r\n> but unclear what we should do to evm.blocknumber once new blocks are mined, simply increase by one as well or with some multiplier (L2 blocktime vs mainnet blocktime?)\r\n\r\nPaging @gzeoneth to help confirm and decide the best course of action. Both of these options seem ok but I'm not sure what's best for users, but I think I'd avoid a 1:1 relation between and L1 and L2 block numbers since that will likely never occur in practice",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1888030935/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1892182519",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6749#issuecomment-1892182519",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6749",
    "id": 1892182519,
    "node_id": "IC_kwDOGBlvNc5wyGn3",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-15T13:31:07Z",
    "updated_at": "2024-01-15T13:31:40Z",
    "author_association": "MEMBER",
    "body": "okay, I thought about this for a bit and I think we need to track the best block separately in a dedicated variable and not using the evm.blocknumber since this is different for arb\r\n\r\nmind taking this on @Evalir \r\n\r\nhttps://github.com/foundry-rs/foundry/blob/c5fd67bc85b10d18c9b5d195337d750b9dbbca65/crates/anvil/src/eth/backend/mem/mod.rs#L492-L501\r\n\r\nhttps://github.com/foundry-rs/foundry/blob/c5fd67bc85b10d18c9b5d195337d750b9dbbca65/crates/anvil/src/eth/backend/mem/mod.rs#L777-L777",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1892182519/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1892201468",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6749#issuecomment-1892201468",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6749",
    "id": 1892201468,
    "node_id": "IC_kwDOGBlvNc5wyLP8",
    "user": {
      "login": "gzeoneth",
      "id": 95478735,
      "node_id": "U_kgDOBbDjzw",
      "avatar_url": "https://avatars.githubusercontent.com/u/95478735?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gzeoneth",
      "html_url": "https://github.com/gzeoneth",
      "followers_url": "https://api.github.com/users/gzeoneth/followers",
      "following_url": "https://api.github.com/users/gzeoneth/following{/other_user}",
      "gists_url": "https://api.github.com/users/gzeoneth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gzeoneth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gzeoneth/subscriptions",
      "organizations_url": "https://api.github.com/users/gzeoneth/orgs",
      "repos_url": "https://api.github.com/users/gzeoneth/repos",
      "events_url": "https://api.github.com/users/gzeoneth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gzeoneth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-15T13:42:47Z",
    "updated_at": "2024-01-15T13:42:47Z",
    "author_association": "NONE",
    "body": "> > hmm, okay so the right fix for abitrum would be to not use the l1blocknumber for the fork target block number (L2)\r\n> \r\n> I believe this is correct, since the RPC returns the L2 block number, we want to use L2 block numbers as the fork blocks\r\n> \r\n> > but unclear what we should do to evm.blocknumber once new blocks are mined, simply increase by one as well or with some multiplier (L2 blocktime vs mainnet blocktime?)\r\n> \r\n> Paging @gzeoneth to help confirm and decide the best course of action. Both of these options seem ok but I'm not sure what's best for users, but I think I'd avoid a 1:1 relation between and L1 and L2 block numbers since that will likely never occur in practice\r\n\r\nYes, the ArbBlockNumber (L2 block number) will need to be tracked separately. I think having `evm.blocknumber` being static (last known value) might make the most sense here, since it technically is unrelated to L2 blocks. It should still be able to advance `evm.blocknumber` with `vm.roll` but no need to make it correlate with other activity.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1892201468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
