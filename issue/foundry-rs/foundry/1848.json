{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1848",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1848/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1848/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1848/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1848",
  "id": 1261476594,
  "node_id": "I_kwDOGBlvNc5LMJry",
  "number": 1848,
  "title": "Crash when calling blockhash",
  "user": {
    "login": "naps62",
    "id": 283819,
    "node_id": "MDQ6VXNlcjI4MzgxOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/283819?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/naps62",
    "html_url": "https://github.com/naps62",
    "followers_url": "https://api.github.com/users/naps62/followers",
    "following_url": "https://api.github.com/users/naps62/following{/other_user}",
    "gists_url": "https://api.github.com/users/naps62/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/naps62/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/naps62/subscriptions",
    "organizations_url": "https://api.github.com/users/naps62/orgs",
    "repos_url": "https://api.github.com/users/naps62/repos",
    "events_url": "https://api.github.com/users/naps62/events{/privacy}",
    "received_events_url": "https://api.github.com/users/naps62/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 4182991461,
      "node_id": "LA_kwDOGBlvNc75U2Jl",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-script",
      "name": "Cmd-forge-script",
      "color": "006B75",
      "default": false,
      "description": "Command: forge script"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-06-06T07:43:52Z",
  "updated_at": "2022-06-06T11:41:49Z",
  "closed_at": "2022-06-06T11:09:39Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [ ] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (8f04865 2022-06-01T18:00:10.960060401Z)\n\n### What command(s) is the bug in?\n\nforge script\n\n### Operating System\n\n_No response_\n\n### Describe the bug\n\nI'm Trying to find a way to solve [Ethernaut #03](https://ethernaut.openzeppelin.com/level/0x4dF32584890A0026e56f7535d0f2C6486753624f) using forge scripting\r\n\r\nThis exercise requires me to send 10 different transactions, that should go into 10 separate blocks (otherwise they're reverted). They also check `blockchash(block.number - 1)` for all of them. When forge script tries to simulate my execution, I'm running into problems with the `blockhash` call\r\n\r\nHere's a snippet of my solution:\r\n\r\n```\r\ncontract Ethernaut03 is Ethernaut {\r\n    address constant factory =\r\n        address(0x4dF32584890A0026e56f7535d0f2C6486753624f);\r\n\r\n    function run() public {\r\n        vm.startBroadcast();\r\n        ICoinFlip flip = ICoinFlip(createNewInstance(factory));\r\n\r\n        for (uint256 i = 0; i < 10; ++i) {\r\n            console.log(block.number);\r\n            console.logBytes32(blockhash(block.number - 1));\r\n\r\n            // trigger a tx, with a guess for the current block\r\n            flip.flip(guess());\r\n\r\n            vm.roll(block.number + 1);\r\n        }\r\n   }\r\n}\r\n```\r\n\r\nWithout `vm.roll`, each call to `flip.flip` would end up in the same block (meaning the 2nd call would fail).\r\nWith `vm.roll`, it actually panics with:\r\n\r\n```\r\nThe application panicked (crashed).\r\nMessage:  Failed to get block hash for 10803750\r\nblock 10803750 not found\r\nLocation: /home/naps62/.foundry/foundry-rs/foundry/evm/src/executor/fork/backend.rs:320\r\n```",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1848/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1848/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1147329955",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1848#issuecomment-1147329955",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1848",
    "id": 1147329955,
    "node_id": "IC_kwDOGBlvNc5EYt2j",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-06T11:08:37Z",
    "updated_at": "2022-06-06T11:09:38Z",
    "author_association": "MEMBER",
    "body": "I understand the use case, but it can't work like this: there is no way for us to know blockhashes in the future, so the crash is to be expected. Can you open up a new issue with a feature request describing the feature you want?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1147329955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1147357071",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1848#issuecomment-1147357071",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1848",
    "id": 1147357071,
    "node_id": "IC_kwDOGBlvNc5EY0eP",
    "user": {
      "login": "naps62",
      "id": 283819,
      "node_id": "MDQ6VXNlcjI4MzgxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/283819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naps62",
      "html_url": "https://github.com/naps62",
      "followers_url": "https://api.github.com/users/naps62/followers",
      "following_url": "https://api.github.com/users/naps62/following{/other_user}",
      "gists_url": "https://api.github.com/users/naps62/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naps62/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naps62/subscriptions",
      "organizations_url": "https://api.github.com/users/naps62/orgs",
      "repos_url": "https://api.github.com/users/naps62/repos",
      "events_url": "https://api.github.com/users/naps62/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naps62/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-06T11:41:07Z",
    "updated_at": "2022-06-06T11:41:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@onbjerg Thanks. My issue is not necessarily with this not being supported. It's more about getting a random crash with no clear explanation. What you just explained sounds like something that a proper error message should explain to me\r\n\r\nAs for a feature, it's not fully clear to me what a proper one would be (which is why I structured the issue this way)\r\n\r\nobviously I can't expect forge to find the real hashes of future mainnet blocks. My main problem is then how to deal with scripts that use `--slow` in order to consume different blockhashes, but which forge will first try to simulate (either crashing, or ending up simulating with fake blockhashes and cause unrealistic results). maybe a cheatcode to mock blockhashes would be enough?\r\n\r\nI'm fine with opening a separate issue, but I don't necessarily want to ask for a specific feature, because I don't know what the sensible approach would be ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1147357071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
