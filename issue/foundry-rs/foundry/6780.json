{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6780",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6780/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6780/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6780/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6780",
  "id": 2079729469,
  "node_id": "I_kwDOGBlvNc579ic9",
  "number": 6780,
  "title": "`forge script --verify` intermittently generates bytecode mismatch",
  "user": {
    "login": "hensha256",
    "id": 34962750,
    "node_id": "MDQ6VXNlcjM0OTYyNzUw",
    "avatar_url": "https://avatars.githubusercontent.com/u/34962750?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hensha256",
    "html_url": "https://github.com/hensha256",
    "followers_url": "https://api.github.com/users/hensha256/followers",
    "following_url": "https://api.github.com/users/hensha256/following{/other_user}",
    "gists_url": "https://api.github.com/users/hensha256/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hensha256/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hensha256/subscriptions",
    "organizations_url": "https://api.github.com/users/hensha256/orgs",
    "repos_url": "https://api.github.com/users/hensha256/repos",
    "events_url": "https://api.github.com/users/hensha256/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hensha256/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2024-01-12T21:12:35Z",
  "updated_at": "2024-01-12T21:12:35Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (68c3663 2024-01-11T00:37:40.946762000Z)\n\n### What command(s) is the bug in?\n\nforge script --verify\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\nWhen trying to deploy and verify a contract, all in 1 command, forge sometimes successfully deploys the contract, but then throws and error when verifying:\r\n\r\n```\r\nDetails: Fail - Unable to verify. Compiled contract deployment bytecode does NOT match the transaction deployment bytecode.\r\n```\r\n\r\nThe exact command being run was:\r\n\r\n```\r\nforge script --broadcast --skip-simulation \\\r\n--rpc-url \"https://arb1.arbitrum.io/rpc\" \\\r\n--private-key XX \\\r\n--sig 'run()' \\\r\nscript/deployParameters/DeployArbitrum.s.sol:DeployArbitrum \\\r\n--etherscan-api-key XX \\\r\n--verify\r\n```\r\n\r\nto deploy [Uniswap's UniversalRouter](https://github.com/Uniswap/universal-router), using solidity 0.8.17, with `via-ir` enabled. The commit in question is `6a9846bfa6f488404b69128afdcc7522fa34496d`.\r\n\r\nI encountered this issue on all chains that we tried (Arbitrum, Optimism, Sepolia). We additionally tried from another device to deploy the same commit and the same issue occurred.\r\n\r\nI then checked out a different commit of the repo (`52be38e407ce07f2e84c7e101673f32e72bd0f09`), and the contract was able to deploy and verify with no issues.\r\n\r\nThe issue is similar in aspects to what people have described in #3507, however the [solution](https://github.com/foundry-rs/foundry/issues/3507#issuecomment-1465382107) that seemed to work for people there was to add `viaIR:true` to the json output, and verify manually on etherscan. When I tried this, it seems forge already now correct sets `viaIR` to `true` in the json - so this solution did not fix my issue.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6780/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6780/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
