{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1123",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1123/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1123/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1123/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1123",
  "id": 1185056948,
  "node_id": "I_kwDOGBlvNc5Gooi0",
  "number": 1123,
  "title": "Function Modifier or an Opcode to mark a test as skipped conditionally",
  "user": {
    "login": "vminkov",
    "id": 2662912,
    "node_id": "MDQ6VXNlcjI2NjI5MTI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2662912?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vminkov",
    "html_url": "https://github.com/vminkov",
    "followers_url": "https://api.github.com/users/vminkov/followers",
    "following_url": "https://api.github.com/users/vminkov/following{/other_user}",
    "gists_url": "https://api.github.com/users/vminkov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vminkov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vminkov/subscriptions",
    "organizations_url": "https://api.github.com/users/vminkov/orgs",
    "repos_url": "https://api.github.com/users/vminkov/repos",
    "events_url": "https://api.github.com/users/vminkov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vminkov/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    },
    {
      "id": 3759719790,
      "node_id": "LA_kwDOGBlvNc7gGMVu",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-low",
      "name": "P-low",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: low"
    },
    {
      "id": 3759720362,
      "node_id": "LA_kwDOGBlvNc7gGMeq",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-average",
      "name": "D-average",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: average"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2022-03-29T15:36:26Z",
  "updated_at": "2023-05-10T18:54:11Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nIt would be nice to have a Forge provided modifier that lets one mark a test as skipped `[SKIP]` depending on some custom condition. The specific use case we need it for is to mark which tests are run on different mainnet forks\r\n\r\nThe code that we currently use looks like this (below) but it marks the skipped tests as passed `[PASS]` \r\n\r\n```\r\n  uint256 BSC_MAINNET = 56;\r\n  uint256 ETH_KOVAN = 42;\r\n  uint256 ETH_RINKEBY = 4;\r\n  uint256 EVMOS_TESTNET = 9000;\r\n\r\n  /// custom modifier for running tests conditionally\r\n  modifier shouldRun(bool run) {\r\n    if (run) {\r\n      _;\r\n    }\r\n  }\r\n\r\n // filter function for a specific chain\r\n  function forChains(uint256 id0) public view returns (bool) {\r\n    return block.chainid == id0;\r\n  }\r\n\r\n // filter function for multiple chains\r\n  function forChains(uint256 id0, uint256 id1) public view returns (bool) {\r\n    return block.chainid == id0 || block.chainid == id1;\r\n  }\r\n\r\n\r\n  // TEST CASES\r\n\r\n\r\n  function testSomething() public {\r\n    // this test will be run on all chains\r\n  }\r\n \r\n  function testSomethingElse() public shouldRun(forChains(BSC, ETH_KOVAN)) {\r\n    // this test will be skipped on EVMOS_TESTNET and ETH_RINKEBY\r\n  }\r\n```\r\n\r\n\r\nI would imagine that we're provided by the forge env either a modifier like `shouldRun(forChains(...))` or some assembly opcode to return from the test marking it as skipped `[SKIP]` and then we can craft the modifier in the same way\r\n\r\n```\r\n  modifier shouldRun(bool run) {\r\n    if (run) {\r\n      _;\r\n    }\r\n    else {\r\n      assembly {\r\n        some_op_code_to_mark_test_as_skipped()\r\n      }\r\n    }\r\n  }\r\n```\r\n\r\n### Additional context\r\n\r\n![image](https://user-images.githubusercontent.com/2662912/160651050-17cb2403-e4b8-47e8-ac4d-9b1c2ba70e31.png)",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1123/reactions",
    "total_count": 4,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1123/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1082116114",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1123#issuecomment-1082116114",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1123",
    "id": 1082116114,
    "node_id": "IC_kwDOGBlvNc5Af8gS",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-29T16:46:03Z",
    "updated_at": "2022-03-29T16:49:22Z",
    "author_association": "MEMBER",
    "body": "Note on implementation: This could be a cheatcode (`vm.skip(bool)`) that simply reverts with some magic bytes. When a test reverts, we then check if the revert is the magic bytes, and if it is, we mark the test as skipped instead of failed\r\n\r\nOthers could then implement their custom modifiers, and `forge-std` could also have one, something like:\r\n\r\n```solidity\r\nmodifier shouldRun(bool pred) {\r\n  vm.skip(!pred);\r\n  _;\r\n}\r\n\r\n// Or\r\nmodifier shouldRunForChains(uint256 id0, uint256 id1) public view returns (bool) {\r\n  vm.skip(block.chainid != id0 && block.chainid != id1);\r\n  _;\r\n}\r\n```\r\n\r\nThe bulk of the work is not the cheatcode itself, but adjusting all of the test-related code to move away from `success` (true/false) to an enum\r\n\r\nMarked it as low priority since it can already be solved using custom solutions, even if the outcome is not 100% desireable",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1082116114/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1110799041",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1123#issuecomment-1110799041",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1123",
    "id": 1110799041,
    "node_id": "IC_kwDOGBlvNc5CNXLB",
    "user": {
      "login": "0x00000002",
      "id": 24738644,
      "node_id": "MDQ6VXNlcjI0NzM4NjQ0",
      "avatar_url": "https://avatars.githubusercontent.com/u/24738644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x00000002",
      "html_url": "https://github.com/0x00000002",
      "followers_url": "https://api.github.com/users/0x00000002/followers",
      "following_url": "https://api.github.com/users/0x00000002/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x00000002/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x00000002/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x00000002/subscriptions",
      "organizations_url": "https://api.github.com/users/0x00000002/orgs",
      "repos_url": "https://api.github.com/users/0x00000002/repos",
      "events_url": "https://api.github.com/users/0x00000002/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x00000002/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-27T09:48:49Z",
    "updated_at": "2022-04-27T09:48:49Z",
    "author_association": "NONE",
    "body": "```\r\n    /**\r\n     * @notice this modifier will skip the testFail*** ONLY\r\n     */\r\n    modifier skipFail(bool isSkipped) {\r\n        if (!isSkipped) {\r\n            require(0 == 1); \r\n            _;\r\n        }\r\n    }```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1110799041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1201701424",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1123#issuecomment-1201701424",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1123",
    "id": 1201701424,
    "node_id": "IC_kwDOGBlvNc5HoIIw",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-01T20:44:23Z",
    "updated_at": "2022-08-01T20:44:38Z",
    "author_association": "MEMBER",
    "body": "I wonder if this is needed anymore since we now have fork-related cheatcodes to choose what fork to use on a per-test level? Wdyt @vminkov? I can't really think of a use case beyond that.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1201701424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1203489556",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1123#issuecomment-1203489556",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1123",
    "id": 1203489556,
    "node_id": "IC_kwDOGBlvNc5Hu8sU",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-03T05:06:42Z",
    "updated_at": "2022-08-03T05:08:14Z",
    "author_association": "COLLABORATOR",
    "body": "I still think this feature is useful in some cases. For example with hardhat, I'd sometimes scaffold out a bunch of unimplemented tests and mark them as skipped to signal that they're not implemented. Having them pass/fail didn't feel correct since it might be a while until all tests are implemented.\r\n\r\nInstead of a cheatcode, another idea is a special test name prefix, like `function skipTest*()` instead of the usual `function test*()`. (Either cheatcode or function name is fine with me, no preference here)\r\n\r\nI don't feel too strongly about this feature and am ok marking this closed, pending @vminkov's thoughts",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1203489556/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1203506039",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1123#issuecomment-1203506039",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1123",
    "id": 1203506039,
    "node_id": "IC_kwDOGBlvNc5HvAt3",
    "user": {
      "login": "vminkov",
      "id": 2662912,
      "node_id": "MDQ6VXNlcjI2NjI5MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2662912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vminkov",
      "html_url": "https://github.com/vminkov",
      "followers_url": "https://api.github.com/users/vminkov/followers",
      "following_url": "https://api.github.com/users/vminkov/following{/other_user}",
      "gists_url": "https://api.github.com/users/vminkov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vminkov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vminkov/subscriptions",
      "organizations_url": "https://api.github.com/users/vminkov/orgs",
      "repos_url": "https://api.github.com/users/vminkov/repos",
      "events_url": "https://api.github.com/users/vminkov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vminkov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-03T05:37:16Z",
    "updated_at": "2022-08-03T05:37:16Z",
    "author_association": "NONE",
    "body": "For our use case the fork-related cheatcodes are good enough alternative. It is still useful to mark a test case as skipped when the reasons for its failure are not related to the code that is tested, but to the fork RPC URL being invalid, for example.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1203506039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1205161510",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1123#issuecomment-1205161510",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1123",
    "id": 1205161510,
    "node_id": "IC_kwDOGBlvNc5H1U4m",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-04T12:02:34Z",
    "updated_at": "2022-08-04T12:08:56Z",
    "author_association": "MEMBER",
    "body": "> Instead of a cheatcode, another idea is a special test name prefix, like function skipTest*() instead of the usual function test*(). (Either cheatcode or function name is fine with me, no preference here)\r\n\r\nI think this would be the best fix here, since we identify tests via naming convention, simply adding `skip`, or `ignore` feels more appropriate than adding a `vm.skip()` call.\r\nthis prefix will ignore it automatically, we jus need to include hem in the output as \"ignored\"",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1205161510/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1205415173",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1123#issuecomment-1205415173",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1123",
    "id": 1205415173,
    "node_id": "IC_kwDOGBlvNc5H2S0F",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-04T15:31:15Z",
    "updated_at": "2022-08-04T15:31:15Z",
    "author_association": "MEMBER",
    "body": "I thought the OP wanted to skip tests on certain conditions like the chain id, which the `skiptest` idea I think does not address",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1205415173/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1205438246",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1123#issuecomment-1205438246",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1123",
    "id": 1205438246,
    "node_id": "IC_kwDOGBlvNc5H2Ycm",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-04T15:49:55Z",
    "updated_at": "2022-08-04T15:50:24Z",
    "author_association": "COLLABORATOR",
    "body": "Probably should have left this comment in this issue instead, so linking to it here https://github.com/foundry-rs/foundry/pull/2606#issuecomment-1205435913\r\n\r\n> Ah good point, it would be nice to support contract-level skips too, but `contract SkipMyContract` would be a new naming approach + seems more likely to clash with a real contract name than a `test` prefix. I'd be ok with it, but could also be an argument to go the cheatcode route instead.\r\n> \r\n> The cheatcode approach does give more flexibility, since you can have `vm.skip(bool)` and put some condition in there, so I think I've convinced myself that it's the better approach",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1205438246/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1340717352",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1123#issuecomment-1340717352",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1123",
    "id": 1340717352,
    "node_id": "IC_kwDOGBlvNc5P6bko",
    "user": {
      "login": "alcueca",
      "id": 38806121,
      "node_id": "MDQ6VXNlcjM4ODA2MTIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/38806121?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcueca",
      "html_url": "https://github.com/alcueca",
      "followers_url": "https://api.github.com/users/alcueca/followers",
      "following_url": "https://api.github.com/users/alcueca/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcueca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcueca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcueca/subscriptions",
      "organizations_url": "https://api.github.com/users/alcueca/orgs",
      "repos_url": "https://api.github.com/users/alcueca/repos",
      "events_url": "https://api.github.com/users/alcueca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcueca/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-07T10:24:25Z",
    "updated_at": "2022-12-07T10:24:25Z",
    "author_association": "NONE",
    "body": "I've got another use case for this feature, which I originally described in #3845, and that now I'm moving here.\r\n\r\nWhen coding a test harness for live contracts, it is not possible to know in advance the state the the smart contracts will be in. Therefore, some tests will make sense, and others will not.\r\n\r\nFor example, we might have a set of tests that make sense on a given uninitialized contract, but once the contract is initialized it would make more sense to skip those tests and move on to the next ones in the same file.\r\n\r\nThe workaround described above still works, but the PASS in the output might still lead to confusion as to what is the current state of my contracts.\r\n\r\nI would very much prefer if the test would show as SKIP, and maybe even in the summary at the end (\"67 passed, 32 skipped, 0 failed\", for example). `vm.skip(bool)` would work just fine.\r\n\r\nAdditional context\r\nIn [this test file](https://github.com/yieldprotocol/strategy-v2/blob/6bb7c7f73340537053c6a147b207b91139741c4f/test/StrategyHarness.t.sol#L237), this test only makes sense in the contract is in an EJECTED state after the setup function.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1340717352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1542657586",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1123#issuecomment-1542657586",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1123",
    "id": 1542657586,
    "node_id": "IC_kwDOGBlvNc5b8xYy",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-10T18:54:10Z",
    "updated_at": "2023-05-10T18:54:10Z",
    "author_association": "COLLABORATOR",
    "body": "Copying some nice from https://github.com/foundry-rs/foundry/issues/4918 here, cc @shazow\r\n- Two new cheats: `vm.skip(bool skip)` and `vm.skip(bool skip, string calldata reason)`, where the latter prints a reason string\r\n- Ensure the `skip` call can be made at the test level or `setUp` level\r\n\r\ncc @Evalir, might be an easy one and this is often requested",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1542657586/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
