{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2326",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2326/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2326/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2326/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2326",
  "id": 1305220299,
  "node_id": "I_kwDOGBlvNc5NzBTL",
  "number": 2326,
  "title": "feat(forge): whitelist certain files to use ffi",
  "user": {
    "login": "OliverNChalk",
    "id": 11343499,
    "node_id": "MDQ6VXNlcjExMzQzNDk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/11343499?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/OliverNChalk",
    "html_url": "https://github.com/OliverNChalk",
    "followers_url": "https://api.github.com/users/OliverNChalk/followers",
    "following_url": "https://api.github.com/users/OliverNChalk/following{/other_user}",
    "gists_url": "https://api.github.com/users/OliverNChalk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/OliverNChalk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/OliverNChalk/subscriptions",
    "organizations_url": "https://api.github.com/users/OliverNChalk/orgs",
    "repos_url": "https://api.github.com/users/OliverNChalk/repos",
    "events_url": "https://api.github.com/users/OliverNChalk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/OliverNChalk/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759719790,
      "node_id": "LA_kwDOGBlvNc7gGMVu",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-low",
      "name": "P-low",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: low"
    },
    {
      "id": 4182991461,
      "node_id": "LA_kwDOGBlvNc75U2Jl",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-script",
      "name": "Cmd-forge-script",
      "color": "006B75",
      "default": false,
      "description": "Command: forge script"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2022-07-14T19:47:47Z",
  "updated_at": "2022-07-18T08:12:42Z",
  "closed_at": "2022-07-18T08:12:42Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nCurrently, one can only enable/disable ffi for a given execution environment. This means that all running source code has access to `ffi` or none of it does. This means malicious libraries can do the following:\r\n\r\n```solidity\r\ntry vm.ffi(malicious_task) {\r\n    // running with ffi, do any additional tasks needed\r\n} catch {\r\n    // not running with ffi\r\n}\r\n```\r\n\r\nOne could argue that the user is required to understand & trust all their dependencies. But this seems slightly intense and could reasonably be missed by many users.\r\n\r\n## Potential Solutions\r\n\r\nTo help aid managing the safety issue of `ffi`, one could imagine declaring the following property in `foundry.toml`:\r\n```toml\r\nffi_enabled = [\r\n    \"test/__helpers/YulDeployer.sol\",\r\n    \"test/__helpers/HuffDeployer.sol\",\r\n    \"lib/forge-vyper/src/VyperDeployer.sol\",\r\n]\r\n```\r\n\r\nThis would enable whitelisting a single file within a repository, greatly reducing the number of SLOC a user has to audit to use `ffi`.\r\n\r\n## Considerations\r\n\r\n- Unsure of the priority here given there has been a general goal to minimize required `ffi` usage through additional cheatcodes\r\n- Unsure if it is easy to determine the calling `file`/`contract` for the purposes of vetting `ffi`\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2326/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2326/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1184903990",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2326#issuecomment-1184903990",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2326",
    "id": 1184903990,
    "node_id": "IC_kwDOGBlvNc5GoDM2",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-14T21:16:54Z",
    "updated_at": "2022-07-14T21:16:54Z",
    "author_association": "MEMBER",
    "body": "Hmm this seems reasonable as an ask, but unsure how feasible it is, especially given inheritance etc.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1184903990/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1186293790",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2326#issuecomment-1186293790",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2326",
    "id": 1186293790,
    "node_id": "IC_kwDOGBlvNc5GtWge",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-16T21:10:29Z",
    "updated_at": "2022-07-16T21:10:29Z",
    "author_association": "MEMBER",
    "body": "There's two ways to go about this (only really one way):\r\n\r\n- In the first case, we'd need to identify contracts as we execute the tests. We used to do this, but it's pretty expensive and requires a bigger refactor, so probably a non-starter\r\n- We could do some sort of static analysis where we would check if any non-whitelisted files call FFI and exit if they do. This is more feasible but probably poor UX? Although if you don't whitelist the file, and it wanted to do FFI, I guess we'd have to abort execution in the first case as well, so it might be ok",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1186293790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1186634658",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2326#issuecomment-1186634658",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2326",
    "id": 1186634658,
    "node_id": "IC_kwDOGBlvNc5Gupui",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-18T00:00:32Z",
    "updated_at": "2022-07-18T00:00:32Z",
    "author_association": "COLLABORATOR",
    "body": "> This would enable whitelisting a single file within a repository, greatly reducing the number of SLOC a user has to audit to use ffi.\r\n\r\nHmm, I wonder how much value this feature really even adds? If you just search the codebase for all calls to ffi with something like `grep -r \\\\.ffi`, that also greatly reduces the number of SLOC a user has to audit to use ffi 😅\r\n\r\nMaybe a better solution is to add a command like `forge audit` (name based off [`yarn audit`](https://classic.yarnpkg.com/lang/en/docs/cli/audit/), maybe cargo has a similar command name we should use instead since \"audit\" already has a lot of connotations in the blockchain world) which basically executes that grep search and prints all uses of potentially dangerous cheatcodes like ffi or file reading/writing.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1186634658/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1186651448",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2326#issuecomment-1186651448",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2326",
    "id": 1186651448,
    "node_id": "IC_kwDOGBlvNc5Gut04",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-18T00:54:48Z",
    "updated_at": "2022-07-18T00:54:48Z",
    "author_association": "MEMBER",
    "body": "i like that, there's [cargo audit](https://crates.io/crates/cargo-audit) which checks the lockfile for any crates with vulnerable editions. i can see that e.g. for checking if you have installed a bad Solmate version (mabye there was a bug in a release for example), or for printing you the `vm.ffi` calls",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1186651448/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1186751424",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2326#issuecomment-1186751424",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2326",
    "id": 1186751424,
    "node_id": "IC_kwDOGBlvNc5GvGPA",
    "user": {
      "login": "OliverNChalk",
      "id": 11343499,
      "node_id": "MDQ6VXNlcjExMzQzNDk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/11343499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OliverNChalk",
      "html_url": "https://github.com/OliverNChalk",
      "followers_url": "https://api.github.com/users/OliverNChalk/followers",
      "following_url": "https://api.github.com/users/OliverNChalk/following{/other_user}",
      "gists_url": "https://api.github.com/users/OliverNChalk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OliverNChalk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OliverNChalk/subscriptions",
      "organizations_url": "https://api.github.com/users/OliverNChalk/orgs",
      "repos_url": "https://api.github.com/users/OliverNChalk/repos",
      "events_url": "https://api.github.com/users/OliverNChalk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OliverNChalk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-18T04:22:44Z",
    "updated_at": "2022-07-18T04:22:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I like the audit solution, especially if it can leverage remappings to exhaustively check the referenced source code. Happy if we want to close this issue in favour of a new one, or re-write this one?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1186751424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1186756621",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2326#issuecomment-1186756621",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2326",
    "id": 1186756621,
    "node_id": "IC_kwDOGBlvNc5GvHgN",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-18T04:30:10Z",
    "updated_at": "2022-07-18T04:30:10Z",
    "author_association": "MEMBER",
    "body": "Yeah I think a dedicated `forge audit` issue makes sense where we can brainstorm more ideas :smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1186756621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1186768229",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2326#issuecomment-1186768229",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2326",
    "id": 1186768229,
    "node_id": "IC_kwDOGBlvNc5GvKVl",
    "user": {
      "login": "OliverNChalk",
      "id": 11343499,
      "node_id": "MDQ6VXNlcjExMzQzNDk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/11343499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OliverNChalk",
      "html_url": "https://github.com/OliverNChalk",
      "followers_url": "https://api.github.com/users/OliverNChalk/followers",
      "following_url": "https://api.github.com/users/OliverNChalk/following{/other_user}",
      "gists_url": "https://api.github.com/users/OliverNChalk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OliverNChalk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OliverNChalk/subscriptions",
      "organizations_url": "https://api.github.com/users/OliverNChalk/orgs",
      "repos_url": "https://api.github.com/users/OliverNChalk/repos",
      "events_url": "https://api.github.com/users/OliverNChalk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OliverNChalk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-18T04:55:38Z",
    "updated_at": "2022-07-18T04:55:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closed in favour of #2360",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1186768229/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
