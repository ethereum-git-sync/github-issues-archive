{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2909",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2909/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2909/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2909/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2909",
  "id": 1348530395,
  "node_id": "I_kwDOGBlvNc5QYPDb",
  "number": 2909,
  "title": "Expand the use of `vm.expectRevert`",
  "user": {
    "login": "pedrommaiaa",
    "id": 100535780,
    "node_id": "U_kgDOBf4N5A",
    "avatar_url": "https://avatars.githubusercontent.com/u/100535780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pedrommaiaa",
    "html_url": "https://github.com/pedrommaiaa",
    "followers_url": "https://api.github.com/users/pedrommaiaa/followers",
    "following_url": "https://api.github.com/users/pedrommaiaa/following{/other_user}",
    "gists_url": "https://api.github.com/users/pedrommaiaa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pedrommaiaa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pedrommaiaa/subscriptions",
    "organizations_url": "https://api.github.com/users/pedrommaiaa/orgs",
    "repos_url": "https://api.github.com/users/pedrommaiaa/repos",
    "events_url": "https://api.github.com/users/pedrommaiaa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pedrommaiaa/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-08-23T20:51:41Z",
  "updated_at": "2022-08-30T12:43:40Z",
  "closed_at": "2022-08-30T12:43:40Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\n`vm.expectRevert` only works with the next call.  Would be great if when specified with an error message e.g. `vm.expectRevert(bytes(\"SAFE_DEPOSIT_FAILED\"))` vm.expectRevert could trace all the subsequent error messages until it reaches the one specified (or not in the case where it doesn't revert as expected).\n\n### Additional context\n\nIn the image bellow I was using a library to call the `deposit()` function, I was expecting the call to fail, which would consequently make the function call from the library fail as well. I wanted to use `vm.expectRevert` to confirm that the function call from the library would fail as expected but  because `vm.expectRevert` could only catch the `\"Arithmetic over/underflow\"` error in this case there's not really a way for me ensure that the last error is `\"SAFE_DEPOSIT_FAILED\"`.\r\n\r\n<img width=\"340\" alt=\"Screen Shot 2022-08-23 at 4 28 56 PM\" src=\"https://user-images.githubusercontent.com/100535780/186260215-c8684f14-ab41-4e62-bbd6-0f63017636ac.png\">\r\n",
  "closed_by": {
    "login": "pedrommaiaa",
    "id": 100535780,
    "node_id": "U_kgDOBf4N5A",
    "avatar_url": "https://avatars.githubusercontent.com/u/100535780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pedrommaiaa",
    "html_url": "https://github.com/pedrommaiaa",
    "followers_url": "https://api.github.com/users/pedrommaiaa/followers",
    "following_url": "https://api.github.com/users/pedrommaiaa/following{/other_user}",
    "gists_url": "https://api.github.com/users/pedrommaiaa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pedrommaiaa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pedrommaiaa/subscriptions",
    "organizations_url": "https://api.github.com/users/pedrommaiaa/orgs",
    "repos_url": "https://api.github.com/users/pedrommaiaa/repos",
    "events_url": "https://api.github.com/users/pedrommaiaa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pedrommaiaa/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2909/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2909/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1226133733",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2909#issuecomment-1226133733",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2909",
    "id": 1226133733,
    "node_id": "IC_kwDOGBlvNc5JFVDl",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-24T19:12:45Z",
    "updated_at": "2022-08-24T19:12:45Z",
    "author_association": "MEMBER",
    "body": "That's not true; it would catch `TRANSFER_FROM_FAILED`. To be more precise, it only works for the next call *at the same depth* at which `expectRevert` was called, so it won't trigger on calls made from other calls, if that makes sense.\r\n\r\nI'm not entirely sure where the `SAFE_DEPOSIT_FAILED` message comes from, but it looks like it is coming from the test itself? If so, this is not something we would be able to catch easily and would likely be an antipattern anyway. Can you post a snippet illustrating what the test is doing?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1226133733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1231615406",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2909#issuecomment-1231615406",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2909",
    "id": 1231615406,
    "node_id": "IC_kwDOGBlvNc5JaPWu",
    "user": {
      "login": "pedrommaiaa",
      "id": 100535780,
      "node_id": "U_kgDOBf4N5A",
      "avatar_url": "https://avatars.githubusercontent.com/u/100535780?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pedrommaiaa",
      "html_url": "https://github.com/pedrommaiaa",
      "followers_url": "https://api.github.com/users/pedrommaiaa/followers",
      "following_url": "https://api.github.com/users/pedrommaiaa/following{/other_user}",
      "gists_url": "https://api.github.com/users/pedrommaiaa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pedrommaiaa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pedrommaiaa/subscriptions",
      "organizations_url": "https://api.github.com/users/pedrommaiaa/orgs",
      "repos_url": "https://api.github.com/users/pedrommaiaa/repos",
      "events_url": "https://api.github.com/users/pedrommaiaa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pedrommaiaa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-30T12:43:40Z",
    "updated_at": "2022-08-30T12:43:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "It makes sense that it would be an anti-pattern. I found a work around the issue that I was having so I will close this for now.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1231615406/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
