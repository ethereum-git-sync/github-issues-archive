{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/432",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/432/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/432/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/432/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/432",
  "id": 1100453829,
  "node_id": "I_kwDOGBlvNc5Bl5fF",
  "number": 432,
  "title": "bug: `mockCall` not working as expected",
  "user": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    },
    {
      "id": 3759720129,
      "node_id": "LA_kwDOGBlvNc7gGMbB",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-hard",
      "name": "D-hard",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: hard"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2022-01-12T15:09:39Z",
  "updated_at": "2023-07-14T19:39:24Z",
  "closed_at": "2023-03-09T22:40:17Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "The tests in `CheatCodes.sol` passed, however the test below fails. Tagging @onbjerg here since you implemented this feature originally in #403\r\n\r\n```solidity\r\npragma solidity 0.8.10;\r\n\r\nimport \"ds-test/test.sol\";\r\n\r\ninterface Vm {\r\n  function mockCall(address,bytes calldata,bytes calldata) external;\r\n}\r\n\r\ncontract MyContract {\r\n  function outer() public returns (uint256) {\r\n    return inner();\r\n  }\r\n\r\n  function inner() public returns (uint256) {\r\n    return 5;\r\n  }\r\n}\r\n\r\ncontract MyContractTest is DSTest {\r\n  MyContract c;\r\n  Vm vm = Vm(address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))));\r\n\r\n  function testMock() public {\r\n    c = new MyContract();\r\n    assertEq(c.inner(), 5);\r\n    assertEq(c.outer(), 5);\r\n\r\n    uint256 _newVal = 10;\r\n    vm.mockCall(address(c), abi.encodeWithSelector(c.inner.selector), abi.encode(_newVal));\r\n\r\n    assertEq(c.inner(), _newVal); // passes\r\n    assertEq(c.outer(), _newVal); // fails\r\n  }\r\n}\r\n```",
  "closed_by": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/432/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/432/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1011147680",
    "html_url": "https://github.com/foundry-rs/foundry/issues/432#issuecomment-1011147680",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/432",
    "id": 1011147680,
    "node_id": "IC_kwDOGBlvNc48ROOg",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-12T15:14:39Z",
    "updated_at": "2022-01-12T15:15:44Z",
    "author_association": "MEMBER",
    "body": "Maybe the documentation was a bit confusing - `outer` is not making a call in the EVM sense of the word, it is just jumping to a new location in the code of the contract. `mockCall` only works for calls between accounts. I think my usage of the word \"internal call\" (by which I mean a contract calling another contract) might have lead to that confusion?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1011147680/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1011151979",
    "html_url": "https://github.com/foundry-rs/foundry/issues/432#issuecomment-1011151979",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/432",
    "id": 1011151979,
    "node_id": "IC_kwDOGBlvNc48RPRr",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-12T15:18:48Z",
    "updated_at": "2022-01-12T15:18:48Z",
    "author_association": "COLLABORATOR",
    "body": "Ah that makes sense. Changing `return inner()` to `return this.inner()` does result in the test passing.\r\n\r\nHowever as a user I'd expect (and personally would like) the above usage to pass, even though we're jumping to `inner()` and not calling. Having `inner()` return different values based on whether it was a call vs. jump seems undesirable",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1011151979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1011184557",
    "html_url": "https://github.com/foundry-rs/foundry/issues/432#issuecomment-1011184557",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/432",
    "id": 1011184557,
    "node_id": "IC_kwDOGBlvNc48RXOt",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-12T15:50:12Z",
    "updated_at": "2022-01-12T15:55:20Z",
    "author_association": "MEMBER",
    "body": "Hmm, this is going to be pretty difficult. We can get the locations of different calls in the bytecode using `functionDebugData` from the Solidity compiler JSON output, but the names are a bit mangled (something like `@<actual name>_<some id>`) and we would also have to hook into jump instructions which I am not sure we are equipped to right now (think we would have to hook [here](https://github.com/gakonst/foundry/blob/1dd55d68bceccce37e2f844225a73c177c83373e/evm-adapters/src/sputnik/cheatcodes/cheatcode_handler.rs#L1661-L1668)?)\r\n\r\nI definitely agree that it makes sense, though.\r\n\r\nJust noting here for the future (I don't have much bandwidth currently):\r\n\r\n- We need to parse `functionDebugData` from the Solidity compiler and build a mapping of locations to symbols\r\n- The `mockCall` (and `expectCall`?) cheatcodes need to determine whether we are dealing with an actual call or a jump and store that information accordingly\r\n- We need to hook into `CheatcodeStackExecutor::pre_validate` and check if we are dealing with a jump instruction and if we are dealing with a known location we want to mock, and then we need to _somehow_ return our mocked data by skipping the code section at the jump destination and just returning the mocked data - not sure how we are going to do this since that seems to be in [`Machine` ](https://docs.rs/evm/latest/evm/struct.Machine.html)which is nested inside [`Runtime`](https://docs.rs/evm/latest/evm/struct.Runtime.html) which is instantiated in the Sputnik executor internals\r\n\r\nI'm also not sure if some of these functions are inlined if they are internal(?)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1011184557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1011194765",
    "html_url": "https://github.com/foundry-rs/foundry/issues/432#issuecomment-1011194765",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/432",
    "id": 1011194765,
    "node_id": "IC_kwDOGBlvNc48RZuN",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-12T15:59:56Z",
    "updated_at": "2022-01-12T15:59:56Z",
    "author_association": "MEMBER",
    "body": "Very briefly skimming it looks like it would be a lot easier if we used revm, but I'm not sure what the drawbacks are",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1011194765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1011987026",
    "html_url": "https://github.com/foundry-rs/foundry/issues/432#issuecomment-1011987026",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/432",
    "id": 1011987026,
    "node_id": "IC_kwDOGBlvNc48UbJS",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-13T10:11:31Z",
    "updated_at": "2022-01-13T10:11:31Z",
    "author_association": "MEMBER",
    "body": "We intend to switch over to Revm eventually, is the problem that hooking so deeply into sputnik can be hard, whereas revm's inspectors are cleaner?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1011987026/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1012296448",
    "html_url": "https://github.com/foundry-rs/foundry/issues/432#issuecomment-1012296448",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/432",
    "id": 1012296448,
    "node_id": "IC_kwDOGBlvNc48VmsA",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-13T16:25:20Z",
    "updated_at": "2022-01-13T16:25:20Z",
    "author_association": "MEMBER",
    "body": "Yeah, it's pretty much impossible for us (as far as I can tell) to hook into the actual stepping of the EVM itself with Sputnik, but revm inspectors solve this by giving us full control",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1012296448/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1462925662",
    "html_url": "https://github.com/foundry-rs/foundry/issues/432#issuecomment-1462925662",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/432",
    "id": 1462925662,
    "node_id": "IC_kwDOGBlvNc5XMnle",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-09T22:40:16Z",
    "updated_at": "2023-03-09T22:40:16Z",
    "author_association": "COLLABORATOR",
    "body": "Going to close this feature request, and we can always re-open if needed. IME I have not had the need to do this recently, so closing",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1462925662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1636151425",
    "html_url": "https://github.com/foundry-rs/foundry/issues/432#issuecomment-1636151425",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/432",
    "id": 1636151425,
    "node_id": "IC_kwDOGBlvNc5hhbCB",
    "user": {
      "login": "avniculae",
      "id": 43644109,
      "node_id": "MDQ6VXNlcjQzNjQ0MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/43644109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/avniculae",
      "html_url": "https://github.com/avniculae",
      "followers_url": "https://api.github.com/users/avniculae/followers",
      "following_url": "https://api.github.com/users/avniculae/following{/other_user}",
      "gists_url": "https://api.github.com/users/avniculae/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/avniculae/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/avniculae/subscriptions",
      "organizations_url": "https://api.github.com/users/avniculae/orgs",
      "repos_url": "https://api.github.com/users/avniculae/repos",
      "events_url": "https://api.github.com/users/avniculae/events{/privacy}",
      "received_events_url": "https://api.github.com/users/avniculae/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-14T17:15:54Z",
    "updated_at": "2023-07-14T18:47:57Z",
    "author_association": "NONE",
    "body": "> Going to close this feature request, and we can always re-open if needed. IME I have not had the need to do this recently, so closing\r\n\r\n@mds1 Would you mind sharing how can one achieve stateless unit tests with this `mockCall` limitation and without implementing additional mocked contracts?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1636151425/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1636332186",
    "html_url": "https://github.com/foundry-rs/foundry/issues/432#issuecomment-1636332186",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/432",
    "id": 1636332186,
    "node_id": "IC_kwDOGBlvNc5hiHKa",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-14T19:39:24Z",
    "updated_at": "2023-07-14T19:39:24Z",
    "author_association": "COLLABORATOR",
    "body": "@avniculae Can you expand on what you’re trying to do? I don’t understand exactly what you’re looking for :) ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1636332186/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
