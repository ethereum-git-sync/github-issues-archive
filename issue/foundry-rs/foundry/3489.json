{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3489",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3489/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3489/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3489/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3489",
  "id": 1408116564,
  "node_id": "I_kwDOGBlvNc5T7idU",
  "number": 3489,
  "title": "Forge coverage for modifiers is missing/incomplete",
  "user": {
    "login": "ChiTimesChi",
    "id": 88190723,
    "node_id": "MDQ6VXNlcjg4MTkwNzIz",
    "avatar_url": "https://avatars.githubusercontent.com/u/88190723?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ChiTimesChi",
    "html_url": "https://github.com/ChiTimesChi",
    "followers_url": "https://api.github.com/users/ChiTimesChi/followers",
    "following_url": "https://api.github.com/users/ChiTimesChi/following{/other_user}",
    "gists_url": "https://api.github.com/users/ChiTimesChi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ChiTimesChi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ChiTimesChi/subscriptions",
    "organizations_url": "https://api.github.com/users/ChiTimesChi/orgs",
    "repos_url": "https://api.github.com/users/ChiTimesChi/repos",
    "events_url": "https://api.github.com/users/ChiTimesChi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ChiTimesChi/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 4233058229,
      "node_id": "LA_kwDOGBlvNc78T1e1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-coverage",
      "name": "Cmd-forge-coverage",
      "color": "006B75",
      "default": false,
      "description": "Command: forge coverage"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-10-13T16:37:33Z",
  "updated_at": "2023-06-30T15:40:46Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (28312e7 2022-10-13T00:10:05.477412592Z)\n\n### What command(s) is the bug in?\n\nforge coverage\n\n### Operating System\n\nLinux\n\n### Describe the bug\n\n# Contract example\r\nContracts `Bar` and `Foo` are identical in terms of what they are doing, the difference is whether the security check is done in the function modifier or not.\r\n\r\nFull example is available here: https://github.com/ChiTimesChi/coverage-modifier\r\n\r\n```solidity\r\nabstract contract Ownable {\r\n    address public owner;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner == msg.sender, \"!owner\");\r\n        _;\r\n    }\r\n}\r\n\r\ncontract Bar is Ownable {\r\n    event BarEvent();\r\n\r\n    function bar() external {\r\n        require(owner == msg.sender, \"!owner\");\r\n        emit BarEvent();\r\n    }\r\n}\r\n\r\ncontract Foo is Ownable {\r\n    event FooEvent();\r\n\r\n    function foo() external onlyOwner {\r\n        emit FooEvent();\r\n    }\r\n}\r\n```\r\n\r\n# Tests example\r\nThis set of tests doesn't include \"try calling as not owner\" tests.\r\n\r\n```solidity\r\ncontract FoobarTest is Test {\r\n    event BarEvent();\r\n    event FooEvent();\r\n\r\n    Foo internal foo;\r\n    Bar internal bar;\r\n\r\n    function setUp() public {\r\n        foo = new Foo();\r\n        bar = new Bar();\r\n    }\r\n\r\n    function testFooAsOwner() public {\r\n        vm.expectEmit(true, true, true, true);\r\n        emit FooEvent();\r\n        foo.foo();\r\n    }\r\n\r\n    function testBarAsOwner() public {\r\n        vm.expectEmit(true, true, true, true);\r\n        emit BarEvent();\r\n        bar.bar();\r\n    }\r\n}\r\n```\r\n\r\n# Coverage\r\n\r\n![image](https://user-images.githubusercontent.com/88190723/195651959-0d6e84c6-82ed-46f1-8d67-5c8211a8a871.png)\r\n![image](https://user-images.githubusercontent.com/88190723/195652130-eb458aa9-0777-41b2-a326-29ee1b7d672f.png)\r\n![image](https://user-images.githubusercontent.com/88190723/195652512-d6e7f5a3-b5a8-4f85-93b2-1be6d07065ba.png)\r\n\r\nAs you can see, the coverage report hints that the `Bar` tests are incomplete, but for `Foo` there's no way to tell that. The coverage for `Ownable` is missing entirely (contract being non abstract doesn't change anything).\r\n\r\n# Expected coverage\r\nWhat I was hoping to see? Ideally, if a function has a few modifiers, the coverage report should not differ _too much_ from the very same function rewritten without any modifiers. Meaning that coverage should give me a clue as to whether the tests are covering not only all branches within the function, but within its modifiers as well.\r\n\r\nhttps://github.com/sc-forks/solidity-coverage/issues/286 is a good read as well.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3489/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3489/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1291959554",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3489#issuecomment-1291959554",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3489",
    "id": 1291959554,
    "node_id": "IC_kwDOGBlvNc5NAb0C",
    "user": {
      "login": "ChiTimesChi",
      "id": 88190723,
      "node_id": "MDQ6VXNlcjg4MTkwNzIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/88190723?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChiTimesChi",
      "html_url": "https://github.com/ChiTimesChi",
      "followers_url": "https://api.github.com/users/ChiTimesChi/followers",
      "following_url": "https://api.github.com/users/ChiTimesChi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChiTimesChi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChiTimesChi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChiTimesChi/subscriptions",
      "organizations_url": "https://api.github.com/users/ChiTimesChi/orgs",
      "repos_url": "https://api.github.com/users/ChiTimesChi/repos",
      "events_url": "https://api.github.com/users/ChiTimesChi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChiTimesChi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-26T12:28:57Z",
    "updated_at": "2022-10-26T12:28:57Z",
    "author_association": "NONE",
    "body": "@rkrasiuk any update for this? I wasn't able to find any good solution to this, and ensuring that the tests cover all functions with \"security\" modifiers like `onlyOwner` is kind of crucial.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1291959554/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1294544293",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3489#issuecomment-1294544293",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3489",
    "id": 1294544293,
    "node_id": "IC_kwDOGBlvNc5NKS2l",
    "user": {
      "login": "rkrasiuk",
      "id": 25429261,
      "node_id": "MDQ6VXNlcjI1NDI5MjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25429261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkrasiuk",
      "html_url": "https://github.com/rkrasiuk",
      "followers_url": "https://api.github.com/users/rkrasiuk/followers",
      "following_url": "https://api.github.com/users/rkrasiuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkrasiuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkrasiuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkrasiuk/subscriptions",
      "organizations_url": "https://api.github.com/users/rkrasiuk/orgs",
      "repos_url": "https://api.github.com/users/rkrasiuk/repos",
      "events_url": "https://api.github.com/users/rkrasiuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkrasiuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-28T06:55:48Z",
    "updated_at": "2022-10-28T06:55:48Z",
    "author_association": "COLLABORATOR",
    "body": "@onbjerg could you take a look pls? ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1294544293/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1614834773",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3489#issuecomment-1614834773",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3489",
    "id": 1614834773,
    "node_id": "IC_kwDOGBlvNc5gQGxV",
    "user": {
      "login": "yorhodes",
      "id": 3020995,
      "node_id": "MDQ6VXNlcjMwMjA5OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yorhodes",
      "html_url": "https://github.com/yorhodes",
      "followers_url": "https://api.github.com/users/yorhodes/followers",
      "following_url": "https://api.github.com/users/yorhodes/following{/other_user}",
      "gists_url": "https://api.github.com/users/yorhodes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yorhodes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yorhodes/subscriptions",
      "organizations_url": "https://api.github.com/users/yorhodes/orgs",
      "repos_url": "https://api.github.com/users/yorhodes/repos",
      "events_url": "https://api.github.com/users/yorhodes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yorhodes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-30T15:40:38Z",
    "updated_at": "2023-06-30T15:40:46Z",
    "author_association": "NONE",
    "body": "forge coverage basically unusable without this and other bug fixes",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1614834773/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
