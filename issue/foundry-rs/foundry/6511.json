{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6511",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6511/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6511/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6511/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6511",
  "id": 2022877757,
  "node_id": "I_kwDOGBlvNc54kqo9",
  "number": 6511,
  "title": "Parsing and formatting log data on the CLI",
  "user": {
    "login": "mitchmindtree",
    "id": 4587373,
    "node_id": "MDQ6VXNlcjQ1ODczNzM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4587373?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mitchmindtree",
    "html_url": "https://github.com/mitchmindtree",
    "followers_url": "https://api.github.com/users/mitchmindtree/followers",
    "following_url": "https://api.github.com/users/mitchmindtree/following{/other_user}",
    "gists_url": "https://api.github.com/users/mitchmindtree/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mitchmindtree/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mitchmindtree/subscriptions",
    "organizations_url": "https://api.github.com/users/mitchmindtree/orgs",
    "repos_url": "https://api.github.com/users/mitchmindtree/repos",
    "events_url": "https://api.github.com/users/mitchmindtree/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mitchmindtree/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-12-04T02:11:50Z",
  "updated_at": "2023-12-04T02:11:50Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nCast\n\n### Describe the feature you would like\n\nWith `cast`, we can fetch the logs with:\r\n\r\n```\r\ncast logs\r\n```\r\n\r\nWe can filter down to the events that we care about by providing a signature:\r\n\r\n```\r\ncast logs \"MyEvent(uint256 foo, uint256 bar)\"\r\n```\r\n\r\nHowever the stdout still gives us unformatted, raw data (despite knowing the Event signature):\r\n\r\n```\r\n...\r\ndata: 0x000000000000000000000000000000000000000000000000000000000000004d000000000000000000000000000000000000000000000000000000000000004d\r\n...\r\n```\r\n\r\nThis makes sense for ensuring `cast logs` has consistent behaviour. That said it would be nice if there was a way that `cast` could use the signature to output the fields in a formatted manner. E.g. something like:\r\n \r\n ```\r\n cast decode-event --json \"MyEvent(uint256 foo, uint256 bar)\" 0x000000000000000000000000000000000000000000000000000000000000004d000000000000000000000000000000000000000000000000000000000000004d\r\n ```\r\n Which outputs something like:\r\n```json\r\n{\r\n    \"foo\": \"0x000000000000000000000000000000000000000000000000000000000000004d\",\r\n    \"bar\": \"0x000000000000000000000000000000000000000000000000000000000000004d\",\r\n}\r\n```\r\n\r\nPerhaps there's already a command along these lines that I'm missing? What is the command line workflow you use for this? I'm new to foundry - any advice appreciated!\n\n### Additional context\n\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6511/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6511/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
