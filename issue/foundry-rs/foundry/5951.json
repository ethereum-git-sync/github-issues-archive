{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5951",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5951/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5951/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5951/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5951",
  "id": 1918742880,
  "node_id": "I_kwDOGBlvNc5yXbFg",
  "number": 5951,
  "title": "Simpler storage modification",
  "user": {
    "login": "drortirosh",
    "id": 40341007,
    "node_id": "MDQ6VXNlcjQwMzQxMDA3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40341007?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/drortirosh",
    "html_url": "https://github.com/drortirosh",
    "followers_url": "https://api.github.com/users/drortirosh/followers",
    "following_url": "https://api.github.com/users/drortirosh/following{/other_user}",
    "gists_url": "https://api.github.com/users/drortirosh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/drortirosh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/drortirosh/subscriptions",
    "organizations_url": "https://api.github.com/users/drortirosh/orgs",
    "repos_url": "https://api.github.com/users/drortirosh/repos",
    "events_url": "https://api.github.com/users/drortirosh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/drortirosh/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-09-29T07:30:42Z",
  "updated_at": "2023-09-29T07:30:42Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nOther (please describe)\n\n### Describe the feature you would like\n\nThere is a lot of confusion on how to modify storage (e.g. using StdStorage) for testing purposes.\r\nHere is a suggestion to a new way to modify storage.\r\n- add a VM cheat to run transaction with *alternate code* (this is kind of \"reverse delegateCall\")\r\n- developer should override the original contract, and add \"god-mode\" methods to modify storage, and deploy it.\r\n- This after calling:\r\n  `vm.setGodMode(originalContract, godModeContract)`\r\n  he can use `godModeContract.doSometing()` which will modify the storage of `originalContract`\r\n\r\n- this \"GodModeContract\" can either be a sub-class of original contract, or just contain a copy of all its storage (e.g. [safe's storage](https://github.com/safe-global/safe-contracts/blob/main/contracts/libraries/SafeStorage.sol)) \r\n- can even add a helper to generate such \"storage layout\" contract, either by parsing solidity code, or using --storage-layout\n\n### Additional context\n\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5951/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5951/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
