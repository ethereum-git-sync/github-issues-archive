{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1605",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1605/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1605/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1605/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1605",
  "id": 1235571071,
  "node_id": "I_kwDOGBlvNc5JpVF_",
  "number": 1605,
  "title": "`cast interface`  able to name the interface via flag",
  "user": {
    "login": "tynes",
    "id": 6626818,
    "node_id": "MDQ6VXNlcjY2MjY4MTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6626818?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tynes",
    "html_url": "https://github.com/tynes",
    "followers_url": "https://api.github.com/users/tynes/followers",
    "following_url": "https://api.github.com/users/tynes/following{/other_user}",
    "gists_url": "https://api.github.com/users/tynes/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tynes/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tynes/subscriptions",
    "organizations_url": "https://api.github.com/users/tynes/orgs",
    "repos_url": "https://api.github.com/users/tynes/repos",
    "events_url": "https://api.github.com/users/tynes/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tynes/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394235,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjM1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "0052CC",
      "default": true,
      "description": "Good for newcomers"
    },
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752609,
      "node_id": "LA_kwDOGBlvNc7cwseh",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-cast",
      "name": "C-cast",
      "color": "5319E7",
      "default": false,
      "description": "Command: cast"
    },
    {
      "id": 3759719790,
      "node_id": "LA_kwDOGBlvNc7gGMVu",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-low",
      "name": "P-low",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: low"
    },
    {
      "id": 3759720552,
      "node_id": "LA_kwDOGBlvNc7gGMho",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-easy",
      "name": "D-easy",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: easy"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-05-13T18:45:18Z",
  "updated_at": "2022-05-13T23:05:32Z",
  "closed_at": "2022-05-13T23:05:32Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nCast\n\n### Describe the feature you would like\n\n`cast interface` will currently name the output interface `Interface`\r\n\r\n```bash\r\n$ cast interface <path-to-forge-artifact>\r\n```\r\nThis is an example output:\r\n```solidity\r\npragma solidity ^0.8.10;\r\n\r\ninterface Interface {\r\n    event WithdrawalInitiated(uint256 indexed nonce, address indexed sender, address indexed target, uint256 value, uint256 gasLimit, bytes data);\r\n    event WithdrawerBalanceBurnt(uint256 indexed amount);\r\n\r\n    function burn() external;\r\n    function initiateWithdrawal(address _target, uint256 _gasLimit, bytes memory _data) payable external;\r\n    function nonce() view external returns (uint256);\r\n    function sentMessages(bytes32) view external returns (bool);\r\n}\r\n```\r\n\r\nI would like the ability to name the interface via flag. The usecase here would be to have an `interfaces` directory and a script that builds the interface for each contract in the repo (or a select list) and writes them to the `interfaces` directory. Then CI can run that script and see if there is a diff from what was committed and then fail if there is a diff. It would be possible to do so now with `sed` but having the functionality in `cast` would just be easier.\r\n\r\nAlso wondering if it would be desired to infer the name of the interface by just appending a lowercase `i` to the name of the contract if no value by flag is passed. I have seen that pattern used across the ecosystem, but it is opinionated so not sure what everybody thinks of that.\r\n\r\nA nice to have would be copying over any natspec docs\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1605/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1605/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
