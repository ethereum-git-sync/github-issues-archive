{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6629",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6629/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6629/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6629/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6629",
  "id": 2050833819,
  "node_id": "I_kwDOGBlvNc56PT2b",
  "number": 6629,
  "title": "cast storage does not detect slots such as `bytes32 private constant`",
  "user": {
    "login": "montekki",
    "id": 56672,
    "node_id": "MDQ6VXNlcjU2Njcy",
    "avatar_url": "https://avatars.githubusercontent.com/u/56672?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/montekki",
    "html_url": "https://github.com/montekki",
    "followers_url": "https://api.github.com/users/montekki/followers",
    "following_url": "https://api.github.com/users/montekki/following{/other_user}",
    "gists_url": "https://api.github.com/users/montekki/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/montekki/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/montekki/subscriptions",
    "organizations_url": "https://api.github.com/users/montekki/orgs",
    "repos_url": "https://api.github.com/users/montekki/repos",
    "events_url": "https://api.github.com/users/montekki/events{/privacy}",
    "received_events_url": "https://api.github.com/users/montekki/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-12-20T15:47:21Z",
  "updated_at": "2024-01-21T16:04:25Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nCast\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [x] Foundry\r\n- [x] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\ncast 0.2.0 (aaf1273 2023-12-20T15:36:32.304304000Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\ncast\r\n\r\n### Operating System\r\n\r\nmacOS (Apple Silicon)\r\n\r\n### Describe the bug\r\n\r\n`cast storage` output has slots `0..18`:\r\n\r\n```\r\nNo matching artifacts found, fetching source code from Etherscan...\r\nContract at 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 is a proxy, trying to fetch source at 0xa2327a938Febf5FEC13baCFb16Ae10EcBc4cbDCF...\r\n| Name                 | Type                                            | Slot | Offset | Bytes | Value                                                                         | Hex Value                                                          | Contract                   |\r\n|----------------------|-------------------------------------------------|------|--------|-------|-------------------------------------------------------------------------------|--------------------------------------------------------------------|----------------------------|\r\n| _owner               | address                                         | 0    | 0      | 20    | 1442626706025541066953462928744535818996053290554                             | 0x000000000000000000000000fcb19e6a322b27c06842a71e8c725399f049ae3a | Contract.sol:FiatTokenV2_1 |\r\n| pauser               | address                                         | 1    | 0      | 20    | 417223780715013227085836490829281552150151464294                              | 0x0000000000000000000000004914f61d25e5c567143774b76edbf4d5109a8566 | Contract.sol:FiatTokenV2_1 |\r\n| paused               | bool                                            | 1    | 20     | 1     | 417223780715013227085836490829281552150151464294                              | 0x0000000000000000000000004914f61d25e5c567143774b76edbf4d5109a8566 | Contract.sol:FiatTokenV2_1 |\r\n| blacklister          | address                                         | 2    | 0      | 20    | 96326277604683868931173647310888398611398110510                               | 0x00000000000000000000000010df6b6fe66dd319b1f82bab2d054cbb61cdad2e | Contract.sol:FiatTokenV2_1 |\r\n| blacklisted          | mapping(address => bool)                        | 3    | 0      | 32    | 0                                                                             | 0x0000000000000000000000000000000000000000000000000000000000000000 | Contract.sol:FiatTokenV2_1 |\r\n| name                 | string                                          | 4    | 0      | 32    | 38593710624525879730480819364414810941157096808048686924515883081335702552592 | 0x55534420436f696e000000000000000000000000000000000000000000000010 | Contract.sol:FiatTokenV2_1 |\r\n| symbol               | string                                          | 5    | 0      | 32    | 38593711561022257368518379114816214809265752568552928798754351540423798816776 | 0x5553444300000000000000000000000000000000000000000000000000000008 | Contract.sol:FiatTokenV2_1 |\r\n| decimals             | uint8                                           | 6    | 0      | 1     | 6                                                                             | 0x0000000000000000000000000000000000000000000000000000000000000006 | Contract.sol:FiatTokenV2_1 |\r\n| currency             | string                                          | 7    | 0      | 32    | 38593709754705830669425512872126203978950497434864252488535995306481912119302 | 0x5553440000000000000000000000000000000000000000000000000000000006 | Contract.sol:FiatTokenV2_1 |\r\n| masterMinter         | address                                         | 8    | 0      | 20    | 2794604065439862885460431858422835185447818485271                             | 0x000000000000000000000001e982615d461dd5cd06575bbea87624fda4e3de17 | Contract.sol:FiatTokenV2_1 |\r\n| initialized          | bool                                            | 8    | 20     | 1     | 2794604065439862885460431858422835185447818485271                             | 0x000000000000000000000001e982615d461dd5cd06575bbea87624fda4e3de17 | Contract.sol:FiatTokenV2_1 |\r\n| balances             | mapping(address => uint256)                     | 9    | 0      | 32    | 0                                                                             | 0x0000000000000000000000000000000000000000000000000000000000000000 | Contract.sol:FiatTokenV2_1 |\r\n| allowed              | mapping(address => mapping(address => uint256)) | 10   | 0      | 32    | 0                                                                             | 0x0000000000000000000000000000000000000000000000000000000000000000 | Contract.sol:FiatTokenV2_1 |\r\n| totalSupply_         | uint256                                         | 11   | 0      | 32    | 22409071222500621                                                             | 0x000000000000000000000000000000000000000000000000004f9cee79f6ad0d | Contract.sol:FiatTokenV2_1 |\r\n| minters              | mapping(address => bool)                        | 12   | 0      | 32    | 0                                                                             | 0x0000000000000000000000000000000000000000000000000000000000000000 | Contract.sol:FiatTokenV2_1 |\r\n| minterAllowed        | mapping(address => uint256)                     | 13   | 0      | 32    | 0                                                                             | 0x0000000000000000000000000000000000000000000000000000000000000000 | Contract.sol:FiatTokenV2_1 |\r\n| _rescuer             | address                                         | 14   | 0      | 20    | 0                                                                             | 0x0000000000000000000000000000000000000000000000000000000000000000 | Contract.sol:FiatTokenV2_1 |\r\n| DOMAIN_SEPARATOR     | bytes32                                         | 15   | 0      | 32    | 3059194987980398594012481128448863428274404045602778523478891455121768244021  | 0x06c37168a7db5138defc7866392bb87a741f9b3d104deb5094588ce041cae335 | Contract.sol:FiatTokenV2_1 |\r\n| _authorizationStates | mapping(address => mapping(bytes32 => bool))    | 16   | 0      | 32    | 0                                                                             | 0x0000000000000000000000000000000000000000000000000000000000000000 | Contract.sol:FiatTokenV2_1 |\r\n| _permitNonces        | mapping(address => uint256)                     | 17   | 0      | 32    | 0                                                                             | 0x0000000000000000000000000000000000000000000000000000000000000000 | Contract.sol:FiatTokenV2_1 |\r\n| _initializedVersion  | uint8                                           | 18   | 0      | 1     | 2                                                                             | 0x0000000000000000000000000000000000000000000000000000000000000002 | Contract.sol:FiatTokenV2_1 |\r\n\r\n```\r\n\r\nAlthough it misses slots `ADMIN_SLOT` and `IMPLEMENTATION_SLOT`: https://evm.storage/eth/18827931/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48#table\r\n\r\nAnd these slots are accessible with `eth_getStorageAt`:\r\n```\r\ncurl --request POST \\\r\n                                    --url https://mainnet.infura.io/v3/b1d3925804e74152b316ca7da97060d3  \\\r\n                                    --header 'accept: application/json' \\\r\n                                    --header 'content-type: application/json' \\\r\n                                    --data '\r\n                           {\r\n                             \"id\": 1,\r\n                             \"jsonrpc\": \"2.0\",\r\n                             \"method\": \"eth_getStorageAt\",\r\n                             \"params\": [\r\n                               \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\r\n                               \"0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b\",\r\n                               \"latest\"\r\n                             ]\r\n                           }\r\n                           '\r\n{\"jsonrpc\":\"2.0\",\"id\":1,\"result\":\"0x000000000000000000000000807a96288a1a408dbc13de2b1d087d10356395d2\"}\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6629/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6629/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1902680479",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6629#issuecomment-1902680479",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6629",
    "id": 1902680479,
    "node_id": "IC_kwDOGBlvNc5xaJmf",
    "user": {
      "login": "plotchy",
      "id": 98172525,
      "node_id": "U_kgDOBdn-bQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/98172525?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/plotchy",
      "html_url": "https://github.com/plotchy",
      "followers_url": "https://api.github.com/users/plotchy/followers",
      "following_url": "https://api.github.com/users/plotchy/following{/other_user}",
      "gists_url": "https://api.github.com/users/plotchy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/plotchy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/plotchy/subscriptions",
      "organizations_url": "https://api.github.com/users/plotchy/orgs",
      "repos_url": "https://api.github.com/users/plotchy/repos",
      "events_url": "https://api.github.com/users/plotchy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/plotchy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-21T16:04:24Z",
    "updated_at": "2024-01-21T16:04:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Considering constants are readable in source directly I don't think cast storage should present them in the table.\r\n\r\nThe eth_getStorageAt example is using the constant as the slot, but there isn't guarantees that constants in a contract will be used as storage slots. Using a constant as a slot is very rare apart from proxy and roles, but constants in general are very common. I don't think cast storage should attempt to pull values like that as they'll mostly be false positives.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1902680479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
