{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3731",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3731/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3731/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3731/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3731",
  "id": 1458501179,
  "node_id": "I_kwDOGBlvNc5W7vY7",
  "number": 3731,
  "title": "JSON Parser edge & special cases",
  "user": {
    "login": "vicnaum",
    "id": 5636644,
    "node_id": "MDQ6VXNlcjU2MzY2NDQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5636644?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vicnaum",
    "html_url": "https://github.com/vicnaum",
    "followers_url": "https://api.github.com/users/vicnaum/followers",
    "following_url": "https://api.github.com/users/vicnaum/following{/other_user}",
    "gists_url": "https://api.github.com/users/vicnaum/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vicnaum/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vicnaum/subscriptions",
    "organizations_url": "https://api.github.com/users/vicnaum/orgs",
    "repos_url": "https://api.github.com/users/vicnaum/repos",
    "events_url": "https://api.github.com/users/vicnaum/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vicnaum/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "odyslam",
    "id": 13405632,
    "node_id": "MDQ6VXNlcjEzNDA1NjMy",
    "avatar_url": "https://avatars.githubusercontent.com/u/13405632?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/odyslam",
    "html_url": "https://github.com/odyslam",
    "followers_url": "https://api.github.com/users/odyslam/followers",
    "following_url": "https://api.github.com/users/odyslam/following{/other_user}",
    "gists_url": "https://api.github.com/users/odyslam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/odyslam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/odyslam/subscriptions",
    "organizations_url": "https://api.github.com/users/odyslam/orgs",
    "repos_url": "https://api.github.com/users/odyslam/repos",
    "events_url": "https://api.github.com/users/odyslam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/odyslam/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "odyslam",
      "id": 13405632,
      "node_id": "MDQ6VXNlcjEzNDA1NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/odyslam",
      "html_url": "https://github.com/odyslam",
      "followers_url": "https://api.github.com/users/odyslam/followers",
      "following_url": "https://api.github.com/users/odyslam/following{/other_user}",
      "gists_url": "https://api.github.com/users/odyslam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/odyslam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/odyslam/subscriptions",
      "organizations_url": "https://api.github.com/users/odyslam/orgs",
      "repos_url": "https://api.github.com/users/odyslam/repos",
      "events_url": "https://api.github.com/users/odyslam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/odyslam/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-11-21T20:02:14Z",
  "updated_at": "2023-11-18T19:23:12Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (cb925b1 2022-11-21T00:04:43.554765Z)\n\n### What command(s) is the bug in?\n\nparseJson cheats\n\n### Operating System\n\nmacOS (Intel)\n\n### Describe the bug\n\nA discussion started in the `forge-std` repo about how to determine if the JSON key exists, and which edge cases should return which values:\r\nhttps://github.com/foundry-rs/forge-std/pull/226\r\n\r\n**Current behaviour of the parser** (was verified using `parseRaw()` function which returns abi-encoded bytes array):\r\n\r\n- **empty object** (as in `\"returns\": {}`) is parsed as \"0x\" abi which just reverts when trying to decode\r\n- **null** (as in `\"to\": null`) is parsed as an empty bytes/string (`0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000`)\r\n- **empty array** (as in `\"pending\": []`) is parsed as an empty bytes/string (same as **null**)\r\n\r\nFor now there are several propositions from @prestwich:\r\n\r\n- **Valid solidity types should output valid encodings, while invalid types should output the empty encoding:**\r\n- an empty dynamic-length `bytes` type, encoded as 32 `\\x00` null bytes\r\n- a null fixed-length `bytes` type, encoded as 32 `\\x00` null bytes\r\n- empty array should probably be parsed as the 32 byte `\\x00` null string\r\n\r\nI agree with this, because it will reserve `0x` output specifically to non-existent keys. This would allow to distinguish these specific situations when the key exists but is non-solidity-supported type, from a situation where the key doesn't exist in JSON at all.\r\n\r\nTLDR: Right now there's no way of differentiating non-existent JSON keys from a key with an **empty object** `{}`.\r\n\r\nWhat are the thoughts on above? Let's start a discussion and afterwards can apply a fix (if decided on a fix).",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3731/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3731/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1323537953",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3731#issuecomment-1323537953",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3731",
    "id": 1323537953,
    "node_id": "IC_kwDOGBlvNc5O45Yh",
    "user": {
      "login": "rkrasiuk",
      "id": 25429261,
      "node_id": "MDQ6VXNlcjI1NDI5MjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25429261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkrasiuk",
      "html_url": "https://github.com/rkrasiuk",
      "followers_url": "https://api.github.com/users/rkrasiuk/followers",
      "following_url": "https://api.github.com/users/rkrasiuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkrasiuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkrasiuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkrasiuk/subscriptions",
      "organizations_url": "https://api.github.com/users/rkrasiuk/orgs",
      "repos_url": "https://api.github.com/users/rkrasiuk/repos",
      "events_url": "https://api.github.com/users/rkrasiuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkrasiuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-22T11:41:42Z",
    "updated_at": "2022-11-22T11:41:42Z",
    "author_association": "COLLABORATOR",
    "body": "@odyslam can I assign this to you? ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1323537953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1323701822",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3731#issuecomment-1323701822",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3731",
    "id": 1323701822,
    "node_id": "IC_kwDOGBlvNc5O5hY-",
    "user": {
      "login": "odyslam",
      "id": 13405632,
      "node_id": "MDQ6VXNlcjEzNDA1NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/odyslam",
      "html_url": "https://github.com/odyslam",
      "followers_url": "https://api.github.com/users/odyslam/followers",
      "following_url": "https://api.github.com/users/odyslam/following{/other_user}",
      "gists_url": "https://api.github.com/users/odyslam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/odyslam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/odyslam/subscriptions",
      "organizations_url": "https://api.github.com/users/odyslam/orgs",
      "repos_url": "https://api.github.com/users/odyslam/repos",
      "events_url": "https://api.github.com/users/odyslam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/odyslam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-22T13:45:10Z",
    "updated_at": "2022-11-22T13:45:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes go ahead",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1323701822/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1363577381",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3731#issuecomment-1363577381",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3731",
    "id": 1363577381,
    "node_id": "IC_kwDOGBlvNc5RRool",
    "user": {
      "login": "odyslam",
      "id": 13405632,
      "node_id": "MDQ6VXNlcjEzNDA1NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/odyslam",
      "html_url": "https://github.com/odyslam",
      "followers_url": "https://api.github.com/users/odyslam/followers",
      "following_url": "https://api.github.com/users/odyslam/following{/other_user}",
      "gists_url": "https://api.github.com/users/odyslam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/odyslam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/odyslam/subscriptions",
      "organizations_url": "https://api.github.com/users/odyslam/orgs",
      "repos_url": "https://api.github.com/users/odyslam/repos",
      "events_url": "https://api.github.com/users/odyslam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/odyslam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-23T03:29:29Z",
    "updated_at": "2022-12-23T03:29:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vicnaum I like @prestwich approach. Wanna attempt a fix? I am tackling a bunch of issues with json cheatcodes, so your contribution would be really valuable.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1363577381/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1817603741",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3731#issuecomment-1817603741",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3731",
    "id": 1817603741,
    "node_id": "IC_kwDOGBlvNc5sVm6d",
    "user": {
      "login": "rocknet",
      "id": 1266404,
      "node_id": "MDQ6VXNlcjEyNjY0MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1266404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rocknet",
      "html_url": "https://github.com/rocknet",
      "followers_url": "https://api.github.com/users/rocknet/followers",
      "following_url": "https://api.github.com/users/rocknet/following{/other_user}",
      "gists_url": "https://api.github.com/users/rocknet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rocknet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rocknet/subscriptions",
      "organizations_url": "https://api.github.com/users/rocknet/orgs",
      "repos_url": "https://api.github.com/users/rocknet/repos",
      "events_url": "https://api.github.com/users/rocknet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rocknet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-18T19:22:41Z",
    "updated_at": "2023-11-18T19:23:12Z",
    "author_association": "NONE",
    "body": "> empty array should probably be parsed as the 32 byte \\x00 null string\r\n\r\nCan I ask about this?  I'm dealing with an issue at the moment, where the broadcast json files either have `arguments: null`, if there were no arguments, or it's a string array value.  When I try to `abi.decode` this, assuming I was going to get a string array, it fails if the value was null.  Perhaps this belongs as its own issue and the problem is more to do with the json being produced when `arguments` is null, but I saw this above and wondered if I was always going to have to use two types (one expecting a string array and one expecting a null string).  At the moment I'm going to have to do a try / catch, first trying to decode expecting a string array, and second trying to decode to a string.  Not the greatest UX, any ideas appreciated here, or perhaps something to keep in mind.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1817603741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
