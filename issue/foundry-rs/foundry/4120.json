{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4120",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4120/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4120/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4120/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4120",
  "id": 1538343054,
  "node_id": "I_kwDOGBlvNc5bsUCO",
  "number": 4120,
  "title": "`forge test` hangs when using `balanceOf` function for mainnet NFT contracts",
  "user": {
    "login": "megsdevs",
    "id": 57240925,
    "node_id": "MDQ6VXNlcjU3MjQwOTI1",
    "avatar_url": "https://avatars.githubusercontent.com/u/57240925?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/megsdevs",
    "html_url": "https://github.com/megsdevs",
    "followers_url": "https://api.github.com/users/megsdevs/followers",
    "following_url": "https://api.github.com/users/megsdevs/following{/other_user}",
    "gists_url": "https://api.github.com/users/megsdevs/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/megsdevs/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/megsdevs/subscriptions",
    "organizations_url": "https://api.github.com/users/megsdevs/orgs",
    "repos_url": "https://api.github.com/users/megsdevs/repos",
    "events_url": "https://api.github.com/users/megsdevs/events{/privacy}",
    "received_events_url": "https://api.github.com/users/megsdevs/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-01-18T16:54:18Z",
  "updated_at": "2023-01-19T00:42:19Z",
  "closed_at": "2023-01-19T00:42:07Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (4dc05d2 2023-01-18T00:12:53.425763Z)\n\n### What command(s) is the bug in?\n\nforge test\n\n### Operating System\n\nmacOS (Intel)\n\n### Describe the bug\n\n`forge test` hangs indefinitely after contract compilation for tests that use the NFT `balanceOf(address)` function for already deployed mainnet contracts during mainnet fork mode.\r\n\r\ne.g.\r\nDemonstrated in this repo: https://github.com/megsdevs/Foundry-NFT-Testing.\r\nCommand:\r\n```\r\nforge test --fork-url https://rpc.ankr.com/eth --match-contract ShellzOrbTest\r\n```\r\nSample output:\r\n```\r\n[⠒] Compiling...\r\n[⠊] Compiling 1 files with 0.8.17\r\n[⠢] Solc 0.8.17 finished in 5.47s\r\nCompiler run successful\r\n\r\n```\r\nthe test hangs indefinitely at this point...\r\n\r\nI can get around the issue by not using `balanceOf` or by deploying new NFT contract instances during the test. \r\n\r\nI also know there is not an issue with the real mainnet contracts as i can query `balanceOf` through etherscan: https://etherscan.io/token/0xe17827609ac34443b3987661f4e037642f6bd9ba#readProxyContract#F1 with the example address used in the test \"0xea831d27E0E52b4dC32F42A5c4C5cBfd9b6D4a58\".\r\n\r\nIt is preferable to be able to interact with the deployed mainnet contracts during fork testing, so I would love to find any resolution to this issue!",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4120/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4120/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1396171074",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4120#issuecomment-1396171074",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4120",
    "id": 1396171074,
    "node_id": "IC_kwDOGBlvNc5TN-FC",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-18T22:22:02Z",
    "updated_at": "2023-01-18T22:22:02Z",
    "author_association": "MEMBER",
    "body": "I can repro, couple things:\r\n\r\n```\r\nRUST_LOG=forge=trace,foundry_evm=trace,ethers=trace  forge test --fork-url https://rpc.ankr.com/eth --match-contract ShellzOrbTest --match-test testBalance\r\n```\r\n\r\nThis gives a lot more visibility into what's going on.\r\n\r\nThis hangs on a _ton_ of `eth_getStorageAt` calls. I am not sure why that would be happening.\r\n\r\n```\r\n023-01-18T22:17:54.113763Z TRACE rpc{method=\"eth_getStorageAt\" params=\"[\\\"0xe17827609ac34443b3987661f4e037642f6bd9ba\\\",\\\"0x81fe90a866a48a634a12852c1be675b683a22307409932a7443b8029347be756\\\",\\\"0xfacd8f\\\"]\"}: ethers_providers::provider: tx\r\n2023-01-18T22:17:54.286254Z TRACE rpc{method=\"eth_getStorageAt\" params=\"[\\\"0xe17827609ac34443b3987661f4e037642f6bd9ba\\\",\\\"0x81fe90a866a48a634a12852c1be675b683a22307409932a7443b8029347be756\\\",\\\"0xfacd8f\\\"]\"}: ethers_providers::provider: rx=\"\\\"0xffffffff7f7ffff7bf7fff7fefbfbffffffffbbffebffbbfffffffffbf5fffff\\\"\"\r\n2023-01-18T22:17:54.286433Z TRACE rpc{method=\"eth_getStorageAt\" params=\"[\\\"0xe17827609ac34443b3987661f4e037642f6bd9ba\\\",\\\"0x435daec636ce435a90bde0aeec309a303a359a854c5a51b7d6a5a941d6db6094\\\",\\\"0xfacd8f\\\"]\"}: ethers_providers::provider: tx\r\n2023-01-18T22:17:54.349716Z TRACE rpc{method=\"eth_getStorageAt\" params=\"[\\\"0xe17827609ac34443b3987661f4e037642f6bd9ba\\\",\\\"0x435daec636ce435a90bde0aeec309a303a359a854c5a51b7d6a5a941d6db6094\\\",\\\"0xfacd8f\\\"]\"}: ethers_providers::provider: rx=\"\\\"0x0000000000000000000000005a70ec52e977b50c9fc12ca0aa6d5e26e7c62291\\\"\"\r\n<..>\r\n```\r\n\r\nThis makes me think that the token implementation is buggy / has some kind of infinite loop going on? @megsdevs mentioned that indeed leaving it run for a while completes:\r\n\r\n```\r\n[⠊] Compiling...\r\nNo files changed, compilation skipped\r\n\r\nRunning 4 tests for test/ShellzOrb.t.sol:ShellzOrbTest\r\n[PASS] testBalanceOf() (gas: 61256507)\r\n[PASS] testImmutableVariables() (gas: 26613)\r\n[PASS] testOnlyInitializeOnce() (gas: 18230)\r\n[PASS] testOwner() (gas: 24760)\r\nTest result: ok. 4 passed; 0 failed; finished in 464.11s\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1396171074/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1396290844",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4120#issuecomment-1396290844",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4120",
    "id": 1396290844,
    "node_id": "IC_kwDOGBlvNc5TObUc",
    "user": {
      "login": "megsdevs",
      "id": 57240925,
      "node_id": "MDQ6VXNlcjU3MjQwOTI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/57240925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/megsdevs",
      "html_url": "https://github.com/megsdevs",
      "followers_url": "https://api.github.com/users/megsdevs/followers",
      "following_url": "https://api.github.com/users/megsdevs/following{/other_user}",
      "gists_url": "https://api.github.com/users/megsdevs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/megsdevs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/megsdevs/subscriptions",
      "organizations_url": "https://api.github.com/users/megsdevs/orgs",
      "repos_url": "https://api.github.com/users/megsdevs/repos",
      "events_url": "https://api.github.com/users/megsdevs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/megsdevs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T00:39:14Z",
    "updated_at": "2023-01-19T00:42:19Z",
    "author_association": "NONE",
    "body": "I'd say you can close this. Upon closer inspection the `balanceOf` function for this particular NFT appears to be very inefficient by looping through every minted token to check the owner rather than keeping a balances mapping like the OZ standard:\r\n\r\n<img width=\"660\" alt=\"Screenshot 2023-01-19 at 03 38 16\" src=\"https://user-images.githubusercontent.com/57240925/213328618-42a2439c-e7ab-46c1-a248-3cc3dd9ed934.png\">\r\n\r\nWhich is why the RPC usage is so heavy when calling during tests. Maybe there is room for improvement with the speed of calling very high gas functions, but not sure this is something that can be changed on the foundry end or is an RPC limitation.\r\n\r\nThanks a lot for the help resolving this!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1396290844/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1396293376",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4120#issuecomment-1396293376",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4120",
    "id": 1396293376,
    "node_id": "IC_kwDOGBlvNc5TOb8A",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-19T00:42:07Z",
    "updated_at": "2023-01-19T00:42:07Z",
    "author_association": "MEMBER",
    "body": "SGTM - yeah thought so",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1396293376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
