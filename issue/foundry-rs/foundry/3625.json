{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3625",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3625/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3625/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3625/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3625",
  "id": 1437766300,
  "node_id": "I_kwDOGBlvNc5VspKc",
  "number": 3625,
  "title": "VM revert error when pranking an address that receives ether from contract",
  "user": {
    "login": "hexcowboy",
    "id": 8162609,
    "node_id": "MDQ6VXNlcjgxNjI2MDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8162609?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hexcowboy",
    "html_url": "https://github.com/hexcowboy",
    "followers_url": "https://api.github.com/users/hexcowboy/followers",
    "following_url": "https://api.github.com/users/hexcowboy/following{/other_user}",
    "gists_url": "https://api.github.com/users/hexcowboy/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hexcowboy/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hexcowboy/subscriptions",
    "organizations_url": "https://api.github.com/users/hexcowboy/orgs",
    "repos_url": "https://api.github.com/users/hexcowboy/repos",
    "events_url": "https://api.github.com/users/hexcowboy/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hexcowboy/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-11-07T05:00:51Z",
  "updated_at": "2022-11-07T17:08:08Z",
  "closed_at": "2022-11-07T16:40:43Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (8b0af47 2022-11-06T00:06:24.552295Z)\n\n### What command(s) is the bug in?\n\nforge test\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\nminimal reproduction repo: https://github.com/hexcowboy/foundry-bug-repro\r\n\r\nIt appears that when pranking an address, the VM will revert randomly if a contract method transfers ETH using `payable(prankAddress).transfer()`. This bug is reproducible using the repo above and running `forge test -vvvv`.\r\n\r\nHere's the test:\r\n\r\n```solidity\r\n    function testFuzzPayable(address[10] memory senders, uint256[10] memory amounts) public {\r\n        for (uint256 i = 0; i < amounts.length; i++) {\r\n            amounts[i] = bound(amounts[i], 0, 500);\r\n        }\r\n\r\n        // add funds to contract\r\n        vm.deal(address(counter), 1 ether);\r\n\r\n        for (uint256 i = 0; i < senders.length; i++) {\r\n            vm.startPrank(senders[i]);\r\n            counter.hello(amounts[i]);\r\n            vm.stopPrank();\r\n        }\r\n    }\r\n```\r\n\r\nHere's the contract:\r\n\r\n```solidity\r\ncontract Counter {\r\n    function hello(uint256 amount) public {\r\n        payable(msg.sender).transfer(amount);\r\n    }\r\n}\r\n```\r\n\r\nSome examples of the error logs:\r\n\r\n```\r\n    ├─ [32103] Counter::hello(126) \r\n    │   ├─ [0] console::fallback{value: 126}() \r\n    │   │   └─ ← \"Invalid data\"\r\n    │   └─ ← \"Invalid data\"\r\n    └─ ← \"Invalid data\"\r\n```\r\n\r\n```\r\n    ├─ [34394] Counter::hello(143) \r\n    │   ├─ [0] PRECOMPILE::ecrecover{value: 143}() \r\n    │   │   └─ ← \r\n    │   └─ ← \"EvmError: Revert\"\r\n    └─ ← \"EvmError: Revert\"\r\n```",
  "closed_by": {
    "login": "hexcowboy",
    "id": 8162609,
    "node_id": "MDQ6VXNlcjgxNjI2MDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8162609?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hexcowboy",
    "html_url": "https://github.com/hexcowboy",
    "followers_url": "https://api.github.com/users/hexcowboy/followers",
    "following_url": "https://api.github.com/users/hexcowboy/following{/other_user}",
    "gists_url": "https://api.github.com/users/hexcowboy/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hexcowboy/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hexcowboy/subscriptions",
    "organizations_url": "https://api.github.com/users/hexcowboy/orgs",
    "repos_url": "https://api.github.com/users/hexcowboy/repos",
    "events_url": "https://api.github.com/users/hexcowboy/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hexcowboy/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3625/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3625/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1305668786",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3625#issuecomment-1305668786",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3625",
    "id": 1305668786,
    "node_id": "IC_kwDOGBlvNc5N0uyy",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-07T14:07:34Z",
    "updated_at": "2022-11-07T14:07:34Z",
    "author_association": "COLLABORATOR",
    "body": "The problem is the addresses being used:\r\n- The first revert is using the [console address](https://github.com/foundry-rs/forge-std/blob/5bafa16b4a6aa67c503d96294be846a22a6f6efb/src/console2.sol#L10). This is a special address to make `console.log` work, any calls to this address are intercepted and handled differently, so you should use `vm.assume` to exclude this address (and maybe it should be excluded from the fuzzer dict)\r\n- The second is a [precompile](https://www.evm.codes/precompiled) address. You can use [`assumeNoPrecompiles`](https://github.com/foundry-rs/forge-std/blob/master/src/StdCheats.sol#L286-L316) to  remove these \r\n\r\nRelated: https://github.com/foundry-rs/forge-std/issues/211",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1305668786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1305701305",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3625#issuecomment-1305701305",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3625",
    "id": 1305701305,
    "node_id": "IC_kwDOGBlvNc5N02u5",
    "user": {
      "login": "hexcowboy",
      "id": 8162609,
      "node_id": "MDQ6VXNlcjgxNjI2MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8162609?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hexcowboy",
      "html_url": "https://github.com/hexcowboy",
      "followers_url": "https://api.github.com/users/hexcowboy/followers",
      "following_url": "https://api.github.com/users/hexcowboy/following{/other_user}",
      "gists_url": "https://api.github.com/users/hexcowboy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hexcowboy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hexcowboy/subscriptions",
      "organizations_url": "https://api.github.com/users/hexcowboy/orgs",
      "repos_url": "https://api.github.com/users/hexcowboy/repos",
      "events_url": "https://api.github.com/users/hexcowboy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hexcowboy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-07T14:30:53Z",
    "updated_at": "2022-11-07T14:31:30Z",
    "author_association": "NONE",
    "body": "> The problem is the addresses being used:\r\n\r\nThere are still a few addresses causing trouble [after ignoring the log address and the precompile addresses](https://github.com/hexcowboy/foundry-bug-repro/commit/0d601d3fc91390dccc957d4bfbb93e7487c36404). Here are a few I could find:\r\n\r\n```\r\n    ├─ [0] VM::startPrank(Create2Deployer: [0x4e59b44847b379578588920cA78FbF26c0B4956C]) \r\n    │   └─ ← ()\r\n    ├─ [9394] Counter::hello(408) \r\n    │   ├─ [34] Create2Deployer::fallback{value: 408}() \r\n    │   │   └─ ← \"EvmError: OutOfGas\"\r\n    │   └─ ← \"EvmError: Revert\"\r\n    └─ ← \"EvmError: Revert\"\r\n```\r\n\r\n```\r\n    ├─ [0] VM::startPrank(VM: [0x7109709ECfa91a80626fF3989D68f67F5b1DD12D]) \r\n    │   └─ ← ()\r\n    ├─ [7103] Counter::hello(433) \r\n    │   ├─ [0] VM::fallback{value: 433}() \r\n    │   │   └─ ← \"Invalid data\"\r\n    │   └─ ← \"Invalid data\"\r\n    └─ ← \"Invalid data\"\r\n```\r\n\r\nWhat are these addresses?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1305701305/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1305710055",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3625#issuecomment-1305710055",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3625",
    "id": 1305710055,
    "node_id": "IC_kwDOGBlvNc5N043n",
    "user": {
      "login": "hexcowboy",
      "id": 8162609,
      "node_id": "MDQ6VXNlcjgxNjI2MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8162609?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hexcowboy",
      "html_url": "https://github.com/hexcowboy",
      "followers_url": "https://api.github.com/users/hexcowboy/followers",
      "following_url": "https://api.github.com/users/hexcowboy/following{/other_user}",
      "gists_url": "https://api.github.com/users/hexcowboy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hexcowboy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hexcowboy/subscriptions",
      "organizations_url": "https://api.github.com/users/hexcowboy/orgs",
      "repos_url": "https://api.github.com/users/hexcowboy/repos",
      "events_url": "https://api.github.com/users/hexcowboy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hexcowboy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-07T14:37:33Z",
    "updated_at": "2022-11-07T14:37:33Z",
    "author_association": "NONE",
    "body": "Here's my workaround for now\r\n\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport \"@forge-std/Test.sol\";\r\nimport \"@forge-std/StdCheats.sol\";\r\nimport \"../src/Counter.sol\";\r\n\r\ncontract CounterTest is Test {\r\n    Counter public counter;\r\n\r\n    function setUp() public {\r\n        counter = new Counter();\r\n    }\r\n\r\n    uint256 constant LOAD = 10;\r\n\r\n    function testFuzzPayable(\r\n        address[LOAD] memory senders,\r\n        uint256[LOAD] memory amounts\r\n    ) public {\r\n        for (uint256 i = 0; i < LOAD; i++) {\r\n            amounts[i] = bound(amounts[i], 0, 500);\r\n            vm.assume(senders[i] != 0x000000000000000000636F6e736F6c652e6c6f67);\r\n            vm.assume(senders[i] != 0x7109709ECfa91a80626fF3989D68f67F5b1DD12D);\r\n            vm.assume(senders[i] != 0x4e59b44847b379578588920cA78FbF26c0B4956C);\r\n            vm.assume(senders[i] != 0xCe71065D4017F316EC606Fe4422e11eB2c47c246);\r\n            vm.assume(senders[i] != address(this));\r\n            StdCheatsSafe.assumeNoPrecompiles(senders[i]);\r\n        }\r\n\r\n        // add funds to contract\r\n        vm.deal(address(counter), 1 ether);\r\n\r\n        for (uint256 i = 0; i < senders.length; i++) {\r\n            vm.startPrank(senders[i]);\r\n            counter.hello(amounts[i]);\r\n            vm.stopPrank();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nCould I propose a cheat that provides safe payable addresses when fuzzing?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1305710055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1305835174",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3625#issuecomment-1305835174",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3625",
    "id": 1305835174,
    "node_id": "IC_kwDOGBlvNc5N1Xam",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-07T16:06:21Z",
    "updated_at": "2022-11-07T16:06:21Z",
    "author_association": "COLLABORATOR",
    "body": "VM is the cheatcode address (e.g. `vm.assume`) and Create2Deployer is a deterministic create2 deployer used on many chains with `forge script`. For now you'll need to filter out those addresses which can be a bit tedious, since there's currently no way for the fuzzer to only generate addresses that can receive ETH.\r\n\r\nTwo possible foundry-level solutions if you want to create separate issues for each:\r\n\r\n### Exclude Special Addresses\r\n\r\nWe can consider excluding special foundry addresses from the fuzz dictionary. This would be all addresses that behave differently in foundry than they do on live chains, which includes:\r\n- VM address\r\n- Console address\r\n- Are there others?\r\n\r\nCreate2Deployer and precompiles are valid inputs an attacker can pass in real life, so we wouldn't want to exclude those. \r\n\r\n### Flag to only fuzz payable addresses\r\n\r\nFoundry could check the ABI of a fuzzer generated address and discard it if it has code but there's no fallback/receive method. This would probably need to be a config flag as opposed to a cheatcode just based on the fuzzer architecture.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1305835174/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1305882907",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3625#issuecomment-1305882907",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3625",
    "id": 1305882907,
    "node_id": "IC_kwDOGBlvNc5N1jEb",
    "user": {
      "login": "hexcowboy",
      "id": 8162609,
      "node_id": "MDQ6VXNlcjgxNjI2MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8162609?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hexcowboy",
      "html_url": "https://github.com/hexcowboy",
      "followers_url": "https://api.github.com/users/hexcowboy/followers",
      "following_url": "https://api.github.com/users/hexcowboy/following{/other_user}",
      "gists_url": "https://api.github.com/users/hexcowboy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hexcowboy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hexcowboy/subscriptions",
      "organizations_url": "https://api.github.com/users/hexcowboy/orgs",
      "repos_url": "https://api.github.com/users/hexcowboy/repos",
      "events_url": "https://api.github.com/users/hexcowboy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hexcowboy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-07T16:40:43Z",
    "updated_at": "2022-11-07T16:40:43Z",
    "author_association": "NONE",
    "body": "closing for https://github.com/foundry-rs/foundry/issues/3630 and https://github.com/foundry-rs/foundry/issues/3631",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1305882907/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1305924422",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3625#issuecomment-1305924422",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3625",
    "id": 1305924422,
    "node_id": "IC_kwDOGBlvNc5N1tNG",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-07T17:08:08Z",
    "updated_at": "2022-11-07T17:08:08Z",
    "author_association": "COLLABORATOR",
    "body": "Thank you!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1305924422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
