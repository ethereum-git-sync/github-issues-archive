{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/926",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/926/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/926/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/926/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/926",
  "id": 1167726056,
  "node_id": "I_kwDOGBlvNc5FmhXo",
  "number": 926,
  "title": "Keystore",
  "user": {
    "login": "PatrickAlphaC",
    "id": 54278053,
    "node_id": "MDQ6VXNlcjU0Mjc4MDUz",
    "avatar_url": "https://avatars.githubusercontent.com/u/54278053?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PatrickAlphaC",
    "html_url": "https://github.com/PatrickAlphaC",
    "followers_url": "https://api.github.com/users/PatrickAlphaC/followers",
    "following_url": "https://api.github.com/users/PatrickAlphaC/following{/other_user}",
    "gists_url": "https://api.github.com/users/PatrickAlphaC/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PatrickAlphaC/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PatrickAlphaC/subscriptions",
    "organizations_url": "https://api.github.com/users/PatrickAlphaC/orgs",
    "repos_url": "https://api.github.com/users/PatrickAlphaC/repos",
    "events_url": "https://api.github.com/users/PatrickAlphaC/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PatrickAlphaC/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752609,
      "node_id": "LA_kwDOGBlvNc7cwseh",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-cast",
      "name": "C-cast",
      "color": "5319E7",
      "default": false,
      "description": "Command: cast"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759719580,
      "node_id": "LA_kwDOGBlvNc7gGMSc",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-normal",
      "name": "P-normal",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: normal"
    },
    {
      "id": 3759720362,
      "node_id": "LA_kwDOGBlvNc7gGMeq",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-average",
      "name": "D-average",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: average"
    },
    {
      "id": 3777109787,
      "node_id": "LA_kwDOGBlvNc7hIh8b",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-create",
      "name": "Cmd-forge-create",
      "color": "006B75",
      "default": false,
      "description": "Command: forge create"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-03-13T23:26:45Z",
  "updated_at": "2022-05-28T08:40:51Z",
  "closed_at": "2022-05-28T08:40:51Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nIdeally, we have a way to encrypt and store keys so we don't have to enter our private keys every time we want to deploy a contract.\r\n\r\nSomething similar to the [ethsign](https://github.com/dapphub/dapptools/blob/master/src/ethsign/README.md) tool.\r\n\r\n\n\n### Additional context\n\nRight now, it looks like most template have you either:\r\n\r\n1. Copy-paste your private key into a shell prompted terminal\r\n2. Add your key as an environment variable\r\n\r\nI think ideally you'd just be prompted for the password to unencrypt your private key when you go to deploy. ",
  "closed_by": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/926/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/926/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1100582804",
    "html_url": "https://github.com/foundry-rs/foundry/issues/926#issuecomment-1100582804",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/926",
    "id": 1100582804,
    "node_id": "IC_kwDOGBlvNc5BmY-U",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-16T06:04:59Z",
    "updated_at": "2022-04-16T06:04:59Z",
    "author_association": "MEMBER",
    "body": "Ref #529\r\n\r\nAnd similarly to my comment there, does `cast wallet` fix this? You can use `cast wallet` to create keystores, and you can use that keystore in `forge create` with `--keystore` and `--password` :smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1100582804/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1101502509",
    "html_url": "https://github.com/foundry-rs/foundry/issues/926#issuecomment-1101502509",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/926",
    "id": 1101502509,
    "node_id": "IC_kwDOGBlvNc5Bp5gt",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-18T15:33:02Z",
    "updated_at": "2022-04-18T15:33:02Z",
    "author_association": "MEMBER",
    "body": "> Ideally, we have a way to encrypt and store keys so we don't have to enter our private keys every time we want to deploy a contract.\r\n\r\nI think we don't have a way to encrypt/store the keys, so we just do the create/sign/verify part rn but would be maybe nice if we had named keyfiles under `~/.foundry` and `cast wallet encrypt` / `cast wallet decrypt`",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1101502509/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1101508510",
    "html_url": "https://github.com/foundry-rs/foundry/issues/926#issuecomment-1101508510",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/926",
    "id": 1101508510,
    "node_id": "IC_kwDOGBlvNc5Bp6-e",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-18T15:40:46Z",
    "updated_at": "2022-04-18T15:42:50Z",
    "author_association": "MEMBER",
    "body": "> > Ideally, we have a way to encrypt and store keys so we don't have to enter our private keys every time we want to deploy a contract.\r\n> \r\n> I think we don't have a way to encrypt/store the keys, so we just do the create/sign/verify part rn but would be maybe nice if we had named keyfiles under `~/.foundry` and `cast wallet encrypt` / `cast wallet decrypt`\r\n\r\nIf you create a new keystore, I think cast asks for a password. To unlock the keystore, you also pass `--password`\r\n\r\nEdit: Just tried `cast wallet new --password key.json` and it seems to expect that `key.json` already exists, so there is definitely some UX stuff\r\n\r\nFor reference, `cast wallet new` does seem to suggest that it handles keystores:\r\n\r\n```\r\ncast-wallet-new\r\nCreate a new random keypair.\r\n\r\nUSAGE:\r\n    cast wallet new [OPTIONS] [PATH]\r\n\r\nARGS:\r\n    <PATH>    If provided, then keypair will be written to an\r\n              encrypted JSON keystore.\r\n\r\nOPTIONS:\r\n    -h, --help\r\n            Print help information\r\n\r\n    -p, --password\r\n            Triggers a hidden password prompt for the JSON keystore.\r\n\r\n        --unsafe-password <UNSAFE_PASSWORD>\r\n            Password for the JSON keystore in cleartext. This is UNSAFE\r\n            to use and we recommend using the --password. [env:\r\n            CAST_PASSWORD=]\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1101508510/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1101550842",
    "html_url": "https://github.com/foundry-rs/foundry/issues/926#issuecomment-1101550842",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/926",
    "id": 1101550842,
    "node_id": "IC_kwDOGBlvNc5BqFT6",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-18T16:37:18Z",
    "updated_at": "2022-04-18T16:37:18Z",
    "author_association": "MEMBER",
    "body": "REF: https://github.com/foundry-rs/foundry/pull/656 as well.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1101550842/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
