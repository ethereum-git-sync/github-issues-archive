{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1163",
  "id": 1189318245,
  "node_id": "I_kwDOGBlvNc5G445l",
  "number": 1163,
  "title": "Not being able to compile because of \"Discovered incompatible solidity versions in following\"",
  "user": {
    "login": "StErMi",
    "id": 146166,
    "node_id": "MDQ6VXNlcjE0NjE2Ng==",
    "avatar_url": "https://avatars.githubusercontent.com/u/146166?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/StErMi",
    "html_url": "https://github.com/StErMi",
    "followers_url": "https://api.github.com/users/StErMi/followers",
    "following_url": "https://api.github.com/users/StErMi/following{/other_user}",
    "gists_url": "https://api.github.com/users/StErMi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/StErMi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/StErMi/subscriptions",
    "organizations_url": "https://api.github.com/users/StErMi/orgs",
    "repos_url": "https://api.github.com/users/StErMi/repos",
    "events_url": "https://api.github.com/users/StErMi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/StErMi/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759719580,
      "node_id": "LA_kwDOGBlvNc7gGMSc",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-normal",
      "name": "P-normal",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: normal"
    },
    {
      "id": 3777098561,
      "node_id": "LA_kwDOGBlvNc7hIfNB",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-build",
      "name": "Cmd-forge-build",
      "color": "006B75",
      "default": false,
      "description": "Command: forge build"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 18,
  "created_at": "2022-04-01T06:40:34Z",
  "updated_at": "2022-07-01T18:54:00Z",
  "closed_at": "2022-07-01T18:54:00Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\n0.2.0\n\n### What command(s) is the bug in?\n\nforge build\n\n### Operating System\n\nmacOS (amd)\n\n### Describe the bug\n\nI'm migrating https://www.damnvulnerabledefi.xyz/ v2 to forge as both a CTF exercise and a learning exercise (for Forge).\r\n\r\nI'm attempting to migrate the [Puppet-v2 challenge](https://github.com/tinchoabbate/damn-vulnerable-defi/tree/v2.0.0/contracts/puppet-v2)  and when I attempt to build the code I get this error:\r\n\r\n```\r\n[⠃] Compiling...2022-04-01T06:28:20.723718Z ERROR ethers_solc::resolver: failed to resolve versions\r\n[⠊] Compiling...\r\nError: \r\n   0: Discovered incompatible solidity versions in following\r\n      : src/test/puppet-v2/PuppetV2Test.t.sol (^0.6.0) imports:\r\n          lib/forge-std/src/stdlib.sol (>=0.6.0 <0.9.0)\r\n          src/test/utils/Utilities.sol (>=0.8.0)\r\n          src/test/BaseTest.sol (0.8.10)\r\n          src/DamnValuableToken.sol (^0.8.0)\r\n          lib/forge-std/src/Vm.sol (>=0.6.0)\r\n          lib/ds-test/src/test.sol (>=0.4.23)\r\n          lib/forge-std/src/Vm.sol (>=0.6.0)\r\n          lib/ds-test/src/test.sol (>=0.4.23)\r\n          lib/forge-std/src/Vm.sol (>=0.6.0)\r\n          lib/forge-std/src/console.sol (>=0.4.22 <0.9.0)\r\n          src/test/utils/Utilities.sol (>=0.8.0)\r\n          lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol (^0.8.0)\r\n          lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol (^0.8.0)\r\n          lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol (^0.8.0)\r\n          lib/openzeppelin-contracts/contracts/utils/Context.sol (^0.8.0)\r\n          lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol (^0.8.0)\r\n```\r\n\r\nIf you want to reproduce this clone the [puppet-v2 branch](https://github.com/StErMi/forge-damn-vulnerable-defi/tree/puppet-v2) from my repo and just hit `forge build`.\r\n\r\nThis specific challenge involves a mix of external contracts like WETH9 + Uniswap v2 core + Uniswap v2 periphery.\r\n\r\nThe testing file that will break everything is [PuppetV2Test.t.sol](https://github.com/StErMi/forge-damn-vulnerable-defi/blob/puppet-v2/src/test/puppet-v2/PuppetV2Test.t.sol)\r\n\r\nI've already moved `WETH9` from being a solidity contract (in the original CTF) to be an artifact deployed using `deployCode` but as soon you uncomment this line\r\n\r\n```import \"../../puppet-v2/PuppetV2Pool.sol\";```\r\n\r\nand attempt to build, you will see the above error.",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1085506250",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1085506250",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1085506250,
    "node_id": "IC_kwDOGBlvNc5As4LK",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-01T07:01:23Z",
    "updated_at": "2022-04-01T07:02:09Z",
    "author_association": "MEMBER",
    "body": "your source file is incompatible with its imports\r\n`src/test/puppet-v2/PuppetV2Test.t.sol (^0.6.0)` is only compatible with 0.6 while this `src/test/utils/Utilities.sol (>=0.8.0)` requires at least 0.8.0\r\nso there's no solc version that's compatible\r\n\r\nupgrading `src/test/puppet-v2/PuppetV2Test.t.sol` to 0.8.0 should fix it though",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1085506250/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1085519476",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1085519476",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1085519476,
    "node_id": "IC_kwDOGBlvNc5As7Z0",
    "user": {
      "login": "StErMi",
      "id": 146166,
      "node_id": "MDQ6VXNlcjE0NjE2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/146166?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/StErMi",
      "html_url": "https://github.com/StErMi",
      "followers_url": "https://api.github.com/users/StErMi/followers",
      "following_url": "https://api.github.com/users/StErMi/following{/other_user}",
      "gists_url": "https://api.github.com/users/StErMi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/StErMi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/StErMi/subscriptions",
      "organizations_url": "https://api.github.com/users/StErMi/orgs",
      "repos_url": "https://api.github.com/users/StErMi/repos",
      "events_url": "https://api.github.com/users/StErMi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/StErMi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-01T07:13:24Z",
    "updated_at": "2022-04-01T08:08:35Z",
    "author_association": "NONE",
    "body": "> your source file is incompatible with its imports `src/test/puppet-v2/PuppetV2Test.t.sol (^0.6.0)` is only compatible with 0.6 while this `src/test/utils/Utilities.sol (>=0.8.0)` requires at least 0.8.0 so there's no solc version that's compatible\r\n> \r\n> upgrading `src/test/puppet-v2/PuppetV2Test.t.sol` to 0.8.0 should fix it though\r\n\r\n`src/test/puppet-v2/PuppetV2Test.t.sol` is using `pragma solidity 0.8.10;`  not `^0.6.0`\r\n\r\n`src/puppet-v2/PuppetV2Pool.sol` is using `pragma solidity ^0.6.0;`. If the Pool is the problem, I'm afraid that I cannot change that. That is part of the CTF, so I would say that there's a specific reason why Tincho made the contract use `solc <0.8` but I need to solve the CTF before saying so.\r\n\r\nThe question would be: is fixable on foundry side? Or should I fix it on my side? If we're on the second option, do you have any suggestions?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1085519476/reactions",
      "total_count": 3,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 2
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1102691619",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1102691619",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1102691619,
    "node_id": "IC_kwDOGBlvNc5Bub0j",
    "user": {
      "login": "outdoteth",
      "id": 37438950,
      "node_id": "MDQ6VXNlcjM3NDM4OTUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/37438950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/outdoteth",
      "html_url": "https://github.com/outdoteth",
      "followers_url": "https://api.github.com/users/outdoteth/followers",
      "following_url": "https://api.github.com/users/outdoteth/following{/other_user}",
      "gists_url": "https://api.github.com/users/outdoteth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/outdoteth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/outdoteth/subscriptions",
      "organizations_url": "https://api.github.com/users/outdoteth/orgs",
      "repos_url": "https://api.github.com/users/outdoteth/repos",
      "events_url": "https://api.github.com/users/outdoteth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/outdoteth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-19T13:58:50Z",
    "updated_at": "2022-04-19T14:23:01Z",
    "author_association": "NONE",
    "body": "+1 what's the best pattern here?\r\n\r\nSomething like this would be really useful:\r\n\r\n```\r\npragma solidity 0.8.0;\r\n\r\n// compiles and deploys 0.7 contract from 0.8 code\r\naddress uniV3Factory = address(0xcafe);\r\nvm.deployCodeFromFile(uniV3Factory, \"v3-core/UniswapV3Factory.sol\");\r\n```\r\n\r\nidk",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1102691619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1102701575",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1102701575",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1102701575,
    "node_id": "IC_kwDOGBlvNc5BueQH",
    "user": {
      "login": "outdoteth",
      "id": 37438950,
      "node_id": "MDQ6VXNlcjM3NDM4OTUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/37438950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/outdoteth",
      "html_url": "https://github.com/outdoteth",
      "followers_url": "https://api.github.com/users/outdoteth/followers",
      "following_url": "https://api.github.com/users/outdoteth/following{/other_user}",
      "gists_url": "https://api.github.com/users/outdoteth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/outdoteth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/outdoteth/subscriptions",
      "organizations_url": "https://api.github.com/users/outdoteth/orgs",
      "repos_url": "https://api.github.com/users/outdoteth/repos",
      "events_url": "https://api.github.com/users/outdoteth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/outdoteth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-19T14:07:30Z",
    "updated_at": "2022-04-19T14:07:30Z",
    "author_association": "NONE",
    "body": "@mattsse ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1102701575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1102735950",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1102735950",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1102735950,
    "node_id": "IC_kwDOGBlvNc5BumpO",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-19T14:37:36Z",
    "updated_at": "2022-04-19T14:38:09Z",
    "author_association": "MEMBER",
    "body": "I'm actually not sure, but I believe pinning the solc version explicitly would fix this\r\nSee `solc` option https://github.com/foundry-rs/foundry/tree/master/config#foundrytoml\r\n\r\nif not then we need an override flag or something",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1102735950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1102741463",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1102741463",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1102741463,
    "node_id": "IC_kwDOGBlvNc5Bun_X",
    "user": {
      "login": "outdoteth",
      "id": 37438950,
      "node_id": "MDQ6VXNlcjM3NDM4OTUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/37438950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/outdoteth",
      "html_url": "https://github.com/outdoteth",
      "followers_url": "https://api.github.com/users/outdoteth/followers",
      "following_url": "https://api.github.com/users/outdoteth/following{/other_user}",
      "gists_url": "https://api.github.com/users/outdoteth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/outdoteth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/outdoteth/subscriptions",
      "organizations_url": "https://api.github.com/users/outdoteth/orgs",
      "repos_url": "https://api.github.com/users/outdoteth/repos",
      "events_url": "https://api.github.com/users/outdoteth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/outdoteth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-19T14:42:26Z",
    "updated_at": "2022-04-19T14:54:51Z",
    "author_association": "NONE",
    "body": "pinning gives an error still. But I found a workaround... or well.. the design of foundry is so good that i guess it's already possible like this:\r\n\r\n```solidity\r\n// MockUniswapV3Factory.sol\r\npragma solidity 0.7.6;\r\nimport \"v3-core/UniswapV3Factory.sol\";\r\n```\r\n\r\n```solidity\r\n// Fixture.sol\r\npragma solidity ^0.8.0;\r\n\r\nimport \"forge-std/Test.sol\";\r\nimport \"v3-core/interfaces/IUniswapV3Factory.sol\";\r\n\r\nabstract contract Fixture is Test {\r\n    IUniswapV3Factory internal uniswapV3Factory;\r\n\r\n    constructor() {\r\n        uniswapV3Factory = IUniswapV3Factory(deployCode(\"UniswapV3Factory.sol\"));\r\n    }\r\n}\r\n```\r\n\r\n```toml\r\n# foundry.toml\r\n[default]\r\n# remove pinning\r\n# solc_version = \"0.8.13\"\r\n\r\n[ci]\r\nfuzz-runs = 10_000\r\n```\r\n\r\nRemove explicit solc version pinning in foundry.toml and then when doing forge build it will auto use the correct compiler version for each contract thanks to [this](https://github.com/foundry-rs/foundry/pull/4)\r\n\r\nIncluding the mock file is necessary I think so that an artifact for \"UniswapV3Factory.sol\" is built\r\n\r\nthen\r\n\r\n```\r\nforge test\r\n```\r\n\r\neverything *seems* to work. Haven't actually tested this yet tried to interact with the uni contract lol - but the deploy looks like it works",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1102741463/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1102747432",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1102747432",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1102747432,
    "node_id": "IC_kwDOGBlvNc5Bupco",
    "user": {
      "login": "outdoteth",
      "id": 37438950,
      "node_id": "MDQ6VXNlcjM3NDM4OTUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/37438950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/outdoteth",
      "html_url": "https://github.com/outdoteth",
      "followers_url": "https://api.github.com/users/outdoteth/followers",
      "following_url": "https://api.github.com/users/outdoteth/following{/other_user}",
      "gists_url": "https://api.github.com/users/outdoteth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/outdoteth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/outdoteth/subscriptions",
      "organizations_url": "https://api.github.com/users/outdoteth/orgs",
      "repos_url": "https://api.github.com/users/outdoteth/repos",
      "events_url": "https://api.github.com/users/outdoteth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/outdoteth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-19T14:47:49Z",
    "updated_at": "2022-04-19T14:47:56Z",
    "author_association": "NONE",
    "body": "It would be good to specify an array of solc versions i think tho. I don't feel comfortable removing the pinning and just relying on auto-detection. Being explicit is always better so if it was possible to do this i would:\r\n\r\n```toml\r\n# foundry.toml\r\n[default]\r\nsolc_version = [\"0.8.13\", \"0.7.6\"]\r\n\r\n[ci]\r\nfuzz-runs = 10_000\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1102747432/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1105405953",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1105405953",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1105405953,
    "node_id": "IC_kwDOGBlvNc5B4ygB",
    "user": {
      "login": "sevasoft",
      "id": 86232674,
      "node_id": "MDQ6VXNlcjg2MjMyNjc0",
      "avatar_url": "https://avatars.githubusercontent.com/u/86232674?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sevasoft",
      "html_url": "https://github.com/sevasoft",
      "followers_url": "https://api.github.com/users/sevasoft/followers",
      "following_url": "https://api.github.com/users/sevasoft/following{/other_user}",
      "gists_url": "https://api.github.com/users/sevasoft/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sevasoft/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sevasoft/subscriptions",
      "organizations_url": "https://api.github.com/users/sevasoft/orgs",
      "repos_url": "https://api.github.com/users/sevasoft/repos",
      "events_url": "https://api.github.com/users/sevasoft/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sevasoft/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-21T15:51:11Z",
    "updated_at": "2022-04-21T15:51:11Z",
    "author_association": "NONE",
    "body": "**Receiving the same issue as above is described**:\r\n```bash\r\nmbp:chainlink-foundry-mix mac$ forge build\r\n[⠃] Compiling...2022-04-21T15:46:26.394877Z ERROR ethers_solc::resolver: failed to resolve versions\r\n[⠊] Compiling...\r\nError: \r\n   0: Discovered incompatible solidity versions in following\r\n      : src/test/PriceConsumerV3.t.sol (>=0.8.7 <0.8.12) imports:\r\n          lib/ds-test/src/test.sol (>=0.5.0)\r\n          src/PriceConsumerV3.sol (>=0.8.7 <0.8.12)\r\n          src/test/mocks/MockV3Aggregator.sol (^0.6.0)\r\n          lib/openzeppelin-contracts/contracts/access/Ownable.sol (^0.8.0)\r\n          lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol (^0.8.0)\r\n          lib/chainlink-brownie-contracts/contracts/src/v0.6/interfaces/AggregatorV2V3Interface.sol (^0.6.0)\r\n          lib/openzeppelin-contracts/contracts/utils/Context.sol (^0.8.0)\r\n          lib/chainlink-brownie-contracts/contracts/src/v0.6/interfaces/AggregatorInterface.sol (^0.6.0)\r\n          lib/chainlink-brownie-contracts/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol (^0.6.0)\r\n\r\nLocation:\r\n   cli/src/compile.rs:99\r\n\r\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\r\nRun with RUST_BACKTRACE=full to include source snippets.\r\n```\r\n**Version**:\r\n```bash\r\nmbp:chainlink-foundry-mix mac$ forge --version\r\nforge 0.2.0 (321960f 2022-04-21T00:04:58.244311+00:00)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1105405953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1106572008",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1106572008",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1106572008,
    "node_id": "IC_kwDOGBlvNc5B9PLo",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-22T14:27:16Z",
    "updated_at": "2022-04-22T14:27:29Z",
    "author_association": "MEMBER",
    "body": "these are the offenders in your case\r\n`lib/chainlink-brownie-contracts/contracts/src/v0.6/* (^0.6.0)` which are incompatible with 0.8\r\n\r\nconsider using the v0.8 versions of chainlink-brownie-contracts instead @vsevdrob ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1106572008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1113014280",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1113014280",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1113014280,
    "node_id": "IC_kwDOGBlvNc5CV0AI",
    "user": {
      "login": "test9955667",
      "id": 79500129,
      "node_id": "MDQ6VXNlcjc5NTAwMTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/79500129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/test9955667",
      "html_url": "https://github.com/test9955667",
      "followers_url": "https://api.github.com/users/test9955667/followers",
      "following_url": "https://api.github.com/users/test9955667/following{/other_user}",
      "gists_url": "https://api.github.com/users/test9955667/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/test9955667/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/test9955667/subscriptions",
      "organizations_url": "https://api.github.com/users/test9955667/orgs",
      "repos_url": "https://api.github.com/users/test9955667/repos",
      "events_url": "https://api.github.com/users/test9955667/events{/privacy}",
      "received_events_url": "https://api.github.com/users/test9955667/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-29T08:21:53Z",
    "updated_at": "2022-04-29T08:22:28Z",
    "author_association": "NONE",
    "body": "> It would be good to specify an array of solc versions i think tho. I don't feel comfortable removing the pinning and just relying on auto-detection. Being explicit is always better so if it was possible to do this i would:\r\n> \r\n> ```toml\r\n> # foundry.toml\r\n> [default]\r\n> solc_version = [\"0.8.13\", \"0.7.6\"]\r\n> \r\n> [ci]\r\n> fuzz-runs = 10_000\r\n> ```\r\n\r\nrunning into some pretty nasty issues when specifying multiple solc versions with a panic:\r\n\"data did not match any variant of untagged enum SolcReq\" \r\n\r\nFound myself at this thread because I am importing univ3 contracts down to 0.5.0 with a ton of incompatibility errors. will play around with it but worst case scenario i replace the interfaces with higher pragma minimal interfaces and gut the libraries because I'm only using 4\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1113014280/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1113025428",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1113025428",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1113025428,
    "node_id": "IC_kwDOGBlvNc5CV2uU",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-29T08:30:49Z",
    "updated_at": "2022-04-29T08:30:49Z",
    "author_association": "MEMBER",
    "body": "> running into some pretty nasty issues when specifying multiple solc versions with a panic:\r\n\"data did not match any variant of untagged enum SolcReq\"\r\n\r\nthe `solc_version` only accepts a _single_ version or a path to an executable\r\n\r\nSince this problem makes it very hard to deal with incompatible versions, we should consider adding an option that makes it possible to exclude Semver enforcement.\r\n\r\nwdyt @gakonst",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1113025428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1113038584",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1113038584",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1113038584,
    "node_id": "IC_kwDOGBlvNc5CV574",
    "user": {
      "login": "test9955667",
      "id": 79500129,
      "node_id": "MDQ6VXNlcjc5NTAwMTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/79500129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/test9955667",
      "html_url": "https://github.com/test9955667",
      "followers_url": "https://api.github.com/users/test9955667/followers",
      "following_url": "https://api.github.com/users/test9955667/following{/other_user}",
      "gists_url": "https://api.github.com/users/test9955667/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/test9955667/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/test9955667/subscriptions",
      "organizations_url": "https://api.github.com/users/test9955667/orgs",
      "repos_url": "https://api.github.com/users/test9955667/repos",
      "events_url": "https://api.github.com/users/test9955667/events{/privacy}",
      "received_events_url": "https://api.github.com/users/test9955667/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-29T08:41:47Z",
    "updated_at": "2022-04-29T08:41:47Z",
    "author_association": "NONE",
    "body": "still panics the same when I specify a single version instead of throwing compiler error, strange. \r\nI do have quite a messy amt of versioned sol imports so will focus on cleaning that up in the meantime",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1113038584/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1115270576",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1115270576",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1115270576,
    "node_id": "IC_kwDOGBlvNc5Cea2w",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-02T19:20:49Z",
    "updated_at": "2022-05-02T19:20:49Z",
    "author_association": "MEMBER",
    "body": "> Since this problem makes it very hard to deal with incompatible versions, we should consider adding an option that makes it possible to exclude Semver enforcement.\r\n\r\nsorry not sure I follow here, what would we do by excluding semver enforcement?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1115270576/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1122549091",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1122549091",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1122549091,
    "node_id": "IC_kwDOGBlvNc5C6L1j",
    "user": {
      "login": "aiwowo1",
      "id": 89056917,
      "node_id": "MDQ6VXNlcjg5MDU2OTE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/89056917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aiwowo1",
      "html_url": "https://github.com/aiwowo1",
      "followers_url": "https://api.github.com/users/aiwowo1/followers",
      "following_url": "https://api.github.com/users/aiwowo1/following{/other_user}",
      "gists_url": "https://api.github.com/users/aiwowo1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aiwowo1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aiwowo1/subscriptions",
      "organizations_url": "https://api.github.com/users/aiwowo1/orgs",
      "repos_url": "https://api.github.com/users/aiwowo1/repos",
      "events_url": "https://api.github.com/users/aiwowo1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aiwowo1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-10T15:31:26Z",
    "updated_at": "2022-05-10T15:31:26Z",
    "author_association": "NONE",
    "body": "Hello, got the same issue. tried to find the offender but it seems all in range. Any help would be appreciated. \r\n\r\n```\r\n[⠃] Compiling...2022-05-10T15:14:21.660641Z ERROR ethers_solc::resolver: failed to resolve versions\r\n[⠊] Compiling...\r\nError:\r\n   0: Discovered incompatible solidity versions in following\r\n      : test/MyTestContract.t.sol (>=0.5.0 <= 0.9.0) imports:\r\n          lib/forge-std/src/Test.sol (>=0.6.0 <0.9.0)\r\n          contracts/UniswapV2Pair.sol (=0.5.16)\r\n          lib/forge-std/src/Vm.sol (>=0.6.0)\r\n          lib/forge-std/lib/ds-test/src/test.sol (>=0.5.0)\r\n          lib/forge-std/src/console.sol (>=0.4.22 <0.9.0)\r\n          lib/forge-std/src/console2.sol (>=0.4.22 <0.9.0)\r\n          contracts/interfaces/IUniswapV2Pair.sol (>=0.5.0)\r\n          contracts/UniswapV2ERC20.sol (=0.5.16)\r\n          contracts/libraries/Math.sol (=0.5.16)\r\n          contracts/libraries/UQ112x112.sol (=0.5.16)\r\n          contracts/interfaces/IERC20.sol (>=0.5.0)\r\n          contracts/interfaces/IUniswapV2Factory.sol (>=0.5.0)\r\n          contracts/interfaces/IUniswapV2Callee.sol (>=0.5.0)\r\n          contracts/interfaces/IUniswapV2ERC20.sol (>=0.5.0)\r\n          contracts/libraries/SafeMath.sol (=0.5.16)\r\n\r\n  Location:\r\n     cli/src/compile.rs:99\r\n  \r\n  Backtrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\r\n  Run with RUST_BACKTRACE=full to include source snippets.\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1122549091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1122556445",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1122556445",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1122556445,
    "node_id": "IC_kwDOGBlvNc5C6Nod",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-10T15:37:41Z",
    "updated_at": "2022-05-10T15:37:41Z",
    "author_association": "MEMBER",
    "body": "these are semver incompatible\r\n\r\n```\r\n lib/forge-std/src/Test.sol (>=0.6.0 <0.9.0)\r\n          contracts/UniswapV2Pair.sol (=0.5.16)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1122556445/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1122980488",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1122980488",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1122980488,
    "node_id": "IC_kwDOGBlvNc5C71KI",
    "user": {
      "login": "0xdomrom",
      "id": 11264336,
      "node_id": "MDQ6VXNlcjExMjY0MzM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/11264336?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xdomrom",
      "html_url": "https://github.com/0xdomrom",
      "followers_url": "https://api.github.com/users/0xdomrom/followers",
      "following_url": "https://api.github.com/users/0xdomrom/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xdomrom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xdomrom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xdomrom/subscriptions",
      "organizations_url": "https://api.github.com/users/0xdomrom/orgs",
      "repos_url": "https://api.github.com/users/0xdomrom/repos",
      "events_url": "https://api.github.com/users/0xdomrom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xdomrom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-10T22:49:06Z",
    "updated_at": "2022-05-10T22:49:06Z",
    "author_association": "NONE",
    "body": "+1 Really hoping for there to be an option to compile different contracts with different versions.\r\n\r\nEven a super explicit mapping of `ContractName: version` in a file somewhere would be amazing since you'd only have to set it once",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1122980488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1122992970",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1122992970",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1122992970,
    "node_id": "IC_kwDOGBlvNc5C74NK",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-10T23:00:22Z",
    "updated_at": "2022-05-10T23:00:22Z",
    "author_association": "MEMBER",
    "body": "You cannot import a contract with an incompatible Solidity version in another contract! The 'right' way to do this, is via `deployCode`, e.g. see [here](https://github.com/gakonst/v3-periphery-foundry/blob/main/contracts/foundry-tests/utils/Deploy.sol#L35-L36).",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1122992970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1172627462",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1163#issuecomment-1172627462",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1163",
    "id": 1172627462,
    "node_id": "IC_kwDOGBlvNc5F5OAG",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-01T18:54:00Z",
    "updated_at": "2022-07-01T18:54:00Z",
    "author_association": "MEMBER",
    "body": "Going to close this issue since it is not possible given how solc works right now, so it's not really a bug we can address. We'll take a look at this feature once solc supports bytecode imports :) ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1172627462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
