{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1967",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1967/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1967/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1967/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1967",
  "id": 1271338665,
  "node_id": "I_kwDOGBlvNc5Lxxap",
  "number": 1967,
  "title": "Coverage: Better branch handling (require/assert)",
  "user": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759719259,
      "node_id": "LA_kwDOGBlvNc7gGMNb",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-high",
      "name": "P-high",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: high"
    },
    {
      "id": 3759720129,
      "node_id": "LA_kwDOGBlvNc7gGMbB",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-hard",
      "name": "D-hard",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: hard"
    },
    {
      "id": 4233058229,
      "node_id": "LA_kwDOGBlvNc78T1e1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-coverage",
      "name": "Cmd-forge-coverage",
      "color": "006B75",
      "default": false,
      "description": "Command: forge coverage"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-06-14T20:41:18Z",
  "updated_at": "2022-06-28T15:06:45Z",
  "closed_at": "2022-06-28T15:06:45Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "We don't currently handle `require`/`assert` as branches, and `if` statements with no else branch are considered to be fully covered iff the true path is executed - branches should only be considered to be fully covered if *both* the true *and* the false path has been taken.\r\n\r\nWe also need to figure out how to handle `YulSwitch` and `TryCatchStatement`\r\n\r\n## More context\r\n\r\n>What makes them more complicated? Doesn't each require/assert(bool) translate to an if (bool) statement and is like a branch?\r\n\r\nIdeally for branches we want to have three states: not executed, one path executed (either true or false) or both branches executed (i.e. covered).\r\n\r\nCurrently for if statements with no else block there are two states: not executed or true branch executed which is not ideal. I think we probably want to signal to the developer if they only covered 1 possible path in their test.\r\n\r\nFor require and assert though, all of this is marked by specific opcodes, and I need to figure out which. The general layout seems to be:\r\n\r\n```\r\n<some assertion>\r\nPUSH <pc at which we continue execution if assertion holds>\r\nJUMPI\r\n<setup revert and revert>\r\n```\r\n\r\nSo my assumption is that the false branch would be right after JUMPI. For the true branch, I'm not sure - maybe I need to record what value is on the stack every time we encounter a `JUMPI` so I can look it up later and check if we both got a 0 and a non-0 value? :/\r\n\r\nEdit: I checked it out on Godbolt btw, here is my contract\r\n\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity >=0.4.0;\r\n\r\ncontract Test {\r\n    function test(uint256 a) public pure returns (uint256) {\r\n        require(a > 1, \"abc\");\r\n    }\r\n}\r\n```\r\n\r\nAnd here is the bytecode for `require`:\r\n\r\n```sh\r\n  PUSH 1\r\n  DUP3 \r\n  GT \r\n  PUSH [tag] test_uint256_6\r\n  JUMPI \r\n  PUSH 40 # if we end up here, we will end up reverting\r\n# load revert string\r\n  MLOAD \r\n  PUSH 8C379A000000000000000000000000000000000000000000000000000000000\r\n  DUP2 \r\n  MSTORE \r\n  PUSH 4\r\n  ADD \r\n# set return addr\r\n  PUSH [tag] test_uint256_5\r\n  SWAP1\r\n# some abi encoding whatever\r\n  PUSH [tag] abi_encode_tuple_t_stringliteral_4e03657aea45a94fc7d47ba826c8d667c0d1e6e33a64a036ec44f58fa12d6c45__to_t_string_memory_ptr__fromStack_reversed_0\r\n  JUMP [in]\r\ntag test_uint256_5\r\n# after abi encoding we end up here\r\n  JUMPDEST \r\n  PUSH 40\r\n  MLOAD \r\n  DUP1 \r\n  SWAP2 \r\n  SUB \r\n  SWAP1 \r\n  REVERT \r\ntag test_uint256_6\r\n  JUMPDEST # if we end up here we didn't revert\r\n```\r\n\r\n_Originally posted by @onbjerg in https://github.com/foundry-rs/foundry/issues/1576#issuecomment-1155666611_",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1967/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1967/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
