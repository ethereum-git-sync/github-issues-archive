{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4440",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4440/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4440/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4440/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4440",
  "id": 1601444539,
  "node_id": "I_kwDOGBlvNc5fdBq7",
  "number": 4440,
  "title": "meta(debugger/tracing): tracking issue for debugger and tracing improvements",
  "user": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3703752609,
      "node_id": "LA_kwDOGBlvNc7cwseh",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-cast",
      "name": "C-cast",
      "color": "5319E7",
      "default": false,
      "description": "Command: cast"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703753090,
      "node_id": "LA_kwDOGBlvNc7cwsmC",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-tracing",
      "name": "A-tracing",
      "color": "FBCA04",
      "default": false,
      "description": "Area: tracing"
    },
    {
      "id": 3703753247,
      "node_id": "LA_kwDOGBlvNc7cwsof",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-debugger",
      "name": "A-debugger",
      "color": "FBCA04",
      "default": false,
      "description": "Area: debugger"
    },
    {
      "id": 3746533612,
      "node_id": "LA_kwDOGBlvNc7fT5Ds",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-meta",
      "name": "T-meta",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: meta"
    },
    {
      "id": 3776975605,
      "node_id": "LA_kwDOGBlvNc7hIBL1",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-debug",
      "name": "Cmd-forge-debug",
      "color": "006B75",
      "default": false,
      "description": "Command: forge run"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-02-27T15:46:53Z",
  "updated_at": "2023-04-14T20:02:01Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "## Overview\r\n\r\nPlacing these in the same issue because a refactor should let us reuse most/all of the same code for both debugging and traces, within both forge and cast. The difference between \"trace view\" and \"debug view\" then is just what's shown on the screen. For example, you can imagine the debugger config looking something like this (made up type names within the Options):\r\n\r\n```rust\r\nstruct DebuggerConfig {\r\n  trace: Option<CallTrace>,\r\n  opcodes: Option<Vec<Opcodes>>,\r\n  memory_states: Option<Vec<Memory>>,\r\n  stack_states: Option<Vec<Stack>>,\r\n  srcmap: Option<SrcMap>,\r\n}\r\n```\r\n\r\nwhere \"trace view\" simply has `None` everywhere except for `trace`, while debugger mode may have everything enabled. Users could toggle each config option on/off in the debugger UI.\r\n\r\nThe debugger should be interactive to allow for collapsing traces, show/hiding more information, etc. Tenderly debugger/trace [UX](https://twitter.com/TenderlyApp/status/1623679228884447234) is very nice IMO so is a good source of inspiration. More info coming soon, need to link existing issues here\r\n\r\n## Issues\r\n\r\n*this is a work in progress*\r\n\r\n- https://github.com/foundry-rs/foundry/issues/3390\r\n- https://github.com/foundry-rs/foundry/issues/4743\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4440/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4440/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
