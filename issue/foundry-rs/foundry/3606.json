{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3606",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3606/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3606/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3606/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3606",
  "id": 1435101243,
  "node_id": "I_kwDOGBlvNc5Vieg7",
  "number": 3606,
  "title": "Add a flag that displays the transaction hash and/or trace of a `cast send` even if the transaction is failing.",
  "user": {
    "login": "ZrowGz",
    "id": 80988768,
    "node_id": "MDQ6VXNlcjgwOTg4NzY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/80988768?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZrowGz",
    "html_url": "https://github.com/ZrowGz",
    "followers_url": "https://api.github.com/users/ZrowGz/followers",
    "following_url": "https://api.github.com/users/ZrowGz/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZrowGz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZrowGz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZrowGz/subscriptions",
    "organizations_url": "https://api.github.com/users/ZrowGz/orgs",
    "repos_url": "https://api.github.com/users/ZrowGz/repos",
    "events_url": "https://api.github.com/users/ZrowGz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZrowGz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752609,
      "node_id": "LA_kwDOGBlvNc7cwseh",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-cast",
      "name": "C-cast",
      "color": "5319E7",
      "default": false,
      "description": "Command: cast"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-11-03T18:32:03Z",
  "updated_at": "2022-11-07T07:40:04Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nCast\r\n\r\n### Describe the feature you would like\r\n\r\nAdd a flag to: `cast send <ADDRESS> \"foo()\" like `--txn-trace` and/or `--txn-hash` that will display a trace or the transaction hash for the send, even if the transaction is failing.\r\n\r\nOr it could just always provide the transaction hash, even if it fails. Being able to locate where in the execution it was failing allowed me to track down the issue & do some account impersonating to correct the hiccup at the external contract.\r\n\r\n### Additional context\r\n\r\nI was getting an error & failed transaction using `cast send ...` and the error simply gave the error string. It didn't display the failed transaction hash. \r\n\r\nHooked it up to a frontend and ran it from metamask, where I was able to retrieve the transaction hash & then run `cast run 0xTxnHash` to get the trace, showing me where in the function call the issue was arising. \r\n\r\nExample of what I was seeing when the txn failed: \r\n![Screen Shot 2022-11-03 at 11 33 09](https://user-images.githubusercontent.com/80988768/199805831-912c5cf6-569a-4d63-9ed7-e4f63fe33b5b.png)\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3606/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3606/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
