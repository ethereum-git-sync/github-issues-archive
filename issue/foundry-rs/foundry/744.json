{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/744",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/744/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/744/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/744/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/744",
  "id": 1137897055,
  "node_id": "I_kwDOGBlvNc5D0u5f",
  "number": 744,
  "title": "Configuring fuzzer parameters per test and per contract",
  "user": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3394554570,
      "node_id": "LA_kwDOGBlvNc7KVMrK",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-fuzzing",
      "name": "A-fuzzing",
      "color": "FBCA04",
      "default": false,
      "description": "Area: fuzzing"
    },
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-02-14T21:59:50Z",
  "updated_at": "2022-09-02T13:41:55Z",
  "closed_at": "2022-09-02T13:41:55Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nThere are multiple ongoing improvements to the fuzzer, which will result in additional fuzzer settings that should be exposed to the user. These include:\r\n- number of fuzz runs\r\n- max_local_rejects and max_global_rejects (https://github.com/gakonst/foundry/pull/725)\r\n- frequency of dictionary values vs. random values (https://github.com/gakonst/foundry/pull/731)\r\n- the ability to manually specify values that should be added to the dictionary\r\n- etc.\r\n\r\nIt's common to want to vary the values of these settings by test or by contract, instead of just globally. For example, see the Uniswap V3 [echidna tests](https://github.com/Uniswap/v3-core/tree/main/audits/tob/contracts/crytic/echidna) where they have multiple config files.\r\n\r\nThe scope of this issue is currently to just discuss approaches to specify separate fuzzing config for different tests. Below are some potential approaches, feel free to suggest others. @gakonst pointed out the cheat code based approaches may be tricky because currently proptest config [lives outside](https://github.com/gakonst/foundry/blob/master/evm-adapters/src/fuzz.rs#L25) of the EVM, so implementing that approach may require some refactoring\r\n\r\n## Approach 1: `foundry.toml` only\r\n\r\nThe `foundry.toml` config file has profiles so you can change the config easily. We can simply leverage these profiles and the `--match-test` and `--match-contract` flags to craft various combinations. For example:\r\n\r\n```toml\r\n[default]\r\nfuzz-runs = 500\r\n\r\n[shallow]\r\nfuzz-runs = 100\r\n\r\n[deep]\r\nfuzz-runs = 25000\r\n```\r\n\r\nThen run tests with a `tests.sh` like this:\r\n```sh\r\nFOUNDRY_PROFILE=shallow forge test --match-contract ShallowTests\r\nFOUNDRY_PROFILE=deep forge test --match-contract DeepTests\r\nforge test --no-match-contract \"ShallowTests|DeepTests\"\r\n```\r\n\r\nThis is nice because it works right now and requires no changes, but it's a bit clunky\r\n\r\n## Approach 2: Extend `foundry.toml` and a single cheat code\r\n\r\nIn this approach, the config file lets you specify fuzz profiles, and there's a cheat code you can use at the contract or test level to specify a profile name. For example:\r\n\r\n```sh\r\n[default]\r\n# default fuzzer config for this profile\r\nfuzz-runs = 100\r\n\r\n# additional fuzzer configs that can be used with the `default` profile\r\n[default.fuzz-shallow]\r\nfuzz-runs = 10\r\n\r\n[default.fuzz-deep]\r\nfuzz-runs = 10000\r\n\r\n\r\n[ci]\r\n# default fuzzing config for this profile\r\nfuzz-runs = 10000\r\n\r\n# additional fuzzer configs that can be used with the `ci` profile\r\n[ci.fuzz-shallow]\r\nfuzz-runs = 1000\r\n\r\n[ci.fuzz-deep]\r\nfuzz-runs = 100000\r\n```\r\n\r\nThen in a test of contract you'd use\r\n\r\n```solidity\r\ncontract MyTests is DSTest {\r\n  vm.fuzz_profile(\"fuzz-deep\");\r\n\r\n  function testSomething() public {\r\n    // This (and other tests in this contract) will be fuzzed with the\r\n    // `fuzz-deep` profile, which has 10,000 runs with the `default`\r\n    // profile and 100,000 runs with the `ci` profile\r\n  }\r\n\r\n  function testSomething() public {\r\n    vm.fuzz_profile(\"fuzz-shallow\");\r\n    // This will be fuzzed with the `fuzz-shallow` profile, which has 10 runs with\r\n    // the `default` profile and 1000 runs with the `ci` profile\r\n  }\r\n}\r\n\r\ncontract OtherTests is DSTest {\r\n  // Since we don't specify a fuzz profile, this will use the default of 100 runs with the\r\n  // `default` profile and 10,000 runs in CI\r\n}\r\n```\r\n\r\nAside from requiring refactoring for cheat code support, another downside of this approach is that you need a new profile for every specific fuzzer configuration (i.e. there's no way to just change one fuzz setting in one test without creating a new profile specific for that test)\r\n\r\n## Approach 3: Extend `foundry.toml` and multiple cheat codes\r\n\r\nThis extends approach 2 by adding cheat codes for each fuzzer setting to remedy the downside mentioned. For example:\r\n\r\n```solidity\r\ncontract MyTest is DSTest {\r\n  vm.fuzz_profile(\"fuzz-deep\");\r\n\r\n  function testSomething() public {\r\n    // This test will use the fuzz-deep profile\r\n  }\r\n\r\n  function testSomethingElse() public {\r\n    // This test will use all the settings of the fuzz-deep profile, but overrides number of runs\r\n    vm.fuzz_runs(\"default\", 250);\r\n    vm.fuzz_runs(\"ci\", 2500);\r\n  }\r\n}\r\n```\r\n\r\n\r\n## Approach 4: Cheat codes only\r\n\r\nRemove all fuzzing config from `foundry.toml`, and specify everything as cheat codes. For example:\r\n\r\n```solidity\r\ncontract MyTestHarness is DSTest {\r\n  // Define the default fuzz settings for all tests\r\n  vm.fuzz_runs(\"default\", 100);\r\n  vm.fuzz_runs(\"ci\", 10000);\r\n}\r\n\r\ncontract MyTest is MyTest Harness {\r\n  function testSomething() public {\r\n    // This uses the defaults specified in MyTestHarness\r\n  }\r\n\r\n  function testSomethingElse() public {\r\n    // This uses 100 runs in the default profile and 50,000 runs in CI\r\n    vm.fuzz_runs(\"ci\", 50000);\r\n  }\r\n}\r\n```",
  "closed_by": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/744/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/744/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1235521515",
    "html_url": "https://github.com/foundry-rs/foundry/issues/744#issuecomment-1235521515",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/744",
    "id": 1235521515,
    "node_id": "IC_kwDOGBlvNc5JpI_r",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-02T13:41:55Z",
    "updated_at": "2022-09-02T13:41:55Z",
    "author_association": "COLLABORATOR",
    "body": "Closing as replaced by https://github.com/foundry-rs/foundry/issues/3062 which has a concrete proposal to discuss",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1235521515/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
