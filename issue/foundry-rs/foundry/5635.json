{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5635",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5635/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5635/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5635/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5635",
  "id": 1851692762,
  "node_id": "I_kwDOGBlvNc5uXpba",
  "number": 5635,
  "title": "`vm.broadcast()` sets incorrect nonce for txs",
  "user": {
    "login": "klkvr",
    "id": 62447812,
    "node_id": "MDQ6VXNlcjYyNDQ3ODEy",
    "avatar_url": "https://avatars.githubusercontent.com/u/62447812?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/klkvr",
    "html_url": "https://github.com/klkvr",
    "followers_url": "https://api.github.com/users/klkvr/followers",
    "following_url": "https://api.github.com/users/klkvr/following{/other_user}",
    "gists_url": "https://api.github.com/users/klkvr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/klkvr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/klkvr/subscriptions",
    "organizations_url": "https://api.github.com/users/klkvr/orgs",
    "repos_url": "https://api.github.com/users/klkvr/repos",
    "events_url": "https://api.github.com/users/klkvr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/klkvr/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-08-15T15:43:38Z",
  "updated_at": "2023-08-25T11:34:31Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [X] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (a0a31c3 2023-08-12T00:23:12.943797000Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nforge script\r\n\r\n### Operating System\r\n\r\nmacOS (Apple Silicon)\r\n\r\n### Describe the bug\r\n\r\n```solidity\r\ncontract NonceBug is Script {\r\n    function run() public payable {\r\n        vm.broadcast(1);\r\n        IERC20(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48).approve(\r\n            address(1), 1000\r\n        );\r\n\r\n        vm.broadcast(1);\r\n        IERC20(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48).approve(\r\n            address(1), 1000\r\n        );\r\n    }\r\n}\r\n```\r\nDry-running following script on mainnet will generate two transactions with the same nonce for the same sender:\r\n```\r\n{\r\n  \"transactions\": [\r\n    {\r\n        ...\r\n        \"nonce\": \"0x661\",\r\n        \"accessList\": []\r\n      },\r\n      ...\r\n    },\r\n    {\r\n        ...\r\n        \"nonce\": \"0x661\",\r\n        \"accessList\": []\r\n      },\r\n      ...\r\n    }\r\n  ],\r\n...\r\n}\r\n```\r\n\r\nWhen adding --broadcast flag, script will fail with error `EOA nonce changed unexpectedly while sending transactions`\r\n\r\nI have tracked the issue down to this line of code: https://github.com/foundry-rs/foundry/blob/410c8173e76b9fa42864e2d63309cd7cc4b6cfd9/crates/evm/src/executor/inspector/cheatcodes/mod.rs#L727\r\nAnd it seems to be actually increasing nonce to correct next value. But somehow on the next broadcast it becomes the old value again.\r\n\r\nAnother interesting thing here is that following script would generate correct nonces:\r\n```solidity\r\ncontract NonceBug is Script {\r\n    function run() public payable {\r\n        vm.broadcast(1);\r\n        address(0).call(\"\");\r\n\r\n        vm.broadcast(1);\r\n        address(0).call(\"\");\r\n    }\r\n}\r\n\r\n```\r\n```\r\n{\r\n  \"transactions\": [\r\n    {\r\n        ...\r\n        \"nonce\": \"0x661\",\r\n        \"accessList\": []\r\n      },\r\n      ...\r\n    },\r\n    {\r\n        ...\r\n        \"nonce\": \"0x662\",\r\n        \"accessList\": []\r\n      },\r\n      ...\r\n    }\r\n  ],\r\n...\r\n}\r\n```\r\n\r\nAlso, using `vm.startBroadcast()/vm.stopBroadcast()` instead of `vm.broadcast()` solves the issue too.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5635/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5635/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1692541375",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5635#issuecomment-1692541375",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5635",
    "id": 1692541375,
    "node_id": "IC_kwDOGBlvNc5k4iG_",
    "user": {
      "login": "nhtyy",
      "id": 15225385,
      "node_id": "MDQ6VXNlcjE1MjI1Mzg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15225385?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nhtyy",
      "html_url": "https://github.com/nhtyy",
      "followers_url": "https://api.github.com/users/nhtyy/followers",
      "following_url": "https://api.github.com/users/nhtyy/following{/other_user}",
      "gists_url": "https://api.github.com/users/nhtyy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nhtyy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nhtyy/subscriptions",
      "organizations_url": "https://api.github.com/users/nhtyy/orgs",
      "repos_url": "https://api.github.com/users/nhtyy/repos",
      "events_url": "https://api.github.com/users/nhtyy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nhtyy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-24T23:28:05Z",
    "updated_at": "2023-08-24T23:31:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah so I have actually run into this in another form i think, and I couldnt tell you at the moment exactly whats going on will try to repro soon but\r\n\r\nhttps://github.com/foundry-rs/foundry/blob/95a93cd397f25f3f8d49d2851eb52bc2d52dd983/crates/evm/src/executor/inspector/cheatcodes/mod.rs#L768-L776\r\n\r\nthis block would have been executed at the end of your first call.\r\n\r\nIt sets the broadcast field to None on the Cheatcodes Inspector, so your code block would never be hit after the first broadcast (?)\r\n\r\n(This does not happen when you use `vm.startBroadcast` / `vm.stopBroadcast`)\r\n\r\nIm guessing this is related. Although prank (single call) has the same logic here so not 100% maybe i just havent noticed",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1692541375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1693177653",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5635#issuecomment-1693177653",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5635",
    "id": 1693177653,
    "node_id": "IC_kwDOGBlvNc5k69c1",
    "user": {
      "login": "klkvr",
      "id": 62447812,
      "node_id": "MDQ6VXNlcjYyNDQ3ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/62447812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klkvr",
      "html_url": "https://github.com/klkvr",
      "followers_url": "https://api.github.com/users/klkvr/followers",
      "following_url": "https://api.github.com/users/klkvr/following{/other_user}",
      "gists_url": "https://api.github.com/users/klkvr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klkvr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klkvr/subscriptions",
      "organizations_url": "https://api.github.com/users/klkvr/orgs",
      "repos_url": "https://api.github.com/users/klkvr/repos",
      "events_url": "https://api.github.com/users/klkvr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klkvr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T10:57:20Z",
    "updated_at": "2023-08-25T11:09:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think that the reason for this is here:\r\n\r\nhttps://github.com/foundry-rs/foundry/blob/95a93cd397f25f3f8d49d2851eb52bc2d52dd983/crates/evm/src/executor/inspector/cheatcodes/env.rs#L695-L705\r\n\r\nIt is the only place in the whole codebase which is actually decreases nonce, and somehow it is being called for the first scenario (with ERC20), and not being called for other scenario.\r\n\r\nhttps://github.com/foundry-rs/foundry/blob/95a93cd397f25f3f8d49d2851eb52bc2d52dd983/crates/evm/src/executor/inspector/cheatcodes/env.rs#L589-L596\r\n\r\nAlso, somehow, caller here for the first broadcast call is `Config::DEFAULT_SENDER`, and for the second call is not",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1693177653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1693203970",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5635#issuecomment-1693203970",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5635",
    "id": 1693203970,
    "node_id": "IC_kwDOGBlvNc5k7D4C",
    "user": {
      "login": "klkvr",
      "id": 62447812,
      "node_id": "MDQ6VXNlcjYyNDQ3ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/62447812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klkvr",
      "html_url": "https://github.com/klkvr",
      "followers_url": "https://api.github.com/users/klkvr/followers",
      "following_url": "https://api.github.com/users/klkvr/following{/other_user}",
      "gists_url": "https://api.github.com/users/klkvr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klkvr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klkvr/subscriptions",
      "organizations_url": "https://api.github.com/users/klkvr/orgs",
      "repos_url": "https://api.github.com/users/klkvr/repos",
      "events_url": "https://api.github.com/users/klkvr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klkvr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T11:21:48Z",
    "updated_at": "2023-08-25T11:22:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is due to delegatecall which happens when calling USDC (0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48). Replacing USDC address with DAI solves the issue",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1693203970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1693218404",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5635#issuecomment-1693218404",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5635",
    "id": 1693218404,
    "node_id": "IC_kwDOGBlvNc5k7HZk",
    "user": {
      "login": "klkvr",
      "id": 62447812,
      "node_id": "MDQ6VXNlcjYyNDQ3ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/62447812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klkvr",
      "html_url": "https://github.com/klkvr",
      "followers_url": "https://api.github.com/users/klkvr/followers",
      "following_url": "https://api.github.com/users/klkvr/following{/other_user}",
      "gists_url": "https://api.github.com/users/klkvr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klkvr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klkvr/subscriptions",
      "organizations_url": "https://api.github.com/users/klkvr/orgs",
      "repos_url": "https://api.github.com/users/klkvr/repos",
      "events_url": "https://api.github.com/users/klkvr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klkvr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T11:34:31Z",
    "updated_at": "2023-08-25T11:34:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "So, the exact flow is as following:\r\n\r\n1. `broadcast` call is getting processed, and tx.origin is set to the user address\r\n2. User calls some contract after broadcast\r\n3. Contract makes delegatecall\r\n4. call_end function gets entered and due to depth mismatch caller stays the same, but the broadcast is getting removed:\r\nhttps://github.com/foundry-rs/foundry/blob/95a93cd397f25f3f8d49d2851eb52bc2d52dd983/crates/evm/src/executor/inspector/cheatcodes/mod.rs#L768-L776\r\n5. The caller is never updated until the next call/prank/whatever\r\n6. On the next `.broadcast`, we still have the caller set to the user address, and correct_caller_nonce function decreases it's nonce\r\nhttps://github.com/foundry-rs/foundry/blob/95a93cd397f25f3f8d49d2851eb52bc2d52dd983/crates/evm/src/executor/inspector/cheatcodes/env.rs#L695-L705\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1693218404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
