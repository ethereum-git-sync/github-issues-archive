{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3648",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3648/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3648/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3648/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3648",
  "id": 1441122638,
  "node_id": "I_kwDOGBlvNc5V5clO",
  "number": 3648,
  "title": "Anvil freezes in sub-process",
  "user": {
    "login": "Theo-",
    "id": 7581961,
    "node_id": "MDQ6VXNlcjc1ODE5NjE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7581961?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Theo-",
    "html_url": "https://github.com/Theo-",
    "followers_url": "https://api.github.com/users/Theo-/followers",
    "following_url": "https://api.github.com/users/Theo-/following{/other_user}",
    "gists_url": "https://api.github.com/users/Theo-/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Theo-/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Theo-/subscriptions",
    "organizations_url": "https://api.github.com/users/Theo-/orgs",
    "repos_url": "https://api.github.com/users/Theo-/repos",
    "events_url": "https://api.github.com/users/Theo-/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Theo-/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 4077188949,
      "node_id": "LA_kwDOGBlvNc7zBPdV",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-anvil",
      "name": "C-anvil",
      "color": "5319E7",
      "default": false,
      "description": "Command: anvil"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2022-11-09T00:23:47Z",
  "updated_at": "2022-11-11T17:15:09Z",
  "closed_at": "2022-11-11T16:56:47Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nAnvil\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [X] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (0c61e40 2022-11-08T16:46:49.405733Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nanvil\r\n\r\n### Operating System\r\n\r\nmacOS (Apple Silicon)\r\n\r\n### Describe the bug\r\n\r\nWhen running Anvil in a sub process (for example spawned by a Go process), calling `evm_mine` makes Anvil freeze for 5 to 9 seconds. I'm trying to mine a block with about 20 transactions.\r\n\r\nA similar issue was reported here: https://github.com/foundry-rs/foundry/issues/2652",
  "closed_by": {
    "login": "Theo-",
    "id": 7581961,
    "node_id": "MDQ6VXNlcjc1ODE5NjE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7581961?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Theo-",
    "html_url": "https://github.com/Theo-",
    "followers_url": "https://api.github.com/users/Theo-/followers",
    "following_url": "https://api.github.com/users/Theo-/following{/other_user}",
    "gists_url": "https://api.github.com/users/Theo-/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Theo-/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Theo-/subscriptions",
    "organizations_url": "https://api.github.com/users/Theo-/orgs",
    "repos_url": "https://api.github.com/users/Theo-/repos",
    "events_url": "https://api.github.com/users/Theo-/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Theo-/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3648/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3648/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1308324006",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3648#issuecomment-1308324006",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3648",
    "id": 1308324006,
    "node_id": "IC_kwDOGBlvNc5N-3Cm",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-09T07:23:14Z",
    "updated_at": "2022-11-09T07:23:35Z",
    "author_association": "MEMBER",
    "body": "hmm interesting.\r\n\r\nyou're calling evm_mine as rpc call from the program that spawned the anvil process?\r\n\r\nIs there a way for me to replicate this?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1308324006/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1308978509",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3648#issuecomment-1308978509",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3648",
    "id": 1308978509,
    "node_id": "IC_kwDOGBlvNc5OBW1N",
    "user": {
      "login": "Theo-",
      "id": 7581961,
      "node_id": "MDQ6VXNlcjc1ODE5NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7581961?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Theo-",
      "html_url": "https://github.com/Theo-",
      "followers_url": "https://api.github.com/users/Theo-/followers",
      "following_url": "https://api.github.com/users/Theo-/following{/other_user}",
      "gists_url": "https://api.github.com/users/Theo-/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Theo-/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Theo-/subscriptions",
      "organizations_url": "https://api.github.com/users/Theo-/orgs",
      "repos_url": "https://api.github.com/users/Theo-/repos",
      "events_url": "https://api.github.com/users/Theo-/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Theo-/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-09T15:59:12Z",
    "updated_at": "2022-11-09T16:06:56Z",
    "author_association": "NONE",
    "body": "I'll try and get an example, but basically I'm grabbing 20 signed transactions from 20 different signers, stacking them onto a forked chain (forked server is 200ms away) and mining a block.\r\n\r\n> you're calling evm_mine as rpc call from the program that spawned the anvil process?\r\n\r\ncorrect",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1308978509/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1309588495",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3648#issuecomment-1309588495",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3648",
    "id": 1309588495,
    "node_id": "IC_kwDOGBlvNc5ODrwP",
    "user": {
      "login": "Theo-",
      "id": 7581961,
      "node_id": "MDQ6VXNlcjc1ODE5NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7581961?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Theo-",
      "html_url": "https://github.com/Theo-",
      "followers_url": "https://api.github.com/users/Theo-/followers",
      "following_url": "https://api.github.com/users/Theo-/following{/other_user}",
      "gists_url": "https://api.github.com/users/Theo-/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Theo-/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Theo-/subscriptions",
      "organizations_url": "https://api.github.com/users/Theo-/orgs",
      "repos_url": "https://api.github.com/users/Theo-/repos",
      "events_url": "https://api.github.com/users/Theo-/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Theo-/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-10T00:32:49Z",
    "updated_at": "2022-11-10T00:33:41Z",
    "author_association": "NONE",
    "body": "@mattsse here is a simple go script to reproduce the issue (it mines the current block on the polygon chain).\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"os/exec\"\r\n\t\"strconv\"\r\n\t\"time\"\r\n\r\n\t\"github.com/ethereum/go-ethereum/ethclient\"\r\n\t\"github.com/ethereum/go-ethereum/rpc\"\r\n\tlog \"github.com/sirupsen/logrus\"\r\n)\r\n\r\n// put your fork url here, for POLYGON mainnet\r\nconst FORK_URL = \"http://xxxxx\"\r\n\r\nfunc main() {\r\n\t// Create an IPC based RPC connection to a remote node\r\n\tconn, err := ethclient.Dial(FORK_URL)\r\n\tif err != nil {\r\n\t\tlog.Fatalf(\"Failed to connect to the Ethereum client: %v\", err)\r\n\t}\r\n\r\n\t// get the latest block\r\n\tblock, err := conn.BlockByNumber(context.TODO(), nil)\r\n\r\n\tif err != nil {\r\n\t\tlog.Fatalf(\"Failed to get latest block: %v\", err)\r\n\t}\r\n\r\n\tport := 21000\r\n\r\n\tforkBlockNumber := block.Number().Uint64() - 1\r\n\r\n\t// fork anvil at the previous block\r\n\targs := []string{\r\n\t\t\"-a\", \"0\", \"--no-mining\", \"--fork-block-number\", strconv.Itoa(int(forkBlockNumber - 1)), \"-p\", strconv.Itoa(port), \"--chain-id\", \"137\", \"-f\", FORK_URL,\r\n\t}\r\n\r\n\tganacheCmd := exec.Command(\"anvil\", args[:]...)\r\n\r\n\tlog.WithField(\"command\", ganacheCmd.String()).Info(\"starting ganache\")\r\n\r\n\t// kill ganache when done\r\n\tdefer func() {\r\n\t\tlog.WithFields(log.Fields{\r\n\t\t\t\"pid\": ganacheCmd.Process.Pid,\r\n\t\t}).Info(\"killing ganache\")\r\n\r\n\t\terr := ganacheCmd.Process.Kill()\r\n\r\n\t\tif err != nil {\r\n\t\t\tlog.WithError(err).Error(\"failed to kill ganache\")\r\n\t\t}\r\n\t}()\r\n\r\n\terr = ganacheCmd.Start()\r\n\r\n\tlog.WithFields(log.Fields{\r\n\t\t\"pid\":  ganacheCmd.Process.Pid,\r\n\t\t\"fork\": FORK_URL,\r\n\t}).Debug(\"Started ganache\")\r\n\r\n\t// wait a bit\r\n\ttime.Sleep(1 * time.Second)\r\n\r\n\t// connect to anvil\r\n\trpc, _ := rpc.Dial(fmt.Sprintf(\"http://localhost:%d\", port))\r\n\tanvil := ethclient.NewClient(rpc)\r\n\r\n\tstartTxSend := time.Now()\r\n\r\n\t// pass the current block's transaction to anvil\r\n\tfor _, tx := range block.Transactions() {\r\n\t\terr := anvil.SendTransaction(context.Background(), tx)\r\n\r\n\t\tif err != nil {\r\n\t\t\tlog.WithError(err).Error(\"failed to send transaction\")\r\n\t\t}\r\n\t}\r\n\r\n\tlog.WithFields(log.Fields{\r\n\t\t\"in\":  time.Since(startTxSend),\r\n\t\t\"txs\": len(block.Transactions()),\r\n\t}).Info(\"Sent transactions to anvil\")\r\n\r\n\tstartTime := time.Now()\r\n\r\n\t// mine the next block\r\n\terr = rpc.Call(nil, \"evm_mine\", nil)\r\n\r\n\tlog.WithFields(log.Fields{\r\n\t\t\"in\":  time.Since(startTime),\r\n\t\t\"err\": err,\r\n\t}).Info(\"anvil block mined\")\r\n}\r\n```\r\n\r\nHere is the output is:\r\n\r\n```\r\nINFO[0000] starting ganache                              command=\"/anvil -a 0 --no-mining --fork-block-number 35416266 -p 21000 --chain-id 137 -f http://FORK_URL\"\r\nINFO[0001] Sent transactions to anvil                    in=809.475708ms txs=59\r\nINFO[0016] anvil block mined                             err=\"<nil>\" in=14.887776333s\r\n```\r\n\r\nIt's also quite slow to send all txs to the anvil instance, considering it's on the same machine. In this case mining the block took 14s+",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1309588495/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1311798181",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3648#issuecomment-1311798181",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3648",
    "id": 1311798181,
    "node_id": "IC_kwDOGBlvNc5OMHOl",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-11T15:04:30Z",
    "updated_at": "2022-11-11T15:09:51Z",
    "author_association": "MEMBER",
    "body": "can confirm that the first run takes ~14s \r\nthat's because we have to fetch the necessary state from the fork endpoint. For 171 tx this is a lot of requests 171 getAccount + 171 `getTransaction` + getCode for all contracts + 1 request for every untouched slot\r\n\r\nHowever, consecutive runs against the same block are much faster because the state is cached, around 2ms. \r\n\r\nSo the freeze is actually just the amount of time it takes to fetch all the touched slots.\r\n\r\nIf you have a fork API key with a higher tier then you can set a custom CUPS value, see\r\n\r\nanvil --help for `--compute-units-per-second` which we use to budget requests.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1311798181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1311931339",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3648#issuecomment-1311931339",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3648",
    "id": 1311931339,
    "node_id": "IC_kwDOGBlvNc5OMnvL",
    "user": {
      "login": "Theo-",
      "id": 7581961,
      "node_id": "MDQ6VXNlcjc1ODE5NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7581961?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Theo-",
      "html_url": "https://github.com/Theo-",
      "followers_url": "https://api.github.com/users/Theo-/followers",
      "following_url": "https://api.github.com/users/Theo-/following{/other_user}",
      "gists_url": "https://api.github.com/users/Theo-/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Theo-/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Theo-/subscriptions",
      "organizations_url": "https://api.github.com/users/Theo-/orgs",
      "repos_url": "https://api.github.com/users/Theo-/repos",
      "events_url": "https://api.github.com/users/Theo-/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Theo-/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-11T16:40:25Z",
    "updated_at": "2022-11-11T16:40:25Z",
    "author_association": "NONE",
    "body": "If is possible to make `--compute-units-per-second` unlimited? I run my own node ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1311931339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1311940671",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3648#issuecomment-1311940671",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3648",
    "id": 1311940671,
    "node_id": "IC_kwDOGBlvNc5OMqA_",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-11T16:51:06Z",
    "updated_at": "2022-11-11T16:53:50Z",
    "author_association": "MEMBER",
    "body": "~~is the fork url localhost?~~\r\n\r\n> forked server is 200ms away\r\n\r\nperhaps there should be a --local option that removes the CUPS limits\r\n\r\nyou can crank up the value as high as you like.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1311940671/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1311945245",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3648#issuecomment-1311945245",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3648",
    "id": 1311945245,
    "node_id": "IC_kwDOGBlvNc5OMrId",
    "user": {
      "login": "Theo-",
      "id": 7581961,
      "node_id": "MDQ6VXNlcjc1ODE5NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7581961?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Theo-",
      "html_url": "https://github.com/Theo-",
      "followers_url": "https://api.github.com/users/Theo-/followers",
      "following_url": "https://api.github.com/users/Theo-/following{/other_user}",
      "gists_url": "https://api.github.com/users/Theo-/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Theo-/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Theo-/subscriptions",
      "organizations_url": "https://api.github.com/users/Theo-/orgs",
      "repos_url": "https://api.github.com/users/Theo-/repos",
      "events_url": "https://api.github.com/users/Theo-/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Theo-/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-11T16:56:33Z",
    "updated_at": "2022-11-11T17:02:16Z",
    "author_association": "NONE",
    "body": "I put the script on the node, and cranked up the compute limit, now blocks mine in < 300ms. Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1311945245/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1311962646",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3648#issuecomment-1311962646",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3648",
    "id": 1311962646,
    "node_id": "IC_kwDOGBlvNc5OMvYW",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-11T17:15:09Z",
    "updated_at": "2022-11-11T17:15:09Z",
    "author_association": "MEMBER",
    "body": "A non-local node that is not operated by a provider is probably more of an unconventional niche setup overall.\r\n\r\nHowever, this should be better supported.\r\n\r\nThere should be a flag to opt out of ratelimit prevention I think, will add this",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1311962646/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
