{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1823",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1823/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1823/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1823/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1823",
  "id": 1258529225,
  "node_id": "I_kwDOGBlvNc5LA6HJ",
  "number": 1823,
  "title": "Anvil returns nothing when queried for past emitted smart contract events.",
  "user": {
    "login": "Ben-D-Anderson",
    "id": 63131015,
    "node_id": "MDQ6VXNlcjYzMTMxMDE1",
    "avatar_url": "https://avatars.githubusercontent.com/u/63131015?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Ben-D-Anderson",
    "html_url": "https://github.com/Ben-D-Anderson",
    "followers_url": "https://api.github.com/users/Ben-D-Anderson/followers",
    "following_url": "https://api.github.com/users/Ben-D-Anderson/following{/other_user}",
    "gists_url": "https://api.github.com/users/Ben-D-Anderson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Ben-D-Anderson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Ben-D-Anderson/subscriptions",
    "organizations_url": "https://api.github.com/users/Ben-D-Anderson/orgs",
    "repos_url": "https://api.github.com/users/Ben-D-Anderson/repos",
    "events_url": "https://api.github.com/users/Ben-D-Anderson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Ben-D-Anderson/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 4077188949,
      "node_id": "LA_kwDOGBlvNc7zBPdV",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-anvil",
      "name": "C-anvil",
      "color": "5319E7",
      "default": false,
      "description": "Command: anvil"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-06-02T18:13:24Z",
  "updated_at": "2022-06-05T12:39:53Z",
  "closed_at": "2022-06-05T12:39:53Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nAnvil\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [X] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (e0a5372 2022-06-02T00:12:18.781761724Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nanvil\r\n\r\n### Operating System\r\n\r\nLinux\r\n\r\n### Describe the bug\r\n\r\nI am using the `web3py` python library and interacting with a smart contract deployed on `anvil`. The code is very similar to what is written [here](https://web3py.readthedocs.io/en/v5/contracts.html#event-log-object). The `filter#get_new_entries` method works perfectly, however `filter#get_all_entries` always returns an empty list, regardless of how many entries have actually happened. This even happens when the `fromBlock` is set to be the first block.\r\n\r\nI know this is an `anvil` issue because the same issue is not found when using `hardhat`. Anvil is run with no parameters and no config, so all the defaults are used.\r\n\r\nI also wrote Java code to listen for events using the `Web3j` library, and this could also not access past events when used with `anvil`.\r\n\r\nFrom looking at other issues, I noted [this issue](https://github.com/foundry-rs/foundry/issues/1515) which may be of relevance to this issue. It is noted to be fixed, however [the fix](https://github.com/foundry-rs/foundry/pull/1556) just updated some tests and (as far as I can tell) not the source code of anvil. They suggest the issue could have been caused by the address topic in some way, however I don't use any topics with my two code tests other than the `fromBlock` parameter.",
  "closed_by": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1823/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1823/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1145714859",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1823#issuecomment-1145714859",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1823",
    "id": 1145714859,
    "node_id": "IC_kwDOGBlvNc5ESjir",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-03T08:15:43Z",
    "updated_at": "2022-06-03T08:53:17Z",
    "author_association": "MEMBER",
    "body": "not familiar with filtering in web3py, \r\ndo you know what's the actual payload of `get_all_entries`?, this uses the `eth_getFilterLogs` method?\r\n\r\nwhat's the initial filter that you're registering? because I believe by default web3py's filter will be `{fromBlock:\"latest\", toBlock:\"latest\"}`",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1145714859/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1145938988",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1823#issuecomment-1145938988",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1823",
    "id": 1145938988,
    "node_id": "IC_kwDOGBlvNc5ETaQs",
    "user": {
      "login": "Ben-D-Anderson",
      "id": 63131015,
      "node_id": "MDQ6VXNlcjYzMTMxMDE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/63131015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ben-D-Anderson",
      "html_url": "https://github.com/Ben-D-Anderson",
      "followers_url": "https://api.github.com/users/Ben-D-Anderson/followers",
      "following_url": "https://api.github.com/users/Ben-D-Anderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ben-D-Anderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ben-D-Anderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ben-D-Anderson/subscriptions",
      "organizations_url": "https://api.github.com/users/Ben-D-Anderson/orgs",
      "repos_url": "https://api.github.com/users/Ben-D-Anderson/repos",
      "events_url": "https://api.github.com/users/Ben-D-Anderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ben-D-Anderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-03T13:00:06Z",
    "updated_at": "2022-06-03T14:06:32Z",
    "author_association": "NONE",
    "body": "Yes, `eth_newFilter` and `eth_getFilterLogs`are used.\r\n\r\nMy code to create the contract filter is as follows:\r\n```python3\r\nevent_filter = contract.events.Purchase.createFilter(fromBlock=\"0x0\")\r\n```\r\nNote that I have also tried `\"0\"`, `\"earliest\"` etc. in the `fromBlock` field.\r\n\r\nI tried debugging the python library and I believe it sends the following payload when creating the filter:\r\n```json\r\n{\"topics\": [\"0xd3aa7599e4b0c574b10dc23d7bf5acf28f2193861951c1ba95a90f8a68073fa0\"], \"address\": \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\", \"fromBlock\": \"0x0\", \"toBlock\": \"latest\"}\r\n```\r\nThe `address` field's value is the address of the smart contract. I have no idea what the random address in the `topic` field is, sorry I'm not particularly well versed in blockchain technology. The `topic` address doesn't seem to appear anywhere in the `anvil` output, smart contract source code or my python code.\r\n\r\nThen as far as I can tell, when `get_all_entries` is called, it sends the address `0x4e697876646e5941504f316a33634e72` to the `getFilterLogs` endpoint. I am guessing this is the identifier of the filter.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1145938988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1145968794",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1823#issuecomment-1145968794",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1823",
    "id": 1145968794,
    "node_id": "IC_kwDOGBlvNc5EThia",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-03T13:31:07Z",
    "updated_at": "2022-06-03T13:31:07Z",
    "author_association": "MEMBER",
    "body": "If you could provide a python script which would allow me to replicate this, that'd be helpful",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1145968794/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1145999830",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1823#issuecomment-1145999830",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1823",
    "id": 1145999830,
    "node_id": "IC_kwDOGBlvNc5ETpHW",
    "user": {
      "login": "Ben-D-Anderson",
      "id": 63131015,
      "node_id": "MDQ6VXNlcjYzMTMxMDE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/63131015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ben-D-Anderson",
      "html_url": "https://github.com/Ben-D-Anderson",
      "followers_url": "https://api.github.com/users/Ben-D-Anderson/followers",
      "following_url": "https://api.github.com/users/Ben-D-Anderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ben-D-Anderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ben-D-Anderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ben-D-Anderson/subscriptions",
      "organizations_url": "https://api.github.com/users/Ben-D-Anderson/orgs",
      "repos_url": "https://api.github.com/users/Ben-D-Anderson/repos",
      "events_url": "https://api.github.com/users/Ben-D-Anderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ben-D-Anderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-03T14:05:48Z",
    "updated_at": "2022-06-03T14:35:25Z",
    "author_association": "NONE",
    "body": "Using your own smart contract abi file, the following code should resemble my setup (note: you must replace `EVENT_NAME` with the name of the event in your smart contract):\r\n```python3\r\nimport sys\r\nfrom web3 import Web3\r\n\r\nif len(sys.argv) != 4:\r\n    print(\"Usage: python3 event_listener.py <rpc> <contract_address> <contract_abi_file>\", flush=True)\r\n    exit()\r\n\r\nprovider = Web3.HTTPProvider(sys.argv[1])\r\nweb3 = Web3(provider)\r\n\r\ncontract_address = Web3.toChecksumAddress(sys.argv[2])\r\ncontract_abi = '[]'\r\nwith open(sys.argv[3], 'r') as f:\r\n    contract_abi = f.read().strip()\r\ncontract = web3.eth.contract(address=contract_address, abi=contract_abi)\r\n\r\n#replace 'EVENT_NAME' with event name\r\nevent_filter = contract.events.EVENT_NAME.createFilter(fromBlock='0x0')\r\nfor event in event_filter.get_all_entries():\r\n    print(Web3.toJSON(event), flush=True)\r\n```\r\nThe above code should print out all events that have been emitted by the contract (I tested it unsuccessfully on `anvil` but successfully on `hardhat`).\r\nI don't have python code to the emit the events, only java code - so you'll have to manually emit the events somehow or write the code to do that.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1145999830/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
