{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/543",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/543/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/543/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/543/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/543",
  "id": 1111670810,
  "node_id": "I_kwDOGBlvNc5CQsAa",
  "number": 543,
  "title": "getting values of emitted events",
  "user": {
    "login": "stillmatic",
    "id": 4743676,
    "node_id": "MDQ6VXNlcjQ3NDM2NzY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4743676?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stillmatic",
    "html_url": "https://github.com/stillmatic",
    "followers_url": "https://api.github.com/users/stillmatic/followers",
    "following_url": "https://api.github.com/users/stillmatic/following{/other_user}",
    "gists_url": "https://api.github.com/users/stillmatic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stillmatic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stillmatic/subscriptions",
    "organizations_url": "https://api.github.com/users/stillmatic/orgs",
    "repos_url": "https://api.github.com/users/stillmatic/repos",
    "events_url": "https://api.github.com/users/stillmatic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stillmatic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "bentobox19",
    "id": 85324266,
    "node_id": "MDQ6VXNlcjg1MzI0MjY2",
    "avatar_url": "https://avatars.githubusercontent.com/u/85324266?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bentobox19",
    "html_url": "https://github.com/bentobox19",
    "followers_url": "https://api.github.com/users/bentobox19/followers",
    "following_url": "https://api.github.com/users/bentobox19/following{/other_user}",
    "gists_url": "https://api.github.com/users/bentobox19/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bentobox19/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bentobox19/subscriptions",
    "organizations_url": "https://api.github.com/users/bentobox19/orgs",
    "repos_url": "https://api.github.com/users/bentobox19/repos",
    "events_url": "https://api.github.com/users/bentobox19/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bentobox19/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "bentobox19",
      "id": 85324266,
      "node_id": "MDQ6VXNlcjg1MzI0MjY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/85324266?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bentobox19",
      "html_url": "https://github.com/bentobox19",
      "followers_url": "https://api.github.com/users/bentobox19/followers",
      "following_url": "https://api.github.com/users/bentobox19/following{/other_user}",
      "gists_url": "https://api.github.com/users/bentobox19/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bentobox19/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bentobox19/subscriptions",
      "organizations_url": "https://api.github.com/users/bentobox19/orgs",
      "repos_url": "https://api.github.com/users/bentobox19/repos",
      "events_url": "https://api.github.com/users/bentobox19/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bentobox19/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/milestones/1",
    "html_url": "https://github.com/foundry-rs/foundry/milestone/1",
    "labels_url": "https://api.github.com/repos/foundry-rs/foundry/milestones/1/labels",
    "id": 8140456,
    "node_id": "MI_kwDOGBlvNc4AfDao",
    "number": 1,
    "title": "v1.0.0",
    "description": "",
    "creator": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 10,
    "closed_issues": 125,
    "state": "open",
    "created_at": "2022-06-28T08:15:32Z",
    "updated_at": "2023-05-12T14:44:03Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 8,
  "created_at": "2022-01-22T19:50:43Z",
  "updated_at": "2022-07-06T18:49:10Z",
  "closed_at": "2022-07-06T18:49:10Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I'm looking at updating https://github.com/optionality/clone-factory and testing it with forge. \r\n\r\nOne of the functions does the following, and emits an event with the clone address (vs returning it)\r\n\r\n```solidity\r\n    function createThing(string memory _name, uint256 _value) public {\r\n        address clone = createClone(libraryAddress);\r\n        Thing(clone).init(_name, _value);\r\n        emit ThingCreated(clone, libraryAddress);\r\n    }\r\n```\r\n\r\nthe tests then pick up this address by doing\r\n\r\n```js\r\n _factory.createThing(name, value)\r\n          .then(tx => {\r\n            return Thing.at(tx.logs[0].args.newThingAddress);\r\n          })\r\n```\r\nIs there a similar way to get the logged / emitted events and their arguments in forge?\r\n",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/543/reactions",
    "total_count": 4,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/543/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1019370145",
    "html_url": "https://github.com/foundry-rs/foundry/issues/543#issuecomment-1019370145",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/543",
    "id": 1019370145,
    "node_id": "IC_kwDOGBlvNc48wlqh",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-22T22:36:24Z",
    "updated_at": "2022-01-22T22:36:24Z",
    "author_association": "MEMBER",
    "body": "That's not currently possible but it would definitely make sense to explore a cheatcode like that. Ergonomics wise it probably wouldn't be very good since you would need to do some manual `abi.decode` calls etc.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1019370145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1019464630",
    "html_url": "https://github.com/foundry-rs/foundry/issues/543#issuecomment-1019464630",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/543",
    "id": 1019464630,
    "node_id": "IC_kwDOGBlvNc48w8u2",
    "user": {
      "login": "fubhy",
      "id": 1172528,
      "node_id": "MDQ6VXNlcjExNzI1Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1172528?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fubhy",
      "html_url": "https://github.com/fubhy",
      "followers_url": "https://api.github.com/users/fubhy/followers",
      "following_url": "https://api.github.com/users/fubhy/following{/other_user}",
      "gists_url": "https://api.github.com/users/fubhy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fubhy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fubhy/subscriptions",
      "organizations_url": "https://api.github.com/users/fubhy/orgs",
      "repos_url": "https://api.github.com/users/fubhy/repos",
      "events_url": "https://api.github.com/users/fubhy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fubhy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-23T11:28:30Z",
    "updated_at": "2022-01-23T11:28:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just ran into a case like that too. This is also slightly related to what's been discussed in https://github.com/gakonst/foundry/issues/512 as extracting parameters from loosely matched events could also be a reasonable solution for that one.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1019464630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1019510832",
    "html_url": "https://github.com/foundry-rs/foundry/issues/543#issuecomment-1019510832",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/543",
    "id": 1019510832,
    "node_id": "IC_kwDOGBlvNc48xIAw",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-23T15:44:21Z",
    "updated_at": "2022-01-23T15:44:21Z",
    "author_association": "COLLABORATOR",
    "body": "I agree this we should have log functionality like this, though like @onbjerg mentioned UX will be probably be pretty gross unless we implement solidity pre-processing first\r\n\r\nOne note is that in this specific use case you can precaclulate the expected address, then assert there's code at the address after the `createThing` call. If you use `create2` you can do this now, if you use `create` you'd need #554 to be implemented first ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1019510832/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1020095755",
    "html_url": "https://github.com/foundry-rs/foundry/issues/543#issuecomment-1020095755",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/543",
    "id": 1020095755,
    "node_id": "IC_kwDOGBlvNc48zW0L",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-24T13:22:11Z",
    "updated_at": "2022-01-24T13:23:24Z",
    "author_association": "MEMBER",
    "body": "In this use case, I'd manually calculate the create2/create address via their corresponding algos using from/nonce/salt/bytecode hash.\r\n\r\nMore generally, similar to how we record accessed storage slots, should we add a `captureLogs` and `getLogs` cheatcode perhaps? Not sure what the ideal UX here would be, cc @brockelmore, and nice abi decoding automatically seems hard",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1020095755/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169037413",
    "html_url": "https://github.com/foundry-rs/foundry/issues/543#issuecomment-1169037413",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/543",
    "id": 1169037413,
    "node_id": "IC_kwDOGBlvNc5Frhhl",
    "user": {
      "login": "bentobox19",
      "id": 85324266,
      "node_id": "MDQ6VXNlcjg1MzI0MjY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/85324266?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bentobox19",
      "html_url": "https://github.com/bentobox19",
      "followers_url": "https://api.github.com/users/bentobox19/followers",
      "following_url": "https://api.github.com/users/bentobox19/following{/other_user}",
      "gists_url": "https://api.github.com/users/bentobox19/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bentobox19/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bentobox19/subscriptions",
      "organizations_url": "https://api.github.com/users/bentobox19/orgs",
      "repos_url": "https://api.github.com/users/bentobox19/repos",
      "events_url": "https://api.github.com/users/bentobox19/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bentobox19/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-28T17:47:55Z",
    "updated_at": "2022-06-28T17:47:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is this in the roadmap somewhere? I was porting some [Ethernaut](https://ethernaut.openzeppelin.com/), and while you can modify the contract `Ethernaut.sol` to return you the values instead of emitting an event, would be great to have a cheat code capturing that info for you.\r\n\r\nI have 3 days of experience with forge 😅, @gakonst is talking above of some gotchas on implementing this, however I see that the logs are outputted at the traces.:\r\n\r\n<img width=\"854\" alt=\"Screen Shot 2022-06-28 at 13 46 10\" src=\"https://user-images.githubusercontent.com/85324266/176248780-acadf55c-21c8-47a1-b0c4-5590547d0b5b.png\">\r\n\r\nAnyways, I'm happy to brush up my rust skills and implement this cheat code if it is in the roadmap. Where should I go? Who should I talk to?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169037413/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169039385",
    "html_url": "https://github.com/foundry-rs/foundry/issues/543#issuecomment-1169039385",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/543",
    "id": 1169039385,
    "node_id": "IC_kwDOGBlvNc5FriAZ",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-28T17:49:56Z",
    "updated_at": "2022-06-28T17:49:56Z",
    "author_association": "MEMBER",
    "body": "You can use `expectEmit` for now, but yeah, we plan to add this at some point",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1169039385/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1170130785",
    "html_url": "https://github.com/foundry-rs/foundry/issues/543#issuecomment-1170130785",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/543",
    "id": 1170130785,
    "node_id": "IC_kwDOGBlvNc5Fvsdh",
    "user": {
      "login": "bentobox19",
      "id": 85324266,
      "node_id": "MDQ6VXNlcjg1MzI0MjY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/85324266?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bentobox19",
      "html_url": "https://github.com/bentobox19",
      "followers_url": "https://api.github.com/users/bentobox19/followers",
      "following_url": "https://api.github.com/users/bentobox19/following{/other_user}",
      "gists_url": "https://api.github.com/users/bentobox19/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bentobox19/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bentobox19/subscriptions",
      "organizations_url": "https://api.github.com/users/bentobox19/orgs",
      "repos_url": "https://api.github.com/users/bentobox19/repos",
      "events_url": "https://api.github.com/users/bentobox19/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bentobox19/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-29T15:33:11Z",
    "updated_at": "2022-06-29T15:33:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Started work on implementing `vm.captureLogs` \r\n\r\nhttps://github.com/bentobox19/foundry/commits/feature/capture-logs\r\n\r\nI'd like to set a draft PR in this repository",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1170130785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1170263852",
    "html_url": "https://github.com/foundry-rs/foundry/issues/543#issuecomment-1170263852",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/543",
    "id": 1170263852,
    "node_id": "IC_kwDOGBlvNc5FwM8s",
    "user": {
      "login": "bentobox19",
      "id": 85324266,
      "node_id": "MDQ6VXNlcjg1MzI0MjY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/85324266?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bentobox19",
      "html_url": "https://github.com/bentobox19",
      "followers_url": "https://api.github.com/users/bentobox19/followers",
      "following_url": "https://api.github.com/users/bentobox19/following{/other_user}",
      "gists_url": "https://api.github.com/users/bentobox19/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bentobox19/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bentobox19/subscriptions",
      "organizations_url": "https://api.github.com/users/bentobox19/orgs",
      "repos_url": "https://api.github.com/users/bentobox19/repos",
      "events_url": "https://api.github.com/users/bentobox19/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bentobox19/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-29T17:21:46Z",
    "updated_at": "2022-06-29T19:39:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Alright, just started a draft PR. Hope I can squeeze the hours to get it done 😅\r\n\r\nhttps://github.com/foundry-rs/foundry/pull/2161",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1170263852/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
