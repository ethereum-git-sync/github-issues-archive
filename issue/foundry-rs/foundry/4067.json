{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4067",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4067/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4067/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4067/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4067",
  "id": 1528916427,
  "node_id": "I_kwDOGBlvNc5bIWnL",
  "number": 4067,
  "title": "Foundry treats only 0x01 as true, instead of all non-zero values",
  "user": {
    "login": "lmanini",
    "id": 58728166,
    "node_id": "MDQ6VXNlcjU4NzI4MTY2",
    "avatar_url": "https://avatars.githubusercontent.com/u/58728166?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lmanini",
    "html_url": "https://github.com/lmanini",
    "followers_url": "https://api.github.com/users/lmanini/followers",
    "following_url": "https://api.github.com/users/lmanini/following{/other_user}",
    "gists_url": "https://api.github.com/users/lmanini/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lmanini/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lmanini/subscriptions",
    "organizations_url": "https://api.github.com/users/lmanini/orgs",
    "repos_url": "https://api.github.com/users/lmanini/repos",
    "events_url": "https://api.github.com/users/lmanini/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lmanini/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-01-11T12:03:24Z",
  "updated_at": "2023-01-12T10:20:04Z",
  "closed_at": "2023-01-12T10:20:04Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge, Chisel\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (2ff9902 2023-01-11T00:10:20.160113215Z)\n\n### What command(s) is the bug in?\n\nforge test\n\n### Operating System\n\nLinux\n\n### Describe the bug\n\nWhen returning a boolean in yul, the underlying VM treats only 0x01 as a true value instead of all non zero values, which is different behaviour from that shown by Remix IDE.\r\n\r\nFollowing is an image showing how 0x02 is treated as false. The same `getBool()` function, when called on Remix with value = 2 returns true\r\n\r\n![image](https://user-images.githubusercontent.com/58728166/211800779-53e526f3-74f1-4b2c-a39b-5f437372dd0e.png)\r\n",
  "closed_by": {
    "login": "lmanini",
    "id": 58728166,
    "node_id": "MDQ6VXNlcjU4NzI4MTY2",
    "avatar_url": "https://avatars.githubusercontent.com/u/58728166?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lmanini",
    "html_url": "https://github.com/lmanini",
    "followers_url": "https://api.github.com/users/lmanini/followers",
    "following_url": "https://api.github.com/users/lmanini/following{/other_user}",
    "gists_url": "https://api.github.com/users/lmanini/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lmanini/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lmanini/subscriptions",
    "organizations_url": "https://api.github.com/users/lmanini/orgs",
    "repos_url": "https://api.github.com/users/lmanini/repos",
    "events_url": "https://api.github.com/users/lmanini/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lmanini/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4067/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4067/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1378688658",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4067#issuecomment-1378688658",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4067",
    "id": 1378688658,
    "node_id": "IC_kwDOGBlvNc5SLR6S",
    "user": {
      "login": "DaniPopes",
      "id": 57450786,
      "node_id": "MDQ6VXNlcjU3NDUwNzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/57450786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DaniPopes",
      "html_url": "https://github.com/DaniPopes",
      "followers_url": "https://api.github.com/users/DaniPopes/followers",
      "following_url": "https://api.github.com/users/DaniPopes/following{/other_user}",
      "gists_url": "https://api.github.com/users/DaniPopes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DaniPopes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DaniPopes/subscriptions",
      "organizations_url": "https://api.github.com/users/DaniPopes/orgs",
      "repos_url": "https://api.github.com/users/DaniPopes/repos",
      "events_url": "https://api.github.com/users/DaniPopes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DaniPopes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-11T12:38:42Z",
    "updated_at": "2023-01-11T12:47:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's not that the returned value isn't interpreted as true, it's that the instructions, automatically generated by Solidity, that check the return value expect either a 0 or a 1, and reverts on all other values. If you enable traces you can see that the function returns the value correctly but it reverts after that, and not with the \"assert\" revert message.\r\n\r\nYou'd have to try this snippet on Remix:\r\n\r\n```solidity\r\npragma solidity ^0.8.0;\r\n\r\ncontract Bools {\r\n    function getBool(uint256 x) external pure returns (bool) {\r\n        assembly {\r\n            mstore(0x00, x)\r\n            return(0x00, 0x20)\r\n        }\r\n    }\r\n\r\n    function getBoolExt(uint256 x) external view returns(bool) {\r\n        return this.getBool(x);\r\n    }\r\n}\r\n```\r\n\r\nIf you call `getBoolExt(x)`, which will create a new EVM call context, with any value other than 0 or 1 it will revert with no message, AKA \"Reason: EVMError: Revert\"\r\n\r\nif you call `getBool(x)` from outside the EVM (remix call button) it will not revert because the part that reverts is the return value check",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1378688658/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1378809657",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4067#issuecomment-1378809657",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4067",
    "id": 1378809657,
    "node_id": "IC_kwDOGBlvNc5SLvc5",
    "user": {
      "login": "rakita",
      "id": 13179220,
      "node_id": "MDQ6VXNlcjEzMTc5MjIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/13179220?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rakita",
      "html_url": "https://github.com/rakita",
      "followers_url": "https://api.github.com/users/rakita/followers",
      "following_url": "https://api.github.com/users/rakita/following{/other_user}",
      "gists_url": "https://api.github.com/users/rakita/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rakita/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rakita/subscriptions",
      "organizations_url": "https://api.github.com/users/rakita/orgs",
      "repos_url": "https://api.github.com/users/rakita/repos",
      "events_url": "https://api.github.com/users/rakita/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rakita/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-11T14:10:02Z",
    "updated_at": "2023-01-11T14:10:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "So solidity is strict and \"bool\" must be 0 or 1 or it will revert if it is not, and this check is not done in `pure` functions but the outside of it. fun times",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1378809657/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380108684",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4067#issuecomment-1380108684",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4067",
    "id": 1380108684,
    "node_id": "IC_kwDOGBlvNc5SQsmM",
    "user": {
      "login": "lmanini",
      "id": 58728166,
      "node_id": "MDQ6VXNlcjU4NzI4MTY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/58728166?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmanini",
      "html_url": "https://github.com/lmanini",
      "followers_url": "https://api.github.com/users/lmanini/followers",
      "following_url": "https://api.github.com/users/lmanini/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmanini/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmanini/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmanini/subscriptions",
      "organizations_url": "https://api.github.com/users/lmanini/orgs",
      "repos_url": "https://api.github.com/users/lmanini/repos",
      "events_url": "https://api.github.com/users/lmanini/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmanini/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-12T10:20:03Z",
    "updated_at": "2023-01-12T10:20:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "thank you for the explainer @DaniPopes - didn't know the return value check was so restrictive.\r\nalthough, such a restrictive check doesn't seem very logical to me..",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1380108684/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
