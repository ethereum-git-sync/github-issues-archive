{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4318",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4318/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4318/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4318/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4318",
  "id": 1578287643,
  "node_id": "I_kwDOGBlvNc5eEsIb",
  "number": 4318,
  "title": "False negatives in property-based tests",
  "user": {
    "login": "pcaversaccio",
    "id": 25297591,
    "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pcaversaccio",
    "html_url": "https://github.com/pcaversaccio",
    "followers_url": "https://api.github.com/users/pcaversaccio/followers",
    "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
    "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
    "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
    "repos_url": "https://api.github.com/users/pcaversaccio/repos",
    "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3394554570,
      "node_id": "LA_kwDOGBlvNc7KVMrK",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-fuzzing",
      "name": "A-fuzzing",
      "color": "FBCA04",
      "default": false,
      "description": "Area: fuzzing"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-02-09T17:17:38Z",
  "updated_at": "2023-04-18T16:42:11Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (b454567 2023-02-06T00:29:35.2383332Z)\n\n### What command(s) is the bug in?\n\nforge test\n\n### Operating System\n\nLinux\n\n### Describe the bug\n\nI realised that within a forge test run, sometimes addresses are fuzzed which are very unfortunate choices and it's getting complicated to always `assume` the right params. In order to reproduce what I exactly mean, let's have a look at the following run: https://github.com/pcaversaccio/snekmate/actions/runs/4134068222/jobs/7144742870\r\n\r\nThis one fails with the following error:\r\n\r\n```bash\r\n[FAIL. Reason: Call did not revert as expected Counterexample: calldata=0xa32994070000000000000000000000002e234dae75c793f67a35089c9d99245e1c58470b00000000000000000000000000000000000000000000000000000000000041600000000000000000000000000000000000000000000000000000000000001e190000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000009c9, args=[0x2e234DAe75C793f67A35089C9d99245E1C58470b, 0x0000000000000000000000000000000000004160, 0x0000000000000000000000000000000000001e19, 0x00000000000000000000000000000000000000000000000000000000000009c9]] testFuzzSafeTransferFromWithData(address,address,address,bytes) (runs: 58, Î¼: 1456762, ~: 1457262)\r\n```\r\n\r\nSo the problem here is the input address `0x2e234DAe75C793f67A35089C9d99245E1C58470b` is unfortunately the same as the `erc721ReceiverMock` I create in the test:\r\n\r\n```\r\nERC721ReceiverMock erc721ReceiverMock = new ERC721ReceiverMock(\r\n    receiverMagicValue,\r\n    ERC721ReceiverMock.Error.None\r\n);\r\n```\r\n\r\nAfter re-running the test everything passes as intended: https://github.com/pcaversaccio/snekmate/actions/runs/4134068222.\r\n\r\nAlso, I started using things like the following since sometimes it fuzzes also the test contracts etc.:\r\n\r\n```solidity\r\nvm.assume(account.code.length == 0);\r\n```\r\n\r\nMy question I would like to discuss is, whether other face similar problems & what can be done to fine-tune it. For instance, having a sort of modifier that ensures that any fuzzed addresses within a test function should not equal any created contract addresses within the test function would already help a lot.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4318/reactions",
    "total_count": 5,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4318/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1485694455",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4318#issuecomment-1485694455",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4318",
    "id": 1485694455,
    "node_id": "IC_kwDOGBlvNc5YjeX3",
    "user": {
      "login": "wirew0lf",
      "id": 11537225,
      "node_id": "MDQ6VXNlcjExNTM3MjI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/11537225?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wirew0lf",
      "html_url": "https://github.com/wirew0lf",
      "followers_url": "https://api.github.com/users/wirew0lf/followers",
      "following_url": "https://api.github.com/users/wirew0lf/following{/other_user}",
      "gists_url": "https://api.github.com/users/wirew0lf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wirew0lf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wirew0lf/subscriptions",
      "organizations_url": "https://api.github.com/users/wirew0lf/orgs",
      "repos_url": "https://api.github.com/users/wirew0lf/repos",
      "events_url": "https://api.github.com/users/wirew0lf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wirew0lf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-27T18:49:31Z",
    "updated_at": "2023-03-27T18:49:31Z",
    "author_association": "NONE",
    "body": "Came across this issue, by deafault I've seen foundry tends to use addresses of contracts defined in the setUp() function as msg.sender in invariant testing. As a workaround I've been excluding them with the excludeSender() function.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1485694455/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1512730871",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4318#issuecomment-1512730871",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4318",
    "id": 1512730871,
    "node_id": "IC_kwDOGBlvNc5aKnD3",
    "user": {
      "login": "alexroan",
      "id": 6523673,
      "node_id": "MDQ6VXNlcjY1MjM2NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6523673?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexroan",
      "html_url": "https://github.com/alexroan",
      "followers_url": "https://api.github.com/users/alexroan/followers",
      "following_url": "https://api.github.com/users/alexroan/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexroan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexroan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexroan/subscriptions",
      "organizations_url": "https://api.github.com/users/alexroan/orgs",
      "repos_url": "https://api.github.com/users/alexroan/repos",
      "events_url": "https://api.github.com/users/alexroan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexroan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-18T09:07:21Z",
    "updated_at": "2023-04-18T09:07:21Z",
    "author_association": "NONE",
    "body": "+1 on this issue.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1512730871/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1513484231",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4318#issuecomment-1513484231",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4318",
    "id": 1513484231,
    "node_id": "IC_kwDOGBlvNc5aNe_H",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-18T16:42:11Z",
    "updated_at": "2023-04-18T16:42:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "For the sake of history, our recent [Twitter discussion](https://twitter.com/alexroan/status/1648032184425381888) about this issue (check the different threads).",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1513484231/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
