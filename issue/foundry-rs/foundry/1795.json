{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1795",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1795/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1795/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1795/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1795",
  "id": 1254477838,
  "node_id": "I_kwDOGBlvNc5KxdAO",
  "number": 1795,
  "title": "Best in class Gas Reporting",
  "user": {
    "login": "w1nt3r-eth",
    "id": 93895766,
    "node_id": "U_kgDOBZi8Vg",
    "avatar_url": "https://avatars.githubusercontent.com/u/93895766?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/w1nt3r-eth",
    "html_url": "https://github.com/w1nt3r-eth",
    "followers_url": "https://api.github.com/users/w1nt3r-eth/followers",
    "following_url": "https://api.github.com/users/w1nt3r-eth/following{/other_user}",
    "gists_url": "https://api.github.com/users/w1nt3r-eth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/w1nt3r-eth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/w1nt3r-eth/subscriptions",
    "organizations_url": "https://api.github.com/users/w1nt3r-eth/orgs",
    "repos_url": "https://api.github.com/users/w1nt3r-eth/repos",
    "events_url": "https://api.github.com/users/w1nt3r-eth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/w1nt3r-eth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759773804,
      "node_id": "LA_kwDOGBlvNc7gGZhs",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-gas-snapshots",
      "name": "A-gas-snapshots",
      "color": "FBCA04",
      "default": false,
      "description": "Area: gas snapshotting/reporting"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-05-31T22:26:41Z",
  "updated_at": "2022-06-21T08:02:23Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nMake it easy for the Foundry users to identify & optimize gas usage of their contracts.\r\n\r\nCurrently, the gas is reported as a single number next to the test cases or function names.\r\n\r\n|inline|summary|\r\n|-|-|\r\n|<img width=\"825\" alt=\"image\" src=\"https://user-images.githubusercontent.com/93895766/171267747-775cecf8-6270-4637-a014-281366ab7247.png\">|<img width=\"825\" alt=\"image\" src=\"https://user-images.githubusercontent.com/93895766/171267840-6551c5c7-5b09-4c8e-88e5-4fa487dc1578.png\">|\r\n\r\n\r\nThis doesn't help new users understand what's taking up all the gas in the transaction. The lack of insights pushes users to adopt questionable hacks (e.g. `unchecked`) vs optimizing the heavy operations (like `SSTORE`).\r\n\r\nHere are a few ideas on how to improve gas reporting visuals:\r\n\r\n## Opcodes Histogram\r\n\r\nGroup every opcode executed in the transaction by the opcode itself (maybe `SSTORE`/`SLOAD` need flags like hot/cold) and plot the total cumulative gas consumption. Feels like this would be the easiest to implement as it only requires `debug_traceTransaction` and a hashmap.\r\n\r\nThe disadvantage here is that it's not obvious how to find the expensive operations in the contract without having a good idea of how Solidity & EVM work.\r\n\r\n![image](https://user-images.githubusercontent.com/93895766/171268206-f9842503-fb21-4962-abc8-e7fe2cd6fa66.png)\r\n\r\n## Flame Graph\r\n\r\nThis is a screenshot from Tenderly's gas profiler tool. It gives a good idea of which functions are contributing the most to gas consumption. Ideally, the lowest level should show heavy opcodes.\r\n\r\nThis probably requires an untrivial amount of work connecting gas usage to (obfuscated) function names.\r\n\r\n<img width=\"1045\" alt=\"image\" src=\"https://user-images.githubusercontent.com/93895766/171268822-eca72fc3-0ff3-4bb0-b998-61a82269ce9f.png\">\r\n\r\n## Export Systrace\r\n\r\nSystrace is commonly used to debug the performance of large & complicated systems. Its ecosystem has a bunch of tools for processing and visualizations, so if we could export a compatible JSON file we could get a lot of this functionality for free.\r\n\r\nThis is very advanced, but also very hard to use for a regular user.\r\n\r\n![image](https://user-images.githubusercontent.com/93895766/171293330-397b298e-c0a4-4dcc-8b87-104f85b8e183.png)\r\n\r\n\r\n## Compare Before & After\r\n\r\nA typical flow optimizing gas is to make a change and compare reports between previous and current runs. This is error-prone and fragile. We could store gas profiles in a temporary location and show if the numbers improved or got worse vs the last run.\r\n\r\nWith Opcodes Histogram or Flame Graph, we could use some color to highlight the differences in a very visual (and motivating) way.\r\n\r\n## Tenderly Integration\r\n\r\nTenderly has decent visualizations and tools, but getting it to work with hardhat is a lot of pain. Thinking of an ideal DX here, maybe passing a flag to `forge` command could send the tx (along with everything else needed, like source code) to Tenderly and print out a URL to view the trace.\r\n\n\n### Additional context\n\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1795/reactions",
    "total_count": 7,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 7,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1795/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1143607014",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1795#issuecomment-1143607014",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1795",
    "id": 1143607014,
    "node_id": "IC_kwDOGBlvNc5EKg7m",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-01T13:22:44Z",
    "updated_at": "2022-06-01T13:22:44Z",
    "author_association": "MEMBER",
    "body": "thanks for this write up.\r\n\r\nin order to support this, we need some kind of `Metrics/Diagnostic` type that keeps track of all the info. To some degree, this exists here\r\n\r\nhttps://github.com/foundry-rs/foundry/blob/master/forge/src/gas_report.rs\r\n\r\nto track this a bit more fine-grained we'd need a custom `revm::Inspector` I think. \r\n\r\nvisualizing this is then just additional work.\r\n\r\nref #1737 ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1143607014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1161400498",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1795#issuecomment-1161400498",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1795",
    "id": 1161400498,
    "node_id": "IC_kwDOGBlvNc5FOZCy",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-21T08:02:22Z",
    "updated_at": "2022-06-21T08:02:22Z",
    "author_association": "MEMBER",
    "body": "Ref https://github.com/foundry-rs/foundry/issues/137",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1161400498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
