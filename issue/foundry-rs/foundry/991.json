{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/991",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/991",
  "id": 1174315094,
  "node_id": "I_kwDOGBlvNc5F_qBW",
  "number": 991,
  "title": "feat: enable saving and loading of corpus for deterministic fuzzing",
  "user": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3394554570,
      "node_id": "LA_kwDOGBlvNc7KVMrK",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-fuzzing",
      "name": "A-fuzzing",
      "color": "FBCA04",
      "default": false,
      "description": "Area: fuzzing"
    },
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759719580,
      "node_id": "LA_kwDOGBlvNc7gGMSc",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-normal",
      "name": "P-normal",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: normal"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "Bind",
    "id": 4602930,
    "node_id": "MDQ6VXNlcjQ2MDI5MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4602930?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Bind",
    "html_url": "https://github.com/Bind",
    "followers_url": "https://api.github.com/users/Bind/followers",
    "following_url": "https://api.github.com/users/Bind/following{/other_user}",
    "gists_url": "https://api.github.com/users/Bind/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Bind/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Bind/subscriptions",
    "organizations_url": "https://api.github.com/users/Bind/orgs",
    "repos_url": "https://api.github.com/users/Bind/repos",
    "events_url": "https://api.github.com/users/Bind/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Bind/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "Bind",
      "id": 4602930,
      "node_id": "MDQ6VXNlcjQ2MDI5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4602930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bind",
      "html_url": "https://github.com/Bind",
      "followers_url": "https://api.github.com/users/Bind/followers",
      "following_url": "https://api.github.com/users/Bind/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bind/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bind/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bind/subscriptions",
      "organizations_url": "https://api.github.com/users/Bind/orgs",
      "repos_url": "https://api.github.com/users/Bind/repos",
      "events_url": "https://api.github.com/users/Bind/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bind/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2022-03-19T17:30:46Z",
  "updated_at": "2022-07-30T22:47:23Z",
  "closed_at": "2022-07-30T22:47:23Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nAdd `--save-corpus` and `--load-corpus <path>` options to allow replaying of an entire fuzz campaign. I think proptest has methods to facilitate this but need to double check. It would also be great if saving a corpus saves off all inputs used (as opposed to just rng seeds) so they can be inspected/analyzed\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/991/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1073596641",
    "html_url": "https://github.com/foundry-rs/foundry/issues/991#issuecomment-1073596641",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991",
    "id": 1073596641,
    "node_id": "IC_kwDOGBlvNc4__cjh",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-21T08:17:33Z",
    "updated_at": "2022-03-21T08:17:33Z",
    "author_association": "MEMBER",
    "body": "Can you expand a bit on what is meant by campaign and corpus for the uninitiated?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1073596641/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1073960503",
    "html_url": "https://github.com/foundry-rs/foundry/issues/991#issuecomment-1073960503",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991",
    "id": 1073960503,
    "node_id": "IC_kwDOGBlvNc5AA1Y3",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-21T14:22:21Z",
    "updated_at": "2022-03-21T14:22:21Z",
    "author_association": "COLLABORATOR",
    "body": "A fuzz campaign is a term that basically means “execution of the fuzzer test suite with the configured params” \r\n\r\nCorpus is a fuzzing term which refers to the set of inputs used by the fuzzer. More specifically it often (but not always) refers to the set of _interesting_ inputs, i.e. the set of inputs that maximizes coverage. I can see an argument the “save corpus” isn’t the right terminology given we don’t have code coverage, but I think it’s a good term here since it makes it clear what you’re saving.\r\n\r\nPinging @transmissions11 for thoughts here too",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1073960503/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1074716167",
    "html_url": "https://github.com/foundry-rs/foundry/issues/991#issuecomment-1074716167",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991",
    "id": 1074716167,
    "node_id": "IC_kwDOGBlvNc5ADt4H",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-22T04:33:41Z",
    "updated_at": "2022-03-22T04:33:41Z",
    "author_association": "MEMBER",
    "body": "Appreciate the clarification :smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1074716167/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1101041279",
    "html_url": "https://github.com/foundry-rs/foundry/issues/991#issuecomment-1101041279",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991",
    "id": 1101041279,
    "node_id": "IC_kwDOGBlvNc5BoI5_",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-18T02:50:08Z",
    "updated_at": "2022-04-18T02:50:08Z",
    "author_association": "COLLABORATOR",
    "body": "As part of this, it would also be great if failed fuzz runs were always saved off as `corpus-latest.json` (or whatever name/file type makes sense). That file would continually get overwritten with each new run resulting in test failures, but it's useful to simplify the process of re-executing failed runs. If you choose to keep the failed fuzz run calldata (or rng seed, however it works with proptest), you can simply rename the file ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1101041279/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1105237293",
    "html_url": "https://github.com/foundry-rs/foundry/issues/991#issuecomment-1105237293",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991",
    "id": 1105237293,
    "node_id": "IC_kwDOGBlvNc5B4JUt",
    "user": {
      "login": "Bind",
      "id": 4602930,
      "node_id": "MDQ6VXNlcjQ2MDI5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4602930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bind",
      "html_url": "https://github.com/Bind",
      "followers_url": "https://api.github.com/users/Bind/followers",
      "following_url": "https://api.github.com/users/Bind/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bind/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bind/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bind/subscriptions",
      "organizations_url": "https://api.github.com/users/Bind/orgs",
      "repos_url": "https://api.github.com/users/Bind/repos",
      "events_url": "https://api.github.com/users/Bind/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bind/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-21T13:51:04Z",
    "updated_at": "2022-04-21T13:51:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there a preferred format for the corpus json files?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1105237293/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1105284903",
    "html_url": "https://github.com/foundry-rs/foundry/issues/991#issuecomment-1105284903",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991",
    "id": 1105284903,
    "node_id": "IC_kwDOGBlvNc5B4U8n",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-21T14:23:20Z",
    "updated_at": "2022-04-21T14:23:20Z",
    "author_association": "COLLABORATOR",
    "body": "I don't think so. If proptest has a default format it uses to save/load the data that should be fine, but I'll let @gakonst confirm to make sure there's nothing I'm missing",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1105284903/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107308850",
    "html_url": "https://github.com/foundry-rs/foundry/issues/991#issuecomment-1107308850",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991",
    "id": 1107308850,
    "node_id": "IC_kwDOGBlvNc5CADEy",
    "user": {
      "login": "Bind",
      "id": 4602930,
      "node_id": "MDQ6VXNlcjQ2MDI5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4602930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bind",
      "html_url": "https://github.com/Bind",
      "followers_url": "https://api.github.com/users/Bind/followers",
      "following_url": "https://api.github.com/users/Bind/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bind/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bind/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bind/subscriptions",
      "organizations_url": "https://api.github.com/users/Bind/orgs",
      "repos_url": "https://api.github.com/users/Bind/repos",
      "events_url": "https://api.github.com/users/Bind/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bind/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T02:39:28Z",
    "updated_at": "2022-04-23T02:40:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi hi, I did some preliminary digging into `proptest` and friends, a couple thoughts. \r\n- [FailurePersistance](https://docs.rs/proptest/latest/proptest/test_runner/enum.FileFailurePersistence.html) is easily configurable, looks like the existing test runner config instantiations explicitly set FailurePersistence to None. Is that done for a specific reason? \r\n- [RNG seeds](https://docs.rs/proptest/latest/proptest/test_runner/struct.TestRng.html) could be easily `save`d and `load`ed. \r\n- [ResultCache](https://docs.rs/proptest/latest/proptest/test_runner/trait.ResultCache.html) seems straight forward depending on what additional context we'd want to include in the corpus file.\r\n- We might want to tweak the cli opts to reflect its the seed rather then corpus file contents driving the fuzzing campaign, but I'm down for whatever. \r\n\r\nThere is a bit of chatter about #1359 but since this should ultimately manage/interact with the fuzzer rather than solidity-land they shouldn't overlap.\r\n   \r\nWill take a whack at this soooooon",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107308850/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107513731",
    "html_url": "https://github.com/foundry-rs/foundry/issues/991#issuecomment-1107513731",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991",
    "id": 1107513731,
    "node_id": "IC_kwDOGBlvNc5CA1GD",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T14:39:19Z",
    "updated_at": "2022-04-23T14:39:19Z",
    "author_association": "COLLABORATOR",
    "body": "Thanks for looking into this, very excited for this feature!\r\n\r\n> [FailurePersistance](https://docs.rs/proptest/latest/proptest/test_runner/enum.FileFailurePersistence.html) is easily configurable, looks like the existing test runner config instantiations explicitly set FailurePersistence to None. Is that done for a specific reason?\r\n\r\nNone that I'm aware of. I'm guessing we just never set it up so used `None` by defaut. Seems we want to use the `Direct` option and pass a file path, and then by default failed fuzz runs can be saved off? And ideally replayed?\r\n\r\nWhich brings up the question—where should the output files be saved? I think the best approach may be:\r\n- Save them to `out/fuzz/` by default.\r\n- If you want to keep the files, move them somewhere else.\r\n- By default this means the files are gitignored and deleted as part of `forge clean`\r\n- A flag in the config file can be used to change this directory\r\n\r\n> [RNG seeds](https://docs.rs/proptest/latest/proptest/test_runner/struct.TestRng.html) could be easily `save`d and `load`ed.\r\n\r\nThis seems like a nice option to expose in the config to allow deterministic fuzz runs by specifying a seed. We can probably just expose the `seed` and avoid exposing the `algorithm` and just keep using proptest's default for now.\r\n\r\nHow exactly would the seed be used by foundry? Specifically what I'm trying to get at is if the randomness is isolated per test, i.e. if I keep the seed constant, then add/remove tests, will each unchanged test still have the same inputs? Ideal answer is yes.\r\n\r\n> [ResultCache](https://docs.rs/proptest/latest/proptest/test_runner/trait.ResultCache.html) seems straight forward depending on what additional context we'd want to include in the corpus file.\r\n\r\nHow does this work / what exactly would get cached here? Guessing it's the full set of inputs to each fuzz method, as well as pass/fail result for each input?\r\n\r\n> We might want to tweak the cli opts to reflect its the seed rather then corpus file contents driving the fuzzing campaign, but I'm down for whatever.\r\n\r\nDepending on how the `ResultCache` works we may want both. Example behavior, open to suggestions:\r\n- `fuzz-path` defaults to `out/fuzz/` which is where outputs are saved/loaded from by default\r\n- `fuzz-input` takes either (1) an RNG seed, or (2) filename to replay, where file can either be a `FailurePersistence` file containing just a handful of runs, or a `ResultCache` containing a full campaign\r\n    - Alternatively we can split this up into `fuzz-seed` and `fuzz-input-file` with the latter taking precedence if specified\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107513731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107533935",
    "html_url": "https://github.com/foundry-rs/foundry/issues/991#issuecomment-1107533935",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991",
    "id": 1107533935,
    "node_id": "IC_kwDOGBlvNc5CA6Bv",
    "user": {
      "login": "Bind",
      "id": 4602930,
      "node_id": "MDQ6VXNlcjQ2MDI5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4602930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bind",
      "html_url": "https://github.com/Bind",
      "followers_url": "https://api.github.com/users/Bind/followers",
      "following_url": "https://api.github.com/users/Bind/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bind/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bind/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bind/subscriptions",
      "organizations_url": "https://api.github.com/users/Bind/orgs",
      "repos_url": "https://api.github.com/users/Bind/repos",
      "events_url": "https://api.github.com/users/Bind/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bind/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T16:55:47Z",
    "updated_at": "2022-05-14T19:02:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you for the additional clarification! Based on the above, my initial implementation should look something like...\r\n\r\n**RNG Seeding**\r\n- [x] Extend `foundry.toml` to have a `fuzz_seed` properties.\r\n- [x] Add `--fuzz-seed` option to `forge test`\r\n- [x] Use [new_with_rng](https://docs.rs/proptest/latest/proptest/test_runner/struct.TestRunner.html#method.new_with_rng) to instantiate `TestRunner` if a seed is configured.\r\n- [ ] Verify RNG strategy _always_ generates the same values per test.\r\n\r\n**Failure Persistence**\r\n- [ ] Enable `FailurePersistance` to `/cache/fuzz/failures-latest.json`.\r\n- [ ] Add `foundry.toml` flag to specify outdir.\r\n- [ ] Ensure `proptest` can use `FailurePersistance` to resume fuzz campaigns.\r\n- [ ] Add `--fuzz-input-file` to allow user to specify a `failures.json`\r\n\r\n**Corpus Saving & Replay** \r\n- [ ] Capture fuzz campaigns via `ResultCache` (Or some other mechanism TBD).\r\n- [ ] Persist fuzz campaigns to `/cache/fuzz/corpus-latest.json`.\r\n- [ ] Re-use `foundry.toml` flag to specify outdir.\r\n- [ ] Add a `replay` `proptest` strategy that is powered by a `corpus.json` file.\r\n- [ ] Extend `--fuzz-input-file` option to additionally take a `corpus.json` file & `forge test` to trigger `replay`.\r\n- [ ] Ensure `/cache/fuzz` is removed with `forge clean` .\r\n\r\nlmk if I'm missing anything or should take a different path, otherwise I'll start chipping away!\r\n(Updated as of 4/23 to incorporate below feedback)",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107533935/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107535666",
    "html_url": "https://github.com/foundry-rs/foundry/issues/991#issuecomment-1107535666",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991",
    "id": 1107535666,
    "node_id": "IC_kwDOGBlvNc5CA6cy",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T17:07:40Z",
    "updated_at": "2022-04-23T17:07:40Z",
    "author_association": "MEMBER",
    "body": "I think it would be better to place the failures etc. in `cache` instead, `out` is more user-centered (artifacts etc.), otherwise looks good to me",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107535666/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107659019",
    "html_url": "https://github.com/foundry-rs/foundry/issues/991#issuecomment-1107659019",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991",
    "id": 1107659019,
    "node_id": "IC_kwDOGBlvNc5CBYkL",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T22:27:01Z",
    "updated_at": "2022-04-23T22:27:01Z",
    "author_association": "COLLABORATOR",
    "body": "Overall this plan sounds great to me as well, no objections with defaulting to `cache` instead of `out`.\r\n\r\nThe \"RNG Seeding\", \"Failure Persistence\", and \"Corpus Saving and Replay\" sections seem isolated enough that it could be good to do them incrementally as smaller PRs to keep scope of each smaller (will leave it up to @Bind and @onbjerg to figure out what's best, just a thought).\r\n\r\n> Extend foundry.toml to have a `fuzz_seed` and `fuzz_seed_file` properties.\r\n\r\nOne question is what do we need both of these for? I'm not sure exactly how the seed would be specified, but if it's something simple like an integer, then an alternate file option may be unnecessary?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107659019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107659841",
    "html_url": "https://github.com/foundry-rs/foundry/issues/991#issuecomment-1107659841",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991",
    "id": 1107659841,
    "node_id": "IC_kwDOGBlvNc5CBYxB",
    "user": {
      "login": "Bind",
      "id": 4602930,
      "node_id": "MDQ6VXNlcjQ2MDI5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4602930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bind",
      "html_url": "https://github.com/Bind",
      "followers_url": "https://api.github.com/users/Bind/followers",
      "following_url": "https://api.github.com/users/Bind/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bind/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bind/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bind/subscriptions",
      "organizations_url": "https://api.github.com/users/Bind/orgs",
      "repos_url": "https://api.github.com/users/Bind/repos",
      "events_url": "https://api.github.com/users/Bind/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bind/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T22:35:29Z",
    "updated_at": "2022-04-23T22:35:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "\r\n> sections seem isolated enough that it could be good to do them incrementally as smaller PRs\r\n\r\nGood call, will do!\r\n\r\n>  I'm not sure exactly how the seed would be specified, but if it's something simple like an integer, then an alternate file option may be unnecessary?\r\n\r\nFair point, I'll implement the `fuzz_seed` option first and we can go from there!\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1107659841/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1125485657",
    "html_url": "https://github.com/foundry-rs/foundry/issues/991#issuecomment-1125485657",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991",
    "id": 1125485657,
    "node_id": "IC_kwDOGBlvNc5DFYxZ",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-12T22:46:41Z",
    "updated_at": "2022-05-12T22:46:41Z",
    "author_association": "MEMBER",
    "body": "@Bind curious if you had any follow up on the fuzz seed option?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1125485657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1125544891",
    "html_url": "https://github.com/foundry-rs/foundry/issues/991#issuecomment-1125544891",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991",
    "id": 1125544891,
    "node_id": "IC_kwDOGBlvNc5DFnO7",
    "user": {
      "login": "Bind",
      "id": 4602930,
      "node_id": "MDQ6VXNlcjQ2MDI5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4602930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bind",
      "html_url": "https://github.com/Bind",
      "followers_url": "https://api.github.com/users/Bind/followers",
      "following_url": "https://api.github.com/users/Bind/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bind/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bind/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bind/subscriptions",
      "organizations_url": "https://api.github.com/users/Bind/orgs",
      "repos_url": "https://api.github.com/users/Bind/repos",
      "events_url": "https://api.github.com/users/Bind/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bind/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-13T00:33:53Z",
    "updated_at": "2022-05-13T00:33:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry about the hold up! Getting back from some traveling tomorrow, will get RNG Seeding over the line in the next few days!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1125544891/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1130269529",
    "html_url": "https://github.com/foundry-rs/foundry/issues/991#issuecomment-1130269529",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/991",
    "id": 1130269529,
    "node_id": "IC_kwDOGBlvNc5DXotZ",
    "user": {
      "login": "Bind",
      "id": 4602930,
      "node_id": "MDQ6VXNlcjQ2MDI5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4602930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bind",
      "html_url": "https://github.com/Bind",
      "followers_url": "https://api.github.com/users/Bind/followers",
      "following_url": "https://api.github.com/users/Bind/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bind/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bind/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bind/subscriptions",
      "organizations_url": "https://api.github.com/users/Bind/orgs",
      "repos_url": "https://api.github.com/users/Bind/repos",
      "events_url": "https://api.github.com/users/Bind/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bind/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-18T17:09:06Z",
    "updated_at": "2022-05-18T17:09:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Didn't want this to drag for too long!  I opened a Draft PR with my implementation and some outstanding questions I have about the best path for testing this feature!",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1130269529/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
