{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2654",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2654/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2654/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2654/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2654",
  "id": 1331826420,
  "node_id": "I_kwDOGBlvNc5PYg70",
  "number": 2654,
  "title": "Forge resets storage var to 0 after self-destruct (before tx ends)",
  "user": {
    "login": "0xA5DF",
    "id": 108216601,
    "node_id": "U_kgDOBnNBGQ",
    "avatar_url": "https://avatars.githubusercontent.com/u/108216601?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0xA5DF",
    "html_url": "https://github.com/0xA5DF",
    "followers_url": "https://api.github.com/users/0xA5DF/followers",
    "following_url": "https://api.github.com/users/0xA5DF/following{/other_user}",
    "gists_url": "https://api.github.com/users/0xA5DF/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0xA5DF/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0xA5DF/subscriptions",
    "organizations_url": "https://api.github.com/users/0xA5DF/orgs",
    "repos_url": "https://api.github.com/users/0xA5DF/repos",
    "events_url": "https://api.github.com/users/0xA5DF/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0xA5DF/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/milestones/1",
    "html_url": "https://github.com/foundry-rs/foundry/milestone/1",
    "labels_url": "https://api.github.com/repos/foundry-rs/foundry/milestones/1/labels",
    "id": 8140456,
    "node_id": "MI_kwDOGBlvNc4AfDao",
    "number": 1,
    "title": "v1.0.0",
    "description": "",
    "creator": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 10,
    "closed_issues": 125,
    "state": "open",
    "created_at": "2022-06-28T08:15:32Z",
    "updated_at": "2023-05-12T14:44:03Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 9,
  "created_at": "2022-08-08T12:50:31Z",
  "updated_at": "2022-08-22T19:06:41Z",
  "closed_at": "2022-08-22T19:06:41Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (92f8951 2022-08-08T00:03:54.483346829Z)\n\n### What command(s) is the bug in?\n\nforge test\n\n### Operating System\n\nLinux\n\n### Describe the bug\n\nThe `selfdestruct` opcode shouldn't destroy the contract till the tx ends, that means that if in the same tx we call the contract again it should function with no difference.\r\n\r\nWhen running `forge test` on a contract that self-destroys (via delegate call) and then reads storage var `x`, the value of that var is zero instead of 5 (it shows both in the event emitted and in the return value).\r\n\r\nWhen running the same code on Rinkeby testnet, it indeed emits the value 5 ([here's the tx](https://rinkeby.etherscan.io/tx/0x26a0bc35c3259e6942fafdb85f2a49392a61c4f1722e4d534c0b1173d3d16806#eventlog) ).\r\n\r\n\r\nContract code (`contracts/Destruct.sol`):\r\n\r\n```solidity\r\n//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.0;\r\n\r\ncontract Destruct{\r\n    function destroyMe(address payable add) public{\r\n        selfdestruct(add);\r\n    }\r\n}\r\n\r\n\r\ncontract Proxy{\r\n    uint x = 5;\r\n    Destruct d = new Destruct();\r\n    event Log(uint x);\r\n\r\n    function runDestoryMe(address payable add) public returns(uint){\r\n        bytes memory data = abi.encodeWithSelector(Destruct.destroyMe.selector, add);\r\n        address(d).delegatecall(data);\r\n        emit Log(x);\r\n        return x;\r\n    }\r\n}\r\n```\r\n\r\nTest code:\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport \"forge-std/Test.sol\";\r\n\r\nimport \"../contracts/Destruct.sol\";\r\n\r\ncontract ContractTest is Test {\r\n    function setUp() public {}\r\n\r\n    function testExample() public {\r\n        Proxy p = new Proxy();\r\n        uint x = p.runDestoryMe(payable(address(this)));\r\n        assertEq(x, 5);\r\n    }\r\n}\r\n```\r\nCommand output\r\n```\r\n$ forge test -vvv                            \r\nwarning: Unknown section [default] found in foundry.toml. This notation for profiles has been deprecated and may result in the profile not being registered in future versions. Please use [profile.default] instead or run `forge config --fix`.\r\n[⠰] Compiling...\r\nNo files changed, compilation skipped\r\n\r\nRunning 1 test for test/Contract.t.sol:ContractTest\r\n[FAIL. Reason: Undefined.] testExample() (gas: 262851)\r\nLogs:\r\n  Error: a == b not satisfied [uint]\r\n    Expected: 5\r\n      Actual: 0\r\n\r\nTraces:\r\n  [262851] ContractTest::testExample() \r\n    ├─ [205839] → new Proxy@\"0xce71…c246\"\r\n    │   ├─ [34887] → new Destruct@\"0x037f…dd8f\"\r\n    │   │   └─ ← 174 bytes of code\r\n    │   └─ ← 472 bytes of code\r\n    ├─ [9582] Proxy::runDestoryMe(ContractTest: [0xb4c79dab8f259c7aee6e5b2aa729821864227e84]) \r\n    │   ├─ [5257] Destruct::destroyMe(ContractTest: [0xb4c79dab8f259c7aee6e5b2aa729821864227e84]) [delegatecall]\r\n    │   │   └─ ← ()\r\n    │   ├─ emit Log(x: 0)\r\n    │   └─ ← 0\r\n    ├─ emit log(: \"Error: a == b not satisfied [uint]\")\r\n    ├─ emit log_named_uint(key: \"  Expected\", val: 5)\r\n    ├─ emit log_named_uint(key: \"    Actual\", val: 0)\r\n    ├─ [0] VM::store(VM: [0x7109709ecfa91a80626ff3989d68f67f5b1dd12d], 0x6661696c65640000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000001) \r\n    │   └─ ← ()\r\n    └─ ← ()\r\n\r\nTest result: FAILED. 0 passed; 1 failed; finished in 378.13µs\r\n\r\nFailing tests:\r\nEncountered 1 failing test in test/Contract.t.sol:ContractTest\r\n[FAIL. Reason: Undefined.] testExample() (gas: 262851)\r\n\r\nEncountered a total of 1 failing tests, 0 tests succeeded\r\n```",
  "closed_by": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2654/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2654/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1208394962",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2654#issuecomment-1208394962",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2654",
    "id": 1208394962,
    "node_id": "IC_kwDOGBlvNc5IBqTS",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-08T17:19:05Z",
    "updated_at": "2022-08-08T17:19:05Z",
    "author_association": "MEMBER",
    "body": "This directly contradicts what has been observed in https://github.com/foundry-rs/foundry/issues/1543 so I'm not entirely sure what the behavior is",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1208394962/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1208430601",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2654#issuecomment-1208430601",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2654",
    "id": 1208430601,
    "node_id": "IC_kwDOGBlvNc5IBzAJ",
    "user": {
      "login": "0xA5DF",
      "id": 108216601,
      "node_id": "U_kgDOBnNBGQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/108216601?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xA5DF",
      "html_url": "https://github.com/0xA5DF",
      "followers_url": "https://api.github.com/users/0xA5DF/followers",
      "following_url": "https://api.github.com/users/0xA5DF/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xA5DF/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xA5DF/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xA5DF/subscriptions",
      "organizations_url": "https://api.github.com/users/0xA5DF/orgs",
      "repos_url": "https://api.github.com/users/0xA5DF/repos",
      "events_url": "https://api.github.com/users/0xA5DF/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xA5DF/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-08T17:54:58Z",
    "updated_at": "2022-08-08T17:54:58Z",
    "author_association": "NONE",
    "body": "I tested the other bug, and they both exists on my machine.\r\nIt seems like forge is resetting the storage, but not deleting the code of the contract. \r\n\r\nHere's the modified test code (also made `x` public in the contract code):\r\n\r\n```solidity\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport \"forge-std/Test.sol\";\r\nimport \"forge-std/console.sol\";\r\n\r\nimport \"../contracts/Destruct.sol\";\r\n\r\ncontract ContractTest is Test {\r\n    function setUp() public {}\r\n\r\n    function testExample() public {\r\n        Proxy p = new Proxy();\r\n        uint x = p.runDestoryMe(payable(address(this)));\r\n        uint32 pSize = getSize(address(p));\r\n        console.log(\"Proxy size is: \", pSize);\r\n        x = p.x();\r\n        console.log(\"p.x is: \",x);\r\n        assertEq(x, 5);\r\n    }\r\n\r\n    function getSize(address c) public view returns (uint32) {\r\n        uint32 size;\r\n        assembly {\r\n            size := extcodesize(c)\r\n        }\r\n        return size;\r\n    }\r\n}\r\n\r\n```\r\n\r\nAnd here's the output:\r\n```\r\n$ forge test -vv\r\nwarning: Unknown section [default] found in foundry.toml. This notation for profiles has been deprecated and may result in the profile not being registered in future versions. Please use [profile.default] instead or run `forge config --fix`.\r\n[⠰] Compiling...\r\nNo files changed, compilation skipped\r\n\r\nRunning 1 test for test/Contract.t.sol:ContractTest\r\n[FAIL. Reason: Undefined.] testExample() (gas: 270484)\r\nLogs:\r\n  Proxy size is:  487\r\n  p.x is:  0\r\n  Error: a == b not satisfied [uint]\r\n    Expected: 5\r\n      Actual: 0\r\n\r\nTest result: FAILED. 0 passed; 1 failed; finished in 671.49µs\r\n\r\nFailing tests:\r\nEncountered 1 failing test in test/Contract.t.sol:ContractTest\r\n[FAIL. Reason: Undefined.] testExample() (gas: 270484)\r\n\r\nEncountered a total of 1 failing tests, 0 tests succeeded\r\n\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1208430601/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1208441122",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2654#issuecomment-1208441122",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2654",
    "id": 1208441122,
    "node_id": "IC_kwDOGBlvNc5IB1ki",
    "user": {
      "login": "0xA5DF",
      "id": 108216601,
      "node_id": "U_kgDOBnNBGQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/108216601?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xA5DF",
      "html_url": "https://github.com/0xA5DF",
      "followers_url": "https://api.github.com/users/0xA5DF/followers",
      "following_url": "https://api.github.com/users/0xA5DF/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xA5DF/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xA5DF/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xA5DF/subscriptions",
      "organizations_url": "https://api.github.com/users/0xA5DF/orgs",
      "repos_url": "https://api.github.com/users/0xA5DF/repos",
      "events_url": "https://api.github.com/users/0xA5DF/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xA5DF/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-08T18:04:52Z",
    "updated_at": "2022-08-08T18:04:52Z",
    "author_association": "NONE",
    "body": "P.S.\r\nThe code also works fine, I've added the following function to the contract and it just returns the same value \r\n\r\n```solidity\r\n    function add(uint y) public returns(uint) {\r\n        return x+y;\r\n    }\r\n```\r\nThis test will output `added is:  30`:\r\n```solidity\r\n        Proxy p = new Proxy();\r\n        uint x = p.runDestoryMe(payable(address(this)));\r\n        uint32 pSize = getSize(address(p));\r\n        console.log(\"Proxy size is: \", pSize);\r\n        uint added = p.add(30);\r\n        console.log(\"added is: \",added);\r\n        x = p.x();\r\n        console.log(\"p.x is: \",x);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1208441122/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1212309778",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2654#issuecomment-1212309778",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2654",
    "id": 1212309778,
    "node_id": "IC_kwDOGBlvNc5IQmES",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-11T18:03:56Z",
    "updated_at": "2022-08-11T18:03:56Z",
    "author_association": "MEMBER",
    "body": "@rakita Storage seems to be reset before the transaction ends, but not the account code. Is this the intended behavior of `selfdestruct` according to spec?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1212309778/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1212572366",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2654#issuecomment-1212572366",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2654",
    "id": 1212572366,
    "node_id": "IC_kwDOGBlvNc5IRmLO",
    "user": {
      "login": "rakita",
      "id": 13179220,
      "node_id": "MDQ6VXNlcjEzMTc5MjIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/13179220?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rakita",
      "html_url": "https://github.com/rakita",
      "followers_url": "https://api.github.com/users/rakita/followers",
      "following_url": "https://api.github.com/users/rakita/following{/other_user}",
      "gists_url": "https://api.github.com/users/rakita/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rakita/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rakita/subscriptions",
      "organizations_url": "https://api.github.com/users/rakita/orgs",
      "repos_url": "https://api.github.com/users/rakita/repos",
      "events_url": "https://api.github.com/users/rakita/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rakita/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-11T22:56:13Z",
    "updated_at": "2022-08-11T22:56:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Account code needs to be reset with storage.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1212572366/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1212991082",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2654#issuecomment-1212991082",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2654",
    "id": 1212991082,
    "node_id": "IC_kwDOGBlvNc5ITMZq",
    "user": {
      "login": "0xA5DF",
      "id": 108216601,
      "node_id": "U_kgDOBnNBGQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/108216601?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xA5DF",
      "html_url": "https://github.com/0xA5DF",
      "followers_url": "https://api.github.com/users/0xA5DF/followers",
      "following_url": "https://api.github.com/users/0xA5DF/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xA5DF/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xA5DF/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xA5DF/subscriptions",
      "organizations_url": "https://api.github.com/users/0xA5DF/orgs",
      "repos_url": "https://api.github.com/users/0xA5DF/repos",
      "events_url": "https://api.github.com/users/0xA5DF/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xA5DF/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-12T11:03:45Z",
    "updated_at": "2022-08-12T11:03:45Z",
    "author_association": "NONE",
    "body": "They both should reset, but only once tx completes, beforehand it should still operate and have no change to storage.\r\n\r\n\r\n[Ethereum yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf) definition for `selfdestruct`:\r\n> Halt execution and register account for later deletion\r\n\r\nAnd on the 'Transaction Execution' section:\r\n> The final state, σ', is reached after deleting all accounts that either appear in the self-destruct set or are touched and empty.\r\n\r\n\r\nAlso, as said above, I've tested this on the [Rinkeby test chain](https://rinkeby.etherscan.io/tx/0x26a0bc35c3259e6942fafdb85f2a49392a61c4f1722e4d534c0b1173d3d16806#eventlog), and it shows that the storage hasn't changed between the `selfdestruct` to the end of the tx.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1212991082/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1213006405",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2654#issuecomment-1213006405",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2654",
    "id": 1213006405,
    "node_id": "IC_kwDOGBlvNc5ITQJF",
    "user": {
      "login": "rakita",
      "id": 13179220,
      "node_id": "MDQ6VXNlcjEzMTc5MjIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/13179220?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rakita",
      "html_url": "https://github.com/rakita",
      "followers_url": "https://api.github.com/users/rakita/followers",
      "following_url": "https://api.github.com/users/rakita/following{/other_user}",
      "gists_url": "https://api.github.com/users/rakita/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rakita/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rakita/subscriptions",
      "organizations_url": "https://api.github.com/users/rakita/orgs",
      "repos_url": "https://api.github.com/users/rakita/repos",
      "events_url": "https://api.github.com/users/rakita/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rakita/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-12T11:23:18Z",
    "updated_at": "2022-08-12T12:06:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "(before tx ends) i missed this. I am not 100% sure as selfdestruct logic is not that great, but I think you are right. I have one failing eth/tests (recently added) with selfdestruct that is probably related: https://github.com/bluealloy/revm/blob/0ae75553776071288d56852372c09bff7a6d268d/bins/revme/src/statetest/runner.rs#L96",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1213006405/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1216943954",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2654#issuecomment-1216943954",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2654",
    "id": 1216943954,
    "node_id": "IC_kwDOGBlvNc5IiRdS",
    "user": {
      "login": "rakita",
      "id": 13179220,
      "node_id": "MDQ6VXNlcjEzMTc5MjIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/13179220?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rakita",
      "html_url": "https://github.com/rakita",
      "followers_url": "https://api.github.com/users/rakita/followers",
      "following_url": "https://api.github.com/users/rakita/following{/other_user}",
      "gists_url": "https://api.github.com/users/rakita/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rakita/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rakita/subscriptions",
      "organizations_url": "https://api.github.com/users/rakita/orgs",
      "repos_url": "https://api.github.com/users/rakita/repos",
      "events_url": "https://api.github.com/users/rakita/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rakita/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-16T17:33:40Z",
    "updated_at": "2022-08-16T17:33:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@0xA5DF thank you for pointing this out!\r\n\r\nI rewrote that part of revm to simplify it and correct the wrong behaviour, in the first implementation I overthought things. It should be correct now. https://github.com/bluealloy/revm/commit/6d04a7f9856e0c05c3787ce57944380bfe1dc705\r\n\r\n@onbjerg integration should only be in the renaming of `subroutine` to `journaled_state` and you probably will need to integrate this return of `ExecutionResult`: https://github.com/bluealloy/revm/commit/0ae75553776071288d56852372c09bff7a6d268d\r\nI will **not** push a new release as I want to add some additional changes as in db returning `Result<Option<..` that we talked about.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1216943954/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1222795784",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2654#issuecomment-1222795784",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2654",
    "id": 1222795784,
    "node_id": "IC_kwDOGBlvNc5I4mII",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-22T19:06:41Z",
    "updated_at": "2022-08-22T19:06:41Z",
    "author_association": "MEMBER",
    "body": "closed via #2877",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1222795784/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
