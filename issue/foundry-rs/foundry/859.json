{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/859",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/859/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/859/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/859/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/859",
  "id": 1161912467,
  "node_id": "I_kwDOGBlvNc5FQWCT",
  "number": 859,
  "title": "feature: `forge inspect <file> <mode>` to dump various compiler output types to a file",
  "user": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759719580,
      "node_id": "LA_kwDOGBlvNc7gGMSc",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-normal",
      "name": "P-normal",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: normal"
    },
    {
      "id": 3759720552,
      "node_id": "LA_kwDOGBlvNc7gGMho",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/D-easy",
      "name": "D-easy",
      "color": "0E8A16",
      "default": false,
      "description": "Difficulty: easy"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-03-07T20:54:11Z",
  "updated_at": "2022-03-11T00:13:48Z",
  "closed_at": "2022-03-11T00:13:48Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nIt's often helpful to view the ir or assembly outputs from solc. To do this currently, you need to do something like this:\r\n\r\n```sh\r\n# re-compile with the correct flags enabled\r\nforge build --extra-output ir-optimized\r\n\r\n# extract the data, replace \\n characters with line breaks, and dump\r\n# to a .sol file for nice syntax highlighting\r\ncat ./out/<file>.sol/<contract>.json | jq -r .ir | perl -pe 's/\\\\n/\\n/g' > ir.sol\r\n```\r\n\r\nIn my opinion this is a useful enough workflow that it would be nice to have a `forge inspect <file> <mode>` command (h/t @alexeuler for the name) to simplify this flow. The first input would be name of the contract you want to inspect, and the second would be the compiler flag of interest. For example, `forge inspect MyContract ir-optimized` would compile just MyContract with the specified flag, extract it from the JSON output, and print it to stdout. To save the info to a file you can just redirect the output as normal, e.g. `forge inspect MyContract ir-optimized > ir.sol`\r\n\r\nIn this issue I'd like to (1) confirm this is a feature that would be supported, and (2) get thoughts feedback on the proposed syntax and workflow\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/859/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/859/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1061132859",
    "html_url": "https://github.com/foundry-rs/foundry/issues/859#issuecomment-1061132859",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/859",
    "id": 1061132859,
    "node_id": "IC_kwDOGBlvNc4_P5o7",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-07T21:02:24Z",
    "updated_at": "2022-03-07T21:02:24Z",
    "author_association": "MEMBER",
    "body": "Marking this as easy as it is just building without dumping the artifacts to disk using the new parameters which should be relatively simple (I think?).\r\n\r\nAs a side note, we should probably check the disk artifacts first to see if the info is available before we start building",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1061132859/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
