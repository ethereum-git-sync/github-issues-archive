{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/2106",
  "id": 1283064290,
  "node_id": "I_kwDOGBlvNc5MegHi",
  "number": 2106,
  "title": "Stack Overflow in forge test",
  "user": {
    "login": "maurelian",
    "id": 23033765,
    "node_id": "MDQ6VXNlcjIzMDMzNzY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maurelian",
    "html_url": "https://github.com/maurelian",
    "followers_url": "https://api.github.com/users/maurelian/followers",
    "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
    "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
    "organizations_url": "https://api.github.com/users/maurelian/orgs",
    "repos_url": "https://api.github.com/users/maurelian/repos",
    "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maurelian/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3759719790,
      "node_id": "LA_kwDOGBlvNc7gGMVu",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/P-low",
      "name": "P-low",
      "color": "D93F0B",
      "default": false,
      "description": "Priority: low"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2022-06-23T23:22:11Z",
  "updated_at": "2022-06-28T06:46:28Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [x] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (9b2d95d 2022-06-23T00:22:22.617534Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nforge test\r\n\r\n### Operating System\r\n\r\nmacOS (Apple Silicon)\r\n\r\n### Describe the bug\r\n\r\nIt seems our test suite has just reach some threshold that causes a stack overflow. \r\n\r\n**Repro steps:**\r\n\r\n(I tested these on a fresh clone)\r\n\r\n```\r\ngit clone https://github.com/ethereum-optimism/optimism\r\ncd optimism/packages/contracts-bedrock\r\nyarn         # to install contract deps\r\nforge test   # this will work fine\r\n\r\ngit checkout 093244521b1f0f9489cd573ad66c3c317d7ecea4\r\nforge test\r\n```\r\nThe output of the final test on will terminate with:\r\n\r\n```\r\n\r\nthread '<unknown>' has overflowed its stack\r\nfatal runtime error: stack overflow\r\n[1]    62889 abort      forge test\r\n```\r\n\r\nThe same bug is visible in this CI output: https://app.circleci.com/pipelines/github/ethereum-optimism/optimism/3503/workflows/19bb9e25-731e-4dcf-9fc2-9edfb8b928a7/jobs/45876/parallel-runs/0/steps/0-105\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1165550820",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2106#issuecomment-1165550820",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106",
    "id": 1165550820,
    "node_id": "IC_kwDOGBlvNc5FeOTk",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T12:59:25Z",
    "updated_at": "2022-06-24T12:59:25Z",
    "author_association": "MEMBER",
    "body": "git checkout 093244521b1f0f9489cd573ad66c3c317d7ecea4\r\n\r\ngives me \r\n\r\nfatal: reference is not a tree: 093244521b1f0f9489cd573ad66c3c317d7ecea4\r\n\r\nfwiw I couldn't reproduce this with `forge 0.2.0 (d89f6af 2022-06-24T00` on this PR https://github.com/ethereum-optimism/optimism/pull/2825",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1165550820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1165614641",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2106#issuecomment-1165614641",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106",
    "id": 1165614641,
    "node_id": "IC_kwDOGBlvNc5Fed4x",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T14:10:16Z",
    "updated_at": "2022-06-24T14:43:51Z",
    "author_association": "NONE",
    "body": "Ahh, sorry about that, I'd overwritten that commit. I recovered it and pushed it to my personal fork.\r\n\r\nPlease try again with \r\n```\r\ngit fetch https://github.com/maurelian/optimism-1 forge-overflow-repro\r\ngit checkout forge-overflow-repro\r\n```\r\n\r\nthen `forge test` in the same dir. That should break with the overflow error.\r\n\r\nSo it seems that something about how I refactored the tests in the PR resolved the issue. I think I might have reduced the depth of inheritance in the refactoring, honestly it's not 100% clear to me. \r\n\r\nAnother observation, is that smaller subsets of the tests work fine. Before refactoring the tests, we had planned to workaround it by looping over the test files as you can see here: https://github.com/ethereum-optimism/optimism/commit/bb8cdf2f3ecce1456c01e668f36b1429e02934d1#diff-8867d60c5856f3dd26f4c8e44f748fc94cb23bedf280def40159d6977153456b\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1165614641/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1165673606",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2106#issuecomment-1165673606",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106",
    "id": 1165673606,
    "node_id": "IC_kwDOGBlvNc5FesSG",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T15:15:09Z",
    "updated_at": "2022-06-24T15:32:47Z",
    "author_association": "MEMBER",
    "body": "@onbjerg \r\nI believe we end up in a loop in this setup function\r\n\r\nhttps://github.com/maurelian/optimism-1/blob/093244521b1f0f9489cd573ad66c3c317d7ecea4/packages/contracts-bedrock/contracts/test/L2OutputOracle.t.sol#L342-L359\r\n\r\nSO happens in this delegate call\r\n\r\nhttps://github.com/maurelian/optimism-1/blob/093244521b1f0f9489cd573ad66c3c317d7ecea4/packages/contracts-bedrock/contracts/universal/Proxy.sol#L102\r\n\r\nthis is somehow triggered by the prank call in the setup function, I believe we fixed some prank/proxy things in the past but can't remember\r\n\r\nnote there's another prank in the super.setup() function\r\n\r\nreproducible via \r\n\r\n`forge test -m test_cannotInitImpl ` (test doesn't matter as long it's one of `L2OutputOracleUpgradeable_Test`) SO happens in setup",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1165673606/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1165851041",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2106#issuecomment-1165851041",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106",
    "id": 1165851041,
    "node_id": "IC_kwDOGBlvNc5FfXmh",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T19:00:52Z",
    "updated_at": "2022-06-24T19:23:45Z",
    "author_association": "MEMBER",
    "body": "@onbjerg couldn't figure this one out,\r\n\r\napparently this is caused by the second prank in the setup function, which then triggers a loop where the proxy either calls itself or the proxy which triggers a fallback.\r\n\r\ncouldn't fully make sense of how the pranks are (re)set tbh\r\n\r\nfirst prank\r\n\r\nhttps://github.com/maurelian/optimism-1/blob/093244521b1f0f9489cd573ad66c3c317d7ecea4/packages/contracts-bedrock/contracts/test/CommonTest.t.sol#L84-L95\r\n\r\nsecond\r\n\r\nhttps://github.com/maurelian/optimism-1/blob/093244521b1f0f9489cd573ad66c3c317d7ecea4/packages/contracts-bedrock/contracts/test/L2OutputOracle.t.sol#L342-L359\r\n\r\nthe oracle is set to the proxy here\r\n\r\nhttps://github.com/maurelian/optimism-1/blob/093244521b1f0f9489cd573ad66c3c317d7ecea4/packages/contracts-bedrock/contracts/test/CommonTest.t.sol#L96\r\n\r\nwhich is then used to upgrade the proxy\r\n\r\nhttps://github.com/maurelian/optimism-1/blob/093244521b1f0f9489cd573ad66c3c317d7ecea4/packages/contracts-bedrock/contracts/test/L2OutputOracle.t.sol#L351\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1165851041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1165886523",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2106#issuecomment-1165886523",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106",
    "id": 1165886523,
    "node_id": "IC_kwDOGBlvNc5FfgQ7",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T19:47:43Z",
    "updated_at": "2022-06-24T19:48:33Z",
    "author_association": "MEMBER",
    "body": "@maurelian could you perhaps describe how the proxy setup is supposed to work?\r\nfrom what I've gathered, \r\n\r\nin the super.setup():\r\n* the `L2OutputOracle` is created \r\n* create a proxy and set the oracle as implementation\r\n* set the oracle variable to `L2OutputOracle(proxy)`\r\n\r\nin the main setup call:\r\n* create another proxy and set its implementation to `L2OutputOracle(proxy)`\r\n\r\nso now we have\r\nproxy -> proxy -> oracle \r\nright?\r\n\r\nI believe due to the second prank we end up in a loop that's either\r\nproxy <-> proxy\r\n\r\nor \r\nproxy that calls itself, perhaps due to `proxyCallIfNotAdmin`",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1165886523/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1165983643",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2106#issuecomment-1165983643",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106",
    "id": 1165983643,
    "node_id": "IC_kwDOGBlvNc5Ff3-b",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T22:12:43Z",
    "updated_at": "2022-06-24T22:12:43Z",
    "author_association": "MEMBER",
    "body": "I don't entirely follow either, would be nice with an overview of how this is supposed to work",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1165983643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1166164734",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2106#issuecomment-1166164734",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106",
    "id": 1166164734,
    "node_id": "IC_kwDOGBlvNc5FgkL-",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-25T01:26:58Z",
    "updated_at": "2022-06-25T01:29:09Z",
    "author_association": "MEMBER",
    "body": "I don't think this is a bug on our end, forgive me if I misunderstand:\r\n\r\nIn `L2OutputOracle_Initializer::setUp` you create a proxy that delegates to `L2OutputOracle` (the address of which is stored in `oracleImpl`. Let's call this Proxy 1. The address of this proxy is then stored in `oracle`.\r\n\r\nIn `L2OutputOracleUpgradeable_Test::setUp` you set `oracleImpl = oracle` and then you call some init function on a new Proxy (let's call it Proxy 2). Proxy 2 delegates to `oracleImpl`, which is now the address of Proxy 1.\r\n\r\nSo by my understanding, the call to Proxy 2 will delegatecall into the code of Proxy 1. Proxy 1's code will just execute the fallback function which looks up it's implementation using the storage of Proxy 2. The implementation noted in the storage of Proxy 2 is Proxy 1, so this delegatecall will delegatecall into Proxy 1. This behavior then loops, because it delegatecalls into itself, using Proxy 2's storage every time\r\n\r\nSo I don't think this is because of prank or Forge, I think it's because of https://github.com/maurelian/optimism-1/blob/093244521b1f0f9489cd573ad66c3c317d7ecea4/packages/contracts-bedrock/contracts/test/L2OutputOracle.t.sol#L347?\r\n\r\nI hope that made some sense.\r\n\r\nEdit: The reason you get a stack overflow is then because it simply does this more times than our stack can handle, where in a \"real\" environment you would have run out of gas",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1166164734/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1166167606",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2106#issuecomment-1166167606",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106",
    "id": 1166167606,
    "node_id": "IC_kwDOGBlvNc5Fgk42",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-25T01:45:24Z",
    "updated_at": "2022-06-25T01:45:24Z",
    "author_association": "NONE",
    "body": "@mattsse  you're right it looks like an infinite recursion where proxy1 delegatecalls proxy2 over and over. \n\nSo yeah, my bug there, and it explains why the refactor fixed it. But shouldn't it lead to an OOG, or is there no gas limit in the tests?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1166167606/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1166168135",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2106#issuecomment-1166168135",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106",
    "id": 1166168135,
    "node_id": "IC_kwDOGBlvNc5FglBH",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-25T01:49:23Z",
    "updated_at": "2022-06-25T01:49:23Z",
    "author_association": "MEMBER",
    "body": "The gas limit is super high, AFAIK it's like 2^32 by default or something, so we simply just hit stack overflow before we run out of gas",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1166168135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1166314864",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2106#issuecomment-1166314864",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106",
    "id": 1166314864,
    "node_id": "IC_kwDOGBlvNc5FhI1w",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-25T15:55:30Z",
    "updated_at": "2022-06-25T15:55:30Z",
    "author_association": "MEMBER",
    "body": "let's add a recursion check + warning ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1166314864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1166337100",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2106#issuecomment-1166337100",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106",
    "id": 1166337100,
    "node_id": "IC_kwDOGBlvNc5FhORM",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-25T18:12:43Z",
    "updated_at": "2022-06-26T14:51:20Z",
    "author_association": "NONE",
    "body": "Hmmm, OK. \r\nIs it possible to catch the overflow and give a warning about a possible infinite loop in the contract's control flow?\r\nOtherwise there's probably not much to be done here.\r\n\r\nedit: Didn't see this comment when I posted this message.\r\n> let's add a recursion check + warning\r\n\r\n👍 ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1166337100/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1166650539",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2106#issuecomment-1166650539",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106",
    "id": 1166650539,
    "node_id": "IC_kwDOGBlvNc5Fiayr",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-26T21:29:44Z",
    "updated_at": "2022-06-26T21:29:54Z",
    "author_association": "MEMBER",
    "body": "> let's add a recursion check + warning\r\n\r\nwhere would we add this? this seems like it'd require static analysis which seems out of scope\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1166650539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1167297826",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2106#issuecomment-1167297826",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106",
    "id": 1167297826,
    "node_id": "IC_kwDOGBlvNc5Fk40i",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-27T12:34:36Z",
    "updated_at": "2022-06-27T12:34:36Z",
    "author_association": "MEMBER",
    "body": "if there's a loop then we'll end up in a loop where `Backend::call` is called until the stack overflows, this happens at around ~120 depth in this case.\r\n\r\nI think we could check this with an inspector that keeps track of entered calls, exited calls etc. but perhaps not worth it",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1167297826/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1167654928",
    "html_url": "https://github.com/foundry-rs/foundry/issues/2106#issuecomment-1167654928",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/2106",
    "id": 1167654928,
    "node_id": "IC_kwDOGBlvNc5FmQAQ",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-27T17:32:46Z",
    "updated_at": "2022-06-27T17:32:46Z",
    "author_association": "MEMBER",
    "body": "Yeah - feels lower prio. Let's keep open for visibility anyway ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1167654928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
