{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5536",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5536/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5536/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5536/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5536",
  "id": 1835406238,
  "node_id": "I_kwDOGBlvNc5tZhOe",
  "number": 5536,
  "title": "vm.expectRevert not managing well the revert message",
  "user": {
    "login": "apuigsech",
    "id": 2170708,
    "node_id": "MDQ6VXNlcjIxNzA3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2170708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/apuigsech",
    "html_url": "https://github.com/apuigsech",
    "followers_url": "https://api.github.com/users/apuigsech/followers",
    "following_url": "https://api.github.com/users/apuigsech/following{/other_user}",
    "gists_url": "https://api.github.com/users/apuigsech/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/apuigsech/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/apuigsech/subscriptions",
    "organizations_url": "https://api.github.com/users/apuigsech/orgs",
    "repos_url": "https://api.github.com/users/apuigsech/repos",
    "events_url": "https://api.github.com/users/apuigsech/events{/privacy}",
    "received_events_url": "https://api.github.com/users/apuigsech/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-08-03T16:48:15Z",
  "updated_at": "2023-08-03T22:55:05Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [X] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (e05b9c7 2023-08-03T00:23:49.568203000Z)\r\n\r\n### What command(s) is the bug in?\r\n\r\nforge test --mc testModelStorage\r\n\r\n### Operating System\r\n\r\nmacOS (Apple Silicon)\r\n\r\n### Describe the bug\r\n\r\nvm.expectRevert() is showing strange behavior when testing some functions related to a Struct. It works fine for Structs up to a specific size, but it starts to fail on bigger structs.\r\n\r\nI created a code to reproduce this easily:\r\n\r\n```\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\nimport \"forge-std/Test.sol\";\r\n\r\nlibrary Model {\r\n    struct Item {\r\n        uint256[16] A;\r\n\r\n        // Uncommenting the following line makes the test fail due to\r\n        // vm.expectRevert() not managing the revert message correctly.\r\n        // uint8 B;\r\n    }\r\n}\r\n\r\nlibrary ModelStorage {\r\n    error InvalidID();\r\n\r\n    struct Storage {\r\n        mapping (uint32 => Model.Item) Map;\r\n    }\r\n    function set(Storage storage data, uint32 id, Model.Item calldata item)\r\n        internal\r\n    {\r\n        data.Map[id] = item;\r\n    }\r\n\r\n    function unset(Storage storage data, uint32 id)\r\n        internal\r\n    {\r\n        delete data.Map[id];\r\n    }\r\n  function get(Storage storage data, uint32 id)\r\n        internal view\r\n        exist(data, id)\r\n        returns (Model.Item storage item)\r\n    {\r\n        item = data.Map[id];\r\n    }\r\n\r\n    modifier exist(Storage storage data, uint32 id) {\r\n        if (data.Map[id].A[0] == 0) revert InvalidID();\r\n        _;\r\n    }\r\n}\r\n\r\ncontract wrapModelStorage {\r\n    using ModelStorage for ModelStorage.Storage;\r\n\r\n    ModelStorage.Storage data;\r\n\r\n    function set(uint32 id, Model.Item calldata item)\r\n        public\r\n    {\r\n        data.set(id, item);        \r\n    }\r\n\r\n    function unset(uint32 id)\r\n        public\r\n    {\r\n        data.unset(id);\r\n    }\r\n\r\n    function get(uint32 id)\r\n        public view\r\n        returns (Model.Item memory item)\r\n    {\r\n        item = data.get(id);\r\n    }    \r\n}\r\n\r\ncontract testModelStorage is Test {\r\n    function testGet()\r\n        public\r\n    {\r\n        wrapModelStorage wrap = new wrapModelStorage(); \r\n\r\n        vm.expectRevert(ModelStorage.InvalidID.selector);\r\n        wrap.get(1);\r\n    }\r\n}\r\n```\r\n\r\nThe struct `Item` has two elements; `uint256[16] A` and `uint8 B`. \r\n\r\nIf I keep the B element commented, the test works fine:\r\n\r\n```\r\nRunning 1 test for test/dummy/testExpectRevertGlitch.t.sol:testModelStorage\r\n[PASS] testGet() (gas: 197204)\r\nTest result: ok. 1 passed; 0 failed; 0 skipped; finished in 4.23ms\r\nRan 1 test suites: 1 tests passed, 0 failed, 0 skipped (1 total tests)\r\n```\r\n\r\nHowever, if I uncomment the B element and increase the size of the Struct, the test fails. The reason seems to be that vm.expectRevert() is not properly getting the revert message: \r\n\r\n```\r\nRunning 1 test for test/dummy/testExpectRevertGlitch.t.sol:testModelStorage\r\n[FAIL. Reason: EvmError: Revert] testGet() (gas: 213450)\r\nTraces:\r\n  [213450] testModelStorage::testGet()\r\n    ├─ [175020] → new wrapModelStorage@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f\r\n    │   └─ ← 874 bytes of code\r\n    ├─ [0] VM::expectRevert(InvalidID())\r\n    │   └─ ← ()\r\n    ├─ [2812] wrapModelStorage::get(1) [staticcall]\r\n    │   └─ ← \"InvalidID()\"\r\n    └─ ← \"EvmError: Revert\"\r\n\r\nTest result: FAILED. 0 passed; 1 failed; 0 skipped; finished in 279.08µs\r\nRan 1 test suites: 0 tests passed, 1 failed, 0 skipped (1 total tests)\r\n\r\nFailing tests:\r\nEncountered 1 failing test in test/dummy/testExpectRevertGlitch.t.sol:testModelStorage\r\n[FAIL. Reason: EvmError: Revert] testGet() (gas: 213450)\r\n\r\nEncountered a total of 1 failing tests, 0 tests succeeded\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5536/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5536/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1664331471",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5536#issuecomment-1664331471",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5536",
    "id": 1664331471,
    "node_id": "IC_kwDOGBlvNc5jM67P",
    "user": {
      "login": "apuigsech",
      "id": 2170708,
      "node_id": "MDQ6VXNlcjIxNzA3MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2170708?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apuigsech",
      "html_url": "https://github.com/apuigsech",
      "followers_url": "https://api.github.com/users/apuigsech/followers",
      "following_url": "https://api.github.com/users/apuigsech/following{/other_user}",
      "gists_url": "https://api.github.com/users/apuigsech/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apuigsech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apuigsech/subscriptions",
      "organizations_url": "https://api.github.com/users/apuigsech/orgs",
      "repos_url": "https://api.github.com/users/apuigsech/repos",
      "events_url": "https://api.github.com/users/apuigsech/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apuigsech/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-03T17:02:15Z",
    "updated_at": "2023-08-03T17:04:42Z",
    "author_association": "NONE",
    "body": "I have navigated a bit the code and I guess this could be related to [this](https://github.com/foundry-rs/foundry/blob/65b513de27ef23f4b4c4574e7f40f739a8fd9edb/evm/src/executor/inspector/cheatcodes/expect.rs#L15):\r\n\r\n```\r\n/// For some cheatcodes we may internally change the status of the call, i.e. in `expectRevert`.\r\n/// Solidity will see a successful call and attempt to decode the return data. Therefore, we need\r\n/// to populate the return with dummy bytes so the decode doesn't fail.\r\n///\r\n/// 512 bytes was arbitrarily chosen because it is long enough for return values up to 16 words in\r\n/// size.\r\nstatic DUMMY_CALL_OUTPUT: [u8; 512] = [0u8; 512];\r\n```\r\n\r\n16 words is the max size for the Struct in which the test is not failing.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1664331471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1664346755",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5536#issuecomment-1664346755",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5536",
    "id": 1664346755,
    "node_id": "IC_kwDOGBlvNc5jM-qD",
    "user": {
      "login": "apuigsech",
      "id": 2170708,
      "node_id": "MDQ6VXNlcjIxNzA3MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2170708?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apuigsech",
      "html_url": "https://github.com/apuigsech",
      "followers_url": "https://api.github.com/users/apuigsech/followers",
      "following_url": "https://api.github.com/users/apuigsech/following{/other_user}",
      "gists_url": "https://api.github.com/users/apuigsech/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apuigsech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apuigsech/subscriptions",
      "organizations_url": "https://api.github.com/users/apuigsech/orgs",
      "repos_url": "https://api.github.com/users/apuigsech/repos",
      "events_url": "https://api.github.com/users/apuigsech/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apuigsech/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-03T17:14:24Z",
    "updated_at": "2023-08-03T17:14:24Z",
    "author_association": "NONE",
    "body": "I confirmed it is related to the size of the data that the function returns, not the size of the Struct itself. If I change the code of the `get` function on the `wrapModelStorage` contract with the following, it works:\r\n\r\n```\r\n    function get(uint32 id)\r\n        public view\r\n        returns (uint x)\r\n    {\r\n        data.get(id);\r\n    }    \r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1664346755/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1664359635",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5536#issuecomment-1664359635",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5536",
    "id": 1664359635,
    "node_id": "IC_kwDOGBlvNc5jNBzT",
    "user": {
      "login": "apuigsech",
      "id": 2170708,
      "node_id": "MDQ6VXNlcjIxNzA3MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2170708?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apuigsech",
      "html_url": "https://github.com/apuigsech",
      "followers_url": "https://api.github.com/users/apuigsech/followers",
      "following_url": "https://api.github.com/users/apuigsech/following{/other_user}",
      "gists_url": "https://api.github.com/users/apuigsech/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apuigsech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apuigsech/subscriptions",
      "organizations_url": "https://api.github.com/users/apuigsech/orgs",
      "repos_url": "https://api.github.com/users/apuigsech/repos",
      "events_url": "https://api.github.com/users/apuigsech/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apuigsech/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-03T17:24:44Z",
    "updated_at": "2023-08-03T17:24:44Z",
    "author_association": "NONE",
    "body": "This is another minimalist code to reproduce the problem:\r\n\r\n```\r\ncontract ReturnBig {\r\n    function get()\r\n        public\r\n        returns(uint256[17] memory x)\r\n    {\r\n        revert();\r\n    } \r\n}\r\n\r\n\r\ncontract testReturnBig is Test {\r\n    function testGet() \r\n        public\r\n    {\r\n        ReturnBig c = new ReturnBig();\r\n\r\n        vm.expectRevert();\r\n        c.get();\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1664359635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1664668256",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5536#issuecomment-1664668256",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5536",
    "id": 1664668256,
    "node_id": "IC_kwDOGBlvNc5jONJg",
    "user": {
      "login": "Evalir",
      "id": 26014927,
      "node_id": "MDQ6VXNlcjI2MDE0OTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evalir",
      "html_url": "https://github.com/Evalir",
      "followers_url": "https://api.github.com/users/Evalir/followers",
      "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
      "organizations_url": "https://api.github.com/users/Evalir/orgs",
      "repos_url": "https://api.github.com/users/Evalir/repos",
      "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evalir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-03T21:27:09Z",
    "updated_at": "2023-08-03T21:27:09Z",
    "author_association": "MEMBER",
    "body": "Right I see. This is somewhat to be expected due to the limit we've imposed here—curious on your thoughts here @mds1 ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1664668256/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1664737523",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5536#issuecomment-1664737523",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5536",
    "id": 1664737523,
    "node_id": "IC_kwDOGBlvNc5jOeDz",
    "user": {
      "login": "apuigsech",
      "id": 2170708,
      "node_id": "MDQ6VXNlcjIxNzA3MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2170708?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apuigsech",
      "html_url": "https://github.com/apuigsech",
      "followers_url": "https://api.github.com/users/apuigsech/followers",
      "following_url": "https://api.github.com/users/apuigsech/following{/other_user}",
      "gists_url": "https://api.github.com/users/apuigsech/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apuigsech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apuigsech/subscriptions",
      "organizations_url": "https://api.github.com/users/apuigsech/orgs",
      "repos_url": "https://api.github.com/users/apuigsech/repos",
      "events_url": "https://api.github.com/users/apuigsech/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apuigsech/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-03T22:55:05Z",
    "updated_at": "2023-08-03T22:55:05Z",
    "author_association": "NONE",
    "body": "FYI, I forked the code and doubled up this 512 into 1024, and it works. Making it 4096 could be reasonable, but I don't know enough about the VM to understand other implications.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1664737523/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
