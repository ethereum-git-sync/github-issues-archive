{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3410",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3410/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3410/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3410/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3410",
  "id": 1390738797,
  "node_id": "I_kwDOGBlvNc5S5P1t",
  "number": 3410,
  "title": "Support CustomError inheritance in `vm.expectRevert(abi.encodeWithSelector(Parent.myCustomError()))`",
  "user": {
    "login": "joshpwrk",
    "id": 46257136,
    "node_id": "MDQ6VXNlcjQ2MjU3MTM2",
    "avatar_url": "https://avatars.githubusercontent.com/u/46257136?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/joshpwrk",
    "html_url": "https://github.com/joshpwrk",
    "followers_url": "https://api.github.com/users/joshpwrk/followers",
    "following_url": "https://api.github.com/users/joshpwrk/following{/other_user}",
    "gists_url": "https://api.github.com/users/joshpwrk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/joshpwrk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/joshpwrk/subscriptions",
    "organizations_url": "https://api.github.com/users/joshpwrk/orgs",
    "repos_url": "https://api.github.com/users/joshpwrk/repos",
    "events_url": "https://api.github.com/users/joshpwrk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/joshpwrk/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-09-29T11:51:30Z",
  "updated_at": "2022-09-30T07:43:51Z",
  "closed_at": "2022-09-30T07:43:31Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\nGiven parent and child contracts:\r\n\r\n```\r\ncontract Child {\r\n  error myCustomError()\r\n}\r\n\r\ncontract Parent is Child {\r\n  function revertingFunction() {\r\n   revert myCustomError();     \r\n  }\r\n}\r\n```\r\n\r\nThe following throws a compiler error `vm.expectRevert(abi.encodeWithSelector(Parent.myCustomError()))`. With large nested systems, would be very helpful to not force specific call out of Child (e.g. `vm.expectRevert(abi.encodeWithSelector(Child.myCustomError()))`.\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": {
    "login": "joshpwrk",
    "id": 46257136,
    "node_id": "MDQ6VXNlcjQ2MjU3MTM2",
    "avatar_url": "https://avatars.githubusercontent.com/u/46257136?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/joshpwrk",
    "html_url": "https://github.com/joshpwrk",
    "followers_url": "https://api.github.com/users/joshpwrk/followers",
    "following_url": "https://api.github.com/users/joshpwrk/following{/other_user}",
    "gists_url": "https://api.github.com/users/joshpwrk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/joshpwrk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/joshpwrk/subscriptions",
    "organizations_url": "https://api.github.com/users/joshpwrk/orgs",
    "repos_url": "https://api.github.com/users/joshpwrk/repos",
    "events_url": "https://api.github.com/users/joshpwrk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/joshpwrk/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3410/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3410/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1262278605",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3410#issuecomment-1262278605",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3410",
    "id": 1262278605,
    "node_id": "IC_kwDOGBlvNc5LPNfN",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-29T13:24:58Z",
    "updated_at": "2022-09-29T13:24:58Z",
    "author_association": "MEMBER",
    "body": "I'm not sure I can follow here.\r\n \r\nIsn't this the same error? Does the selector differ here?\r\n\r\nFYI, we also just made `expectRevert()` catch _any_ reverts regardless of selector",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1262278605/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1262285942",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3410#issuecomment-1262285942",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3410",
    "id": 1262285942,
    "node_id": "IC_kwDOGBlvNc5LPPR2",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-29T13:29:32Z",
    "updated_at": "2022-09-29T13:29:32Z",
    "author_association": "COLLABORATOR",
    "body": "IIUC this is a solidity issue due to how inheritance works for things like errors and structs.\r\n\r\nOne alternative is that if you're using solidity >=0.8, you can define the error outside of a contract, then it will be available when importing into other files\r\n\r\n```solidity\r\n// src/MyContract.sol\r\nerror myCustomError()\r\n\r\ncontract Child {}\r\n\r\ncontract Parent is Child {\r\n  function revertingFunction() {\r\n    revert myCustomError();     \r\n  }\r\n}\r\n\r\n// test/MyContract.t.sol\r\nimport \"src/MyContract.sol\";\r\nfunction testSomething() public {\r\n  vm.expectRevert(abi.encodeWithSelector(myCustomError()));\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1262285942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1263224024",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3410#issuecomment-1263224024",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3410",
    "id": 1263224024,
    "node_id": "IC_kwDOGBlvNc5LS0TY",
    "user": {
      "login": "joshpwrk",
      "id": 46257136,
      "node_id": "MDQ6VXNlcjQ2MjU3MTM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46257136?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshpwrk",
      "html_url": "https://github.com/joshpwrk",
      "followers_url": "https://api.github.com/users/joshpwrk/followers",
      "following_url": "https://api.github.com/users/joshpwrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshpwrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshpwrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshpwrk/subscriptions",
      "organizations_url": "https://api.github.com/users/joshpwrk/orgs",
      "repos_url": "https://api.github.com/users/joshpwrk/repos",
      "events_url": "https://api.github.com/users/joshpwrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshpwrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-30T07:43:31Z",
    "updated_at": "2022-09-30T07:43:51Z",
    "author_association": "NONE",
    "body": "Ah thanks for the clarification @mds1 - you're right, looks like even though you can inherit a parent and call the error without the parent reference, in Solidity you do need to specify the exact child contract name when pulling the error selector (e.g. `Child.myCustomError.selector`). \r\n\r\nI think for now, going with the explicit reference to child will do. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1263224024/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
