{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3541",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3541/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3541/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3541/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3541",
  "id": 1421145690,
  "node_id": "I_kwDOGBlvNc5UtPZa",
  "number": 3541,
  "title": "Public state variables prefixed with 'test' incorrectly run as tests",
  "user": {
    "login": "giovannidisiena",
    "id": 22510773,
    "node_id": "MDQ6VXNlcjIyNTEwNzcz",
    "avatar_url": "https://avatars.githubusercontent.com/u/22510773?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/giovannidisiena",
    "html_url": "https://github.com/giovannidisiena",
    "followers_url": "https://api.github.com/users/giovannidisiena/followers",
    "following_url": "https://api.github.com/users/giovannidisiena/following{/other_user}",
    "gists_url": "https://api.github.com/users/giovannidisiena/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/giovannidisiena/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/giovannidisiena/subscriptions",
    "organizations_url": "https://api.github.com/users/giovannidisiena/orgs",
    "repos_url": "https://api.github.com/users/giovannidisiena/repos",
    "events_url": "https://api.github.com/users/giovannidisiena/events{/privacy}",
    "received_events_url": "https://api.github.com/users/giovannidisiena/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-10-24T17:03:49Z",
  "updated_at": "2022-10-26T17:53:48Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\nforge 0.2.0 (9add73c 2022-10-24T00:11:15.963273Z)\n\n### What command(s) is the bug in?\n\nforge test\n\n### Operating System\n\nmacOS (Intel)\n\n### Describe the bug\n\nIt appears that forge incorrectly runs public state variables as tests if their names are prefixed with `test`. This can be demonstrated by running the following snippet (adapted from the Foundry book [example](https://book.getfoundry.sh/forge/writing-tests)) with `forge test`:\r\n```\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\nimport \"forge-std/Test.sol\";\r\n\r\ncontract PublicStateVariableBugTest is Test {\r\n  uint256 public testNumber\r\n  uint256[1] public testNumbers;\r\n}\r\n```\r\n\r\nAs you can see, there are no tests defined within this contract; however, two 'tests' are in fact run. This behaviour is even more clearly illustrated with public arrays which result in a fuzz test counterexample output:\r\n\r\n```Running 2 tests for test/PublicStateVariableBug.t.sol:Test7\r\n[PASS] testNumber():(uint256) (gas: 2430)\r\n[FAIL. Reason: EvmError: Revert Counterexample: calldata=0xd29ab5920000000000000000000000000000000000000000000000000000000000000001, args=[1]] testNumbers(uint256):(uint256) (runs: 1, Î¼: 2731, ~: 2731)\r\nTest result: FAILED. 1 passed; 1 failed; finished in 4.77ms```",
  "closed_by": {
    "login": "mattsse",
    "id": 19890894,
    "node_id": "MDQ6VXNlcjE5ODkwODk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mattsse",
    "html_url": "https://github.com/mattsse",
    "followers_url": "https://api.github.com/users/mattsse/followers",
    "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
    "organizations_url": "https://api.github.com/users/mattsse/orgs",
    "repos_url": "https://api.github.com/users/mattsse/repos",
    "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mattsse/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3541/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3541/timeline",
  "performed_via_github_app": null,
  "state_reason": "reopened"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1289338356",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3541#issuecomment-1289338356",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3541",
    "id": 1289338356,
    "node_id": "IC_kwDOGBlvNc5M2b30",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-24T17:08:30Z",
    "updated_at": "2022-10-24T17:08:30Z",
    "author_association": "MEMBER",
    "body": "@rkrasiuk looks like there's something off with how we determine the test functions in the AST?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1289338356/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1289358795",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3541#issuecomment-1289358795",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3541",
    "id": 1289358795,
    "node_id": "IC_kwDOGBlvNc5M2g3L",
    "user": {
      "login": "rkrasiuk",
      "id": 25429261,
      "node_id": "MDQ6VXNlcjI1NDI5MjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25429261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkrasiuk",
      "html_url": "https://github.com/rkrasiuk",
      "followers_url": "https://api.github.com/users/rkrasiuk/followers",
      "following_url": "https://api.github.com/users/rkrasiuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkrasiuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkrasiuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkrasiuk/subscriptions",
      "organizations_url": "https://api.github.com/users/rkrasiuk/orgs",
      "repos_url": "https://api.github.com/users/rkrasiuk/repos",
      "events_url": "https://api.github.com/users/rkrasiuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkrasiuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-24T17:27:46Z",
    "updated_at": "2022-10-24T17:27:46Z",
    "author_association": "COLLABORATOR",
    "body": "@mattsse afaik we don't parse the AST, but rather take it from the ABI. shall we just filter out view & pure functions? ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1289358795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1289381964",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3541#issuecomment-1289381964",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3541",
    "id": 1289381964,
    "node_id": "IC_kwDOGBlvNc5M2mhM",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-24T17:50:38Z",
    "updated_at": "2022-10-24T17:50:38Z",
    "author_association": "MEMBER",
    "body": "ah yes of course, because the vars are public, they'll end up as view functions in the ABI.\r\n\r\n@giovannidisiena we should make note of this in the book.\r\n\r\nclosing as this is not technically a bug imo",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1289381964/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1289382700",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3541#issuecomment-1289382700",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3541",
    "id": 1289382700,
    "node_id": "IC_kwDOGBlvNc5M2mss",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-24T17:51:19Z",
    "updated_at": "2022-10-24T17:51:19Z",
    "author_association": "MEMBER",
    "body": "well let's keep this open perhaps we can improve this regardless.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1289382700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1289385087",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3541#issuecomment-1289385087",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3541",
    "id": 1289385087,
    "node_id": "IC_kwDOGBlvNc5M2nR_",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-24T17:53:24Z",
    "updated_at": "2022-10-24T17:53:24Z",
    "author_association": "COLLABORATOR",
    "body": "> shall we just filter out view & pure functions?\r\n\r\nI don't know if we want to do this, as it forces people to use the `assertEq` helpers and no longer lets them use `require`. But maybe that's good if we don't want people using require? E.g. if you filter out view functions you can't do:\r\n\r\n```solidity\r\nfunction test_PostSetupState() public view {\r\n  uint256 balance = dai.balanceOf(alice);\r\n  require(balance == 100 ether, \"balance wasn't set properly\");\r\n}\r\n```\r\n\r\n`assertEq` modifies state so using that means functions can't be view\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1289385087/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
