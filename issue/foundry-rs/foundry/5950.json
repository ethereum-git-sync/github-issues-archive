{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5950",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5950/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5950/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5950/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5950",
  "id": 1918503660,
  "node_id": "I_kwDOGBlvNc5yWgrs",
  "number": 5950,
  "title": "`cast run` does not decode calldata for library (delegate-)call.",
  "user": {
    "login": "ckoopmann",
    "id": 15629702,
    "node_id": "MDQ6VXNlcjE1NjI5NzAy",
    "avatar_url": "https://avatars.githubusercontent.com/u/15629702?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ckoopmann",
    "html_url": "https://github.com/ckoopmann",
    "followers_url": "https://api.github.com/users/ckoopmann/followers",
    "following_url": "https://api.github.com/users/ckoopmann/following{/other_user}",
    "gists_url": "https://api.github.com/users/ckoopmann/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ckoopmann/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ckoopmann/subscriptions",
    "organizations_url": "https://api.github.com/users/ckoopmann/orgs",
    "repos_url": "https://api.github.com/users/ckoopmann/repos",
    "events_url": "https://api.github.com/users/ckoopmann/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ckoopmann/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-09-29T02:22:57Z",
  "updated_at": "2023-10-27T06:01:28Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nCast\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\ncast 0.2.0 (96ab913 2023-09-28T00:20:52.150553000Z)\n\n### What command(s) is the bug in?\n\ncast run\n\n### Operating System\n\nmacOS (Apple Silicon)\n\n### Describe the bug\n\nWhen running `cast run` on a [transaction](https://etherscan.io/tx/0x07a6ad95d76f4c1318d38564439347b39a47b126a7cbd3fe0b58a980392d4a35) that includes delegatecalls to a [library deployment](https://etherscan.io/address/0xBb02bCCE1bdcc0b07E7870346D8b2ad9397D0fAC), those calls are not decoded correctly in the transaction traces, even though the libraries source code is [verified on etherscan](https://etherscan.io/address/0xBb02bCCE1bdcc0b07E7870346D8b2ad9397D0fAC#code).\r\n\r\nWhen running `cast run --rpc-url <ETH_MAINNET_RPC_URL> --quick 0x07a6ad95d76f4c1318d38564439347b39a47b126a7cbd3fe0b58a980392d4a35` the delegate calls are shown as:\r\n<img width=\"1440\" alt=\"image\" src=\"https://github.com/foundry-rs/foundry/assets/15629702/dec76471-a173-472b-86d2-8bb0ed1ed14d\">\r\n\r\nWhereas I'd expect them to be decoded using the library's abi. (In above case it would be the `swapExactTokensForTokens(DEXAdapter.Addresses,uint256,uint256,DEXAdapter.SwapData)` selector.\r\n\r\nNote that I haven't verified this behaviour for other library deployments yet, so it could be caused by something in this specific signature / example as well.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5950/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5950/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1740230356",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5950#issuecomment-1740230356",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5950",
    "id": 1740230356,
    "node_id": "IC_kwDOGBlvNc5nuc7U",
    "user": {
      "login": "ckoopmann",
      "id": 15629702,
      "node_id": "MDQ6VXNlcjE1NjI5NzAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/15629702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ckoopmann",
      "html_url": "https://github.com/ckoopmann",
      "followers_url": "https://api.github.com/users/ckoopmann/followers",
      "following_url": "https://api.github.com/users/ckoopmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/ckoopmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ckoopmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ckoopmann/subscriptions",
      "organizations_url": "https://api.github.com/users/ckoopmann/orgs",
      "repos_url": "https://api.github.com/users/ckoopmann/repos",
      "events_url": "https://api.github.com/users/ckoopmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ckoopmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-29T02:30:13Z",
    "updated_at": "2023-09-29T02:31:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just noted that for libraries (or at least this specific one) etherscan does not show any external / public \"write functions\" even though there are \"external\" functions defined in the source code.\r\n\r\nMaybe this is expected behaviour since this library is not meant to be called except for delegatecalls.\r\n\r\nHowever it would be great to find a workaround for this on the cast side, since it currently kind of breaks the tx debug workflow by requiring users to manually decode these calls using `cast abi-decode` or similar tools.\r\n\r\n<img width=\"1440\" alt=\"image\" src=\"https://github.com/foundry-rs/foundry/assets/15629702/790bb4b4-e8fa-4c76-9a77-eec1bbcb77d8\">\r\n<img width=\"1234\" alt=\"image\" src=\"https://github.com/foundry-rs/foundry/assets/15629702/d211b3c6-b2a3-4426-bffa-313672bb9965\">\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1740230356/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1740239355",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5950#issuecomment-1740239355",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5950",
    "id": 1740239355,
    "node_id": "IC_kwDOGBlvNc5nufH7",
    "user": {
      "login": "ckoopmann",
      "id": 15629702,
      "node_id": "MDQ6VXNlcjE1NjI5NzAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/15629702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ckoopmann",
      "html_url": "https://github.com/ckoopmann",
      "followers_url": "https://api.github.com/users/ckoopmann/followers",
      "following_url": "https://api.github.com/users/ckoopmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/ckoopmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ckoopmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ckoopmann/subscriptions",
      "organizations_url": "https://api.github.com/users/ckoopmann/orgs",
      "repos_url": "https://api.github.com/users/ckoopmann/repos",
      "events_url": "https://api.github.com/users/ckoopmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ckoopmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-29T02:46:49Z",
    "updated_at": "2023-09-29T02:46:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Etherscan api also does not include these methods in the abi returned by the api, so probably non-trivial to find a workaround for this.\r\n```\r\nhttps://api.etherscan.io/api\r\n   ?module=contract\r\n   &action=getabi\r\n   &address=0xBb02bCCE1bdcc0b07E7870346D8b2ad9397D0fAC\r\n   &apikey=<YOUR_ETHERSCAN_API_KEY>\r\n```\r\n<img width=\"1329\" alt=\"image\" src=\"https://github.com/foundry-rs/foundry/assets/15629702/4034b8b1-e57f-4bd6-a233-1f6dbcb5327b\">\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1740239355/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1740267718",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5950#issuecomment-1740267718",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5950",
    "id": 1740267718,
    "node_id": "IC_kwDOGBlvNc5numDG",
    "user": {
      "login": "ckoopmann",
      "id": 15629702,
      "node_id": "MDQ6VXNlcjE1NjI5NzAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/15629702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ckoopmann",
      "html_url": "https://github.com/ckoopmann",
      "followers_url": "https://api.github.com/users/ckoopmann/followers",
      "following_url": "https://api.github.com/users/ckoopmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/ckoopmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ckoopmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ckoopmann/subscriptions",
      "organizations_url": "https://api.github.com/users/ckoopmann/orgs",
      "repos_url": "https://api.github.com/users/ckoopmann/repos",
      "events_url": "https://api.github.com/users/ckoopmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ckoopmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-29T03:45:29Z",
    "updated_at": "2023-09-30T02:04:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "For anyone facing the same issue, the manual workaround I did is:\r\n1. Copy calldata from trace (everything inside the brackets)\r\n2. Determine the called function signature by using `solc --hashes` and comparing the resulting output to the hash shown in the trace\r\n3. Decode calldata using cast and the function signature: `cast abi-decode --input \"swapExactTokensForTokens((address,address,address,address,address,address,address),uint256,uint256,(address[],uint24[],address,uint8))\" <CALLDATA>`\r\n\r\nThis is a bit of a pain though (especially step 2) and took me > 1 hour to get right, so definetely would be great to find a workaround inside cast for this. ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1740267718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1782330859",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5950#issuecomment-1782330859",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5950",
    "id": 1782330859,
    "node_id": "IC_kwDOGBlvNc5qPDXr",
    "user": {
      "login": "ckoopmann",
      "id": 15629702,
      "node_id": "MDQ6VXNlcjE1NjI5NzAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/15629702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ckoopmann",
      "html_url": "https://github.com/ckoopmann",
      "followers_url": "https://api.github.com/users/ckoopmann/followers",
      "following_url": "https://api.github.com/users/ckoopmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/ckoopmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ckoopmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ckoopmann/subscriptions",
      "organizations_url": "https://api.github.com/users/ckoopmann/orgs",
      "repos_url": "https://api.github.com/users/ckoopmann/repos",
      "events_url": "https://api.github.com/users/ckoopmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ckoopmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-27T05:44:48Z",
    "updated_at": "2023-10-27T05:44:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "After revisiting this I noticed that we seem to use exclusively the `openchain` api to decode all traces. (and not from etherscan).\r\nThis api does not seem to contain signatures for library functions, meaning in the above example the following query:\r\n`https://api.openchain.xyz/signature-database/v1/lookup?function=0x1aafa9d8`\r\n\r\nReturns `{\"ok\":true,\"result\":{\"event\":{},\"function\":{\"0x1aafa9d8\":null}}}` which then results in the trace not being decoded. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1782330859/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1782344846",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5950#issuecomment-1782344846",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5950",
    "id": 1782344846,
    "node_id": "IC_kwDOGBlvNc5qPGyO",
    "user": {
      "login": "ckoopmann",
      "id": 15629702,
      "node_id": "MDQ6VXNlcjE1NjI5NzAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/15629702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ckoopmann",
      "html_url": "https://github.com/ckoopmann",
      "followers_url": "https://api.github.com/users/ckoopmann/followers",
      "following_url": "https://api.github.com/users/ckoopmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/ckoopmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ckoopmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ckoopmann/subscriptions",
      "organizations_url": "https://api.github.com/users/ckoopmann/orgs",
      "repos_url": "https://api.github.com/users/ckoopmann/repos",
      "events_url": "https://api.github.com/users/ckoopmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ckoopmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-27T06:01:28Z",
    "updated_at": "2023-10-27T06:01:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Opened an issue on openchain repo to see if their service can be extended to be able to decode these types of signatures:\r\nhttps://github.com/openchainxyz/openchain-monorepo/issues/21\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1782344846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
