{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5467",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5467/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5467/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5467/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5467",
  "id": 1819749691,
  "node_id": "I_kwDOGBlvNc5sdy07",
  "number": 5467,
  "title": "feat(cast): remove redundant `cast` commands",
  "user": {
    "login": "Sabnock01",
    "id": 24715302,
    "node_id": "MDQ6VXNlcjI0NzE1MzAy",
    "avatar_url": "https://avatars.githubusercontent.com/u/24715302?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Sabnock01",
    "html_url": "https://github.com/Sabnock01",
    "followers_url": "https://api.github.com/users/Sabnock01/followers",
    "following_url": "https://api.github.com/users/Sabnock01/following{/other_user}",
    "gists_url": "https://api.github.com/users/Sabnock01/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Sabnock01/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Sabnock01/subscriptions",
    "organizations_url": "https://api.github.com/users/Sabnock01/orgs",
    "repos_url": "https://api.github.com/users/Sabnock01/repos",
    "events_url": "https://api.github.com/users/Sabnock01/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Sabnock01/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-07-25T07:46:34Z",
  "updated_at": "2023-07-31T14:21:41Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nCast\n\n### Describe the feature you would like\n\nCurrently, `to-dec` and `to-hex` act as specialized versions of `to-base` making them both redundant. \r\n\r\nThese should probably be deprecated to remove clutter and simplify the tool and leave `to-base` as a catch-all for converting from one radix to another.\n\n### Additional context\n\nI can think of other such simplifications that can be made to some of these conversion commands, but I'll stick with just this one for now and add others in the event we decide to move forward with this.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5467/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5467/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1652068862",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5467#issuecomment-1652068862",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5467",
    "id": 1652068862,
    "node_id": "IC_kwDOGBlvNc5ieJH-",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-26T15:39:05Z",
    "updated_at": "2023-07-26T15:39:05Z",
    "author_association": "COLLABORATOR",
    "body": "I do agree with you that cast has a good amount of clutter in the commands and could benefit from a refactor.\r\n\r\nBefore deprecating the mentioned commands, I think it'd be ideal to instead survey all cast commands think about how they should be cleaned up and deduped more broadly. For example, it is convenient to have an alias since converting between decimal and hex is common, so a better approach might be to have subcommands. For example:\r\n\r\n```sh\r\n# Top level command that doesn't actually do anything\r\ncast convert \r\n\r\n# Subcommands to convert to the respective types\r\ncast convert to-dec\r\ncast convert to-hex\r\ncast convert to-base 2 # convert to binary\r\n\r\n# And they each take a flag to specify padding\r\ncast convert to-dec --pad 32 # pad to 32 bytes, e.g. uint256\r\ncast convert to-hex --pad 32 # pad to 32 bytes, e.g. bytes32\r\n\r\n# Maybe we have aliases for common pad amounts\r\ncast convert to-uint256 # equivalent to `cast convert to-dec --pad 32\r\ncast convert to-address # equivalent to `cast convert to-hex --pad 20\r\n```\r\n\r\nThere's a bunch of other existing related conversion commands that might fit in here, e.g. to-int256, etc.\r\n\r\nAnd I'm saying the above proposal is optimal just yet, so open to other ideas",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1652068862/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1658437439",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5467#issuecomment-1658437439",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5467",
    "id": 1658437439,
    "node_id": "IC_kwDOGBlvNc5i2b8_",
    "user": {
      "login": "Evalir",
      "id": 26014927,
      "node_id": "MDQ6VXNlcjI2MDE0OTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evalir",
      "html_url": "https://github.com/Evalir",
      "followers_url": "https://api.github.com/users/Evalir/followers",
      "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
      "organizations_url": "https://api.github.com/users/Evalir/orgs",
      "repos_url": "https://api.github.com/users/Evalir/repos",
      "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evalir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-31T14:03:20Z",
    "updated_at": "2023-07-31T14:03:20Z",
    "author_association": "MEMBER",
    "body": "Yep I agree we could probably refactor `cast` a bitâ€”we have to be careful about breaking changes around this though",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1658437439/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1658470028",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5467#issuecomment-1658470028",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5467",
    "id": 1658470028,
    "node_id": "IC_kwDOGBlvNc5i2j6M",
    "user": {
      "login": "Sabnock01",
      "id": 24715302,
      "node_id": "MDQ6VXNlcjI0NzE1MzAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/24715302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sabnock01",
      "html_url": "https://github.com/Sabnock01",
      "followers_url": "https://api.github.com/users/Sabnock01/followers",
      "following_url": "https://api.github.com/users/Sabnock01/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sabnock01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sabnock01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sabnock01/subscriptions",
      "organizations_url": "https://api.github.com/users/Sabnock01/orgs",
      "repos_url": "https://api.github.com/users/Sabnock01/repos",
      "events_url": "https://api.github.com/users/Sabnock01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sabnock01/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-31T14:21:41Z",
    "updated_at": "2023-07-31T14:21:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "We can rework this to be a meta issue on cast refactoring if you guys would like.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1658470028/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
