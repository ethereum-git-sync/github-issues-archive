{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1604",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1604/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1604/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1604/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/1604",
  "id": 1235517602,
  "node_id": "I_kwDOGBlvNc5JpICi",
  "number": 1604,
  "title": "`mockCall`'s calldata partial matching behaviour doesn't work as expected",
  "user": {
    "login": "AdithyaNarayan",
    "id": 20930155,
    "node_id": "MDQ6VXNlcjIwOTMwMTU1",
    "avatar_url": "https://avatars.githubusercontent.com/u/20930155?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AdithyaNarayan",
    "html_url": "https://github.com/AdithyaNarayan",
    "followers_url": "https://api.github.com/users/AdithyaNarayan/followers",
    "following_url": "https://api.github.com/users/AdithyaNarayan/following{/other_user}",
    "gists_url": "https://api.github.com/users/AdithyaNarayan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AdithyaNarayan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AdithyaNarayan/subscriptions",
    "organizations_url": "https://api.github.com/users/AdithyaNarayan/orgs",
    "repos_url": "https://api.github.com/users/AdithyaNarayan/repos",
    "events_url": "https://api.github.com/users/AdithyaNarayan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AdithyaNarayan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "AdithyaNarayan",
    "id": 20930155,
    "node_id": "MDQ6VXNlcjIwOTMwMTU1",
    "avatar_url": "https://avatars.githubusercontent.com/u/20930155?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AdithyaNarayan",
    "html_url": "https://github.com/AdithyaNarayan",
    "followers_url": "https://api.github.com/users/AdithyaNarayan/followers",
    "following_url": "https://api.github.com/users/AdithyaNarayan/following{/other_user}",
    "gists_url": "https://api.github.com/users/AdithyaNarayan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AdithyaNarayan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AdithyaNarayan/subscriptions",
    "organizations_url": "https://api.github.com/users/AdithyaNarayan/orgs",
    "repos_url": "https://api.github.com/users/AdithyaNarayan/repos",
    "events_url": "https://api.github.com/users/AdithyaNarayan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AdithyaNarayan/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "AdithyaNarayan",
      "id": 20930155,
      "node_id": "MDQ6VXNlcjIwOTMwMTU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/20930155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AdithyaNarayan",
      "html_url": "https://github.com/AdithyaNarayan",
      "followers_url": "https://api.github.com/users/AdithyaNarayan/followers",
      "following_url": "https://api.github.com/users/AdithyaNarayan/following{/other_user}",
      "gists_url": "https://api.github.com/users/AdithyaNarayan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AdithyaNarayan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AdithyaNarayan/subscriptions",
      "organizations_url": "https://api.github.com/users/AdithyaNarayan/orgs",
      "repos_url": "https://api.github.com/users/AdithyaNarayan/repos",
      "events_url": "https://api.github.com/users/AdithyaNarayan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AdithyaNarayan/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-05-13T17:46:45Z",
  "updated_at": "2022-05-16T15:46:48Z",
  "closed_at": "2022-05-16T15:46:48Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Have you ensured that all of these are up to date?\r\n\r\n- [X] Foundry\r\n- [X] Foundryup\r\n\r\n### What version of Foundry are you on?\r\n\r\nforge 0.2.0 (4604a42 2022-05-12T00:04:28.117376+00:00)\r\n\r\n### What command(s) is the bug in?\r\n\r\nforge test\r\n\r\n### Operating System\r\n\r\nmacOS (Apple Silicon)\r\n\r\n### Describe the bug\r\n\r\nThe `mockCall`'s partial calldata matching is not working as expected.\r\n\r\n```solidity\r\nimport \"forge-std/Test.sol\";\r\n\r\ncontract Contract {\r\n    function f(uint256 a, uint256 b) public pure returns(uint256) {\r\n      return a + b; \r\n    }\r\n}\r\n\r\ncontract ContractTest is Test {\r\n    function setUp() public {}\r\n\r\n    function testExample() public {\r\n        Contract target = new Contract();\r\n\r\n        vm.mockCall(address(target), abi.encodeWithSelector(target.f.selector), abi.encode(10)); \r\n        vm.mockCall(address(target), abi.encodeWithSelector(target.f.selector, 2), abi.encode(20)); \r\n        vm.mockCall(address(target), abi.encodeWithSelector(target.f.selector, 2, 3), abi.encode(30)); \r\n\r\n        assertEq(target.f(1, 2), 10);\r\n        assertEq(target.f(2, 2), 20); // Expected: 20, Actual: 10\r\n        assertEq(target.f(2, 3), 30);\r\n    }\r\n}\r\n```\r\n\r\nThis is probably because of the way the partial matching works, since it check for a match, and if not found, iterates and returns the first match. In this case, it looks like the iteration is happening from least specific to most specific when it should be the other way around",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/1604/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1604/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1126368552",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1604#issuecomment-1126368552",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1604",
    "id": 1126368552,
    "node_id": "IC_kwDOGBlvNc5DIwUo",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-13T19:16:51Z",
    "updated_at": "2022-05-13T19:17:33Z",
    "author_association": "MEMBER",
    "body": "It works in order of precedent IIRC, so you need to put `vm.mockCall(address(target), abi.encodeWithSelector(target.f.selector), abi.encode(10));` last. If this is counter-intuitive we should consider addressing it in the book",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1126368552/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1126609999",
    "html_url": "https://github.com/foundry-rs/foundry/issues/1604#issuecomment-1126609999",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/1604",
    "id": 1126609999,
    "node_id": "IC_kwDOGBlvNc5DJrRP",
    "user": {
      "login": "AdithyaNarayan",
      "id": 20930155,
      "node_id": "MDQ6VXNlcjIwOTMwMTU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/20930155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AdithyaNarayan",
      "html_url": "https://github.com/AdithyaNarayan",
      "followers_url": "https://api.github.com/users/AdithyaNarayan/followers",
      "following_url": "https://api.github.com/users/AdithyaNarayan/following{/other_user}",
      "gists_url": "https://api.github.com/users/AdithyaNarayan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AdithyaNarayan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AdithyaNarayan/subscriptions",
      "organizations_url": "https://api.github.com/users/AdithyaNarayan/orgs",
      "repos_url": "https://api.github.com/users/AdithyaNarayan/repos",
      "events_url": "https://api.github.com/users/AdithyaNarayan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AdithyaNarayan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-14T01:57:03Z",
    "updated_at": "2022-05-14T01:57:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think since it uses a `BTreeMap` internally, seems like order of precedence is just the sorting order of `Bytes` which is lower to highest and hence, if there is no exact match, it chooses the most generic match. Tried with different ordering of the `mockCall`s, all seem to fail",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1126609999/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
