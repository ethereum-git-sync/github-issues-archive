{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3298",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3298/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3298/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3298/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3298",
  "id": 1380480190,
  "node_id": "I_kwDOGBlvNc5SSHS-",
  "number": 3298,
  "title": "Add arbitrary data to each broadcast",
  "user": {
    "login": "adhusson",
    "id": 2977,
    "node_id": "MDQ6VXNlcjI5Nzc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2977?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/adhusson",
    "html_url": "https://github.com/adhusson",
    "followers_url": "https://api.github.com/users/adhusson/followers",
    "following_url": "https://api.github.com/users/adhusson/following{/other_user}",
    "gists_url": "https://api.github.com/users/adhusson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/adhusson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/adhusson/subscriptions",
    "organizations_url": "https://api.github.com/users/adhusson/orgs",
    "repos_url": "https://api.github.com/users/adhusson/repos",
    "events_url": "https://api.github.com/users/adhusson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/adhusson/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    },
    {
      "id": 3703752960,
      "node_id": "LA_kwDOGBlvNc7cwskA",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-cheatcodes",
      "name": "A-cheatcodes",
      "color": "FBCA04",
      "default": false,
      "description": "Area: cheatcodes"
    },
    {
      "id": 4182991461,
      "node_id": "LA_kwDOGBlvNc75U2Jl",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-script",
      "name": "Cmd-forge-script",
      "color": "006B75",
      "default": false,
      "description": "Command: forge script"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-09-21T07:46:37Z",
  "updated_at": "2023-03-09T23:26:35Z",
  "closed_at": "2023-03-09T23:26:35Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nIt would be useful for processes that manage broadcast log files if each tx could have arbitrary data attached. My use case is giving names to deployed contracts.\r\n\r\nThe interface could look like this:\r\n\r\n```solidity\r\nfunction broadcast(bytes calldata) external;\r\nfunction broadcast(address, bytes calldata) external;\r\nfunction broadcast(uint256, bytes calldata) external;\r\n```\r\n\r\nand be used like this:\r\n```solidity\r\nvm.broadcast(bytes(\"BetterContract\"));\r\nnew Contract();\r\n\r\n// struct TxInfo({uint version; string message;})\r\nvm.broadcast(abi.encode(TxInfo({version: 2, message: \"updating the oracle\"})));\r\noracle.update();\r\n```\r\n\r\nThe resulting JSON would look like this:\r\n\r\n```json\r\n{\r\n  \"transactions\": [\r\n    {\r\n      \"hash\": \"0x16cd3c8ce4f1f3d03582e1d1132c90297469b36e5ee74fc9957cdceb4e3f51f6\",\r\n      \"transactionType\": \"CREATE\",\r\n      \"memo\": <arbitrary bytes>\r\n     }\r\n   ]\r\n }\r\n ```\r\n\r\nOr, to be easier to read in the JSON by default, just allow a `string`:\r\n```solidity\r\nfunction broadcast(string calldata) external;\r\nfunction broadcast(address, string calldata) external;\r\nfunction broadcast(uint256, string calldata) external;\r\n```\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3298/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3298/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1254033893",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3298#issuecomment-1254033893",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3298",
    "id": 1254033893,
    "node_id": "IC_kwDOGBlvNc5Kvwnl",
    "user": {
      "login": "0xPhaze",
      "id": 103113487,
      "node_id": "U_kgDOBiVjDw",
      "avatar_url": "https://avatars.githubusercontent.com/u/103113487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xPhaze",
      "html_url": "https://github.com/0xPhaze",
      "followers_url": "https://api.github.com/users/0xPhaze/followers",
      "following_url": "https://api.github.com/users/0xPhaze/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xPhaze/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xPhaze/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xPhaze/subscriptions",
      "organizations_url": "https://api.github.com/users/0xPhaze/orgs",
      "repos_url": "https://api.github.com/users/0xPhaze/repos",
      "events_url": "https://api.github.com/users/0xPhaze/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xPhaze/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-21T17:49:27Z",
    "updated_at": "2022-09-21T17:53:27Z",
    "author_association": "NONE",
    "body": "Throwing in the idea of being able to tag certain broadcast transactions, and being able to reference them later via a cheat-code using something like shown in foundry-rs/forge-std#138.\r\n```solidity\r\nfunction readTx1559ByTag(string memory tag)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1254033893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1462972055",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3298#issuecomment-1462972055",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3298",
    "id": 1462972055,
    "node_id": "IC_kwDOGBlvNc5XMy6X",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-09T23:26:35Z",
    "updated_at": "2023-03-09T23:26:35Z",
    "author_association": "COLLABORATOR",
    "body": "IIUC these feature requests sound like things that fit within the scope of #3911, i.e. we probably don't want to hack these into `forge script` â€” my impression of this issue is that it's a way to help manage deploy scripts/pipelines over the lifetime of a project, so going to close this as a result ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1462972055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
