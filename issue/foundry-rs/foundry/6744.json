{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6744",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6744/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6744/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6744/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6744",
  "id": 2072947873,
  "node_id": "I_kwDOGBlvNc57jqyh",
  "number": 6744,
  "title": "Add `bytes` to Base64 encoding in VM",
  "user": {
    "login": "ernestognw",
    "id": 33379285,
    "node_id": "MDQ6VXNlcjMzMzc5Mjg1",
    "avatar_url": "https://avatars.githubusercontent.com/u/33379285?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ernestognw",
    "html_url": "https://github.com/ernestognw",
    "followers_url": "https://api.github.com/users/ernestognw/followers",
    "following_url": "https://api.github.com/users/ernestognw/following{/other_user}",
    "gists_url": "https://api.github.com/users/ernestognw/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ernestognw/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ernestognw/subscriptions",
    "organizations_url": "https://api.github.com/users/ernestognw/orgs",
    "repos_url": "https://api.github.com/users/ernestognw/repos",
    "events_url": "https://api.github.com/users/ernestognw/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ernestognw/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2024-01-09T18:39:34Z",
  "updated_at": "2024-01-10T17:41:01Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nForge\r\n\r\n### Describe the feature you would like\r\n\r\n#### Motivation\r\n\r\nBase64 encoding has become relevant in Solidity development for reasons like on-chain metadata (NFTs), and seems there's an [upcoming demand for Base64-URL encoding](https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4692) driven by passkey-based authentication (relying on WebAuthn).\r\n\r\nAs of OZ Contracts, we're working on a [Base64URL implementation](https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4822) and we'd love to fuzz the implementation. It'd be great if the `Vm.sol` had a set of functions for Base64 encoding.\r\n\r\n#### Proposal\r\n\r\nConsider adding the following function signatures to `Vm.sol`:\r\n\r\n```rust\r\n// crates/cheatcodes/spec/src/vm.rs\r\n// ======== Utilities ========\r\n\r\n...\r\n\r\n// -------- Base64 --------\r\n#[cheatcode(group = Base64)]\r\nfunction toBase64(bytes calldata data) external pure returns (string memory);\r\n#[cheatcode(group = Base64)]\r\nfunction toBase64(string calldata data) external pure returns (string memory);\r\n#[cheatcode(group = Base64)]\r\nfunction toBase64URL(bytes calldata data) external pure returns (string memory);\r\n#[cheatcode(group = Base64)]\r\nfunction toBase64URL(string calldata data) external pure returns (string memory);\r\n```\r\n\r\nSuch functions can be implemented using this [Base64 create](https://docs.rs/base64/latest/base64/), which would provide a reference implementation to fuzz the Solidity version against.\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6744/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6744/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
