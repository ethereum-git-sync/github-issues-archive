{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/934",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/934/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/934/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/934/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/934",
  "id": 1168091068,
  "node_id": "I_kwDOGBlvNc5Fn6e8",
  "number": 934,
  "title": "Report from beginner in Solidity and Foundry ",
  "user": {
    "login": "nikkolasg",
    "id": 2564747,
    "node_id": "MDQ6VXNlcjI1NjQ3NDc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2564747?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nikkolasg",
    "html_url": "https://github.com/nikkolasg",
    "followers_url": "https://api.github.com/users/nikkolasg/followers",
    "following_url": "https://api.github.com/users/nikkolasg/following{/other_user}",
    "gists_url": "https://api.github.com/users/nikkolasg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nikkolasg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nikkolasg/subscriptions",
    "organizations_url": "https://api.github.com/users/nikkolasg/orgs",
    "repos_url": "https://api.github.com/users/nikkolasg/repos",
    "events_url": "https://api.github.com/users/nikkolasg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nikkolasg/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-03-14T09:15:29Z",
  "updated_at": "2022-08-15T18:45:06Z",
  "closed_at": "2022-08-15T18:45:05Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nHi,\r\n\r\nI've recently embarked on the path of developing on Solidity and I started directly with Foundry (no real previous experience with Truffle etc). I am on Foundry because my application code needs to be in Rust so I thought I would do the whole thing in Rust, which seems like a good idea :) \r\nI've been pretty far in where I wanted to go and I've noted several items that I think could really benefit from some care as to help the development experience on Foundry/Forge. \r\n\r\n1. Bindings should provide way to deploy contract natively easily. Currently need to read the JSON file etc it's cumbersome, while a `MyContract::deploy()` should be in reach I believe.\r\n2. Using Ganache should just work ideally - I had to specify the chain id and the \"legacy()\" each time. Maybe for the former we can detect the chain id or take by default the 1337 from Ganache.\r\n3. More examples on how to use the low levels -> passing from U256 to uint? I had to go really deep in the stack passing from ether-rs to ethabi to ethereum-types to find how to bring it back to primitive rust value.\r\n4. More documentation about send() vs call() and maybe restrctions or warnings: call() currently doesn't set the from: address also\r\n5. Compatibilities with versions of forge. My bindings were not the same on CI and local while both versions were 0.1.0 only the commit changed.\r\n\r\nThanks a lot for the work here, except these glitches, I'm really loving it so far, it's a great platform ! Well done !\r\n\n\n### Additional context\n\n_No response_",
  "closed_by": {
    "login": "onbjerg",
    "id": 8862627,
    "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/onbjerg",
    "html_url": "https://github.com/onbjerg",
    "followers_url": "https://api.github.com/users/onbjerg/followers",
    "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
    "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
    "organizations_url": "https://api.github.com/users/onbjerg/orgs",
    "repos_url": "https://api.github.com/users/onbjerg/repos",
    "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/onbjerg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/934/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 2,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/934/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1066558374",
    "html_url": "https://github.com/foundry-rs/foundry/issues/934#issuecomment-1066558374",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/934",
    "id": 1066558374,
    "node_id": "IC_kwDOGBlvNc4_kmOm",
    "user": {
      "login": "mattsse",
      "id": 19890894,
      "node_id": "MDQ6VXNlcjE5ODkwODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19890894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattsse",
      "html_url": "https://github.com/mattsse",
      "followers_url": "https://api.github.com/users/mattsse/followers",
      "following_url": "https://api.github.com/users/mattsse/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattsse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattsse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattsse/subscriptions",
      "organizations_url": "https://api.github.com/users/mattsse/orgs",
      "repos_url": "https://api.github.com/users/mattsse/repos",
      "events_url": "https://api.github.com/users/mattsse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattsse/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-14T09:27:20Z",
    "updated_at": "2022-03-14T09:27:20Z",
    "author_association": "MEMBER",
    "body": "this is very valuable feedback, thank you.\r\nabigen! deploy is already tracked here https://github.com/gakonst/ethers-rs/issues/1013\r\n\r\nwrt `legacy()` this is also not limited to ganache. imo setting legacy explicitly is the safer way, however this breaks compatibility with EIP1559. \r\nwe already have some helper functions in foundry that deterime if a chain needs legacy or not. So maybe we can also embed this in the Provider as something like `is_legacy: bool` that can be set once. cc @gakonst ",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1066558374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1066580223",
    "html_url": "https://github.com/foundry-rs/foundry/issues/934#issuecomment-1066580223",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/934",
    "id": 1066580223,
    "node_id": "IC_kwDOGBlvNc4_krj_",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-14T09:51:05Z",
    "updated_at": "2022-03-14T09:51:05Z",
    "author_association": "MEMBER",
    "body": "Great report, thank you for that ðŸ˜„ WRT your fifth point, Foundry is still moving really fast so the artifacts are changing as well and there will be incompatibilities until we cut a stable release",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1066580223/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191160766",
    "html_url": "https://github.com/foundry-rs/foundry/issues/934#issuecomment-1191160766",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/934",
    "id": 1191160766,
    "node_id": "IC_kwDOGBlvNc5G_6u-",
    "user": {
      "login": "yohanelly95",
      "id": 33081891,
      "node_id": "MDQ6VXNlcjMzMDgxODkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33081891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yohanelly95",
      "html_url": "https://github.com/yohanelly95",
      "followers_url": "https://api.github.com/users/yohanelly95/followers",
      "following_url": "https://api.github.com/users/yohanelly95/following{/other_user}",
      "gists_url": "https://api.github.com/users/yohanelly95/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yohanelly95/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yohanelly95/subscriptions",
      "organizations_url": "https://api.github.com/users/yohanelly95/orgs",
      "repos_url": "https://api.github.com/users/yohanelly95/repos",
      "events_url": "https://api.github.com/users/yohanelly95/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yohanelly95/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T07:50:06Z",
    "updated_at": "2022-07-21T07:50:06Z",
    "author_association": "NONE",
    "body": "Hey, so adding `--legacy` tag with my deployment command, and there is no response. Usually I see something like this `No files changed, compilation skipped\r\nDeployer: 0x645efC03Af16a2D8D9F67587be502830E80627A2\r\nDeployed to: 0xcd0db8884A9EAcC5A5DAd1E4537DC8197EB5794C\r\nTransaction hash: 0xf514a9601ac7fc54336fae740a96ed1f25231d7380de789fc087b7588a4b5c68\r\n`. But with legacy there is nothing, no response although the deployment is successful. I would need the response since I run a post deployment script, so I'll need the contract addresses that were deployed. Is there a way better way to deploy multiple contracts and get their addresses ?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1191160766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1215602182",
    "html_url": "https://github.com/foundry-rs/foundry/issues/934#issuecomment-1215602182",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/934",
    "id": 1215602182,
    "node_id": "IC_kwDOGBlvNc5IdJ4G",
    "user": {
      "login": "onbjerg",
      "id": 8862627,
      "node_id": "MDQ6VXNlcjg4NjI2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8862627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onbjerg",
      "html_url": "https://github.com/onbjerg",
      "followers_url": "https://api.github.com/users/onbjerg/followers",
      "following_url": "https://api.github.com/users/onbjerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/onbjerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onbjerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onbjerg/subscriptions",
      "organizations_url": "https://api.github.com/users/onbjerg/orgs",
      "repos_url": "https://api.github.com/users/onbjerg/repos",
      "events_url": "https://api.github.com/users/onbjerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onbjerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-15T18:45:05Z",
    "updated_at": "2022-08-15T18:45:05Z",
    "author_association": "MEMBER",
    "body": "Thank you for this feedback again! :smile: I will close this issue, addressing some of your points, but I would highly encourage you to post feedback for issues you feel haven't been addressed since you opened this one so we can take a look at them individually.\r\n\r\nSome of your feedback also seems like it is more for ethers-rs - I would highly encourage you to post the feedback there as well if relevant :smile: \r\n\r\n>Bindings should provide way to deploy contract natively easily. Currently need to read the JSON file etc it's cumbersome, while a MyContract::deploy() should be in reach I believe.\r\n\r\nThis is now supported - see https://github.com/gakonst/ethers-rs/issues/1013\r\n\r\n>Using Ganache should just work ideally - I had to specify the chain id and the \"legacy()\" each time. Maybe for the former we can detect the chain id or take by default the 1337 from Ganache.\r\n\r\nThis seems like ethers-rs feedback? In any case, we also have Anvil now which supports EIP1559\r\n\r\n>Compatibilities with versions of forge. My bindings were not the same on CI and local while both versions were 0.1.0 only the commit changed.\r\n\r\n1.0 soon:tm: although we might never have perfect 1:1 lock-step with ethers-rs so stuff might be out of sync from time to time. The version numbers now are more like milestones - we release a new version nightly.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1215602182/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
