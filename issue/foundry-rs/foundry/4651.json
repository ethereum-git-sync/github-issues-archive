{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4651",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4651/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4651/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4651/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4651",
  "id": 1641363547,
  "node_id": "I_kwDOGBlvNc5h1Thb",
  "number": 4651,
  "title": "feat(cast): Get interface of proxy implementation with `cast interface`",
  "user": {
    "login": "ckoopmann",
    "id": 15629702,
    "node_id": "MDQ6VXNlcjE1NjI5NzAy",
    "avatar_url": "https://avatars.githubusercontent.com/u/15629702?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ckoopmann",
    "html_url": "https://github.com/ckoopmann",
    "followers_url": "https://api.github.com/users/ckoopmann/followers",
    "following_url": "https://api.github.com/users/ckoopmann/following{/other_user}",
    "gists_url": "https://api.github.com/users/ckoopmann/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ckoopmann/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ckoopmann/subscriptions",
    "organizations_url": "https://api.github.com/users/ckoopmann/orgs",
    "repos_url": "https://api.github.com/users/ckoopmann/repos",
    "events_url": "https://api.github.com/users/ckoopmann/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ckoopmann/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3703752609,
      "node_id": "LA_kwDOGBlvNc7cwseh",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-cast",
      "name": "C-cast",
      "color": "5319E7",
      "default": false,
      "description": "Command: cast"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-03-27T04:49:22Z",
  "updated_at": "2023-03-27T14:52:28Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Component\r\n\r\nCast\r\n\r\n### Describe the feature you would like\r\n\r\nCurrently when using `cast interface` with an upgradeable proxy contract, it only generates the interface of the proxy and does not include the implementation functions which are usually of more interest.\r\n\r\nAt least for standard transparent proxy implementations where etherscan also provides the `read as proxy` / `write as proxy` options, it should be possible to get the abi of the implementation contract and generate an interface based on that.\r\n\r\nImo there are two options regarding the interface here:\r\n1. Always add the functions of the implementation contract to the interface (in addition to the proxy / update functions)\r\n2. Add `--as-proxy` flag to get the implementation interface instead of the proxy interface.\r\n\r\nIn the case of a simple proxy this just removes the extra step of the user having to manually look up the implementation address.\r\nIt would be more powerful though, if we could get this to work for Diamond proxys, where figuring out all the facets implementation manually can be non-trivial / time consuming. Being able to assemble the full contract interface automatically could be a big help there.\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4651/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4651/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
