{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6186",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6186/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6186/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6186/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/6186",
  "id": 1972583009,
  "node_id": "I_kwDOGBlvNc51kzph",
  "number": 6186,
  "title": "Improved Monorepo Profile Management for Enhanced CI/CD",
  "user": {
    "login": "rmcmk",
    "id": 13653440,
    "node_id": "MDQ6VXNlcjEzNjUzNDQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/13653440?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rmcmk",
    "html_url": "https://github.com/rmcmk",
    "followers_url": "https://api.github.com/users/rmcmk/followers",
    "following_url": "https://api.github.com/users/rmcmk/following{/other_user}",
    "gists_url": "https://api.github.com/users/rmcmk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rmcmk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rmcmk/subscriptions",
    "organizations_url": "https://api.github.com/users/rmcmk/orgs",
    "repos_url": "https://api.github.com/users/rmcmk/repos",
    "events_url": "https://api.github.com/users/rmcmk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rmcmk/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-11-01T15:19:56Z",
  "updated_at": "2023-11-01T15:59:33Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge, Cast, Anvil, Chisel\n\n### Describe the feature you would like\n\n## Improved Monorepo Profile Management for Enhanced CI/CD\r\n\r\n### Introduction\r\n\r\nOur project is a monorepo where packages are organized into Foundry profiles, each with its own set of scripts and tests. In many cases, running tests across all profiles or recompiling the entire codebase is essential, especially within a CI/CD pipeline. However, achieving this currently poses challenges, which can only be overcome by duplicating profile definitions or manually parsing the Foundry configuration.\r\n\r\n### Proposed Features\r\n\r\n1. **Inclusive All Profiles Option**\r\n\r\n   - **Option 1:** Introduce a `foundry.toml` setting that allows including all profiles when executing commands if no `FOUNDRY_PROFILE` environment variable is set.\r\n   \r\n   - **Option 2:** Implement a `--all-profiles` command-line flag for executing operations across all profiles.\r\n\r\n2. **Enhanced Profile Tooling for CI/CD**\r\n\r\n   - Develop additional profile management tools to streamline CI/CD processes, including:\r\n\r\n      - **Profile Listing:** Implement a command to list all available profiles within the monorepo.\r\n   \r\n      - **Multi-Profile Support:** Enable the use of multiple profiles through a new environment variable, such as `FOUNDRY_PROFILES=\"a,b,c\"`.\r\n\r\n### Conclusion\r\nI believe that these proposed features would be beneficial for our monorepo, but I recognize that they may not represent the ultimate solutions to the challenges we face. This issue is intended to initiate a constructive discussion around improving Foundry profiles and profile management, so if I'm out of line or am totally missing something, please put me in my place, haha! Your feedback, insights, and alternative ideas are highly encouraged as we collectively work towards enhancing our development process.\r\n\r\n\n\n### Additional context\n\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/6186/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6186/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1789216957",
    "html_url": "https://github.com/foundry-rs/foundry/issues/6186#issuecomment-1789216957",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/6186",
    "id": 1789216957,
    "node_id": "IC_kwDOGBlvNc5qpUi9",
    "user": {
      "login": "rmcmk",
      "id": 13653440,
      "node_id": "MDQ6VXNlcjEzNjUzNDQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/13653440?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmcmk",
      "html_url": "https://github.com/rmcmk",
      "followers_url": "https://api.github.com/users/rmcmk/followers",
      "following_url": "https://api.github.com/users/rmcmk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmcmk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmcmk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmcmk/subscriptions",
      "organizations_url": "https://api.github.com/users/rmcmk/orgs",
      "repos_url": "https://api.github.com/users/rmcmk/repos",
      "events_url": "https://api.github.com/users/rmcmk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmcmk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-01T15:59:13Z",
    "updated_at": "2023-11-01T15:59:33Z",
    "author_association": "NONE",
    "body": "**Semi-related bug:**\r\n\r\nI'm encountering an issue when trying to use the Forge formatter in Visual Studio Code. It appears that the formatter doesn't work correctly unless the `FOUNDRY_PROFILE` environment variable is set. This requires running a manual command in the terminal: `FOUNDRY_PROFILE=\"abcdef\" forge fmt`.\r\n\r\n**Expected Behavior:**\r\n\r\nThe Forge formatter should be able to detect and use the `FOUNDRY_PROFILE` environment variable without the need for manual setup. Users should be able to format files in VSC seamlessly.\r\n\r\nShould I open a new issue for this?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1789216957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
