{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5159",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5159/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5159/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5159/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/5159",
  "id": 1757651457,
  "node_id": "I_kwDOGBlvNc5ow6IB",
  "number": 5159,
  "title": "`cheatcodes`: `expectRevert` mangles return data on low level calls",
  "user": {
    "login": "Evalir",
    "id": 26014927,
    "node_id": "MDQ6VXNlcjI2MDE0OTI3",
    "avatar_url": "https://avatars.githubusercontent.com/u/26014927?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Evalir",
    "html_url": "https://github.com/Evalir",
    "followers_url": "https://api.github.com/users/Evalir/followers",
    "following_url": "https://api.github.com/users/Evalir/following{/other_user}",
    "gists_url": "https://api.github.com/users/Evalir/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Evalir/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Evalir/subscriptions",
    "organizations_url": "https://api.github.com/users/Evalir/orgs",
    "repos_url": "https://api.github.com/users/Evalir/repos",
    "events_url": "https://api.github.com/users/Evalir/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Evalir/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3334394228,
      "node_id": "MDU6TGFiZWwzMzM0Mzk0MjI4",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-bug",
      "name": "T-bug",
      "color": "d73a4a",
      "default": false,
      "description": "Type: bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-06-14T21:08:22Z",
  "updated_at": "2023-06-14T21:19:37Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Have you ensured that all of these are up to date?\n\n- [X] Foundry\n- [X] Foundryup\n\n### What version of Foundry are you on?\n\n_No response_\n\n### What command(s) is the bug in?\n\n_No response_\n\n### Operating System\n\nNone\n\n### Describe the bug\n\nWhen doing low level calls, it's expected that you can match the calldata returned with `vm.expectRevert`, but this is not possibleâ€”somewhere when reverting on low level calls, the calldata is being lost.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/5159/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5159/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1591995117",
    "html_url": "https://github.com/foundry-rs/foundry/issues/5159#issuecomment-1591995117",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/5159",
    "id": 1591995117,
    "node_id": "IC_kwDOGBlvNc5e4-rt",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-14T21:15:26Z",
    "updated_at": "2023-06-14T21:19:37Z",
    "author_association": "COLLABORATOR",
    "body": "Reproduction:\r\n\r\n```solidity\r\ncontract A {\r\n    function foo() public {\r\n        revert(\"error message\");\r\n    }\r\n}\r\n\r\ncontract MyTest is Test {\r\n    A a;\r\n\r\n    function setUp() public {\r\n        a = new A();\r\n    }\r\n\r\n    // Passes, which makes sense\r\n    function test1() public {\r\n        vm.expectRevert(\"error message\");\r\n        a.foo();\r\n    }\r\n\r\n    // This test fails, and the return data is 512 bytes of zeros\r\n    function test2() public {\r\n        vm.expectRevert(\"error message\"); // <-- We use expectRevert\r\n        (bool ok, bytes memory data) = address(a).call(abi.encodeCall(A.foo, ()));\r\n        assertTrue(ok, \"call should fail\"); //  <-- `ok` flipped from false to true by `vm.expectRevert`\r\n\r\n        bytes memory expectedErr = abi.encodeWithSignature(\"Error(string)\", (\"error message\"));\r\n        console2.logBytes(data);\r\n        console2.logBytes(expectedErr);\r\n        assertEq(data, expectedErr);\r\n    }\r\n\r\n    // This test passes\r\n    function test3() public {\r\n        // No expectRevert here\r\n        (bool ok, bytes memory data) = address(a).call(abi.encodeCall(A.foo, ()));\r\n        assertFalse(ok, \"call should fail\"); // <-- therefore `ok` is false here\r\n\r\n        bytes memory expectedErr = abi.encodeWithSignature(\"Error(string)\", (\"error message\"));\r\n        console2.logBytes(data);\r\n        console2.logBytes(expectedErr);\r\n        assertEq(data, expectedErr);\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1591995117/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
