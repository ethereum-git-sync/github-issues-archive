{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/310",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/310/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/310/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/310/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/310",
  "id": 1088692070,
  "node_id": "I_kwDOGBlvNc5A5B9m",
  "number": 310,
  "title": "expect emit ",
  "user": {
    "login": "wilsoncusack",
    "id": 6678357,
    "node_id": "MDQ6VXNlcjY2NzgzNTc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6678357?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wilsoncusack",
    "html_url": "https://github.com/wilsoncusack",
    "followers_url": "https://api.github.com/users/wilsoncusack/followers",
    "following_url": "https://api.github.com/users/wilsoncusack/following{/other_user}",
    "gists_url": "https://api.github.com/users/wilsoncusack/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wilsoncusack/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wilsoncusack/subscriptions",
    "organizations_url": "https://api.github.com/users/wilsoncusack/orgs",
    "repos_url": "https://api.github.com/users/wilsoncusack/repos",
    "events_url": "https://api.github.com/users/wilsoncusack/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wilsoncusack/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-12-26T03:34:41Z",
  "updated_at": "2021-12-29T21:22:38Z",
  "closed_at": "2021-12-29T21:22:38Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "In tests, be able to expect that an event is emitted with particular parameter values. ",
  "closed_by": {
    "login": "brockelmore",
    "id": 31553173,
    "node_id": "MDQ6VXNlcjMxNTUzMTcz",
    "avatar_url": "https://avatars.githubusercontent.com/u/31553173?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brockelmore",
    "html_url": "https://github.com/brockelmore",
    "followers_url": "https://api.github.com/users/brockelmore/followers",
    "following_url": "https://api.github.com/users/brockelmore/following{/other_user}",
    "gists_url": "https://api.github.com/users/brockelmore/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brockelmore/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brockelmore/subscriptions",
    "organizations_url": "https://api.github.com/users/brockelmore/orgs",
    "repos_url": "https://api.github.com/users/brockelmore/repos",
    "events_url": "https://api.github.com/users/brockelmore/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brockelmore/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/310/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/310/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1001622928",
    "html_url": "https://github.com/foundry-rs/foundry/issues/310#issuecomment-1001622928",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/310",
    "id": 1001622928,
    "node_id": "IC_kwDOGBlvNc47s42Q",
    "user": {
      "login": "brockelmore",
      "id": 31553173,
      "node_id": "MDQ6VXNlcjMxNTUzMTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31553173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brockelmore",
      "html_url": "https://github.com/brockelmore",
      "followers_url": "https://api.github.com/users/brockelmore/followers",
      "following_url": "https://api.github.com/users/brockelmore/following{/other_user}",
      "gists_url": "https://api.github.com/users/brockelmore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brockelmore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brockelmore/subscriptions",
      "organizations_url": "https://api.github.com/users/brockelmore/orgs",
      "repos_url": "https://api.github.com/users/brockelmore/repos",
      "events_url": "https://api.github.com/users/brockelmore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brockelmore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-27T15:33:30Z",
    "updated_at": "2021-12-27T15:41:20Z",
    "author_association": "MEMBER",
    "body": "```solidity\r\n//    check matching topic0 (always), topic1,topic2,topic3,data\r\nvm.expectEmit(false, false, false, true); \r\nemit Transfer(0, 1337, 1337);\r\nerc20.transfer(to, 1337);\r\n```\r\n\r\nWhere we do an expectEmit, passing in whether we check matching for the topics and data we want (i.e. in the above we check topic0 (event sig), and the data (1337), but not topic 1 (the from address) or topic 2 (the to address)).\r\n\r\nexpectEmit grabs the next emitted log and stores the topics that were set to true, and the data if set to true. Then in the next call, it would look for that event in any of the logs.\r\n\r\nThoughts?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1001622928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
