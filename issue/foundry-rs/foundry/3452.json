{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3452",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3452/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3452/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3452/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/3452",
  "id": 1396636877,
  "node_id": "I_kwDOGBlvNc5TPvzN",
  "number": 3452,
  "title": "feat: more flexible/powerful ways to define and test invariants",
  "user": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3394554570,
      "node_id": "LA_kwDOGBlvNc7KVMrK",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/A-fuzzing",
      "name": "A-fuzzing",
      "color": "FBCA04",
      "default": false,
      "description": "Area: fuzzing"
    },
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    },
    {
      "id": 3593644915,
      "node_id": "LA_kwDOGBlvNc7WMqtz",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/Cmd-forge-test",
      "name": "Cmd-forge-test",
      "color": "006B75",
      "default": false,
      "description": "Command: forge test"
    },
    {
      "id": 3703752787,
      "node_id": "LA_kwDOGBlvNc7cwshT",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/C-forge",
      "name": "C-forge",
      "color": "5319E7",
      "default": false,
      "description": "Command: forge"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-10-04T17:48:34Z",
  "updated_at": "2023-01-23T15:39:44Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nThis is an idea / open for discussion, feedback encouraged.\r\n\r\nSome invariants are hard to specify with the current UX, such as \"only calls from `<addressX>` are allowed to modify the `allowance[addressX][spender]` mapping\". I haven't thought of a way to enable things like this without a preprocessor/domain-specific language, so here is one proposal to test for things like this.\r\n\r\nA modifier-like behavior for storage variables could allow this, i.e. solidity code that executes before and after a given slot is touched to verify some property of that slot. For example, below we use a comment to annotate the `balanceOf` function, which tells forge to run the `verifyBalanceOf` method before/after a slot in that mapping is changed. In our test contract, we can see that definition: it checks the start and end balance of the user. If balance decreased, make sure the required conditions for modification have been met.\r\n\r\n```solidity\r\ncontract Token {\r\n  /// @invariant verifyBalanceOf\r\n  mapping(address => uint256) public balanceOf;\r\n\r\n  // -- snip --\r\n}\r\n\r\ncontract TokenTest is Token {\r\n  // Since this is testing a mapping, we have one input which is the mapping key\r\n  modifier verifyBalanceOf(address user) public {\r\n    uint256 startBalance = balanceOf(user);\r\n    _;\r\n    uint256 endBalance = balanceOf(user);\r\n    if (endBalance < startBalance) {\r\n      // balance decreased, ensure this was authorized\r\n      assert(msg.sender == user || allowances[user][msg.sender] >= startBalance - endBalance);\r\n    }\r\n  }\r\n}\r\n```\n\n### Additional context\n\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/3452/reactions",
    "total_count": 2,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3452/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1400493025",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3452#issuecomment-1400493025",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3452",
    "id": 1400493025,
    "node_id": "IC_kwDOGBlvNc5TedPh",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-23T15:00:40Z",
    "updated_at": "2023-01-23T15:00:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is an interesting proposal, but just so I understand it correctly, is the idea to annotate the production contract with this sort of comment?\r\n\r\n```solidity\r\n/// @invariant verifyBalanceOf\r\n```\r\n\r\nOr some wrapper test contract that is used only when testing invariants?",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1400493025/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1400526551",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3452#issuecomment-1400526551",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3452",
    "id": 1400526551,
    "node_id": "IC_kwDOGBlvNc5TelbX",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-23T15:20:11Z",
    "updated_at": "2023-01-23T15:20:11Z",
    "author_association": "COLLABORATOR",
    "body": "The intent was to annotate the production contract, just because it seems a lot cleaner/simpler. There is some precedent for this, e.g. slither and scribble support using custom comments to convey info to them. Totally open to alternative UX here though",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1400526551/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1400539144",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3452#issuecomment-1400539144",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3452",
    "id": 1400539144,
    "node_id": "IC_kwDOGBlvNc5TeogI",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-23T15:28:12Z",
    "updated_at": "2023-01-23T15:28:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see, thanks for confirming.\r\n\r\nIn this case, I will make a similar proposal to that made in #4085, which is to use the NatSpec prefix `@custom:`:\r\n\r\n```solidity\r\n/// @custom:invariant verifyBalanceOf\r\n```\r\n\r\nMight be slightly more verbose but if my understanding of NatSpec is right, typing it out like this would include the name of the invariant in the contract ABI.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1400539144/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1400548512",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3452#issuecomment-1400548512",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3452",
    "id": 1400548512,
    "node_id": "IC_kwDOGBlvNc5Teqyg",
    "user": {
      "login": "mds1",
      "id": 17163988,
      "node_id": "MDQ6VXNlcjE3MTYzOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mds1",
      "html_url": "https://github.com/mds1",
      "followers_url": "https://api.github.com/users/mds1/followers",
      "following_url": "https://api.github.com/users/mds1/following{/other_user}",
      "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
      "organizations_url": "https://api.github.com/users/mds1/orgs",
      "repos_url": "https://api.github.com/users/mds1/repos",
      "events_url": "https://api.github.com/users/mds1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mds1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-23T15:33:29Z",
    "updated_at": "2023-01-23T15:33:29Z",
    "author_association": "COLLABORATOR",
    "body": "Main downside there is you need at least solidity 0.8.2, otherwise I believe compilation fails due to invalid natspec tag (probably the same issue with my original syntax). We'd want a custom comment syntax, e.g. slither uses `//slither-disable-next-line DETECTOR_NAME`, perhaps something like `// forge-invariant` to mirror the supported `// forgefmt` syntax",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1400548512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1400557642",
    "html_url": "https://github.com/foundry-rs/foundry/issues/3452#issuecomment-1400557642",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/3452",
    "id": 1400557642,
    "node_id": "IC_kwDOGBlvNc5TetBK",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-23T15:39:44Z",
    "updated_at": "2023-01-23T15:39:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "argh, shoot, wasn't aware that compilation fails prior to 0.8.2!\r\n\r\nCustom comment syntax should be fine, though.",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1400557642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
