{
  "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4997",
  "repository_url": "https://api.github.com/repos/foundry-rs/foundry",
  "labels_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4997/labels{/name}",
  "comments_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4997/comments",
  "events_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4997/events",
  "html_url": "https://github.com/foundry-rs/foundry/issues/4997",
  "id": 1718493206,
  "node_id": "I_kwDOGBlvNc5mbiAW",
  "number": 4997,
  "title": "feature: make tests fail when some of the emitted events aren't explicitly \"expected\"",
  "user": {
    "login": "IaroslavMazur",
    "id": 22785348,
    "node_id": "MDQ6VXNlcjIyNzg1MzQ4",
    "avatar_url": "https://avatars.githubusercontent.com/u/22785348?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/IaroslavMazur",
    "html_url": "https://github.com/IaroslavMazur",
    "followers_url": "https://api.github.com/users/IaroslavMazur/followers",
    "following_url": "https://api.github.com/users/IaroslavMazur/following{/other_user}",
    "gists_url": "https://api.github.com/users/IaroslavMazur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/IaroslavMazur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/IaroslavMazur/subscriptions",
    "organizations_url": "https://api.github.com/users/IaroslavMazur/orgs",
    "repos_url": "https://api.github.com/users/IaroslavMazur/repos",
    "events_url": "https://api.github.com/users/IaroslavMazur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/IaroslavMazur/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3593644820,
      "node_id": "LA_kwDOGBlvNc7WMqsU",
      "url": "https://api.github.com/repos/foundry-rs/foundry/labels/T-feature",
      "name": "T-feature",
      "color": "BFD4F2",
      "default": false,
      "description": "Type: feature"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-05-21T12:52:42Z",
  "updated_at": "2023-06-16T06:01:31Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Component\n\nForge\n\n### Describe the feature you would like\n\nI'd like to be able to configure Foundry tests to fail if, during their execution, some other events have also been emitted besides the ones I've explicitly specified via `vm.expectEmit()`.\r\n\r\nMore precisely, if, in my test, all I do is call a function `f()` that successfully executes and emits an event `E()`, my test succeeds both when I \"vm.expectEmit()\" `E()` - and when I don't \"expect\" it.\r\n\r\nEspecially when Unit Testing, it's natural to want to know everything that is happening during a test, to make sure you're not overlooking some seemingly small things that might transform into more serious problems at Integration Testing - or, worse - in production.\r\n\r\nBesides, if you do care about all of the events emitted during a test, but have forgotten to \"expect\" some of them, you, quite likely, also risk forgetting some extra use-cases related to the missed events that you would like to check for/verify in your test. The Foundry framework notifying you about these missed events would help with this, too.\r\n\r\nI admit that this might not be a behaviour you'd like to have at all times (for example, it'd be too much to have to \"expect\" all of the events emitted during an Integration test). However, I think it's important to be able to get this behaviour (via a configuration setting or something) when you do want/need it!\n\n### Additional context\n\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/4997/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4997/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1556176048",
    "html_url": "https://github.com/foundry-rs/foundry/issues/4997#issuecomment-1556176048",
    "issue_url": "https://api.github.com/repos/foundry-rs/foundry/issues/4997",
    "id": 1556176048,
    "node_id": "IC_kwDOGBlvNc5cwVyw",
    "user": {
      "login": "PaulRBerg",
      "id": 8782666,
      "node_id": "MDQ6VXNlcjg3ODI2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8782666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaulRBerg",
      "html_url": "https://github.com/PaulRBerg",
      "followers_url": "https://api.github.com/users/PaulRBerg/followers",
      "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
      "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
      "repos_url": "https://api.github.com/users/PaulRBerg/repos",
      "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-21T13:07:20Z",
    "updated_at": "2023-05-21T13:14:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Two ideas for how this could be implemented:\r\n\r\nFirst, as a new config option in `foundry.toml`:\r\n\r\n```toml\r\n[profile.default]\r\n  strict_expect_emit = true\r\n```\r\n\r\nSecond, as a new cheat:\r\n\r\n```solidity\r\nvm.expectEmitStrict();\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/foundry-rs/foundry/issues/comments/1556176048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
