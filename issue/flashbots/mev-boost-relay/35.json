{
  "url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/35",
  "repository_url": "https://api.github.com/repos/flashbots/mev-boost-relay",
  "labels_url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/35/labels{/name}",
  "comments_url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/35/comments",
  "events_url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/35/events",
  "html_url": "https://github.com/flashbots/mev-boost-relay/issues/35",
  "id": 1332019465,
  "node_id": "I_kwDOHXha9s5PZQEJ",
  "number": 35,
  "title": "Registration handler is missing negative time diff check",
  "user": {
    "login": "jtraglia",
    "id": 95511699,
    "node_id": "U_kgDOBbFkkw",
    "avatar_url": "https://avatars.githubusercontent.com/u/95511699?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jtraglia",
    "html_url": "https://github.com/jtraglia",
    "followers_url": "https://api.github.com/users/jtraglia/followers",
    "following_url": "https://api.github.com/users/jtraglia/following{/other_user}",
    "gists_url": "https://api.github.com/users/jtraglia/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jtraglia/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jtraglia/subscriptions",
    "organizations_url": "https://api.github.com/users/jtraglia/orgs",
    "repos_url": "https://api.github.com/users/jtraglia/repos",
    "events_url": "https://api.github.com/users/jtraglia/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jtraglia/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-08-08T15:13:44Z",
  "updated_at": "2022-08-11T09:08:27Z",
  "closed_at": "2022-08-11T09:08:26Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "A validator could bypass the timestamp checks and potentially DoS the relay. The problem lies with this check:\r\n\r\nhttps://github.com/flashbots/boost-relay/blob/2137374990edeafcdb18776d1acf40c60f26cefc/services/api/service.go#L450-L454\r\n\r\nActually, there are two ways of exploiting this, both the same root issue:\r\n\r\n### Timestamps less than `startTimestamp`\r\n\r\nThe check above will not throw an error if the time difference (`td`) is negative. With a new validator that has not previously registered with the relay, it could send a billion+ registrations to the relay and it would update the datastore for all of them.\r\n\r\n```python\r\nfor t in range(0, now()):\r\n    send(registration_with_timestamp(t))\r\n```\r\n\r\n### Timestamps greater than `math.MaxInt64`\r\n\r\nIn the check above, it will cast the registration timestamp from `uint64` to `int64`. If the timestamp is greater than `math.MaxInt64` the result will be negative. Similarly to the previous method of exploiting this, a validator could send virtually unlimited number of registrations (9,223,372,036,854,775,808+) to the relay and it would accept all of them.\r\n\r\n### The solution\r\n\r\nCheck that the time difference (`td`) isn't negative. But it might not be quite that simple. If the validator uses the current time when constructing the registration, the timestamp could be less than `startTimestamp` if the time between constructing the registration and its processing is greater than 1 second. Could happen with slower internet speeds. With this in mind, I believe the better solution is to check that the registration is within 10 seconds of the start time in either direction.\r\n\r\nSomething like:\r\n\r\n```go\r\n td := int64(registration.Message.Timestamp) - startTimestamp \r\n if td > 10 { \r\n \trespondError(http.StatusBadRequest, \"timestamp too far in the future\") \r\n \treturn \r\n } else if td < -10 { \r\n \trespondError(http.StatusBadRequest, \"timestamp too old\") \r\n \treturn \r\n }\r\n```",
  "closed_by": {
    "login": "metachris",
    "id": 116939,
    "node_id": "MDQ6VXNlcjExNjkzOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/metachris",
    "html_url": "https://github.com/metachris",
    "followers_url": "https://api.github.com/users/metachris/followers",
    "following_url": "https://api.github.com/users/metachris/following{/other_user}",
    "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
    "organizations_url": "https://api.github.com/users/metachris/orgs",
    "repos_url": "https://api.github.com/users/metachris/repos",
    "events_url": "https://api.github.com/users/metachris/events{/privacy}",
    "received_events_url": "https://api.github.com/users/metachris/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/35/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/35/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/comments/1210523889",
    "html_url": "https://github.com/flashbots/mev-boost-relay/issues/35#issuecomment-1210523889",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/35",
    "id": 1210523889,
    "node_id": "IC_kwDOHXha9s5IJyDx",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-10T11:10:01Z",
    "updated_at": "2022-08-10T11:10:10Z",
    "author_association": "COLLABORATOR",
    "body": "Good points. As commented on the PR, previous registrations are legitimate. We could however set a lower bound at the current time (before the merge), before which we could reject registrations.\r\n\r\nAnd what do we do with timestamps that overrun?",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/comments/1210523889/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/comments/1210683302",
    "html_url": "https://github.com/flashbots/mev-boost-relay/issues/35#issuecomment-1210683302",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/35",
    "id": 1210683302,
    "node_id": "IC_kwDOHXha9s5IKY-m",
    "user": {
      "login": "jtraglia",
      "id": 95511699,
      "node_id": "U_kgDOBbFkkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/95511699?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtraglia",
      "html_url": "https://github.com/jtraglia",
      "followers_url": "https://api.github.com/users/jtraglia/followers",
      "following_url": "https://api.github.com/users/jtraglia/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtraglia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtraglia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtraglia/subscriptions",
      "organizations_url": "https://api.github.com/users/jtraglia/orgs",
      "repos_url": "https://api.github.com/users/jtraglia/repos",
      "events_url": "https://api.github.com/users/jtraglia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtraglia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-10T13:35:19Z",
    "updated_at": "2022-08-10T13:35:19Z",
    "author_association": "COLLABORATOR",
    "body": "Pasting the comment from the PR here for reference:\r\n\r\n> We are. But the relay only writes to the database if a registration is newer than the last known. In this light i don't see how sending old registrations would lead to more db writes ðŸ¤”\r\n\r\nThanks. Yes, previous registrations can still be legitimate. And yes, the relay only writes to the database if it's newer than the last known, but if the validator never sends a registration with a \"sane\" timestamp and instead decides to start with 0 and increment by one each time, they could send as many registrations as they want. These would all be written to the database.\r\n\r\nI somewhat like the idea of setting the lower bound as the merge time (and a placeholder until then). That would lower the number down from the billions to the millions. At the two year anniversary, there would be 63,158,400 seconds (possible database writes) since the merge. But this number will grow each day though. I still think this is too much, but it does sound like a good temporary fix.\r\n\r\n<details closed>\r\n<summary>Code to calculate seconds since (theoretical) merge time</summary>\r\n\r\n```go\r\ncurrentTime, _ := time.Parse(time.RFC1123, \"Mon, 19 Sep 2024 12:00:00 UTC\")\r\nmergeTime, _ := time.Parse(time.RFC1123, \"Mon, 19 Sep 2022 12:00:00 UTC\")\r\ntimeDiff := currentTime.Sub(mergeTime)\r\nfmt.Printf(\"seconds since merge: %f\\n\", timeDiff.Seconds())\r\n```\r\n\r\n</details>\r\n\r\nSo maybe a dumb question, but why must registrations with old timestamps be legitimate? It's an optimization right? To allow validators to send old registrations without needed to generate/sign a new registration every epoch. I don't think that's a very intensive task to perform once an epoch.\r\n\r\n> And what do we do with timestamps that overrun?\r\n\r\nAs long as we parse the timestamp with the `time` package and do calculations with those objects, I think we'll be fine. If someone wants to craft a timestamp with `math.MaxInt64 + 1` it will still parse to a valid date.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/comments/1210683302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/comments/1211200941",
    "html_url": "https://github.com/flashbots/mev-boost-relay/issues/35#issuecomment-1211200941",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/35",
    "id": 1211200941,
    "node_id": "IC_kwDOHXha9s5IMXWt",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-10T19:55:47Z",
    "updated_at": "2022-08-10T19:55:47Z",
    "author_association": "COLLABORATOR",
    "body": "All validators send the registrations at epoch start, which is very bursty. Signing a new registration means potentially 200k new registrations every epoch to process and store at roughly the same moment. It's a lot easier on the relay to only sign on changes, that was the intent at least ",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/comments/1211200941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/comments/1211247787",
    "html_url": "https://github.com/flashbots/mev-boost-relay/issues/35#issuecomment-1211247787",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/35",
    "id": 1211247787,
    "node_id": "IC_kwDOHXha9s5IMiyr",
    "user": {
      "login": "jtraglia",
      "id": 95511699,
      "node_id": "U_kgDOBbFkkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/95511699?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtraglia",
      "html_url": "https://github.com/jtraglia",
      "followers_url": "https://api.github.com/users/jtraglia/followers",
      "following_url": "https://api.github.com/users/jtraglia/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtraglia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtraglia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtraglia/subscriptions",
      "organizations_url": "https://api.github.com/users/jtraglia/orgs",
      "repos_url": "https://api.github.com/users/jtraglia/repos",
      "events_url": "https://api.github.com/users/jtraglia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtraglia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-10T20:41:19Z",
    "updated_at": "2022-08-10T20:41:19Z",
    "author_association": "COLLABORATOR",
    "body": "Okay, I think I understand now. I was under the impression that it was an optimization for validators, but it's actually an optimization for the relay! That makes sense. For now, I think that your idea of IP rate limiting is the right approach. I'd like to revisit the whole concept of requiring validators to re-broadcast registrations. Since validators specify the relays they want to work with, I don't really understand why it's necessary. But this is an issue for another day!",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost-relay/issues/comments/1211247787/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
