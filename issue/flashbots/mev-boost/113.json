{
  "url": "https://api.github.com/repos/flashbots/mev-boost/issues/113",
  "repository_url": "https://api.github.com/repos/flashbots/mev-boost",
  "labels_url": "https://api.github.com/repos/flashbots/mev-boost/issues/113/labels{/name}",
  "comments_url": "https://api.github.com/repos/flashbots/mev-boost/issues/113/comments",
  "events_url": "https://api.github.com/repos/flashbots/mev-boost/issues/113/events",
  "html_url": "https://github.com/flashbots/mev-boost/issues/113",
  "id": 1218849536,
  "node_id": "I_kwDOGZSKs85IpisA",
  "number": 113,
  "title": "at what level should cancellations be allowed, if at all?",
  "user": {
    "login": "obadiaa",
    "id": 19510814,
    "node_id": "MDQ6VXNlcjE5NTEwODE0",
    "avatar_url": "https://avatars.githubusercontent.com/u/19510814?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/obadiaa",
    "html_url": "https://github.com/obadiaa",
    "followers_url": "https://api.github.com/users/obadiaa/followers",
    "following_url": "https://api.github.com/users/obadiaa/following{/other_user}",
    "gists_url": "https://api.github.com/users/obadiaa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/obadiaa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/obadiaa/subscriptions",
    "organizations_url": "https://api.github.com/users/obadiaa/orgs",
    "repos_url": "https://api.github.com/users/obadiaa/repos",
    "events_url": "https://api.github.com/users/obadiaa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/obadiaa/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4082529928,
      "node_id": "LA_kwDOGZSKs87zVnaI",
      "url": "https://api.github.com/repos/flashbots/mev-boost/labels/research%20%F0%9F%92%A1",
      "name": "research ðŸ’¡",
      "color": "0052cc",
      "default": false,
      "description": "Research topic"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-04-28T14:48:13Z",
  "updated_at": "2022-08-09T22:13:49Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "**Description:** \r\nCancellations are a useful feature that allow individuals to cancel transactions they submitted before they land on chain. This feature is particularly useful for people executing cross-domain arbitrage.\r\n\r\nThere are 2 possible 'types' of cancellations:\r\n- searchers cancelling their bundles to the builder\r\n- the builder cancelling their block to the relay/proposer\r\n\r\nThe former is introduced by the builder, in which case this doesn't affect mev-boost code. The latter would concern mev-boost. We focus on this second case.\r\n\r\nNaturally, no cancellation is possible after a header has been signed upon by the proposer - aside from a 'brute-force cancellation' where a relay does not reveal the body of a block. \r\n\r\n**Questions**\r\n- Does allowing cancellations at the mev-boost level opens up a DoS vector for the relay? \r\n  - The DoS here would be a builder submitting blocks, relay checking validity and then receiving cancellation request for it. There is a likely asymmetry between compute needed to cancel a body and re-submit a new one vs checking the validity of a body\r\n- Does allowing cancellations mean bidding is now messed up? please refer to issue #112 for more details here.\r\n  -  In particular, I worry this means someone could bid very high, scare other builders from participating in a round then cancel right before the end. This feel pretty harmless though but I would like to surface the concern.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/113/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/flashbots/mev-boost/issues/113/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1209944942",
    "html_url": "https://github.com/flashbots/mev-boost/issues/113#issuecomment-1209944942",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/113",
    "id": 1209944942,
    "node_id": "IC_kwDOGZSKs85IHktu",
    "user": {
      "login": "abog854",
      "id": 82101619,
      "node_id": "MDQ6VXNlcjgyMTAxNjE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/82101619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abog854",
      "html_url": "https://github.com/abog854",
      "followers_url": "https://api.github.com/users/abog854/followers",
      "following_url": "https://api.github.com/users/abog854/following{/other_user}",
      "gists_url": "https://api.github.com/users/abog854/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abog854/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abog854/subscriptions",
      "organizations_url": "https://api.github.com/users/abog854/orgs",
      "repos_url": "https://api.github.com/users/abog854/repos",
      "events_url": "https://api.github.com/users/abog854/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abog854/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-09T22:13:48Z",
    "updated_at": "2022-08-09T22:13:48Z",
    "author_association": "NONE",
    "body": "I have a related but very specific proposal at the relay level: always use latest block sent by each builder.\r\n\r\nLet's look at block templates that come within a single slot, and how the relay handles them to decide what to forward to proposers:\r\n\r\nCurrently, it seems like relays will use the most profitable block sent by each builder. This is a proposal to use the latest block sent by each builder, instead.\r\n\r\nWhy? This would allow for builders for more sophisticated strategies, where they can decide to not propose a transaction anymore in their blocks.\r\n\r\nNothing else changes. The relay still simulate every block templates that it receive, etc.\r\n\r\nPros:\r\n * It's makes the design space for builders bigger as they are not locked in old block templates that may contain transactions they don't want to submit anymore.\r\n * Lowers the DoS risk a little: you could imagine builder spamming the relay and relying on it to simulate every block, and select the most profitable one. This is impossible if the relay only keeps the last block sent.\r\n\r\nCons:\r\n * If a builder sent a less profitable or invalid block, their previous more profitable block is dropped. However this has no reason to happen, apart from a software bug in the builder: a well-behaved builder should only sent more profitable block templates to relays than their previous one (in the duration of a single slot).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1209944942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
