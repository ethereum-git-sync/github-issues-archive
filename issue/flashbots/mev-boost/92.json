{
  "url": "https://api.github.com/repos/flashbots/mev-boost/issues/92",
  "repository_url": "https://api.github.com/repos/flashbots/mev-boost",
  "labels_url": "https://api.github.com/repos/flashbots/mev-boost/issues/92/labels{/name}",
  "comments_url": "https://api.github.com/repos/flashbots/mev-boost/issues/92/comments",
  "events_url": "https://api.github.com/repos/flashbots/mev-boost/issues/92/events",
  "html_url": "https://github.com/flashbots/mev-boost/issues/92",
  "id": 1204500700,
  "node_id": "I_kwDOGZSKs85Hyzjc",
  "number": 92,
  "title": "Bootstrapping fee recipient mapping to new relays/builders",
  "user": {
    "login": "lightclient",
    "id": 14004106,
    "node_id": "MDQ6VXNlcjE0MDA0MTA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lightclient",
    "html_url": "https://github.com/lightclient",
    "followers_url": "https://api.github.com/users/lightclient/followers",
    "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
    "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
    "organizations_url": "https://api.github.com/users/lightclient/orgs",
    "repos_url": "https://api.github.com/users/lightclient/repos",
    "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lightclient/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4053138209,
      "node_id": "LA_kwDOGZSKs87xlfsh",
      "url": "https://api.github.com/repos/flashbots/mev-boost/labels/brainstorming",
      "name": "brainstorming",
      "color": "5ABEB3",
      "default": false,
      "description": "Currently in discussion"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2022-04-14T13:00:55Z",
  "updated_at": "2022-04-25T11:44:37Z",
  "closed_at": "2022-04-25T11:43:39Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "As we move to a p2p relay network, we need a mechanism that ensure that relays and builders who are new or go offline for a period of time are able to catch up to the latest. With the `SetFeeRecipient` method, this can be achieved roughly by sending announcements at regular intervals. However, this creates a lot of unnecessary network traffic. It would be better if there was a _pull_ mechanism that a relay/builder could invoke when they wish to calculate the mapping. Here are a few ideas:\r\n\r\n* Fee recipient bulletin -- there could be a smart contract on mainnet that validators submit signed announcements to and builders could process all events from the contract to calculate the mapping. Since there is still no BLS primitive on mainnet, the mapping couldn't be authenticated on-chain. Thus, it is more of a bulletin.\r\n* Fee recipient DHT -- since the p2p network will likely already use `discv5`, we could use one of the extensions to store a mapping of validator to fee recipient. It's not clear how expensive it would be to iterate through this DHT, but at worst the relay/builder should be able to quickly get the proposers for the next epoch.\r\n* Fee recipient syncing -- as each announcement is signed, it would be possible to create a syncing strategy to acquire the mapping. It could be ranged over either validator indexes or unix time (e.g. \"get latest announcements for validators `n`...`m`\" or \"get all announcements from `n`...`m`).\r\n\r\nAre there other approaches? I'm leaning a bit towards the syncing strategy as it seems simplest and most robust of the above ideas.",
  "closed_by": {
    "login": "metachris",
    "id": 116939,
    "node_id": "MDQ6VXNlcjExNjkzOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/metachris",
    "html_url": "https://github.com/metachris",
    "followers_url": "https://api.github.com/users/metachris/followers",
    "following_url": "https://api.github.com/users/metachris/following{/other_user}",
    "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
    "organizations_url": "https://api.github.com/users/metachris/orgs",
    "repos_url": "https://api.github.com/users/metachris/repos",
    "events_url": "https://api.github.com/users/metachris/events{/privacy}",
    "received_events_url": "https://api.github.com/users/metachris/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/92/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/flashbots/mev-boost/issues/92/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1106812412",
    "html_url": "https://github.com/flashbots/mev-boost/issues/92#issuecomment-1106812412",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/92",
    "id": 1106812412,
    "node_id": "IC_kwDOGZSKs85B-J38",
    "user": {
      "login": "james-prysm",
      "id": 90280386,
      "node_id": "MDQ6VXNlcjkwMjgwMzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/90280386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/james-prysm",
      "html_url": "https://github.com/james-prysm",
      "followers_url": "https://api.github.com/users/james-prysm/followers",
      "following_url": "https://api.github.com/users/james-prysm/following{/other_user}",
      "gists_url": "https://api.github.com/users/james-prysm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/james-prysm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/james-prysm/subscriptions",
      "organizations_url": "https://api.github.com/users/james-prysm/orgs",
      "repos_url": "https://api.github.com/users/james-prysm/repos",
      "events_url": "https://api.github.com/users/james-prysm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/james-prysm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-22T19:51:51Z",
    "updated_at": "2022-04-22T19:51:51Z",
    "author_association": "NONE",
    "body": "https://github.com/ethereum/keymanager-APIs we just recently proposed and merged an API spec for validator client linked here for setting the fee recipient. \r\n\r\ni guess some context on this repo in general; to provide stakers/community that use GUI based commands we wanted to provide ways for those stakers to interact with the validator client ( this is how prysm had the only web front end due to these APIs).  Post merge they are going to need a way to define fee recipients. Ideally, it's through an API similar to the keymanager APIs, you can see the most recent PR as of this comment.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1106812412/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1107358498",
    "html_url": "https://github.com/flashbots/mev-boost/issues/92#issuecomment-1107358498",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/92",
    "id": 1107358498,
    "node_id": "IC_kwDOGZSKs85CAPMi",
    "user": {
      "login": "rolfyone",
      "id": 2967240,
      "node_id": "MDQ6VXNlcjI5NjcyNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2967240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rolfyone",
      "html_url": "https://github.com/rolfyone",
      "followers_url": "https://api.github.com/users/rolfyone/followers",
      "following_url": "https://api.github.com/users/rolfyone/following{/other_user}",
      "gists_url": "https://api.github.com/users/rolfyone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rolfyone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rolfyone/subscriptions",
      "organizations_url": "https://api.github.com/users/rolfyone/orgs",
      "repos_url": "https://api.github.com/users/rolfyone/repos",
      "events_url": "https://api.github.com/users/rolfyone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rolfyone/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T04:28:24Z",
    "updated_at": "2022-04-23T04:28:24Z",
    "author_association": "NONE",
    "body": "\r\n> https://github.com/ethereum/keymanager-APIs we just recently proposed and merged an API spec for validator client linked here for setting the fee recipient.\r\n\r\nI think this is probably a really different use case to keymanager-api, that's validator management and highly privileged and trusted operations, but interested to see how this progresses. @tbenr\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1107358498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1107431633",
    "html_url": "https://github.com/flashbots/mev-boost/issues/92#issuecomment-1107431633",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/92",
    "id": 1107431633,
    "node_id": "IC_kwDOGZSKs85CAhDR",
    "user": {
      "login": "lightclient",
      "id": 14004106,
      "node_id": "MDQ6VXNlcjE0MDA0MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightclient",
      "html_url": "https://github.com/lightclient",
      "followers_url": "https://api.github.com/users/lightclient/followers",
      "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
      "organizations_url": "https://api.github.com/users/lightclient/orgs",
      "repos_url": "https://api.github.com/users/lightclient/repos",
      "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T08:29:47Z",
    "updated_at": "2022-04-23T08:29:47Z",
    "author_association": "COLLABORATOR",
    "body": "Right, I think this issue is pretty unrelated to fee recipient management from a user perspective. This API is only used between the beacon node and builder client (`mev-boost`).",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1107431633/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1107432954",
    "html_url": "https://github.com/flashbots/mev-boost/issues/92#issuecomment-1107432954",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/92",
    "id": 1107432954,
    "node_id": "IC_kwDOGZSKs85CAhX6",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T08:33:04Z",
    "updated_at": "2022-04-23T08:33:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "The issue is that if the information sent through the keymanager API is unsigned then it wouldn't be possible for the beacon node to send on a signed `setFeeRecipient` to the builder client.  If `setFeeRecipient` goes away as per this PR that may not matter, however if that doesn't happen, or whatever system that is introduced requires a signature from the validator, then this may still be an issue.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1107432954/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1107434981",
    "html_url": "https://github.com/flashbots/mev-boost/issues/92#issuecomment-1107434981",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/92",
    "id": 1107434981,
    "node_id": "IC_kwDOGZSKs85CAh3l",
    "user": {
      "login": "lightclient",
      "id": 14004106,
      "node_id": "MDQ6VXNlcjE0MDA0MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightclient",
      "html_url": "https://github.com/lightclient",
      "followers_url": "https://api.github.com/users/lightclient/followers",
      "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
      "organizations_url": "https://api.github.com/users/lightclient/orgs",
      "repos_url": "https://api.github.com/users/lightclient/repos",
      "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T08:41:16Z",
    "updated_at": "2022-04-23T08:41:16Z",
    "author_association": "COLLABORATOR",
    "body": "@mcdee does the keymanager API not update the fee recipient that the validator client will use? In which case, the validator will be able to notify the beacon node (after we extend `prepare_beacon_proposer`) which will then notify the builder.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1107434981/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1107436455",
    "html_url": "https://github.com/flashbots/mev-boost/issues/92#issuecomment-1107436455",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/92",
    "id": 1107436455,
    "node_id": "IC_kwDOGZSKs85CAiOn",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-23T08:54:53Z",
    "updated_at": "2022-04-23T08:54:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, that would be possible if the validator client has that capability.  Less so if the information is passed directly to the beacon node.\r\n\r\n(The original comment was more to make the different areas that are proposing fee recipient processes aware of each other, and the changes that may be coming down the line.  If everyone knows about what each other is doing then my job here is done :) )",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1107436455/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1108465590",
    "html_url": "https://github.com/flashbots/mev-boost/issues/92#issuecomment-1108465590",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/92",
    "id": 1108465590,
    "node_id": "IC_kwDOGZSKs85CEde2",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-25T11:43:39Z",
    "updated_at": "2022-04-25T11:44:37Z",
    "author_association": "COLLABORATOR",
    "body": "This was discussed at the mev-boost workshop on mev.day, and the conclusion was that we'll use `builder_setFeeRecipient` (now called `builder_registerValidator`) for the sake of simplicity for all parties (including validators).\r\n\r\n* `builder_registerValidator` uses the payload from `prepare_beacon_proposer` (which needs an update to include timestamp, pubkey and signature)\r\n* validators usually send this call between each slot and every other epoch\r\n* mev-boost keeps resending it to the connected builders\r\n\r\nFuture approaches to mappings might be reconsidered in due time.\r\n\r\nClosing this issue for now. If there's something missing, please comment, and we can also reopen.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1108465590/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
