{
  "url": "https://api.github.com/repos/flashbots/mev-boost/issues/139",
  "repository_url": "https://api.github.com/repos/flashbots/mev-boost",
  "labels_url": "https://api.github.com/repos/flashbots/mev-boost/issues/139/labels{/name}",
  "comments_url": "https://api.github.com/repos/flashbots/mev-boost/issues/139/comments",
  "events_url": "https://api.github.com/repos/flashbots/mev-boost/issues/139/events",
  "html_url": "https://github.com/flashbots/mev-boost/issues/139",
  "id": 1263980235,
  "node_id": "I_kwDOGZSKs85LVs7L",
  "number": 139,
  "title": "distributed block building (and exploring the builder design space, broadly)",
  "user": {
    "login": "ralexstokes",
    "id": 3113781,
    "node_id": "MDQ6VXNlcjMxMTM3ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ralexstokes",
    "html_url": "https://github.com/ralexstokes",
    "followers_url": "https://api.github.com/users/ralexstokes/followers",
    "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
    "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
    "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
    "repos_url": "https://api.github.com/users/ralexstokes/repos",
    "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-06-07T23:06:43Z",
  "updated_at": "2022-06-12T15:07:29Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "was chatting with @obadiaa and we wanted to open an issue here to serve as a place for discussion around distributed block building. I'm hoping this can serve to kickstart the conversation\r\n\r\n---\r\n\r\nthere is a *large* design space here but the high-level idea follows:\r\n\r\nthe `mev-boost` architecture (cf. https://ethresear.ch/t/mev-boost-merge-ready-flashbots-architecture/11177) suggests a healthy competitive landscape of many agents referred to as \"builders\" who produce valuable blocks for consensus proposers. these builders are able to produce more valuable blocks compared to other agents on the network because they specialize in extracting mev. this specialization implies an economy of scale that exerts a centralizing tendency on the protocol which threatens censorship-resistance and harms the overall resilience of the network.\r\n\r\nto address this concern, we would like to research alternative builder designs beyond the monolithic, centralized builder design we will likely see at the start where a builder has a view of the public mempool (and possibly a separate private mempool for searchers) and tries to build the best block they can. a wealth of builder designs will hopefully ensure healthy competition amongst builders so that we get back pressure against any centralization risk.\r\n\r\none class of designs involves \"distributing\" the building task across many nodes. some orchestrating \"scheduler\" would be in charge of shipping updates to each subgroup of nodes who then work in parallel to build blocks. a clear subdivision here is to have a \"cluster\" for each leaf in the block tree so that a builder is responsive to any valid request a proposer may have for a block. an interesting refinement (and this is where some cool research could happen imo) is to pipe protocol data into this builder network so that building becomes an online, iterative process (refer to this article for context on the type of computing I mean: https://en.wikipedia.org/wiki/Stream_processing). For example, you could send each attestation a set of \"sentry nodes\" observes in real-time from the public network into the distributed builder set and compute the LMD-GHOST fork choice in real time -- using the output to load balance available building resources to one tip of the chain or the other.\r\n\r\nanother important note: this pattern can or cannot be \"logically\" distributed so that the group of nodes involved are under the control of a single entity wrt the protocol or not. if a single entity controls this distributed build process then it can be viewed as a scalability technique (hopefully to produce more profitable blocks) and if multiple distinct entities are involved then the build process can be seen as a substrate for a \"decentralized\" builder (imo the \"holy grail\" of this line of mev research).\r\n\r\nI haven't thought too much about this topic beyond what I've put here but happy to chat more if anyone is interested; I'll come back to update with anything interesting I come across",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/139/reactions",
    "total_count": 9,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 9
  },
  "timeline_url": "https://api.github.com/repos/flashbots/mev-boost/issues/139/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1149273330",
    "html_url": "https://github.com/flashbots/mev-boost/issues/139#issuecomment-1149273330",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/139",
    "id": 1149273330,
    "node_id": "IC_kwDOGZSKs85EgITy",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-07T23:32:12Z",
    "updated_at": "2022-06-07T23:32:12Z",
    "author_association": "COLLABORATOR",
    "body": "may be worth another issue but also would be keen to explore, research, discuss advanced algorithms for block building along the lines of hardware acceleration w/ GPUs, FPGAs, ASICs, etc.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1149273330/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1150439599",
    "html_url": "https://github.com/flashbots/mev-boost/issues/139#issuecomment-1150439599",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/139",
    "id": 1150439599,
    "node_id": "IC_kwDOGZSKs85EklCv",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-08T21:37:29Z",
    "updated_at": "2022-06-08T21:37:29Z",
    "author_association": "COLLABORATOR",
    "body": "as far as this issue is becoming wiki/documentation, there are likely a lot of interesting builder designs involving threshold cryptography or MPCs for distributed building.\r\n\r\nwe can take an analogy to distributed (validator) staking pool designs: https://github.com/ethereum/distributed-validator-specs\r\n\r\nand wonder if we can apply this technique to building.\r\n\r\nopen research question bc this implies you immediately have a large state (literally the ethereum execution state) inside the shielded context which harms performance but one of you reading this may have some mathematical magic up your sleeve :)",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1150439599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1153199330",
    "html_url": "https://github.com/flashbots/mev-boost/issues/139#issuecomment-1153199330",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/139",
    "id": 1153199330,
    "node_id": "IC_kwDOGZSKs85EvGzi",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-12T15:07:28Z",
    "updated_at": "2022-06-12T15:07:28Z",
    "author_association": "COLLABORATOR",
    "body": "I may start organizing this somewhere else so this issue isn't just meandering brain dump but:\r\n\r\nwas talking with @pkopparla and we came to a nice technique that could facilitate building: access lists a la EIP-2930.\r\n\r\nthis *may* make sense to do extra-protocol, i.e. in a private mempool like the flashbots auction product, but essentially you want to demand the read/write sets for a given transaction to come with the transaction. this greatly simplifies parallelization when working to simulate/execution EVM effects.\r\n\r\nyou could imagine an \"ingestion\" tier of nodes that just verify the access lists and then handing this off to an inner tier of nodes that handles execution (over disjoint combinations of state access) when trying to find the most profitable block",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1153199330/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 2
    },
    "performed_via_github_app": null
  }
]
