{
  "url": "https://api.github.com/repos/flashbots/mev-boost/issues/65",
  "repository_url": "https://api.github.com/repos/flashbots/mev-boost",
  "labels_url": "https://api.github.com/repos/flashbots/mev-boost/issues/65/labels{/name}",
  "comments_url": "https://api.github.com/repos/flashbots/mev-boost/issues/65/comments",
  "events_url": "https://api.github.com/repos/flashbots/mev-boost/issues/65/events",
  "html_url": "https://github.com/flashbots/mev-boost/issues/65",
  "id": 1183848692,
  "node_id": "I_kwDOGZSKs85GkBj0",
  "number": 65,
  "title": "Discussion: should mev-boost poll the relays?",
  "user": {
    "login": "metachris",
    "id": 116939,
    "node_id": "MDQ6VXNlcjExNjkzOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/metachris",
    "html_url": "https://github.com/metachris",
    "followers_url": "https://api.github.com/users/metachris/followers",
    "following_url": "https://api.github.com/users/metachris/following{/other_user}",
    "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
    "organizations_url": "https://api.github.com/users/metachris/orgs",
    "repos_url": "https://api.github.com/users/metachris/repos",
    "events_url": "https://api.github.com/users/metachris/events{/privacy}",
    "received_events_url": "https://api.github.com/users/metachris/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-03-28T18:50:12Z",
  "updated_at": "2022-04-08T18:43:11Z",
  "closed_at": "2022-04-08T18:43:11Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "The original spec had as step 3 \"mev-boost begins polling connected relays for their [SignedMEVPayloadHeader](https://github.com/flashbots/mev-boost/wiki/Specification/2890a0dc80817031da0e58183d8a63a341a42e73#signedmevpayloadheader) using [relay_getPayloadHeaderV1](https://github.com/flashbots/mev-boost/wiki/Specification/2890a0dc80817031da0e58183d8a63a341a42e73#relay_getpayloadheaderv1) requests.\"\r\n\r\nThe current implementation does not poll, just when it receives builder_getPayloadHeaderV1 it queries all the relays. We removed the polling now from the spec, but want to open an issue for discussion.",
  "closed_by": {
    "login": "metachris",
    "id": 116939,
    "node_id": "MDQ6VXNlcjExNjkzOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/metachris",
    "html_url": "https://github.com/metachris",
    "followers_url": "https://api.github.com/users/metachris/followers",
    "following_url": "https://api.github.com/users/metachris/following{/other_user}",
    "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
    "organizations_url": "https://api.github.com/users/metachris/orgs",
    "repos_url": "https://api.github.com/users/metachris/repos",
    "events_url": "https://api.github.com/users/metachris/events{/privacy}",
    "received_events_url": "https://api.github.com/users/metachris/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/65/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/flashbots/mev-boost/issues/65/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1086715657",
    "html_url": "https://github.com/flashbots/mev-boost/issues/65#issuecomment-1086715657",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/65",
    "id": 1086715657,
    "node_id": "IC_kwDOGZSKs85AxfcJ",
    "user": {
      "login": "jparyani",
      "id": 1595880,
      "node_id": "MDQ6VXNlcjE1OTU4ODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1595880?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jparyani",
      "html_url": "https://github.com/jparyani",
      "followers_url": "https://api.github.com/users/jparyani/followers",
      "following_url": "https://api.github.com/users/jparyani/following{/other_user}",
      "gists_url": "https://api.github.com/users/jparyani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jparyani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jparyani/subscriptions",
      "organizations_url": "https://api.github.com/users/jparyani/orgs",
      "repos_url": "https://api.github.com/users/jparyani/repos",
      "events_url": "https://api.github.com/users/jparyani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jparyani/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-02T20:17:32Z",
    "updated_at": "2022-04-02T20:17:32Z",
    "author_association": "MEMBER",
    "body": "After some discussion with @metachris, we came up with the following design:\r\n\r\n* add a new endpoint to relays, `relay_getPayloadHeaders`, which returns a list of potential payloads built on top of different head states\r\n* mev-boost would poll this endpoint across all relays\r\n* when `builder_getPayloadHeader` is called, mev-boost would return the most profitable payload built on top of the given blockHash from the local cache of responses from `relay_getPayloadHeaders`\r\n\r\nThe upside of this design is guaranteed quick calls for `builder_getPayloadHeader`, whereas under the current proposal we’ll always have to wait for the slowest relay. The main downside I see is added complexity and a latency penalty depending on the polling interval. This could perhaps be solved by moving from polling to instead having relays push payloads (eg. over a websocket).\r\n\r\nIf we ended up keeping forkChoiceUpdated or added a new endpoint like `preparePayload` to signal what block to build on, then we wouldn’t need `relay_getPayloadHeaders`, but I’m not sure it’s worth it. As far as relays are concerned, they’ll be building across multiple likely head states anyways, so signaling which one a validator wants isn’t super important. ",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1086715657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1086861908",
    "html_url": "https://github.com/flashbots/mev-boost/issues/65#issuecomment-1086861908",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/65",
    "id": 1086861908,
    "node_id": "IC_kwDOGZSKs85AyDJU",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-03T12:48:32Z",
    "updated_at": "2022-04-03T16:14:27Z",
    "author_association": "COLLABORATOR",
    "body": "I think this approach makes sense, but wonder whether we need to timebox/initiate the polling per validator? Otherwise the relays would need to prepare headers for possible a large amount of validators, even though they wouldn't need them.\r\n\r\nOr could the relays know which validators are assigned a slot in the near future and only prepare headers for them?\r\n\r\nAlso, without doing another call to the relay on `getPayloadHeader`, it might serve a cached header that's up to one polling cycle old.\r\n\r\nI think the flow @jparyani proposes would be this:\r\n\r\n```mermaid\r\nsequenceDiagram\r\n    participant consensus\r\n    participant mev_boost\r\n    participant relays\r\n    Note over mev_boost: poll relays, gather headers\r\n    mev_boost->>relays: relay_getPayloadHeaders\r\n    relays-->>mev_boost: \r\n    Note over consensus: wait for allocated slot\r\n    consensus->>+mev_boost: builder_getPayloadHeaderV1\r\n    Note over mev_boost: select most valuable payload\r\n    mev_boost-->>-consensus: builder_getPayloadHeaderV1 response\r\n    Note over consensus: sign the block\r\n    consensus->>+mev_boost: builder_proposeBlindedBlockV1\r\n    Note over mev_boost: identify payload source\r\n    mev_boost->>relays: relay_proposeBlindedBlockV1\r\n    Note over relays: validate signature\r\n    relays-->>mev_boost: relay_proposeBlindedBlockV1 response\r\n    mev_boost-->>-consensus: builder_proposeBlindedBlockV1 response\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1086861908/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1086892692",
    "html_url": "https://github.com/flashbots/mev-boost/issues/65#issuecomment-1086892692",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/65",
    "id": 1086892692,
    "node_id": "IC_kwDOGZSKs85AyKqU",
    "user": {
      "login": "lightclient",
      "id": 14004106,
      "node_id": "MDQ6VXNlcjE0MDA0MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14004106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightclient",
      "html_url": "https://github.com/lightclient",
      "followers_url": "https://api.github.com/users/lightclient/followers",
      "following_url": "https://api.github.com/users/lightclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightclient/subscriptions",
      "organizations_url": "https://api.github.com/users/lightclient/orgs",
      "repos_url": "https://api.github.com/users/lightclient/repos",
      "events_url": "https://api.github.com/users/lightclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-03T15:33:30Z",
    "updated_at": "2022-04-03T15:39:56Z",
    "author_association": "COLLABORATOR",
    "body": "* I think relays should be aware of what validator is expected to propose at what slot. Therefore they should only be preparing headers for _that_ validator.\r\n* If we think about the current engine API flow for block construction, i) first the CL updates the EL fork choice. As part of that, it ii) also notes that it would like the EL to begin building a block for the next slot. Then at some later point, iii) the CL requests the block that the EL has been building. If we map this to the interface here, we should be able to skip the first two steps. This is because the relay is aware of all competing forks for a certain slot, and it will begin it's building process immediately after observing a new block. So in that case, it makes sense to me that the CL would ask `mev-boost` once when it's ready for a block. It would be good to have a suggested upper bound of time which that request would be expected to take, but at the end of the day, the CL needs to decide if things are taking too long and get a block locally if they are. ",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1086892692/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1093211193",
    "html_url": "https://github.com/flashbots/mev-boost/issues/65#issuecomment-1093211193",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/65",
    "id": 1093211193,
    "node_id": "IC_kwDOGZSKs85BKRQ5",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-08T18:43:11Z",
    "updated_at": "2022-04-08T18:43:11Z",
    "author_association": "COLLABORATOR",
    "body": "Closing this for now, we'll start with the flow described in the [spec](https://github.com/flashbots/mev-boost/blob/main/docs/specification.md) and may revisit polling or pushing at a later date.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1093211193/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
