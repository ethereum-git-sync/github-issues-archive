{
  "url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
  "repository_url": "https://api.github.com/repos/flashbots/mev-boost",
  "labels_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220/labels{/name}",
  "comments_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220/comments",
  "events_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220/events",
  "html_url": "https://github.com/flashbots/mev-boost/issues/220",
  "id": 1310608192,
  "node_id": "I_kwDOGZSKs85OHktA",
  "number": 220,
  "title": "Identifier for builder to proposer transaction",
  "user": {
    "login": "beetrootkid",
    "id": 34025634,
    "node_id": "MDQ6VXNlcjM0MDI1NjM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/34025634?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/beetrootkid",
    "html_url": "https://github.com/beetrootkid",
    "followers_url": "https://api.github.com/users/beetrootkid/followers",
    "following_url": "https://api.github.com/users/beetrootkid/following{/other_user}",
    "gists_url": "https://api.github.com/users/beetrootkid/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/beetrootkid/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/beetrootkid/subscriptions",
    "organizations_url": "https://api.github.com/users/beetrootkid/orgs",
    "repos_url": "https://api.github.com/users/beetrootkid/repos",
    "events_url": "https://api.github.com/users/beetrootkid/events{/privacy}",
    "received_events_url": "https://api.github.com/users/beetrootkid/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3559229523,
      "node_id": "LA_kwDOGZSKs87UJYhT",
      "url": "https://api.github.com/repos/flashbots/mev-boost/labels/enhancement",
      "name": "enhancement",
      "color": "a2eeef",
      "default": true,
      "description": "New feature or request"
    },
    {
      "id": 4352118275,
      "node_id": "LA_kwDOGZSKs88AAAABA2gOAw",
      "url": "https://api.github.com/repos/flashbots/mev-boost/labels/builder",
      "name": "builder",
      "color": "953EA9",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 25,
  "created_at": "2022-07-20T07:56:00Z",
  "updated_at": "2022-09-08T14:08:29Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Current Understanding**\r\n- The Builder will set their own feeRecipient for a block\r\n- They will then send a share of their earnings to the proposer (to their specified \"feeRecipient\" account in a transaction\r\n\r\n**The Problem**\r\nFor a staking provider with multiple customers, it is difficult to:\r\na) Prove to customers they have received the agreed upon earning.\r\nb) Know how much to charge customers (if fees are based on a percentage of rewards)\r\n\r\nSome kind of indicator or marker on the transaction would be great üôè \r\n\r\n# Update\r\n\r\nContinuation of the discussion here: https://collective.flashbots.net/t/block-scoring-for-mev-boost-relays/202",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/220/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1191115889",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1191115889",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1191115889,
    "node_id": "IC_kwDOGZSKs85G_vxx",
    "user": {
      "login": "kanewallmann",
      "id": 57159130,
      "node_id": "MDQ6VXNlcjU3MTU5MTMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/57159130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kanewallmann",
      "html_url": "https://github.com/kanewallmann",
      "followers_url": "https://api.github.com/users/kanewallmann/followers",
      "following_url": "https://api.github.com/users/kanewallmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/kanewallmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kanewallmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kanewallmann/subscriptions",
      "organizations_url": "https://api.github.com/users/kanewallmann/orgs",
      "repos_url": "https://api.github.com/users/kanewallmann/repos",
      "events_url": "https://api.github.com/users/kanewallmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kanewallmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T06:58:52Z",
    "updated_at": "2022-07-21T06:58:52Z",
    "author_association": "NONE",
    "body": "Agreed that having a simple method for querying how much the proposer was paid for a block is desirable for staking providers.\r\n\r\nIt could be as simple as requiring the last transaction in a block to be a transfer to the proposer's specified `feeRecipient`. This would preclude other methods of paying the proposer such as via a contract but would be the easiest to query. The relay would need to only count this last transaction when it calculates the `value` field for `BidTrace` to avoid a situation where builders simply ignore this convention and send the payment via other means.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1191115889/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1191521790",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1191521790",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1191521790,
    "node_id": "IC_kwDOGZSKs85HBS3-",
    "user": {
      "login": "bertmiller",
      "id": 30010302,
      "node_id": "MDQ6VXNlcjMwMDEwMzAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/30010302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bertmiller",
      "html_url": "https://github.com/bertmiller",
      "followers_url": "https://api.github.com/users/bertmiller/followers",
      "following_url": "https://api.github.com/users/bertmiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/bertmiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bertmiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bertmiller/subscriptions",
      "organizations_url": "https://api.github.com/users/bertmiller/orgs",
      "repos_url": "https://api.github.com/users/bertmiller/repos",
      "events_url": "https://api.github.com/users/bertmiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bertmiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T13:59:34Z",
    "updated_at": "2022-07-21T13:59:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "An alternative to requiring the last transaction in a block to be a transfer to the proposer's `feeRecipient` could be to require a payment is made to a specific contract in a block designed to facilitate payments and make them visible. That contract would 1. pass the payment on to the `feeRecipient` and 2. emit a log. \r\n\r\nSomething like this:\r\n\r\n```\r\nevent BuilderPayment(uint256 value, address feeRecipient, address builderAddress);\r\n\r\nfunction makePayment(address _feeRecipient) external payable {\r\n    _feeRecipient.call{value: msg.value}(\"\");\r\n    emit BuilderPayment(msg.value, _feeRecipient, msg.sender);\r\n}\r\n```\r\n\r\nThis would emits logs with some structure that would make monitoring a bit easier, I think. It adds a little overhead (~10k gas?) but I think it'd be worth it. ",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1191521790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1191950114",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1191950114",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1191950114,
    "node_id": "IC_kwDOGZSKs85HC7ci",
    "user": {
      "login": "kanewallmann",
      "id": 57159130,
      "node_id": "MDQ6VXNlcjU3MTU5MTMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/57159130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kanewallmann",
      "html_url": "https://github.com/kanewallmann",
      "followers_url": "https://api.github.com/users/kanewallmann/followers",
      "following_url": "https://api.github.com/users/kanewallmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/kanewallmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kanewallmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kanewallmann/subscriptions",
      "organizations_url": "https://api.github.com/users/kanewallmann/orgs",
      "repos_url": "https://api.github.com/users/kanewallmann/repos",
      "events_url": "https://api.github.com/users/kanewallmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kanewallmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-21T21:25:42Z",
    "updated_at": "2022-07-21T21:25:42Z",
    "author_association": "NONE",
    "body": "Thanks @bertmiller,\r\n\r\nUsing `send` instead of `call` might be a better (or manually specifying some gas). If the fee recipient can't process the payment with the 2300 gas stipend then the transfer fails but the event is still emitted. Otherwise, there's some extra edge cases where the feeRecipient tries to consume too much gas.\r\n\r\nIt also adds some complexity to the relay. The relay would need to scan for these events and sum them to calculate the `value` field for `BidTrace`. If the relay uses the naive approach of calculating the delta of balances before and after the block then builders have no incentive to call this contract vs just a regular transfer.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1191950114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1192565817",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1192565817",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1192565817,
    "node_id": "IC_kwDOGZSKs85HFRw5",
    "user": {
      "login": "thegostep",
      "id": 15959632,
      "node_id": "MDQ6VXNlcjE1OTU5NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/15959632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thegostep",
      "html_url": "https://github.com/thegostep",
      "followers_url": "https://api.github.com/users/thegostep/followers",
      "following_url": "https://api.github.com/users/thegostep/following{/other_user}",
      "gists_url": "https://api.github.com/users/thegostep/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thegostep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thegostep/subscriptions",
      "organizations_url": "https://api.github.com/users/thegostep/orgs",
      "repos_url": "https://api.github.com/users/thegostep/repos",
      "events_url": "https://api.github.com/users/thegostep/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thegostep/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-22T13:18:43Z",
    "updated_at": "2022-07-22T13:18:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Builders setting their own address as the feeRecipient  in the block header and including a transaction to the proposer is the correct implementation approach. The gas overhead is warranted and can be enforced by relays and by the mev-boost implementation through payment proofs.  See #99 \r\n\r\nThe main question is if the payment proofs should be on the builder to proposer transaction only or on the total balance change of the proposer's address.\r\n\r\n### Payment proof at transaction level\r\n\r\nThis can be implemented using a simple Merkle proof on the transaction trie. Routing through a contract as suggested by @bertmiller seems preferable. Replay / reorg protection needs to be added to these transactions.\r\n\r\nThe drawback of this solution is that it does not \"accurately\" measure block value. In particular, it will not capture payment transaction by end users directly to the proposer which bypass the payment contract. Does this undermine the incentive compatibility of mev-boost or allow for implementation of undesirable features like reorg bribery at the smart contract level?\r\n\r\n### Payment proof at the account balance level\r\n\r\nThis approach to payment proofs looks at the total difference in balance of the proposer's eth account between the previous block and the current block. This can be implemented with two Merkle proofs.\r\n\r\nThe drawback of this solution is that any withdrawals from the proposer's account balance will count against the value of the block. This means the validator will need to use a new account for every block, causing issues with notifying block builders of their desired fee recipient address, or will need to only withdraw from their account on blocks proposed by other validators. ",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1192565817/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1192801577",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1192801577",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1192801577,
    "node_id": "IC_kwDOGZSKs85HGLUp",
    "user": {
      "login": "thegostep",
      "id": 15959632,
      "node_id": "MDQ6VXNlcjE1OTU5NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/15959632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thegostep",
      "html_url": "https://github.com/thegostep",
      "followers_url": "https://api.github.com/users/thegostep/followers",
      "following_url": "https://api.github.com/users/thegostep/following{/other_user}",
      "gists_url": "https://api.github.com/users/thegostep/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thegostep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thegostep/subscriptions",
      "organizations_url": "https://api.github.com/users/thegostep/orgs",
      "repos_url": "https://api.github.com/users/thegostep/repos",
      "events_url": "https://api.github.com/users/thegostep/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thegostep/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-22T17:43:29Z",
    "updated_at": "2022-07-22T17:43:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is some additional context on the various payment methods which can be used in mev-boost.\r\n\r\nFor clarity, lets refer to the fee recipient address set by the block builder in the block header as `feeRecipient` with the understanding that the builder will set this as their own address for the blocks they produce. We can refer to the payment address requested by the validator as the `proposerAccount`.\r\n\r\n- `base_fee`: amount defined by protocol, always paid from user --> network, user can define upper bound they are willing to pay using maxFeePerGas , the user needs to have sufficient ETH balance in their account before transaction execution - this is not MEV since there is no way for the validator to get this payment. The payment cannot be made within of EVM execution (unfortunately).\r\n- `priority_fee`: amount defined by the user as maxPriorityFeePerGas, always paid from user --> feeRecipient. The user needs to have sufficient ETH balance in their account before transaction execution. The priority fee is debited from the user account and credited to the fee recipient immediately after execution. The block builder is expected to collect this payment\r\n- `block.coinbase transfer`: the EVM has an opcode which allows end user to send funds directly to the `feeRecipient` address from the block header. The recipient of this payment is the same as the `priority_fee` payment recipient, but this transfer triggers EVM execution including associated gas costs and security risks. The block builder is expected to collect this payment\r\n- `proposerAccount transfer`: anyone can create a transaction which sends eth to any other Ethereum account. Since the proposer is publishing their desired payment address to the public, it's possible for any user to send payments directly to this account. While this is technically MEV, there is no way for the block builder to capture this value! This is the suggested method for the builder to pay the validator for the blockspace used.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1192801577/reactions",
      "total_count": 3,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 3,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1196916029",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1196916029",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1196916029,
    "node_id": "IC_kwDOGZSKs85HV309",
    "user": {
      "login": "beetrootkid",
      "id": 34025634,
      "node_id": "MDQ6VXNlcjM0MDI1NjM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/34025634?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beetrootkid",
      "html_url": "https://github.com/beetrootkid",
      "followers_url": "https://api.github.com/users/beetrootkid/followers",
      "following_url": "https://api.github.com/users/beetrootkid/following{/other_user}",
      "gists_url": "https://api.github.com/users/beetrootkid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beetrootkid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beetrootkid/subscriptions",
      "organizations_url": "https://api.github.com/users/beetrootkid/orgs",
      "repos_url": "https://api.github.com/users/beetrootkid/repos",
      "events_url": "https://api.github.com/users/beetrootkid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beetrootkid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-27T15:32:42Z",
    "updated_at": "2022-07-27T15:32:42Z",
    "author_association": "NONE",
    "body": "I'd probably argue that proofs or verification that the payment was what was promised sit in a different issue (and potentially should be handled by the consensus layer client(?)). The objective of this request was for their to be an easy way to identify the payment on-chain.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1196916029/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1203979313",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1203979313",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1203979313,
    "node_id": "IC_kwDOGZSKs85Hw0Qx",
    "user": {
      "login": "beetrootkid",
      "id": 34025634,
      "node_id": "MDQ6VXNlcjM0MDI1NjM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/34025634?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beetrootkid",
      "html_url": "https://github.com/beetrootkid",
      "followers_url": "https://api.github.com/users/beetrootkid/followers",
      "following_url": "https://api.github.com/users/beetrootkid/following{/other_user}",
      "gists_url": "https://api.github.com/users/beetrootkid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beetrootkid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beetrootkid/subscriptions",
      "organizations_url": "https://api.github.com/users/beetrootkid/orgs",
      "repos_url": "https://api.github.com/users/beetrootkid/repos",
      "events_url": "https://api.github.com/users/beetrootkid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beetrootkid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-03T13:51:21Z",
    "updated_at": "2022-08-03T13:52:46Z",
    "author_association": "NONE",
    "body": "On further thinking, the most obvious addition would be a payload containing the proposer's (validator's) public key... but then that might create all kinds of privacy issues? However, most (if not all) of that information is already on-chain but in multiple places... Anyhow, just thought I'd note the idea here. üôè ",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1203979313/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1204385848",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1204385848",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1204385848,
    "node_id": "IC_kwDOGZSKs85HyXg4",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-03T19:29:08Z",
    "updated_at": "2022-08-03T19:29:22Z",
    "author_association": "COLLABORATOR",
    "body": "The Flashbots relays offer a data API that provides summaries for all delivered payloads: https://flashbots.notion.site/Relay-API-Spec-5fb0819366954962bc02e81cb33840f5#417abe417dde45caaff3dc15aaae65dd\r\n\r\nThe summaries include the value that the relay confirmed by simulating the block. Here's an example for the trace of a specific slot: https://builder-relay-ropsten.flashbots.net/relay/v1/data/bidtraces/proposer_payload_delivered?slot=467483\r\n\r\nNode operators and staking pools are using this to know about the proposer value of payloads that were delivered to the proposers, after they sent their signed blinded beacon block.\r\n\r\nThis API is live on all our relays.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1204385848/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1204877241",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1204877241",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1204877241,
    "node_id": "IC_kwDOGZSKs85H0Pe5",
    "user": {
      "login": "beetrootkid",
      "id": 34025634,
      "node_id": "MDQ6VXNlcjM0MDI1NjM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/34025634?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beetrootkid",
      "html_url": "https://github.com/beetrootkid",
      "followers_url": "https://api.github.com/users/beetrootkid/followers",
      "following_url": "https://api.github.com/users/beetrootkid/following{/other_user}",
      "gists_url": "https://api.github.com/users/beetrootkid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beetrootkid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beetrootkid/subscriptions",
      "organizations_url": "https://api.github.com/users/beetrootkid/orgs",
      "repos_url": "https://api.github.com/users/beetrootkid/repos",
      "events_url": "https://api.github.com/users/beetrootkid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beetrootkid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-04T07:32:50Z",
    "updated_at": "2022-08-04T07:32:50Z",
    "author_association": "NONE",
    "body": "hmm.. .I mean that works, of course, but I know that we (and I suspect this is a broader principle across the ecosystem) rely solely upon on-chain data rather logging or api reporting for data on validator activity.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1204877241/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1204921582",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1204921582",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1204921582,
    "node_id": "IC_kwDOGZSKs85H0aTu",
    "user": {
      "login": "ricardolyn",
      "id": 1945557,
      "node_id": "MDQ6VXNlcjE5NDU1NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1945557?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ricardolyn",
      "html_url": "https://github.com/ricardolyn",
      "followers_url": "https://api.github.com/users/ricardolyn/followers",
      "following_url": "https://api.github.com/users/ricardolyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/ricardolyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ricardolyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ricardolyn/subscriptions",
      "organizations_url": "https://api.github.com/users/ricardolyn/orgs",
      "repos_url": "https://api.github.com/users/ricardolyn/repos",
      "events_url": "https://api.github.com/users/ricardolyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ricardolyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-04T08:16:54Z",
    "updated_at": "2022-08-04T08:16:54Z",
    "author_association": "NONE",
    "body": "this data should be registered on-chain and not rely on an API for it.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1204921582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1205148648",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1205148648",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1205148648,
    "node_id": "IC_kwDOGZSKs85H1Rvo",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-04T11:48:50Z",
    "updated_at": "2022-08-04T11:48:50Z",
    "author_association": "COLLABORATOR",
    "body": "Agree that having all the data needed for checking on-chain would be preferable.\r\n\r\nFor that to work, wouldn't the validator registrations also need to be on-chain, to know the `feeRecipient` the validator requested the payment to? Otherwise you wouldn't have any knowledge which feeRecipient address the proposer wanted to receive the payment at ü§î ",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1205148648/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1205153419",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1205153419",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1205153419,
    "node_id": "IC_kwDOGZSKs85H1S6L",
    "user": {
      "login": "beetrootkid",
      "id": 34025634,
      "node_id": "MDQ6VXNlcjM0MDI1NjM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/34025634?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beetrootkid",
      "html_url": "https://github.com/beetrootkid",
      "followers_url": "https://api.github.com/users/beetrootkid/followers",
      "following_url": "https://api.github.com/users/beetrootkid/following{/other_user}",
      "gists_url": "https://api.github.com/users/beetrootkid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beetrootkid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beetrootkid/subscriptions",
      "organizations_url": "https://api.github.com/users/beetrootkid/orgs",
      "repos_url": "https://api.github.com/users/beetrootkid/repos",
      "events_url": "https://api.github.com/users/beetrootkid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beetrootkid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-04T11:54:07Z",
    "updated_at": "2022-08-04T11:54:07Z",
    "author_association": "NONE",
    "body": "I think that feels more like proof it was paid where it should‚Äôve been paid. All this issue was intended to focus on was understanding that something was paid for successfully proposing.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1205153419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1213340428",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1213340428",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1213340428,
    "node_id": "IC_kwDOGZSKs85IUhsM",
    "user": {
      "login": "kailinr",
      "id": 42973015,
      "node_id": "MDQ6VXNlcjQyOTczMDE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/42973015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kailinr",
      "html_url": "https://github.com/kailinr",
      "followers_url": "https://api.github.com/users/kailinr/followers",
      "following_url": "https://api.github.com/users/kailinr/following{/other_user}",
      "gists_url": "https://api.github.com/users/kailinr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kailinr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kailinr/subscriptions",
      "organizations_url": "https://api.github.com/users/kailinr/orgs",
      "repos_url": "https://api.github.com/users/kailinr/repos",
      "events_url": "https://api.github.com/users/kailinr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kailinr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-12T17:16:09Z",
    "updated_at": "2022-08-29T16:42:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "We've [released a builder to proposer payment](https://flashbots.notion.site/WIP-Builder-Payments-to-Block-Proposers-530eb36c60ad417a8702dd26da810b72) proposal for this issue. Actively seeking feedback - @terencechain @beetrootkid @ralexstokes @kanewallmann \r\n\r\nHere's a summary: \r\n\r\n**Framing the problem**\r\n\r\nStaking providers and node operators outlined a need for an accounting mechanism for MEV payments. This mechanism unlocks a number of necessary operations, such as proving receipt of MEV rewards, fair distribution of rewards to staking customers, and preventing malicious activities, such as [MEV hiding](https://dao.rocketpool.net/t/mev-and-penalty-system/772), [mev-penalty-system](https://dao.rocketpool.net/t/mev-and-penalty-system/772), among others.\r\n\r\n**Framing the solution**\r\n\r\nTo enable these operations, and after consideration of several solutions, Flashbots proposes implementation of a smart contract that transfers payment from the builder to the proposer via the following process:\r\n\r\n1. The builder sets their own address as `feeRecipient` of the payload header they are constructing.\r\n2. The builder includes a transaction which pays ETH to the proposer‚Äôs `feeRecipient` **address through a smart contract. \r\n\r\nWe propose a standardized specification for how payments are made and how proofs are provided by builders to the relay. We refer to this solution as **smart contract based payments to validators**.\r\n\r\n**Specification**\r\n\r\nParameters for the message submitted by builder to the relay:\r\n\r\n- `payloadHeader`: `[ExecutionPayloadHeaderV1](https://github.com/ethereum/consensus-specs/blob/v1.1.6/specs/merge/beacon-chain.md#executionpayloadheader)`\r\n- `paymentProof`:\r\n    - `transactionHash`(`bytes32`): hash of the transaction which emits the event\r\n    - `transactionIndex`(`uint256`): index of the transaction in the transaction array of the payload\r\n    - `logIndex`(`uint256`): index of the event in the transaction\r\n    - `value`(`uint256`): amount of ETH being transferred and emitted in the event\r\n    \r\n\r\n### Suggested smart contract payment implementation\r\n\r\n```solidity\r\nevent BuilderPayment(uint256 value, address validator, address builder);\r\n\r\nfunction pay(address payable validator, uint256 gas) external payable {\r\n\t\trequire(msg.sender == block.coinbase);\r\n    validator.transfer(msg.value);\r\n    emit BuilderPayment(msg.value, validator, block.coinbase);\r\n}\r\n\r\nfunction payAndCall(address validator, uint256 gas, bytes calldata data) external payable {\r\n\t\trequire(msg.sender == block.coinbase);\t\r\n\t\tvalidator.call{gas: gas, value: msg.value}(data);\r\n\t\temit BuilderPayment(msg.value, validator, block.coinbase);\r\n}\r\n```\r\n\r\n### Accounting and payment v**erification**\r\n\r\nThe benefit of using a smart contract is that it allows for emitting an event, which is useful for off-chain parsing. With this solution it is possible to verify payments by inspecting the event log of a block‚Äôs transactions‚Äô index and hash.\r\n\r\nThe only event considered valid is the payment proof event log specified for a given index and hash. As a result, it is simple to find, verify, and account for the payment made by the builder by looking for the log associated with the index and hash values provided in the payment proof. \r\n\r\nPayment proofs in this format are more restrictive because require that payment for the full block must be done using a single call emitting a single log. Additionally, any other transfer to or from the validator fee recipient account, whether it is in the same transaction or another transaction, are ignored. These restrictions ensure validators are able to withdraw their rewards without impacting mev-boost profit switching calculations or the accounting systems used by node operators.\r\n\r\n### Further considerations\r\n\r\n**Withdrawals**\r\n\r\nValidators need to be able to withdraw from the account which receives payment. If payments are made directly to a validator‚Äôs recipient account, then the validator would be unable to withdraw anything from that account without adversely affecting the simulated value of that block. The reason is that if the profit of a block is measured by the difference in a validator‚Äôs recipient account before and after that block, then a withdraw makes the block look less profitable because it removes assets. To prevent this, validators would need to create a new recipient account for each block they produce.\r\n\r\n**Out of band bribes**\r\n\r\nAdditional payment methods using transfers to the validator account, or transfers to the validator on L2s, for example, would allow for validator bribery. Further research and input is needed to address this externality.\r\n\r\n**Gas usage**\r\n\r\nAdding a transaction that calls a smart contract costs additional gas, and becomes an overhead expense on every block.\r\n\r\n**Restrictive design space**\r\n\r\nRequiring all payments to be done through a single smart contract transaction limits the design space available for builders to complete payments for blockspace. In turn this could limit the development of solutions like MEV-smoothing or blockspace futures.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1213340428/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1214131030",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1214131030",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1214131030,
    "node_id": "IC_kwDOGZSKs85IXitW",
    "user": {
      "login": "beetrootkid",
      "id": 34025634,
      "node_id": "MDQ6VXNlcjM0MDI1NjM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/34025634?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beetrootkid",
      "html_url": "https://github.com/beetrootkid",
      "followers_url": "https://api.github.com/users/beetrootkid/followers",
      "following_url": "https://api.github.com/users/beetrootkid/following{/other_user}",
      "gists_url": "https://api.github.com/users/beetrootkid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beetrootkid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beetrootkid/subscriptions",
      "organizations_url": "https://api.github.com/users/beetrootkid/orgs",
      "repos_url": "https://api.github.com/users/beetrootkid/repos",
      "events_url": "https://api.github.com/users/beetrootkid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beetrootkid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-13T10:02:33Z",
    "updated_at": "2022-08-13T10:02:33Z",
    "author_association": "NONE",
    "body": "I'm not a coder so not qualified to comment on the code snippet. However, this does appear to address the core issue of deterministically identifying the transaction to the validator from the builder. Which is great. A couple of questions though:\r\n1. I don't understand the point being made in the \"Withdrawals\" section - could you explain / expand?\r\n2. How would we protect the process from abuse? Presumably, anyone could use the relay to send a txn?",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1214131030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1228345083",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1228345083",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1228345083,
    "node_id": "IC_kwDOGZSKs85JNw77",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-26T10:47:05Z",
    "updated_at": "2022-08-26T10:47:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Requiring a smart contract appears to be overkill for this.  Is there an issue with querying a node for the relevant address balance before and after the proposed block, and taking the delta as the reward?  This is cheap (the movement of funds is a simple transfer, no withdrawal required), secure (no smart contract risk) and flexible (multiple payments can be made in a single block).  The only downside of a direct method that I can see is that it doesn't emit an event, but any node operator of a decent size should be able to query the chain directly to obtain the data they need regarding rewards.\r\n\r\nIf there is concern of a malicious validator carrying out a withdrawal in their proposed block to falsely decrease the value paid to them then the individual transactions in the block could be examined to separate out balance increases from decreases, and only count the increases.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1228345083/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1228431237",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1228431237",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1228431237,
    "node_id": "IC_kwDOGZSKs85JOF-F",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-26T12:32:10Z",
    "updated_at": "2022-08-26T12:32:33Z",
    "author_association": "COLLABORATOR",
    "body": "Fyi, we (Flashbots) are currently proceeding with payment from builder to proposer in a direct transaction at the end of the block.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1228431237/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1228547807",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1228547807",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1228547807,
    "node_id": "IC_kwDOGZSKs85JOibf",
    "user": {
      "login": "ricardolyn",
      "id": 1945557,
      "node_id": "MDQ6VXNlcjE5NDU1NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1945557?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ricardolyn",
      "html_url": "https://github.com/ricardolyn",
      "followers_url": "https://api.github.com/users/ricardolyn/followers",
      "following_url": "https://api.github.com/users/ricardolyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/ricardolyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ricardolyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ricardolyn/subscriptions",
      "organizations_url": "https://api.github.com/users/ricardolyn/orgs",
      "repos_url": "https://api.github.com/users/ricardolyn/repos",
      "events_url": "https://api.github.com/users/ricardolyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ricardolyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-26T14:17:44Z",
    "updated_at": "2022-08-26T14:17:44Z",
    "author_association": "NONE",
    "body": "thank you. @metachris, do you know when that functionality will be available?",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1228547807/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1230560061",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1230560061",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1230560061,
    "node_id": "IC_kwDOGZSKs85JWNs9",
    "user": {
      "login": "kailinr",
      "id": 42973015,
      "node_id": "MDQ6VXNlcjQyOTczMDE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/42973015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kailinr",
      "html_url": "https://github.com/kailinr",
      "followers_url": "https://api.github.com/users/kailinr/followers",
      "following_url": "https://api.github.com/users/kailinr/following{/other_user}",
      "gists_url": "https://api.github.com/users/kailinr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kailinr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kailinr/subscriptions",
      "organizations_url": "https://api.github.com/users/kailinr/orgs",
      "repos_url": "https://api.github.com/users/kailinr/repos",
      "events_url": "https://api.github.com/users/kailinr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kailinr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-29T16:41:24Z",
    "updated_at": "2022-08-29T16:43:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "As @metachris pointed out, we recently reduced[ the specification](https://flashbots.notion.site/WIP-Builder-Payments-to-Block-Proposers-530eb36c60ad417a8702dd26da810b72) to simple EOA payment transfer, still a work-in-progress. Would love input from @mcdee @kanewallmann et al. on using simple tx payments instead of smart-contract implementation short-term?",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1230560061/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1230584113",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1230584113",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1230584113,
    "node_id": "IC_kwDOGZSKs85JWTkx",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-29T17:03:20Z",
    "updated_at": "2022-08-29T17:03:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Personally I have no requirement for proposer payments to be fed through a smart contract for accounting purposes.  As mentioned in the specification, there is overhead and smart contract risk, and all of the accounting requirements can be met by querying the relevant transactions directly.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1230584113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1234158414",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1234158414",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1234158414,
    "node_id": "IC_kwDOGZSKs85Jj8NO",
    "user": {
      "login": "joaorodrigues-consensys",
      "id": 43372251,
      "node_id": "MDQ6VXNlcjQzMzcyMjUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/43372251?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joaorodrigues-consensys",
      "html_url": "https://github.com/joaorodrigues-consensys",
      "followers_url": "https://api.github.com/users/joaorodrigues-consensys/followers",
      "following_url": "https://api.github.com/users/joaorodrigues-consensys/following{/other_user}",
      "gists_url": "https://api.github.com/users/joaorodrigues-consensys/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joaorodrigues-consensys/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joaorodrigues-consensys/subscriptions",
      "organizations_url": "https://api.github.com/users/joaorodrigues-consensys/orgs",
      "repos_url": "https://api.github.com/users/joaorodrigues-consensys/repos",
      "events_url": "https://api.github.com/users/joaorodrigues-consensys/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joaorodrigues-consensys/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-01T11:37:52Z",
    "updated_at": "2022-09-01T11:37:52Z",
    "author_association": "NONE",
    "body": "@kailinr about this part of the process\r\n> The builder sets their own address as feeRecipient of the payload header they are constructing.\r\n\r\nAre the builder fee recipients published somewhere? How many and how often would you expect them to change?\r\n\r\nReason for asking is, for reporting purposes and calculating the EL block reward, we'd like to identify if a block was built by a VC or using mev-boost using on-chain data only.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1234158414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1234303189",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1234303189",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1234303189,
    "node_id": "IC_kwDOGZSKs85JkfjV",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-01T13:44:52Z",
    "updated_at": "2022-09-01T13:44:52Z",
    "author_association": "COLLABORATOR",
    "body": "The payment via transaction is live now.\r\n\r\n> Reason for asking is, for reporting purposes and calculating the EL block reward, we'd like to identify if a block was built by a VC or using mev-boost using on-chain data only.\r\n\r\nThere is no such list, and feeRecipient might change often / whenever. I don't see those being a good indicator ü§î  \r\n\r\nOur relay provides an API that shows the delivered payloads: \r\n\r\n- https://flashbots.notion.site/Relay-API-Spec-5fb0819366954962bc02e81cb33840f5#417abe417dde45caaff3dc15aaae65dd\r\n- https://builder-relay-ropsten.flashbots.net/relay/v1/data/bidtraces/proposer_payload_delivered?limit=10\r\n\r\nBut that API is voluntary too, although we do hope that all relays implement it.\r\n\r\nThe relay monitor could also be a useful data source here. ",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1234303189/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1234845767",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1234845767",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1234845767,
    "node_id": "IC_kwDOGZSKs85JmkBH",
    "user": {
      "login": "thegostep",
      "id": 15959632,
      "node_id": "MDQ6VXNlcjE1OTU5NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/15959632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thegostep",
      "html_url": "https://github.com/thegostep",
      "followers_url": "https://api.github.com/users/thegostep/followers",
      "following_url": "https://api.github.com/users/thegostep/following{/other_user}",
      "gists_url": "https://api.github.com/users/thegostep/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thegostep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thegostep/subscriptions",
      "organizations_url": "https://api.github.com/users/thegostep/orgs",
      "repos_url": "https://api.github.com/users/thegostep/repos",
      "events_url": "https://api.github.com/users/thegostep/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thegostep/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-01T22:19:45Z",
    "updated_at": "2022-09-01T22:19:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I created a forum post to discuss defining a standard for block scoring: https://collective.flashbots.net/t/block-scoring-for-mev-boost-relays/202",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1234845767/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1235648446",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1235648446",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1235648446,
    "node_id": "IC_kwDOGZSKs85Jpn--",
    "user": {
      "login": "joaorodrigues-consensys",
      "id": 43372251,
      "node_id": "MDQ6VXNlcjQzMzcyMjUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/43372251?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joaorodrigues-consensys",
      "html_url": "https://github.com/joaorodrigues-consensys",
      "followers_url": "https://api.github.com/users/joaorodrigues-consensys/followers",
      "following_url": "https://api.github.com/users/joaorodrigues-consensys/following{/other_user}",
      "gists_url": "https://api.github.com/users/joaorodrigues-consensys/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joaorodrigues-consensys/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joaorodrigues-consensys/subscriptions",
      "organizations_url": "https://api.github.com/users/joaorodrigues-consensys/orgs",
      "repos_url": "https://api.github.com/users/joaorodrigues-consensys/repos",
      "events_url": "https://api.github.com/users/joaorodrigues-consensys/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joaorodrigues-consensys/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-02T15:41:18Z",
    "updated_at": "2022-09-02T15:41:18Z",
    "author_association": "NONE",
    "body": "@metachris thanks for your reply. Is there any good on-chain indicator we could use to determine blocks built by mev-boost? Saw the `Extra Data:  Flashbots flashblock (Hex:0x466c617368626f747320666c617368626c6f636b)` in [this block](https://ropsten.etherscan.io/block/12915222) and was wondering if we could use it to identify that a given block was built by you guys. Thanks",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1235648446/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1236108706",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1236108706",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1236108706,
    "node_id": "IC_kwDOGZSKs85JrYWi",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-03T12:21:18Z",
    "updated_at": "2022-09-03T12:21:18Z",
    "author_association": "COLLABORATOR",
    "body": "You could, but that's likely to change at some point (soon). ",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1236108706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1238162970",
    "html_url": "https://github.com/flashbots/mev-boost/issues/220#issuecomment-1238162970",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/220",
    "id": 1238162970,
    "node_id": "IC_kwDOGZSKs85JzN4a",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-06T13:36:39Z",
    "updated_at": "2022-09-06T13:36:39Z",
    "author_association": "COLLABORATOR",
    "body": "Continuation of the discussion: https://collective.flashbots.net/t/block-scoring-for-mev-boost-relays/202",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1238162970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
