{
  "url": "https://api.github.com/repos/flashbots/mev-boost/issues/100",
  "repository_url": "https://api.github.com/repos/flashbots/mev-boost",
  "labels_url": "https://api.github.com/repos/flashbots/mev-boost/issues/100/labels{/name}",
  "comments_url": "https://api.github.com/repos/flashbots/mev-boost/issues/100/comments",
  "events_url": "https://api.github.com/repos/flashbots/mev-boost/issues/100/events",
  "html_url": "https://github.com/flashbots/mev-boost/issues/100",
  "id": 1213476201,
  "node_id": "I_kwDOGZSKs85IVC1p",
  "number": 100,
  "title": "Crash in GetHeaderV1 method call",
  "user": {
    "login": "0xpanoramix",
    "id": 61348595,
    "node_id": "MDQ6VXNlcjYxMzQ4NTk1",
    "avatar_url": "https://avatars.githubusercontent.com/u/61348595?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/0xpanoramix",
    "html_url": "https://github.com/0xpanoramix",
    "followers_url": "https://api.github.com/users/0xpanoramix/followers",
    "following_url": "https://api.github.com/users/0xpanoramix/following{/other_user}",
    "gists_url": "https://api.github.com/users/0xpanoramix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/0xpanoramix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/0xpanoramix/subscriptions",
    "organizations_url": "https://api.github.com/users/0xpanoramix/orgs",
    "repos_url": "https://api.github.com/users/0xpanoramix/repos",
    "events_url": "https://api.github.com/users/0xpanoramix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/0xpanoramix/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-04-23T23:17:58Z",
  "updated_at": "2022-04-24T07:19:21Z",
  "closed_at": "2022-04-24T07:19:21Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "## The GetHeaderV1 method is crashing when nil parameter is provided as the `blockHash` value\r\n\r\n### Description\r\n\r\nI was reading the code and testing the project when I realized that the `GetHeaderV1` method takes a pointer as parameter, the `blockHash`.\r\n\r\nHere is the original function code :\r\n```golang\r\n// GetHeaderV1 TODO\r\nfunc (m *BoostService) GetHeaderV1(ctx context.Context, blockHash *string) (*GetHeaderResponse, error) {\r\n\tmethod := \"builder_getHeaderV1\"\r\n\tlogMethod := m.log.WithField(\"method\", method)\r\n\r\n\tif len(*blockHash) != 66 {\r\n\t\treturn nil, fmt.Errorf(\"invalid block hash: %s\", *blockHash)\r\n\t}\r\n        // The rest of the function\r\n}\r\n```\r\n\r\nDereferencing the pointer without pre-verification of its content (here a non-nil check) causes the method call to crash when providing a nil value for the `blockHash` parameter.\r\n\r\nI know that the function is executed in a goroutine, but still, I think it impacts stability.\r\n\r\n### Your environment\r\n\r\n* **OS and version**: macOS Monterey v12.3.1\r\n* **branch/commit hash that causes this issue**: 1108378fc37d9466f0bca96998c97062df195c04\r\n\r\n### Steps to reproduce\r\n\r\n* How to reproduce this issue ?<br />\r\nAs written in the project's README, I built mev-boost using the following command :\r\n```shell\r\nmake build\r\n```\r\n\r\nAnd executed the binary using (don't mind the port, the default one was used by another program):\r\n```shell\r\n./mev-boost -port 8080\r\n```\r\n\r\nThen, in a new terminal, I ran the following curl command :\r\n```shell\r\ncurl -X POST http://127.0.0.1:8080/ -H 'Content-Type: application/json' --data '{\"jsonrpc\":\"2.0\",\"method\":\"builder_getHeaderV1\",\"params\":[],\"id\":1}'\r\n```\r\n\r\nTo confirm the behaviour, I also wrote the following test before patching the function :\r\n```golang\r\nfunc TestE2E_GetHeaderError(t *testing.T) {\r\n\trelay1 := setupMockRelay()\r\n\tserver, err := newTestBoostRPCServer([]string{relay1.URL})\r\n\trequire.Nil(t, err, err)\r\n\tdefer server.Stop()\r\n\r\n\tclient := gethRpc.DialInProc(server)\r\n\tdefer client.Close()\r\n\r\n\tres := new(GetHeaderResponse)\r\n\terr = client.Call(&res, \"builder_getHeaderV1\", nil)\r\n\trequire.Error(t, err)\r\n}\r\n```\r\n\r\nAnd both of them lead to a goroutine crash.\r\n\r\n* Where the issue is ?<br />\r\nAs mentionned in the description, the issue is caused by dereferencing a nil pointer.\r\n\r\n### Expected behaviour\r\nThe server should reject my invalid request with an error message (I suppose ?).\r\n\r\n### Actual behaviour\r\nThe goroutine handling the request crashed. Check out the logs for more info.\r\n\r\n### Logs\r\n\r\nWith the CURL command :\r\n```shell\r\nINFO[0000] mev-boost dev                                 prefix=cmd/mev-boost\r\nINFO[0000] listening on  localhost:8080                  prefix=cmd/mev-boost\r\nERROR[04-24|01:11:44.095] RPC method builder_getHeaderV1 crashed: runtime error: invalid memory address or nil pointer dereference\r\ngoroutine 40 [running]:\r\ngithub.com/ethereum/go-ethereum/rpc.(*callback).call.func1()\r\n        /Users/ptitluca/go/pkg/mod/github.com/!marius!van!der!wijden/go-ethereum@v1.8.22-0.20211208130742-dd90624af970/rpc/service.go:200 +0x74\r\npanic({0x10123db80, 0x101540e20})\r\n        /Users/ptitluca/go/go1.18.1/src/runtime/panic.go:838 +0x204\r\ngithub.com/flashbots/mev-boost/lib.(*BoostService).GetHeaderV1(0x14000236180, {0x1012b5028?, 0x14000222f40}, 0x0)\r\n        /Users/ptitluca/GolandProjects/mev-boost/lib/service.go:144 +0xe8\r\nreflect.Value.call({0x14000236200?, 0x1400021e198?, 0x1017b8a68?}, {0x10112b5f4, 0x4}, {0x14000228960, 0x3, 0x1010fcc6c?})\r\n        /Users/ptitluca/go/go1.18.1/src/reflect/value.go:556 +0x5e4\r\nreflect.Value.Call({0x14000236200?, 0x1400021e198?, 0x14000235968?}, {0x14000228960, 0x3, 0x3})\r\n        /Users/ptitluca/go/go1.18.1/src/reflect/value.go:339 +0x98\r\ngithub.com/ethereum/go-ethereum/rpc.(*callback).call(0x1400020eae0, {0x1012b5028?, 0x14000222f40}, {0x14000232228, 0x13}, {0x14000230420, 0x1, 0x1010f7370?})\r\n        /Users/ptitluca/go/pkg/mod/github.com/!marius!van!der!wijden/go-ethereum@v1.8.22-0.20211208130742-dd90624af970/rpc/service.go:206 +0x38c\r\ngithub.com/ethereum/go-ethereum/rpc.(*handler).runMethod(0x14000235958?, {0x1012b5028?, 0x14000222f40?}, 0x14000293d50, 0x1?, {0x14000230420?, 0x100010000?, 0x0?})\r\n        /Users/ptitluca/go/pkg/mod/github.com/!marius!van!der!wijden/go-ethereum@v1.8.22-0.20211208130742-dd90624af970/rpc/handler.go:389 +0x44\r\ngithub.com/ethereum/go-ethereum/rpc.(*handler).handleCall(0x1400023c240, 0x1400027f2c0, 0x14000293d50)\r\n        /Users/ptitluca/go/pkg/mod/github.com/!marius!van!der!wijden/go-ethereum@v1.8.22-0.20211208130742-dd90624af970/rpc/handler.go:337 +0x1dc\r\ngithub.com/ethereum/go-ethereum/rpc.(*handler).handleCallMsg(0x1400023c240, 0x1400027f2c0?, 0x14000293d50)\r\n        /Users/ptitluca/go/pkg/mod/github.com/!marius!van!der!wijden/go-ethereum@v1.8.22-0.20211208130742-dd90624af970/rpc/handler.go:298 +0x80\r\ngithub.com/ethereum/go-ethereum/rpc.(*handler).handleMsg.func1(0x1400027f2c0)\r\n        /Users/ptitluca/go/pkg/mod/github.com/!marius!van!der!wijden/go-ethereum@v1.8.22-0.20211208130742-dd90624af970/rpc/handler.go:139 +0x38\r\ngithub.com/ethereum/go-ethereum/rpc.(*handler).startCallProc.func1()\r\n        /Users/ptitluca/go/pkg/mod/github.com/!marius!van!der!wijden/go-ethereum@v1.8.22-0.20211208130742-dd90624af970/rpc/handler.go:226 +0xc4\r\ncreated by github.com/ethereum/go-ethereum/rpc.(*handler).startCallProc\r\n        /Users/ptitluca/go/pkg/mod/github.com/!marius!van!der!wijden/go-ethereum@v1.8.22-0.20211208130742-dd90624af970/rpc/handler.go:222 +0x90\r\n \r\nWARN [04-24|01:11:44.097] Served builder_getHeaderV1               conn=127.0.0.1:50085 reqid=1 t=1.580458ms err=\"method handler crashed\"\r\n```\r\n\r\nWhile running the test :\r\n```shell\r\n=== RUN   TestE2E_GetHeaderError\r\nERROR[04-24|01:13:57.100] RPC method builder_getHeaderV1 crashed: runtime error: invalid memory address or nil pointer dereference\r\ngoroutine 51 [running]:\r\ngithub.com/ethereum/go-ethereum/rpc.(*callback).call.func1()\r\n\t/Users/ptitluca/go/pkg/mod/github.com/!marius!van!der!wijden/go-ethereum@v1.8.22-0.20211208130742-dd90624af970/rpc/service.go:200 +0x74\r\npanic({0x1052defe0, 0x105640c00})\r\n\t/Users/ptitluca/go/go1.18.1/src/runtime/panic.go:838 +0x204\r\ngithub.com/flashbots/mev-boost/lib.(*BoostService).GetHeaderV1(0x140000ac500, {0x1053691a0?, 0x14000312080}, 0x0)\r\n\t/Users/ptitluca/GolandProjects/mev-boost/lib/service.go:144 +0xe8\r\nreflect.Value.call({0x140000ac580?, 0x140000a41f8?, 0x105990f18?}, {0x1051ae701, 0x4}, {0x1400031e050, 0x3, 0x105145f4c?})\r\n\t/Users/ptitluca/go/go1.18.1/src/reflect/value.go:556 +0x5e4\r\nreflect.Value.Call({0x140000ac580?, 0x140000a41f8?, 0x140003242d8?}, {0x1400031e050, 0x3, 0x3})\r\n\t/Users/ptitluca/go/go1.18.1/src/reflect/value.go:339 +0x98\r\ngithub.com/ethereum/go-ethereum/rpc.(*callback).call(0x1400009cd80, {0x1053691a0?, 0x14000312080}, {0x14000334000, 0x13}, {0x1400031a180, 0x1, 0x105140430?})\r\n\t/Users/ptitluca/go/pkg/mod/github.com/!marius!van!der!wijden/go-ethereum@v1.8.22-0.20211208130742-dd90624af970/rpc/service.go:206 +0x38c\r\ngithub.com/ethereum/go-ethereum/rpc.(*handler).runMethod(0x140003242d0?, {0x1053691a0?, 0x14000312080?}, 0x14000332000, 0x1?, {0x1400031a180?, 0x60000101010000?, 0x12c844800?})\r\n\t/Users/ptitluca/go/pkg/mod/github.com/!marius!van!der!wijden/go-ethereum@v1.8.22-0.20211208130742-dd90624af970/rpc/handler.go:389 +0x44\r\ngithub.com/ethereum/go-ethereum/rpc.(*handler).handleCall(0x140001402d0, 0x1400030e360, 0x14000332000)\r\n\t/Users/ptitluca/go/pkg/mod/github.com/!marius!van!der!wijden/go-ethereum@v1.8.22-0.20211208130742-dd90624af970/rpc/handler.go:337 +0x1dc\r\ngithub.com/ethereum/go-ethereum/rpc.(*handler).handleCallMsg(0x140001402d0, 0x1400030e360?, 0x14000332000)\r\n\t/Users/ptitluca/go/pkg/mod/github.com/!marius!van!der!wijden/go-ethereum@v1.8.22-0.20211208130742-dd90624af970/rpc/handler.go:298 +0x80\r\ngithub.com/ethereum/go-ethereum/rpc.(*handler).handleMsg.func1(0x1400030e360)\r\n\t/Users/ptitluca/go/pkg/mod/github.com/!marius!van!der!wijden/go-ethereum@v1.8.22-0.20211208130742-dd90624af970/rpc/handler.go:139 +0x38\r\ngithub.com/ethereum/go-ethereum/rpc.(*handler).startCallProc.func1()\r\n\t/Users/ptitluca/go/pkg/mod/github.com/!marius!van!der!wijden/go-ethereum@v1.8.22-0.20211208130742-dd90624af970/rpc/handler.go:226 +0xc4\r\ncreated by github.com/ethereum/go-ethereum/rpc.(*handler).startCallProc\r\n\t/Users/ptitluca/go/pkg/mod/github.com/!marius!van!der!wijden/go-ethereum@v1.8.22-0.20211208130742-dd90624af970/rpc/handler.go:222 +0x90\r\n```\r\n\r\n### Proposed solution\r\n\r\nA verification should be made before dereferencing the pointer to `blockHash`, and return an error if no such value has been provided.\r\nI have created a PR for this in #101.\r\n",
  "closed_by": {
    "login": "metachris",
    "id": 116939,
    "node_id": "MDQ6VXNlcjExNjkzOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/metachris",
    "html_url": "https://github.com/metachris",
    "followers_url": "https://api.github.com/users/metachris/followers",
    "following_url": "https://api.github.com/users/metachris/following{/other_user}",
    "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
    "organizations_url": "https://api.github.com/users/metachris/orgs",
    "repos_url": "https://api.github.com/users/metachris/repos",
    "events_url": "https://api.github.com/users/metachris/events{/privacy}",
    "received_events_url": "https://api.github.com/users/metachris/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/100/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/flashbots/mev-boost/issues/100/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1107778187",
    "html_url": "https://github.com/flashbots/mev-boost/issues/100#issuecomment-1107778187",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/100",
    "id": 1107778187,
    "node_id": "IC_kwDOGZSKs85CB1qL",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-24T07:19:21Z",
    "updated_at": "2022-04-24T07:19:21Z",
    "author_association": "COLLABORATOR",
    "body": "Thanks, the fix is merged.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1107778187/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
