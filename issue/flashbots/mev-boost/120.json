{
  "url": "https://api.github.com/repos/flashbots/mev-boost/issues/120",
  "repository_url": "https://api.github.com/repos/flashbots/mev-boost",
  "labels_url": "https://api.github.com/repos/flashbots/mev-boost/issues/120/labels{/name}",
  "comments_url": "https://api.github.com/repos/flashbots/mev-boost/issues/120/comments",
  "events_url": "https://api.github.com/repos/flashbots/mev-boost/issues/120/events",
  "html_url": "https://github.com/flashbots/mev-boost/issues/120",
  "id": 1227509977,
  "node_id": "I_kwDOGZSKs85JKlDZ",
  "number": 120,
  "title": "Recently proposed blocks",
  "user": {
    "login": "avsetsin",
    "id": 1422379,
    "node_id": "MDQ6VXNlcjE0MjIzNzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1422379?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avsetsin",
    "html_url": "https://github.com/avsetsin",
    "followers_url": "https://api.github.com/users/avsetsin/followers",
    "following_url": "https://api.github.com/users/avsetsin/following{/other_user}",
    "gists_url": "https://api.github.com/users/avsetsin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avsetsin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avsetsin/subscriptions",
    "organizations_url": "https://api.github.com/users/avsetsin/orgs",
    "repos_url": "https://api.github.com/users/avsetsin/repos",
    "events_url": "https://api.github.com/users/avsetsin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avsetsin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4352116416,
      "node_id": "LA_kwDOGZSKs88AAAABA2gGwA",
      "url": "https://api.github.com/repos/flashbots/mev-boost/labels/relay",
      "name": "relay",
      "color": "c5def5",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "metachris",
    "id": 116939,
    "node_id": "MDQ6VXNlcjExNjkzOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/metachris",
    "html_url": "https://github.com/metachris",
    "followers_url": "https://api.github.com/users/metachris/followers",
    "following_url": "https://api.github.com/users/metachris/following{/other_user}",
    "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
    "organizations_url": "https://api.github.com/users/metachris/orgs",
    "repos_url": "https://api.github.com/users/metachris/repos",
    "events_url": "https://api.github.com/users/metachris/events{/privacy}",
    "received_events_url": "https://api.github.com/users/metachris/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/flashbots/mev-boost/milestones/6",
    "html_url": "https://github.com/flashbots/mev-boost/milestone/6",
    "labels_url": "https://api.github.com/repos/flashbots/mev-boost/milestones/6/labels",
    "id": 8095569,
    "node_id": "MI_kwDOGZSKs84Ae4dR",
    "number": 6,
    "title": "validator-pool-extras",
    "description": "",
    "creator": {
      "login": "come-maiz",
      "id": 617831,
      "node_id": "MDQ6VXNlcjYxNzgzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/617831?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/come-maiz",
      "html_url": "https://github.com/come-maiz",
      "followers_url": "https://api.github.com/users/come-maiz/followers",
      "following_url": "https://api.github.com/users/come-maiz/following{/other_user}",
      "gists_url": "https://api.github.com/users/come-maiz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/come-maiz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/come-maiz/subscriptions",
      "organizations_url": "https://api.github.com/users/come-maiz/orgs",
      "repos_url": "https://api.github.com/users/come-maiz/repos",
      "events_url": "https://api.github.com/users/come-maiz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/come-maiz/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 1,
    "state": "closed",
    "created_at": "2022-06-19T14:03:29Z",
    "updated_at": "2022-07-27T23:05:04Z",
    "due_on": "2022-07-15T07:00:00Z",
    "closed_at": "2022-07-27T23:05:04Z"
  },
  "comments": 12,
  "created_at": "2022-05-06T07:22:22Z",
  "updated_at": "2022-08-04T22:14:15Z",
  "closed_at": "2022-07-19T18:49:36Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I'd like to discuss the idea of adding a method to relay API that returns blocks that have recently been proposed using relay.\r\n\r\n## Goal\r\n\r\nThe goal is to understand whether MEV-Boost was used to build a particular block and which relay was used for it. This is useful for participants such as staking pools to organize monitoring after validators that are operated by a third party.\r\n\r\n## Proposed solution\r\n\r\nThe goal can be achieved by adding a method that returns a block if it has been proposed using the current relay. Blocks can be stored in memory, and the stored number can be limited. Data for the last 32 slots should be enough for a third-party service to collect data about the last proposed blocks. All necessary data can be collected after a successful call to [`relay_proposeBlindedBlockV1`](https://github.com/flashbots/mev-boost/blob/895e6c57baf48a5eb5fbd64150c5b5d1f2b93347/docs/milestone-2.md#relay_proposeblindedblockv1) method.\r\n\r\n### relay_getProposedBlindedBlockV1\r\n\r\n#### Request\r\n\r\n* method: `relay_getProposedBlindedBlockV1`\r\n* params: \r\n\t1. `slot`: slot number\r\n\r\n#### Response\r\n* result: [`ProposedBlock`](#proposedblock)\r\n* error: code and message set in case an exception happens while performing the request.\r\n\r\n### Types\r\n\r\n#### ProposedBlock\r\n* `block`: [`SignedBlindedBeaconBlock`](https://github.com/flashbots/mev-boost/blob/895e6c57baf48a5eb5fbd64150c5b5d1f2b93347/docs/milestone-2.md#signedblindedbeaconblock) - the beacon block signed and proposed by a validator.\r\n* `payloadHeader`: [`SignedMEVPayloadHeader`](https://github.com/flashbots/mev-boost/blob/895e6c57baf48a5eb5fbd64150c5b5d1f2b93347/docs/milestone-2.md#signedmevpayloadheader) - the payload header signed by the relay.\r\n\r\n#### Specification\r\n* Relay software **MUST** return proposed block if it has been proposed using the relay in the last 32 slots, otherwise return `-32004: Unknown block`.\r\n\r\n## Alternatives\r\n\r\nThis may not be the best solution, and I suggest discuss how to achieve the goal. Since Flashbots has a centralized API ([blocks.flashbots.net](https://blocks.flashbots.net/)) and probably want to support it after the Merge, I assume you may have a vision of collecting such data.",
  "closed_by": {
    "login": "metachris",
    "id": 116939,
    "node_id": "MDQ6VXNlcjExNjkzOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/metachris",
    "html_url": "https://github.com/metachris",
    "followers_url": "https://api.github.com/users/metachris/followers",
    "following_url": "https://api.github.com/users/metachris/following{/other_user}",
    "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
    "organizations_url": "https://api.github.com/users/metachris/orgs",
    "repos_url": "https://api.github.com/users/metachris/repos",
    "events_url": "https://api.github.com/users/metachris/events{/privacy}",
    "received_events_url": "https://api.github.com/users/metachris/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/120/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 2
  },
  "timeline_url": "https://api.github.com/repos/flashbots/mev-boost/issues/120/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1120739709",
    "html_url": "https://github.com/flashbots/mev-boost/issues/120#issuecomment-1120739709",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/120",
    "id": 1120739709,
    "node_id": "IC_kwDOGZSKs85CzSF9",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-09T07:24:34Z",
    "updated_at": "2022-05-09T07:25:09Z",
    "author_association": "COLLABORATOR",
    "body": "Just to clarify - mev-boost could return a block for a given slot if it has received one from the relay, but it has no knowledge what was actually proposed by the validator. ",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1120739709/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1120882778",
    "html_url": "https://github.com/flashbots/mev-boost/issues/120#issuecomment-1120882778",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/120",
    "id": 1120882778,
    "node_id": "IC_kwDOGZSKs85Cz1Ba",
    "user": {
      "login": "Ruteri",
      "id": 11313015,
      "node_id": "MDQ6VXNlcjExMzEzMDE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/11313015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ruteri",
      "html_url": "https://github.com/Ruteri",
      "followers_url": "https://api.github.com/users/Ruteri/followers",
      "following_url": "https://api.github.com/users/Ruteri/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ruteri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ruteri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ruteri/subscriptions",
      "organizations_url": "https://api.github.com/users/Ruteri/orgs",
      "repos_url": "https://api.github.com/users/Ruteri/repos",
      "events_url": "https://api.github.com/users/Ruteri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ruteri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-09T09:44:25Z",
    "updated_at": "2022-05-09T09:44:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some notes:\r\n* You cannot ask validator-side mev-boost for this information, as it could be faked\r\n* Relay could save the blocks for which validator has signed the header, since this is what the validator committed to, and this cannot be faked (validator would get slashed)",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1120882778/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1121048294",
    "html_url": "https://github.com/flashbots/mev-boost/issues/120#issuecomment-1121048294",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/120",
    "id": 1121048294,
    "node_id": "IC_kwDOGZSKs85C0dbm",
    "user": {
      "login": "avsetsin",
      "id": 1422379,
      "node_id": "MDQ6VXNlcjE0MjIzNzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1422379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/avsetsin",
      "html_url": "https://github.com/avsetsin",
      "followers_url": "https://api.github.com/users/avsetsin/followers",
      "following_url": "https://api.github.com/users/avsetsin/following{/other_user}",
      "gists_url": "https://api.github.com/users/avsetsin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/avsetsin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/avsetsin/subscriptions",
      "organizations_url": "https://api.github.com/users/avsetsin/orgs",
      "repos_url": "https://api.github.com/users/avsetsin/repos",
      "events_url": "https://api.github.com/users/avsetsin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/avsetsin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-09T12:41:24Z",
    "updated_at": "2022-05-09T12:44:46Z",
    "author_association": "NONE",
    "body": "Perhaps, it would be better to collect the suggested payloads instead of the proposed blocks. It's still enough to know whether the MEV-Boost is used to create the block, since we can compare transactions_roots. But it allows to compare the value in the block against what all relays offer:\r\n\r\n* Check whether the validator gives preference to some relays;\r\n* Exclude from the suspicious cases where a local payload with more value than the relays suggest is selected.\r\n\r\nThis method might look like this:\r\n\r\n### relay_getSuggestedPayloadHeadersV1\r\n\r\nThe method returns an array of suggested `SignedMEVPayloadHeader` by slot. Headers can be stored in memory, and the stored number can be limited.\r\n\r\n#### Request\r\n\r\n* method: `relay_getSuggestedPayloadHeadersV1`\r\n* params: \r\n\t1. `slot`: slot number\r\n\r\n#### Response\r\n\r\n* payloadHeaders: Array of [`SignedMEVPayloadHeader`](https://github.com/flashbots/mev-boost/blob/895e6c57baf48a5eb5fbd64150c5b5d1f2b93347/docs/milestone-2.md#signedmevpayloadheader)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1121048294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1134505291",
    "html_url": "https://github.com/flashbots/mev-boost/issues/120#issuecomment-1134505291",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/120",
    "id": 1134505291,
    "node_id": "IC_kwDOGZSKs85Dny1L",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-23T10:36:09Z",
    "updated_at": "2022-06-22T10:11:33Z",
    "author_association": "COLLABORATOR",
    "body": "That makes sense, and we can add that to mev-boost. I guess in REST terms, similar to the builder spec, that might be looking like this:\r\n\r\n`GET /boost/v1/builder/recent_header/slot/{slot}`",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1134505291/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1134968486",
    "html_url": "https://github.com/flashbots/mev-boost/issues/120#issuecomment-1134968486",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/120",
    "id": 1134968486,
    "node_id": "IC_kwDOGZSKs85Dpj6m",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-23T17:51:27Z",
    "updated_at": "2022-05-23T18:15:44Z",
    "author_association": "COLLABORATOR",
    "body": "edit: I was talking w/ @metachris about the roles b/t builders, relays and proposers and some of what I wrote below may need to be adjusted, I'd suggest just holding tight on this for now\r\n\r\n@avsetsin welcome! I agree we should be able to track which builders and/or relays were involved in a given proposal.\r\n\r\nI'll assume when you say \"MEV-Boost\" you are referring to the overall pipeline and not that you are trying to identify that the particular relay mux software `mev-boost` is being used or not\r\n\r\nand from there I have a clarifying question for the issue: do we really care if we can identify the specific relay? or just that we want to attribute a proposal to a specific builder? some of this comes down to where we are today (just flashbots as the ~single builder/relay) and where I would like to see us head with a robust, healthy decentralized builder ecosystem with multiple competing players.\r\n\r\nif we want to build towards this wider world, then I think the critical thing is to expose `SignedBuilderBid`s (the builder can do this, the relay can provide as a service, there can be \"data availability\" DAOs that do this as part of a service, etc.) so that we can tie a given proposal on-chain (or even off-chain if you are collecting orphan blocks) to a given builder.\r\n\r\nif we want relay attributability as well (I personally haven't thought about this yet) then we will want to extend the https://github.com/ethereum/builder-specs so that relays sign over the `SignedBuilderBid`s\r\n\r\neither way, to bridge from here to then, I could see the flashbots relay exposing an endpoint for all of the `SignedBuilderBid`s they offer to proposers. Then anyone can compare which transactions end up in blocks against what the relay provides.  \r\n\r\nI would structure this as part of the \"relay APIs\" or even just flashbots-specific APIs for now and would not add this concern into the https://github.com/ethereum/builder-specs",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1134968486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1138415204",
    "html_url": "https://github.com/flashbots/mev-boost/issues/120#issuecomment-1138415204",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/120",
    "id": 1138415204,
    "node_id": "IC_kwDOGZSKs85D2tZk",
    "user": {
      "login": "avsetsin",
      "id": 1422379,
      "node_id": "MDQ6VXNlcjE0MjIzNzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1422379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/avsetsin",
      "html_url": "https://github.com/avsetsin",
      "followers_url": "https://api.github.com/users/avsetsin/followers",
      "following_url": "https://api.github.com/users/avsetsin/following{/other_user}",
      "gists_url": "https://api.github.com/users/avsetsin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/avsetsin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/avsetsin/subscriptions",
      "organizations_url": "https://api.github.com/users/avsetsin/orgs",
      "repos_url": "https://api.github.com/users/avsetsin/repos",
      "events_url": "https://api.github.com/users/avsetsin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/avsetsin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-26T11:05:33Z",
    "updated_at": "2022-05-26T11:05:33Z",
    "author_association": "NONE",
    "body": "> I'll assume when you say \"MEV-Boost\" you are referring to the overall pipeline and not that you are trying to identify that the particular relay mux software mev-boost is being used or not\r\n> \r\n> and from there I have a clarifying question for the issue: do we really care if we can identify the specific relay? or just that we want to attribute a proposal to a specific builder?\r\n\r\nLet's consider a scenario where the DAO controlling a stacking pool adopts a policy that MEV must be extracted by all validators to a single vault. In this case, the policy may include some restrictions about the source of payloads, otherwise a validator is tempted to build blocks on its own and take some of MEV directly to itself.\r\n\r\nThe current MEV-Boost design expects a whitelist of relays (but not builders), which can be used by DAO to limit the sources of payloads. And if DAO uses the whitelist, then there would need to be a mechanism for attributing a specific relay to a specific block, so that the community can make sure that all validators are following the adopted policy.\r\n\r\nIn a simple scheme where we have only flashbots with single relay and single builder, this would not be a problem tp identify the source, but in a scheme with multiple builders and relays this important to identify the entity whose choice can be controlled.\r\n\r\n> either way, to bridge from here to then, I could see the flashbots relay exposing an endpoint for all of the SignedBuilderBids they offer to proposers. Then anyone can compare which transactions end up in blocks against what the relay provides.\r\n\r\nThat would be perfect. It would likely need more effort on your part, since it would require storing data for all slots. I originally suggested limiting the ability to fetch data in time, so that you could do without storage and only keep the latest data in memory, in the hope that this could be implemented in the short term and we would have time to test it before the Merge.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1138415204/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1139893592",
    "html_url": "https://github.com/flashbots/mev-boost/issues/120#issuecomment-1139893592",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/120",
    "id": 1139893592,
    "node_id": "IC_kwDOGZSKs85D8WVY",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-27T17:51:24Z",
    "updated_at": "2022-05-27T17:51:24Z",
    "author_association": "COLLABORATOR",
    "body": "yeah I can see the use case (and there are many others!) being valuable\r\n\r\nI opened this issue to see what the appetite is for how attributable we want each message to be to which actors\r\n\r\nhttps://github.com/ethereum/builder-specs/issues/23",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1139893592/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1162914043",
    "html_url": "https://github.com/flashbots/mev-boost/issues/120#issuecomment-1162914043",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/120",
    "id": 1162914043,
    "node_id": "IC_kwDOGZSKs85FUKj7",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-22T10:15:15Z",
    "updated_at": "2022-06-22T10:15:15Z",
    "author_association": "COLLABORATOR",
    "body": "I'm close to finishing the relay API spec that will expose this data, and others. Would it still be useful then to expose the headers in mev-boost too?",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1162914043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1163442051",
    "html_url": "https://github.com/flashbots/mev-boost/issues/120#issuecomment-1163442051",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/120",
    "id": 1163442051,
    "node_id": "IC_kwDOGZSKs85FWLeD",
    "user": {
      "login": "avsetsin",
      "id": 1422379,
      "node_id": "MDQ6VXNlcjE0MjIzNzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1422379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/avsetsin",
      "html_url": "https://github.com/avsetsin",
      "followers_url": "https://api.github.com/users/avsetsin/followers",
      "following_url": "https://api.github.com/users/avsetsin/following{/other_user}",
      "gists_url": "https://api.github.com/users/avsetsin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/avsetsin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/avsetsin/subscriptions",
      "organizations_url": "https://api.github.com/users/avsetsin/orgs",
      "repos_url": "https://api.github.com/users/avsetsin/repos",
      "events_url": "https://api.github.com/users/avsetsin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/avsetsin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-22T17:59:54Z",
    "updated_at": "2022-06-22T17:59:54Z",
    "author_association": "NONE",
    "body": "> I'm close to finishing the relay API spec that will expose this data, and others.\r\n\r\n🚀 🎉 🥳\r\n\r\n\r\n> Would it still be useful then to expose the headers in mev-boost too?\r\n\r\nI can't find a good way to use this on the MEV-Boost side for validators pool monitoring. But perhaps there are some scenarios where it would be useful for people who have their own set of validators",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1163442051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1170932070",
    "html_url": "https://github.com/flashbots/mev-boost/issues/120#issuecomment-1170932070",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/120",
    "id": 1170932070,
    "node_id": "IC_kwDOGZSKs85FywFm",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-30T08:36:43Z",
    "updated_at": "2022-06-30T08:36:43Z",
    "author_association": "COLLABORATOR",
    "body": "The relay API spec draft, for reference: https://flashbots.notion.site/Relay-API-Spec-5fb0819366954962bc02e81cb33840f5",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1170932070/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1189438369",
    "html_url": "https://github.com/flashbots/mev-boost/issues/120#issuecomment-1189438369",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/120",
    "id": 1189438369,
    "node_id": "IC_kwDOGZSKs85G5WOh",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-19T18:49:35Z",
    "updated_at": "2022-07-19T18:49:35Z",
    "author_association": "COLLABORATOR",
    "body": "Closing this because implemented in the relay API. Please reopen or comment again if needed.",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1189438369/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1190125096",
    "html_url": "https://github.com/flashbots/mev-boost/issues/120#issuecomment-1190125096",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/120",
    "id": 1190125096,
    "node_id": "IC_kwDOGZSKs85G794o",
    "user": {
      "login": "avsetsin",
      "id": 1422379,
      "node_id": "MDQ6VXNlcjE0MjIzNzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1422379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/avsetsin",
      "html_url": "https://github.com/avsetsin",
      "followers_url": "https://api.github.com/users/avsetsin/followers",
      "following_url": "https://api.github.com/users/avsetsin/following{/other_user}",
      "gists_url": "https://api.github.com/users/avsetsin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/avsetsin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/avsetsin/subscriptions",
      "organizations_url": "https://api.github.com/users/avsetsin/orgs",
      "repos_url": "https://api.github.com/users/avsetsin/repos",
      "events_url": "https://api.github.com/users/avsetsin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/avsetsin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-20T10:50:48Z",
    "updated_at": "2022-07-20T10:50:59Z",
    "author_association": "NONE",
    "body": "> Closing this because implemented in the relay API\r\n\r\nIn the spec or is it already implemented in the code? I couldn't find an implementation, would be grateful if you might share a link to the code",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1190125096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
