{
  "url": "https://api.github.com/repos/flashbots/mev-boost/issues/455",
  "repository_url": "https://api.github.com/repos/flashbots/mev-boost",
  "labels_url": "https://api.github.com/repos/flashbots/mev-boost/issues/455/labels{/name}",
  "comments_url": "https://api.github.com/repos/flashbots/mev-boost/issues/455/comments",
  "events_url": "https://api.github.com/repos/flashbots/mev-boost/issues/455/events",
  "html_url": "https://github.com/flashbots/mev-boost/issues/455",
  "id": 1593827618,
  "node_id": "I_kwDOGZSKs85e_-Ei",
  "number": 455,
  "title": "Dynamic Relay Configuration Proposal",
  "user": {
    "login": "screwyprof",
    "id": 1536274,
    "node_id": "MDQ6VXNlcjE1MzYyNzQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1536274?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/screwyprof",
    "html_url": "https://github.com/screwyprof",
    "followers_url": "https://api.github.com/users/screwyprof/followers",
    "following_url": "https://api.github.com/users/screwyprof/following{/other_user}",
    "gists_url": "https://api.github.com/users/screwyprof/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/screwyprof/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/screwyprof/subscriptions",
    "organizations_url": "https://api.github.com/users/screwyprof/orgs",
    "repos_url": "https://api.github.com/users/screwyprof/repos",
    "events_url": "https://api.github.com/users/screwyprof/events{/privacy}",
    "received_events_url": "https://api.github.com/users/screwyprof/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4628350258,
      "node_id": "LA_kwDOGZSKs88AAAABE98FMg",
      "url": "https://api.github.com/repos/flashbots/mev-boost/labels/in%20development%20%F0%9F%9B%A0%EF%B8%8F",
      "name": "in development üõ†Ô∏è",
      "color": "fef2c0",
      "default": false,
      "description": "not yet ready to be merged"
    },
    {
      "id": 4649460740,
      "node_id": "LA_kwDOGZSKs88AAAABFSEkBA",
      "url": "https://api.github.com/repos/flashbots/mev-boost/labels/in%20review%20:mag:",
      "name": "in review :mag:",
      "color": "006b75",
      "default": false,
      "description": "currently being reviewed"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-02-21T17:08:56Z",
  "updated_at": "2023-03-16T19:54:35Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Dynamic Relay Configuration Proposal\r\n\r\nThis proposal summarises our take on[ Support Validator Account Level Relay Choice](https://github.com/flashbots/mev-boost/issues/154) and [Validator Level Relay Configuration](https://github.com/flashbots/mev-boost/issues/416) as part of ConsenSys Codefi team responding to the features our customers requested.\r\n\r\n\r\n## Requirements\r\n\r\nMany stakers run multiple keys on the same validator/consensus layer client. **MEV-Boost**, as currently implemented, requires all keys on the same node to point at the same set of relays.\r\n\r\n<img alt=\"meg-boost before\" src=\"https://user-images.githubusercontent.com/1536274/220412386-d13661e3-81b4-4e3d-ae0a-99a505d045ad.png\" width=\"400\" />\r\n\r\nThe objective of this proposal is to allow stakers to specify different relays for different validators without having to increase their consensus layer client population: \r\n\r\n<img alt=\"mev-boost after\" src=\"https://user-images.githubusercontent.com/1536274/220412381-2e71c192-ef20-4c04-8beb-4a3f8e1fa7d9.png\" width=\"400\" />\r\n\r\n\r\n\r\n## Acceptance Criteria\r\n\r\n- Different validator keys on the same validator client can point to different sets of relays\r\n- There is no compromise on security or introduction of a new attack surface\r\n- Minimal impact on the current latency sensitive operations of **MEV-Boost**\r\n- The implementation is optional - users can continue to use **MEV-Boost** as they do today\r\n- Changes to the relay set of a particular validator are adopted quickly by the infrastructure with no disruption (e.g.: restarting **MEV-Boost**)\r\n\r\n\r\n## Definitions\r\n\r\n**Relay Configuration Provide**r (**RCP**) holds information about validators and their corresponding relays. For example it may be as simple as a file or a remote API endpoint which returns a [Proposer Config](https://docs.teku.consensys.net/HowTo/Configure/Proposer-Configuration) - a JSON discussed in [Support validator account level relay choice](https://github.com/flashbots/mev-boost/issues/154) issue.\r\n\r\n**Relay Configuration Manager (RCM)** manages relays and their configurations. It fetches the configuration from an **RCP**, validates it and then populates an in memory **Relay Registry** which is basically a map of all the registered validators and their corresponding relay configs. The **Relay Registry** is then used to lookup relays for a given validator when requested. \r\n\r\n\r\n## Suggested Changes\r\n\r\nWe change **MEV-Boost** to:\r\n\r\n1. Support a command line/env config flag to use an **RCM**.\r\n2. Call the **RCM** to fetch all the relays for all the managed validators at startup.\r\n3. Query the **RCM** to get relays for a given validator on every **MEV-Boost** API call.\r\n\r\nWhen **RCM** is created at service startup it will try to fetch the configuration from an **RCP**. If this operation fails, the service will refuse to fast. \r\n\r\nThen a background job is started to periodically synchronise the configuration. The job is optional and enabled only when **proposer-config-refresh-enabled** param is set to true. It will run every 3.2 mins (half an epoch). It is important to note that the **Relay Registry** won‚Äôt be updated if the configuration is malformed or invalid, in which case the previous valid configuration is used.\r\n\r\n**MEV-Boost** then uses **RCM** to lookup information about relays for a given validator on every request to any endpoint (register validator, get header, get payload) via API.\r\n\r\n\r\n## Schema\r\n\r\nGiven the expectation to support multiple configuration sources, the implementation should align on a common schema. The schema we follow is the one discussed in the [proposed changes](https://github.com/flashbots/mev-boost/issues/154) and already used by **Teku** and available via [**validators-proposer-config**](https://docs.teku.consensys.net/HowTo/Configure/Proposer-Configuration) option. The intention is to allow specifying a set of specific relays per validator and otherwise fallback to a common set of relays. \r\n\r\nThe **proposer_config** section contains the mapping from validator public key to the fee recipient and builder config. Inside the **builder** section, there is a mandatory **enabled** field. If **true**, the **relays** should be used by **MEV-boost**. If **false**, then **MEV-Boost** should ignore this key (and skip any incoming requests for this validator key).\r\n\r\nIf a validator key is not present inside the **proposer_config**, then the configuration inside **default_config** should be applied.\r\n\r\n\r\n## F.A.Q\r\n\r\n\r\n### Are the proposed changes backward compatible?\r\n\r\nYes they are. Using the newly introduced features is optional. At the moment we suggest a binary choice: either to use **RCM** or to use **MEV-Boost** in the conventional way.\r\n\r\n\r\n### What RCPs are supported?\r\n\r\nAt the moment we have a file-based **RCP** available via **MEV-Boos**t‚Äôs **proposer-config-file** option and an API-based **RCP** configured via **proposer-config-url**.\r\n\r\n\r\n### What happens when the Relay Configuration Provider is down?\r\n\r\nWhen **RCM** is used then:\r\n\r\n- If an **RCP** is down when **MEV-Boost** starts, then the service will fail fast with an error and refuse to start.\r\n- If an **RCP** is down when **MEV-Boost** tries to synchronise the configuration, then the error is logged and the previously valid configuration will be used until the synchronisation is successful.\r\n\r\n\r\n### What happens if the config is changed after a validator has been registered?\r\n\r\nThe changes will take effect in the next epoch.\r\n\r\n### Should remote RCP be exposed to the internet?\r\n\r\nWhen using a remote RCP we strongly encourage running it in a trusted DMZ, preferably in the same network as mev-boost. We don‚Äôt expect it to be publicly available.\r\n\r\n## Test cases\r\n\r\n\r\n### Valid Cases\r\n\r\n| Proposer key | Proposer Config Builder | Proposer Relays | Default Config Builder | Default Relays | Result                      |\r\n| ------------ | ----------------------- | --------------- | ---------------------- | -------------- | --------------------------- |\r\n| Not Present  | n/a                     | n/a             | FALSE                  | EMPTY          | No MEV used, EL block built |\r\n| Not Present  | n/a                     | n/a             | TRUE                   | Filled         | Use default relays          |\r\n| Present      | NULL                    | n/a             | FALSE                  | EMPTY          | No MEV used, EL block built |\r\n| Present      | FALSE                   | Empty           | FALSE                  | EMPTY          | No MEV used, EL block built |\r\n| Present      | NULL                    | n/a             | TRUE                   | Filled         | Use default relays          |\r\n| Present      | FALSE                   | Empty           | TRUE                   | Filled         | No MEV used, EL block built |\r\n| Present      | TRUE                    | Filled          | TRUE                   | Filled         | Use the proposer relays     |\r\n| Present      | TRUE                    | Filled          | FALSE                  | EMPTY          | Use the proposer relays     |\r\n\r\n\r\n### Invalid cases\r\n\r\n| Proposer key | Proposer Config Builder | Proposer Relays | Default Config Builder | Default Relays | Result |\r\n| ------------ | ----------------------- | --------------- | ---------------------- | -------------- | ------ |\r\n| Present      | TRUE                    | Empty           | \\-                     | \\-             | Error  |\r\n| \\-           | \\-                      | \\-              | TRUE                   | Empty          | Error  |\r\n| \\-           | \\-                      | \\-              | NULL/FALSE             | \\-             | Ignore |\r\n| \\-           | \\-                      | \\-              | FALSE                  | Filled         | Ignore |\r\n\r\n\r\n\r\n### Benchmarks\r\n\r\n\r\n```\r\ngoos: darwin\r\ngoarch: arm64\r\npkg: github.com/flashbots/mev-boost/server\r\n```\r\n\r\nSeconds per operation:\r\n\r\n|  Test               |  Before       | After        | Diff                     |\r\n| ------------------- | ------------- | ------------ | ------------------------ |\r\n| RegisterValidator-8 | 108.0¬µ ¬± 11   | 134.6¬µ ¬± 12% | \\+24.63% (p=0.000 n=10   |\r\n| GetHeader-8         | 1.762m ¬± 88%  | 1.792m ¬±  2% |        ~ (p=0.579 n=10)  |\r\n| GetPayload-8        | 1651.4¬µ ¬±  7% | 515.4¬µ ¬± 19% | \\-68.79% (p=0.000 n=10)  |\r\n| geomean             | 679.8¬µ        | 499.1¬µ       | \\-26.59%                 |\r\n\r\nBytes per operation:\r\n\r\n|  Test               |  Before       | After        | Diff                     |\r\n| ------------------- | ------------- | ------------ | ------------------------ |\r\n| RegisterValidator-8 | 73.96Ki ¬± 1% | 118.86Ki ¬± 0% | \\+60.71% (p=0.000 n=10)  |\r\n| GetHeader-8         | 180.1Ki ¬± 1% | 225.8Ki ¬± 0%  | \\+25.39% (p=0.000 n=10)  |\r\n| GetPayload-8        | 711.4Ki ¬± 1% | 221.1Ki ¬± 2%  | \\-68.92% (p=0.000 n=10)  |\r\n| geomean             | 211.6Ki      |  181.1Ki      | \\-14.44%                 |\r\n\r\nAllocations per operation:\r\n\r\n|  Test               |  Before       | After        | Diff                     |\r\n| ------------------- | ------------- | ------------ | ------------------------ |\r\n| RegisterValidator-8 | 921.0 ¬± 0   | 1500.0 ¬± 0%   | \\+62.87% (p=0.000 n=10)   |\r\n| GetHeader-8         | 1.842k ¬± 0% | 2.407k ¬± 0%   | \\+30.67% (p=0.000 n=10)   |\r\n| GetPayload-8        | 4.239k ¬± 0% |  2.407k ¬± 0%  | \\-51.62% (p=0.000 n=10)   |\r\n| geomean             |  1.930k     | 1.949k        | \\+0.98%                   |",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/455/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/flashbots/mev-boost/issues/455/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1438995279",
    "html_url": "https://github.com/flashbots/mev-boost/issues/455#issuecomment-1438995279",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/455",
    "id": 1438995279,
    "node_id": "IC_kwDOGZSKs85VxVNP",
    "user": {
      "login": "metachris",
      "id": 116939,
      "node_id": "MDQ6VXNlcjExNjkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metachris",
      "html_url": "https://github.com/metachris",
      "followers_url": "https://api.github.com/users/metachris/followers",
      "following_url": "https://api.github.com/users/metachris/following{/other_user}",
      "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
      "organizations_url": "https://api.github.com/users/metachris/orgs",
      "repos_url": "https://api.github.com/users/metachris/repos",
      "events_url": "https://api.github.com/users/metachris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metachris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-21T19:36:54Z",
    "updated_at": "2023-02-21T19:36:54Z",
    "author_association": "COLLABORATOR",
    "body": "This is pretty cool, great work! Will review in detail these days.\r\n\r\nBtw, love the speed improvements of 25% on the side üî• ü§† ",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1438995279/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1468330885",
    "html_url": "https://github.com/flashbots/mev-boost/issues/455#issuecomment-1468330885",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/455",
    "id": 1468330885,
    "node_id": "IC_kwDOGZSKs85XhPOF",
    "user": {
      "login": "ralexstokes",
      "id": 3113781,
      "node_id": "MDQ6VXNlcjMxMTM3ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3113781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralexstokes",
      "html_url": "https://github.com/ralexstokes",
      "followers_url": "https://api.github.com/users/ralexstokes/followers",
      "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ralexstokes/orgs",
      "repos_url": "https://api.github.com/users/ralexstokes/repos",
      "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralexstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-14T15:34:28Z",
    "updated_at": "2023-03-14T15:37:16Z",
    "author_association": "COLLABORATOR",
    "body": "adding support for per-validator relay configuration is the right direction\r\n\r\nI do wonder if there are ways to link this to the key-manager APIs https://github.com/ethereum/keymanager-APIs so we can avoid a proliferation of configuration...\r\n\r\nsketch of proposal:\r\nextend keymanager-APIs with ability to set relay choice(s) per validator public-key\r\nexpose this info for `mev-boost` (or whoever..!) to query\r\n\r\nedit: I guess the keymanager-APIs could expose the RCP endpoint and we can unify that way",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1468330885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1468561881",
    "html_url": "https://github.com/flashbots/mev-boost/issues/455#issuecomment-1468561881",
    "issue_url": "https://api.github.com/repos/flashbots/mev-boost/issues/455",
    "id": 1468561881,
    "node_id": "IC_kwDOGZSKs85XiHnZ",
    "user": {
      "login": "screwyprof",
      "id": 1536274,
      "node_id": "MDQ6VXNlcjE1MzYyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1536274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/screwyprof",
      "html_url": "https://github.com/screwyprof",
      "followers_url": "https://api.github.com/users/screwyprof/followers",
      "following_url": "https://api.github.com/users/screwyprof/following{/other_user}",
      "gists_url": "https://api.github.com/users/screwyprof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/screwyprof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/screwyprof/subscriptions",
      "organizations_url": "https://api.github.com/users/screwyprof/orgs",
      "repos_url": "https://api.github.com/users/screwyprof/repos",
      "events_url": "https://api.github.com/users/screwyprof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/screwyprof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-14T17:51:02Z",
    "updated_at": "2023-03-14T17:51:02Z",
    "author_association": "NONE",
    "body": "Hey @ralexstokes, \r\n\r\nAt the moment if the response produced by `keymanager` is compatible with the schema described above, then `mevboost` is compatible out of the box once this PR is merged. If not, we should agree on schema first. ",
    "reactions": {
      "url": "https://api.github.com/repos/flashbots/mev-boost/issues/comments/1468561881/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
