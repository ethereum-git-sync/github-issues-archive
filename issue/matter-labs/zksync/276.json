{
  "url": "https://api.github.com/repos/matter-labs/zksync/issues/276",
  "repository_url": "https://api.github.com/repos/matter-labs/zksync",
  "labels_url": "https://api.github.com/repos/matter-labs/zksync/issues/276/labels{/name}",
  "comments_url": "https://api.github.com/repos/matter-labs/zksync/issues/276/comments",
  "events_url": "https://api.github.com/repos/matter-labs/zksync/issues/276/events",
  "html_url": "https://github.com/matter-labs/zksync/issues/276",
  "id": 778846323,
  "node_id": "MDU6SXNzdWU3Nzg4NDYzMjM=",
  "number": 276,
  "title": "Unable to configure zk sync in local: facing error while starting zk server",
  "user": {
    "login": "mleoanbarasan",
    "id": 24670961,
    "node_id": "MDQ6VXNlcjI0NjcwOTYx",
    "avatar_url": "https://avatars.githubusercontent.com/u/24670961?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mleoanbarasan",
    "html_url": "https://github.com/mleoanbarasan",
    "followers_url": "https://api.github.com/users/mleoanbarasan/followers",
    "following_url": "https://api.github.com/users/mleoanbarasan/following{/other_user}",
    "gists_url": "https://api.github.com/users/mleoanbarasan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mleoanbarasan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mleoanbarasan/subscriptions",
    "organizations_url": "https://api.github.com/users/mleoanbarasan/orgs",
    "repos_url": "https://api.github.com/users/mleoanbarasan/repos",
    "events_url": "https://api.github.com/users/mleoanbarasan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mleoanbarasan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-01-05T10:26:17Z",
  "updated_at": "2022-03-04T17:51:10Z",
  "closed_at": "2022-03-04T17:51:10Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi, I am trying to configure zk in my local environment to explore the L2 and write the smart contracts using following guids:\r\n\r\nhttps://github.com/matter-labs/zksync/blob/master/docs/setup-dev.md\r\n\r\nhttps://github.com/matter-labs/zksync/blob/master/docs/launch.md\r\n\r\nBut I am facing following issue while starting zk server:\r\n\r\n   Compiling zksync_storage v1.0.0 (/Users/leoanbarasanm/Projects/zksync/zksync/core/lib/storage)\r\nerror: error returned from database: database \"plasma\" does not exist\r\n  --> core/lib/storage/src/chain/account/mod.rs:32:27\r\n   |\r\n32 |           let mut results = sqlx::query_as!(\r\n   |  ___________________________^\r\n33 | |             StorageAccountCreation,\r\n34 | |             \"\r\n35 | |                 SELECT * FROM account_creates\r\n...  |\r\n41 | |             true\r\n42 | |         )\r\n   | |_________^\r\n   |\r\n   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: error returned from database: database \"plasma\" does not exist\r\n   --> core/lib/storage/src/chain/account/mod.rs:96:36\r\n    |\r\n96  |           let account_balance_diff = sqlx::query_as!(\r\n    |  ____________________________________^\r\n97  | |             StorageAccountUpdate,\r\n98  | |             \"\r\n99  | |                 SELECT * FROM account_balance_updates\r\n...   |\r\n103 | |             last_block\r\n104 | |         )\r\n    | |_________^\r\n    |\r\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: error returned from database: database \"plasma\" does not exist\r\n   --> core/lib/storage/src/chain/account/mod.rs:108:37\r\n    |\r\n108 |           let account_creation_diff = sqlx::query_as!(\r\n    |  _____________________________________^\r\n109 | |             StorageAccountCreation,\r\n110 | |             \"\r\n111 | |                 SELECT * FROM account_creates\r\n...   |\r\n115 | |             last_block\r\n116 | |         )\r\n    | |_________^\r\n    |\r\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: error returned from database: database \"plasma\" does not exist\r\n   --> core/lib/storage/src/chain/account/mod.rs:120:35\r\n    |\r\n120 |           let account_pubkey_diff = sqlx::query_as!(\r\n    |  ___________________________________^\r\n121 | |             StorageAccountPubkeyUpdate,\r\n122 | |             \"\r\n123 | |                 SELECT * FROM account_pubkey_updates\r\n...   |\r\n127 | |             last_block\r\n128 | |         )\r\n    | |_________^\r\n    |\r\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: error returned from database: database \"plasma\" does not exist\r\n   --> core/lib/storage/src/chain/account/mod.rs:198:29\r\n    |\r\n198 |           let maybe_account = sqlx::query_as!(\r\n    |  _____________________________^\r\n199 | |             StorageAccount,\r\n200 | |             \"\r\n201 | |                 SELECT * FROM accounts\r\n...   |\r\n204 | |             i64::from(account_id)\r\n205 | |         )\r\n    | |_________^\r\n\r\n\r\nerror[E0698]: type inside `async fn` body must be known in this context\r\n   --> core/lib/storage/src/chain/mempool/mod.rs:222:13\r\n    |\r\n222 |         let batch_id = 0; // Special case: batch_id == 0 <==> transaction is not a part of some batch\r\n    |             ^^^^^^^^ cannot infer type for type `{integer}`\r\n    |\r\nnote: the type is part of the `async fn` body because of this `await`\r\n   --> core/lib/storage/src/chain/mempool/mod.rs:229:9\r\n    |\r\n229 | /         sqlx::query!(\r\n230 | |             \"INSERT INTO mempool_txs (tx_hash, tx, created_at, eth_sign_data, batch_id)\r\n231 | |             VALUES ($1, $2, $3, $4, $5)\",\r\n232 | |             tx_hash,\r\n...   |\r\n238 | |         .execute(self.0.conn())\r\n239 | |         .await?;\r\n    | |______________^\r\n\r\nerror[E0277]: the size for values of type `[u8]` cannot be known at compilation time\r\n  --> core/lib/storage/src/ethereum/mod.rs:99:53\r\n   |\r\n99 |             let final_hash = eth_op.final_hash.map(|hash| H256::from_slice(&hash));\r\n   |                                                     ^^^^ doesn't have a size known at compile-time\r\n   |\r\n   = help: the trait `Sized` is not implemented for `[u8]`\r\n   = help: unsized locals are gated as an unstable feature\r\nhelp: function arguments must have a statically known size, borrowed types always have a known size\r\n   |\r\n99 |             let final_hash = eth_op.final_hash.map(|&hash| H256::from_slice(&hash));\r\n   |                                                     ^\r\n\r\nwarning: unused import: `itertools::Itertools`\r\n --> core/lib/storage/src/data_restore/mod.rs:4:5\r\n  |\r\n4 | use itertools::Itertools;\r\n  |     ^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `sqlx::Done`\r\n --> core/lib/storage/src/prover/mod.rs:4:5\r\n  |\r\n4 | use sqlx::Done;\r\n  |     ^^^^^^^^^^\r\n\r\nerror: aborting due to 127 previous errors; 16 warnings emitted\r\n\r\nSome errors have detailed explanations: E0277, E0698.\r\nFor more information about an error, try `rustc --explain E0277`.\r\nerror: could not compile `zksync_storage`\r\n\r\nTo learn more, run the command again with --verbose.\r\nError: Child process exited with code 101\r\n",
  "closed_by": {
    "login": "adrianchifor",
    "id": 6370064,
    "node_id": "MDQ6VXNlcjYzNzAwNjQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6370064?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/adrianchifor",
    "html_url": "https://github.com/adrianchifor",
    "followers_url": "https://api.github.com/users/adrianchifor/followers",
    "following_url": "https://api.github.com/users/adrianchifor/following{/other_user}",
    "gists_url": "https://api.github.com/users/adrianchifor/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/adrianchifor/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/adrianchifor/subscriptions",
    "organizations_url": "https://api.github.com/users/adrianchifor/orgs",
    "repos_url": "https://api.github.com/users/adrianchifor/repos",
    "events_url": "https://api.github.com/users/adrianchifor/events{/privacy}",
    "received_events_url": "https://api.github.com/users/adrianchifor/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/matter-labs/zksync/issues/276/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/matter-labs/zksync/issues/276/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/matter-labs/zksync/issues/comments/755128754",
    "html_url": "https://github.com/matter-labs/zksync/issues/276#issuecomment-755128754",
    "issue_url": "https://api.github.com/repos/matter-labs/zksync/issues/276",
    "id": 755128754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NTEyODc1NA==",
    "user": {
      "login": "mleoanbarasan",
      "id": 24670961,
      "node_id": "MDQ6VXNlcjI0NjcwOTYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/24670961?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mleoanbarasan",
      "html_url": "https://github.com/mleoanbarasan",
      "followers_url": "https://api.github.com/users/mleoanbarasan/followers",
      "following_url": "https://api.github.com/users/mleoanbarasan/following{/other_user}",
      "gists_url": "https://api.github.com/users/mleoanbarasan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mleoanbarasan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mleoanbarasan/subscriptions",
      "organizations_url": "https://api.github.com/users/mleoanbarasan/orgs",
      "repos_url": "https://api.github.com/users/mleoanbarasan/repos",
      "events_url": "https://api.github.com/users/mleoanbarasan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mleoanbarasan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-06T07:11:56Z",
    "updated_at": "2021-01-06T07:11:56Z",
    "author_association": "NONE",
    "body": "Hi, i have downgraded rust to 1.41.0 to match the given configuration. But now i am facing following error:\r\n\r\nerror[E0432]: unresolved imports `proc_macro`, `getrandom`\r\n --> /Users/leoanbarasanm/.cargo/registry/src/github.com-1ecc6299db9ec823/const-random-macro-0.1.11/src/lib.rs:2:5\r\n  |\r\n1 | use getrandom;\r\n  |     ^^^^^^^^^\r\n2 | use proc_macro::*;\r\n  |     ^^^^^^^^^^ use of undeclared type or module `proc_macro`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared type or module `TokenTree`\r\n  --> /Users/leoanbarasanm/.cargo/registry/src/github.com-1ecc6299db9ec823/const-random-macro-0.1.11/src/lib.rs:17:5\r\n   |\r\n17 |     TokenTree::from(Ident::new(ident, Span::call_site())).into()\r\n   |     ^^^^^^^^^ use of undeclared type or module `TokenTree`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared type or module `Ident`\r\n  --> /Users/leoanbarasanm/.cargo/registry/src/github.com-1ecc6299db9ec823/const-random-macro-0.1.11/src/lib.rs:17:21\r\n   |\r\n17 |     TokenTree::from(Ident::new(ident, Span::call_site())).into()\r\n   |                     ^^^^^ use of undeclared type or module `Ident`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared type or module `Span`\r\n  --> /Users/leoanbarasanm/.cargo/registry/src/github.com-1ecc6299db9ec823/const-random-macro-0.1.11/src/lib.rs:17:39\r\n   |\r\n17 |     TokenTree::from(Ident::new(ident, Span::call_site())).into()\r\n   |                                       ^^^^ use of undeclared type or module `Span`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared type or module `TokenTree`\r\n  --> /Users/leoanbarasanm/.cargo/registry/src/github.com-1ecc6299db9ec823/const-random-macro-0.1.11/src/lib.rs:23:17\r\n   |\r\n23 |         \"u8\" => TokenTree::from(Literal::u8_suffixed(gen_random())).into(),\r\n   |                 ^^^^^^^^^ use of undeclared type or module `TokenTree`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared type or module `Literal`\r\n  --> /Users/leoanbarasanm/.cargo/registry/src/github.com-1ecc6299db9ec823/const-random-macro-0.1.11/src/lib.rs:23:33\r\n   |\r\n23 |         \"u8\" => TokenTree::from(Literal::u8_suffixed(gen_random())).into(),\r\n   |                                 ^^^^^^^ use of undeclared type or module `Literal`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared type or module `TokenTree`\r\n  --> /Users/leoanbarasanm/.cargo/registry/src/github.com-1ecc6299db9ec823/const-random-macro-0.1.11/src/lib.rs:24:18\r\n   |\r\n24 |         \"u16\" => TokenTree::from(Literal::u16_suffixed(gen_random())).into(),\r\n   |                  ^^^^^^^^^ use of undeclared type or module `TokenTree`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared type or module `Literal`\r\n  --> /Users/leoanbarasanm/.cargo/registry/src/github.com-1ecc6299db9ec823/const-random-macro-0.1.11/src/lib.rs:24:34\r\n   |\r\n24 |         \"u16\" => TokenTree::from(Literal::u16_suffixed(gen_random())).into(),\r\n   |                                  ^^^^^^^ use of undeclared type or module `Literal`\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/matter-labs/zksync/issues/comments/755128754/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/matter-labs/zksync/issues/comments/765927716",
    "html_url": "https://github.com/matter-labs/zksync/issues/276#issuecomment-765927716",
    "issue_url": "https://api.github.com/repos/matter-labs/zksync/issues/276",
    "id": 765927716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTkyNzcxNg==",
    "user": {
      "login": "popzxc",
      "id": 12111581,
      "node_id": "MDQ6VXNlcjEyMTExNTgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/popzxc",
      "html_url": "https://github.com/popzxc",
      "followers_url": "https://api.github.com/users/popzxc/followers",
      "following_url": "https://api.github.com/users/popzxc/following{/other_user}",
      "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions",
      "organizations_url": "https://api.github.com/users/popzxc/orgs",
      "repos_url": "https://api.github.com/users/popzxc/repos",
      "events_url": "https://api.github.com/users/popzxc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/popzxc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-23T12:10:06Z",
    "updated_at": "2021-01-23T12:10:06Z",
    "author_association": "MEMBER",
    "body": "1.41 in the docs is just for example, I guess we should clarify that. It just happened to be the most recent one at the time when the docs were written.\r\n\r\nRegarding original issue: we use SQLx for PostgreSQL interaction which checks the queries during the compilation time.\r\nIn order to do so, you should have a database with all the migrations applied, and `DATABASE_URL` environment variable must be set to the URL of this database. Password should not be required to connect. In development scenario we use the database spawned via `docker-compose`.\r\n\r\nIf you have set up a database according to our guides and compilation fails when you just try to compile the project, it means that `DATABASE_URL` variable is missing. To overcome this issue, you should create file named `.env` in the `core/lib/storage` and put `DATABASE_URL={..path to databae}` line there.\r\n\r\nOnce again, if you set up the database according to our guides, you can re-use `.env.backup` file that is already there, you will only have to run `cp .env.backup .env`.",
    "reactions": {
      "url": "https://api.github.com/repos/matter-labs/zksync/issues/comments/765927716/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
