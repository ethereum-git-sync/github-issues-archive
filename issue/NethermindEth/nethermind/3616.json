{
  "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3616",
  "repository_url": "https://api.github.com/repos/NethermindEth/nethermind",
  "labels_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3616/labels{/name}",
  "comments_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3616/comments",
  "events_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3616/events",
  "html_url": "https://github.com/NethermindEth/nethermind/issues/3616",
  "id": 1057150921,
  "node_id": "I_kwDOBggaLc4_AtfJ",
  "number": 3616,
  "title": "eth_getLogs / eth_subscribe calls repeated items in address param",
  "user": {
    "login": "jordipainan",
    "id": 17238033,
    "node_id": "MDQ6VXNlcjE3MjM4MDMz",
    "avatar_url": "https://avatars.githubusercontent.com/u/17238033?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jordipainan",
    "html_url": "https://github.com/jordipainan",
    "followers_url": "https://api.github.com/users/jordipainan/followers",
    "following_url": "https://api.github.com/users/jordipainan/following{/other_user}",
    "gists_url": "https://api.github.com/users/jordipainan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jordipainan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jordipainan/subscriptions",
    "organizations_url": "https://api.github.com/users/jordipainan/orgs",
    "repos_url": "https://api.github.com/users/jordipainan/repos",
    "events_url": "https://api.github.com/users/jordipainan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jordipainan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "dceleda",
    "id": 26231116,
    "node_id": "MDQ6VXNlcjI2MjMxMTE2",
    "avatar_url": "https://avatars.githubusercontent.com/u/26231116?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dceleda",
    "html_url": "https://github.com/dceleda",
    "followers_url": "https://api.github.com/users/dceleda/followers",
    "following_url": "https://api.github.com/users/dceleda/following{/other_user}",
    "gists_url": "https://api.github.com/users/dceleda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dceleda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dceleda/subscriptions",
    "organizations_url": "https://api.github.com/users/dceleda/orgs",
    "repos_url": "https://api.github.com/users/dceleda/repos",
    "events_url": "https://api.github.com/users/dceleda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dceleda/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "dceleda",
      "id": 26231116,
      "node_id": "MDQ6VXNlcjI2MjMxMTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/26231116?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dceleda",
      "html_url": "https://github.com/dceleda",
      "followers_url": "https://api.github.com/users/dceleda/followers",
      "following_url": "https://api.github.com/users/dceleda/following{/other_user}",
      "gists_url": "https://api.github.com/users/dceleda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dceleda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dceleda/subscriptions",
      "organizations_url": "https://api.github.com/users/dceleda/orgs",
      "repos_url": "https://api.github.com/users/dceleda/repos",
      "events_url": "https://api.github.com/users/dceleda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dceleda/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "kjazgar",
      "id": 67744705,
      "node_id": "MDQ6VXNlcjY3NzQ0NzA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/67744705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kjazgar",
      "html_url": "https://github.com/kjazgar",
      "followers_url": "https://api.github.com/users/kjazgar/followers",
      "following_url": "https://api.github.com/users/kjazgar/following{/other_user}",
      "gists_url": "https://api.github.com/users/kjazgar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kjazgar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kjazgar/subscriptions",
      "organizations_url": "https://api.github.com/users/kjazgar/orgs",
      "repos_url": "https://api.github.com/users/kjazgar/repos",
      "events_url": "https://api.github.com/users/kjazgar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kjazgar/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2021-11-18T09:52:04Z",
  "updated_at": "2021-11-23T01:06:17Z",
  "closed_at": "2021-11-23T01:06:16Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Describe the bug**\r\nMaybe not a bug :)\r\n\r\nNethermind logs from `eth_getLogs` / `eth_subscribe` call returns an array with the same addresses repeated many times.\r\n\r\nWe are using the go-ethereum library to subscribe to some contracts in order to react to events happening on those contracts.\r\nThe exact function used is `ethclient.SubscribeFilterLogs(ctx, query, logs)`:\r\n```golang\r\nlog.Infof(\"subscribing to Ethereum Events from block %d\", lastBlockNumber)\r\nquery := eth.FilterQuery{\r\n\tAddresses: ev.ContractsAddress,\r\n\tFromBlock: new(big.Int).SetUint64(lastBlockNumber),\r\n}\r\nlogs := make(chan ethtypes.Log, 30) // give it some buffer as recommended by the package library\r\nvar sub eth.Subscription\r\nsub, err = ev.VotingHandle.EthereumClient.SubscribeFilterLogs(ctx, query, logs)\r\n```\r\n`ev.ContractsAddress` is an array of contract addresses filled with ENS resolved addresses.\r\n\r\nWhen subscribing using the Nethermind client everything works fine and we are able to read the new logs and so on, but when looking at the logs of the node seems that the internal call made (`eth_getLogs` / `eth_subscribe`) is using the same contract addresses repeated many times.\r\n\r\nIs this behavior expected ? Are the logs returning all the addresses used in past `eth_getLogs` / `eth_subscribe` calls ? Or is the request effectively getting the same logs many times ? \r\n\r\n**Expected behavior**\r\n`eth_getLogs` / `eth_subscribe` address field does not have repeated addresses\r\n\r\n**Additional context**\r\nSome logs (address arrays are much longer):\r\n```\r\n2021-11-13 09-59-47.9604|Nethermind starting initialization.\r\n2021-11-13 09-59-48.2623|Loading embedded plugins\r\n2021-11-13 09-59-48.2625|  Found plugin type Nethermind.Consensus.AuRa.AuRaPlugin\r\n2021-11-13 09-59-48.2626|  Found plugin type Nethermind.Consensus.Clique.CliquePlugin\r\n2021-11-13 09-59-48.2626|  Found plugin type Nethermind.Consensus.Ethash.EthashPlugin\r\n2021-11-13 09-59-48.2626|  Found plugin type Nethermind.Consensus.Ethash.NethDevPlugin\r\nResolved executing directory as /nethermind.\r\n2021-11-13 09-59-48.3431|Loading 3 assemblies from /nethermind/plugins\r\n2021-11-13 09-59-48.3434|Loading assembly Nethermind.Merge.Plugin\r\n2021-11-13 09-59-48.3475|  Found plugin type Nethermind.Merge.Plugin\r\n2021-11-13 09-59-48.3476|Loading assembly Nethermind.HealthChecks\r\n2021-11-13 09-59-48.3492|  Found plugin type Nethermind.HealthChecks\r\n2021-11-13 09-59-48.3493|Loading assembly Nethermind.Mev\r\n2021-11-13 09-59-48.3525|  Found plugin type Nethermind.Mev\r\n2021-11-13 09-59-48.5195|Loading standard NLog.config file from /nethermind/NLog.config.\r\n2021-11-13 09-59-48.8700|NLog.config loaded in 350ms.\r\n2021-11-13 09-59-49.5770|Configuration initialized.\r\n2021-11-13 10:00:05.2285|Start block loaded from reorg boundary - 19039935 - 19039935 (0x6eeaf9...1195ac) \r\n2021-11-13 10:00:05.2910|Numbers resolved, level = Max(19039935, 19039999), header = Max(19039935, 19039999), body = Max(19039935, 19039999) \r\n2021-11-13 10:00:05.2921|Block tree initialized, last processed is 19039935 (0x6eeaf9...1195ac), best queued is 19039999, best known is 19039999, lowest inserted header 1, body 0 \r\n2021-11-13 10:00:05.3003|Initializing 7 plugins \r\n2021-11-13 10:00:05.3006|  AuRa by Nethermind \r\n2021-11-13 10:00:05.3006|  AuRa by Nethermind initialized in 0ms \r\n2021-11-13 10:00:05.3006|  Clique by Nethermind \r\n2021-11-13 10:00:05.3006|  Clique by Nethermind initialized in 0ms \r\n2021-11-13 10:00:05.3014|  Ethash by Nethermind \r\n2021-11-13 10:00:05.3024|  Ethash by Nethermind initialized in 0ms \r\n2021-11-13 10:00:05.3024|  NethDev by Nethermind \r\n2021-11-13 10:00:05.3024|  NethDev by Nethermind initialized in 0ms \r\n2021-11-13 10:00:05.3024|  Merge by Nethermind \r\n2021-11-13 10:00:05.3036|  Merge by Nethermind initialized in 0ms \r\n2021-11-13 10:00:05.3036|  HealthChecks by Nethermind \r\n2021-11-13 10:00:05.3036|  HealthChecks by Nethermind initialized in 0ms \r\n2021-11-13 10:00:05.3045|  MEV by Nethermind \r\n2021-11-13 10:00:05.3045|  MEV by Nethermind initialized in 0ms \r\n======================== Nethermind initialization completed ========================\r\nVersion      : 1.11.4-0-f78708518-20211113/X64-Linux/5.0.7\r\n2021-11-13 10:00:10.2252|Executing JSON RPC call eth_blockNumber with params [] \r\n2021-11-13 10:00:10.2545|Executing JSON RPC call eth_syncing with params [] \r\n2021-11-13 10:00:10.2713|Executing JSON RPC call eth_blockNumber with params [] \r\n2021-11-13 10:00:10.2899|Executing JSON RPC call eth_call with params [{\r\n  \"data\": \"0x0178b8bfaac56047c2aef96ae24b77431cd149181263b5436f4f93aaec4ad6824044ddb5\",\r\n  \"from\": \"0x0000000000000000000000000000000000000000\",\r\n  \"to\": \"0x00cebf9e1e81d3cc17fba0a49306eba77a8f26cd\"\r\n},latest] \r\n2021-11-13 10:00:10.3417|Executing JSON RPC call eth_call with params [{\r\n  \"data\": \"0x3b3b57deaac56047c2aef96ae24b77431cd149181263b5436f4f93aaec4ad6824044ddb5\",\r\n  \"from\": \"0x0000000000000000000000000000000000000000\",\r\n  \"to\": \"0x80629af85c5623fdfdd3744c3192824be72b06f6\"\r\n},latest] \r\n2021-11-13 10:00:10.3692|Executing JSON RPC call eth_call with params [{\r\n  \"data\": \"0x0178b8bf2c816f2d3705b3231ed75ca3c5018893e925f307d0c04cc12382c7b7434b549f\",\r\n  \"from\": \"0x0000000000000000000000000000000000000000\",\r\n  \"to\": \"0x00cebf9e1e81d3cc17fba0a49306eba77a8f26cd\"\r\n},latest] \r\n2021-11-13 10:00:10.3696|Processed   19039940 |    1,307ms, mgasps   26.56 total    8.94, tps   48.98 total   17.80, bps    2.30 total    0.87, recv queue 0, proc queue 59 \r\n2021-11-13 10:00:10.3696|Rerunning block after reorg or pruning: 19039941 (0x13499a3201a2a65f3400e3c1dd5af0d6c8f443d123332eb56013855f4d87dbb0) \r\n2021-11-13 10:00:10.3869|Executing JSON RPC call eth_call with params [{\r\n  \"data\": \"0x3b3b57de2c816f2d3705b3231ed75ca3c5018893e925f307d0c04cc12382c7b7434b549f\",\r\n  \"from\": \"0x0000000000000000000000000000000000000000\",\r\n  \"to\": \"0x80629af85c5623fdfdd3744c3192824be72b06f6\"\r\n},latest] \r\n2021-11-13 10:00:10.4059|Executing JSON RPC call eth_call with params [{\r\n  \"data\": \"0x0178b8bfd6a6007135494dea40f18c6b246abf8685d90392860032d81f868856be4bd7ac\",\r\n  \"from\": \"0x0000000000000000000000000000000000000000\",\r\n  \"to\": \"0x00cebf9e1e81d3cc17fba0a49306eba77a8f26cd\"\r\n},latest] \r\n2021-11-13 10:00:10.4223|Executing JSON RPC call eth_call with params [{\r\n  \"data\": \"0x3b3b57ded6a6007135494dea40f18c6b246abf8685d90392860032d81f868856be4bd7ac\",\r\n  \"from\": \"0x0000000000000000000000000000000000000000\",\r\n  \"to\": \"0x80629af85c5623fdfdd3744c3192824be72b06f6\"\r\n},latest] \r\n2021-11-13 10:00:10.4403|Executing JSON RPC call eth_call with params [{\r\n  \"data\": \"0x0178b8bf7af6b90016464748081602d889f4619edcda96cb72652e4f8b105d97988df7cf\",\r\n  \"from\": \"0x0000000000000000000000000000000000000000\",\r\n  \"to\": \"0x00cebf9e1e81d3cc17fba0a49306eba77a8f26cd\"\r\n},latest] \r\n2021-11-13 10:00:10.4575|Executing JSON RPC call eth_call with params [{\r\n  \"data\": \"0x3b3b57de7af6b90016464748081602d889f4619edcda96cb72652e4f8b105d97988df7cf\",\r\n  \"from\": \"0x0000000000000000000000000000000000000000\",\r\n  \"to\": \"0x80629af85c5623fdfdd3744c3192824be72b06f6\"\r\n},latest] \r\n2021-11-13 10:00:10.4757|Executing JSON RPC call eth_call with params [{\r\n  \"data\": \"0x0178b8bf25ce688cf5cdb8c695a05c8adda1c7c6d305a04cca56bdc44d852ffa418a9bcb\",\r\n  \"from\": \"0x0000000000000000000000000000000000000000\",\r\n  \"to\": \"0x00cebf9e1e81d3cc17fba0a49306eba77a8f26cd\"\r\n},latest] \r\n2021-11-13 10:00:10.4933|Executing JSON RPC call eth_call with params [{\r\n  \"data\": \"0x3b3b57de25ce688cf5cdb8c695a05c8adda1c7c6d305a04cca56bdc44d852ffa418a9bcb\",\r\n  \"from\": \"0x0000000000000000000000000000000000000000\",\r\n  \"to\": \"0x80629af85c5623fdfdd3744c3192824be72b06f6\"\r\n},latest] \r\n2021-11-13 10:00:10.5105|Executing JSON RPC call eth_call with params [{\r\n  \"data\": \"0x0178b8bf33dbdb62c957c5ea5289a0a43aa2ef8cc0a176e4f83623a82eb344b167dcec1c\",\r\n  \"from\": \"0x0000000000000000000000000000000000000000\",\r\n  \"to\": \"0x00cebf9e1e81d3cc17fba0a49306eba77a8f26cd\"\r\n},latest] \r\n2021-11-13 10:00:10.5264|Executing JSON RPC call eth_call with params [{\r\n  \"data\": \"0x3b3b57de33dbdb62c957c5ea5289a0a43aa2ef8cc0a176e4f83623a82eb344b167dcec1c\",\r\n  \"from\": \"0x0000000000000000000000000000000000000000\",\r\n  \"to\": \"0x80629af85c5623fdfdd3744c3192824be72b06f6\"\r\n},latest] \r\n2021-11-13 10:00:10.5468|Executing JSON RPC call eth_blockNumber with params [] \r\n2021-11-13 10:00:10.6285|Executing JSON RPC call eth_getLogs with params [{\r\n  \"address\": [\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    ...\r\n    2021-11-13 10:00:12.9355|Executing JSON RPC call eth_subscribe with params [logs,{\r\n  \"address\": [\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    \"0x0c276ef9c401f8bad67b730bd75f1d54c81c0572\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4e4aacd788415649d47c90221260015bf28abce0\",\r\n    \"0x5dfa5585d495b90367d5d96a05aaf1c9e9cb8892\",\r\n    \"0xede709a84203887954fae931a7baa0e9447c318a\",\r\n    \"0x4aa3c1588c6e5bbc97c3da195aa9bb6d7400a640\",\r\n    ...],\r\n  \"fromBlock\": \"0x12286ff\",\r\n  \"toBlock\": \"latest\",\r\n  \"topics\": null\r\n```\r\nThank you ^^",
  "closed_by": {
    "login": "LukaszRozmej",
    "id": 12445221,
    "node_id": "MDQ6VXNlcjEyNDQ1MjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/12445221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/LukaszRozmej",
    "html_url": "https://github.com/LukaszRozmej",
    "followers_url": "https://api.github.com/users/LukaszRozmej/followers",
    "following_url": "https://api.github.com/users/LukaszRozmej/following{/other_user}",
    "gists_url": "https://api.github.com/users/LukaszRozmej/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/LukaszRozmej/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/LukaszRozmej/subscriptions",
    "organizations_url": "https://api.github.com/users/LukaszRozmej/orgs",
    "repos_url": "https://api.github.com/users/LukaszRozmej/repos",
    "events_url": "https://api.github.com/users/LukaszRozmej/events{/privacy}",
    "received_events_url": "https://api.github.com/users/LukaszRozmej/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3616/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3616/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/972753593",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/3616#issuecomment-972753593",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3616",
    "id": 972753593,
    "node_id": "IC_kwDOBggaLc45-wq5",
    "user": {
      "login": "dceleda",
      "id": 26231116,
      "node_id": "MDQ6VXNlcjI2MjMxMTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/26231116?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dceleda",
      "html_url": "https://github.com/dceleda",
      "followers_url": "https://api.github.com/users/dceleda/followers",
      "following_url": "https://api.github.com/users/dceleda/following{/other_user}",
      "gists_url": "https://api.github.com/users/dceleda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dceleda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dceleda/subscriptions",
      "organizations_url": "https://api.github.com/users/dceleda/orgs",
      "repos_url": "https://api.github.com/users/dceleda/repos",
      "events_url": "https://api.github.com/users/dceleda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dceleda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-18T10:52:15Z",
    "updated_at": "2021-11-18T10:53:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jordipainan would you be able to provide the value of the `query `variable?\r\nMaybe it contains duplicated addresses and Geth deduplicate them.\r\nIf so we could do the same.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/972753593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/972770226",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/3616#issuecomment-972770226",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3616",
    "id": 972770226,
    "node_id": "IC_kwDOBggaLc45-0uy",
    "user": {
      "login": "jordipainan",
      "id": 17238033,
      "node_id": "MDQ6VXNlcjE3MjM4MDMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/17238033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jordipainan",
      "html_url": "https://github.com/jordipainan",
      "followers_url": "https://api.github.com/users/jordipainan/followers",
      "following_url": "https://api.github.com/users/jordipainan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jordipainan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jordipainan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jordipainan/subscriptions",
      "organizations_url": "https://api.github.com/users/jordipainan/orgs",
      "repos_url": "https://api.github.com/users/jordipainan/repos",
      "events_url": "https://api.github.com/users/jordipainan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jordipainan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-18T11:14:50Z",
    "updated_at": "2021-11-18T11:26:15Z",
    "author_association": "NONE",
    "body": "yes ofc!\r\n\r\n```\r\nquery.Addresses:\r\n\r\n[\r\n    \"0x0C276EF9c401F8baD67B730bd75F1D54C81c0572\",\r\n    \"0x4e4aAcD788415649d47c90221260015BF28ABce0\",\r\n    \"0x99dB5662D499A4E53A2AE70B951C036666773484\",\r\n    \"0x5dfA5585D495B90367D5d96A05Aaf1c9E9CB8892\",\r\n    \"0xEDe709A84203887954Fae931a7BAa0e9447C318a\",\r\n    \"0x4aa3c1588c6E5BbC97c3da195aA9bb6D7400a640\"\r\n]\r\n```\r\n\r\nThe difference I noticed between geth code and neth code is that geth uses a map and neth uses an array, but I made sure that I am not passing duplicated elements to the query so that is why I am asking if the neth logging prints past used addresses.\r\n\r\nThank you for the fast response",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/972770226/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/972840736",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/3616#issuecomment-972840736",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3616",
    "id": 972840736,
    "node_id": "IC_kwDOBggaLc45_F8g",
    "user": {
      "login": "LukaszRozmej",
      "id": 12445221,
      "node_id": "MDQ6VXNlcjEyNDQ1MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12445221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LukaszRozmej",
      "html_url": "https://github.com/LukaszRozmej",
      "followers_url": "https://api.github.com/users/LukaszRozmej/followers",
      "following_url": "https://api.github.com/users/LukaszRozmej/following{/other_user}",
      "gists_url": "https://api.github.com/users/LukaszRozmej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LukaszRozmej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LukaszRozmej/subscriptions",
      "organizations_url": "https://api.github.com/users/LukaszRozmej/orgs",
      "repos_url": "https://api.github.com/users/LukaszRozmej/repos",
      "events_url": "https://api.github.com/users/LukaszRozmej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LukaszRozmej/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-18T12:56:04Z",
    "updated_at": "2021-11-18T12:56:04Z",
    "author_association": "MEMBER",
    "body": "I expect this to be non-issue. I think the library itself sends duplicated addresses. We log JSON RPC parameters directly on the HTTP/JSON RPC layer with generic code for any RPC method. Later before actual filtering we do de-duplicate them in our Filter classes: https://github.com/NethermindEth/nethermind/blob/41926b55abb58b3f5aed8e3f479289af56566729/src/Nethermind/Nethermind.Blockchain/Filters/FilterStore.cs#L156\r\n\r\nCan you please inspect HTTP traffic that it produces for those calls? Maybe under developer tools in a browser? This would be confirmation on what is happening - if application sends duplicates in request.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/972840736/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/976077416",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/3616#issuecomment-976077416",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3616",
    "id": 976077416,
    "node_id": "IC_kwDOBggaLc46LcJo",
    "user": {
      "login": "LukaszRozmej",
      "id": 12445221,
      "node_id": "MDQ6VXNlcjEyNDQ1MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12445221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LukaszRozmej",
      "html_url": "https://github.com/LukaszRozmej",
      "followers_url": "https://api.github.com/users/LukaszRozmej/followers",
      "following_url": "https://api.github.com/users/LukaszRozmej/following{/other_user}",
      "gists_url": "https://api.github.com/users/LukaszRozmej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LukaszRozmej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LukaszRozmej/subscriptions",
      "organizations_url": "https://api.github.com/users/LukaszRozmej/orgs",
      "repos_url": "https://api.github.com/users/LukaszRozmej/repos",
      "events_url": "https://api.github.com/users/LukaszRozmej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LukaszRozmej/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-23T01:06:16Z",
    "updated_at": "2021-11-23T01:06:16Z",
    "author_association": "MEMBER",
    "body": "Closing as non-issue, logging correct params",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/976077416/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
