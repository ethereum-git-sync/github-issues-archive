{
  "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4205",
  "repository_url": "https://api.github.com/repos/NethermindEth/nethermind",
  "labels_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4205/labels{/name}",
  "comments_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4205/comments",
  "events_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4205/events",
  "html_url": "https://github.com/NethermindEth/nethermind/issues/4205",
  "id": 1283474118,
  "node_id": "I_kwDOBggaLc5MgELG",
  "number": 4205,
  "title": "Support tracing of synced, not-processed blocks",
  "user": {
    "login": "gituser",
    "id": 104405,
    "node_id": "MDQ6VXNlcjEwNDQwNQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/104405?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gituser",
    "html_url": "https://github.com/gituser",
    "followers_url": "https://api.github.com/users/gituser/followers",
    "following_url": "https://api.github.com/users/gituser/following{/other_user}",
    "gists_url": "https://api.github.com/users/gituser/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gituser/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gituser/subscriptions",
    "organizations_url": "https://api.github.com/users/gituser/orgs",
    "repos_url": "https://api.github.com/users/gituser/repos",
    "events_url": "https://api.github.com/users/gituser/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gituser/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2022-06-24T09:04:34Z",
  "updated_at": "2022-12-06T21:56:59Z",
  "closed_at": "2022-12-06T21:56:59Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Describe the bug**\r\nI've synced Nethermind on the mainnet to replace OpenEthereum client, but trace_filter returns empty response for some reason:\r\n\r\n```\r\ncurl --data '{\"method\":\"trace_filter\",\"params\":[{\"fromBlock\":\"0x1\",\"toBlock\":\"0x50\"}],\"id\":1,\"jsonrpc\":\"2.0\"}' -H \"Content-Type: application/json\" -X POST localhost:8545\r\n{\"jsonrpc\":\"2.0\",\"result\":[],\"id\":1}\r\n```\r\n\r\nOn my old OpenEthereum node the result is correct though:\r\n```\r\ncurl --data '{\"method\":\"trace_filter\",\"params\":[{\"fromBlock\":\"0x1\",\"toBlock\":\"0x50\"}],\"id\":1,\"jsonrpc\":\"2.0\"}' -H \"Content-Type: application/json\" -X POST 127.0.0.1:9110\r\n{\"jsonrpc\":\"2.0\",\"result\":[{\"action\":{\"author\":\"0x05a56e2d52c817161883f50c441c3228cfe54d9f\",\"rewardType\":\"block\",\"value\":\"0x4563918244f40000\"},\"blockHash\":\"0x88e96d4537bea4d9c05d12549907b32561d3bf31f45aae734cdc119f13406cb6\",\"blockNumber\":1,\"result\":null,\"subtraces\":0,\"traceAddress\":...\":[],\"transactionHash\":null,\"transactionPosition\":null,\"type\":\"reward\"}],\"id\":1}\r\n```\r\n\r\nI've tried enumerating through latest blocks and found out that the only available blocks for trace_filter are last 2910 +/- 10 blocks from the latest synced block.\r\n\r\nE.g. If I try to `trace_filter` block beyound that range `latest_block` - 3000 nethermind gives me an error:\r\n\r\n```latest_block=$(echo \"obase=16;$(~nethermind/blocknumber.sh)-3000\"|bc);curl -s --data '{\"method\":\"trace_filter\",\"params\":[{\"fromBlock\":\"0x'$latest_block'\",\"toBlock\":\"0x'$latest_block'\"}],\"id\":1,\"jsonrpc\":\"2.0\"}' -H \"Content-Type: application/json\" -X POST localhost:8545|json_pp\r\n{\r\n   \"error\" : {\r\n      \"code\" : -32603,\r\n      \"data\" : \"Nethermind.Trie.TrieException: Failed to load key 17e18854d6c1cee0ac2cee66833b0c4ff4c250224b30519d295e3e503d9f5bab from root hash 0x16492ad5cecdae541bccf891c2e8ce664bb4ccc5be2cd74e7ce806d68302942b.\\n ---> Nethermind.Trie.TrieException: Node 0x16492ad5cecdae541bccf891c2e8ce664bb4ccc5be2cd74e7ce806d68302942b is missing from the DB\\n   at Nethermind.Trie.Pruning.TrieStore.LoadRlp(Keccak keccak, IKeyValueStore keyValueStore)\\n   at Nethermind.Trie.TrieNode.ResolveNode(ITrieNodeResolver tree)\\n   at Nethermind.Trie.PatriciaTree.Run(Span`1 updatePath, Int32 nibblesCount, Byte[] updateValue, Boolean isUpdate, Boolean ignoreMissingDelete, Keccak startRootHash)\\n   at Nethermind.Trie.PatriciaTree.Get(Span`1 rawKey, Keccak rootHash)\\n   --- End of inner exception stack trace ---\\n   at Nethermind.Trie.PatriciaTree.Get(Span`1 rawKey, Keccak rootHash)\\n   at Nethermind.State.StateProvider.GetState(Address address)\\n   at Nethermind.State.StateProvider.GetAndAddToCache(Address address)\\n   at Nethermind.State.StateProvider.GetNonce(Address address)\\n   at Nethermind.Consensus.Processing.BlockProcessor.BlockValidationTransactionsExecutor.ProcessTransactions(Block block, ProcessingOptions processingOptions, BlockReceiptsTracer receiptsTracer, IReleaseSpec spec)\\n   at Nethermind.Consensus.Processing.BlockProcessor.ProcessBlock(Block block, IBlockTracer blockTracer, ProcessingOptions options)\\n   at Nethermind.Consensus.Processing.BlockProcessor.ProcessOne(Block suggestedBlock, ProcessingOptions options, IBlockTracer blockTracer)\\n   at Nethermind.Consensus.Processing.BlockProcessor.Process(Keccak newBranchStateRoot, List`1 suggestedBlocks, ProcessingOptions options, IBlockTracer blockTracer)\\n   at Nethermind.Consensus.Processing.BlockchainProcessor.ProcessBranch(ProcessingBranch processingBranch, Block suggestedBlock, ProcessingOptions options, IBlockTracer tracer)\\n   at Nethermind.Consensus.Processing.BlockchainProcessor.Process(Block suggestedBlock, ProcessingOptions options, IBlockTracer tracer)\\n   at Nethermind.Consensus.Processing.OneTimeChainProcessor.Process(Block block, ProcessingOptions options, IBlockTracer tracer)\\n   at Nethermind.Consensus.Tracing.Tracer.Trace(Block block, IBlockTracer blockTracer)\\n   at Nethermind.JsonRpc.Modules.Trace.TraceRpcModule.TraceBlock(Block block, ParityTraceTypes traceTypes, TxTraceFilter txTraceFilter)\\n   at Nethermind.JsonRpc.Modules.Trace.TraceRpcModule.trace_filter(TraceFilterForRpc traceFilterForRpc)\",\r\n      \"message\" : \"Internal error\"\r\n   },\r\n   \"jsonrpc\" : \"2.0\",\r\n   \"id\" : 1\r\n}\r\n```\r\n\r\nNOTE: old OpenEthereum node was running with fast sync (NOT archive!) and `trace_filter` worked just fine there and consumed ~1.1T, new Nethermind node consumes little bit less ~729G but tracing seems to be not working. I do not want to run archive node, simply because of the storage requirements.\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Fully sync mainnet node\r\n2. Use this configuration:\r\n```\r\n{\r\n  \"Init\": {\r\n    \"ChainSpecPath\": \"chainspec/foundation.json\",\r\n    \"GenesisHash\": \"0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3\",\r\n    \"BaseDbPath\": \"nethermind_db/mainnet\",\r\n    \"LogFileName\": \"mainnet.log\",\r\n    \"MemoryHint\": 10480000000\r\n  },\r\n  \"Network\": {\r\n    \"ActivePeersMaxCount\": 100\r\n  },\r\n  \"Sync\": {\r\n    \"FastSync\": true,\r\n    \"SnapSync\": true,\r\n    \"PivotNumber\": 14957000,\r\n    \"PivotHash\": \"0x7ce2c9cb601721e33ee6313e91b30c9f035b74ee282402b5bdfb1095c572acd7\",\r\n    \"PivotTotalDifficulty\": \"51613742220579521774353\",\r\n    \"FastBlocks\": true,\r\n    \"WitnessProtocolEnabled\": true\r\n  },\r\n  \"JsonRpc\": {\r\n    \"Enabled\": true,\r\n    \"Timeout\": 20000,\r\n    \"Host\": \"0.0.0.0\",\r\n    \"Port\": 8545,\r\n    \"EnabledModules\": [\r\n      \"Eth\",\r\n      \"Subscribe\",\r\n      \"Trace\",\r\n      \"TxPool\",\r\n      \"Web3\",\r\n      \"Personal\",\r\n      \"Proof\",\r\n      \"Net\",\r\n      \"Parity\",\r\n      \"Health\",\r\n      \"Rpc\",\r\n    ],\r\n    \"AdditionalRpcUrls\": [\r\n      \"http://127.0.0.1:8551|http;ws|net;eth;subscribe;engine;web3;client;rpc|\"\r\n    ],\r\n    \"IpcUnixDomainSocketPath\":\"/home/nethermind/.nethermind/nethermind.ipc\"\r\n  },\r\n  \"Metrics\": {\r\n    \"NodeName\": \"Mainnet\"\r\n  }\r\n}\r\n```\r\n\r\n3. Try to query the node with the above curl \r\n\r\n**Expected behavior**\r\nNethermind should return trace filter info same as OpenEthereum\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Ubuntu 18.04\r\n - Version: `1.13.3-14-g2500d3daf` (built from master branch)\r\n\r\n",
  "closed_by": {
    "login": "LukaszRozmej",
    "id": 12445221,
    "node_id": "MDQ6VXNlcjEyNDQ1MjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/12445221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/LukaszRozmej",
    "html_url": "https://github.com/LukaszRozmej",
    "followers_url": "https://api.github.com/users/LukaszRozmej/followers",
    "following_url": "https://api.github.com/users/LukaszRozmej/following{/other_user}",
    "gists_url": "https://api.github.com/users/LukaszRozmej/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/LukaszRozmej/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/LukaszRozmej/subscriptions",
    "organizations_url": "https://api.github.com/users/LukaszRozmej/orgs",
    "repos_url": "https://api.github.com/users/LukaszRozmej/repos",
    "events_url": "https://api.github.com/users/LukaszRozmej/events{/privacy}",
    "received_events_url": "https://api.github.com/users/LukaszRozmej/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4205/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4205/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1165371965",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4205#issuecomment-1165371965",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4205",
    "id": 1165371965,
    "node_id": "IC_kwDOBggaLc5Fdio9",
    "user": {
      "login": "gituser",
      "id": 104405,
      "node_id": "MDQ6VXNlcjEwNDQwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/104405?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gituser",
      "html_url": "https://github.com/gituser",
      "followers_url": "https://api.github.com/users/gituser/followers",
      "following_url": "https://api.github.com/users/gituser/following{/other_user}",
      "gists_url": "https://api.github.com/users/gituser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gituser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gituser/subscriptions",
      "organizations_url": "https://api.github.com/users/gituser/orgs",
      "repos_url": "https://api.github.com/users/gituser/repos",
      "events_url": "https://api.github.com/users/gituser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gituser/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T09:11:39Z",
    "updated_at": "2022-06-24T09:11:39Z",
    "author_association": "NONE",
    "body": "Related issue: https://github.com/NethermindEth/nethermind/issues/4143",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1165371965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1165576420",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4205#issuecomment-1165576420",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4205",
    "id": 1165576420,
    "node_id": "IC_kwDOBggaLc5FeUjk",
    "user": {
      "login": "LukaszRozmej",
      "id": 12445221,
      "node_id": "MDQ6VXNlcjEyNDQ1MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12445221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LukaszRozmej",
      "html_url": "https://github.com/LukaszRozmej",
      "followers_url": "https://api.github.com/users/LukaszRozmej/followers",
      "following_url": "https://api.github.com/users/LukaszRozmej/following{/other_user}",
      "gists_url": "https://api.github.com/users/LukaszRozmej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LukaszRozmej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LukaszRozmej/subscriptions",
      "organizations_url": "https://api.github.com/users/LukaszRozmej/orgs",
      "repos_url": "https://api.github.com/users/LukaszRozmej/repos",
      "events_url": "https://api.github.com/users/LukaszRozmej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LukaszRozmej/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T13:28:38Z",
    "updated_at": "2022-06-24T13:29:13Z",
    "author_association": "MEMBER",
    "body": "This is fairly unlikely to be implemented, would require spinning up database for traces as well as developing a p2p syncing protocol for those traces, which only nethermind would support. I think that what we actually want to do is to have archive node footprint be minimal with state db redesign.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1165576420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1165600060",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4205#issuecomment-1165600060",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4205",
    "id": 1165600060,
    "node_id": "IC_kwDOBggaLc5FeaU8",
    "user": {
      "login": "gituser",
      "id": 104405,
      "node_id": "MDQ6VXNlcjEwNDQwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/104405?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gituser",
      "html_url": "https://github.com/gituser",
      "followers_url": "https://api.github.com/users/gituser/followers",
      "following_url": "https://api.github.com/users/gituser/following{/other_user}",
      "gists_url": "https://api.github.com/users/gituser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gituser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gituser/subscriptions",
      "organizations_url": "https://api.github.com/users/gituser/orgs",
      "repos_url": "https://api.github.com/users/gituser/repos",
      "events_url": "https://api.github.com/users/gituser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gituser/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T13:54:14Z",
    "updated_at": "2022-06-24T13:54:14Z",
    "author_association": "NONE",
    "body": "@LukaszRozmej is there any workaround in the configuration to let's say store last 30K states instead of running archive node, so last 30K blocks will be available for tracing?\r\n\r\n`trace_filter` is essential feature in our blocks processing but we can't afford to run full archive node, on OpenEthereum it worked just fine with separate traces DB.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1165600060/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1177744994",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4205#issuecomment-1177744994",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4205",
    "id": 1177744994,
    "node_id": "IC_kwDOBggaLc5GMvZi",
    "user": {
      "login": "LukaszRozmej",
      "id": 12445221,
      "node_id": "MDQ6VXNlcjEyNDQ1MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12445221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LukaszRozmej",
      "html_url": "https://github.com/LukaszRozmej",
      "followers_url": "https://api.github.com/users/LukaszRozmej/followers",
      "following_url": "https://api.github.com/users/LukaszRozmej/following{/other_user}",
      "gists_url": "https://api.github.com/users/LukaszRozmej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LukaszRozmej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LukaszRozmej/subscriptions",
      "organizations_url": "https://api.github.com/users/LukaszRozmej/orgs",
      "repos_url": "https://api.github.com/users/LukaszRozmej/repos",
      "events_url": "https://api.github.com/users/LukaszRozmej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LukaszRozmej/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-07T14:55:27Z",
    "updated_at": "2022-07-07T14:55:27Z",
    "author_association": "MEMBER",
    "body": "@gituser we will consider adding this, but nothing we can do short-term",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1177744994/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1187045865",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4205#issuecomment-1187045865",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4205",
    "id": 1187045865,
    "node_id": "IC_kwDOBggaLc5GwOHp",
    "user": {
      "login": "gituser",
      "id": 104405,
      "node_id": "MDQ6VXNlcjEwNDQwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/104405?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gituser",
      "html_url": "https://github.com/gituser",
      "followers_url": "https://api.github.com/users/gituser/followers",
      "following_url": "https://api.github.com/users/gituser/following{/other_user}",
      "gists_url": "https://api.github.com/users/gituser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gituser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gituser/subscriptions",
      "organizations_url": "https://api.github.com/users/gituser/orgs",
      "repos_url": "https://api.github.com/users/gituser/repos",
      "events_url": "https://api.github.com/users/gituser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gituser/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-18T10:45:53Z",
    "updated_at": "2022-07-18T10:45:53Z",
    "author_association": "NONE",
    "body": "@LukaszRozmej this is quite crucial feature stopping us from switching completely from OpenEthereum to Nethermind.\r\n\r\nI think many other users are having similar issue, cause there are many relying on `trace_filter` functionality on pruned node.\r\n\r\nHow hard it will be to implement this?\r\n\r\nThanks.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1187045865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1211281610",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4205#issuecomment-1211281610",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4205",
    "id": 1211281610,
    "node_id": "IC_kwDOBggaLc5IMrDK",
    "user": {
      "login": "gituser",
      "id": 104405,
      "node_id": "MDQ6VXNlcjEwNDQwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/104405?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gituser",
      "html_url": "https://github.com/gituser",
      "followers_url": "https://api.github.com/users/gituser/followers",
      "following_url": "https://api.github.com/users/gituser/following{/other_user}",
      "gists_url": "https://api.github.com/users/gituser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gituser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gituser/subscriptions",
      "organizations_url": "https://api.github.com/users/gituser/orgs",
      "repos_url": "https://api.github.com/users/gituser/repos",
      "events_url": "https://api.github.com/users/gituser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gituser/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-10T21:14:46Z",
    "updated_at": "2022-08-10T21:14:46Z",
    "author_association": "NONE",
    "body": "Any update on this or maybe there is some other mechanism to check for ERC-20 transfers or internal ETH transactions besides using tracing?",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1211281610/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1239108361",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4205#issuecomment-1239108361",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4205",
    "id": 1239108361,
    "node_id": "IC_kwDOBggaLc5J20sJ",
    "user": {
      "login": "LukaszRozmej",
      "id": 12445221,
      "node_id": "MDQ6VXNlcjEyNDQ1MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12445221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LukaszRozmej",
      "html_url": "https://github.com/LukaszRozmej",
      "followers_url": "https://api.github.com/users/LukaszRozmej/followers",
      "following_url": "https://api.github.com/users/LukaszRozmej/following{/other_user}",
      "gists_url": "https://api.github.com/users/LukaszRozmej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LukaszRozmej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LukaszRozmej/subscriptions",
      "organizations_url": "https://api.github.com/users/LukaszRozmej/orgs",
      "repos_url": "https://api.github.com/users/LukaszRozmej/repos",
      "events_url": "https://api.github.com/users/LukaszRozmej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LukaszRozmej/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-07T08:58:40Z",
    "updated_at": "2022-09-07T08:58:40Z",
    "author_association": "MEMBER",
    "body": "@gituser created a plugin that stores the traces and retrives them through json rpc, the only thing is this needs FullSync (but not archive state).",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1239108361/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
