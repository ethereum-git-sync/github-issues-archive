{
  "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3486",
  "repository_url": "https://api.github.com/repos/NethermindEth/nethermind",
  "labels_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3486/labels{/name}",
  "comments_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3486/comments",
  "events_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3486/events",
  "html_url": "https://github.com/NethermindEth/nethermind/issues/3486",
  "id": 1018366188,
  "node_id": "I_kwDOBggaLc48swjs",
  "number": 3486,
  "title": "Add injection / extension points for plugins between any two initialized types.",
  "user": {
    "login": "tkstanczak",
    "id": 498913,
    "node_id": "MDQ6VXNlcjQ5ODkxMw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tkstanczak",
    "html_url": "https://github.com/tkstanczak",
    "followers_url": "https://api.github.com/users/tkstanczak/followers",
    "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
    "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
    "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
    "repos_url": "https://api.github.com/users/tkstanczak/repos",
    "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1023953465,
      "node_id": "MDU6TGFiZWwxMDIzOTUzNDY1",
      "url": "https://api.github.com/repos/NethermindEth/nethermind/labels/refactoring",
      "name": "refactoring",
      "color": "56cbd3",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "smartprogrammer93",
    "id": 33181301,
    "node_id": "MDQ6VXNlcjMzMTgxMzAx",
    "avatar_url": "https://avatars.githubusercontent.com/u/33181301?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/smartprogrammer93",
    "html_url": "https://github.com/smartprogrammer93",
    "followers_url": "https://api.github.com/users/smartprogrammer93/followers",
    "following_url": "https://api.github.com/users/smartprogrammer93/following{/other_user}",
    "gists_url": "https://api.github.com/users/smartprogrammer93/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/smartprogrammer93/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smartprogrammer93/subscriptions",
    "organizations_url": "https://api.github.com/users/smartprogrammer93/orgs",
    "repos_url": "https://api.github.com/users/smartprogrammer93/repos",
    "events_url": "https://api.github.com/users/smartprogrammer93/events{/privacy}",
    "received_events_url": "https://api.github.com/users/smartprogrammer93/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "smartprogrammer93",
      "id": 33181301,
      "node_id": "MDQ6VXNlcjMzMTgxMzAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33181301?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartprogrammer93",
      "html_url": "https://github.com/smartprogrammer93",
      "followers_url": "https://api.github.com/users/smartprogrammer93/followers",
      "following_url": "https://api.github.com/users/smartprogrammer93/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartprogrammer93/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartprogrammer93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartprogrammer93/subscriptions",
      "organizations_url": "https://api.github.com/users/smartprogrammer93/orgs",
      "repos_url": "https://api.github.com/users/smartprogrammer93/repos",
      "events_url": "https://api.github.com/users/smartprogrammer93/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartprogrammer93/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2021-10-06T13:48:27Z",
  "updated_at": "2022-10-05T20:25:01Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "**Is your feature request related to a problem? Please describe.**\r\nI want to have methods like BeforeHeaderValidator, AfterHeaderValidator, when building plugins.\r\nThis should be for every single API interface that is initialized. Without this I am limited to only a few injection points and cannot have a full control over how to construct types.\r\nBefore...Initialized should also allow to return true / false that can cancel the following initialization.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3486/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3486/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
