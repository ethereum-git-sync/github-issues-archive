{
  "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4197",
  "repository_url": "https://api.github.com/repos/NethermindEth/nethermind",
  "labels_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4197/labels{/name}",
  "comments_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4197/comments",
  "events_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4197/events",
  "html_url": "https://github.com/NethermindEth/nethermind/issues/4197",
  "id": 1282232496,
  "node_id": "I_kwDOBggaLc5MbVCw",
  "number": 4197,
  "title": "```eth_estimateGas``` results in an error when omitting the ```from```-field",
  "user": {
    "login": "most08",
    "id": 108065276,
    "node_id": "U_kgDOBnDx_A",
    "avatar_url": "https://avatars.githubusercontent.com/u/108065276?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/most08",
    "html_url": "https://github.com/most08",
    "followers_url": "https://api.github.com/users/most08/followers",
    "following_url": "https://api.github.com/users/most08/following{/other_user}",
    "gists_url": "https://api.github.com/users/most08/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/most08/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/most08/subscriptions",
    "organizations_url": "https://api.github.com/users/most08/orgs",
    "repos_url": "https://api.github.com/users/most08/repos",
    "events_url": "https://api.github.com/users/most08/events{/privacy}",
    "received_events_url": "https://api.github.com/users/most08/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "rubo",
    "id": 337518,
    "node_id": "MDQ6VXNlcjMzNzUxOA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/337518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rubo",
    "html_url": "https://github.com/rubo",
    "followers_url": "https://api.github.com/users/rubo/followers",
    "following_url": "https://api.github.com/users/rubo/following{/other_user}",
    "gists_url": "https://api.github.com/users/rubo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rubo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rubo/subscriptions",
    "organizations_url": "https://api.github.com/users/rubo/orgs",
    "repos_url": "https://api.github.com/users/rubo/repos",
    "events_url": "https://api.github.com/users/rubo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rubo/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "rubo",
      "id": 337518,
      "node_id": "MDQ6VXNlcjMzNzUxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/337518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rubo",
      "html_url": "https://github.com/rubo",
      "followers_url": "https://api.github.com/users/rubo/followers",
      "following_url": "https://api.github.com/users/rubo/following{/other_user}",
      "gists_url": "https://api.github.com/users/rubo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rubo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rubo/subscriptions",
      "organizations_url": "https://api.github.com/users/rubo/orgs",
      "repos_url": "https://api.github.com/users/rubo/repos",
      "events_url": "https://api.github.com/users/rubo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rubo/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "deffrian",
      "id": 19891475,
      "node_id": "MDQ6VXNlcjE5ODkxNDc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19891475?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deffrian",
      "html_url": "https://github.com/deffrian",
      "followers_url": "https://api.github.com/users/deffrian/followers",
      "following_url": "https://api.github.com/users/deffrian/following{/other_user}",
      "gists_url": "https://api.github.com/users/deffrian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deffrian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deffrian/subscriptions",
      "organizations_url": "https://api.github.com/users/deffrian/orgs",
      "repos_url": "https://api.github.com/users/deffrian/repos",
      "events_url": "https://api.github.com/users/deffrian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deffrian/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-06-23T11:11:12Z",
  "updated_at": "2023-05-12T14:46:41Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Describe the bug**\r\nWhen calling ```eth_estimateGas``` without the ```from```-field (sender-address) an error is occuring:\r\n\r\n`\r\nError when handling ID 1, eth_estimateGas({\r\n  \"to\": \"0x53d8cd462fa22e843ff0c4425f5cf2f4f00273ae\",\r\n  \"value\": \"0x16345785d8a0000\"\r\n}) | {\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32000,\"message\":\"insufficient funds for transfer: address 0xfffffffffffffffffffffffffffffffffffffffe\"},\"id\":1}\r\n`\r\n\r\n**To Reproduce**\r\nCall ```eth_estimateGas```:\r\n\r\n`\r\ncurl --data '{\"method\":\"eth_estimateGas\",\"params\":[{\"to\": \"0x53d8cd462fa22e843ff0c4425f5cf2f4f00273ae\", \"value\": \"0x16345785d8a0000\"}],\"id\":1,\"jsonrpc\":\"2.0\"}' -H \"Content-Type: application/json\" -X POST 172.17.0.1:8546\r\n`\r\n\r\n**Expected behavior**\r\nReturn the amount of gas.\r\n\r\n**Desktop (please complete the following information):**\r\n- OS: Ubuntu 22.04 LTS\r\n- nethermind 1.13.3\r\n\r\n**Additional context**\r\n```\r\nNETHERMIND_CONFIG=\"mainnet\"\r\nNETHERMIND_JSONRPCCONFIG_ENABLED=\"true\"\r\nNETHERMIND_JSONRPCCONFIG_HOST=\"0.0.0.0\"\r\nNETHERMIND_NETWORKCONFIG_MAXACTIVEPEERS=\"15\"\r\nNETHERMIND_INITCONFIG_LOGFILENAME=\"log.txt\"\r\n#\r\n# Special\r\n#\r\n#NETHERMIND_INITCONFIG_STATICNODESPATH=\"static-peers.json\"\r\n#NETHERMIND_NETWORKCONFIG_ONLYSTATICPEERS=\"true\"\r\nNETHERMIND_NETWORKCONFIG_P2PPORT=\"30304\"\r\nNETHERMIND_NETWORKCONFIG_DISCOVERYPORT=\"30304\"\r\nNETHERMIND_JSONRPCCONFIG_PORT=8546\r\n```\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4197/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4197/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1164283600",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4197#issuecomment-1164283600",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4197",
    "id": 1164283600,
    "node_id": "IC_kwDOBggaLc5FZY7Q",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-23T11:16:48Z",
    "updated_at": "2022-06-23T11:16:48Z",
    "author_association": "MEMBER",
    "body": "Thanks for reporting @most08 , we will look at this now.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1164283600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1164308032",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4197#issuecomment-1164308032",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4197",
    "id": 1164308032,
    "node_id": "IC_kwDOBggaLc5FZe5A",
    "user": {
      "login": "LukaszRozmej",
      "id": 12445221,
      "node_id": "MDQ6VXNlcjEyNDQ1MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12445221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LukaszRozmej",
      "html_url": "https://github.com/LukaszRozmej",
      "followers_url": "https://api.github.com/users/LukaszRozmej/followers",
      "following_url": "https://api.github.com/users/LukaszRozmej/following{/other_user}",
      "gists_url": "https://api.github.com/users/LukaszRozmej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LukaszRozmej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LukaszRozmej/subscriptions",
      "organizations_url": "https://api.github.com/users/LukaszRozmej/orgs",
      "repos_url": "https://api.github.com/users/LukaszRozmej/repos",
      "events_url": "https://api.github.com/users/LukaszRozmej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LukaszRozmej/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-23T11:46:00Z",
    "updated_at": "2022-06-23T11:46:00Z",
    "author_association": "MEMBER",
    "body": "We might have fix already but needs more testing: https://github.com/NethermindEth/nethermind/pull/3824",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1164308032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1542493494",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4197#issuecomment-1542493494",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4197",
    "id": 1542493494,
    "node_id": "IC_kwDOBggaLc5b8JU2",
    "user": {
      "login": "abcfy2",
      "id": 5327677,
      "node_id": "MDQ6VXNlcjUzMjc2Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5327677?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abcfy2",
      "html_url": "https://github.com/abcfy2",
      "followers_url": "https://api.github.com/users/abcfy2/followers",
      "following_url": "https://api.github.com/users/abcfy2/following{/other_user}",
      "gists_url": "https://api.github.com/users/abcfy2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abcfy2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abcfy2/subscriptions",
      "organizations_url": "https://api.github.com/users/abcfy2/orgs",
      "repos_url": "https://api.github.com/users/abcfy2/repos",
      "events_url": "https://api.github.com/users/abcfy2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abcfy2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-10T16:26:42Z",
    "updated_at": "2023-05-10T16:26:42Z",
    "author_association": "NONE",
    "body": "Any updates ? I have the same issue when I using blockscout indexing:\r\n\r\n```\r\n2023-05-10T16:25:00.759 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: ** (ErlangError) Erlang error: [%{code: -32000, data: %{\"blockNumber\" => 17231118}, message: \"insufficient funds for transfer: address 0xdafea492d9c6733ae3d56b7ed1adb60692c98bc5\"}]\r\n```\r\n\r\nNethermind log:\r\n\r\n```\r\n2023-05-10 16:26:23.5270|INFO|179|Executing JSON RPC call trace_replayBlockTransactions with params [0x106ED0E, [\r\n  \"trace\"\r\n]] \r\n2023-05-10 16:26:23.5539|WARN|111|Error when handling ID 6, trace_replayBlockTransactions(0x106ED0E,[\r\n  \"trace\"\r\n]) | {\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32000,\"message\":\"insufficient funds for transfer: address 0xdafea492d9c6733ae3d56b7ed1adb60692c98bc5\",\"data\":\"System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.\\n ---> Nethermind.State.InsufficientBalanceException: insufficient funds for transfer: address 0xdafea492d9c6733ae3d56b7ed1adb60692c98bc5\\n   at Nethermind.State.StateProvider.SetNewBalance(Address address, UInt256& balanceChange, IReleaseSpec releaseSpec, Boolean isSubtracting)\\n   at Nethermind.Evm.TransactionProcessing.TransactionProcessor.Execute(Transaction transaction, BlockHeader block, ITxTracer txTracer, ExecutionOptions executionOptions)\\n   at Nethermind.Consensus.Processing.BlockProcessor.BlockValidationTransactionsExecutor.ProcessTransactions(Block block, ProcessingOptions processingOptions, BlockReceiptsTracer receiptsTracer, IReleaseSpec spec)\\n   at Nethermind.Consensus.Processing.BlockProcessor.ProcessBlock(Block block, IBlockTracer blockTracer, ProcessingOptions options)\\n   at Nethermind.Consensus.Processing.BlockProcessor.Process(Keccak newBranchStateRoot, List`1 suggestedBlocks, ProcessingOptions options, IBlockTracer blockTracer)\\n   at Nethermind.Consensus.Processing.BlockchainProcessor.ProcessBranch(ProcessingBranch processingBranch, ProcessingOptions options, IBlockTracer tracer)\\n   at Nethermind.Consensus.Processing.BlockchainProcessor.Process(Block suggestedBlock, ProcessingOptions options, IBlockTracer tracer)\\n   at Nethermind.Consensus.Processing.OneTimeChainProcessor.Process(Block block, ProcessingOptions options, IBlockTracer tracer)\\n   at Nethermind.Consensus.Tracing.Tracer.Trace(Block block, IBlockTracer blockTracer)\\n   at Nethermind.JsonRpc.Modules.Trace.TraceRpcModule.TraceBlock(Block block, ParityLikeBlockTracer tracer)\\n   at Nethermind.JsonRpc.Modules.Trace.TraceRpcModule.trace_replayBlockTransactions(BlockParameter blockParameter, String[] traceTypes)\\n   at InvokeStub_ITraceRpcModule.trace_replayBlockTransactions(Object, Object, IntPtr*)\\n   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)\\n   --- End of inner exception stack trace ---\\n   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)\\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\\n   at Nethermind.JsonRpc.JsonRpcService.ExecuteAsync(JsonRpcRequest request, String methodName, ValueTuple`2 method, JsonRpcContext context)\"},\"id\":6} \r\n2023-05-10 16:26:23.5539|WARN|9|Error when handling ID 1, trace_replayBlockTransactions(0x106ED0E,[\r\n  \"trace\"\r\n]) | {\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32000,\"message\":\"insufficient funds for transfer: address 0xdafea492d9c6733ae3d56b7ed1adb60692c98bc5\",\"data\":\"System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.\\n ---> Nethermind.State.InsufficientBalanceException: insufficient funds for transfer: address 0xdafea492d9c6733ae3d56b7ed1adb60692c98bc5\\n   at Nethermind.State.StateProvider.SetNewBalance(Address address, UInt256& balanceChange, IReleaseSpec releaseSpec, Boolean isSubtracting)\\n   at Nethermind.Evm.TransactionProcessing.TransactionProcessor.Execute(Transaction transaction, BlockHeader block, ITxTracer txTracer, ExecutionOptions executionOptions)\\n   at Nethermind.Consensus.Processing.BlockProcessor.BlockValidationTransactionsExecutor.ProcessTransactions(Block block, ProcessingOptions processingOptions, BlockReceiptsTracer receiptsTracer, IReleaseSpec spec)\\n   at Nethermind.Consensus.Processing.BlockProcessor.ProcessBlock(Block block, IBlockTracer blockTracer, ProcessingOptions options)\\n   at Nethermind.Consensus.Processing.BlockProcessor.Process(Keccak newBranchStateRoot, List`1 suggestedBlocks, ProcessingOptions options, IBlockTracer blockTracer)\\n   at Nethermind.Consensus.Processing.BlockchainProcessor.ProcessBranch(ProcessingBranch processingBranch, ProcessingOptions options, IBlockTracer tracer)\\n   at Nethermind.Consensus.Processing.BlockchainProcessor.Process(Block suggestedBlock, ProcessingOptions options, IBlockTracer tracer)\\n   at Nethermind.Consensus.Processing.OneTimeChainProcessor.Process(Block block, ProcessingOptions options, IBlockTracer tracer)\\n   at Nethermind.Consensus.Tracing.Tracer.Trace(Block block, IBlockTracer blockTracer)\\n   at Nethermind.JsonRpc.Modules.Trace.TraceRpcModule.TraceBlock(Block block, ParityLikeBlockTracer tracer)\\n   at Nethermind.JsonRpc.Modules.Trace.TraceRpcModule.trace_replayBlockTransactions(BlockParameter blockParameter, String[] traceTypes)\\n   at InvokeStub_ITraceRpcModule.trace_replayBlockTransactions(Object, Object, IntPtr*)\\n   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)\\n   --- End of inner exception stack trace ---\\n   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)\\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\\n   at Nethermind.JsonRpc.JsonRpcService.ExecuteAsync(JsonRpcRequest request, String methodName, ValueTuple`2 method, JsonRpcContext context)\"},\"id\":1} \r\n2023-05-10 16:26:23.5539|INFO|9|Executing JSON RPC call trace_replayBlockTransactions with params [0x106ED1B, [\r\n  \"trace\"\r\n]] \r\n2023-05-10 16:26:23.5871|INFO|183|Executing JSON RPC call trace_replayBlockTransactions with params [0x106ED22, [\r\n  \"trace\"\r\n]] \r\n2023-05-10 16:26:23.6464|WARN|179|Error when handling ID 1, trace_replayBlockTransactions(0x106ED0E,[\r\n  \"trace\"\r\n]) | {\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32000,\"message\":\"insufficient funds for transfer: address 0xdafea492d9c6733ae3d56b7ed1adb60692c98bc5\",\"data\":\"System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.\\n ---> Nethermind.State.InsufficientBalanceException: insufficient funds for transfer: address 0xdafea492d9c6733ae3d56b7ed1adb60692c98bc5\\n   at Nethermind.State.StateProvider.SetNewBalance(Address address, UInt256& balanceChange, IReleaseSpec releaseSpec, Boolean isSubtracting)\\n   at Nethermind.Evm.TransactionProcessing.TransactionProcessor.Execute(Transaction transaction, BlockHeader block, ITxTracer txTracer, ExecutionOptions executionOptions)\\n   at Nethermind.Consensus.Processing.BlockProcessor.BlockValidationTransactionsExecutor.ProcessTransactions(Block block, ProcessingOptions processingOptions, BlockReceiptsTracer receiptsTracer, IReleaseSpec spec)\\n   at Nethermind.Consensus.Processing.BlockProcessor.ProcessBlock(Block block, IBlockTracer blockTracer, ProcessingOptions options)\\n   at Nethermind.Consensus.Processing.BlockProcessor.Process(Keccak newBranchStateRoot, List`1 suggestedBlocks, ProcessingOptions options, IBlockTracer blockTracer)\\n   at Nethermind.Consensus.Processing.BlockchainProcessor.ProcessBranch(ProcessingBranch processingBranch, ProcessingOptions options, IBlockTracer tracer)\\n   at Nethermind.Consensus.Processing.BlockchainProcessor.Process(Block suggestedBlock, ProcessingOptions options, IBlockTracer tracer)\\n   at Nethermind.Consensus.Processing.OneTimeChainProcessor.Process(Block block, ProcessingOptions options, IBlockTracer tracer)\\n   at Nethermind.Consensus.Tracing.Tracer.Trace(Block block, IBlockTracer blockTracer)\\n   at Nethermind.JsonRpc.Modules.Trace.TraceRpcModule.TraceBlock(Block block, ParityLikeBlockTracer tracer)\\n   at Nethermind.JsonRpc.Modules.Trace.TraceRpcModule.trace_replayBlockTransactions(BlockParameter blockParameter, String[] traceTypes)\\n   at InvokeStub_ITraceRpcModule.trace_replayBlockTransactions(Object, Object, IntPtr*)\\n   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)\\n   --- End of inner exception stack trace ---\\n   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)\\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\\n   at Nethermind.JsonRpc.JsonRpcService.ExecuteAsync(JsonRpcRequest request, String methodName, ValueTuple`2 method, JsonRpcContext context)\"},\"id\":1}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1542493494/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
