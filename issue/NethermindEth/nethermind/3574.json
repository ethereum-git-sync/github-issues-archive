{
  "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3574",
  "repository_url": "https://api.github.com/repos/NethermindEth/nethermind",
  "labels_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3574/labels{/name}",
  "comments_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3574/comments",
  "events_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3574/events",
  "html_url": "https://github.com/NethermindEth/nethermind/issues/3574",
  "id": 1042465085,
  "node_id": "I_kwDOBggaLc4-IsE9",
  "number": 3574,
  "title": "Transactions that revert with binary data reasons do not return the binary data reason: breaks gnosis safe relay",
  "user": {
    "login": "habdelra",
    "id": 61075,
    "node_id": "MDQ6VXNlcjYxMDc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/61075?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/habdelra",
    "html_url": "https://github.com/habdelra",
    "followers_url": "https://api.github.com/users/habdelra/followers",
    "following_url": "https://api.github.com/users/habdelra/following{/other_user}",
    "gists_url": "https://api.github.com/users/habdelra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/habdelra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/habdelra/subscriptions",
    "organizations_url": "https://api.github.com/users/habdelra/orgs",
    "repos_url": "https://api.github.com/users/habdelra/repos",
    "events_url": "https://api.github.com/users/habdelra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/habdelra/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "MarekM25",
    "id": 9356351,
    "node_id": "MDQ6VXNlcjkzNTYzNTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9356351?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MarekM25",
    "html_url": "https://github.com/MarekM25",
    "followers_url": "https://api.github.com/users/MarekM25/followers",
    "following_url": "https://api.github.com/users/MarekM25/following{/other_user}",
    "gists_url": "https://api.github.com/users/MarekM25/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MarekM25/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MarekM25/subscriptions",
    "organizations_url": "https://api.github.com/users/MarekM25/orgs",
    "repos_url": "https://api.github.com/users/MarekM25/repos",
    "events_url": "https://api.github.com/users/MarekM25/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MarekM25/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "MarekM25",
      "id": 9356351,
      "node_id": "MDQ6VXNlcjkzNTYzNTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9356351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarekM25",
      "html_url": "https://github.com/MarekM25",
      "followers_url": "https://api.github.com/users/MarekM25/followers",
      "following_url": "https://api.github.com/users/MarekM25/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarekM25/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarekM25/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarekM25/subscriptions",
      "organizations_url": "https://api.github.com/users/MarekM25/orgs",
      "repos_url": "https://api.github.com/users/MarekM25/repos",
      "events_url": "https://api.github.com/users/MarekM25/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarekM25/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "kjazgar",
      "id": 67744705,
      "node_id": "MDQ6VXNlcjY3NzQ0NzA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/67744705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kjazgar",
      "html_url": "https://github.com/kjazgar",
      "followers_url": "https://api.github.com/users/kjazgar/followers",
      "following_url": "https://api.github.com/users/kjazgar/following{/other_user}",
      "gists_url": "https://api.github.com/users/kjazgar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kjazgar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kjazgar/subscriptions",
      "organizations_url": "https://api.github.com/users/kjazgar/orgs",
      "repos_url": "https://api.github.com/users/kjazgar/repos",
      "events_url": "https://api.github.com/users/kjazgar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kjazgar/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "marcindsobczak",
      "id": 77129288,
      "node_id": "MDQ6VXNlcjc3MTI5Mjg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/77129288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcindsobczak",
      "html_url": "https://github.com/marcindsobczak",
      "followers_url": "https://api.github.com/users/marcindsobczak/followers",
      "following_url": "https://api.github.com/users/marcindsobczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcindsobczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcindsobczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcindsobczak/subscriptions",
      "organizations_url": "https://api.github.com/users/marcindsobczak/orgs",
      "repos_url": "https://api.github.com/users/marcindsobczak/repos",
      "events_url": "https://api.github.com/users/marcindsobczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcindsobczak/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2021-11-02T14:50:58Z",
  "updated_at": "2021-11-04T13:21:06Z",
  "closed_at": "2021-11-04T12:48:59Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Describe the bug**\r\nThis looks like a regression. There was originally a bug filed and fixed for this issue #3207. To recap, When a transaction fails a solidity require() that has a binary data \"reason\", the response from nethermind does not return the binary data. What I am seeing is that Nethermind is returning the error: `\"sender has deployed code\"`. This is very problematic for using gnosis safes. Specifically the gnosis safe relay server relies on intentional reverts in order to communicate gas estimate information in the revert reason code as binary data. You can see an example of this code here:\r\nhttps://github.com/gnosis/safe-contracts/blob/main/contracts/GnosisSafe.sol#L306-L327 and here https://github.com/gnosis/safe-contracts/blob/main/contracts/common/StorageAccessible.sol#L44. When the gnosis relay server attempts to intentionally trigger a revert and read the revert reason as binary data using a nethermind node, it throws an exception because the revert reason completely obscures the original binary data that was to accompany the revert reason.\r\n\r\nNow that nethermind is the recommended ethereum node for xDai, POA, and Sokol, this is a huge problem as we won't be able to reliably run gnosis safe transactions in those networks since they will be running nethermind. \r\n\r\n**To Reproduce**\r\nTo reproduce this issue, post the following message (this triggers the intentional revert):\r\nPOST https://rpc.xdaichain.com\r\n```json\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"eth_call\",\r\n    \"params\": [\r\n        {\r\n            \"value\": \"0x0\",\r\n            \"from\": \"0x9a0bbbbd3789f184CA88f2F6A40F42406cb842AC\",\r\n            \"gasPrice\": \"0x0\",\r\n            \"to\": \"0x9a0bbbbd3789f184CA88f2F6A40F42406cb842AC\",\r\n            \"data\": \"0xc4ca3a9c000000000000000000000000333d72f54cf17ba7a1971e7c7e9acb91c8b709d20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a2e6204500000000000000000000000000000000000000000000000000000000\"\r\n        }\r\n    ],\r\n    \"id\": 1\r\n}\r\n```\r\nThis returns the response:\r\n```json\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"error\": {\r\n        \"code\": -32015,\r\n        \"message\": \"VM execution error.\",\r\n        \"data\": \"sender has deployed code\"\r\n    },\r\n    \"id\": 1\r\n}\r\n```\r\nYou can confirm that this node is actually a nethermind node by sending the following message:\r\nPOST https://rpc.xdaichain.com\r\n```\r\n{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\":[],\"id\":1}\r\n```\r\nThis returns the response:\r\n```json\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"result\": \"Nethermind/v1.11.5-0-76b7f08ae-20211102/X64-Linux/5.0.7\",\r\n    \"id\": 1\r\n}\r\n```\r\n\r\n**Expected behavior**\r\nYou can see an example of what we would expect to happen by issuing this same call to an OpenEthereum RPC node:\r\n\r\nPOST https://xdai-archive.blockscout.com\r\n```json\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"eth_call\",\r\n    \"params\": [\r\n        {\r\n            \"value\": \"0x0\",\r\n            \"from\": \"0x9a0bbbbd3789f184CA88f2F6A40F42406cb842AC\",\r\n            \"gasPrice\": \"0x0\",\r\n            \"to\": \"0x9a0bbbbd3789f184CA88f2F6A40F42406cb842AC\",\r\n            \"data\": \"0xc4ca3a9c000000000000000000000000333d72f54cf17ba7a1971e7c7e9acb91c8b709d20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a2e6204500000000000000000000000000000000000000000000000000000000\"\r\n        }\r\n    ],\r\n    \"id\": 1\r\n}\r\n```\r\nThis returns a response that includes the binary data the the safe contract reverted with (in this case the gas measurement information) as part of the revert reason:\r\n```json\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"error\": {\r\n        \"code\": -32015,\r\n        \"message\": \"VM execution error.\",\r\n        \"data\": \"Reverted 0x08c379a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000c4a7\"\r\n    },\r\n    \"id\": 1\r\n}\r\n```\r\n\r\nYou can confirm this node is an Open Ethereum node by sending the following message:\r\nPOST https://xdai-archive.blockscout.com\r\n```\r\n{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\":[],\"id\":1}\r\n```\r\nThis returns the response:\r\n```json\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"result\": \"OpenEthereum//v3.3.0-rc.12-stable/x86_64-linux-musl/rustc1.47.0\",\r\n    \"id\": 1\r\n}\r\n```\r\n\r\n\r\n**Additional context**\r\nThis particular issue is very disruptive to how Gnosis safes work. The Gnosis safe relay relies on intentional reverts that include binary information as a means of communicating gas consumption information to the gnosis relay server. Failure to support this functionality essentially breaks Gnosis safe functionality.\r\n",
  "closed_by": {
    "login": "LukaszRozmej",
    "id": 12445221,
    "node_id": "MDQ6VXNlcjEyNDQ1MjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/12445221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/LukaszRozmej",
    "html_url": "https://github.com/LukaszRozmej",
    "followers_url": "https://api.github.com/users/LukaszRozmej/followers",
    "following_url": "https://api.github.com/users/LukaszRozmej/following{/other_user}",
    "gists_url": "https://api.github.com/users/LukaszRozmej/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/LukaszRozmej/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/LukaszRozmej/subscriptions",
    "organizations_url": "https://api.github.com/users/LukaszRozmej/orgs",
    "repos_url": "https://api.github.com/users/LukaszRozmej/repos",
    "events_url": "https://api.github.com/users/LukaszRozmej/events{/privacy}",
    "received_events_url": "https://api.github.com/users/LukaszRozmej/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3574/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3574/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/957822116",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/3574#issuecomment-957822116",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3574",
    "id": 957822116,
    "node_id": "IC_kwDOBggaLc45FzSk",
    "user": {
      "login": "LukaszRozmej",
      "id": 12445221,
      "node_id": "MDQ6VXNlcjEyNDQ1MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12445221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LukaszRozmej",
      "html_url": "https://github.com/LukaszRozmej",
      "followers_url": "https://api.github.com/users/LukaszRozmej/followers",
      "following_url": "https://api.github.com/users/LukaszRozmej/following{/other_user}",
      "gists_url": "https://api.github.com/users/LukaszRozmej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LukaszRozmej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LukaszRozmej/subscriptions",
      "organizations_url": "https://api.github.com/users/LukaszRozmej/orgs",
      "repos_url": "https://api.github.com/users/LukaszRozmej/repos",
      "events_url": "https://api.github.com/users/LukaszRozmej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LukaszRozmej/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-02T15:27:17Z",
    "updated_at": "2021-11-02T15:27:17Z",
    "author_association": "MEMBER",
    "body": "Hi, this is in line with https://eips.ethereum.org/EIPS/eip-3607 , which was retroactively introduced to ethereum spec as we (core devs, all clients) found no on-chain transactions (on any known chain) that break this rule. This was introduced for security reasons. This is already implemented in Geth and Nethermind, not sure about other client status.\r\n\r\nNow question is if this should also apply to JSON RPC, generally its best to make them behave similarly unless we have a good reason.\r\n\r\nWill ping Geth team how they implemented it, but as a quick workaround the question is if 'from' part of your eth_call has to be the contract address? Or can you just change that to something else.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/957822116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/957864281",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/3574#issuecomment-957864281",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3574",
    "id": 957864281,
    "node_id": "IC_kwDOBggaLc45F9lZ",
    "user": {
      "login": "habdelra",
      "id": 61075,
      "node_id": "MDQ6VXNlcjYxMDc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/61075?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/habdelra",
      "html_url": "https://github.com/habdelra",
      "followers_url": "https://api.github.com/users/habdelra/followers",
      "following_url": "https://api.github.com/users/habdelra/following{/other_user}",
      "gists_url": "https://api.github.com/users/habdelra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/habdelra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/habdelra/subscriptions",
      "organizations_url": "https://api.github.com/users/habdelra/orgs",
      "repos_url": "https://api.github.com/users/habdelra/repos",
      "events_url": "https://api.github.com/users/habdelra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/habdelra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-02T15:46:53Z",
    "updated_at": "2021-11-02T15:47:06Z",
    "author_association": "NONE",
    "body": "@LukaszRozmej that's a good question. Right now the `from` address represents the gnosis safe itself whose gas usage we are attempting to measure. When I change it to a different value, the results that I get become nonsensical, which i think is because for actual gnosis safe trasnactions the safe itself is the msg sender in these scenarios.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/957864281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/957866474",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/3574#issuecomment-957866474",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3574",
    "id": 957866474,
    "node_id": "IC_kwDOBggaLc45F-Hq",
    "user": {
      "login": "habdelra",
      "id": 61075,
      "node_id": "MDQ6VXNlcjYxMDc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/61075?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/habdelra",
      "html_url": "https://github.com/habdelra",
      "followers_url": "https://api.github.com/users/habdelra/followers",
      "following_url": "https://api.github.com/users/habdelra/following{/other_user}",
      "gists_url": "https://api.github.com/users/habdelra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/habdelra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/habdelra/subscriptions",
      "organizations_url": "https://api.github.com/users/habdelra/orgs",
      "repos_url": "https://api.github.com/users/habdelra/repos",
      "events_url": "https://api.github.com/users/habdelra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/habdelra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-02T15:48:10Z",
    "updated_at": "2021-11-02T15:48:10Z",
    "author_association": "NONE",
    "body": "I myself am not on the Gnosis team, but it would be great if we could get someone from that team to chime in on this issue, as they might also have insight here.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/957866474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/957870342",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/3574#issuecomment-957870342",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3574",
    "id": 957870342,
    "node_id": "IC_kwDOBggaLc45F_EG",
    "user": {
      "login": "LukaszRozmej",
      "id": 12445221,
      "node_id": "MDQ6VXNlcjEyNDQ1MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12445221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LukaszRozmej",
      "html_url": "https://github.com/LukaszRozmej",
      "followers_url": "https://api.github.com/users/LukaszRozmej/followers",
      "following_url": "https://api.github.com/users/LukaszRozmej/following{/other_user}",
      "gists_url": "https://api.github.com/users/LukaszRozmej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LukaszRozmej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LukaszRozmej/subscriptions",
      "organizations_url": "https://api.github.com/users/LukaszRozmej/orgs",
      "repos_url": "https://api.github.com/users/LukaszRozmej/repos",
      "events_url": "https://api.github.com/users/LukaszRozmej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LukaszRozmej/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-02T15:51:31Z",
    "updated_at": "2021-11-02T15:51:31Z",
    "author_association": "MEMBER",
    "body": "We decided to disable it for RPC",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/957870342/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/960660193",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/3574#issuecomment-960660193",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3574",
    "id": 960660193,
    "node_id": "IC_kwDOBggaLc45QoLh",
    "user": {
      "login": "habdelra",
      "id": 61075,
      "node_id": "MDQ6VXNlcjYxMDc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/61075?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/habdelra",
      "html_url": "https://github.com/habdelra",
      "followers_url": "https://api.github.com/users/habdelra/followers",
      "following_url": "https://api.github.com/users/habdelra/following{/other_user}",
      "gists_url": "https://api.github.com/users/habdelra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/habdelra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/habdelra/subscriptions",
      "organizations_url": "https://api.github.com/users/habdelra/orgs",
      "repos_url": "https://api.github.com/users/habdelra/repos",
      "events_url": "https://api.github.com/users/habdelra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/habdelra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-04T11:14:36Z",
    "updated_at": "2021-11-04T11:14:36Z",
    "author_association": "NONE",
    "body": "@LukaszRozmej according the the spec you referenced:\r\n> Clients might choose to disable this rule for RPC calls like eth_call and eth_estimateGas as some Multi-Sig contracts use these calls to create transactions as if they originated from the multisig contract itself.\r\n\r\nthis is literally our situation. Is there a param that we can pass in eth_call to disable this rule? Or will you be disabling it across the board for RPC?",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/960660193/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/960867257",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/3574#issuecomment-960867257",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3574",
    "id": 960867257,
    "node_id": "IC_kwDOBggaLc45Rau5",
    "user": {
      "login": "habdelra",
      "id": 61075,
      "node_id": "MDQ6VXNlcjYxMDc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/61075?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/habdelra",
      "html_url": "https://github.com/habdelra",
      "followers_url": "https://api.github.com/users/habdelra/followers",
      "following_url": "https://api.github.com/users/habdelra/following{/other_user}",
      "gists_url": "https://api.github.com/users/habdelra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/habdelra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/habdelra/subscriptions",
      "organizations_url": "https://api.github.com/users/habdelra/orgs",
      "repos_url": "https://api.github.com/users/habdelra/repos",
      "events_url": "https://api.github.com/users/habdelra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/habdelra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-04T12:59:01Z",
    "updated_at": "2021-11-04T12:59:38Z",
    "author_association": "NONE",
    "body": "@LukaszRozmej will this also be disabled for eth_estimateGas?",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/960867257/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/960913151",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/3574#issuecomment-960913151",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/3574",
    "id": 960913151,
    "node_id": "IC_kwDOBggaLc45Rl7_",
    "user": {
      "login": "MarekM25",
      "id": 9356351,
      "node_id": "MDQ6VXNlcjkzNTYzNTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9356351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarekM25",
      "html_url": "https://github.com/MarekM25",
      "followers_url": "https://api.github.com/users/MarekM25/followers",
      "following_url": "https://api.github.com/users/MarekM25/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarekM25/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarekM25/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarekM25/subscriptions",
      "organizations_url": "https://api.github.com/users/MarekM25/orgs",
      "repos_url": "https://api.github.com/users/MarekM25/repos",
      "events_url": "https://api.github.com/users/MarekM25/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarekM25/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-04T13:21:06Z",
    "updated_at": "2021-11-04T13:21:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @LukaszRozmej will this also be disabled for eth_estimateGas?\r\n\r\nYes :)",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/960913151/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
