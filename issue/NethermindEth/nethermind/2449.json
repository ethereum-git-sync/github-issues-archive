{
  "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
  "repository_url": "https://api.github.com/repos/NethermindEth/nethermind",
  "labels_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449/labels{/name}",
  "comments_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449/comments",
  "events_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449/events",
  "html_url": "https://github.com/NethermindEth/nethermind/issues/2449",
  "id": 739926170,
  "node_id": "MDU6SXNzdWU3Mzk5MjYxNzA=",
  "number": 2449,
  "title": "BadInstruction only in nethermind",
  "user": {
    "login": "rafagalan",
    "id": 71089247,
    "node_id": "MDQ6VXNlcjcxMDg5MjQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/71089247?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rafagalan",
    "html_url": "https://github.com/rafagalan",
    "followers_url": "https://api.github.com/users/rafagalan/followers",
    "following_url": "https://api.github.com/users/rafagalan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rafagalan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rafagalan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rafagalan/subscriptions",
    "organizations_url": "https://api.github.com/users/rafagalan/orgs",
    "repos_url": "https://api.github.com/users/rafagalan/repos",
    "events_url": "https://api.github.com/users/rafagalan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rafagalan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 674950059,
      "node_id": "MDU6TGFiZWw2NzQ5NTAwNTk=",
      "url": "https://api.github.com/repos/NethermindEth/nethermind/labels/bug",
      "name": "bug",
      "color": "ee0701",
      "default": true,
      "description": null
    },
    {
      "id": 2034468755,
      "node_id": "MDU6TGFiZWwyMDM0NDY4NzU1",
      "url": "https://api.github.com/repos/NethermindEth/nethermind/labels/support",
      "name": "support",
      "color": "bfdadc",
      "default": false,
      "description": ""
    },
    {
      "id": 2055562079,
      "node_id": "MDU6TGFiZWwyMDU1NTYyMDc5",
      "url": "https://api.github.com/repos/NethermindEth/nethermind/labels/baseline",
      "name": "baseline",
      "color": "f7b399",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "rafagalan",
    "id": 71089247,
    "node_id": "MDQ6VXNlcjcxMDg5MjQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/71089247?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rafagalan",
    "html_url": "https://github.com/rafagalan",
    "followers_url": "https://api.github.com/users/rafagalan/followers",
    "following_url": "https://api.github.com/users/rafagalan/following{/other_user}",
    "gists_url": "https://api.github.com/users/rafagalan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rafagalan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rafagalan/subscriptions",
    "organizations_url": "https://api.github.com/users/rafagalan/orgs",
    "repos_url": "https://api.github.com/users/rafagalan/repos",
    "events_url": "https://api.github.com/users/rafagalan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rafagalan/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "rafagalan",
      "id": 71089247,
      "node_id": "MDQ6VXNlcjcxMDg5MjQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/71089247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafagalan",
      "html_url": "https://github.com/rafagalan",
      "followers_url": "https://api.github.com/users/rafagalan/followers",
      "following_url": "https://api.github.com/users/rafagalan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafagalan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafagalan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafagalan/subscriptions",
      "organizations_url": "https://api.github.com/users/rafagalan/orgs",
      "repos_url": "https://api.github.com/users/rafagalan/repos",
      "events_url": "https://api.github.com/users/rafagalan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafagalan/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 31,
  "created_at": "2020-11-10T13:50:50Z",
  "updated_at": "2020-11-18T09:14:48Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hello all,\r\n\r\nThis issue arises when executing a verifier contract created by Zokrates. The circuit is the following: \r\n```\r\ndef main(private field quantity):\r\n    assert(quantity > 5)\r\n    assert(quantity < 15)\r\n    return\r\n```\r\nWhich generates the contract: \r\n```\r\n// This file is LGPL3 Licensed\r\npragma solidity ^0.6.1;\r\n\r\n/**\r\n * @title Elliptic curve operations on twist points for alt_bn128\r\n * @author Mustafa Al-Bassam (mus@musalbas.com)\r\n * @dev Homepage: https://github.com/musalbas/solidity-BN256G2\r\n */\r\n\r\nlibrary BN256G2 {\r\n    uint256 internal constant FIELD_MODULUS = 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47;\r\n    uint256 internal constant TWISTBX = 0x2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5;\r\n    uint256 internal constant TWISTBY = 0x9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d2;\r\n    uint internal constant PTXX = 0;\r\n    uint internal constant PTXY = 1;\r\n    uint internal constant PTYX = 2;\r\n    uint internal constant PTYY = 3;\r\n    uint internal constant PTZX = 4;\r\n    uint internal constant PTZY = 5;\r\n\r\n    /**\r\n     * @notice Add two twist points\r\n     * @param pt1xx Coefficient 1 of x on point 1\r\n     * @param pt1xy Coefficient 2 of x on point 1\r\n     * @param pt1yx Coefficient 1 of y on point 1\r\n     * @param pt1yy Coefficient 2 of y on point 1\r\n     * @param pt2xx Coefficient 1 of x on point 2\r\n     * @param pt2xy Coefficient 2 of x on point 2\r\n     * @param pt2yx Coefficient 1 of y on point 2\r\n     * @param pt2yy Coefficient 2 of y on point 2\r\n     * @return (pt3xx, pt3xy, pt3yx, pt3yy)\r\n     */\r\n    function ECTwistAdd(\r\n        uint256 pt1xx, uint256 pt1xy,\r\n        uint256 pt1yx, uint256 pt1yy,\r\n        uint256 pt2xx, uint256 pt2xy,\r\n        uint256 pt2yx, uint256 pt2yy\r\n    ) public view returns (\r\n        uint256, uint256,\r\n        uint256, uint256\r\n    ) {\r\n        if (\r\n            pt1xx == 0 && pt1xy == 0 &&\r\n            pt1yx == 0 && pt1yy == 0\r\n        ) {\r\n            if (!(\r\n                pt2xx == 0 && pt2xy == 0 &&\r\n                pt2yx == 0 && pt2yy == 0\r\n            )) {\r\n                assert(_isOnCurve(\r\n                    pt2xx, pt2xy,\r\n                    pt2yx, pt2yy\r\n                ));\r\n            }\r\n            return (\r\n                pt2xx, pt2xy,\r\n                pt2yx, pt2yy\r\n            );\r\n        } else if (\r\n            pt2xx == 0 && pt2xy == 0 &&\r\n            pt2yx == 0 && pt2yy == 0\r\n        ) {\r\n            assert(_isOnCurve(\r\n                pt1xx, pt1xy,\r\n                pt1yx, pt1yy\r\n            ));\r\n            return (\r\n                pt1xx, pt1xy,\r\n                pt1yx, pt1yy\r\n            );\r\n        }\r\n\r\n        assert(_isOnCurve(\r\n            pt1xx, pt1xy,\r\n            pt1yx, pt1yy\r\n        ));\r\n        assert(_isOnCurve(\r\n            pt2xx, pt2xy,\r\n            pt2yx, pt2yy\r\n        ));\r\n\r\n        uint256[6] memory pt3 = _ECTwistAddJacobian(\r\n            pt1xx, pt1xy,\r\n            pt1yx, pt1yy,\r\n            1,     0,\r\n            pt2xx, pt2xy,\r\n            pt2yx, pt2yy,\r\n            1,     0\r\n        );\r\n\r\n        return _fromJacobian(\r\n            pt3[PTXX], pt3[PTXY],\r\n            pt3[PTYX], pt3[PTYY],\r\n            pt3[PTZX], pt3[PTZY]\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @notice Multiply a twist point by a scalar\r\n     * @param s     Scalar to multiply by\r\n     * @param pt1xx Coefficient 1 of x\r\n     * @param pt1xy Coefficient 2 of x\r\n     * @param pt1yx Coefficient 1 of y\r\n     * @param pt1yy Coefficient 2 of y\r\n     * @return (pt2xx, pt2xy, pt2yx, pt2yy)\r\n     */\r\n    function ECTwistMul(\r\n        uint256 s,\r\n        uint256 pt1xx, uint256 pt1xy,\r\n        uint256 pt1yx, uint256 pt1yy\r\n    ) public view returns (\r\n        uint256, uint256,\r\n        uint256, uint256\r\n    ) {\r\n        uint256 pt1zx = 1;\r\n        if (\r\n            pt1xx == 0 && pt1xy == 0 &&\r\n            pt1yx == 0 && pt1yy == 0\r\n        ) {\r\n            pt1xx = 1;\r\n            pt1yx = 1;\r\n            pt1zx = 0;\r\n        } else {\r\n            assert(_isOnCurve(\r\n                pt1xx, pt1xy,\r\n                pt1yx, pt1yy\r\n            ));\r\n        }\r\n\r\n        uint256[6] memory pt2 = _ECTwistMulJacobian(\r\n            s,\r\n            pt1xx, pt1xy,\r\n            pt1yx, pt1yy,\r\n            pt1zx, 0\r\n        );\r\n\r\n        return _fromJacobian(\r\n            pt2[PTXX], pt2[PTXY],\r\n            pt2[PTYX], pt2[PTYY],\r\n            pt2[PTZX], pt2[PTZY]\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @notice Get the field modulus\r\n     * @return The field modulus\r\n     */\r\n    function GetFieldModulus() public pure returns (uint256) {\r\n        return FIELD_MODULUS;\r\n    }\r\n\r\n    function submod(uint256 a, uint256 b, uint256 n) internal pure returns (uint256) {\r\n        return addmod(a, n - b, n);\r\n    }\r\n\r\n    function _FQ2Mul(\r\n        uint256 xx, uint256 xy,\r\n        uint256 yx, uint256 yy\r\n    ) internal pure returns (uint256, uint256) {\r\n        return (\r\n            submod(mulmod(xx, yx, FIELD_MODULUS), mulmod(xy, yy, FIELD_MODULUS), FIELD_MODULUS),\r\n            addmod(mulmod(xx, yy, FIELD_MODULUS), mulmod(xy, yx, FIELD_MODULUS), FIELD_MODULUS)\r\n        );\r\n    }\r\n\r\n    function _FQ2Muc(\r\n        uint256 xx, uint256 xy,\r\n        uint256 c\r\n    ) internal pure returns (uint256, uint256) {\r\n        return (\r\n            mulmod(xx, c, FIELD_MODULUS),\r\n            mulmod(xy, c, FIELD_MODULUS)\r\n        );\r\n    }\r\n\r\n    function _FQ2Add(\r\n        uint256 xx, uint256 xy,\r\n        uint256 yx, uint256 yy\r\n    ) internal pure returns (uint256, uint256) {\r\n        return (\r\n            addmod(xx, yx, FIELD_MODULUS),\r\n            addmod(xy, yy, FIELD_MODULUS)\r\n        );\r\n    }\r\n\r\n    function _FQ2Sub(\r\n        uint256 xx, uint256 xy,\r\n        uint256 yx, uint256 yy\r\n    ) internal pure returns (uint256 rx, uint256 ry) {\r\n        return (\r\n            submod(xx, yx, FIELD_MODULUS),\r\n            submod(xy, yy, FIELD_MODULUS)\r\n        );\r\n    }\r\n\r\n    function _FQ2Div(\r\n        uint256 xx, uint256 xy,\r\n        uint256 yx, uint256 yy\r\n    ) internal view returns (uint256, uint256) {\r\n        (yx, yy) = _FQ2Inv(yx, yy);\r\n        return _FQ2Mul(xx, xy, yx, yy);\r\n    }\r\n\r\n    function _FQ2Inv(uint256 x, uint256 y) internal view returns (uint256, uint256) {\r\n        uint256 inv = _modInv(addmod(mulmod(y, y, FIELD_MODULUS), mulmod(x, x, FIELD_MODULUS), FIELD_MODULUS), FIELD_MODULUS);\r\n        return (\r\n            mulmod(x, inv, FIELD_MODULUS),\r\n            FIELD_MODULUS - mulmod(y, inv, FIELD_MODULUS)\r\n        );\r\n    }\r\n\r\n    function _isOnCurve(\r\n        uint256 xx, uint256 xy,\r\n        uint256 yx, uint256 yy\r\n    ) internal pure returns (bool) {\r\n        uint256 yyx;\r\n        uint256 yyy;\r\n        uint256 xxxx;\r\n        uint256 xxxy;\r\n        (yyx, yyy) = _FQ2Mul(yx, yy, yx, yy);\r\n        (xxxx, xxxy) = _FQ2Mul(xx, xy, xx, xy);\r\n        (xxxx, xxxy) = _FQ2Mul(xxxx, xxxy, xx, xy);\r\n        (yyx, yyy) = _FQ2Sub(yyx, yyy, xxxx, xxxy);\r\n        (yyx, yyy) = _FQ2Sub(yyx, yyy, TWISTBX, TWISTBY);\r\n        return yyx == 0 && yyy == 0;\r\n    }\r\n\r\n    function _modInv(uint256 a, uint256 n) internal view returns (uint256 result) {\r\n        bool success;\r\n        assembly {\r\n            let freemem := mload(0x40)\r\n            mstore(freemem, 0x20)\r\n            mstore(add(freemem,0x20), 0x20)\r\n            mstore(add(freemem,0x40), 0x20)\r\n            mstore(add(freemem,0x60), a)\r\n            mstore(add(freemem,0x80), sub(n, 2))\r\n            mstore(add(freemem,0xA0), n)\r\n            success := staticcall(sub(gas(), 2000), 5, freemem, 0xC0, freemem, 0x20)\r\n            result := mload(freemem)\r\n        }\r\n        require(success);\r\n    }\r\n\r\n    function _fromJacobian(\r\n        uint256 pt1xx, uint256 pt1xy,\r\n        uint256 pt1yx, uint256 pt1yy,\r\n        uint256 pt1zx, uint256 pt1zy\r\n    ) internal view returns (\r\n        uint256 pt2xx, uint256 pt2xy,\r\n        uint256 pt2yx, uint256 pt2yy\r\n    ) {\r\n        uint256 invzx;\r\n        uint256 invzy;\r\n        (invzx, invzy) = _FQ2Inv(pt1zx, pt1zy);\r\n        (pt2xx, pt2xy) = _FQ2Mul(pt1xx, pt1xy, invzx, invzy);\r\n        (pt2yx, pt2yy) = _FQ2Mul(pt1yx, pt1yy, invzx, invzy);\r\n    }\r\n\r\n    function _ECTwistAddJacobian(\r\n        uint256 pt1xx, uint256 pt1xy,\r\n        uint256 pt1yx, uint256 pt1yy,\r\n        uint256 pt1zx, uint256 pt1zy,\r\n        uint256 pt2xx, uint256 pt2xy,\r\n        uint256 pt2yx, uint256 pt2yy,\r\n        uint256 pt2zx, uint256 pt2zy) internal pure returns (uint256[6] memory pt3) {\r\n            if (pt1zx == 0 && pt1zy == 0) {\r\n                (\r\n                    pt3[PTXX], pt3[PTXY],\r\n                    pt3[PTYX], pt3[PTYY],\r\n                    pt3[PTZX], pt3[PTZY]\r\n                ) = (\r\n                    pt2xx, pt2xy,\r\n                    pt2yx, pt2yy,\r\n                    pt2zx, pt2zy\r\n                );\r\n                return pt3;\r\n            } else if (pt2zx == 0 && pt2zy == 0) {\r\n                (\r\n                    pt3[PTXX], pt3[PTXY],\r\n                    pt3[PTYX], pt3[PTYY],\r\n                    pt3[PTZX], pt3[PTZY]\r\n                ) = (\r\n                    pt1xx, pt1xy,\r\n                    pt1yx, pt1yy,\r\n                    pt1zx, pt1zy\r\n                );\r\n                return pt3;\r\n            }\r\n\r\n            (pt2yx,     pt2yy)     = _FQ2Mul(pt2yx, pt2yy, pt1zx, pt1zy); // U1 = y2 * z1\r\n            (pt3[PTYX], pt3[PTYY]) = _FQ2Mul(pt1yx, pt1yy, pt2zx, pt2zy); // U2 = y1 * z2\r\n            (pt2xx,     pt2xy)     = _FQ2Mul(pt2xx, pt2xy, pt1zx, pt1zy); // V1 = x2 * z1\r\n            (pt3[PTZX], pt3[PTZY]) = _FQ2Mul(pt1xx, pt1xy, pt2zx, pt2zy); // V2 = x1 * z2\r\n\r\n            if (pt2xx == pt3[PTZX] && pt2xy == pt3[PTZY]) {\r\n                if (pt2yx == pt3[PTYX] && pt2yy == pt3[PTYY]) {\r\n                    (\r\n                        pt3[PTXX], pt3[PTXY],\r\n                        pt3[PTYX], pt3[PTYY],\r\n                        pt3[PTZX], pt3[PTZY]\r\n                    ) = _ECTwistDoubleJacobian(pt1xx, pt1xy, pt1yx, pt1yy, pt1zx, pt1zy);\r\n                    return pt3;\r\n                }\r\n                (\r\n                    pt3[PTXX], pt3[PTXY],\r\n                    pt3[PTYX], pt3[PTYY],\r\n                    pt3[PTZX], pt3[PTZY]\r\n                ) = (\r\n                    1, 0,\r\n                    1, 0,\r\n                    0, 0\r\n                );\r\n                return pt3;\r\n            }\r\n\r\n            (pt2zx,     pt2zy)     = _FQ2Mul(pt1zx, pt1zy, pt2zx,     pt2zy);     // W = z1 * z2\r\n            (pt1xx,     pt1xy)     = _FQ2Sub(pt2yx, pt2yy, pt3[PTYX], pt3[PTYY]); // U = U1 - U2\r\n            (pt1yx,     pt1yy)     = _FQ2Sub(pt2xx, pt2xy, pt3[PTZX], pt3[PTZY]); // V = V1 - V2\r\n            (pt1zx,     pt1zy)     = _FQ2Mul(pt1yx, pt1yy, pt1yx,     pt1yy);     // V_squared = V * V\r\n            (pt2yx,     pt2yy)     = _FQ2Mul(pt1zx, pt1zy, pt3[PTZX], pt3[PTZY]); // V_squared_times_V2 = V_squared * V2\r\n            (pt1zx,     pt1zy)     = _FQ2Mul(pt1zx, pt1zy, pt1yx,     pt1yy);     // V_cubed = V * V_squared\r\n            (pt3[PTZX], pt3[PTZY]) = _FQ2Mul(pt1zx, pt1zy, pt2zx,     pt2zy);     // newz = V_cubed * W\r\n            (pt2xx,     pt2xy)     = _FQ2Mul(pt1xx, pt1xy, pt1xx,     pt1xy);     // U * U\r\n            (pt2xx,     pt2xy)     = _FQ2Mul(pt2xx, pt2xy, pt2zx,     pt2zy);     // U * U * W\r\n            (pt2xx,     pt2xy)     = _FQ2Sub(pt2xx, pt2xy, pt1zx,     pt1zy);     // U * U * W - V_cubed\r\n            (pt2zx,     pt2zy)     = _FQ2Muc(pt2yx, pt2yy, 2);                    // 2 * V_squared_times_V2\r\n            (pt2xx,     pt2xy)     = _FQ2Sub(pt2xx, pt2xy, pt2zx,     pt2zy);     // A = U * U * W - V_cubed - 2 * V_squared_times_V2\r\n            (pt3[PTXX], pt3[PTXY]) = _FQ2Mul(pt1yx, pt1yy, pt2xx,     pt2xy);     // newx = V * A\r\n            (pt1yx,     pt1yy)     = _FQ2Sub(pt2yx, pt2yy, pt2xx,     pt2xy);     // V_squared_times_V2 - A\r\n            (pt1yx,     pt1yy)     = _FQ2Mul(pt1xx, pt1xy, pt1yx,     pt1yy);     // U * (V_squared_times_V2 - A)\r\n            (pt1xx,     pt1xy)     = _FQ2Mul(pt1zx, pt1zy, pt3[PTYX], pt3[PTYY]); // V_cubed * U2\r\n            (pt3[PTYX], pt3[PTYY]) = _FQ2Sub(pt1yx, pt1yy, pt1xx,     pt1xy);     // newy = U * (V_squared_times_V2 - A) - V_cubed * U2\r\n    }\r\n\r\n    function _ECTwistDoubleJacobian(\r\n        uint256 pt1xx, uint256 pt1xy,\r\n        uint256 pt1yx, uint256 pt1yy,\r\n        uint256 pt1zx, uint256 pt1zy\r\n    ) internal pure returns (\r\n        uint256 pt2xx, uint256 pt2xy,\r\n        uint256 pt2yx, uint256 pt2yy,\r\n        uint256 pt2zx, uint256 pt2zy\r\n    ) {\r\n        (pt2xx, pt2xy) = _FQ2Muc(pt1xx, pt1xy, 3);            // 3 * x\r\n        (pt2xx, pt2xy) = _FQ2Mul(pt2xx, pt2xy, pt1xx, pt1xy); // W = 3 * x * x\r\n        (pt1zx, pt1zy) = _FQ2Mul(pt1yx, pt1yy, pt1zx, pt1zy); // S = y * z\r\n        (pt2yx, pt2yy) = _FQ2Mul(pt1xx, pt1xy, pt1yx, pt1yy); // x * y\r\n        (pt2yx, pt2yy) = _FQ2Mul(pt2yx, pt2yy, pt1zx, pt1zy); // B = x * y * S\r\n        (pt1xx, pt1xy) = _FQ2Mul(pt2xx, pt2xy, pt2xx, pt2xy); // W * W\r\n        (pt2zx, pt2zy) = _FQ2Muc(pt2yx, pt2yy, 8);            // 8 * B\r\n        (pt1xx, pt1xy) = _FQ2Sub(pt1xx, pt1xy, pt2zx, pt2zy); // H = W * W - 8 * B\r\n        (pt2zx, pt2zy) = _FQ2Mul(pt1zx, pt1zy, pt1zx, pt1zy); // S_squared = S * S\r\n        (pt2yx, pt2yy) = _FQ2Muc(pt2yx, pt2yy, 4);            // 4 * B\r\n        (pt2yx, pt2yy) = _FQ2Sub(pt2yx, pt2yy, pt1xx, pt1xy); // 4 * B - H\r\n        (pt2yx, pt2yy) = _FQ2Mul(pt2yx, pt2yy, pt2xx, pt2xy); // W * (4 * B - H)\r\n        (pt2xx, pt2xy) = _FQ2Muc(pt1yx, pt1yy, 8);            // 8 * y\r\n        (pt2xx, pt2xy) = _FQ2Mul(pt2xx, pt2xy, pt1yx, pt1yy); // 8 * y * y\r\n        (pt2xx, pt2xy) = _FQ2Mul(pt2xx, pt2xy, pt2zx, pt2zy); // 8 * y * y * S_squared\r\n        (pt2yx, pt2yy) = _FQ2Sub(pt2yx, pt2yy, pt2xx, pt2xy); // newy = W * (4 * B - H) - 8 * y * y * S_squared\r\n        (pt2xx, pt2xy) = _FQ2Muc(pt1xx, pt1xy, 2);            // 2 * H\r\n        (pt2xx, pt2xy) = _FQ2Mul(pt2xx, pt2xy, pt1zx, pt1zy); // newx = 2 * H * S\r\n        (pt2zx, pt2zy) = _FQ2Mul(pt1zx, pt1zy, pt2zx, pt2zy); // S * S_squared\r\n        (pt2zx, pt2zy) = _FQ2Muc(pt2zx, pt2zy, 8);            // newz = 8 * S * S_squared\r\n    }\r\n\r\n    function _ECTwistMulJacobian(\r\n        uint256 d,\r\n        uint256 pt1xx, uint256 pt1xy,\r\n        uint256 pt1yx, uint256 pt1yy,\r\n        uint256 pt1zx, uint256 pt1zy\r\n    ) internal pure returns (uint256[6] memory pt2) {\r\n        while (d != 0) {\r\n            if ((d & 1) != 0) {\r\n                pt2 = _ECTwistAddJacobian(\r\n                    pt2[PTXX], pt2[PTXY],\r\n                    pt2[PTYX], pt2[PTYY],\r\n                    pt2[PTZX], pt2[PTZY],\r\n                    pt1xx, pt1xy,\r\n                    pt1yx, pt1yy,\r\n                    pt1zx, pt1zy);\r\n            }\r\n            (\r\n                pt1xx, pt1xy,\r\n                pt1yx, pt1yy,\r\n                pt1zx, pt1zy\r\n            ) = _ECTwistDoubleJacobian(\r\n                pt1xx, pt1xy,\r\n                pt1yx, pt1yy,\r\n                pt1zx, pt1zy\r\n            );\r\n\r\n            d = d / 2;\r\n        }\r\n    }\r\n}\r\n// This file is MIT Licensed.\r\n//\r\n// Copyright 2017 Christian Reitwiessner\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\npragma solidity ^0.6.1;\r\nlibrary Pairing {\r\n    struct G1Point {\r\n        uint X;\r\n        uint Y;\r\n    }\r\n    // Encoding of field elements is: X[0] * z + X[1]\r\n    struct G2Point {\r\n        uint[2] X;\r\n        uint[2] Y;\r\n    }\r\n    /// @return the generator of G1\r\n    function P1() pure internal returns (G1Point memory) {\r\n        return G1Point(1, 2);\r\n    }\r\n    /// @return the generator of G2\r\n    function P2() pure internal returns (G2Point memory) {\r\n        return G2Point(\r\n            [11559732032986387107991004021392285783925812861821192530917403151452391805634,\r\n             10857046999023057135944570762232829481370756359578518086990519993285655852781],\r\n            [4082367875863433681332203403145435568316851327593401208105741076214120093531,\r\n             8495653923123431417604973247489272438418190587263600148770280649306958101930]\r\n        );\r\n    }\r\n    /// @return the negation of p, i.e. p.addition(p.negate()) should be zero.\r\n    function negate(G1Point memory p) pure internal returns (G1Point memory) {\r\n        // The prime q in the base field F_q for G1\r\n        uint q = 21888242871839275222246405745257275088696311157297823662689037894645226208583;\r\n        if (p.X == 0 && p.Y == 0)\r\n            return G1Point(0, 0);\r\n        return G1Point(p.X, q - (p.Y % q));\r\n    }\r\n    /// @return r the sum of two points of G1\r\n    function addition(G1Point memory p1, G1Point memory p2) internal view returns (G1Point memory r) {\r\n        uint[4] memory input;\r\n        input[0] = p1.X;\r\n        input[1] = p1.Y;\r\n        input[2] = p2.X;\r\n        input[3] = p2.Y;\r\n        bool success;\r\n        assembly {\r\n            success := staticcall(sub(gas(), 2000), 6, input, 0xc0, r, 0x60)\r\n            // Use \"invalid\" to make gas estimation work\r\n            switch success case 0 { invalid() }\r\n        }\r\n        require(success);\r\n    }\r\n    /// @return r the sum of two points of G2\r\n    function addition(G2Point memory p1, G2Point memory p2) internal view returns (G2Point memory r) {\r\n        (r.X[1], r.X[0], r.Y[1], r.Y[0]) = BN256G2.ECTwistAdd(p1.X[1],p1.X[0],p1.Y[1],p1.Y[0],p2.X[1],p2.X[0],p2.Y[1],p2.Y[0]);\r\n    }\r\n    /// @return r the product of a point on G1 and a scalar, i.e.\r\n    /// p == p.scalar_mul(1) and p.addition(p) == p.scalar_mul(2) for all points p.\r\n    function scalar_mul(G1Point memory p, uint s) internal view returns (G1Point memory r) {\r\n        uint[3] memory input;\r\n        input[0] = p.X;\r\n        input[1] = p.Y;\r\n        input[2] = s;\r\n        bool success;\r\n        assembly {\r\n            success := staticcall(sub(gas(), 2000), 7, input, 0x80, r, 0x60)\r\n            // Use \"invalid\" to make gas estimation work\r\n            switch success case 0 { invalid() }\r\n        }\r\n        require (success);\r\n    }\r\n    /// @return the result of computing the pairing check\r\n    /// e(p1[0], p2[0]) *  .... * e(p1[n], p2[n]) == 1\r\n    /// For example pairing([P1(), P1().negate()], [P2(), P2()]) should\r\n    /// return true.\r\n    function pairing(G1Point[] memory p1, G2Point[] memory p2) internal view returns (bool) {\r\n        require(p1.length == p2.length);\r\n        uint elements = p1.length;\r\n        uint inputSize = elements * 6;\r\n        uint[] memory input = new uint[](inputSize);\r\n        for (uint i = 0; i < elements; i++)\r\n        {\r\n            input[i * 6 + 0] = p1[i].X;\r\n            input[i * 6 + 1] = p1[i].Y;\r\n            input[i * 6 + 2] = p2[i].X[0];\r\n            input[i * 6 + 3] = p2[i].X[1];\r\n            input[i * 6 + 4] = p2[i].Y[0];\r\n            input[i * 6 + 5] = p2[i].Y[1];\r\n        }\r\n        uint[1] memory out;\r\n        bool success;\r\n        assembly {\r\n            success := staticcall(sub(gas(), 2000), 8, add(input, 0x20), mul(inputSize, 0x20), out, 0x20)\r\n            // Use \"invalid\" to make gas estimation work\r\n            switch success case 0 { invalid() }\r\n        }\r\n        require(success);\r\n        return out[0] != 0;\r\n    }\r\n    /// Convenience method for a pairing check for two pairs.\r\n    function pairingProd2(G1Point memory a1, G2Point memory a2, G1Point memory b1, G2Point memory b2) internal view returns (bool) {\r\n        G1Point[] memory p1 = new G1Point[](2);\r\n        G2Point[] memory p2 = new G2Point[](2);\r\n        p1[0] = a1;\r\n        p1[1] = b1;\r\n        p2[0] = a2;\r\n        p2[1] = b2;\r\n        return pairing(p1, p2);\r\n    }\r\n    /// Convenience method for a pairing check for three pairs.\r\n    function pairingProd3(\r\n            G1Point memory a1, G2Point memory a2,\r\n            G1Point memory b1, G2Point memory b2,\r\n            G1Point memory c1, G2Point memory c2\r\n    ) internal view returns (bool) {\r\n        G1Point[] memory p1 = new G1Point[](3);\r\n        G2Point[] memory p2 = new G2Point[](3);\r\n        p1[0] = a1;\r\n        p1[1] = b1;\r\n        p1[2] = c1;\r\n        p2[0] = a2;\r\n        p2[1] = b2;\r\n        p2[2] = c2;\r\n        return pairing(p1, p2);\r\n    }\r\n    /// Convenience method for a pairing check for four pairs.\r\n    function pairingProd4(\r\n            G1Point memory a1, G2Point memory a2,\r\n            G1Point memory b1, G2Point memory b2,\r\n            G1Point memory c1, G2Point memory c2,\r\n            G1Point memory d1, G2Point memory d2\r\n    ) internal view returns (bool) {\r\n        G1Point[] memory p1 = new G1Point[](4);\r\n        G2Point[] memory p2 = new G2Point[](4);\r\n        p1[0] = a1;\r\n        p1[1] = b1;\r\n        p1[2] = c1;\r\n        p1[3] = d1;\r\n        p2[0] = a2;\r\n        p2[1] = b2;\r\n        p2[2] = c2;\r\n        p2[3] = d2;\r\n        return pairing(p1, p2);\r\n    }\r\n}\r\n\r\ncontract Verifier {\r\n    using Pairing for *;\r\n    struct VerifyingKey {\r\n        Pairing.G1Point alpha;\r\n        Pairing.G2Point beta;\r\n        Pairing.G2Point gamma;\r\n        Pairing.G2Point delta;\r\n        Pairing.G1Point[] gamma_abc;\r\n    }\r\n    struct Proof {\r\n        Pairing.G1Point a;\r\n        Pairing.G2Point b;\r\n        Pairing.G1Point c;\r\n    }\r\n    function verifyingKey() pure internal returns (VerifyingKey memory vk) {\r\n        vk.alpha = Pairing.G1Point(uint256(0x1936c240636390dc823e3a728e94b208eb53c6756d81da57ec3425e05d43ac10), uint256(0x2d70ff78e8216bf29d58923a686d9738278b8ce2fd822e197c85b09286d15566));\r\n        vk.beta = Pairing.G2Point([uint256(0x2b4daf047abe2e7f0b311118c1b963b63695dc0d769cea78849604434de055bf), uint256(0x29c13ecb6f33dbc4b3b8a02e2e255511ce4c26a8a2f299efcc94caf2de4fce00)], [uint256(0x1da9020008df7f549751f8a251af3b2dc4a2ad3e0870de54acaedd9fc1b47e17), uint256(0x25ea0d7e2b29de431b86a943db30dbf4d98f68df9ca8a9628d14d1591e817d90)]);\r\n        vk.gamma = Pairing.G2Point([uint256(0x011016e22ae045444f50fb80f246ec486c7e02af09132cd38c4fcf484983e4f2), uint256(0x00e83c788c2878d1d5eba3ed49b0d81e4c0487dedc3e4d1c2baab5833785b62f)], [uint256(0x05eb89e741ed5b5d611cebf92d1ed02cd6f3311089f0d400df7d9ced5a48fd41), uint256(0x132a90a3b0d369ccd66e2a5ba04a935e44d8ad5dca93a76bba592a578130a911)]);\r\n        vk.delta = Pairing.G2Point([uint256(0x065f6a3323a2abffd621fc263f348eb914904b68d5897729ae34a6b9d33f0852), uint256(0x0c3b60f59d3bd50328a04c0ff6d979199685d0526f89f6ac29d6174ce24707a2)], [uint256(0x26e7ebce2b44efef6b6315938e33f0a8ecc82dbad635c9efa681ed85bbb59982), uint256(0x12e0f3721230a0f38f6c9913048d5230fd2615ef3ff7f6ee4b20dfe0bdea1a86)]);\r\n        vk.gamma_abc = new Pairing.G1Point[](1);\r\n        vk.gamma_abc[0] = Pairing.G1Point(uint256(0x006f97c1a3e1873301c4acb063e0acdcc3aec5b0f624be4134c4bdad83e693f3), uint256(0x1dee313bdace7d662fd88440426fd38696a94307b0a6e1dbe387c818f323fed7));\r\n    }\r\n    function verify(uint[] memory input, Proof memory proof) internal view returns (uint) {\r\n        uint256 snark_scalar_field = 21888242871839275222246405745257275088548364400416034343698204186575808495617;\r\n        VerifyingKey memory vk = verifyingKey();\r\n        require(input.length + 1 == vk.gamma_abc.length);\r\n        // Compute the linear combination vk_x\r\n        Pairing.G1Point memory vk_x = Pairing.G1Point(0, 0);\r\n        for (uint i = 0; i < input.length; i++) {\r\n            require(input[i] < snark_scalar_field);\r\n            vk_x = Pairing.addition(vk_x, Pairing.scalar_mul(vk.gamma_abc[i + 1], input[i]));\r\n        }\r\n        vk_x = Pairing.addition(vk_x, vk.gamma_abc[0]);\r\n        if(!Pairing.pairingProd4(\r\n             proof.a, proof.b,\r\n             Pairing.negate(vk_x), vk.gamma,\r\n             Pairing.negate(proof.c), vk.delta,\r\n             Pairing.negate(vk.alpha), vk.beta)) return 1;\r\n        return 0;\r\n    }\r\n    function verifyTx(\r\n            uint[2] memory a,\r\n            uint[2][2] memory b,\r\n            uint[2] memory c\r\n        ) public view returns (bool r) {\r\n        Proof memory proof;\r\n        proof.a = Pairing.G1Point(a[0], a[1]);\r\n        proof.b = Pairing.G2Point([b[0][0], b[0][1]], [b[1][0], b[1][1]]);\r\n        proof.c = Pairing.G1Point(c[0], c[1]);\r\n        uint[] memory inputValues = new uint[](0);\r\n        \r\n        if (verify(inputValues, proof) == 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nObviously the vk would differ.\r\n\r\nThe problem comes when I try to call the verifyTx function on the SC executing on Nethermind:\r\n`call to Verifier.verifyTx errored: Error: Internal JSON-RPC error. { \"code\": -32015, \"message\": \"VM execution error.\", \"data\": \"BadInstruction\" }` \r\nThe genesis.json of the node is as following (the node is running spaceneth):\r\n```\r\n{\r\n\t\"name\": \"Spaceneth\",\r\n\t\"dataDir\": \"spaceneth\",\r\n\t\"engine\": {\r\n\t\t\"NethDev\": {\r\n\t\t\t\"params\": {\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\"params\": {\r\n\t\t\"gasLimitBoundDivisor\": \"0x400\",\r\n\t\t\"maximumExtraDataSize\": \"0x20\",\r\n\t\t\"minGasLimit\": \"0x1388\",\r\n\t\t\"networkID\": \"0x63\",\r\n\t\t\"eip140Transition\": \"0x0\",\r\n\t\t\"eip211Transition\": \"0x0\",\r\n\t\t\"eip214Transition\": \"0x0\",\r\n\t\t\"eip658Transition\": \"0x0\",\r\n\t\t\"eip145Transition\": \"0x0\",\r\n\t\t\"eip1014Transition\": \"0x0\",\r\n\t\t\"eip1052Transition\": \"0x0\",\r\n\t\t\"eip1283Transition\": \"0x0\",\r\n\t\t\"eip1344Transition\": \"0x0\",\r\n\t\t\"eip1706Transition\": \"0x0\",\r\n\t\t\"eip1884Transition\": \"0x0\",\r\n\t\t\"eip2028Transition\": \"0x0\"\r\n\t},\r\n\t\"genesis\": {\r\n\t\t\"seal\": {\r\n\t\t\t\"ethereum\": {\r\n\t\t\t\t\"nonce\": \"0x0000000000000042\",\r\n\t\t\t\t\"mixHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"difficulty\": \"0x01\",\r\n\t\t\"author\": \"0x0000000000000000000000000000000000000000\",\r\n\t\t\"timestamp\": \"0x00\",\r\n\t\t\"parentHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\r\n\t\t\"extraData\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\r\n\t\t\"gasLimit\": \"0x1000000\"\r\n\t},\r\n\t\"nodes\": [\r\n\t],\r\n\t\"accounts\": {\r\n\t\t\"0000000000000000000000000000000000000000\": { \"balance\": \"1\" },\r\n\t\t\"0000000000000000000000000000000000000001\": { \"balance\": \"1\", \"nonce\": \"0\", \"builtin\": { \"name\": \"ecrecover\", \"pricing\": { \"linear\": { \"base\": 3000, \"word\": 0 } } } },\r\n\t\t\"0000000000000000000000000000000000000002\": { \"balance\": \"1\", \"nonce\": \"0\", \"builtin\": { \"name\": \"sha256\", \"pricing\": { \"linear\": { \"base\": 60, \"word\": 12 } } } },\r\n\t\t\"0000000000000000000000000000000000000003\": { \"balance\": \"1\", \"nonce\": \"0\", \"builtin\": { \"name\": \"ripemd160\", \"pricing\": { \"linear\": { \"base\": 600, \"word\": 120 } } } },\r\n\t\t\"0000000000000000000000000000000000000004\": { \"balance\": \"1\", \"nonce\": \"0\", \"builtin\": { \"name\": \"identity\", \"pricing\": { \"linear\": { \"base\": 15, \"word\": 3 } } } },\r\n\t\t\"0000000000000000000000000000000000000005\": { \"balance\": \"1\", \"nonce\": \"0\", \"builtin\": { \"name\": \"modexp\", \"activate_at\": 1700000, \"pricing\": { \"modexp\": { \"divisor\": 20 } } } },\r\n\t\t\"0000000000000000000000000000000000000006\": { \"balance\": \"1\", \"nonce\": \"0\", \"builtin\": { \"name\": \"alt_bn128_add\", \"activate_at\": 1700000, \"pricing\": { \"linear\": { \"base\": 500, \"word\": 0 } } } },\r\n\t\t\"0000000000000000000000000000000000000007\": { \"balance\": \"1\", \"nonce\": \"0\", \"builtin\": { \"name\": \"alt_bn128_mul\", \"activate_at\": 1700000, \"pricing\": { \"linear\": { \"base\": 40000, \"word\": 0 } } } },\r\n\t\t\"0000000000000000000000000000000000000008\": { \"balance\": \"1\", \"nonce\": \"0\", \"builtin\": { \"name\": \"alt_bn128_pairing\", \"activate_at\": 1700000, \"pricing\": { \"alt_bn128_pairing\": { \"base\": 100000, \"pair\": 80000 } } } },\r\n\t\t\"0000000000000000000000000000000000000009\": { \"balance\": \"1\" },\r\n\t\t\"7e5f4552091a69125d5dfcb7b8c2659029395bdf\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"2b5ad5c4795c026514f8317c7a215e218dccd6cf\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"6813eb9362372eef6200f3b1dbc3f819671cba69\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"1eff47bc3a10a45d4b230b5d10e37751fe6aa718\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"e1ab8145f7e55dc933d51a18c793f901a3a0b276\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"e57bfe9f44b819898f47bf37e5af72a0783e1141\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"d41c057fd1c78805aac12b0a94a405c0461a6fbb\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"f1f6619b38a98d6de0800f1defc0a6399eb6d30c\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"f7edc8fa1ecc32967f827c9043fcae6ba73afa5c\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"4cceba2d7d2b4fdce4304d3e09a1fea9fbeb1528\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"b77AEC9f59f9D6F39793289a09AEa871932619Ed\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"0x5b34a61B7752245d8a4eF340de24eAf245aE7bE9\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1\": { \"balance\": \"1000000000000000000000000\" }\r\n\t}\r\n}\r\n\r\n```\r\nThe node configuration: \r\n```\r\n{\r\n    \"Init\": {\r\n        \"WebSocketsEnabled\": false,\r\n        \"StoreReceipts\" : true,\r\n        \"EnableUnsecuredDevWallet\": true,\r\n        \"IsMining\": true,\r\n        \"ChainSpecPath\": \"/config/genesis/spaceneth.json\",\r\n        \"BaseDbPath\": \"nethermind_db/spaceneth\",\r\n        \"LogFileName\": \"spaceneth.logs.txt\",\r\n        \"StaticNodesPath\": \"Data/static-nodes.json\"\r\n    },\r\n    \"Network\": {\r\n        \"DiscoveryPort\": 30300,\r\n        \"P2PPort\": 30300,\r\n        \"LocalIp\": \"10.5.0.2\",\r\n        \"ExternalIp\": \"10.5.0.2\"\r\n    },\r\n    \"JsonRpc\": {\r\n        \"Enabled\": true,\r\n        \"Host\": \"10.5.0.2\",\r\n        \"Port\": 8545\r\n    },\r\n    \"Baseline\": {\r\n        \"Enabled\": true\r\n    },\r\n}\r\n\r\n```\r\n\r\nThe weird thing is that Nethermind is the only node that keeps failing when trying to execute the verifyTx function, I've tried the same transaction with the same params and same SC on Besu and Ganache and it works fine on both of them.\r\n\r\nNarrowing down the problem, it seems to be related with the precompiled contracts (bn256add, bn256mul...), for some reason when doing a staticcall with 0x6 as the precompiled contract it fails with the error above.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/725600003",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-725600003",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 725600003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTYwMDAwMw==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-11T18:55:35Z",
    "updated_at": "2020-11-11T18:55:51Z",
    "author_association": "MEMBER",
    "body": "@Siyuue please use the latest spaceneth chainspec -> your version has no Istanbul enabled:\r\n\r\n```\r\n{\r\n\t\"name\": \"Spaceneth\",\r\n\t\"dataDir\": \"spaceneth\",\r\n\t\"engine\": {\r\n\t\t\"NethDev\": {\r\n\t\t\t\"params\": {\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\"params\": {\r\n\t\t\"gasLimitBoundDivisor\": \"0x0400\",\r\n\t\t\"accountStartNonce\": \"0x0\",\r\n\t\t\"maximumExtraDataSize\": \"0x20\",\r\n\t\t\"minGasLimit\": \"0x1388\",\r\n\t\t\"networkID\" : \"0x63\",\r\n\t\t\"eip140Transition\": \"0x0\",\r\n\t\t\"eip145Transition\": \"0x0\",\r\n\t\t\"eip150Transition\": \"0x0\",\r\n\t\t\"eip155Transition\": \"0x0\",\r\n\t\t\"eip160Transition\": \"0x0\",\r\n\t\t\"eip161abcTransition\": \"0x0\",\r\n\t\t\"eip161dTransition\": \"0x0\",\r\n\t\t\"eip211Transition\": \"0x0\",\r\n\t\t\"eip214Transition\": \"0x0\",\r\n\t\t\"eip658Transition\": \"0x0\",\r\n\t\t\"eip1014Transition\": \"0x0\",\r\n\t\t\"eip1052Transition\": \"0x0\",\r\n\t\t\"eip1283Transition\": \"0x0\",\r\n\t\t\"eip1283DisableTransition\": \"0x0\",\r\n\t\t\"eip152Transition\": \"0x0\",\r\n\t\t\"eip1108Transition\": \"0x0\",\r\n\t\t\"eip1344Transition\": \"0x0\",\r\n\t\t\"eip1884Transition\": \"0x0\",\r\n\t\t\"eip2028Transition\": \"0x0\",\r\n\t\t\"eip2200Transition\": \"0x0\"\r\n\t},\r\n\t\"genesis\": {\r\n\t\t\"seal\": {\r\n\t\t\t\"ethereum\": {\r\n\t\t\t\t\"nonce\": \"0x0000000000000042\",\r\n\t\t\t\t\"mixHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"difficulty\": \"0x01\",\r\n\t\t\"author\": \"0x0000000000000000000000000000000000000000\",\r\n\t\t\"timestamp\": \"0x00\",\r\n\t\t\"parentHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\r\n\t\t\"extraData\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\r\n\t\t\"gasLimit\": \"0x1000000\"\r\n\t},\r\n\t\"nodes\": [\r\n\t],\r\n\t\"accounts\": {\r\n\t\t\"0000000000000000000000000000000000000000\": { \"balance\": \"1\" },\r\n\t\t\"0000000000000000000000000000000000000001\": { \"balance\": \"1\", \"nonce\": \"0\", \"builtin\": { \"name\": \"ecrecover\", \"pricing\": { \"linear\": { \"base\": 3000, \"word\": 0 } } } },\r\n\t\t\"0000000000000000000000000000000000000002\": { \"balance\": \"1\", \"nonce\": \"0\", \"builtin\": { \"name\": \"sha256\", \"pricing\": { \"linear\": { \"base\": 60, \"word\": 12 } } } },\r\n\t\t\"0000000000000000000000000000000000000003\": { \"balance\": \"1\", \"nonce\": \"0\", \"builtin\": { \"name\": \"ripemd160\", \"pricing\": { \"linear\": { \"base\": 600, \"word\": 120 } } } },\r\n\t\t\"0000000000000000000000000000000000000004\": { \"balance\": \"1\", \"nonce\": \"0\", \"builtin\": { \"name\": \"identity\", \"pricing\": { \"linear\": { \"base\": 15, \"word\": 3 } } } },\r\n\t\t\"0000000000000000000000000000000000000005\": { \"balance\": \"1\", \"nonce\": \"0\", \"builtin\": { \"name\": \"modexp\", \"activate_at\": 1700000, \"pricing\": { \"modexp\": { \"divisor\": 20 } } } },\r\n\t\t\"0000000000000000000000000000000000000006\": { \"balance\": \"1\", \"nonce\": \"0\", \"builtin\": { \"name\": \"alt_bn128_add\", \"activate_at\": 1700000, \"pricing\": { \"linear\": { \"base\": 500, \"word\": 0 } } } },\r\n\t\t\"0000000000000000000000000000000000000007\": { \"balance\": \"1\", \"nonce\": \"0\", \"builtin\": { \"name\": \"alt_bn128_mul\", \"activate_at\": 1700000, \"pricing\": { \"linear\": { \"base\": 40000, \"word\": 0 } } } },\r\n\t\t\"0000000000000000000000000000000000000008\": { \"balance\": \"1\", \"nonce\": \"0\", \"builtin\": { \"name\": \"alt_bn128_pairing\", \"activate_at\": 1700000, \"pricing\": { \"alt_bn128_pairing\": { \"base\": 100000, \"pair\": 80000 } } } },\r\n\t\t\"0000000000000000000000000000000000000009\": { \"balance\": \"1\" },\r\n\t\t\"7e5f4552091a69125d5dfcb7b8c2659029395bdf\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"2b5ad5c4795c026514f8317c7a215e218dccd6cf\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"6813eb9362372eef6200f3b1dbc3f819671cba69\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"1eff47bc3a10a45d4b230b5d10e37751fe6aa718\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"e1ab8145f7e55dc933d51a18c793f901a3a0b276\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"e57bfe9f44b819898f47bf37e5af72a0783e1141\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"d41c057fd1c78805aac12b0a94a405c0461a6fbb\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"f1f6619b38a98d6de0800f1defc0a6399eb6d30c\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"f7edc8fa1ecc32967f827c9043fcae6ba73afa5c\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"4cceba2d7d2b4fdce4304d3e09a1fea9fbeb1528\": { \"balance\": \"1000000000000000000000000\" },\r\n\t\t\"b77AEC9f59f9D6F39793289a09AEa871932619Ed\": { \"balance\": \"1000000000000000000000000\" }\r\n\t}\r\n}\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/725600003/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/725948885",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-725948885",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 725948885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTk0ODg4NQ==",
    "user": {
      "login": "rafagalan",
      "id": 71089247,
      "node_id": "MDQ6VXNlcjcxMDg5MjQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/71089247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafagalan",
      "html_url": "https://github.com/rafagalan",
      "followers_url": "https://api.github.com/users/rafagalan/followers",
      "following_url": "https://api.github.com/users/rafagalan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafagalan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafagalan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafagalan/subscriptions",
      "organizations_url": "https://api.github.com/users/rafagalan/orgs",
      "repos_url": "https://api.github.com/users/rafagalan/repos",
      "events_url": "https://api.github.com/users/rafagalan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafagalan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-12T09:13:42Z",
    "updated_at": "2020-11-12T09:13:42Z",
    "author_association": "NONE",
    "body": "Thanks for the answer but unfortunately that didn't work, I found this on the documentation page of Nethermind:\r\n\r\n![image](https://user-images.githubusercontent.com/71089247/98919107-bc8aad80-24ce-11eb-8dd6-641ee0c7ebd7.png)\r\n\r\nDoes this has anything to do with the issue? Btw ecrecover does work",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/725948885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/725953615",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-725953615",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 725953615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTk1MzYxNQ==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-12T09:21:55Z",
    "updated_at": "2020-11-12T09:21:55Z",
    "author_association": "MEMBER",
    "body": "can you call debug.trace on it?\r\n\r\nBadInstruction is not related to precompiles -> this can only be a thing like SHL, SHR, CHAINID, and so on.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/725953615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/725954980",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-725954980",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 725954980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTk1NDk4MA==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-12T09:24:20Z",
    "updated_at": "2020-11-12T09:24:20Z",
    "author_association": "MEMBER",
    "body": "@Siyuue I plan to work on it from 10am UTC today and hope to get it solved by 11:30 UTC.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/725954980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/725987423",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-725987423",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 725987423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTk4NzQyMw==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-12T10:24:10Z",
    "updated_at": "2020-11-12T10:24:10Z",
    "author_association": "MEMBER",
    "body": "on it",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/725987423/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/726024556",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-726024556",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 726024556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjAyNDU1Ng==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-12T11:37:18Z",
    "updated_at": "2020-11-12T11:37:18Z",
    "author_association": "MEMBER",
    "body": "delayed, distractions\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/726024556/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/726046125",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-726046125",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 726046125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjA0NjEyNQ==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-12T12:24:34Z",
    "updated_at": "2020-11-12T12:24:34Z",
    "author_association": "MEMBER",
    "body": "can't get BadInstruction so far but did not compile your code yet, tried various opcodes so far and checked registered precompiles",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/726046125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/726054851",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-726054851",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 726054851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjA1NDg1MQ==",
    "user": {
      "login": "rafagalan",
      "id": 71089247,
      "node_id": "MDQ6VXNlcjcxMDg5MjQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/71089247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafagalan",
      "html_url": "https://github.com/rafagalan",
      "followers_url": "https://api.github.com/users/rafagalan/followers",
      "following_url": "https://api.github.com/users/rafagalan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafagalan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafagalan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafagalan/subscriptions",
      "organizations_url": "https://api.github.com/users/rafagalan/orgs",
      "repos_url": "https://api.github.com/users/rafagalan/repos",
      "events_url": "https://api.github.com/users/rafagalan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafagalan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-12T12:43:07Z",
    "updated_at": "2020-11-12T12:43:07Z",
    "author_association": "NONE",
    "body": "I'm using the node within a docker container (the official docker). maybe the docker version ships with a not-so-current version of the node?",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/726054851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/726082217",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-726082217",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 726082217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjA4MjIxNw==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-12T13:37:13Z",
    "updated_at": "2020-11-12T13:37:13Z",
    "author_association": "MEMBER",
    "body": "@Siyuue I have deployed the compiled code and retrieved the bytecode\r\nThe contract uses the (FE - INVALID) instruction which may be invoked in many different paths.\r\n\r\nIf there is no critical data in your transaction flow then this would help to solve the issue:\r\n\r\n1) send the transaction to the chain and then call debug_traceTransaction(txHash, {}) and send the result\r\n\r\nor simply send us the exact parameters that you invoke and I can do the same (you can send the rpc call or javascript code that invokes it)",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/726082217/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/727857708",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-727857708",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 727857708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNzg1NzcwOA==",
    "user": {
      "login": "rafagalan",
      "id": 71089247,
      "node_id": "MDQ6VXNlcjcxMDg5MjQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/71089247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafagalan",
      "html_url": "https://github.com/rafagalan",
      "followers_url": "https://api.github.com/users/rafagalan/followers",
      "following_url": "https://api.github.com/users/rafagalan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafagalan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafagalan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafagalan/subscriptions",
      "organizations_url": "https://api.github.com/users/rafagalan/orgs",
      "repos_url": "https://api.github.com/users/rafagalan/repos",
      "events_url": "https://api.github.com/users/rafagalan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafagalan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-16T09:34:15Z",
    "updated_at": "2020-11-16T09:34:15Z",
    "author_association": "NONE",
    "body": "The transaction has this params:\r\n a: [\"0x2edb1888c01439f762471cdf5a0fb4f71786f9347660e6a39f254809650c3553\",\"0x2b4d042cb6dde24d931d4fcc2d424e054455a8543188fb6a2565cb951c95881a\"],\r\n b: [[\"0x1ed159719f81d5640c70b906c94b4c2c488c6386352c70c23305339a6952380b\",\"0x036b2e8ec0991b7ef64863fc1ed14b019d39eed9dd926a147e0d0dd70c0e61d8\"],[\"0x2925b646d1a5181b29702eb22e0414b3b4963113707215d0376b549bc737abe0\",\"0x2bee9a523e0f4dfb317d5d44d7d85c7fe56a5481008f4b8d595d25e472a8abf1\"]],\r\n c: [\"0x05a4b562005f760fe8128e0528ab1ceaa983109d32a81f8815bbf14fd6f53db0\",\"0x18079340228d431e0f6eac1506ea469fc09c9d4b7ea21b5193bda089db887a82\"]\r\n\r\nAnd these are the logs of the node:\r\n![image](https://user-images.githubusercontent.com/71089247/99234516-e99fce80-27f4-11eb-8cd9-f25cd2b3b946.png)\r\n\r\nResult of calling debug_traceTransaction is this (quite long):\r\nhttps://file.io/DySPfu1oBIfx (github won't let me paste it here, I've also tried web were I can upload a snippet, but its too long)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/727857708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728751456",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-728751456",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 728751456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyODc1MTQ1Ng==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T07:51:40Z",
    "updated_at": "2020-11-17T07:51:40Z",
    "author_association": "MEMBER",
    "body": "thank you @Siyuue !",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728751456/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728799587",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-728799587",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 728799587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyODc5OTU4Nw==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T09:21:21Z",
    "updated_at": "2020-11-17T09:21:21Z",
    "author_association": "MEMBER",
    "body": "[Uploading Nethermind Issue 2449.txt…]()\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728799587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728806818",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-728806818",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 728806818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyODgwNjgxOA==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T09:34:14Z",
    "updated_at": "2020-11-17T09:34:14Z",
    "author_association": "MEMBER",
    "body": "@Siyuue you mentioned before the BadInstruction error. Did it disappear after you updated the config? I can see the node is returning REVERT instruction results now. (in the screenshot and the trace file)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728806818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728875988",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-728875988",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 728875988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyODg3NTk4OA==",
    "user": {
      "login": "rafagalan",
      "id": 71089247,
      "node_id": "MDQ6VXNlcjcxMDg5MjQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/71089247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafagalan",
      "html_url": "https://github.com/rafagalan",
      "followers_url": "https://api.github.com/users/rafagalan/followers",
      "following_url": "https://api.github.com/users/rafagalan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafagalan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafagalan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafagalan/subscriptions",
      "organizations_url": "https://api.github.com/users/rafagalan/orgs",
      "repos_url": "https://api.github.com/users/rafagalan/repos",
      "events_url": "https://api.github.com/users/rafagalan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafagalan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T11:49:22Z",
    "updated_at": "2020-11-17T11:49:22Z",
    "author_association": "NONE",
    "body": "My bad, the shield contracts was pointing to a mocked verifier, but it seems to be reverting when its pointing to be verifier above for some reason now.\r\n\r\nNode.js:\r\n```\r\nCall createPO sent to contract Shield @ 0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B\r\n{\r\n  revertReason: Error: Returned error: VM execution error.\r\n      at Object.ErrorResponse (/code/node_modules/web3-core-helpers/lib/errors.js:28:19)\r\n      at /code/node_modules/web3-core-requestmanager/lib/index.js:288:36\r\n      at XMLHttpRequest.request.onreadystatechange (/code/node_modules/web3-providers-http/lib/index.js:98:13)\r\n      at XMLHttpRequestEventTarget.dispatchEvent (/code/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:22)\r\n      at XMLHttpRequest._setReadyState (/code/node_modules/xhr2-cookies/dist/xml-http-request.js:208:14)\r\n      at XMLHttpRequest._onHttpResponseEnd (/code/node_modules/xhr2-cookies/dist/xml-http-request.js:318:14)\r\n      at IncomingMessage.<anonymous> (/code/node_modules/xhr2-cookies/dist/xml-http-request.js:289:61)\r\n      at IncomingMessage.emit (events.js:326:22)\r\n      at endReadableNT (_stream_readable.js:1223:12)\r\n      at processTicksAndRejections (internal/process/task_queues.js:84:21) {\r\n    data: 'revert'\r\n  }\r\n}\r\n```\r\nNethermind:\r\n```\r\nError when handling ID 4, eth_call({\r\n  \"from\": \"0x7e5f4552091a69125d5dfcb7b8c2659029395bdf\",\r\n  \"data\": \"0x114fdd5c2edb1888c01439f762471cdf5a0fb4f71786f9347660e6a39f254809650c35532b4d042cb6dde24d931d4fcc2d424e054455a8543188fb6a2565cb951c95881a1ed159719f81d5640c70b906c94b4c2c488c6386352c70c23305339a6952380b036b2e8ec0991b7ef64863fc1ed14b019d39eed9dd926a147e0d0dd70c0e61d82925b646d1a5181b29702eb22e0414b3b4963113707215d0376b549bc737abe02bee9a523e0f4dfb317d5d44d7d85c7fe56a5481008f4b8d595d25e472a8abf105a4b562005f760fe8128e0528ab1ceaa983109d32a81f8815bbf14fd6f53db018079340228d431e0f6eac1506ea469fc09c9d4b7ea21b5193bda089db887a829f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08\",\r\n  \"to\": \"0x254dffcd3277c0b1660f6d42efbb754edababc2b\"\r\n},latest) | {\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32015,\"message\":\"VM execution error.\",\"data\":\"revert\"},\"id\":4} \r\n```\r\n\r\nThe problems comes when the smart contracts calls the addition function on elliptic curves. The function should return \"1\" (every other node does this), but instead it is returning a \"0\". The weird thing is not that the node reverts the function, the weird thing is that it does so when every other node executed the function call correctly.\r\n\r\n```\r\nassembly {\r\n            success := staticcall(sub(gas(), 2000), 6, input, 0xc0, r, 0x60)\r\n            // Use \"invalid\" to make gas estimation work\r\n            switch success case 0 { invalid() }\r\n        }\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728875988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728897073",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-728897073",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 728897073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyODg5NzA3Mw==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T12:32:31Z",
    "updated_at": "2020-11-17T12:32:31Z",
    "author_association": "MEMBER",
    "body": "let me check",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728897073/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728905140",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-728905140",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 728905140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyODkwNTE0MA==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T12:47:33Z",
    "updated_at": "2020-11-17T12:47:33Z",
    "author_association": "MEMBER",
    "body": "in progress:\r\n\r\n![image](https://user-images.githubusercontent.com/498913/99392082-0dd1dd00-28d3-11eb-9db3-e80307725657.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728905140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728927659",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-728927659",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 728927659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyODkyNzY1OQ==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T13:30:07Z",
    "updated_at": "2020-11-17T13:30:07Z",
    "author_association": "MEMBER",
    "body": "hmmmmm, it returns true for me:\r\n\r\nwhat I did:\r\n\r\n1) launched spaceneth (empty)\r\n2) deployed your Verifier.sol contract\r\n3) issued a call (notice I changed the first four bytes of data to replace the shield contract signature with the verifier verifyTx signature):\r\neth.call({\"from\" : \"0x7e5f4552091a69125d5dfcb7b8c2659029395bdf\", \"to\" : \"0xDe09E74d4888Bc4e65F589e8c13Bce9F71DdF4c7\", \"data\" : \"0xe076d68c2edb1888c01439f762471cdf5a0fb4f71786f9347660e6a39f254809650c35532b4d042cb6dde24d931d4fcc2d424e054455a8543188fb6a2565cb951c95881a1ed159719f81d5640c70b906c94b4c2c488c6386352c70c23305339a6952380b036b2e8ec0991b7ef64863fc1ed14b019d39eed9dd926a147e0d0dd70c0e61d82925b646d1a5181b29702eb22e0414b3b4963113707215d0376b549bc737abe02bee9a523e0f4dfb317d5d44d7d85c7fe56a5481008f4b8d595d25e472a8abf105a4b562005f760fe8128e0528ab1ceaa983109d32a81f8815bbf14fd6f53db018079340228d431e0f6eac1506ea469fc09c9d4b7ea21b5193bda089db887a829f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08\", \"Gas\": 1000000})\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728927659/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728927818",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-728927818",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 728927818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyODkyNzgxOA==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T13:30:23Z",
    "updated_at": "2020-11-17T13:31:38Z",
    "author_association": "MEMBER",
    "body": "Let me try it from empty database, repeating the steps above\r\n\r\nPS C:\\src\\investigation> truffle deploy --network spaceneth\r\n\r\nCompiling your contracts...\r\n===========================\r\n> Everything is up to date, there is nothing to compile.\r\n\r\n\r\n\r\nMigrations dry-run (simulation)        \r\n===============================        \r\n> Network name:    'spaceneth-fork'    \r\n> Network id:      99\r\n> Block gas limit: 16777216 (0x1000000)\r\n\r\n\r\n1_initial_migration.js\r\n======================\r\n\r\n   Replacing 'Migrations'\r\n   ----------------------\r\n   > block number:        2\r\n   > block timestamp:     1605619872\r\n   > account:             0x7E5F4552091A69125d5DfCb7b8C2659029395Bdf\r\n   > balance:             999999.999615682\r\n   > gas used:            192159 (0x2ee9f)\r\n   > gas price:           2 gwei\r\n   > value sent:          0 ETH\r\n   > total cost:          0.000384318 ETH\r\n\r\n   -------------------------------------\r\n   > Total cost:         0.000384318 ETH\r\n\r\n\r\n2_verifier.js\r\n=============\r\n\r\n   Replacing 'Verifier'\r\n   --------------------\r\n   > block number:        4\r\n   > block timestamp:     1605619874\r\n   > account:             0x7E5F4552091A69125d5DfCb7b8C2659029395Bdf\r\n   > balance:             999999.997752284\r\n   > gas used:            889361 (0xd9211)\r\n   > gas price:           2 gwei\r\n   > value sent:          0 ETH\r\n   > total cost:          0.001778722 ETH\r\n\r\n   -------------------------------------\r\n   > Total cost:         0.001778722 ETH\r\n\r\n\r\nSummary\r\n=======\r\n> Total deployments:   2\r\n> Final cost:          0.00216304 ETH\r\n\r\n\r\n\r\n\r\n\r\nStarting migrations...\r\n======================\r\n> Network name:    'spaceneth'\r\n> Network id:      99\r\n> Block gas limit: 16777216 (0x1000000)\r\n\r\n\r\n1_initial_migration.js\r\n======================\r\n\r\n   Replacing 'Migrations'\r\n   ----------------------\r\n   > transaction hash:    0x560b2ec45b8bd496a5eec6f8db3f56ee60854a09e764fde57daeb87da1db472c\r\n   > Blocks: 0            Seconds: 0\r\n   > contract address:    0xF2E246BB76DF876Cef8b38ae84130F4F55De395b\r\n   > block number:        1\r\n   > block timestamp:     1605619875\r\n   > account:             0x7E5F4552091A69125d5DfCb7b8C2659029395Bdf\r\n   > balance:             999999.99615682\r\n   > gas used:            192159 (0x2ee9f)\r\n   > gas price:           20 gwei\r\n   > value sent:          0 ETH\r\n   > total cost:          0.00384318 ETH\r\n\r\n\r\n   > Saving migration to chain.\r\n   > Saving artifacts\r\n   -------------------------------------\r\n   > Total cost:          0.00384318 ETH\r\n\r\n\r\n2_verifier.js\r\n=============\r\n\r\n   Replacing 'Verifier'\r\n   --------------------\r\n   > transaction hash:    0xb38a40feb3c4aa592b7c7f988c38bffb23bac96aa6c07fc9514561633f17297e\r\n   > Blocks: 0            Seconds: 0\r\n   > contract address:    0xDe09E74d4888Bc4e65F589e8c13Bce9F71DdF4c7\r\n   > block number:        5\r\n   > block timestamp:     1605619879\r\n   > account:             0x7E5F4552091A69125d5DfCb7b8C2659029395Bdf\r\n   > balance:             999999.97752284\r\n   > gas used:            889361 (0xd9211)\r\n   > gas price:           20 gwei\r\n   > value sent:          0 ETH\r\n   > total cost:          0.01778722 ETH\r\n\r\n\r\n   > Saving migration to chain.\r\n   > Saving artifacts\r\n   -------------------------------------\r\n   > Total cost:          0.01778722 ETH\r\n\r\n\r\nSummary\r\n=======\r\n> Total deployments:   2\r\n> Final cost:          0.0216304 ETH\r\n\r\n\r\n\r\nPS C:\\src\\investigation> ",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728927818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728928918",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-728928918",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 728928918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyODkyODkxOA==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T13:32:15Z",
    "updated_at": "2020-11-17T13:32:15Z",
    "author_association": "MEMBER",
    "body": "![image](https://user-images.githubusercontent.com/498913/99396143-4aa0d280-28d9-11eb-9929-a28e072ef005.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728928918/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728929556",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-728929556",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 728929556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyODkyOTU1Ng==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T13:33:20Z",
    "updated_at": "2020-11-17T13:33:20Z",
    "author_association": "MEMBER",
    "body": "notice contract address as deployed in the previous step (0xDe09E74d4888Bc4e65F589e8c13Bce9F71DdF4c7) and data with changed ABI signature to: e076d68c\r\n\r\nnethermind> eth.call({\"from\" : \"0x7e5f4552091a69125d5dfcb7b8c2659029395bdf\", \"to\" : \"0xDe09E74d4888Bc4e65F589e8c13Bce9F71DdF4c7\", \"data\" : \"0xe076d68c2edb1888c01439f762471cdf5a0fb4f71786f9347660e6a39f254809650c35532b4d042cb6dde24d931d4fcc2d424e054455a8543188fb6a2565cb951c95881a1ed159719f81d5640c70b906c94b4c2c488c6386352c70c23305339a6952380b036b2e8ec0991b7ef64863fc1ed14b019d39eed9dd926a147e0d0dd70c0e61d82925b646d1a5181b29702eb22e0414b3b4963113707215d0376b549bc737abe02bee9a523e0f4dfb317d5d44d7d85c7fe56a5481008f4b8d595d25e472a8abf105a4b562005f760fe8128e0528ab1ceaa983109d32a81f8815bbf14fd6f53db018079340228d431e0f6eac1506ea469fc09c9d4b7ea21b5193bda089db887a829f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08\", \"Gas\": 1000000})\r\nRequest complete in 2102128.7µs\r\n\"0x0000000000000000000000000000000000000000000000000000000000000001\"",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728929556/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728930014",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-728930014",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 728930014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyODkzMDAxNA==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T13:34:10Z",
    "updated_at": "2020-11-17T13:35:13Z",
    "author_association": "MEMBER",
    "body": "@Siyuue I think it is very unlikely that the verifyTx would return 1 for me if I called anything nonsensical\r\n\r\nWould you please provide step by step all the code used and actions taken both in Ganache and in Nethermind? That would be very helpful.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728930014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728941527",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-728941527",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 728941527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyODk0MTUyNw==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T13:52:17Z",
    "updated_at": "2020-11-17T13:52:17Z",
    "author_association": "MEMBER",
    "body": "@Siyuue - in your trace there is no STATICCALL\r\nAlso the REVERT in your trace is cause by the wrong method siganutre - it seems that you are calling a wrong contract address:\r\n\r\n![image](https://user-images.githubusercontent.com/498913/99398259-17ac0e00-28dc-11eb-838f-9e8b987d7dcd.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/728941527/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/729015146",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-729015146",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 729015146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTAxNTE0Ng==",
    "user": {
      "login": "rafagalan",
      "id": 71089247,
      "node_id": "MDQ6VXNlcjcxMDg5MjQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/71089247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafagalan",
      "html_url": "https://github.com/rafagalan",
      "followers_url": "https://api.github.com/users/rafagalan/followers",
      "following_url": "https://api.github.com/users/rafagalan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafagalan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafagalan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafagalan/subscriptions",
      "organizations_url": "https://api.github.com/users/rafagalan/orgs",
      "repos_url": "https://api.github.com/users/rafagalan/repos",
      "events_url": "https://api.github.com/users/rafagalan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafagalan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T15:43:55Z",
    "updated_at": "2020-11-17T15:43:55Z",
    "author_association": "NONE",
    "body": "Yep, the trace is from a call to a mocked verifier as I said a couple comments above, my bad.\r\n\r\nHere's what we are doing (interaction with remix & deployment on truffle) :\r\n```\r\nMigrations dry-run (simulation)\r\n===============================\r\n> Network name:    'development-fork'\r\n> Network id:      99\r\n> Block gas limit: 16777216 (0x1000000)\r\n\r\n\r\n1_shield_migration.js\r\n=====================\r\n\r\n   Replacing 'Verifier'\r\n   --------------------\r\n   > block number:        2\r\n   > block timestamp:     1605627245\r\n   > account:             0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1\r\n   > balance:             999999.998182886\r\n   > gas used:            908557 (0xddd0d)\r\n   > gas price:           2 gwei\r\n   > value sent:          0 ETH\r\n   > total cost:          0.001817114 ETH\r\n\r\n\r\n   Replacing 'Shield'\r\n   ------------------\r\n   > block number:        3\r\n   > block timestamp:     1605627246\r\n   > account:             0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1\r\n   > balance:             999999.996353044\r\n   > gas used:            914921 (0xdf5e9)\r\n   > gas price:           2 gwei\r\n   > value sent:          0 ETH\r\n   > total cost:          0.001829842 ETH\r\n\r\n   -------------------------------------\r\n   > Total cost:         0.003646956 ETH\r\n\r\n\r\nSummary\r\n=======\r\n> Total deployments:   2\r\n> Final cost:          0.003646956 ETH\r\n\r\n\r\nStarting migrations...\r\n======================\r\n> Network name:    'development'\r\n> Network id:      99\r\n> Block gas limit: 16777216 (0x1000000)\r\n\r\n\r\n1_shield_migration.js\r\n=====================\r\n\r\n   Replacing 'Verifier'\r\n   --------------------\r\n   > transaction hash:    0xb5be01d804a5c0c987137f9e08f3da8732611eee6a7677e1de08873069e2fa9a\r\n   > Blocks: 0            Seconds: 0\r\n   > contract address:    0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab\r\n   > block number:        1\r\n   > block timestamp:     1605627248\r\n   > account:             0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1\r\n   > balance:             999999.98182886\r\n   > gas used:            908557 (0xddd0d)\r\n   > gas price:           20 gwei\r\n   > value sent:          0 ETH\r\n   > total cost:          0.01817114 ETH\r\n\r\n\r\n   Replacing 'Shield'\r\n   ------------------\r\n   > transaction hash:    0x08c0fdf5952ba627982a99cb097724caadbc222729e23b65a5a9435f4b953af4\r\n   > Blocks: 0            Seconds: 0\r\n   > contract address:    0x5b1869D9A4C187F2EAa108f3062412ecf0526b24\r\n   > block number:        2\r\n   > block timestamp:     1605627249\r\n   > account:             0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1\r\n   > balance:             999999.96353044\r\n   > gas used:            914921 (0xdf5e9)\r\n   > gas price:           20 gwei\r\n   > value sent:          0 ETH\r\n   > total cost:          0.01829842 ETH\r\n\r\n   > Saving artifacts\r\n   -------------------------------------\r\n   > Total cost:          0.03646956 ETH\r\n\r\n\r\nSummary\r\n=======\r\n> Total deployments:   2\r\n> Final cost:          0.03646956 ETH\r\n\r\n```\r\n\r\nAnd these are the node logs from the transaction with the params previously mentioned:\r\n\r\n```\r\n2020-11-17 15:35:42.4560|Executing JSON RPC call eth_call with params {\r\n  \"from\": \"0x90f8bf6a479f320ead074411a4b0e7944ea8c9c1\",\r\n  \"to\": \"0xe78a0f7e598cc8b0bb87894b0f60dd2a88d6a8ab\",\r\n  \"data\": \"0xe076d68c2edb1888c01439f762471cdf5a0fb4f71786f9347660e6a39f254809650c35532b4d042cb6dde24d931d4fcc2d424e054455a8543188fb6a2565cb951c95881a1ed159719f81d5640c70b906c94b4c2c488c6386352c70c23305339a6952380b036b2e8ec0991b7ef64863fc1ed14b019d39eed9dd926a147e0d0dd70c0e61d82925b646d1a5181b29702eb22e0414b3b4963113707215d0376b549bc737abe02bee9a523e0f4dfb317d5d44d7d85c7fe56a5481008f4b8d595d25e472a8abf105a4b562005f760fe8128e0528ab1ceaa983109d32a81f8815bbf14fd6f53db018079340228d431e0f6eac1506ea469fc09c9d4b7ea21b5193bda089db887a82\",\r\n  \"value\": \"0x0\",\r\n  \"gas\": \"0x2dc6c0\"\r\n},0x2 \r\n2020-11-17 15:35:42.4724|Executing JSON RPC call net_version with params  \r\n2020-11-17 15:35:42.5570|Error when handling ID 3529752737, eth_call({\r\n  \"from\": \"0x90f8bf6a479f320ead074411a4b0e7944ea8c9c1\",\r\n  \"to\": \"0xe78a0f7e598cc8b0bb87894b0f60dd2a88d6a8ab\",\r\n  \"data\": \"0xe076d68c2edb1888c01439f762471cdf5a0fb4f71786f9347660e6a39f254809650c35532b4d042cb6dde24d931d4fcc2d424e054455a8543188fb6a2565cb951c95881a1ed159719f81d5640c70b906c94b4c2c488c6386352c70c23305339a6952380b036b2e8ec0991b7ef64863fc1ed14b019d39eed9dd926a147e0d0dd70c0e61d82925b646d1a5181b29702eb22e0414b3b4963113707215d0376b549bc737abe02bee9a523e0f4dfb317d5d44d7d85c7fe56a5481008f4b8d595d25e472a8abf105a4b562005f760fe8128e0528ab1ceaa983109d32a81f8815bbf14fd6f53db018079340228d431e0f6eac1506ea469fc09c9d4b7ea21b5193bda089db887a82\",\r\n  \"value\": \"0x0\",\r\n  \"gas\": \"0x2dc6c0\"\r\n},0x2) | {\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32015,\"message\":\"VM execution error.\",\"data\":\"BadInstruction\"},\"id\":3529752737} \r\n```\r\nAnd this is the respone we get from remix:\r\n```\r\ncall to Verifier.verifyTx\r\ncall to Verifier.verifyTx errored: Error: Internal JSON-RPC error. { \"code\": -32015, \"message\": \"VM execution error.\", \"data\": \"BadInstruction\" }\r\n```\r\n\r\nThe same transaction was successfully executed on the JavaScriptVM.\r\nWe already tried to do the same with the genesis.json that you gave us but keeps failing.\r\n\r\nI'm afraid that i cannot give you any trace of the execution since the node doesn't even store the transaction (not even the receipt).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/729015146/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/729037246",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-729037246",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 729037246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTAzNzI0Ng==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T16:18:03Z",
    "updated_at": "2020-11-17T16:18:03Z",
    "author_association": "MEMBER",
    "body": "Are you using the standard Shield contract? (can you confirm the sol code of the shield so I can deplot the same code).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/729037246/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/729040011",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-729040011",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 729040011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTA0MDAxMQ==",
    "user": {
      "login": "rafagalan",
      "id": 71089247,
      "node_id": "MDQ6VXNlcjcxMDg5MjQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/71089247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafagalan",
      "html_url": "https://github.com/rafagalan",
      "followers_url": "https://api.github.com/users/rafagalan/followers",
      "following_url": "https://api.github.com/users/rafagalan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafagalan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafagalan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafagalan/subscriptions",
      "organizations_url": "https://api.github.com/users/rafagalan/orgs",
      "repos_url": "https://api.github.com/users/rafagalan/repos",
      "events_url": "https://api.github.com/users/rafagalan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafagalan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T16:22:35Z",
    "updated_at": "2020-11-17T16:23:49Z",
    "author_association": "NONE",
    "body": "No, I'm not using any Shield contract (calling the verifier directly) since the thing that does not work is the verifier (I'd like to solve that first). The verifier is automatically generated by Zokrates from a circuit.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/729040011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/729537834",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-729537834",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 729537834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTUzNzgzNA==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-18T09:02:32Z",
    "updated_at": "2020-11-18T09:02:32Z",
    "author_association": "MEMBER",
    "body": "![image](https://user-images.githubusercontent.com/498913/99508673-c6a02680-297c-11eb-842f-cf07d133497b.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/729537834/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/729541008",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-729541008",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 729541008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTU0MTAwOA==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-18T09:08:30Z",
    "updated_at": "2020-11-18T09:08:30Z",
    "author_association": "MEMBER",
    "body": "You can possibly send the output of this:\r\ntrace.call({\"from\" : \"0x7e5f4552091a69125d5dfcb7b8c2659029395bdf\", \"to\" : \"[YOUR_CONTRACT_ADDRESS]\", \"data\" : \"0xe076d68c2edb1888c01439f762471cdf5a0fb4f71786f9347660e6a39f254809650c35532b4d042cb6dde24d931d4fcc2d424e054455a8543188fb6a2565cb951c95881a1ed159719f81d5640c70b906c94b4c2c488c6386352c70c23305339a6952380b036b2e8ec0991b7ef64863fc1ed14b019d39eed9dd926a147e0d0dd70c0e61d82925b646d1a5181b29702eb22e0414b3b4963113707215d0376b549bc737abe02bee9a523e0f4dfb317d5d44d7d85c7fe56a5481008f4b8d595d25e472a8abf105a4b562005f760fe8128e0528ab1ceaa983109d32a81f8815bbf14fd6f53db018079340228d431e0f6eac1506ea469fc09c9d4b7ea21b5193bda089db887a82\", \"gas\": 3000000}, [\"vmTrace\"], \"latest\")",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/729541008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/729542478",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-729542478",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 729542478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTU0MjQ3OA==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-18T09:11:14Z",
    "updated_at": "2020-11-18T09:11:14Z",
    "author_association": "MEMBER",
    "body": "Only when I replace some bytes with I can get a Revert but never BadInstruction:\r\n\r\n![image](https://user-images.githubusercontent.com/498913/99509688-01568e80-297e-11eb-8d4e-054271357adb.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/729542478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/729542588",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-729542588",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 729542588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTU0MjU4OA==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-18T09:11:27Z",
    "updated_at": "2020-11-18T09:11:27Z",
    "author_association": "MEMBER",
    "body": "which version of Nethermind are you running @Siyuue ?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/729542588/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/729542827",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2449#issuecomment-729542827",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2449",
    "id": 729542827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTU0MjgyNw==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-18T09:11:54Z",
    "updated_at": "2020-11-18T09:11:54Z",
    "author_association": "MEMBER",
    "body": "Could you send Nethermind logs please?",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/729542827/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
