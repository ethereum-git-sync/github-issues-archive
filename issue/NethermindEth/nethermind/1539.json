{
  "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/1539",
  "repository_url": "https://api.github.com/repos/NethermindEth/nethermind",
  "labels_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/1539/labels{/name}",
  "comments_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/1539/comments",
  "events_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/1539/events",
  "html_url": "https://github.com/NethermindEth/nethermind/issues/1539",
  "id": 581220385,
  "node_id": "MDU6SXNzdWU1ODEyMjAzODU=",
  "number": 1539,
  "title": "Node stability/sync - Validator catch up / produce block on highest slot (even if in the past compared to clock time)",
  "user": {
    "login": "sgryphon",
    "id": 339293,
    "node_id": "MDQ6VXNlcjMzOTI5Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sgryphon",
    "html_url": "https://github.com/sgryphon",
    "followers_url": "https://api.github.com/users/sgryphon/followers",
    "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
    "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
    "organizations_url": "https://api.github.com/users/sgryphon/orgs",
    "repos_url": "https://api.github.com/users/sgryphon/repos",
    "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sgryphon/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-03-14T13:58:31Z",
  "updated_at": "2020-03-16T13:01:36Z",
  "closed_at": "2020-03-16T13:01:36Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "",
  "closed_by": {
    "login": "sgryphon",
    "id": 339293,
    "node_id": "MDQ6VXNlcjMzOTI5Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sgryphon",
    "html_url": "https://github.com/sgryphon",
    "followers_url": "https://api.github.com/users/sgryphon/followers",
    "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
    "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
    "organizations_url": "https://api.github.com/users/sgryphon/orgs",
    "repos_url": "https://api.github.com/users/sgryphon/repos",
    "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sgryphon/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/1539/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/1539/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/599158851",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/1539#issuecomment-599158851",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/1539",
    "id": 599158851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTE1ODg1MQ==",
    "user": {
      "login": "sgryphon",
      "id": 339293,
      "node_id": "MDQ6VXNlcjMzOTI5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgryphon",
      "html_url": "https://github.com/sgryphon",
      "followers_url": "https://api.github.com/users/sgryphon/followers",
      "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
      "organizations_url": "https://api.github.com/users/sgryphon/orgs",
      "repos_url": "https://api.github.com/users/sgryphon/repos",
      "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgryphon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-15T02:22:06Z",
    "updated_at": "2020-03-15T02:22:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Issue:\r\n\r\nThe issue can be simulated by passing specific quickstart genesis and offset times.\r\n\r\nThe default quickstart clock offset starts the effective clock at genesis time. You can run the host with a past genesis time and offset = 0 (current time clock).\r\n\r\ne.g. To start the nodes as if genesis was 60 seconds ago, use:\r\n\r\n```\r\ndotnet run --project src/Nethermind/Nethermind.BeaconNode.Host --QuickStart:GenesisTime ([DateTimeOffset]::UtcNow.ToUnixTimeSeconds() - 60) --QuickStart:ClockOffset 0 --QuickStart:ValidatorCount 64 --QuickStart:ValidatorStartIndex 0 --QuickStart:NumberOfValidators 32\r\n```\r\n\r\nThe generated blocks will be logged in bin/Debug/netcoreapp3.1/Development/memorystore/logNNNN and you will see that it starts from a slot half way through epoch 1.\r\n\r\nTo recreate the current issue, start the node with genesis 120 seconds ago:\r\n\r\n```\r\ndotnet run --project src/Nethermind/Nethermind.BeaconNode.Host --QuickStart:GenesisTime ([DateTimeOffset]::UtcNow.ToUnixTimeSeconds() - 120) --QuickStart:ClockOffset 0 --QuickStart:ValidatorCount 64 --QuickStart:ValidatorStartIndex 0 --QuickStart:NumberOfValidators 32\r\n```\r\n\r\nIn older code this would throw an exception that the Epoch was out of range; with the status code changes it returns non-success but throws null reference on the client with no data. In the feature branch\r\n\r\nIn the feature branch the first commit checks the status and reports it as 406 DutiesNotAvailableForRequestedEpoch.\r\n\r\nThe clock time is calculated as Epoch 2, even though the chain head is Epoch 0, and duties cannot be calculated more than 2 epochs in advance.\r\n\r\nI the real network this is unlikely to occur, as there will always be nodes generating blocks.\r\n\r\nIn a test network, however, it might occur because if there is a timing difference between starting up the beacon node and multiple validator clients, possibly with a small number of validator clients each.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/599158851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/599159240",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/1539#issuecomment-599159240",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/1539",
    "id": 599159240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTE1OTI0MA==",
    "user": {
      "login": "sgryphon",
      "id": 339293,
      "node_id": "MDQ6VXNlcjMzOTI5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/339293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgryphon",
      "html_url": "https://github.com/sgryphon",
      "followers_url": "https://api.github.com/users/sgryphon/followers",
      "following_url": "https://api.github.com/users/sgryphon/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgryphon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgryphon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgryphon/subscriptions",
      "organizations_url": "https://api.github.com/users/sgryphon/orgs",
      "repos_url": "https://api.github.com/users/sgryphon/repos",
      "events_url": "https://api.github.com/users/sgryphon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgryphon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-15T02:27:38Z",
    "updated_at": "2020-03-15T02:27:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "The planned fix is to have the validator check the beacon node head, and generate blocks based on that (until it caches up to the clock time).\r\n\r\nIn the real networks, if a client is offline, it's head would simply be behind and need to sync to catch up, so the produce blocks would be ignored as old (also, the chance of being assigned to create a block is pretty low).  However, there is no penalty for generating old blocks (provided you don't break the duplicate rules), so you might as well help keep a test network stable (at the cost of potentially useless work in production).\r\n\r\nNote that Eth 2 is not proof of work, so excess work is not an issue (work is minimal).",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/599159240/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
