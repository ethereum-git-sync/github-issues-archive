{
  "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2771",
  "repository_url": "https://api.github.com/repos/NethermindEth/nethermind",
  "labels_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2771/labels{/name}",
  "comments_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2771/comments",
  "events_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2771/events",
  "html_url": "https://github.com/NethermindEth/nethermind/issues/2771",
  "id": 804749515,
  "node_id": "MDU6SXNzdWU4MDQ3NDk1MTU=",
  "number": 2771,
  "title": "ARM considerations for VirtualMachine",
  "user": {
    "login": "Scooletz",
    "id": 519707,
    "node_id": "MDQ6VXNlcjUxOTcwNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/519707?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Scooletz",
    "html_url": "https://github.com/Scooletz",
    "followers_url": "https://api.github.com/users/Scooletz/followers",
    "following_url": "https://api.github.com/users/Scooletz/following{/other_user}",
    "gists_url": "https://api.github.com/users/Scooletz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Scooletz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Scooletz/subscriptions",
    "organizations_url": "https://api.github.com/users/Scooletz/orgs",
    "repos_url": "https://api.github.com/users/Scooletz/repos",
    "events_url": "https://api.github.com/users/Scooletz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Scooletz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-02-09T17:18:18Z",
  "updated_at": "2021-02-09T17:18:40Z",
  "closed_at": "2021-02-09T17:18:40Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I revisited the simd optimized code for VirtualMachine and I failed to find a way to improve it for ARM greatly. A few observations that sums up my reasoning/thinking:\r\n\r\n1. the current condition is `Vector<byte>.Count == 32` which fails for ARM which is 128 bit long\r\n1. the are 4 bitwise VM opcodes starting from https://ethervm.io/#16\r\n1. I tried to find another match in [system.runtime.intrinsics.arm](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.intrinsics.arm?view=net-5.0) but failed to find any\r\n\r\nand this brought me to a stale mate. What I could now is to refactor `VirtualMachine` so that supports `Vector<byte>.Count == 16`. This would require at least some testing or viewing the code. I could use https://github.com/EgorBo/Disasmo for ARM. Unfortunately, due to https://github.com/dotnet/runtime/issues/41518 it would fail because\r\n\r\n> However, certain JIT settings, such as the ISAs used, are largely dependent on the machine being run against and so you cannot currently check codegen for something like X86.Avx2 if your underlying hardware doesn't support it. Nor can you check for something like Arm.Dp from a x64 machine.\r\n\r\nThis would mean that without a physical ARM I could not look at the code. I digged a bit to find more about intrinsics and their actual gains in the following ones:\r\n\r\n1. https://developer.arm.com/architectures/instruction-sets/simd-isas/neon/intrinsics?page=57\r\n1. https://static.docs.arm.com/swog307215/a/Arm_Cortex-A76_Software_Optimization_Guide.pdf\r\n1. https://docs.microsoft.com/en-us/dotnet/api/system.runtime.intrinsics.arm.advsimd.and?view=net-5.0#System_Runtime_Intrinsi[â€¦]Vector128_System_Byte__\r\n\r\nLater I moved to find the output and the overhead for a specific bitwise case of the vectorized and not vectorized code:\r\n\r\n`ASIMD logical AND, BIC, EOR, MOV, MVN, ORN, ORR, NOT` Latency: 2, Throughput: 2, Pipeline: V\r\n`Logical, shift, no flagset AND, BIC, EON, EOR, ORN, ORR` Latency: 1 Throughput:  Pipeline: I\r\n\r\nwhere:\r\n\r\n- `Latency`, defined as the minimum latency seen by an operation dependent on an instruction in the described group.\r\n- `Execution Throughput` defined as the maximum throughput (in instructions per cycle) of the specified instruction group that can be achieved in the entirety of the Cortex-A76 microarchitecture.\r\n\r\nHaving this numbers I can't see a clear win scenario for a simple bitwise operations. Currently, they are unrolled in as `long` and moving it to vector seems to be not that beneficial at all\r\n",
  "closed_by": {
    "login": "Scooletz",
    "id": 519707,
    "node_id": "MDQ6VXNlcjUxOTcwNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/519707?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Scooletz",
    "html_url": "https://github.com/Scooletz",
    "followers_url": "https://api.github.com/users/Scooletz/followers",
    "following_url": "https://api.github.com/users/Scooletz/following{/other_user}",
    "gists_url": "https://api.github.com/users/Scooletz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Scooletz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Scooletz/subscriptions",
    "organizations_url": "https://api.github.com/users/Scooletz/orgs",
    "repos_url": "https://api.github.com/users/Scooletz/repos",
    "events_url": "https://api.github.com/users/Scooletz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Scooletz/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2771/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2771/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/776100166",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/2771#issuecomment-776100166",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/2771",
    "id": 776100166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjEwMDE2Ng==",
    "user": {
      "login": "Scooletz",
      "id": 519707,
      "node_id": "MDQ6VXNlcjUxOTcwNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/519707?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Scooletz",
      "html_url": "https://github.com/Scooletz",
      "followers_url": "https://api.github.com/users/Scooletz/followers",
      "following_url": "https://api.github.com/users/Scooletz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Scooletz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Scooletz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Scooletz/subscriptions",
      "organizations_url": "https://api.github.com/users/Scooletz/orgs",
      "repos_url": "https://api.github.com/users/Scooletz/repos",
      "events_url": "https://api.github.com/users/Scooletz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Scooletz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-09T17:18:37Z",
    "updated_at": "2021-02-09T17:18:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI according to our conversation @tkstanczak ",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/776100166/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
