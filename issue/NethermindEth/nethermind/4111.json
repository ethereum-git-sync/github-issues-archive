{
  "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4111",
  "repository_url": "https://api.github.com/repos/NethermindEth/nethermind",
  "labels_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4111/labels{/name}",
  "comments_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4111/comments",
  "events_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4111/events",
  "html_url": "https://github.com/NethermindEth/nethermind/issues/4111",
  "id": 1260264131,
  "node_id": "I_kwDOBggaLc5LHhrD",
  "number": 4111,
  "title": "Failure to process `finalizeChange` with custom consensus contract",
  "user": {
    "login": "hareeshnagaraj",
    "id": 3180560,
    "node_id": "MDQ6VXNlcjMxODA1NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3180560?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hareeshnagaraj",
    "html_url": "https://github.com/hareeshnagaraj",
    "followers_url": "https://api.github.com/users/hareeshnagaraj/followers",
    "following_url": "https://api.github.com/users/hareeshnagaraj/following{/other_user}",
    "gists_url": "https://api.github.com/users/hareeshnagaraj/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hareeshnagaraj/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hareeshnagaraj/subscriptions",
    "organizations_url": "https://api.github.com/users/hareeshnagaraj/orgs",
    "repos_url": "https://api.github.com/users/hareeshnagaraj/repos",
    "events_url": "https://api.github.com/users/hareeshnagaraj/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hareeshnagaraj/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1803453806,
      "node_id": "MDU6TGFiZWwxODAzNDUzODA2",
      "url": "https://api.github.com/repos/NethermindEth/nethermind/labels/aura",
      "name": "aura",
      "color": "e59792",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "jmederosalvarado",
    "id": 46798594,
    "node_id": "MDQ6VXNlcjQ2Nzk4NTk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/46798594?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jmederosalvarado",
    "html_url": "https://github.com/jmederosalvarado",
    "followers_url": "https://api.github.com/users/jmederosalvarado/followers",
    "following_url": "https://api.github.com/users/jmederosalvarado/following{/other_user}",
    "gists_url": "https://api.github.com/users/jmederosalvarado/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jmederosalvarado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jmederosalvarado/subscriptions",
    "organizations_url": "https://api.github.com/users/jmederosalvarado/orgs",
    "repos_url": "https://api.github.com/users/jmederosalvarado/repos",
    "events_url": "https://api.github.com/users/jmederosalvarado/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jmederosalvarado/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "jmederosalvarado",
      "id": 46798594,
      "node_id": "MDQ6VXNlcjQ2Nzk4NTk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/46798594?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmederosalvarado",
      "html_url": "https://github.com/jmederosalvarado",
      "followers_url": "https://api.github.com/users/jmederosalvarado/followers",
      "following_url": "https://api.github.com/users/jmederosalvarado/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmederosalvarado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmederosalvarado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmederosalvarado/subscriptions",
      "organizations_url": "https://api.github.com/users/jmederosalvarado/orgs",
      "repos_url": "https://api.github.com/users/jmederosalvarado/repos",
      "events_url": "https://api.github.com/users/jmederosalvarado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmederosalvarado/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-06-03T19:06:30Z",
  "updated_at": "2022-08-31T17:44:12Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Describe the bug**\r\nHi everyone! While attempting to perform a hard fork of the existing POA network with a custom consensus contract and nethermind validators, I am observing an odd failure in evaluation of `finalizeChange` - the steps followed are as below:\r\n\r\n1. Deploy new consensus contract to POA core  - https://github.com/AudiusProject/audius-protocol/compare/hn_simple_consensus_poc?expand=1\r\n2. Seed an initial set of nethermind validators that are sync'd to latest POA core state, in our case these nodes are \"0xc719BB7A1b3A9acFD793453697acc514827bb873\", \"0x7d0841E73BCECebBb2b3414745a46625b1e8f2f6\", \"0x15B026B3e451b11f5890d723B1dA02a3aC05E6Cb\"\r\n3. Modify `spec.json` in each of these nodes with the deployed contract address and a target fork block \r\n\r\nWhen the target block is reached, each node produced the following output:\r\n```\r\n2022-06-02 17:25:20.6767|Signal for switch to chainspec Contract based validator set at block 27712083 (0x04324e...625e1c).\r\n\r\n2022-06-02 17:25:50.1506|Initial contract validators (3): [0xc719bb7a1b3a9acfd793453697acc514827bb873, 0x7d0841e73bcecebbb2b3414745a46625b1e8f2f6, 0x15b026b3e451b11f5890d723b1da02a3ac05e6cb].\r\n2022-06-02 17:25:50.1506|Applying validator set change signalled at block 27712089 before block 27712089 (0xc28a15...bc0d8a).\r\n```\r\n\r\nAll 3 nodes now start sealing blocks as expected, diverging from POA core (all good up until now):\r\n```\r\nValidator 1:\r\n2022-06-02 17:27:00.1502|Sealed block 27712103 (0x680194...9e72d9), diff: 340282366920938463463374607431768211454, tx count: 16\r\n\r\nValidator 2:\r\n2022-06-02 17:27:05.1750|Sealed block 27712104 (0xaa4467...30d64a), diff: 340282366920938463463374607431768211454, tx count: 23\r\n\r\nValidator 3:\r\n2022-06-02 17:27:10.0391|Sealed block 27712105 (0xdb1c15...13a0bf), diff: 340282366920938463463374607431768211454, tx count: 5\r\n```\r\n\r\n4. Invoke the new consensus contract to add a new validator \"0x71ae78a80d32538E7A55aEC4c0E5E820611774E6\"\r\n\r\nAfter the above, each node (3/3) produced the following output indicating that the InitiateChange call had been processed and finalized:\r\n```\r\n2022-06-02 17:58:20.0549|Signal for transition within contract at block 27712479 (0xbd7d4e...1ff74d). \r\n**New list of 4** : [0xc719bb7a1b3a9acfd793453697acc514827bb873, 0x7d0841e73bcecebbb2b3414745a46625b1e8f2f6, 0x15b026b3e451b11f5890d723b1da02a3ac05e6cb, **0x71ae78a80d32538e7a55aec4c0e5e820611774e6**].\r\n\r\n2022-06-02 17:58:20.0549|Processed   27712479 |    5,012ms, mgasps    0.03 total    0.14, tps    0.20 total    1.28, bps    0.20 total    0.20, recv queue 0, proc queue 0\r\n2022-06-02 17:58:20.1910|Peers | with known best block: 2 | all: 3 |\r\n2022-06-02 17:58:25.0172|Sealed block 27712480 (0x873bc7...455cd3), diff: 340282366920938463463374607431768211454, tx count: 0\r\n2022-06-02 17:58:25.0197|**Finalizing validators for transition within contract** signalled at block 27712479. after block 27712480 (0x873bc7...455cd3).\r\n2022-06-02 17:58:25.0197|Processed   27712480 |    4,964ms, mgasps    0.03 total    0.14, tps    0.20 total    1.28, bps    0.20 total    0.20, recv queue 0, proc queue 0\r\n2022-06-02 17:58:30.0156|Sealed block 27712481 (0xcbe2a0...3901bd), diff: 340282366920938463463374607431768211454, tx count: 0\r\n2022-06-02 17:58:30.0156|Applying validator set change signalled at block 27712479 before block 27712481 (0xcbe2a0...3901bd).\r\n\r\n```\r\n\r\nAt this point, each node believes there are 4 validators but when attempting to query the contract deployment directly it appears that `finalizeChange` was never invoked - the pendingList and validatorsList differ and the newly added address is not present + `finalized` boolean is still false\r\n\r\n```\r\ntruffle(coreFork)> await poa.getValidators()\r\n[\r\n  '0xc719BB7A1b3A9acFD793453697acc514827bb873',\r\n  '0x7d0841E73BCECebBb2b3414745a46625b1e8f2f6',\r\n  '0x15B026B3e451b11f5890d723B1dA02a3aC05E6Cb'\r\n]\r\ntruffle(coreFork)> await poa.getPendingList()\r\n[\r\n  '0xc719BB7A1b3A9acFD793453697acc514827bb873',\r\n  '0x7d0841E73BCECebBb2b3414745a46625b1e8f2f6',\r\n  '0x15B026B3e451b11f5890d723B1dA02a3aC05E6Cb',\r\n  '0x71ae78a80d32538E7A55aEC4c0E5E820611774E6'\r\n]\r\n```\r\n\r\nTaking a closer look at the nethermind source code it does appear that the above logs _should_ precede a call to `FinalizeChange` (https://github.com/NethermindEth/nethermind/blob/82f331a3e7ff21712a5f839e0a62ba7c16110e44/src/Nethermind/Nethermind.Consensus.AuRa/Validators/ContractBasedValidator.cs#L215)\r\n\r\n\r\n**Expected behavior**\r\nSince 3/3 nodes processed the call to InitiateChange it was expected that `finalizeChange` would actually be reached on the contract\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Ubuntu\r\n - 20.04\r\n\r\n\r\n**Additional context**\r\n\r\nCan definitely provide more context as needed - this experiment was to validate a custom consensus contract behavior. This contract is intentionally simplified to allow ease of validator set manipulation and does not reflect plans for production moving forward",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4111/reactions",
    "total_count": 8,
    "+1": 8,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4111/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1152570045",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4111#issuecomment-1152570045",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4111",
    "id": 1152570045,
    "node_id": "IC_kwDOBggaLc5EstK9",
    "user": {
      "login": "hareeshnagaraj",
      "id": 3180560,
      "node_id": "MDQ6VXNlcjMxODA1NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3180560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hareeshnagaraj",
      "html_url": "https://github.com/hareeshnagaraj",
      "followers_url": "https://api.github.com/users/hareeshnagaraj/followers",
      "following_url": "https://api.github.com/users/hareeshnagaraj/following{/other_user}",
      "gists_url": "https://api.github.com/users/hareeshnagaraj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hareeshnagaraj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hareeshnagaraj/subscriptions",
      "organizations_url": "https://api.github.com/users/hareeshnagaraj/orgs",
      "repos_url": "https://api.github.com/users/hareeshnagaraj/repos",
      "events_url": "https://api.github.com/users/hareeshnagaraj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hareeshnagaraj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-10T17:10:59Z",
    "updated_at": "2022-06-10T17:10:59Z",
    "author_association": "NONE",
    "body": "@LukaszRozmej just wanted to bump - any insight into what could possibly be wrong here? ",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1152570045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
