{
  "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4143",
  "repository_url": "https://api.github.com/repos/NethermindEth/nethermind",
  "labels_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4143/labels{/name}",
  "comments_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4143/comments",
  "events_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4143/events",
  "html_url": "https://github.com/NethermindEth/nethermind/issues/4143",
  "id": 1267381844,
  "node_id": "I_kwDOBggaLc5LirZU",
  "number": 4143,
  "title": "RPC: ```trace_filter``` results in ```internal error```",
  "user": {
    "login": "SinErgy84",
    "id": 17455315,
    "node_id": "MDQ6VXNlcjE3NDU1MzE1",
    "avatar_url": "https://avatars.githubusercontent.com/u/17455315?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SinErgy84",
    "html_url": "https://github.com/SinErgy84",
    "followers_url": "https://api.github.com/users/SinErgy84/followers",
    "following_url": "https://api.github.com/users/SinErgy84/following{/other_user}",
    "gists_url": "https://api.github.com/users/SinErgy84/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SinErgy84/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SinErgy84/subscriptions",
    "organizations_url": "https://api.github.com/users/SinErgy84/orgs",
    "repos_url": "https://api.github.com/users/SinErgy84/repos",
    "events_url": "https://api.github.com/users/SinErgy84/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SinErgy84/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "LukaszRozmej",
    "id": 12445221,
    "node_id": "MDQ6VXNlcjEyNDQ1MjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/12445221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/LukaszRozmej",
    "html_url": "https://github.com/LukaszRozmej",
    "followers_url": "https://api.github.com/users/LukaszRozmej/followers",
    "following_url": "https://api.github.com/users/LukaszRozmej/following{/other_user}",
    "gists_url": "https://api.github.com/users/LukaszRozmej/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/LukaszRozmej/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/LukaszRozmej/subscriptions",
    "organizations_url": "https://api.github.com/users/LukaszRozmej/orgs",
    "repos_url": "https://api.github.com/users/LukaszRozmej/repos",
    "events_url": "https://api.github.com/users/LukaszRozmej/events{/privacy}",
    "received_events_url": "https://api.github.com/users/LukaszRozmej/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "LukaszRozmej",
      "id": 12445221,
      "node_id": "MDQ6VXNlcjEyNDQ1MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12445221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LukaszRozmej",
      "html_url": "https://github.com/LukaszRozmej",
      "followers_url": "https://api.github.com/users/LukaszRozmej/followers",
      "following_url": "https://api.github.com/users/LukaszRozmej/following{/other_user}",
      "gists_url": "https://api.github.com/users/LukaszRozmej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LukaszRozmej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LukaszRozmej/subscriptions",
      "organizations_url": "https://api.github.com/users/LukaszRozmej/orgs",
      "repos_url": "https://api.github.com/users/LukaszRozmej/repos",
      "events_url": "https://api.github.com/users/LukaszRozmej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LukaszRozmej/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2022-06-10T10:48:53Z",
  "updated_at": "2022-09-07T08:59:23Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Describe the bug**\r\nWhile tracing different transactions on the mainnet for my use case, I've found a bug in ```trace_filter``` if block delta between FromBlock and ToBlock gets to large.\r\nThe response from the client looks like this:\r\n\r\n```php\r\n\"message\": \"Error during rpc-method >>trace_filter<<: Internal error\",                                                                                                                                                                                                     \r\n        \"data\": \"Nethermind.Trie.TrieException: Failed to load key d16a7c9c2fe5097520b1c6510a739bdfcd7ccad01f5e9b1d318829b6d36d7209 from root hash 0xb095023d1261c916200802ffbdd6c5869cf12f5014bedd86b54e3980a2260659.\r\n ---> Nethermind.Trie.TrieException: Node 0xb095023d1261c916200802ffbdd6c5869cf12f5014bedd86b54e3980a2260659 is missing from the DB\r\n   at Nethermind.Trie.Pruning.TrieStore.LoadRlp(Keccak keccak, IKeyValueStore keyValueStore)\r\n   at Nethermind.Trie.TrieNode.ResolveNode(ITrieNodeResolver tree)\r\n   at Nethermind.Trie.PatriciaTree.Run(Span`1 updatePath, Int32 nibblesCount, Byte[] updateValue, Boolean isUpdate, Boolean ignoreMissingDelete, Keccak startRootHash)\r\n   at Nethermind.Trie.PatriciaTree.Get(Span`1 rawKey, Keccak rootHash)\r\n   --- End of inner exception stack trace ---\r\n   at Nethermind.Trie.PatriciaTree.Get(Span`1 rawKey, Keccak rootHash)\r\n   at Nethermind.State.StateProvider.GetState(Address address)\r\n   at Nethermind.State.StateProvider.GetAndAddToCache(Address address)\r\n   at Nethermind.State.StateProvider.GetNonce(Address address)\r\n   at Nethermind.Consensus.Processing.BlockProcessor.BlockValidationTransactionsExecutor.ProcessTransactions(Block block, ProcessingOptions processingOptions, BlockReceiptsTracer receiptsTracer, IReleaseSpec spec)\r\n   at Nethermind.Consensus.Processing.BlockProcessor.ProcessBlock(Block block, IBlockTracer blockTracer, ProcessingOptions options)\r\n   at Nethermind.Consensus.Processing.BlockProcessor.ProcessOne(Block suggestedBlock, ProcessingOptions options, IBlockTracer blockTracer)\r\n   at Nethermind.Consensus.Processing.BlockProcessor.Process(Keccak newBranchStateRoot, List`1 suggestedBlocks, ProcessingOptions options, IBlockTracer blockTracer)\r\n   at Nethermind.Consensus.Processing.BlockchainProcessor.ProcessBranch(ProcessingBranch processingBranch, Block suggestedBlock, ProcessingOptions options, IBlockTracer tracer)\r\n   at Nethermind.Consensus.Processing.BlockchainProcessor.Process(Block suggestedBlock, ProcessingOptions options, IBlockTracer tracer)\r\n   at Nethermind.Consensus.Processing.OneTimeChainProcessor.Process(Block block, ProcessingOptions options, IBlockTracer tracer)\r\n   at Nethermind.Consensus.Tracing.Tracer.Trace(Block block, IBlockTracer blockTracer)\r\n   at Nethermind.JsonRpc.Modules.Trace.TraceRpcModule.TraceBlock(Block block, ParityTraceTypes traceTypes, TxTraceFilter txTraceFilter)\r\n   at Nethermind.JsonRpc.Modules.Trace.TraceRpcModule.trace_filter(TraceFilterForRpc traceFilterForRpc)\",     \r\n        \"code\": -32603,\r\n```\r\n\r\n**To Reproduce**\r\nCall ```curl --data '{\"method\":\"trace_filter\",\"params\":[{\"fromBlock\":\"0xe3ed9c\",\"toBlock\":\"0xe3eeab\"}],\"id\":1,\"jsonrpc\":\"2.0\"}' -H \"Content-Type: application/json\" -X POST 172.17.0.1:18546```\r\nfor example with block delta from 14937500 to 14937771\r\n\r\n**Expected behavior**\r\n- either valid output of ```trace_filter```\r\n- or adequate error message, e.g. memory limit, instead of ```internal error```\r\n- or suggestion for adjusting the config parameters to avoid the problem \r\n\r\n**Desktop (please complete the following information):**\r\n- OS: Ubuntu 22.04 LTS\r\n- nethermind 1.13.2\r\n\r\n**Additional context**\r\nThe client is fully synced with the mainnet. \r\nconfig:\r\n```\r\nNETHERMIND_CONFIG=\"mainnet\"\r\nNETHERMIND_JSONRPCCONFIG_ENABLED=\"true\"\r\nNETHERMIND_JSONRPCCONFIG_HOST=\"0.0.0.0\"\r\nNETHERMIND_NETWORKCONFIG_MAXACTIVEPEERS=\"15\"\r\nNETHERMIND_INITCONFIG_LOGFILENAME=\"log.txt\"\r\n#\r\n# Special\r\n#\r\n#NETHERMIND_INITCONFIG_STATICNODESPATH=\"static-peers.json\"\r\n#NETHERMIND_NETWORKCONFIG_ONLYSTATICPEERS=\"true\"\r\nNETHERMIND_NETWORKCONFIG_P2PPORT=\"30304\"\r\nNETHERMIND_NETWORKCONFIG_DISCOVERYPORT=\"30304\"\r\nNETHERMIND_JSONRPCCONFIG_PORT=8546\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4143/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4143/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1165387682",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4143#issuecomment-1165387682",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4143",
    "id": 1165387682,
    "node_id": "IC_kwDOBggaLc5Fdmei",
    "user": {
      "login": "LukaszRozmej",
      "id": 12445221,
      "node_id": "MDQ6VXNlcjEyNDQ1MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12445221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LukaszRozmej",
      "html_url": "https://github.com/LukaszRozmej",
      "followers_url": "https://api.github.com/users/LukaszRozmej/followers",
      "following_url": "https://api.github.com/users/LukaszRozmej/following{/other_user}",
      "gists_url": "https://api.github.com/users/LukaszRozmej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LukaszRozmej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LukaszRozmej/subscriptions",
      "organizations_url": "https://api.github.com/users/LukaszRozmej/orgs",
      "repos_url": "https://api.github.com/users/LukaszRozmej/repos",
      "events_url": "https://api.github.com/users/LukaszRozmej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LukaszRozmej/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T09:29:11Z",
    "updated_at": "2022-06-24T09:29:11Z",
    "author_association": "MEMBER",
    "body": "This is due to pruning or fast syncing from block X, big/full ranges will only work on archive mode. I think in all call/trace methods we need to catch those exceptions and return information about state being not available.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1165387682/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1165425750",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4143#issuecomment-1165425750",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4143",
    "id": 1165425750,
    "node_id": "IC_kwDOBggaLc5FdvxW",
    "user": {
      "login": "gituser",
      "id": 104405,
      "node_id": "MDQ6VXNlcjEwNDQwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/104405?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gituser",
      "html_url": "https://github.com/gituser",
      "followers_url": "https://api.github.com/users/gituser/followers",
      "following_url": "https://api.github.com/users/gituser/following{/other_user}",
      "gists_url": "https://api.github.com/users/gituser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gituser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gituser/subscriptions",
      "organizations_url": "https://api.github.com/users/gituser/orgs",
      "repos_url": "https://api.github.com/users/gituser/repos",
      "events_url": "https://api.github.com/users/gituser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gituser/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T10:14:30Z",
    "updated_at": "2022-06-24T10:14:30Z",
    "author_association": "NONE",
    "body": "@LukaszRozmej why it worked fine on parity (openethereum) even on a fast node with pruning activated?",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1165425750/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1165572892",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4143#issuecomment-1165572892",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4143",
    "id": 1165572892,
    "node_id": "IC_kwDOBggaLc5FeTsc",
    "user": {
      "login": "LukaszRozmej",
      "id": 12445221,
      "node_id": "MDQ6VXNlcjEyNDQ1MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12445221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LukaszRozmej",
      "html_url": "https://github.com/LukaszRozmej",
      "followers_url": "https://api.github.com/users/LukaszRozmej/followers",
      "following_url": "https://api.github.com/users/LukaszRozmej/following{/other_user}",
      "gists_url": "https://api.github.com/users/LukaszRozmej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LukaszRozmej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LukaszRozmej/subscriptions",
      "organizations_url": "https://api.github.com/users/LukaszRozmej/orgs",
      "repos_url": "https://api.github.com/users/LukaszRozmej/repos",
      "events_url": "https://api.github.com/users/LukaszRozmej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LukaszRozmej/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T13:24:40Z",
    "updated_at": "2022-06-24T13:24:47Z",
    "author_association": "MEMBER",
    "body": "> @LukaszRozmej why it worked fine on parity (openethereum) even on a fast node with pruning activated?\r\nseparate\r\n\r\nParity stored traces in a separate database. We are not. We could potentially change that but only for full synced nodes (with pruning). The tradeoff would be an increased disk footprint.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1165572892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1165576882",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4143#issuecomment-1165576882",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4143",
    "id": 1165576882,
    "node_id": "IC_kwDOBggaLc5FeUqy",
    "user": {
      "login": "gituser",
      "id": 104405,
      "node_id": "MDQ6VXNlcjEwNDQwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/104405?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gituser",
      "html_url": "https://github.com/gituser",
      "followers_url": "https://api.github.com/users/gituser/followers",
      "following_url": "https://api.github.com/users/gituser/following{/other_user}",
      "gists_url": "https://api.github.com/users/gituser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gituser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gituser/subscriptions",
      "organizations_url": "https://api.github.com/users/gituser/orgs",
      "repos_url": "https://api.github.com/users/gituser/repos",
      "events_url": "https://api.github.com/users/gituser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gituser/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-24T13:29:10Z",
    "updated_at": "2022-06-24T13:29:10Z",
    "author_association": "NONE",
    "body": "@LukaszRozmej I think many here are migrating from OpenEthereum (Parity) so for them that solution would be viable, please implement it if it's easy and possible.\r\n\r\nIncreased disk footprint like +50-100 GB? That's much better tradeoff comparing to running Archive node which requires 6TB space.\r\nThank you.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1165576882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1167104232",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4143#issuecomment-1167104232",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4143",
    "id": 1167104232,
    "node_id": "IC_kwDOBggaLc5FkJjo",
    "user": {
      "login": "LukaszRozmej",
      "id": 12445221,
      "node_id": "MDQ6VXNlcjEyNDQ1MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12445221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LukaszRozmej",
      "html_url": "https://github.com/LukaszRozmej",
      "followers_url": "https://api.github.com/users/LukaszRozmej/followers",
      "following_url": "https://api.github.com/users/LukaszRozmej/following{/other_user}",
      "gists_url": "https://api.github.com/users/LukaszRozmej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LukaszRozmej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LukaszRozmej/subscriptions",
      "organizations_url": "https://api.github.com/users/LukaszRozmej/orgs",
      "repos_url": "https://api.github.com/users/LukaszRozmej/repos",
      "events_url": "https://api.github.com/users/LukaszRozmej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LukaszRozmej/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-27T09:22:11Z",
    "updated_at": "2022-06-27T09:22:11Z",
    "author_association": "MEMBER",
    "body": "@gituser It is possible, but far from easy. OE/Parity handles sync of this DB in their warp sync?",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1167104232/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1167212042",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4143#issuecomment-1167212042",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4143",
    "id": 1167212042,
    "node_id": "IC_kwDOBggaLc5Fkj4K",
    "user": {
      "login": "gituser",
      "id": 104405,
      "node_id": "MDQ6VXNlcjEwNDQwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/104405?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gituser",
      "html_url": "https://github.com/gituser",
      "followers_url": "https://api.github.com/users/gituser/followers",
      "following_url": "https://api.github.com/users/gituser/following{/other_user}",
      "gists_url": "https://api.github.com/users/gituser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gituser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gituser/subscriptions",
      "organizations_url": "https://api.github.com/users/gituser/orgs",
      "repos_url": "https://api.github.com/users/gituser/repos",
      "events_url": "https://api.github.com/users/gituser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gituser/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-27T11:04:36Z",
    "updated_at": "2022-06-27T11:04:36Z",
    "author_association": "NONE",
    "body": "> @gituser It is possible, but far from easy. OE/Parity handles sync of this DB in their warp sync?\r\n\r\nNot sure, but I think OE/parity only allowed tracing if you sync from scratch using Fast sync.\r\nAlso you had to specify `tracing: on` in database options before starting to sync in order to generate traces DB.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1167212042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1239108576",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/4143#issuecomment-1239108576",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/4143",
    "id": 1239108576,
    "node_id": "IC_kwDOBggaLc5J20vg",
    "user": {
      "login": "LukaszRozmej",
      "id": 12445221,
      "node_id": "MDQ6VXNlcjEyNDQ1MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12445221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LukaszRozmej",
      "html_url": "https://github.com/LukaszRozmej",
      "followers_url": "https://api.github.com/users/LukaszRozmej/followers",
      "following_url": "https://api.github.com/users/LukaszRozmej/following{/other_user}",
      "gists_url": "https://api.github.com/users/LukaszRozmej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LukaszRozmej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LukaszRozmej/subscriptions",
      "organizations_url": "https://api.github.com/users/LukaszRozmej/orgs",
      "repos_url": "https://api.github.com/users/LukaszRozmej/repos",
      "events_url": "https://api.github.com/users/LukaszRozmej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LukaszRozmej/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-07T08:58:51Z",
    "updated_at": "2022-09-07T08:59:23Z",
    "author_association": "MEMBER",
    "body": "@gituser @SinErgy84 created a plugin that stores the traces and retrives them through json rpc, the only thing is this needs FullSync (but not archive state).",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/1239108576/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
