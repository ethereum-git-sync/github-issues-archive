{
  "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/364",
  "repository_url": "https://api.github.com/repos/NethermindEth/nethermind",
  "labels_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/364/labels{/name}",
  "comments_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/364/comments",
  "events_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/364/events",
  "html_url": "https://github.com/NethermindEth/nethermind/issues/364",
  "id": 400231751,
  "node_id": "MDU6SXNzdWU0MDAyMzE3NTE=",
  "number": 364,
  "title": "Channels in blockchain processor",
  "user": {
    "login": "tkstanczak",
    "id": 498913,
    "node_id": "MDQ6VXNlcjQ5ODkxMw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tkstanczak",
    "html_url": "https://github.com/tkstanczak",
    "followers_url": "https://api.github.com/users/tkstanczak/followers",
    "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
    "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
    "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
    "repos_url": "https://api.github.com/users/tkstanczak/repos",
    "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1023953465,
      "node_id": "MDU6TGFiZWwxMDIzOTUzNDY1",
      "url": "https://api.github.com/repos/NethermindEth/nethermind/labels/refactoring",
      "name": "refactoring",
      "color": "56cbd3",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2019-01-17T11:25:15Z",
  "updated_at": "2019-03-19T13:21:51Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Analyze and evaluate performance\r\nhttps://ndportmann.com/system-threading-channels/",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/364/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/364/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/473920131",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/364#issuecomment-473920131",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/364",
    "id": 473920131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzkyMDEzMQ==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T13:57:02Z",
    "updated_at": "2019-03-18T13:57:02Z",
    "author_association": "MEMBER",
    "body": "Currently we have:\r\n\r\n```\r\nprivate void RunRecoveryLoop()\r\n        {\r\n            foreach (BlockRef blockRef in _recoveryQueue.GetConsumingEnumerable(_loopCancellationSource.Token))\r\n            {\r\n```\r\n\r\nand\r\n\r\n```\r\n    private void RunProcessingLoop()\r\n        {\r\n            _stats.Start();\r\n            if (_logger.IsDebug) _logger.Debug($\"Starting block processor - {_blockQueue.Count} blocks waiting in the queue.\");\r\n\r\n            if (_blockQueue.Count == 0)\r\n            {\r\n                ProcessingQueueEmpty?.Invoke(this, EventArgs.Empty);\r\n            }\r\n\r\n            foreach (BlockRef blockRef in _blockQueue.GetConsumingEnumerable(_loopCancellationSource.Token))\r\n            {\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/473920131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/473920585",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/364#issuecomment-473920585",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/364",
    "id": 473920585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzkyMDU4NQ==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T13:58:09Z",
    "updated_at": "2019-03-18T13:58:09Z",
    "author_association": "MEMBER",
    "body": "@tkp1n - you mentioned that you may want to look at the Channel based implementation here.\r\nAlso adding you here in case we have a PR in the future that you want to look at.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/473920585/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/474118499",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/364#issuecomment-474118499",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/364",
    "id": 474118499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDExODQ5OQ==",
    "user": {
      "login": "tkp1n",
      "id": 9985284,
      "node_id": "MDQ6VXNlcjk5ODUyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9985284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkp1n",
      "html_url": "https://github.com/tkp1n",
      "followers_url": "https://api.github.com/users/tkp1n/followers",
      "following_url": "https://api.github.com/users/tkp1n/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkp1n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkp1n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkp1n/subscriptions",
      "organizations_url": "https://api.github.com/users/tkp1n/orgs",
      "repos_url": "https://api.github.com/users/tkp1n/repos",
      "events_url": "https://api.github.com/users/tkp1n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkp1n/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T22:01:14Z",
    "updated_at": "2019-03-18T22:01:14Z",
    "author_association": "NONE",
    "body": "Some random thoughts after reviewing `BlockchainProcessor`:\r\n\r\n### Sync vs Async\r\n\r\nBoth sources for the queues held by `BlockchainProcessor` (`_blockTree.NewBestSuggestedBlock` and `SuggestBlock`) are synchronous. Channels are meant for async methods and may therefore not be the best fit for `BlockchainProcessor` unless quite a few places are turned async... \r\n\r\n### Async fire and forget\r\n\r\nConsider using something like the following, to kick off async methods in a sync context:\r\n\r\nhttps://github.com/mgravell/Pipelines.Sockets.Unofficial/blob/1882a806e64cb7d75f958fefae6b59383a877e7f/src/Pipelines.Sockets.Unofficial/Helpers.cs#L205-L206\r\n\r\n### Replacing the queues\r\n\r\n`_recoveryQueue` will probably become:\r\n\r\n```csharp\r\nChannel.CreateUnbounded<T>(new UnboundedChannelOptions()\r\n{\r\n    SingleWriter = false,\r\n    SingleReader = true\r\n});\r\n```\r\n\r\n`_blockQueue` will probably become:\r\n\r\n```csharp\r\nChannel.CreateBounded<T>(new BoundedChannelOptions(capacity)\r\n{\r\n    FullMode = BoundedChannelFullMode.Wait,\r\n    SingleWriter = false,\r\n    SingleReader = true\r\n});\r\n```\r\n\r\n**Note** that both the unbounded channel as well as the bounded channel using `FullMode = Wait` do not provide a limit on memory usage!\r\n\r\n### Thread safety\r\n\r\nThe following is not thread-safe. Is this intentional?\r\nhttps://github.com/NethermindEth/nethermind/blob/00758496c9450e39fc1991f1fb033a527749452d/src/Nethermind/Nethermind.Blockchain/BlockchainProcessor.cs#L100\r\n\r\nConsider replacing it with \r\n```csharp\r\nvar currentRecoveryQueueSize = Interlocked.Add(ref _currentRecoveryQueueSize, block.Transactions.Length);\r\n```\r\nand use the local `currentRecoveryQueueSize` for the remainder of the method.\r\n\r\n### Exception handling\r\n\r\nWhy is the following line not wrapped in a try/catch? In a concurrent environment the previously evaluated `_recoveryQueue.IsAddingCompleted` may be stale once `Add` is called.\r\nhttps://github.com/NethermindEth/nethermind/blob/00758496c9450e39fc1991f1fb033a527749452d/src/Nethermind/Nethermind.Blockchain/BlockchainProcessor.cs#L104",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/474118499/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/474303977",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/364#issuecomment-474303977",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/364",
    "id": 474303977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDMwMzk3Nw==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T10:51:08Z",
    "updated_at": "2019-03-19T10:53:04Z",
    "author_association": "MEMBER",
    "body": "@tkp1n https://github.com/NethermindEth/nethermind/pull/422\r\n\r\nFixed (thank you!):\r\n`int currentRecoveryQueueSize = Interlocked.Add(ref _currentRecoveryQueueSize, block.Transactions.Length);`\r\n\r\nWhen experimenting with DataFlows (in a different part of the program - in LoadBlocksFromDb) yesterday I noticed that the bounded capacity option was causing the input to be dropped instead of queued by default. I need to play with the option that you described `FullMode = BoundedChannelFullMode.Wait`\r\n\r\nYou mention that the Channels are based on async - I noticed that the DataFlows worked totally fine without the async calls. I will experiment a bit more with both. What I need here is neither of the solutions provided for the ChannelFullMode - we actually provide a different behavior depending \r\n\r\nFixed the exception handling, thank you:\r\n\r\n```\r\ntry\r\n{\r\n    _recoveryQueue.Add(blockRef);\r\n    if (_logger.IsTrace) _logger.Trace($\"A new block {block.ToString(Block.Format.Short)} enqueued for processing.\");\r\n}\r\ncatch (InvalidOperationException)\r\n{\r\n    if (!_recoveryQueue.IsAddingCompleted)\r\n    {\r\n        throw;\r\n    }            \r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/474303977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/474305123",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/364#issuecomment-474305123",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/364",
    "id": 474305123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDMwNTEyMw==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T10:54:54Z",
    "updated_at": "2019-03-19T11:30:16Z",
    "author_association": "MEMBER",
    "body": "As for the limit on memory use - we actually drop the references when we reach the limit (need to add WeakReference there).\r\nEDIT: WeakReference was not helpful here.",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/474305123/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/474355674",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/364#issuecomment-474355674",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/364",
    "id": 474355674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDM1NTY3NA==",
    "user": {
      "login": "tkp1n",
      "id": 9985284,
      "node_id": "MDQ6VXNlcjk5ODUyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9985284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkp1n",
      "html_url": "https://github.com/tkp1n",
      "followers_url": "https://api.github.com/users/tkp1n/followers",
      "following_url": "https://api.github.com/users/tkp1n/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkp1n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkp1n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkp1n/subscriptions",
      "organizations_url": "https://api.github.com/users/tkp1n/orgs",
      "repos_url": "https://api.github.com/users/tkp1n/repos",
      "events_url": "https://api.github.com/users/tkp1n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkp1n/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T13:04:32Z",
    "updated_at": "2019-03-19T13:04:32Z",
    "author_association": "NONE",
    "body": "> As for the limit on memory use - we actually drop the references when we reach the limit (need to add WeakReference there).\r\n> EDIT: WeakReference was not helpful here.\r\n\r\nDropping items pushed to a channel above a given limit is actually `FullMode = DropNewest`.. ",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/474355674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/474364963",
    "html_url": "https://github.com/NethermindEth/nethermind/issues/364#issuecomment-474364963",
    "issue_url": "https://api.github.com/repos/NethermindEth/nethermind/issues/364",
    "id": 474364963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDM2NDk2Mw==",
    "user": {
      "login": "tkstanczak",
      "id": 498913,
      "node_id": "MDQ6VXNlcjQ5ODkxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/498913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkstanczak",
      "html_url": "https://github.com/tkstanczak",
      "followers_url": "https://api.github.com/users/tkstanczak/followers",
      "following_url": "https://api.github.com/users/tkstanczak/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkstanczak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkstanczak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkstanczak/subscriptions",
      "organizations_url": "https://api.github.com/users/tkstanczak/orgs",
      "repos_url": "https://api.github.com/users/tkstanczak/repos",
      "events_url": "https://api.github.com/users/tkstanczak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkstanczak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T13:21:51Z",
    "updated_at": "2019-03-19T13:21:51Z",
    "author_association": "MEMBER",
    "body": "> > As for the limit on memory use - we actually drop the references when we reach the limit (need to add WeakReference there).\r\n> > EDIT: WeakReference was not helpful here.\r\n> \r\n> Dropping items pushed to a channel above a given limit is actually `FullMode = DropNewest`..\r\n\r\nI did not say it clearly - we drop the objects but keep the references in the queue (just remove the memory allocations and leave the reference to reload from the DB when they are processed)",
    "reactions": {
      "url": "https://api.github.com/repos/NethermindEth/nethermind/issues/comments/474364963/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
