{
  "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1355",
  "repository_url": "https://api.github.com/repos/NomicFoundation/hardhat",
  "labels_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1355/labels{/name}",
  "comments_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1355/comments",
  "events_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1355/events",
  "html_url": "https://github.com/NomicFoundation/hardhat/issues/1355",
  "id": 841785938,
  "node_id": "MDU6SXNzdWU4NDE3ODU5Mzg=",
  "number": 1355,
  "title": "[Feature request] Add ability to \"impersonate contract\"",
  "user": {
    "login": "nlordell",
    "id": 4210206,
    "node_id": "MDQ6VXNlcjQyMTAyMDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4210206?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nlordell",
    "html_url": "https://github.com/nlordell",
    "followers_url": "https://api.github.com/users/nlordell/followers",
    "following_url": "https://api.github.com/users/nlordell/following{/other_user}",
    "gists_url": "https://api.github.com/users/nlordell/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nlordell/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nlordell/subscriptions",
    "organizations_url": "https://api.github.com/users/nlordell/orgs",
    "repos_url": "https://api.github.com/users/nlordell/repos",
    "events_url": "https://api.github.com/users/nlordell/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nlordell/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 947232611,
      "node_id": "MDU6TGFiZWw5NDcyMzI2MTE=",
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/labels/type:feature",
      "name": "type:feature",
      "color": "FBCA04",
      "default": false,
      "description": "Feature request"
    }
  ],
  "state": "closed",
  "locked": true,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2021-03-26T10:04:15Z",
  "updated_at": "2022-11-18T18:26:11Z",
  "closed_at": "2021-06-17T12:29:22Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": "resolved",
  "body": "### Summary\r\n\r\n`CREATE2` is great an allows contracts to be deployed at deterministic addresses. The mechanism for determining the contract address, however, mixes in the contract bytecode hash. This makes it impossible to use a Waffle `MockContract`, for example, in order to mock interactions with contracts at `CREATE2` addresses. If there were a way to set code at a specific address (this would rely on `ethereumjs-vm` supporting such a feature), then you could set the code at the `CREATE2` address to be a mock contract, and easily unit test interactions with mocked responses.\r\n\r\n### Example\r\n\r\nSo, to illustrate where this could be useful, for example, consider a simple contract that interacts with a Uniswap V2 pair:\r\n```solidity\r\ncontract Foo {\r\n    function bar(IERC20 tokenA, IERC20 tokenB) external {\r\n        IUniswapV2Pair pair = pairFor(tokenA, tokenB);\r\n        // Do stuff with `pair`...\r\n    }\r\n\r\n    function pairFor(IERC20 tokenA, IERC20 tokenB) private returns (IUniswapV2Pair pair) {\r\n        // compute `CREATE2` address ...\r\n    }\r\n}\r\n```\r\n\r\nNow, if we want to use a mocked pair instance, one way to do it currently is to use function overloading:\r\n```solidity\r\ncontract Foo {\r\n    // ...\r\n    function pairFor(IERC20 tokenA, IERC20 tokenB) internal virtual returns (IUniswapV2Pair pair)\r\n    // ...\r\n}\r\n\r\ncontract FooTest is Foo {\r\n    address private immutable mock;\r\n    constructor(address mock_) {\r\n        mock = mock_;\r\n    }\r\n    function pairFor(IERC20 tokenA, IERC20 tokenB) private override returns (IUniswapV2Pair pair) {\r\n        return IUniswapV2Pair(mock);\r\n    }\r\n}\r\n```\r\n\r\nWe would then use `FooTest` for unit testing our `Foo` contract, allowing us to mock `UniswapV2Pair` contract calls.\r\n\r\nThis however, is cumbersome, and this workaround isn't always possible (for example if the `CREATE2` address is being computed in a library).\r\n\r\nIMO a better solution would be to allow setting code at a specific address (again, assuming that this is supported by `ethereumjs-vm`). This would allow us to write test code with mocked contracts without any code changes. Something like:\r\n```ts\r\ndescribe(\"Foo\", () => {\r\n  it(\"interacts with Uniswap pair\", async () => {\r\n    const [tokenA, tokenB] = ...\r\n    const foo = await ethers.getContractFactory(\"Foo\").then(factory => factory.deploy());\r\n    const mockPair = await waffle.deployMockedContractAt(\r\n      deployer,\r\n      pairFor(tokenA, tokenB),\r\n      UNISWAP_PAIR_ABI,\r\n    );\r\n    \r\n    await mockPair.mock...\r\n    await expect(foo.bar(tokenA, tokenB)).to.not.be.reverted;\r\n  });\r\n});\r\n```\r\n\r\nAgain, this would rely on whether or not the Ethereum VM implementation allows this, but I think this could be a very powerful feature to complement \"impersonate account\".\r\n\r\n### Other Uses\r\n\r\nAnother great use for impersonating account is mainnet forking. This can be powerful in those situations as well. Off the top of my head, I can imagine a situation where you would like to validate a fix to some code. Using a mainnet for, modified contract code could \"replace\" an existing mainnet contract, and a transaction can be replayed with the code modification to see how the modified behaviour would play out.",
  "closed_by": {
    "login": "fvictorio",
    "id": 417134,
    "node_id": "MDQ6VXNlcjQxNzEzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fvictorio",
    "html_url": "https://github.com/fvictorio",
    "followers_url": "https://api.github.com/users/fvictorio/followers",
    "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
    "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
    "organizations_url": "https://api.github.com/users/fvictorio/orgs",
    "repos_url": "https://api.github.com/users/fvictorio/repos",
    "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fvictorio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1355/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 2,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1355/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/809748710",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1355#issuecomment-809748710",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1355",
    "id": 809748710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTc0ODcxMA==",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-29T22:15:45Z",
    "updated_at": "2021-03-29T22:15:45Z",
    "author_association": "MEMBER",
    "body": "We want to add a `hardhat_setCode` RPC method for changing the code of a deployed contract, would that be enough or do you think something else would be needed to satisfy your use case?",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/809748710/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/809936985",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1355#issuecomment-809936985",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1355",
    "id": 809936985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTkzNjk4NQ==",
    "user": {
      "login": "nlordell",
      "id": 4210206,
      "node_id": "MDQ6VXNlcjQyMTAyMDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4210206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nlordell",
      "html_url": "https://github.com/nlordell",
      "followers_url": "https://api.github.com/users/nlordell/followers",
      "following_url": "https://api.github.com/users/nlordell/following{/other_user}",
      "gists_url": "https://api.github.com/users/nlordell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nlordell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nlordell/subscriptions",
      "organizations_url": "https://api.github.com/users/nlordell/orgs",
      "repos_url": "https://api.github.com/users/nlordell/repos",
      "events_url": "https://api.github.com/users/nlordell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nlordell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-30T06:04:19Z",
    "updated_at": "2021-03-30T06:04:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "That would. Would `hardhat_setCode` allow setting code for any address or only addresses that already contain code?",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/809936985/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/810292716",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1355#issuecomment-810292716",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1355",
    "id": 810292716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMDI5MjcxNg==",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-30T14:12:53Z",
    "updated_at": "2021-03-30T14:12:53Z",
    "author_association": "MEMBER",
    "body": "> That would. Would `hardhat_setCode` allow setting code for any address or only addresses that already contain code?\r\n\r\nThat's something we discussed. We can do both, it's a question of what is better.\r\n\r\nAllowing this for any address is more flexible, but limiting it to address with code would help catch errors where you think the address is a contract but it isn't.\r\n\r\nOther options are:\r\n\r\n- Allow in any address, but print a warning if the address didn't already have code.\r\n- Disallow setting code for addresses without code, but accept an optional argument (like `{ force: true }`) that lets you do this.\r\n\r\nI'm inclined to just accept any address and let it be, tbh.",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/810292716/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/810293679",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1355#issuecomment-810293679",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1355",
    "id": 810293679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMDI5MzY3OQ==",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-30T14:13:53Z",
    "updated_at": "2021-03-30T14:13:53Z",
    "author_association": "MEMBER",
    "body": "Maybe the best option is to allow this for any address and to always print a message like:\r\n\r\n```\r\nCode in address 0x123... was updated. It had 123 bytes and now it has 234 bytes\r\n```\r\n\r\n(That message is terrible, but you get the idea)",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/810293679/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/810896972",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1355#issuecomment-810896972",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1355",
    "id": 810896972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMDg5Njk3Mg==",
    "user": {
      "login": "nlordell",
      "id": 4210206,
      "node_id": "MDQ6VXNlcjQyMTAyMDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4210206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nlordell",
      "html_url": "https://github.com/nlordell",
      "followers_url": "https://api.github.com/users/nlordell/followers",
      "following_url": "https://api.github.com/users/nlordell/following{/other_user}",
      "gists_url": "https://api.github.com/users/nlordell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nlordell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nlordell/subscriptions",
      "organizations_url": "https://api.github.com/users/nlordell/orgs",
      "repos_url": "https://api.github.com/users/nlordell/repos",
      "events_url": "https://api.github.com/users/nlordell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nlordell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-31T08:52:39Z",
    "updated_at": "2021-03-31T08:53:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think any of these solutions would satisfy my use-case. My personal favourite would be:\r\n> Disallow setting code for addresses without code, but accept an optional argument (like { force: true }) that lets you do this.\r\n\r\nAs it would raise exceptions in situations where you're trying to set code in the wrong place, but still being very flexible for the cases where you need contracts at arbitrary addresses.\r\n\r\nA fun question: what would happen if you tried to set code at address 0 or at a precompile address? :rofl: ",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/810896972/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/843400209",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1355#issuecomment-843400209",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1355",
    "id": 843400209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MzQwMDIwOQ==",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-18T17:49:11Z",
    "updated_at": "2021-05-18T17:49:11Z",
    "author_association": "MEMBER",
    "body": "Related: #1435",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/843400209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/863197402",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1355#issuecomment-863197402",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1355",
    "id": 863197402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzE5NzQwMg==",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-17T12:29:22Z",
    "updated_at": "2021-06-17T12:29:22Z",
    "author_association": "MEMBER",
    "body": "We just released Hardhat [2.4.0](https://github.com/nomiclabs/hardhat/releases/tag/hardhat-core-v2.4.0), which includes the `hardhat_setCode` RPC method.",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/863197402/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
