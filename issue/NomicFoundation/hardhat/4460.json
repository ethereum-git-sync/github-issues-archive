{
  "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4460",
  "repository_url": "https://api.github.com/repos/NomicFoundation/hardhat",
  "labels_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4460/labels{/name}",
  "comments_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4460/comments",
  "events_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4460/events",
  "html_url": "https://github.com/NomicFoundation/hardhat/issues/4460",
  "id": 1934625965,
  "node_id": "I_kwDOB7jojM5zUAyt",
  "number": 4460,
  "title": "Bug: `npx hardhat flatten` for special characters in comments",
  "user": {
    "login": "pcaversaccio",
    "id": 25297591,
    "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pcaversaccio",
    "html_url": "https://github.com/pcaversaccio",
    "followers_url": "https://api.github.com/users/pcaversaccio/followers",
    "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
    "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
    "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
    "repos_url": "https://api.github.com/users/pcaversaccio/repos",
    "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4937119027,
      "node_id": "LA_kwDOB7jojM8AAAABJkZ1Mw",
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/labels/status:triaging",
      "name": "status:triaging",
      "color": "0E8A16",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "ChristopherDedominici",
    "id": 18092467,
    "node_id": "MDQ6VXNlcjE4MDkyNDY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/18092467?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ChristopherDedominici",
    "html_url": "https://github.com/ChristopherDedominici",
    "followers_url": "https://api.github.com/users/ChristopherDedominici/followers",
    "following_url": "https://api.github.com/users/ChristopherDedominici/following{/other_user}",
    "gists_url": "https://api.github.com/users/ChristopherDedominici/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ChristopherDedominici/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ChristopherDedominici/subscriptions",
    "organizations_url": "https://api.github.com/users/ChristopherDedominici/orgs",
    "repos_url": "https://api.github.com/users/ChristopherDedominici/repos",
    "events_url": "https://api.github.com/users/ChristopherDedominici/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ChristopherDedominici/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "ChristopherDedominici",
      "id": 18092467,
      "node_id": "MDQ6VXNlcjE4MDkyNDY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/18092467?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChristopherDedominici",
      "html_url": "https://github.com/ChristopherDedominici",
      "followers_url": "https://api.github.com/users/ChristopherDedominici/followers",
      "following_url": "https://api.github.com/users/ChristopherDedominici/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChristopherDedominici/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChristopherDedominici/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChristopherDedominici/subscriptions",
      "organizations_url": "https://api.github.com/users/ChristopherDedominici/orgs",
      "repos_url": "https://api.github.com/users/ChristopherDedominici/repos",
      "events_url": "https://api.github.com/users/ChristopherDedominici/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChristopherDedominici/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-10-10T07:44:45Z",
  "updated_at": "2023-10-10T07:45:45Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Version of Hardhat\r\n\r\n`2.18.0`\r\n\r\n### What happened?\r\n\r\nMinimal repro:\r\nRun `npx hardhat flatten ./contracts/Create2Deployer.sol > flat.sol` using my repo [here](https://github.com/pcaversaccio/create2deployer). \r\n\r\nThe `Create.sol` util by OZ will be flattened like this:\r\n\r\n```sol\r\nfunction computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\r\n    /// @solidity memory-safe-assembly\r\n    assembly {\r\n        let ptr := mload(0x40) // Get free memory pointer\r\n\r\n        // |                   | Γåô ptr ...  Γåô ptr + 0x0B (start) ...  Γåô ptr + 0x20 ...  Γåô ptr + 0x40 ...   |\r\n        // |-------------------|---------------------------------------------------------------------------|\r\n        // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\r\n        // | salt              |                                      BBBBBBBBBBBBB...BB                   |\r\n        // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\r\n        // | 0xFF              |            FF                                                             |\r\n        // |-------------------|---------------------------------------------------------------------------|\r\n        // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\r\n        // | keccak(start, 85) |            ΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæΓåæ |\r\n\r\n        mstore(add(ptr, 0x40), bytecodeHash)\r\n        mstore(add(ptr, 0x20), salt)\r\n        mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\r\n        let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\r\n        mstore8(start, 0xff)\r\n        addr := keccak256(start, 85)\r\n    }\r\n}\r\n```\r\n\r\nInstead of:\r\n\r\n```sol\r\nfunction computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\r\n    /// @solidity memory-safe-assembly\r\n    assembly {\r\n        let ptr := mload(0x40) // Get free memory pointer\r\n\r\n        // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\r\n        // |-------------------|---------------------------------------------------------------------------|\r\n        // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\r\n        // | salt              |                                      BBBBBBBBBBBBB...BB                   |\r\n        // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\r\n        // | 0xFF              |            FF                                                             |\r\n        // |-------------------|---------------------------------------------------------------------------|\r\n        // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\r\n        // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\r\n\r\n        mstore(add(ptr, 0x40), bytecodeHash)\r\n        mstore(add(ptr, 0x20), salt)\r\n        mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\r\n        let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\r\n        mstore8(start, 0xff)\r\n        addr := keccak256(start, 85)\r\n    }\r\n}\r\n```\r\n\r\nIt seems like flattening has issues with special characters like `↑` or `↓`.\r\n\r\n### Minimal reproduction steps\r\n\r\nSee above.\r\n\r\n### Search terms\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4460/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4460/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
