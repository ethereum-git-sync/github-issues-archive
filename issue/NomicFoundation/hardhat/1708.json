{
  "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1708",
  "repository_url": "https://api.github.com/repos/NomicFoundation/hardhat",
  "labels_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1708/labels{/name}",
  "comments_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1708/comments",
  "events_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1708/events",
  "html_url": "https://github.com/NomicFoundation/hardhat/issues/1708",
  "id": 949664252,
  "node_id": "MDU6SXNzdWU5NDk2NjQyNTI=",
  "number": 1708,
  "title": "Automatic getter for mappings returns an array when mapping to structs",
  "user": {
    "login": "LuisHPorras",
    "id": 10003862,
    "node_id": "MDQ6VXNlcjEwMDAzODYy",
    "avatar_url": "https://avatars.githubusercontent.com/u/10003862?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/LuisHPorras",
    "html_url": "https://github.com/LuisHPorras",
    "followers_url": "https://api.github.com/users/LuisHPorras/followers",
    "following_url": "https://api.github.com/users/LuisHPorras/following{/other_user}",
    "gists_url": "https://api.github.com/users/LuisHPorras/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/LuisHPorras/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/LuisHPorras/subscriptions",
    "organizations_url": "https://api.github.com/users/LuisHPorras/orgs",
    "repos_url": "https://api.github.com/users/LuisHPorras/repos",
    "events_url": "https://api.github.com/users/LuisHPorras/events{/privacy}",
    "received_events_url": "https://api.github.com/users/LuisHPorras/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": true,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-07-21T12:38:42Z",
  "updated_at": "2022-11-18T16:55:20Z",
  "closed_at": "2021-07-21T12:48:09Z",
  "author_association": "NONE",
  "active_lock_reason": "resolved",
  "body": "## Description\r\n- Public mapping from uint to struct inside a smart contract e.g. mapping(uint16 => BadgeInfo) public badgesById\r\n- When using the automatically generated getter the result of calling the method is an Array with duplicated info instead of an Object\r\n\r\n## Code\r\n### Smart contract\r\n[Link to file](https://github.com/LuisHPorras/web3-server/blob/smart-contracts/test/badge-test.js)\r\n```solidity\r\n// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\nimport \"hardhat/console.sol\";\r\n\r\ncontract Badge {\r\n\r\n  address public owner = msg.sender;\r\n  uint16 currentId = 0;\r\n  struct BadgeInfo{\r\n    uint16 id;\r\n    address issuer;\r\n    string issuerName;\r\n    address recipient;\r\n    string recipientName;\r\n  }\r\n  mapping(uint16 => BadgeInfo) public badgesById;\r\n  event BadgeIssued(uint16 id, string issuerName, string recipientName);\r\n\r\n  function issue(string memory _issuerName, address _recipient, string memory _recipientName) public {\r\n    badgesById[currentId] = BadgeInfo({\r\n      id: currentId,\r\n      issuer: msg.sender,\r\n      issuerName: _issuerName,\r\n      recipient: _recipient,\r\n      recipientName: _recipientName\r\n    });\r\n\r\n    emit BadgeIssued(badgesById[currentId].id, badgesById[currentId].issuerName, badgesById[currentId].recipientName);\r\n\r\n    currentId++;\r\n  }\r\n}\r\n```\r\n### Test \r\n[Link to file](https://github.com/LuisHPorras/web3-server/blob/smart-contracts/contracts/Badge.sol)\r\n```javascript\r\nconst { expect } = require(\"chai\");\r\n\r\ndescribe(\"Badge contract\", function () {\r\n\r\n  let owner;\r\n  let issuer;\r\n  let recipient;\r\n  let badgeInfo;\r\n\r\n  let Badge;\r\n  let badge;\r\n\r\n  before( async function () {\r\n\r\n    // Save account addresses once to use in each test \r\n    const accounts = await ethers.getSigners();\r\n    owner = accounts[0];\r\n    issuer = accounts[1];\r\n    recipient = accounts[2];\r\n\r\n    // Badge info to use\r\n    badgeInfo = {\r\n      id: 0,\r\n      issuer: issuer.address,\r\n      issuerName: \"Ivan Illich\",\r\n      recipient: recipient.address,\r\n      recipientName: \"Gustavo Esteva\"\r\n    };\r\n\r\n  });\r\n\r\n  beforeEach( async function () {\r\n    \r\n    // Deploy fresh contract before each test\r\n    Badge = await ethers.getContractFactory(\"Badge\");\r\n    badge = await Badge.deploy();\r\n    await badge.deployed();\r\n\r\n  });\r\n\r\n  // (...)\r\n\r\n  it(\"Should return a badge\", async function () {\r\n\r\n      await badge.issue(badgeInfo.issuerName, badgeInfo.recipient, badgeInfo.recipientName);\r\n\r\n      const badgeResult = await badge.badgesById(badgeInfo.id);\r\n      console.log(badgeResult);\r\n\r\n      expect(badgeResult).to.deep.equal(badgeInfo);\r\n\r\n    });\r\n  });\r\n});\r\n\r\n```\r\n\r\n## Output\r\n```\r\n$ npx hardhat test\r\n\r\n\r\n  Badge contract\r\n    Deployment\r\n      ✓ Should set the right owner\r\n    Issuing\r\n      ✓ Should emit a badge issued event (46ms)\r\n[\r\n  0,\r\n  '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\r\n  'Ivan Illich',\r\n  '0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC',\r\n  'Gustavo Esteva',\r\n  id: 0,\r\n  issuer: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\r\n  issuerName: 'Ivan Illich',\r\n  recipient: '0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC',\r\n  recipientName: 'Gustavo Esteva'\r\n]\r\n      1) Should return a badge\r\n\r\n\r\n  2 passing (666ms)\r\n  1 failing\r\n\r\n  1) Badge contract\r\n       Issuing\r\n         Should return a badge:\r\n     AssertionError: expected [ Array(5) ] to deeply equal { Object (id, issuer, ...) }\r\n      at Context.<anonymous> (test/badge-test.js:67:35)\r\n      at processTicksAndRejections (internal/process/task_queues.js:95:5)\r\n      at runNextTicks (internal/process/task_queues.js:64:3)\r\n      at listOnTimeout (internal/timers.js:526:9)\r\n      at processTimers (internal/timers.js:500:7)\r\n```\r\n\r\n\r\n## Steps to reproduce\r\n1.- Clone the repo & switch to smart-contracts branch\r\n```bash\r\ngit clone https://github.com/luishporras/web3-server\r\ngit checkout smart-contracts\r\n```\r\n2.- Install deps and run tests\r\n```bash\r\nnpm install\r\nnpx hardhat test\r\n```\r\n\r\n## Gratitude\r\nThanks in advance and excuse me if it's my fault and I'm not seeing the bug.\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "fvictorio",
    "id": 417134,
    "node_id": "MDQ6VXNlcjQxNzEzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fvictorio",
    "html_url": "https://github.com/fvictorio",
    "followers_url": "https://api.github.com/users/fvictorio/followers",
    "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
    "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
    "organizations_url": "https://api.github.com/users/fvictorio/orgs",
    "repos_url": "https://api.github.com/users/fvictorio/repos",
    "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fvictorio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1708/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1708/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/884162426",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1708#issuecomment-884162426",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1708",
    "id": 884162426,
    "node_id": "IC_kwDOB7jojM40sz96",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-21T12:48:09Z",
    "updated_at": "2021-07-21T12:48:09Z",
    "author_association": "MEMBER",
    "body": "That's actually how ethers.js works. If you have a struct like this:\r\n\r\n```solidity\r\nstruct Point {\r\n  uint x;\r\n  uint y;\r\n}\r\n```\r\n\r\nAnd you get a value of that type in ethers, then you get something that you can use both as an object and as an array. That is, assume you get a `Point(1,2)` in your test. Then:\r\n\r\n```js\r\nconst point = await getPointFromContractSomehow()\r\nassert.equal(point[0], 1)\r\nassert.equal(point[1], 2)\r\nassert.equal(point.x, 1)\r\nassert.equal(point.y, 2)\r\n```\r\n\r\nI'm not sure what's the best practice to assert a result in a test when you have several properties. If I were you, I would just assert each property one by one, since it seems like the simplest approach.\r\n\r\nPlease use [our Discord server](https://hardhat.org/discord) if you have more questions.",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/884162426/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
