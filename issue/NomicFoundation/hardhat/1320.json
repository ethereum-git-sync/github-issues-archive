{
  "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1320",
  "repository_url": "https://api.github.com/repos/NomicFoundation/hardhat",
  "labels_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1320/labels{/name}",
  "comments_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1320/comments",
  "events_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1320/events",
  "html_url": "https://github.com/NomicFoundation/hardhat/issues/1320",
  "id": 828793297,
  "node_id": "MDU6SXNzdWU4Mjg3OTMyOTc=",
  "number": 1320,
  "title": "Hardhat can't infer error when state is modified during a staticcall to a proxied contract",
  "user": {
    "login": "liamzebedee",
    "id": 584141,
    "node_id": "MDQ6VXNlcjU4NDE0MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/584141?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/liamzebedee",
    "html_url": "https://github.com/liamzebedee",
    "followers_url": "https://api.github.com/users/liamzebedee/followers",
    "following_url": "https://api.github.com/users/liamzebedee/following{/other_user}",
    "gists_url": "https://api.github.com/users/liamzebedee/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/liamzebedee/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/liamzebedee/subscriptions",
    "organizations_url": "https://api.github.com/users/liamzebedee/orgs",
    "repos_url": "https://api.github.com/users/liamzebedee/repos",
    "events_url": "https://api.github.com/users/liamzebedee/events{/privacy}",
    "received_events_url": "https://api.github.com/users/liamzebedee/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 947232611,
      "node_id": "MDU6TGFiZWw5NDcyMzI2MTE=",
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/labels/type:feature",
      "name": "type:feature",
      "color": "FBCA04",
      "default": false,
      "description": "Feature request"
    },
    {
      "id": 4937720577,
      "node_id": "LA_kwDOB7jojM8AAAABJk-jAQ",
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/labels/status:ready",
      "name": "status:ready",
      "color": "0E8A16",
      "default": false,
      "description": "This issue is ready to be worked on"
    },
    {
      "id": 4951951046,
      "node_id": "LA_kwDOB7jojM8AAAABJyjGxg",
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/labels/area:error-inferrer",
      "name": "area:error-inferrer",
      "color": "5319E7",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-03-11T06:09:01Z",
  "updated_at": "2023-01-03T09:17:22Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "_Wow, that was a mouthful_ ðŸ˜† \r\n\r\n### Description\r\nI was working with the OpenZeppelin and Synthetix Proxy contracts today, and couldn't figure out why the code kept failing. Eventually I realised that I was calling a view function on a proxy, and the proxy was modifying state, so the call was failing. The current Hardhat (v2.1.11) can't infer this.\r\n\r\n### Steps to reproduce:\r\n\r\n 1. Deploy Proxy.\r\n 2. Deploy TargetImpl.\r\n 3. Call Proxy.setTarget(TargetImpl.address) to setup the proxy to forward to target.\r\n 4. Deploy TargetConsumer.\r\n 5. Call TargetConsumer.test(Proxy.address).\r\n\r\n### Output:\r\n\r\nThe call to `TargetConsumer.test(Proxy.address)` will revert during estimateGas, with an error like:\r\n\r\n> Error: Transaction reverted and Hardhat couldn't infer the reason. Please report this to help us improve Hardhat.\r\n>      at TargetImpl.setMessageSender (contracts/proxy/Proxyable.sol:)\r\n>      at Proxy.<fallback> (contracts/proxy/Proxy.sol:)\r\n>      at TargetConsumer.test (contracts/test/TestProxy.sol:)\r\n\r\n### Expected output\r\n\r\nHardhat says that the function we were calling was `view`, but the staticcall failed as the state was changed in the `TargetImpl.setMessageSender` function.\r\n\r\n### Code\r\n\r\n```solidity\r\ncontract Proxyable {\r\n    address messageSender;\r\n    function setMessageSender(address sender) external {\r\n        messageSender = sender; // THIS WILL REVERT\r\n    }\r\n}\r\n\r\ncontract TargetImpl is Proxyable {\r\n    uint foo = 0;\r\n\r\n    function getFoo()\r\n        external\r\n        view\r\n        return (uint)\r\n    {\r\n        return foo;\r\n    }\r\n}\r\n\r\ncontract TargetConsumer {\r\n    function test(address target) external {\r\n        TargetImpl(target).getFoo();\r\n    }\r\n}\r\n\r\ncontract Proxy {\r\n    Proxyable public target;\r\n\r\n    constructor(address _owner) public {}\r\n    \r\n    function setTarget(Proxyable _target) external {\r\n        target = _target;\r\n        emit TargetUpdated(_target);\r\n    }\r\n\r\n\r\n    fallback() external payable {\r\n        // Mutable call setting Proxyable.messageSender as this is using call not delegatecall\r\n        console.log(\"target=%s msg.sender=%s\", address(target), msg.sender);\r\n        target.setMessageSender(msg.sender);\r\n        console.log(\"delegatecall start\");\r\n\r\n        assembly {\r\n            let free_ptr := mload(0x40)\r\n            calldatacopy(free_ptr, 0, calldatasize())\r\n\r\n            /* We must explicitly forward ether to the underlying contxract as well. */\r\n            let result := call(gas(), sload(target_slot), callvalue(), free_ptr, calldatasize(), 0, 0)\r\n            returndatacopy(free_ptr, 0, returndatasize())\r\n\r\n            if iszero(result) {\r\n                revert(free_ptr, returndatasize())\r\n            }\r\n            return(free_ptr, returndatasize())\r\n        }\r\n    }\r\n\r\n    receive() external payable {\r\n    }\r\n\r\n    event TargetUpdated(Proxyable newTarget);\r\n}\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1320/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1320/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/799381821",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1320#issuecomment-799381821",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1320",
    "id": 799381821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5OTM4MTgyMQ==",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-15T12:31:48Z",
    "updated_at": "2021-03-15T12:32:12Z",
    "author_association": "MEMBER",
    "body": "> Hardhat says that the function we were calling was view, but the staticcall failed as the state was changed in the TargetImpl.setMessageSender function.\r\n\r\nThis seems like a hard thing to do without adding knowledge about proxies to Hardhat, which I'm not sure we want to do (we might, but it's something to discuss). Maybe there's a more generic error we can detect in this scenario and show that? Like detecting a `SSTORE` in the context of a `STATICCALL`?\r\n\r\n@alcuadrado what do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/799381821/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/799398354",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1320#issuecomment-799398354",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1320",
    "id": 799398354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5OTM5ODM1NA==",
    "user": {
      "login": "liamzebedee",
      "id": 584141,
      "node_id": "MDQ6VXNlcjU4NDE0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/584141?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liamzebedee",
      "html_url": "https://github.com/liamzebedee",
      "followers_url": "https://api.github.com/users/liamzebedee/followers",
      "following_url": "https://api.github.com/users/liamzebedee/following{/other_user}",
      "gists_url": "https://api.github.com/users/liamzebedee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liamzebedee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liamzebedee/subscriptions",
      "organizations_url": "https://api.github.com/users/liamzebedee/orgs",
      "repos_url": "https://api.github.com/users/liamzebedee/repos",
      "events_url": "https://api.github.com/users/liamzebedee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liamzebedee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-15T12:58:11Z",
    "updated_at": "2021-03-15T12:58:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fvictorio might not have to add knowledge of proxies, just show the relevant stack trace for where the violating SSTORE occurred? ",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/799398354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/850708478",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1320#issuecomment-850708478",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1320",
    "id": 850708478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDcwODQ3OA==",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-28T22:45:18Z",
    "updated_at": "2021-05-28T22:45:18Z",
    "author_association": "MEMBER",
    "body": "Hey @liamzebedee, sorry for not responding before. My notifications piled up and I missed some issues.\r\n\r\nI think it makes sense to at least investigate this at some point, especially since adding this heuristic to our error inference mechanism doesn't seem too hard. I can't promise we will be able to do it soon, though!",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/850708478/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
