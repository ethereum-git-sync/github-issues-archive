{
  "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/641",
  "repository_url": "https://api.github.com/repos/NomicFoundation/hardhat",
  "labels_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/641/labels{/name}",
  "comments_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/641/comments",
  "events_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/641/events",
  "html_url": "https://github.com/NomicFoundation/hardhat/issues/641",
  "id": 635423755,
  "node_id": "MDU6SXNzdWU2MzU0MjM3NTU=",
  "number": 641,
  "title": "Issues with OpenZeppelin nonReentrant modifier on test",
  "user": {
    "login": "eboadom",
    "id": 22181752,
    "node_id": "MDQ6VXNlcjIyMTgxNzUy",
    "avatar_url": "https://avatars.githubusercontent.com/u/22181752?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/eboadom",
    "html_url": "https://github.com/eboadom",
    "followers_url": "https://api.github.com/users/eboadom/followers",
    "following_url": "https://api.github.com/users/eboadom/following{/other_user}",
    "gists_url": "https://api.github.com/users/eboadom/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/eboadom/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/eboadom/subscriptions",
    "organizations_url": "https://api.github.com/users/eboadom/orgs",
    "repos_url": "https://api.github.com/users/eboadom/repos",
    "events_url": "https://api.github.com/users/eboadom/events{/privacy}",
    "received_events_url": "https://api.github.com/users/eboadom/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": true,
  "assignee": {
    "login": "fvictorio",
    "id": 417134,
    "node_id": "MDQ6VXNlcjQxNzEzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fvictorio",
    "html_url": "https://github.com/fvictorio",
    "followers_url": "https://api.github.com/users/fvictorio/followers",
    "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
    "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
    "organizations_url": "https://api.github.com/users/fvictorio/orgs",
    "repos_url": "https://api.github.com/users/fvictorio/repos",
    "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fvictorio/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-06-09T13:20:22Z",
  "updated_at": "2022-11-18T10:08:34Z",
  "closed_at": "2020-06-09T15:28:53Z",
  "author_association": "NONE",
  "active_lock_reason": "resolved",
  "body": "In a setup with Buidler + ethersjs + Waffle + typechain, I'm trying to run a test file with the following content:\r\n```typescript\r\nimport {evmRevert} from \"../helpers/misc-utils\";\r\nimport {\r\n  TEST_SNAPSHOT_ID,\r\n  APPROVAL_AMOUNT_LENDING_POOL_CORE,\r\n} from \"../helpers/constants\";\r\nimport {AToken} from \"../types/AToken\";\r\nimport {MintableErc20} from \"../types/MintableErc20\";\r\nimport {LendingPool} from \"../types/LendingPool\";\r\nimport {LendingPoolCore} from \"../types/LendingPoolCore\";\r\nimport {\r\n  getAaveProtocolTestHelpers,\r\n  getMintableErc20,\r\n  getAToken,\r\n  convertToCurrencyDecimals,\r\n  getEthersSigners,\r\n  getLendingPoolCore,\r\n  getLendingPool,\r\n} from \"../helpers/contracts-helpers\";\r\nimport {Signer} from \"ethers\";\r\n\r\ndescribe(\"AToken: Transfer\", () => {\r\n  let deployer: Signer;\r\n  let users: Signer[];\r\n  let _aDai: AToken;\r\n  let _dai: MintableErc20;\r\n  let _lendingPool: LendingPool;\r\n  let _lendingPoolCore: LendingPoolCore;\r\n\r\n  before(async () => {\r\n    await evmRevert(TEST_SNAPSHOT_ID);\r\n\r\n    const [_deployer, ..._users] = await getEthersSigners();\r\n    deployer = _deployer;\r\n    users = _users;\r\n\r\n    _lendingPool = await getLendingPool();\r\n    _lendingPoolCore = await getLendingPoolCore();\r\n\r\n    const testHelpers = await getAaveProtocolTestHelpers();\r\n\r\n    const aDaiAddress = (await testHelpers.getAllATokens()).find(\r\n      (aToken) => aToken.symbol === \"aDAI\"\r\n    )?.tokenAddress;\r\n\r\n    const daiAddress = (await testHelpers.getAllReservesTokens()).find(\r\n      (token) => token.symbol === \"DAI\"\r\n    )?.tokenAddress;\r\n    if (!aDaiAddress) {\r\n      console.log(`atoken-modifiers.spec: aDAI not correctly initialized`);\r\n      process.exit(1);\r\n    }\r\n    if (!daiAddress) {\r\n      console.log(`atoken-modifiers.spec: DAI not correctly initialized`);\r\n      process.exit(1);\r\n    }\r\n\r\n    _aDai = await getAToken(aDaiAddress);\r\n    _dai = await getMintableErc20(daiAddress);\r\n  });\r\n\r\n  it(\"User 0 deposits 1000 DAI, transfers to user 1\", async () => {\r\n    await _dai\r\n      .connect(users[0])\r\n      .mint(await convertToCurrencyDecimals(_dai.address, \"1000\"));\r\n\r\n    console.log(_lendingPoolCore.address);\r\n\r\n    await _dai\r\n      .connect(users[0])\r\n      .approve(_lendingPoolCore.address, APPROVAL_AMOUNT_LENDING_POOL_CORE);\r\n\r\n    //user 1 deposits 1000 DAI\r\n    const amountDAItoDeposit = await convertToCurrencyDecimals(\r\n      _dai.address,\r\n      \"1000\"\r\n    );\r\n\r\n    await _lendingPool\r\n      .connect(users[0])\r\n      .deposit(_dai.address, amountDAItoDeposit, \"0\");\r\n  });\r\n});\r\n```\r\n\r\nThe following error appears when calling \r\n```typescript\r\nawait _lendingPool\r\n      .connect(users[0])\r\n      .deposit(_dai.address, amountDAItoDeposit, \"0\");\r\n```\r\n\r\n```\r\nError: VM Exception while processing transaction: revert ReentrancyGuard: reentrant call\r\n      at new TransactionExecutionError (node_modules/@nomiclabs/buidler/src/internal/buidler-evm/provider/errors.ts:93:16)\r\n      at BuidlerNode._manageErrors (node_modules/@nomiclabs/buidler/src/internal/buidler-evm/provider/node.ts:1078:14)\r\n      at BuidlerNode.estimateGas (node_modules/@nomiclabs/buidler/src/internal/buidler-evm/provider/node.ts:605:27)\r\n      at runMicrotasks (<anonymous>)\r\n      at processTicksAndRejections (internal/process/task_queues.js:97:5)\r\n      at EthModule._estimateGasAction (node_modules/@nomiclabs/buidler/src/internal/buidler-evm/provider/modules/eth.ts:388:9)\r\n      at BuidlerEVMProvider.send (node_modules/@nomiclabs/buidler/src/internal/buidler-evm/provider/provider.ts:82:14)\r\n      at EthersProviderWrapper.send (node_modules/@nomiclabs/buidler-ethers/src/ethers-provider-wrapper.ts:13:20)\r\n      at async Promise.all (index 1)\r\n      at async Promise.all (index 0)\r\n```\r\n\r\nBut this can't be related with being attempting a reentrancy on the `LendingPool` contract, as the call to `deposit()` is exactly the same as here https://github.com/aave/aave-protocol/blob/13f00958cfac4eaa916555276d243a8e04d40157/contracts/lendingpool/LendingPool.sol#L299 where there is no nested called to the `LendingPool`\r\n\r\nBefore the execution of this test, there is only a setup phase where all the necessary contracts are deployed and the evm snapshot is done. The only other test in the mocha suite doesn't involve the `LendingPool` contract.",
  "closed_by": {
    "login": "eboadom",
    "id": 22181752,
    "node_id": "MDQ6VXNlcjIyMTgxNzUy",
    "avatar_url": "https://avatars.githubusercontent.com/u/22181752?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/eboadom",
    "html_url": "https://github.com/eboadom",
    "followers_url": "https://api.github.com/users/eboadom/followers",
    "following_url": "https://api.github.com/users/eboadom/following{/other_user}",
    "gists_url": "https://api.github.com/users/eboadom/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/eboadom/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/eboadom/subscriptions",
    "organizations_url": "https://api.github.com/users/eboadom/orgs",
    "repos_url": "https://api.github.com/users/eboadom/repos",
    "events_url": "https://api.github.com/users/eboadom/events{/privacy}",
    "received_events_url": "https://api.github.com/users/eboadom/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/641/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/641/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/641378503",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/641#issuecomment-641378503",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/641",
    "id": 641378503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTM3ODUwMw==",
    "user": {
      "login": "eboadom",
      "id": 22181752,
      "node_id": "MDQ6VXNlcjIyMTgxNzUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/22181752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eboadom",
      "html_url": "https://github.com/eboadom",
      "followers_url": "https://api.github.com/users/eboadom/followers",
      "following_url": "https://api.github.com/users/eboadom/following{/other_user}",
      "gists_url": "https://api.github.com/users/eboadom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eboadom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eboadom/subscriptions",
      "organizations_url": "https://api.github.com/users/eboadom/orgs",
      "repos_url": "https://api.github.com/users/eboadom/repos",
      "events_url": "https://api.github.com/users/eboadom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eboadom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-09T15:28:53Z",
    "updated_at": "2020-06-09T15:28:53Z",
    "author_association": "NONE",
    "body": "It was not a problem with buidler, but with the version of the `ReentrancyGuard` contract we were using because of what was solved here https://github.com/OpenZeppelin/openzeppelin-contracts/pull/2171\r\n\r\nWe were using `\"@openzeppelin/contracts\": \"3.0.1\"` on this new repository, on on that version, the `ReentrancyGuard` doesn't work correctly on our proxied `LendingPool`",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/641378503/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
