{
  "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3798",
  "repository_url": "https://api.github.com/repos/NomicFoundation/hardhat",
  "labels_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3798/labels{/name}",
  "comments_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3798/comments",
  "events_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3798/events",
  "html_url": "https://github.com/NomicFoundation/hardhat/issues/3798",
  "id": 1644305292,
  "node_id": "I_kwDOB7jojM5iAhuM",
  "number": 3798,
  "title": "Delegatecall Fails to Execute Without a Require Success Statement or Return Value",
  "user": {
    "login": "m4k2",
    "id": 94985097,
    "node_id": "U_kgDOBalbiQ",
    "avatar_url": "https://avatars.githubusercontent.com/u/94985097?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/m4k2",
    "html_url": "https://github.com/m4k2",
    "followers_url": "https://api.github.com/users/m4k2/followers",
    "following_url": "https://api.github.com/users/m4k2/following{/other_user}",
    "gists_url": "https://api.github.com/users/m4k2/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/m4k2/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/m4k2/subscriptions",
    "organizations_url": "https://api.github.com/users/m4k2/orgs",
    "repos_url": "https://api.github.com/users/m4k2/repos",
    "events_url": "https://api.github.com/users/m4k2/events{/privacy}",
    "received_events_url": "https://api.github.com/users/m4k2/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 901960538,
      "node_id": "MDU6TGFiZWw5MDE5NjA1Mzg=",
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/labels/type:bug",
      "name": "type:bug",
      "color": "FBCA04",
      "default": false,
      "description": "Something isn't working"
    },
    {
      "id": 4937720577,
      "node_id": "LA_kwDOB7jojM8AAAABJk-jAQ",
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/labels/status:ready",
      "name": "status:ready",
      "color": "0E8A16",
      "default": false,
      "description": "This issue is ready to be worked on"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-03-28T16:32:44Z",
  "updated_at": "2023-07-12T10:07:58Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Version of Hardhat\n\n2.13\n\n### What happened?\n\n## Delegatecall in Hardhat network \r\n\r\nThis issue pertains to the local network offered by Hardhat and specifically addresses the behavior of a function incorporating a delegatecall. The delegatecall fails to execute when it neither returns a value nor contains a successful require statement.\n\n### Minimal reproduction steps\n\nIn this scenario, a function from Contract A utilizes a delegatecall to Contract B with the data: 0x95f11c0e (selector for pwned() function). The pwned() function does not return a value, and the delegatecall in Contract A lacks a require statement to ensure success. The primary purpose of this function is to overwrite values in Contract A by executing the pwned() function in Contract B.\r\n\r\nThis situation is demonstrated in the examples below:\r\n\r\nExample 1:\r\n\r\n\r\n```\r\nfunction __delge() public returns (bool){\r\n    (bool success, ) = address(attack).delegatecall(\r\n        abi.encodeWithSelector(0x95f11c0e)\r\n    );\r\n\r\n    require(success);\r\n    return success;\r\n}\r\n```\r\n\r\nExample 2:\r\n\r\n```\r\n\r\nfunction __delge() public returns (bool){\r\n    address(attack).delegatecall(\r\n        abi.encodeWithSelector(0x95f11c0e)\r\n    );\r\n}\r\n```\r\n\r\nIn the first example, the delegatecall is successful because the require statement ensures that it is successful before returning a boolean value.\r\n\r\nIn contrast, the second example does not have a require statement to ensure the success of the delegatecall. Therefore, the delegatecall does not execute, and the function returns without any effect.\n\n### Search terms\n\n_No response_",
  "closed_by": {
    "login": "fvictorio",
    "id": 417134,
    "node_id": "MDQ6VXNlcjQxNzEzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fvictorio",
    "html_url": "https://github.com/fvictorio",
    "followers_url": "https://api.github.com/users/fvictorio/followers",
    "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
    "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
    "organizations_url": "https://api.github.com/users/fvictorio/orgs",
    "repos_url": "https://api.github.com/users/fvictorio/repos",
    "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fvictorio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3798/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3798/timeline",
  "performed_via_github_app": null,
  "state_reason": "reopened"
}
[
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1495628702",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/3798#issuecomment-1495628702",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3798",
    "id": 1495628702,
    "node_id": "IC_kwDOB7jojM5ZJXue",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-04T09:17:27Z",
    "updated_at": "2023-04-04T09:17:27Z",
    "author_association": "MEMBER",
    "body": "Hi @m4k2. If I'm understanding correctly, you are saying that the delegate call in the second example has no effect because the returned value is not checked. This is very unlikely, and I couldn't reproduce it. This is what I did:\r\n\r\n```solidity\r\ncontract Delegator {\r\n  uint public x = 1;\r\n\r\n  function delegateCall(address bar) public {\r\n    bar.delegatecall(abi.encodeWithSelector(0x95f11c0e));\r\n  }\r\n}\r\n\r\ncontract Delegated {\r\n  uint x;\r\n\r\n  function pwned() public {\r\n    x++;\r\n  }\r\n}\r\n```\r\n\r\nThen I called `delegateCall` with the address of a deployed `Delegated` contract, and verified that the state of `Delegator` changed.\r\n\r\nPlease create a full, reproducible example if you still think this is an issue in Hardhat. I'm going to tentatively close this, but I'll re-open it if you can provide a full example.",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1495628702/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1504886842",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/3798#issuecomment-1504886842",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3798",
    "id": 1504886842,
    "node_id": "IC_kwDOB7jojM5ZssA6",
    "user": {
      "login": "m4k2",
      "id": 94985097,
      "node_id": "U_kgDOBalbiQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/94985097?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m4k2",
      "html_url": "https://github.com/m4k2",
      "followers_url": "https://api.github.com/users/m4k2/followers",
      "following_url": "https://api.github.com/users/m4k2/following{/other_user}",
      "gists_url": "https://api.github.com/users/m4k2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m4k2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m4k2/subscriptions",
      "organizations_url": "https://api.github.com/users/m4k2/orgs",
      "repos_url": "https://api.github.com/users/m4k2/repos",
      "events_url": "https://api.github.com/users/m4k2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m4k2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-12T08:39:27Z",
    "updated_at": "2023-04-13T08:44:00Z",
    "author_association": "NONE",
    "body": "# This is a full reproductible example : \r\n\r\n## The .sol file : \r\n```js\r\npragma solidity ^0.8;\r\n\r\ncontract B{\r\n\r\n    uint public timeStamp;\r\n    function pwned() public{\r\n        timeStamp = block.timestamp;\r\n    }\r\n\r\n    fallback() external{}\r\n}\r\n\r\ncontract A{\r\n    \r\n    uint public slotOverride;\r\n    B b;\r\n\r\n    constructor(){\r\n        b = new B();\r\n    }\r\n\r\n    function delegate_1() public{  //simple delegate\r\n        address(b).delegatecall(abi.encodeWithSelector(0x95f11c0e));\r\n    }\r\n\r\n    function delegate_2() public{ //delegate with bool success\r\n        (bool success,) = address(b).delegatecall(abi.encodeWithSelector(0x95f11c0e));\r\n    }\r\n\r\n    function delegate_3() public{ //delegate with require success\r\n        (bool success,) = address(b).delegatecall(abi.encodeWithSelector(0x95f11c0e));\r\n        require(success);\r\n    }\r\n\r\n    function delegate_4() public returns(bool){ //delegate with return success\r\n        (bool success, ) = address(b).delegatecall(abi.encodeWithSelector(0x95f11c0e));\r\n\r\n        return success;\r\n    }\r\n\r\n    function delegate_5() public returns(bool){ //delegate with require + return : success\r\n        (bool success, ) = address(b).delegatecall(\r\n            abi.encodeWithSelector(0x95f11c0e)\r\n        );\r\n        \r\n        require(success);\r\n        return success;\r\n    }\r\n}\r\n```\r\n\r\n## The Hardhat scripts/deploy.js : \r\n```js\r\n// We require the Hardhat Runtime Environment explicitly here. This is optional\r\n// but useful for running the script in a standalone fashion through `node <script>`.\r\n//\r\n// You can also run a script with `npx hardhat run <script>`. If you do that, Hardhat\r\n// will compile your contracts, add the Hardhat Runtime Environment's members to the\r\n// global scope, and execute the script.\r\nconst hre = require(\"hardhat\");\r\n\r\nasync function main() {\r\n\r\n  const A = await hre.ethers.getContractFactory(\"A\");\r\n  const a = await A.deploy();\r\n\r\n  await a.deployed();\r\n\r\n  // Doesn't work properly\r\n  await a.delegate_1() //simple delegate\r\n  console.log(await a.slotOverride());\r\n\r\n  // Doesn't work properly\r\n  await a.delegate_2() //delegate with bool success\r\n  console.log(await a.slotOverride());\r\n\r\n  // Work's well\r\n  await a.delegate_3() //delegate with require success\r\n  console.log(await a.slotOverride());\r\n\r\n  // Work's well\r\n  await a.delegate_4() //delegate with return success\r\n  console.log(await a.slotOverride());\r\n\r\n  // Work's well\r\n  await a.delegate_5() //delegate with (require + return) success\r\n  console.log(await a.slotOverride());\r\n}\r\n\r\n// We recommend this pattern to be able to use async/await everywhere\r\n// and properly handle errors.\r\nmain().catch((error) => {\r\n  console.error(error);\r\n  process.exitCode = 1;\r\n});\r\n```\r\n\r\n## CMDs\r\n\r\n```bash\r\nnpx hardhat node\r\n```\r\n\r\n```bash \r\nnpx hardhat run --network localhost scripts/deploy.js\r\n```\r\n\r\n## Return values\r\n\r\n```bash\r\nBigNumber { value: \"0\" }\r\nBigNumber { value: \"0\" }\r\nBigNumber { value: \"1681288070\" }\r\nBigNumber { value: \"1681288071\" }\r\nBigNumber { value: \"1681288072\" }\r\n```\r\n\r\n# Conclusion\r\n\r\nIt has been noted that the `delegate_1()` and `delegate_2()` functions are not operating as expected, as they are unable to overwrite Contract A's first slot during the DelegateCall process. \r\n\r\nThe delegate call may not execute if there is no 'require' statement or if the success boolean is not returned.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1504886842/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1527199088",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/3798#issuecomment-1527199088",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3798",
    "id": 1527199088,
    "node_id": "IC_kwDOB7jojM5bBzVw",
    "user": {
      "login": "m4k2",
      "id": 94985097,
      "node_id": "U_kgDOBalbiQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/94985097?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m4k2",
      "html_url": "https://github.com/m4k2",
      "followers_url": "https://api.github.com/users/m4k2/followers",
      "following_url": "https://api.github.com/users/m4k2/following{/other_user}",
      "gists_url": "https://api.github.com/users/m4k2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m4k2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m4k2/subscriptions",
      "organizations_url": "https://api.github.com/users/m4k2/orgs",
      "repos_url": "https://api.github.com/users/m4k2/repos",
      "events_url": "https://api.github.com/users/m4k2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m4k2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-28T08:41:41Z",
    "updated_at": "2023-04-28T08:41:41Z",
    "author_association": "NONE",
    "body": "@fvictorio, please feel free to ask me if you require any further information :).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1527199088/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1540930088",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/3798#issuecomment-1540930088",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3798",
    "id": 1540930088,
    "node_id": "IC_kwDOB7jojM5b2Loo",
    "user": {
      "login": "t4sk",
      "id": 8084705,
      "node_id": "MDQ6VXNlcjgwODQ3MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8084705?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/t4sk",
      "html_url": "https://github.com/t4sk",
      "followers_url": "https://api.github.com/users/t4sk/followers",
      "following_url": "https://api.github.com/users/t4sk/following{/other_user}",
      "gists_url": "https://api.github.com/users/t4sk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/t4sk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/t4sk/subscriptions",
      "organizations_url": "https://api.github.com/users/t4sk/orgs",
      "repos_url": "https://api.github.com/users/t4sk/repos",
      "events_url": "https://api.github.com/users/t4sk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/t4sk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T21:43:49Z",
    "updated_at": "2023-05-09T21:43:49Z",
    "author_association": "NONE",
    "body": "I had a similar problem.  In my case, `call` didn't update state without a `require` success check.\r\n\r\nUsing `ethers.ContractFactory` was causing this problem. \r\nhttps://github.com/t4sk/hardhat-bug/blob/6281aee01b568c47007fff063445ce523abc8f17/test/Call.js#L16-L20\r\n\r\nUsing `await ethers.getContractFactory` fixed it.\r\nhttps://github.com/t4sk/hardhat-bug/blob/6281aee01b568c47007fff063445ce523abc8f17/test/Call.js#L22-L27\r\n\r\nSee here for full code\r\nhttps://github.com/t4sk/hardhat-bug/blob/main/test/Call.js\r\n\r\nThis might be a bug with ethers.js or hardhat?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1540930088/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1584203689",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/3798#issuecomment-1584203689",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3798",
    "id": 1584203689,
    "node_id": "IC_kwDOB7jojM5ebQep",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-09T08:46:00Z",
    "updated_at": "2023-06-09T08:46:00Z",
    "author_association": "MEMBER",
    "body": "Hey @m4k2, sorry for not responding before and thanks for the great reproduction steps.\r\n\r\nI'm pretty sure this is a bug in Hardhat, not ethers, because I also reproduced it using raw JSON-RPC calls.",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1584203689/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
