{
  "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3506",
  "repository_url": "https://api.github.com/repos/NomicFoundation/hardhat",
  "labels_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3506/labels{/name}",
  "comments_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3506/comments",
  "events_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3506/events",
  "html_url": "https://github.com/NomicFoundation/hardhat/issues/3506",
  "id": 1515103675,
  "node_id": "I_kwDOB7jojM5aTqW7",
  "number": 3506,
  "title": "Inconsistent reverts",
  "user": {
    "login": "kyriediculous",
    "id": 22256858,
    "node_id": "MDQ6VXNlcjIyMjU2ODU4",
    "avatar_url": "https://avatars.githubusercontent.com/u/22256858?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kyriediculous",
    "html_url": "https://github.com/kyriediculous",
    "followers_url": "https://api.github.com/users/kyriediculous/followers",
    "following_url": "https://api.github.com/users/kyriediculous/following{/other_user}",
    "gists_url": "https://api.github.com/users/kyriediculous/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kyriediculous/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kyriediculous/subscriptions",
    "organizations_url": "https://api.github.com/users/kyriediculous/orgs",
    "repos_url": "https://api.github.com/users/kyriediculous/repos",
    "events_url": "https://api.github.com/users/kyriediculous/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kyriediculous/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4937119027,
      "node_id": "LA_kwDOB7jojM8AAAABJkZ1Mw",
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/labels/status:triaging",
      "name": "status:triaging",
      "color": "0E8A16",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": true,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-12-31T11:58:57Z",
  "updated_at": "2023-04-04T00:14:30Z",
  "closed_at": "2023-01-02T14:44:20Z",
  "author_association": "NONE",
  "active_lock_reason": "resolved",
  "body": "I have recently upgraded our repository to Hardhat v2.12.4, since upgrading I'm noticing some weird inconsistencies in even simple unit tests. \r\n\r\nMy current last struggle is a simple approve/transferFrom unit test.\r\n\r\n1.A approves 50 tokens to B\r\n2. B tries to transferFrom 100 tokens from A to B\r\n3. Expect revert with message\r\n\r\nThe test works fine when I run the file separately. However when I run the test with other (entirely isolated) unit tests the transaction will **revert state, but not fail**.\r\n\r\n\r\nExcerpt from logging some info before and after the call:\r\n```\r\nAllowance A -> B 50.0\r\nUserA balance before 100.0\r\nUserB balance before 0.0\r\nTx status 1\r\nUserA balance after 100.0\r\nUserB balance after 0.0\r\n```\r\n\r\nWhen I add a `hardhat/console` statement before the `require` statement that's supposed to fail it also works.\r\n\r\nReproducable at this commit: https://github.com/Tenderize/tender-core/blob/ec05e2734751288035fc76d763f4af15c1dce9dd/test/unit/tenderToken.test.ts#L303\r\n\r\nReproduces at this commit on two machines.\r\n\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "fvictorio",
    "id": 417134,
    "node_id": "MDQ6VXNlcjQxNzEzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fvictorio",
    "html_url": "https://github.com/fvictorio",
    "followers_url": "https://api.github.com/users/fvictorio/followers",
    "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
    "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
    "organizations_url": "https://api.github.com/users/fvictorio/orgs",
    "repos_url": "https://api.github.com/users/fvictorio/repos",
    "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fvictorio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3506/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3506/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1369003636",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/3506#issuecomment-1369003636",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3506",
    "id": 1369003636,
    "node_id": "IC_kwDOB7jojM5RmVZ0",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-02T14:44:20Z",
    "updated_at": "2023-01-02T14:44:20Z",
    "author_association": "MEMBER",
    "body": "Hi @kyriediculous, I think the underlying problem here is that smock's mocked functions are not reset when a snapshot is reverted.\r\n\r\nI reduced the problem to a single pair of tests (code included at the end of this comment). Notice that I added two `console.log`s, showing that the address of those two tokens is the same.\r\n\r\nI think the reason why adding a `console.log` to the contract fixed the test was actually because it was triggering [this bug](https://github.com/defi-wonderland/smock/issues/149), which was \"cancelling\" the mocked function.\r\n\r\nI'm not sure what you should do here. Resetting the network seems to clear the mocks, so maybe you can add a `hardhat_reset` after all the tests in that file are run. It's a shitty solution, but might be enough as a temporary workaround. In the meantime, I will open a follow-up issue in the smock repo about this.\r\n\r\nI will close this issue now because I don't think there's much we can do on our side.\r\n\r\n```ts\r\nit(\"reverts if transfer fails\", async () => {\r\n  let snapshotId = await rpc.snapshot();\r\n\r\n  const signers = await ethers.getSigners();\r\n\r\n  const TenderizerFactory = await smock.mock<Livepeer__factory>(\"Livepeer\");\r\n\r\n  const tenderizerMock = await TenderizerFactory.deploy();\r\n\r\n  const TenderTokenFactory = await smock.mock<TenderToken__factory>(\"TenderToken\");\r\n\r\n  const LPTokenFactory = await smock.mock<LiquidityPoolToken__factory>(\"LiquidityPoolToken\");\r\n\r\n  const TenderFarmFactory = await ethers.getContractFactory(\"TenderFarm\", signers[0]);\r\n\r\n  const account0 = await signers[0].getAddress();\r\n  const account1 = await signers[1].getAddress();\r\n  const account2 = await signers[2].getAddress();\r\n\r\n  const lpToken = await LPTokenFactory.deploy();\r\n  console.log(\"lpToken:\", lpToken.address);\r\n  const tenderToken = await TenderTokenFactory.deploy();\r\n  await lpToken.deployed();\r\n  await tenderToken.deployed();\r\n  await tenderToken.initialize(\"Tender Token\", \"Tender\", tenderizerMock.address);\r\n  await lpToken.initialize(\"LP token\", \"LP\");\r\n\r\n  const tenderFarm = await upgrades.deployProxy(TenderFarmFactory, [lpToken.address, tenderToken.address, account0]);\r\n  await tenderFarm.deployed();\r\n\r\n  const supply = ethers.utils.parseEther(\"1000000000000000\");\r\n  await lpToken.mint(account0, supply);\r\n  await tenderToken.mint(account0, supply);\r\n  tenderizerMock.totalStakedTokens.returns(supply);\r\n  const TenderFarmFactory = await ethers.getContractFactory(\"TenderFarm\", signers[0]);\r\n  tenderFarm = (await TenderFarmFactory.deploy()) as TenderFarm;\r\n  await tenderFarm.initialize(lpToken.address, tenderToken.address, account0);\r\n\r\n  // stake for an account\r\n  lpToken.transferFrom.returns(true);\r\n  const amount = ethers.utils.parseEther(\"150\");\r\n  await lpToken.approve(tenderFarm.address, amount);\r\n  await tenderFarm.farm(amount);\r\n\r\n  lpToken.transfer.returns(false);\r\n\r\n  await expect(tenderFarm.unfarm(amount)).to.be.revertedWith(\"TRANSFER_FAIL\");\r\n\r\n  lpToken.transfer.returns(true);\r\n\r\n  await rpc.revert(snapshotId);\r\n});\r\n\r\nit(\"reverts when amount exceeds allowance\", async () => {\r\n  const initialAmount = ethers.utils.parseEther(\"100\");\r\n  const transferAmount = ethers.utils.parseEther(\"50\");\r\n  const signers = await ethers.getSigners();\r\n  const TenderizerFactory = await smock.mock<Livepeer__factory>(\"Livepeer\");\r\n\r\n  const tenderizerMock = await TenderizerFactory.deploy();\r\n  const TokenFactory = await ethers.getContractFactory(\"TenderToken\", signers[0]);\r\n\r\n  const account0 = await signers[0].getAddress();\r\n  const account1 = await signers[1].getAddress();\r\n  const account2 = await signers[2].getAddress();\r\n\r\n  const tenderToken = (await TokenFactory.deploy()) as TenderToken;\r\n  await tenderToken.deployed();\r\n  console.log(\"tenderToken:\", tenderToken.address);\r\n  await tenderToken.initialize(\"Mock\", \"MCK\", tenderizerMock.address);\r\n\r\n  await tenderToken.mint(account0, initialAmount);\r\n  tenderizerMock.totalStakedTokens.returns(initialAmount);\r\n  await tenderToken.approve(account1, transferAmount);\r\n  await tenderToken.connect(signers[1]).approve(account2, transferAmount); // account1 has no tokens\r\n\r\n  await expect(\r\n    tenderToken.connect(signers[1]).transferFrom(account0, account1, transferAmount.mul(ethers.constants.Two)),\r\n  ).to.be.revertedWith(\"TRANSFER_AMOUNT_EXCEEDS_ALLOWANCE\");\r\n});\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1369003636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1369298650",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/3506#issuecomment-1369298650",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/3506",
    "id": 1369298650,
    "node_id": "IC_kwDOB7jojM5Rndba",
    "user": {
      "login": "kyriediculous",
      "id": 22256858,
      "node_id": "MDQ6VXNlcjIyMjU2ODU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/22256858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kyriediculous",
      "html_url": "https://github.com/kyriediculous",
      "followers_url": "https://api.github.com/users/kyriediculous/followers",
      "following_url": "https://api.github.com/users/kyriediculous/following{/other_user}",
      "gists_url": "https://api.github.com/users/kyriediculous/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kyriediculous/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kyriediculous/subscriptions",
      "organizations_url": "https://api.github.com/users/kyriediculous/orgs",
      "repos_url": "https://api.github.com/users/kyriediculous/repos",
      "events_url": "https://api.github.com/users/kyriediculous/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kyriediculous/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-03T00:51:38Z",
    "updated_at": "2023-01-03T00:51:38Z",
    "author_association": "NONE",
    "body": "THanks @fvictorio ! ",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1369298650/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
