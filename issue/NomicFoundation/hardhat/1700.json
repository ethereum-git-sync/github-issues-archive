{
  "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1700",
  "repository_url": "https://api.github.com/repos/NomicFoundation/hardhat",
  "labels_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1700/labels{/name}",
  "comments_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1700/comments",
  "events_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1700/events",
  "html_url": "https://github.com/NomicFoundation/hardhat/issues/1700",
  "id": 948894185,
  "node_id": "MDU6SXNzdWU5NDg4OTQxODU=",
  "number": 1700,
  "title": "`hardhat_setStorageAt` fails with `InvalidArgumentsError` in some cases",
  "user": {
    "login": "mds1",
    "id": 17163988,
    "node_id": "MDQ6VXNlcjE3MTYzOTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17163988?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mds1",
    "html_url": "https://github.com/mds1",
    "followers_url": "https://api.github.com/users/mds1/followers",
    "following_url": "https://api.github.com/users/mds1/following{/other_user}",
    "gists_url": "https://api.github.com/users/mds1/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mds1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mds1/subscriptions",
    "organizations_url": "https://api.github.com/users/mds1/orgs",
    "repos_url": "https://api.github.com/users/mds1/repos",
    "events_url": "https://api.github.com/users/mds1/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mds1/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": true,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2021-07-20T17:48:23Z",
  "updated_at": "2022-11-18T16:00:56Z",
  "closed_at": "2021-07-20T18:38:20Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": "resolved",
  "body": "I was playing around with `hardhat_setStorageAt` and it seems there is a bug. Here's a code snippet to reproduce. What I'm doing here is overwriting storage to set token balance to zero just as a test of the functionality.\r\n\r\nCode to reproduce:\r\n\r\n```typescript\r\nimport { ethers } from 'hardhat';\r\nimport { keccak256 } from '@ethersproject/keccak256';\r\nconst { defaultAbiCoder } = ethers.utils;\r\n\r\n// Helper method to get token balance of a user\r\nasync function balanceOf(tokenAddress: string, user: string) {\r\n  const abi = ['function balanceOf(address) external view returns (uint256)'];\r\n  const contract = new ethers.Contract(tokenAddress, abi, ethers.provider);\r\n  return (await contract.balanceOf(user)).toString();\r\n}\r\n\r\n// Define parameters needed to set balance to 0\r\nconst curveTricryptoAddress = '0xD51a44d3FaE010294C616388b506AcdA1bfAAE46'; // mainnet Curve Tricrypto pool\r\nconst usdt = '0xdAC17F958D2ee523a2206206994597C13D831ec7';\r\nconst wbtc = '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599';\r\nconst usdtSlot = keccak256(defaultAbiCoder.encode(['address', 'uint256'], [curveTricryptoAddress, '0x2'])); // balances start in slot 2\r\nconst wbtcSlot = keccak256(defaultAbiCoder.encode(['address', 'uint256'], [curveTricryptoAddress, '0x0'])); // balances start in slot 0\r\nconst newBalance = '0x0000000000000000000000000000000000000000000000000000000000000000'\r\n\r\n// Set USDT and it works\r\nconsole.log('USDT balance start: ', await balanceOf(usdt, curveTricryptoAddress)); // 5153844403558\r\nawait network.provider.send('hardhat_setStorageAt', [usdt, usdtSlot, newBalance]);\r\nconsole.log('USDT balance end: ', await balanceOf(usdt, curveTricryptoAddress)); // 0\r\n      \r\n\r\n// Set WBTC and it errors with the stack trace below\r\nconsole.log('WBTC balance start: ', await balanceOf(wbtc, curveTricryptoAddress)); // 17391500043\r\nawait network.provider.send('hardhat_setStorageAt', [wbtc, wbtcSlot, newBalance]); // errors here\r\nconsole.log('WBTC balance end: ', await balanceOf(wbtc, curveTricryptoAddress)); // never gets here\r\n```\r\n\r\nAnd here is the resulting stack trace\r\n\r\n```\r\nInvalidArgumentsError: Errors encountered in param 1: Invalid value \"0x041fb92791af656a5970d946eab0726fa7cc29ad5366ae52491c17c2fe5efcb1\" supplied to : QUANTITY\r\n      at Object.validateParams (node_modules/hardhat/src/internal/core/jsonrpc/types/input/validation.ts:64:13)\r\n      at HardhatModule._setStorageAtParams (node_modules/hardhat/src/internal/hardhat-network/provider/modules/hardhat.ts:275:45)\r\n      at HardhatModule.processRequest (node_modules/hardhat/src/internal/hardhat-network/provider/modules/hardhat.ts:102:49)\r\n      at HardhatNetworkProvider._send (node_modules/hardhat/src/internal/hardhat-network/provider/provider.ts:198:35)\r\n      at processTicksAndRejections (internal/process/task_queues.js:93:5)\r\n      at HardhatNetworkProvider.request (node_modules/hardhat/src/internal/hardhat-network/provider/provider.ts:105:18)\r\n      at Context.<anonymous> (test/YearnCrvTricrypto.test.ts:314:7)\r\n```\r\n\r\nAnd finally, proof that the storage slot is correct, using seth:\r\n\r\n```sh\r\n$ seth --to-dec $(seth storage 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599 0x041fb92791af656a5970d946eab0726fa7cc29ad5366ae52491c17c2fe5efcb1)\r\n17391500043 # outputs this, which is correct\r\n```",
  "closed_by": {
    "login": "fvictorio",
    "id": 417134,
    "node_id": "MDQ6VXNlcjQxNzEzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fvictorio",
    "html_url": "https://github.com/fvictorio",
    "followers_url": "https://api.github.com/users/fvictorio/followers",
    "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
    "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
    "organizations_url": "https://api.github.com/users/fvictorio/orgs",
    "repos_url": "https://api.github.com/users/fvictorio/repos",
    "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fvictorio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1700/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1700/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/883610339",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1700#issuecomment-883610339",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1700",
    "id": 883610339,
    "node_id": "IC_kwDOB7jojM40qtLj",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-20T18:38:20Z",
    "updated_at": "2021-07-20T18:38:20Z",
    "author_association": "MEMBER",
    "body": "As @alcuadrado mentioned in the [Discord server](https://hardhat.org/discord), this is caused by the leading zero in the value. I'm going to close this in favor of https://github.com/nomiclabs/hardhat/issues/1585, where we are discussing what to do about this.",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/883610339/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/905227910",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1700#issuecomment-905227910",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1700",
    "id": 905227910,
    "node_id": "IC_kwDOB7jojM419K6G",
    "user": {
      "login": "laizy",
      "id": 4203231,
      "node_id": "MDQ6VXNlcjQyMDMyMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4203231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laizy",
      "html_url": "https://github.com/laizy",
      "followers_url": "https://api.github.com/users/laizy/followers",
      "following_url": "https://api.github.com/users/laizy/following{/other_user}",
      "gists_url": "https://api.github.com/users/laizy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laizy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laizy/subscriptions",
      "organizations_url": "https://api.github.com/users/laizy/orgs",
      "repos_url": "https://api.github.com/users/laizy/repos",
      "events_url": "https://api.github.com/users/laizy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laizy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-25T06:42:14Z",
    "updated_at": "2021-08-25T06:42:14Z",
    "author_association": "NONE",
    "body": "@fvictorio the storage‘s key/value in ethereum is fixed 20 bytes, and should be encoded as Hash. There is nothing to do with integer encoding, and leading zero should not be removed.\r\n\r\nHere is the signature from ethereuem's go code :\r\n```\r\nfunc (ec *Client) StorageAt(ctx context.Context, account common.Address, key common.Hash, blockNumber *big.Int) ([]byte, error) \r\n```\r\n\r\nThe `eth_getStorageAt` api has  this problem too, and will report error if I use go client to send request to hardhat node:\r\n\r\n```\r\n---> {\"jsonrpc\":\"2.0\",\"id\":17,\"method\":\"eth_getStorageAt\",\"params\":[\"0x851356ae760d987e095750cceb3bc6014560891c\",\"0x0000000000000000000000000000000000000000000000000000000000000001\",\"latest\"]}\r\n<--- {\"code\":-32602,\"message\":\"Errors encountered in param 1: Invalid value \\\"0x0000000000000000000000000000000000000000000000000000000000000001\\\" supplied to : QUANTITY\"}\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/905227910/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/905680572",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1700#issuecomment-905680572",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1700",
    "id": 905680572,
    "node_id": "IC_kwDOB7jojM41-5a8",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-25T16:17:47Z",
    "updated_at": "2021-08-25T16:17:47Z",
    "author_association": "MEMBER",
    "body": "@laizy that's true, but that's a lower-level layer. In the JSON-RPC layer, things might use different types. For example, if you make an `eth_call` to a contract that returns a `uint` of value 1, the answer will be `0x1`, not `0x0000000000000000000000000000000000000000000000000000000000000001`. That kind of value has a (somewhat) well defined format, and that doesn't allow leading zeros.",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/905680572/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/905681411",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1700#issuecomment-905681411",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1700",
    "id": 905681411,
    "node_id": "IC_kwDOB7jojM41-5oD",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-25T16:18:51Z",
    "updated_at": "2021-08-25T16:18:51Z",
    "author_association": "MEMBER",
    "body": "Oh, and you could argue that for a method like `setStorageAt`, we should use the full 256 bit word and not a quantity like we're doing. But I think `getStorageAt` uses a quantity, and it makes sense to be consistent with that method here.",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/905681411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
