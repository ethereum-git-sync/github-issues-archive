{
  "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4361",
  "repository_url": "https://api.github.com/repos/NomicFoundation/hardhat",
  "labels_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4361/labels{/name}",
  "comments_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4361/comments",
  "events_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4361/events",
  "html_url": "https://github.com/NomicFoundation/hardhat/issues/4361",
  "id": 1882679139,
  "node_id": "I_kwDOB7jojM5wN2dj",
  "number": 4361,
  "title": "Cannot send transaction with insufficient amount even if rectified by earlier transaction in block",
  "user": {
    "login": "jacob-thrackle",
    "id": 97059517,
    "node_id": "U_kgDOBckCvQ",
    "avatar_url": "https://avatars.githubusercontent.com/u/97059517?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacob-thrackle",
    "html_url": "https://github.com/jacob-thrackle",
    "followers_url": "https://api.github.com/users/jacob-thrackle/followers",
    "following_url": "https://api.github.com/users/jacob-thrackle/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacob-thrackle/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacob-thrackle/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacob-thrackle/subscriptions",
    "organizations_url": "https://api.github.com/users/jacob-thrackle/orgs",
    "repos_url": "https://api.github.com/users/jacob-thrackle/repos",
    "events_url": "https://api.github.com/users/jacob-thrackle/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacob-thrackle/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4937119027,
      "node_id": "LA_kwDOB7jojM8AAAABJkZ1Mw",
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/labels/status:triaging",
      "name": "status:triaging",
      "color": "0E8A16",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "fvictorio",
    "id": 417134,
    "node_id": "MDQ6VXNlcjQxNzEzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fvictorio",
    "html_url": "https://github.com/fvictorio",
    "followers_url": "https://api.github.com/users/fvictorio/followers",
    "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
    "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
    "organizations_url": "https://api.github.com/users/fvictorio/orgs",
    "repos_url": "https://api.github.com/users/fvictorio/repos",
    "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fvictorio/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-09-05T20:33:47Z",
  "updated_at": "2023-09-05T20:41:06Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Version of Hardhat\r\n\r\n2.17.2\r\n\r\n### What happened?\r\n\r\nI am working on replaying historical transactions in a local fork and have come to an impasse. The transaction in question is `0xb368770206f3935625c278cf6c5fabf1776bcbaf59b75f12e4625b4ff10bf3d9` [[link](https://etherscan.io/tx/0xb368770206f3935625c278cf6c5fabf1776bcbaf59b75f12e4625b4ff10bf3d9)] in block 18031132 (the last transaction in the block). When attempting to replay the transaction, we get the following error:\r\n```\r\nProviderError: sender doesn't have enough funds to send tx. The max upfront cost is: 206908257703903715 and the sender's account only has: 22293390454725773\r\n```\r\n\r\nThe sender's account (`0x116417a40BcE2bA2acD84d8Da46C60D2F7398D50`) has a balance of 22293390454725773 at the start of the block (end of block 18031131). However, the transaction just before the one in question is `[0x6d0e3c3cfba6dfbd2c62059f80fe89d67d51117463558f0ed2e17a0d457ad22e]`[[link](https://etherscan.io/tx/0x6d0e3c3cfba6dfbd2c62059f80fe89d67d51117463558f0ed2e17a0d457ad22e)] and has an internal transfer of 206908257703903715 to `0x116417a40BcE2bA2acD84d8Da46C60D2F7398D50`. This is the max upfront cost mentioned in the error message.\r\n\r\nI am putting the transactions into the \"mempool\" (automine is false, order is fifo) and executing them together using `evm_mine` in the correct order. The issue is that I am unable to even send transaction `0xb368770206f3935625c278cf6c5fabf1776bcbaf59b75f12e4625b4ff10bf3d9` since the sender has an insufficient amount at the start of the block... but the transaction just before rectifies this. I need to be able to send the transaction anyway but it appears that hardhat blocks this by doing an internal check.\r\n\r\nIs there a way to \"turn off\" this check in hardhat? If not, hardhat *should* have a way to disable these checks to allow transactions such as the above to be added to the queue regardless of the state of the EVM at the end of the last block. My understanding is that since this is possible on mainnet, it should be possible in hardhat as well and I would consider the inability to do so a bug.\r\n\r\n### Minimal reproduction steps\r\n\r\n1. Fork at block 18031131, turning off automining and using fifo ordering.\r\n2. Build transaction `0x6d0e3c3cfba6dfbd2c62059f80fe89d67d51117463558f0ed2e17a0d457ad22e`. This is the transaction that has an internal transfer. Impersonate the sender.\r\n\r\n```javascript\r\nTransactionResponse {\r\n  provider: AlchemyProvider { apiKey: '1ClyQ7h3R0yyONTe9eg915hWsnwXmjAh' },\r\n  blockNumber: 18031132,\r\n  blockHash: '0xb1647833c1576d205202f77e9ca041328542ba11b6077dd8376aaff75010faf2',\r\n  index: undefined,\r\n  hash: '0x6d0e3c3cfba6dfbd2c62059f80fe89d67d51117463558f0ed2e17a0d457ad22e',\r\n  type: 2,\r\n  to: '0x356cfd6e6D0000400000003900b415f80669009e',\r\n  from: '0x0Aa8EBb6aD5A8e499E550ae2C461197624c6e667',\r\n  nonce: 441,\r\n  gasLimit: 41908n,\r\n  gasPrice: 14428330923n,\r\n  maxPriorityFeePerGas: 0n,\r\n  maxFeePerGas: 14428330923n,\r\n  data: '0x000000000b160aa8ebb6ad5a8e499e550ae2c461197624c6e6670aea1c000e6a130000000000000002df15f6d18941e30000116417a40bce2ba2acd84d8da46c60d2f7398d50',\r\n  value: 206908257703903715n,\r\n  chainId: 1n,\r\n  signature: Signature { r: \"0x420fb72c24c155a378ead5644ff1f4721abb31c017694478469e8e8ac34089a8\", s: \"0x1d3326f7d86d9da7d881ad872513f1eae9ccb999978b81c961082a64114bc20d\", yParity: 0, networkV: null },\r\n  accessList: []\r\n}\r\n```\r\n3. Build transaction `0xb368770206f3935625c278cf6c5fabf1776bcbaf59b75f12e4625b4ff10bf3d9`. Impersonate the sender.\r\n```javascript\r\nTransactionResponse {\r\n  provider: AlchemyProvider { apiKey: '1ClyQ7h3R0yyONTe9eg915hWsnwXmjAh' },\r\n  blockNumber: 18031132,\r\n  blockHash: '0xb1647833c1576d205202f77e9ca041328542ba11b6077dd8376aaff75010faf2',\r\n  index: undefined,\r\n  hash: '0xb368770206f3935625c278cf6c5fabf1776bcbaf59b75f12e4625b4ff10bf3d9',\r\n  type: 2,\r\n  to: '0x157C9670Cbda36a9046c1f73f86eca2d66077a43',\r\n  from: '0x116417a40BcE2bA2acD84d8Da46C60D2F7398D50',\r\n  nonce: 1271,\r\n  gasLimit: 27300n,\r\n  gasPrice: 14428330923n,\r\n  maxPriorityFeePerGas: 0n,\r\n  maxFeePerGas: 14428330923n,\r\n  data: '0x',\r\n  value: 206514364269705815n,\r\n  chainId: 1n,\r\n  signature: Signature { r: \"0x09b1d067daa2029f6392556312f6a7290d6375933acf9112e30377e0a38a9a73\", s: \"0x31003008a42dd39e24257e57851e361e0081223d3266d77ca0cd4f2fc3a51ede\", yParity: 1, networkV: null },\r\n  accessList: []\r\n}\r\n```\r\n4. Call `evm_mine`.\r\n5. Get error.\r\n\r\n### Search terms\r\n\r\nfork, replay",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4361/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4361/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
