{
  "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4166",
  "repository_url": "https://api.github.com/repos/NomicFoundation/hardhat",
  "labels_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4166/labels{/name}",
  "comments_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4166/comments",
  "events_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4166/events",
  "html_url": "https://github.com/NomicFoundation/hardhat/issues/4166",
  "id": 1809964137,
  "node_id": "I_kwDOB7jojM5r4dxp",
  "number": 4166,
  "title": "Add chai matchers support for withNamedArgs",
  "user": {
    "login": "jmendiola222",
    "id": 5326111,
    "node_id": "MDQ6VXNlcjUzMjYxMTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5326111?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jmendiola222",
    "html_url": "https://github.com/jmendiola222",
    "followers_url": "https://api.github.com/users/jmendiola222/followers",
    "following_url": "https://api.github.com/users/jmendiola222/following{/other_user}",
    "gists_url": "https://api.github.com/users/jmendiola222/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jmendiola222/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jmendiola222/subscriptions",
    "organizations_url": "https://api.github.com/users/jmendiola222/orgs",
    "repos_url": "https://api.github.com/users/jmendiola222/repos",
    "events_url": "https://api.github.com/users/jmendiola222/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jmendiola222/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 947232611,
      "node_id": "MDU6TGFiZWw5NDcyMzI2MTE=",
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/labels/type:feature",
      "name": "type:feature",
      "color": "FBCA04",
      "default": false,
      "description": "Feature request"
    },
    {
      "id": 4937720577,
      "node_id": "LA_kwDOB7jojM8AAAABJk-jAQ",
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/labels/status:ready",
      "name": "status:ready",
      "color": "0E8A16",
      "default": false,
      "description": "This issue is ready to be worked on"
    },
    {
      "id": 4952257781,
      "node_id": "LA_kwDOB7jojM8AAAABJy109Q",
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/labels/area:chai-matchers",
      "name": "area:chai-matchers",
      "color": "5319E7",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-07-18T13:41:22Z",
  "updated_at": "2023-07-18T14:33:48Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Describe the feature\r\n\r\n[Waffle](https://github.com/TrueFiEng/Waffle/blob/master/waffle-chai/src/matchers/withNamedArgs.ts) has this feature and it comes handy when you have many args but in this test you're just focusing on one. It also makes the test more readable. \r\n\r\nExample:\r\n```js\r\nawait expect(token.transfer(walletTo.address, 7))\r\n  .to.emit(token, 'Transfer')\r\n  .withNamedArgs({\r\n    from: wallet.address,\r\n    to: walletTo.address,\r\n    amount: 7\r\n  });\r\n```\r\n[source](https://ethereum-waffle.readthedocs.io/en/latest/matchers.html#emitting-events)\r\n\r\n### Search terms\r\n\r\nwithNamedArgs, withArgs, chai, matchers, waffle, event, emit",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4166/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4166/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1640291151",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/4166#issuecomment-1640291151",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/4166",
    "id": 1640291151,
    "node_id": "IC_kwDOB7jojM5hxNtP",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-18T14:02:46Z",
    "updated_at": "2023-07-18T14:02:46Z",
    "author_association": "MEMBER",
    "body": "I really like this idea. I just wonder if we should have a separate matcher as you propose, or just overload `withArgs`. Probably the former, otherwise we would have ambiguity between an actual struct we are matching and named args.",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1640291151/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
