{
  "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1384",
  "repository_url": "https://api.github.com/repos/NomicFoundation/hardhat",
  "labels_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1384/labels{/name}",
  "comments_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1384/comments",
  "events_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1384/events",
  "html_url": "https://github.com/NomicFoundation/hardhat/issues/1384",
  "id": 853207031,
  "node_id": "MDU6SXNzdWU4NTMyMDcwMzE=",
  "number": 1384,
  "title": "Multiple compiler versions leads to overwrite the artifacts/contracts files",
  "user": {
    "login": "montyly",
    "id": 13798342,
    "node_id": "MDQ6VXNlcjEzNzk4MzQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/13798342?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/montyly",
    "html_url": "https://github.com/montyly",
    "followers_url": "https://api.github.com/users/montyly/followers",
    "following_url": "https://api.github.com/users/montyly/following{/other_user}",
    "gists_url": "https://api.github.com/users/montyly/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/montyly/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/montyly/subscriptions",
    "organizations_url": "https://api.github.com/users/montyly/orgs",
    "repos_url": "https://api.github.com/users/montyly/repos",
    "events_url": "https://api.github.com/users/montyly/events{/privacy}",
    "received_events_url": "https://api.github.com/users/montyly/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": true,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-04-08T08:20:02Z",
  "updated_at": "2023-03-30T00:14:15Z",
  "closed_at": "2022-12-29T13:08:23Z",
  "author_association": "NONE",
  "active_lock_reason": "resolved",
  "body": "Hi,\r\n\r\nIf a project has multiple compiler versions, the compilation artifacts generated in `artifacts/contracts` can be incomplete. This is because there is one file per contract/path, but multiple compiler versions will lead to a collision in the artifacts. This can prevent the correct analysis from third parties tools (such as [Slither](https://github.com/crytic/slither) / [Echidna](https://github.com/crytic/echidna))\r\n\r\nFor example, for a project with these three files:\r\n\r\n- `contracts/0.6.sol`\r\n```\r\nimport \"./test.sol\";\r\n\r\ncontract B is A{\r\n\r\n}\r\n```\r\n- `contracts/0.8.sol`\r\n```\r\nimport \"./test.sol\";\r\n\r\ncontract C is A{\r\n\r\n}\r\n```\r\n\r\n- `contracts/test.sol`:\r\n```\r\ncontract A{\r\n    \r\n    function add(uint a, uint b) public returns(uint){\r\n        return a + b;\r\n    }\r\n}\r\n```\r\n\r\nAnd this configuration:\r\n```\r\nmodule.exports = {\r\n  solidity: {\r\n    compilers: [\r\n      {\r\n        version: \"0.8.0\"\r\n      },\r\n      {\r\n        version: \"0.6.7\",\r\n      }\r\n    ],\r\n    overrides: {\r\n      \"contracts/0.6.sol\": {\r\n        version: \"0.6.7\",\r\n      },\r\n      \"contracts/0.8.sol\": {\r\n        version: \"0.8.0\",\r\n      }\r\n    }\r\n  }\r\n};\r\n```\r\n\r\nBoth `artifacts/contracts/test.sol/A.json` and `artifacts/contracts/test.sol/A.dbg.json` will be generated only once, while the contract `A` will generate a different bytecode with solidity 0.6.7 and 0.8.0. In my tests both files are the 0.8.0 version, but I am assuming this might be random.\r\n\r\nNote that the files in `artifacts/build-info` don't have this issue.\r\n",
  "closed_by": {
    "login": "fvictorio",
    "id": 417134,
    "node_id": "MDQ6VXNlcjQxNzEzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fvictorio",
    "html_url": "https://github.com/fvictorio",
    "followers_url": "https://api.github.com/users/fvictorio/followers",
    "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
    "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
    "organizations_url": "https://api.github.com/users/fvictorio/orgs",
    "repos_url": "https://api.github.com/users/fvictorio/repos",
    "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fvictorio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1384/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1384/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/817214571",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1384#issuecomment-817214571",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1384",
    "id": 817214571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzIxNDU3MQ==",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-10T23:11:34Z",
    "updated_at": "2021-04-10T23:11:34Z",
    "author_association": "MEMBER",
    "body": "Hey @montyly,\r\n\r\nArtifacts aren't being overwritten, but we emit one version for each of them. This is like this by design, as otherwise users would have to be thinking about which version they want to use for testing, deployment, etc.\r\n\r\nA solidity file can be included multiple compilation jobs, and hence multiple build info files. To figure out which was the one that was used for emitting its artifacts, you have to look for the `.dbg.json` files.\r\n\r\nI'm not sure which kind of analysis crytic runs, but it may require some adaptions to work with this multiple versions and compilation jobs per project model. If you tell me more about your needs I can help you understand how it can be done.",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/817214571/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/820232579",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1384#issuecomment-820232579",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1384",
    "id": 820232579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDIzMjU3OQ==",
    "user": {
      "login": "montyly",
      "id": 13798342,
      "node_id": "MDQ6VXNlcjEzNzk4MzQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13798342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/montyly",
      "html_url": "https://github.com/montyly",
      "followers_url": "https://api.github.com/users/montyly/followers",
      "following_url": "https://api.github.com/users/montyly/following{/other_user}",
      "gists_url": "https://api.github.com/users/montyly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/montyly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/montyly/subscriptions",
      "organizations_url": "https://api.github.com/users/montyly/orgs",
      "repos_url": "https://api.github.com/users/montyly/repos",
      "events_url": "https://api.github.com/users/montyly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/montyly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-15T08:32:18Z",
    "updated_at": "2021-04-15T08:32:18Z",
    "author_association": "NONE",
    "body": "Thanks, @alcuadrado for the details. I am not sure to understand why there are not being overwritten. If by reading `artifacts/contracts/test.sol/A.dbg.json`, I will have access only to one bytecode and not the other (in this example, either 0.6.7 or 0.8.0). If an external tool reads this file, it will have no information about the existence of the second version, right?\r\n\r\nBut we ended up not using the `.dbg.json` files, and directly reading the files generated by `build-info`.\r\n\r\nRegarding our usage, I think there are two cases here: either the codebase requires multiple compilation units (ex: two solidity versions), or it does not require it, and from my understanding hardhat does it for optimization (so you don't need to recompile everything every time).\r\n\r\nFor the first case, we are working on its support in our tools. \r\n\r\nFor the second case, it is more complex. We need to analyze the AST of each contract, and the AST contains unique IDs such that you should analyze the contracts within the same compilation unit context (even if the compiler version is the same). For example, one of these IDs is for the `linearizedBaseContracts` info, which looks like:\r\n```json\r\n      \"linearizedBaseContracts\":\r\n      [\r\n        4,\r\n        20\r\n      ],\r\n```\r\nThis returns the inherited contracts, in the expected order. Each number matches an `id` field in one of the other contract's AST. These numbers can change between compilation units. So I can take the contract `A`, and easily know all the derived contracts by looking at one compilation unit. Now if it is split into two compilation units, I have two contracts `A`, with different `ID`. We can determine that both are the same based on the filename, but it does make the analysis of the AST more complex. These ids appear in a lot of locations, as a lot of objects produce them, (ex: structure, ...).\r\n\r\nWould it be possible to have a command-line flag to disable the split into multiple compilation units optimization? This would ease a lot the integrations of hardhat in our tools (and probably other ones too). A command-line flag would be less intrusive than an option in the config file, so that we can run hardhat within the context of our tools, without messing with the target's configuration.",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/820232579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1367307677",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/1384#issuecomment-1367307677",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/1384",
    "id": 1367307677,
    "node_id": "IC_kwDOB7jojM5Rf3Wd",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-29T13:08:23Z",
    "updated_at": "2022-12-29T13:08:23Z",
    "author_association": "MEMBER",
    "body": "Hey @montyly, I'm re-visiting old issues and I'm not sure what to do about this one.\r\n\r\nSome clarifications about our compilation pipeline:\r\n\r\nFirst, this is not an optimization, it's more of a design decision to have a simpler model. The bytecode that ends up in an artifact for a given contract is generated with a single version, and we have some rules to decide which one is used. In fact, there's no way to emit bytecode with different compilers for the same contract.\r\n\r\nSecond, this is (or should be!) deterministic. So for a given configuration of set of files, each file will always be compiled with the same version.\r\n\r\nIt's true that in your example the contract `A` is compiled with `0.6.7` because it's necessary to compile the `B` contract in `0.6.sol`. But the artifact of `A` will be the one that is generated by 0.8.\r\n\r\n> If an external tool reads this file, it will have no information about the existence of the second version, right?\r\n\r\nThis is correct, unless you inspect the `sources` entries of each build-info. Maybe we could add a new entry to the `.dbg.json`, something like `secondaryBuildInfos`, which is an array with the other build infos that include that contract? If that seems useful to you, I will open a new issue for that.\r\n\r\n---\r\n\r\nI think I'm going to close this issue, on the grounds that this is working as intended. But I would very much like to continue discussing this, so if you have any other comments or ideas on what we could do to make your life easier, please let us know.",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1367307677/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
