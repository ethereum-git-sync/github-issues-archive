{
  "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/391",
  "repository_url": "https://api.github.com/repos/NomicFoundation/hardhat",
  "labels_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/391/labels{/name}",
  "comments_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/391/comments",
  "events_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/391/events",
  "html_url": "https://github.com/NomicFoundation/hardhat/issues/391",
  "id": 515680017,
  "node_id": "MDU6SXNzdWU1MTU2ODAwMTc=",
  "number": 391,
  "title": "Expose vm 'step' hooks for Hardhat Network",
  "user": {
    "login": "cgewecke",
    "id": 7332026,
    "node_id": "MDQ6VXNlcjczMzIwMjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cgewecke",
    "html_url": "https://github.com/cgewecke",
    "followers_url": "https://api.github.com/users/cgewecke/followers",
    "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
    "organizations_url": "https://api.github.com/users/cgewecke/orgs",
    "repos_url": "https://api.github.com/users/cgewecke/repos",
    "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cgewecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": true,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2019-10-31T19:16:06Z",
  "updated_at": "2023-03-31T00:14:20Z",
  "closed_at": "2022-12-30T12:53:01Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": "resolved",
  "body": "Hi @alcuadrado - just opening per your suggestion that it might be possible. In a note you proposed an experimental API\r\n\r\n> Maybe `__experimental__attachBuidlerVMListeners(vm => { ... })`\r\n\r\nDo you have any more thoughts about this?",
  "closed_by": {
    "login": "fvictorio",
    "id": 417134,
    "node_id": "MDQ6VXNlcjQxNzEzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fvictorio",
    "html_url": "https://github.com/fvictorio",
    "followers_url": "https://api.github.com/users/fvictorio/followers",
    "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
    "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
    "organizations_url": "https://api.github.com/users/fvictorio/orgs",
    "repos_url": "https://api.github.com/users/fvictorio/repos",
    "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fvictorio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/391/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/391/timeline",
  "performed_via_github_app": null,
  "state_reason": "not_planned"
}
[
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/548839205",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/391#issuecomment-548839205",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/391",
    "id": 548839205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODgzOTIwNQ==",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-01T15:48:35Z",
    "updated_at": "2019-11-01T15:48:35Z",
    "author_association": "MEMBER",
    "body": "Hey Chris! Thanks for opening this issue so we can keep track of this. \r\n\r\nI've been thinking more about it, and I think that having a method to let you attach to the `step` event is the way to go. \r\n\r\nWe also talked about doing this by wrapping the provider and accessing its vm, but that would bring lots of complications. The main issue is that you'd need to find a way to distinguishing between the vm running because of gas estimations and because of actual txs/calls. By registering the event listener through Buidler, we can make sure that it isn't fired for gas estimations.\r\n\r\nI wonder if some way of removing the listener is needed. What do you think?\r\n\r\nAlso, I still think that this should be considered experimental for now. It would couple Buidler's API to the `ethereumjs-vm`'s one, and I don't want to take that decision lightly, but I do want to offer you the necessary capabilities for `solidity-coverage` and `eth-gas-reporter` asap.",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/548839205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/548916408",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/391#issuecomment-548916408",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/391",
    "id": 548916408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODkxNjQwOA==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-01T19:14:17Z",
    "updated_at": "2019-11-01T19:14:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @alcuadrado!\r\n\r\n> By registering the event listener through Buidler, we can make sure that it isn't fired for gas estimations.\r\n\r\nHave noticed that there's a similar duplication in truffle-contract when the reason is fetched on tx error as well. In that case the tx is replayed as a call to extract the data. For coverage, this has worried me a little less - it affects how many hits are registered for each line. But yes the repetitions are not obvious to the end user of an API like this and would be a problem if you were trying to track gas via the step or something.\r\n\r\n> I wonder if some way of removing the listener is needed. What do you think?\r\n\r\nI'm just attaching once ... actually what is your view of this? Are there cases where one might set up this listener repeatedly, or perhaps have a problem exiting because a listener was attached? \r\n\r\n> I still think that this should be considered experimental for now.\r\n\r\nCompletely fine. Would describe the way I'm currently attaching to the vm at ganache as 'illegal' so experimental is a big improvement. Very happy to trial anything you come up with :)",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/548916408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/548932671",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/391#issuecomment-548932671",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/391",
    "id": 548932671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODkzMjY3MQ==",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-01T20:07:03Z",
    "updated_at": "2019-11-01T20:07:03Z",
    "author_association": "MEMBER",
    "body": "> I'm just attaching once ... actually what is your view of this? Are there cases where one might set up this listener repeatedly, or perhaps have a problem exiting because a listener was attached?\r\n\r\nI believe that keeping the listener attached won't lead to any problem. It shouldn't prevent Buidler from exiting.\r\n\r\n> Have noticed that there's a similar duplication in truffle-contract when the reason is fetched on tx error as well. In that case the tx is replayed as a call to extract the data. For coverage, this has worried me a little less - it affects how many hits are registered for each line. But yes the repetitions are not obvious to the end user of an API like this and would be a problem if you were trying to track gas via the step or something.\r\n\r\nMaybe instead of just giving the `step` info, I can also provide the info of the RPC call that triggered that execution. Would this work?\r\n\r\nI could also add oncall and ontx events, and pass you one of [these traces](https://github.com/nomiclabs/buidler/blob/master/packages/buidler-core/src/internal/buidler-evm/stack-traces/message-trace.ts). Those have all the needed info, but using them may require some extra work compared to just using `step`.",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/548932671/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/548956938",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/391#issuecomment-548956938",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/391",
    "id": 548956938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODk1NjkzOA==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-01T21:27:52Z",
    "updated_at": "2019-11-01T21:27:52Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  I can also provide the info of the RPC call that triggered that execution\r\n\r\nYes! I think that context info might be very useful in general / solve coverage's problem specifically.\r\n\r\n> I could also add oncall and ontx events, and pass you one of these traces.\r\n\r\nAtm at the gas reporter, the data collected is less granular than the step. The main speed optimization I've thought about involves observing the provider \r\n+ *as it sends*, to collect the transaction input (fn sig) and destination address\r\n+ *as the receipt resolves*, to collect the gas used (and contractAddress if present)\r\n\r\nThis would allow the reporter to skip a large number of synchronous secondary calls to fetch the block, fetch each tx, etc etc which slow everything down ~100%. \r\n\r\nAre those stages possible to express as events? \r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/548956938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/549414754",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/391#issuecomment-549414754",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/391",
    "id": 549414754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTQxNDc1NA==",
    "user": {
      "login": "alcuadrado",
      "id": 176499,
      "node_id": "MDQ6VXNlcjE3NjQ5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcuadrado",
      "html_url": "https://github.com/alcuadrado",
      "followers_url": "https://api.github.com/users/alcuadrado/followers",
      "following_url": "https://api.github.com/users/alcuadrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcuadrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcuadrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcuadrado/subscriptions",
      "organizations_url": "https://api.github.com/users/alcuadrado/orgs",
      "repos_url": "https://api.github.com/users/alcuadrado/repos",
      "events_url": "https://api.github.com/users/alcuadrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcuadrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-04T15:46:59Z",
    "updated_at": "2019-11-04T15:46:59Z",
    "author_association": "MEMBER",
    "body": "> Yes! I think that context info might be very useful in general / solve coverage's problem specifically.\r\n\r\nGood to know. I'll think more about this, but it's doable.\r\n\r\n> * _as it sends_, to collect the transaction input (fn sig) and destination address\r\n\r\nThis could be implemented by wrapping the provider, right? Maybe that's a better way of doing it.\r\n\r\n> * _as the receipt resolves_, to collect the gas used (and contractAddress if present)\r\n\r\nIf the provider supports notifications you could implement this when a new block notification is fired, right?\r\n\r\nI'm a little hesitant about adding an \"on mined/receipt\" event, as that would make less sense in a more realistic context because of reorgs, and one of the mid-term plans is to add apis/flags to Buidler EVM to simulate reorgs and other network disturbances. I guess smart contract devs won't use them, but they are pretty important to test dapps.",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/549414754/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/549536956",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/391#issuecomment-549536956",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/391",
    "id": 549536956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTUzNjk1Ng==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-04T20:40:13Z",
    "updated_at": "2019-11-04T20:40:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "> This could be implemented by wrapping the provider, right? Maybe that's a better way of doing it.\r\n\r\nAgree! Sounds good to me.\r\n\r\n> I'm a little hesitant about adding an \"on mined/receipt\" event, as that would make less sense in a more realistic context because of reorgs, and one of the mid-term plans is to add apis/flags to Buidler EVM to simulate reorgs and other network disturbances. I guess smart contract devs won't use them, but they are pretty important to test dapps.\r\n\r\nYes, that seems more important to me as well. I think wrapping is the best solution on my end. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/549536956/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1367903701",
    "html_url": "https://github.com/NomicFoundation/hardhat/issues/391#issuecomment-1367903701",
    "issue_url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/391",
    "id": 1367903701,
    "node_id": "IC_kwDOB7jojM5RiI3V",
    "user": {
      "login": "fvictorio",
      "id": 417134,
      "node_id": "MDQ6VXNlcjQxNzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fvictorio",
      "html_url": "https://github.com/fvictorio",
      "followers_url": "https://api.github.com/users/fvictorio/followers",
      "following_url": "https://api.github.com/users/fvictorio/following{/other_user}",
      "gists_url": "https://api.github.com/users/fvictorio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fvictorio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fvictorio/subscriptions",
      "organizations_url": "https://api.github.com/users/fvictorio/orgs",
      "repos_url": "https://api.github.com/users/fvictorio/repos",
      "events_url": "https://api.github.com/users/fvictorio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fvictorio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-30T12:53:01Z",
    "updated_at": "2022-12-30T12:53:01Z",
    "author_association": "MEMBER",
    "body": "This is probably not relevant anymore, and it won't be doable after rethnet anyway.",
    "reactions": {
      "url": "https://api.github.com/repos/NomicFoundation/hardhat/issues/comments/1367903701/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
