{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/417",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/417/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/417/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/417/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/417",
  "id": 839038653,
  "node_id": "MDU6SXNzdWU4MzkwMzg2NTM=",
  "number": 417,
  "title": "Revive the monorepo",
  "user": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2021-03-23T19:15:06Z",
  "updated_at": "2021-04-12T00:13:26Z",
  "closed_at": "2021-04-12T00:13:26Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nDevelopers have a hard time working with the submodules in optimism-integration. In addition, the fragmentation across repositories has caused us to have cyclical dependencies and creates large operational overheads when making changes which require touching many repositories.\r\n\r\n**Describe the solution you'd like**\r\n\r\nWe should revive the monorepo format and move away from the [submodulesintegrations](https://github.com/ethereum-optimism/optimism-integration) \r\n\r\nThere's 4 logical groups for our codebases:\r\n- core: geth (go), core-utils (ts), contracts (sol/ts)\r\n- services (all ts): dtl, ctc/scc batch submitter, relayer, watcher\r\n- tooling such as smock/plugins\r\n- integration tests\r\n- non-core forks: ethereumjs-ovm, solc \r\n\r\nA structure could be that this repository includes the _services_ and _tooling_, and the _core_ and _integration tests_ codebases are grouped in the `go-ethereum` repository. Another structure could be to bundle everything in 1 repository (incl. geth w/ everything else). That way, the `optimism-integration` repository would no longer use submodules, and we'd be able to bundle the integration tests in a single-repo developer workflow (vs having to juggle many PRs right now). We agreed to get rid of ethereumjs-ovm, and I think it's OK to let solc remain in a separate repository.\r\n \r\nThere's a few constraints to take into account:\r\n- Developer Experience should be as close as today, where a user can just `./up.sh` and it \"just works\"\r\n- The \"Docker build ⇒ tag ⇒ release ⇒ deploy\" flow should remain intact, so that our devops can still be fully automated",
  "closed_by": {
    "login": "gakonst",
    "id": 17802178,
    "node_id": "MDQ6VXNlcjE3ODAyMTc4",
    "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gakonst",
    "html_url": "https://github.com/gakonst",
    "followers_url": "https://api.github.com/users/gakonst/followers",
    "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
    "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
    "organizations_url": "https://api.github.com/users/gakonst/orgs",
    "repos_url": "https://api.github.com/users/gakonst/repos",
    "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gakonst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/417/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/417/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/806139797",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/417#issuecomment-806139797",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/417",
    "id": 806139797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNjEzOTc5Nw==",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-24T19:55:20Z",
    "updated_at": "2021-03-25T07:21:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated Proposal: 1 repo with *everything*. That's it. If we go monorepo we should go all-in. \r\n\r\nOur structure MUST be integration test oriented. As a result, the integration tests MUST be in the same place as geth/contracts/batch submitters/relayers.\r\n\r\nThe directory structure would be something like:\r\n```\r\noptimism-monorepo\r\n   l2geth\r\n   contracts\r\n   integration-tests\r\n   core-utils\r\n   batch-submitter\r\n   message-relayer\r\n   watcher\r\n   dtl\r\n   smock\r\n   hardhat-plugin\r\n   testnet\r\n   ops\r\n   ...\r\n```\r\n\r\nOur docker files will remain the same (just moved around and consolidated), allowing us to maintain our workflow around tagging releases => deploying and so on.\r\n\r\n A dev should be able to do `yarn add global @eth-optimism/testnet && optimism-testnet` and they should get the equivalent of the `./up.sh` flow.\r\n\r\nWe will manage the complexity by having a very strict issue/PR label system and a CODEOWNERS.md for each package / module. \r\n\r\nThe label categories will be:\r\n1. Area: Which package is this about?\r\n2. Category: What is this about?\r\n3. Ease: Call for participation w/ a difficulty level\r\n4. Issue: What kind of issue is this about?\r\n5. Module: Which module inside a package is this about? (useful for large packages, e.g. inside geth)\r\n6. Priority\r\n7. Status: Is this blocked? Waiting review?\r\n8. Tag: Which version is this for?\r\n\r\nExample below, taken from [`tokio-rs`](https://github.com/tokio-rs/tokio/issues) issue tracker, to give you a sense of how large repos are managed.\r\n\r\n\r\n\r\n```\r\n['A-ci',\r\n 'A-examples',\r\n 'A-tokio',\r\n 'A-tokio-macros',\r\n 'A-tokio-stream',\r\n 'A-tokio-test',\r\n 'A-tokio-tls',\r\n 'A-tokio-util',\r\n 'C-bug',\r\n 'C-enhancement',\r\n 'C-feature-accepted',\r\n 'C-feature-request',\r\n 'C-maintenance',\r\n 'C-musing',\r\n 'C-proposal',\r\n 'C-question',\r\n 'C-request',\r\n 'E-easy',\r\n 'E-hard',\r\n 'E-help-wanted',\r\n 'E-medium',\r\n 'E-needs-mcve',\r\n 'I-crash',\r\n 'I-hang',\r\n 'I-needs-decision',\r\n 'I-slow',\r\n 'I-unsound 💥',\r\n 'M-blocking',\r\n 'M-codec',\r\n 'M-compat',\r\n 'M-coop',\r\n 'M-fs',\r\n 'M-io',\r\n 'M-macros',\r\n 'M-net',\r\n 'M-process',\r\n 'M-runtime',\r\n 'M-signal',\r\n 'M-stream',\r\n 'M-sync',\r\n 'M-task',\r\n 'M-time',\r\n 'M-tracing',\r\n 'P-high',\r\n 'P-nominate',\r\n 'S-blocked',\r\n 'S-waiting-on-author',\r\n 'S-waiting-on-review',\r\n 'T-docs',\r\n 'T-performance',\r\n 'T-v0.1.x',\r\n 'T-v0.2.x',\r\n 'T-v0.3.x',\r\n 'relnotes']\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/806139797/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/807754275",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/417#issuecomment-807754275",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/417",
    "id": 807754275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNzc1NDI3NQ==",
    "user": {
      "login": "karlfloersch",
      "id": 706123,
      "node_id": "MDQ6VXNlcjcwNjEyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/706123?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karlfloersch",
      "html_url": "https://github.com/karlfloersch",
      "followers_url": "https://api.github.com/users/karlfloersch/followers",
      "following_url": "https://api.github.com/users/karlfloersch/following{/other_user}",
      "gists_url": "https://api.github.com/users/karlfloersch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karlfloersch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karlfloersch/subscriptions",
      "organizations_url": "https://api.github.com/users/karlfloersch/orgs",
      "repos_url": "https://api.github.com/users/karlfloersch/repos",
      "events_url": "https://api.github.com/users/karlfloersch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karlfloersch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-25T23:49:12Z",
    "updated_at": "2021-03-25T23:51:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is awesome! I am a big fan of moving back to the monorepo style is ideal, especially if we optimize the CI to preserve the parallelism & speed that we enjoy now. And obviously ideally improve it!\r\n\r\nSome notes on the proposal:\r\n- I really like how you called out the strict labeling system & PR review system. IMO the biggest benefit of this approach is that it'll give us a single view for our PRs, issues, and labels. If by having a monorepo we can improve our project management flow & make it easily accessible for contributors that would make me very happy!\r\n- I personally don't enjoy installing global packages and so `yarn add global @eth-optimism/testnet && optimism-testnet` is to me just a nice to have. However, I do know a bunch of folks enjoy the convenience so definitely down.\r\n  - I do think that any CLI that we introduce should be minimally magical / minimally heavy. A good repo structure should make the CLI be mostly just aliases to the particular commands we frequently use as opposed to performing some kind of complex compute. The more compute the more likely we're just reinventing the wheel.\r\n- Reducing the time it takes to: 1) make a small change in a package, and then 2) run the _entire_ system to test if your change effected behavior is _super important_. The way we were going to do this in our current system was to conditionally mount packages, so that you only need to build local images for the services that you've changed. How you achieve a rapid feedback loop between `making a change->verifying the full system still works` is an implementation detail but I do think that is a critical metric to measure as you're building the system.\r\n\r\n\r\nOverall, @gakonst I'm suuuuper excited to see this thing happen! If we can have:\r\n- a single source of truth for all issues & PRs related to the protocol\r\n- a rapid feedback loop for devs so that features can be tested rapidly & then integration tested immediately afterwards\r\n- fast, parallelized CI, auto building images & publishing based on tags\r\n- good docs for how to use the monorepo / tooling\r\n\r\nThen I'ma be simply overjoyed.\r\n\r\nKeep us posted on progress!!!! ✅",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/807754275/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/807759224",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/417#issuecomment-807759224",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/417",
    "id": 807759224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNzc1OTIyNA==",
    "user": {
      "login": "karlfloersch",
      "id": 706123,
      "node_id": "MDQ6VXNlcjcwNjEyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/706123?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karlfloersch",
      "html_url": "https://github.com/karlfloersch",
      "followers_url": "https://api.github.com/users/karlfloersch/followers",
      "following_url": "https://api.github.com/users/karlfloersch/following{/other_user}",
      "gists_url": "https://api.github.com/users/karlfloersch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karlfloersch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karlfloersch/subscriptions",
      "organizations_url": "https://api.github.com/users/karlfloersch/orgs",
      "repos_url": "https://api.github.com/users/karlfloersch/repos",
      "events_url": "https://api.github.com/users/karlfloersch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karlfloersch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-25T23:52:32Z",
    "updated_at": "2021-03-25T23:53:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually, one follow up question: What do you think about specs? Should they live in the monorepo as well? If so maybe add to directory structure? Oh another one is our homepage -- my guess is we just keep that out of the monorepo for now for simplicity but eventually definitely think it makes sense to add it in if we go all in on monorepo ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/807759224/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/807829152",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/417#issuecomment-807829152",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/417",
    "id": 807829152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNzgyOTE1Mg==",
    "user": {
      "login": "gakonst",
      "id": 17802178,
      "node_id": "MDQ6VXNlcjE3ODAyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17802178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gakonst",
      "html_url": "https://github.com/gakonst",
      "followers_url": "https://api.github.com/users/gakonst/followers",
      "following_url": "https://api.github.com/users/gakonst/following{/other_user}",
      "gists_url": "https://api.github.com/users/gakonst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gakonst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gakonst/subscriptions",
      "organizations_url": "https://api.github.com/users/gakonst/orgs",
      "repos_url": "https://api.github.com/users/gakonst/repos",
      "events_url": "https://api.github.com/users/gakonst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gakonst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-26T00:38:02Z",
    "updated_at": "2021-03-26T00:38:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Specs/homepage should be outside of the monorepo imo, although I could be convinced otherwise. Lower priority in any case.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/807829152/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/809028035",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/417#issuecomment-809028035",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/417",
    "id": 809028035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTAyODAzNQ==",
    "user": {
      "login": "snario",
      "id": 1933029,
      "node_id": "MDQ6VXNlcjE5MzMwMjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1933029?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/snario",
      "html_url": "https://github.com/snario",
      "followers_url": "https://api.github.com/users/snario/followers",
      "following_url": "https://api.github.com/users/snario/following{/other_user}",
      "gists_url": "https://api.github.com/users/snario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/snario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/snario/subscriptions",
      "organizations_url": "https://api.github.com/users/snario/orgs",
      "repos_url": "https://api.github.com/users/snario/repos",
      "events_url": "https://api.github.com/users/snario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/snario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-29T02:46:57Z",
    "updated_at": "2021-03-29T02:46:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree that the protocol specifications and landing page make sense to be in external repositories.\r\n\r\nThe specifications make sense to be external since they're likely to be modified by an external development process than the ones happening in the main development repo. The artifacts are independent MarkDown documents, not software. \r\n\r\nSimilarly the landing page is similar to a branding component and isn't dependant on or a dependency of anything related to the development of software that implements the protocol, so it may as well be separate.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/809028035/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
