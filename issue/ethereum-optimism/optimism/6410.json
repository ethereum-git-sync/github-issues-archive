{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6410",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6410/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6410/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6410/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/6410",
  "id": 1816851905,
  "node_id": "I_kwDODjvEJM5sSvXB",
  "number": 6410,
  "title": "[Feature] Keep Horizontal scaling using docker-compose",
  "user": {
    "login": "netzulo",
    "id": 11871932,
    "node_id": "MDQ6VXNlcjExODcxOTMy",
    "avatar_url": "https://avatars.githubusercontent.com/u/11871932?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/netzulo",
    "html_url": "https://github.com/netzulo",
    "followers_url": "https://api.github.com/users/netzulo/followers",
    "following_url": "https://api.github.com/users/netzulo/following{/other_user}",
    "gists_url": "https://api.github.com/users/netzulo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/netzulo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/netzulo/subscriptions",
    "organizations_url": "https://api.github.com/users/netzulo/orgs",
    "repos_url": "https://api.github.com/users/netzulo/repos",
    "events_url": "https://api.github.com/users/netzulo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/netzulo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-07-22T18:15:38Z",
  "updated_at": "2023-07-27T04:48:19Z",
  "closed_at": "2023-07-27T04:48:18Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Behaviour obtained\r\n\r\nCan't start with new bedrock ops multiples nodes connected with custom L1+L2 using \"deploy\" key from docker compose\r\n\r\n### Behaviour expected\r\n\r\nCan start with new bedrock ops multiples nodes connected with custom L1+L2 using \"deploy\" key from docker compose\r\n\r\n\r\n#### Notes\r\nBefore bedrock update exists \"replica\" as a different container to allow create multiples nodes connecting to your own L2+L1.\r\nNow the docker configuration just include configuration for l1,l2,\"deployer\" as python script, batcher, proposer op-node and stateviz\r\n\r\nmaybe im missunderstanding something, if i want to generate my 10 deploy(docker funtionality) of \"replica\" old container with new bedrock update, why we are not maintaining this kind of \"docker-compose files\" ?\r\n\r\ni mean, instead of using just this guide https://stack.optimism.io/docs/build/getting-started/#initialize-op-geth\r\nwe can have something like \r\n\r\n```\r\n# /ops-bedrock/docker-compose.l2-nodes.yml\r\nservices:\r\nop-node:\r\n  deploy:\r\n      replicas: 10\r\n  # all node config\r\nop-geth:\r\n  deploy:\r\n      replicas: 10\r\n  # all geth config\r\n```\r\n\r\n:pray: as QA , i think we will want to create strange scenarios to improve productivity.\r\n",
  "closed_by": {
    "login": "netzulo",
    "id": 11871932,
    "node_id": "MDQ6VXNlcjExODcxOTMy",
    "avatar_url": "https://avatars.githubusercontent.com/u/11871932?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/netzulo",
    "html_url": "https://github.com/netzulo",
    "followers_url": "https://api.github.com/users/netzulo/followers",
    "following_url": "https://api.github.com/users/netzulo/following{/other_user}",
    "gists_url": "https://api.github.com/users/netzulo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/netzulo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/netzulo/subscriptions",
    "organizations_url": "https://api.github.com/users/netzulo/orgs",
    "repos_url": "https://api.github.com/users/netzulo/repos",
    "events_url": "https://api.github.com/users/netzulo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/netzulo/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6410/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6410/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1652492542",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/6410#issuecomment-1652492542",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6410",
    "id": 1652492542,
    "node_id": "IC_kwDODjvEJM5ifwj-",
    "user": {
      "login": "tynes",
      "id": 6626818,
      "node_id": "MDQ6VXNlcjY2MjY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6626818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tynes",
      "html_url": "https://github.com/tynes",
      "followers_url": "https://api.github.com/users/tynes/followers",
      "following_url": "https://api.github.com/users/tynes/following{/other_user}",
      "gists_url": "https://api.github.com/users/tynes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tynes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tynes/subscriptions",
      "organizations_url": "https://api.github.com/users/tynes/orgs",
      "repos_url": "https://api.github.com/users/tynes/repos",
      "events_url": "https://api.github.com/users/tynes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tynes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-26T21:04:17Z",
    "updated_at": "2023-07-26T21:04:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Do you want to add additional \"replica\" nodes to the docker compose setup? ie full nodes that are just syncing the network? What is your usecase?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1652492542/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1652843877",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/6410#issuecomment-1652843877",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6410",
    "id": 1652843877,
    "node_id": "IC_kwDODjvEJM5ihGVl",
    "user": {
      "login": "netzulo",
      "id": 11871932,
      "node_id": "MDQ6VXNlcjExODcxOTMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/11871932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/netzulo",
      "html_url": "https://github.com/netzulo",
      "followers_url": "https://api.github.com/users/netzulo/followers",
      "following_url": "https://api.github.com/users/netzulo/following{/other_user}",
      "gists_url": "https://api.github.com/users/netzulo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/netzulo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/netzulo/subscriptions",
      "organizations_url": "https://api.github.com/users/netzulo/orgs",
      "repos_url": "https://api.github.com/users/netzulo/repos",
      "events_url": "https://api.github.com/users/netzulo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/netzulo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-27T03:05:39Z",
    "updated_at": "2023-07-27T03:08:00Z",
    "author_association": "NONE",
    "body": "i think im not totally sure what i really need, but, before bedrock, i had this services working with hardhat as L1\r\n\r\n```\r\nl1\r\ndeployer\r\ndtl\r\nl2\r\nrelayer\r\nfault-detector\r\nsubmitter\r\ngasoracle\r\nverifier\r\nreplica\r\nreplica-healthcheck\r\n# and all influxdb services\r\n```\r\nand now just i need to understand\r\n\r\n```\r\nl1\r\nl2\r\nop-batcher\r\nop-proposer\r\nop-node\r\nstateviz\r\n```\r\n+ make+python+nodejs, i really love you xD\r\n\r\nNow we have a realistict L1+L2+NODE(op-node+op-geth) datadirs and block production, but i think we can make more flexible all docker based configurations\r\n\r\nI will list 2 \"maybe\" interesting fixes for this \r\n\r\n1.  still exists `Dockerfile.packages` with different services so is possible to maintain last known configurations as separated docker file, people like \"blockscout explorer\" have a directory with differents users ready `docker-compose.something.yml` files, so with python and make, all is easy to implement and document at this point\r\n\r\n2. I can understand what a L2-node is a sum of op-node+op-geth connected between datadir and genesis from L2 ( maybe im saying something wrong) so, if this is true we can have a separated file named `docker-compose.l2-nodes.yml`, configured with cappabilities to use \"deploy\" tag from docker compose to generate all what user want it\r\n\r\n![image](https://github.com/ethereum-optimism/optimism/assets/11871932/cc29758f-c724-4f02-9fda-111c4c737583)\r\ni based point 2 of this image from this ref https://community.optimism.io/docs/developers/bedrock/node-operator-guide/#deployment-overview\r\n\r\n### Scenarios\r\n\r\n+ Concurrency, ye.. is distributed, but still dapps connect to different endpoints (RPC urls) so can be interesting\r\n+ Ready docker compose configuration for DAPP (not a web, not a contract, just a little config with many comments \"not source compiler users\"\r\n+ Custom blockchain update % of total nodes with new GETH versions and/or L1/L2 upgrades\r\n\r\n\r\n### Just a note\r\n\r\nI did this in local and is working but not at 100% , im testing some things.\r\n\r\n **be carefull if some reader want to copy this in the future**\r\n```\r\nversion: '3.9'\r\nname: optimism\r\n\r\n# Networks to be used by services\r\nnetworks:\r\n  op-network:\r\n    name: op-network\r\n    driver: bridge\r\n\r\n# This Compose file is expected to be used with the devnet-up.sh script.\r\n# The volumes below mount the configs generated by the script into each\r\n# service.\r\n\r\nvolumes:\r\n  l1_data:\r\n  l2_data:\r\n  op_log:\r\n  geth_data:\r\n\r\n\r\nservices:\r\n  l1:\r\n    container_name: l1\r\n    build:\r\n      context: .\r\n      dockerfile: Dockerfile.l1\r\n    ports:\r\n      - \"8545:8545\"\r\n      - \"8546:8546\"\r\n      - \"9551:8551\"\r\n      - \"7060:6060\"\r\n    volumes:\r\n      - \"l1_data:/db\"\r\n      - \"${PWD}/../.devnet/genesis-l1.json:/genesis.json\"\r\n      - \"${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt\"\r\n\r\n  l2:\r\n    container_name: l2\r\n    build:\r\n      context: .\r\n      dockerfile: Dockerfile.l2\r\n    ports:\r\n      - \"9545:8545\"\r\n      - \"9552:8551\"\r\n      - \"8060:6060\"\r\n    volumes:\r\n      - \"l2_data:/db\"\r\n      - \"${PWD}/../.devnet/genesis-l2.json:/genesis.json\"\r\n      - \"${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt\"\r\n    entrypoint:  # pass the L2 specific flags by overriding the entry-point and adding extra arguments\r\n      - \"/bin/sh\"\r\n      - \"/entrypoint.sh\"\r\n      - \"--authrpc.jwtsecret=/config/test-jwt-secret.txt\"\r\n\r\n  op-node:\r\n    container_name: op-node\r\n    depends_on:\r\n      - l1\r\n      - l2\r\n    build:\r\n      context: ../\r\n      dockerfile: ./op-node/Dockerfile\r\n    command: >\r\n      op-node\r\n      --l1=ws://l1:8546\r\n      --l2=http://l2:8551\r\n      --l2.jwt-secret=/config/test-jwt-secret.txt\r\n      --sequencer.enabled\r\n      --sequencer.l1-confs=0\r\n      --verifier.l1-confs=0\r\n      --p2p.sequencer.key=8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba\r\n      --rollup.config=/rollup.json\r\n      --rpc.addr=0.0.0.0\r\n      --rpc.port=8545\r\n      --p2p.listen.ip=0.0.0.0\r\n      --p2p.listen.tcp=9003\r\n      --p2p.listen.udp=9003\r\n      --p2p.scoring.peers=light\r\n      --p2p.ban.peers=true\r\n      --snapshotlog.file=/op_log/snapshot.log\r\n      --p2p.priv.path=/config/p2p-node-key.txt\r\n      --metrics.enabled\r\n      --metrics.addr=0.0.0.0\r\n      --metrics.port=7300\r\n      --pprof.enabled\r\n      --rpc.enable-admin\r\n    ports:\r\n      - \"7545:8545\"\r\n      - \"9003:9003\"\r\n      - \"7300:7300\"\r\n      - \"6060:6060\"\r\n    volumes:\r\n      - \"${PWD}/p2p-sequencer-key.txt:/config/p2p-sequencer-key.txt\"\r\n      - \"${PWD}/p2p-node-key.txt:/config/p2p-node-key.txt\"\r\n      - \"${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt\"\r\n      - \"${PWD}/../.devnet/rollup.json:/rollup.json\"\r\n      - op_log:/op_log\r\n\r\n  op-proposer:\r\n    container_name: op-proposer\r\n    depends_on:\r\n      - l1\r\n      - l2\r\n      - op-node\r\n    build:\r\n      context: ../\r\n      dockerfile: ./op-proposer/Dockerfile\r\n    ports:\r\n      - \"6062:6060\"\r\n      - \"7302:7300\"\r\n    environment:\r\n      OP_PROPOSER_L1_ETH_RPC: http://op-l1:8545\r\n      OP_PROPOSER_ROLLUP_RPC: http://op-node:8545\r\n      OP_PROPOSER_POLL_INTERVAL: 1s\r\n      OP_PROPOSER_NUM_CONFIRMATIONS: 1\r\n      OP_PROPOSER_MNEMONIC: test test test test test test test test test test test junk\r\n      OP_PROPOSER_L2_OUTPUT_HD_PATH: \"m/44'/60'/0'/0/1\"\r\n      OP_PROPOSER_L2OO_ADDRESS: \"${L2OO_ADDRESS}\"\r\n      OP_PROPOSER_PPROF_ENABLED: \"true\"\r\n      OP_PROPOSER_METRICS_ENABLED: \"true\"\r\n      OP_PROPOSER_ALLOW_NON_FINALIZED: \"true\"\r\n\r\n  op-batcher:\r\n    container_name: op-batcher\r\n    depends_on:\r\n      - l1\r\n      - l2\r\n      - node\r\n    build:\r\n      context: ../\r\n      dockerfile: ./op-batcher/Dockerfile\r\n    ports:\r\n      - \"6061:6060\"\r\n      - \"7301:7300\"\r\n      - \"6545:8545\"\r\n    environment:\r\n      OP_BATCHER_L1_ETH_RPC: http://l1:8545\r\n      OP_BATCHER_L2_ETH_RPC: http://l2:8545\r\n      OP_BATCHER_ROLLUP_RPC: http://op-node:8545\r\n      OP_BATCHER_MAX_CHANNEL_DURATION: 1\r\n      OP_BATCHER_SUB_SAFETY_MARGIN: 4 # SWS is 15, ChannelTimeout is 40\r\n      OP_BATCHER_POLL_INTERVAL: 1s\r\n      OP_BATCHER_NUM_CONFIRMATIONS: 1\r\n      OP_BATCHER_MNEMONIC: test test test test test test test test test test test junk\r\n      OP_BATCHER_SEQUENCER_HD_PATH: \"m/44'/60'/0'/0/2\"\r\n      OP_BATCHER_PPROF_ENABLED: \"true\"\r\n      OP_BATCHER_METRICS_ENABLED: \"true\"\r\n      OP_BATCHER_RPC_ENABLE_ADMIN: \"true\"\r\n\r\n  stateviz:\r\n    build:\r\n      context: ../\r\n      dockerfile: ./ops-bedrock/Dockerfile.stateviz\r\n    command:\r\n      - stateviz\r\n      - -addr=0.0.0.0:8080\r\n      - -snapshot=/op_log/snapshot.log\r\n      - -refresh=10s\r\n    ports:\r\n      - \"9090:8080\"\r\n    volumes:\r\n      - op_log:/op_log:ro\r\n\r\n  create-geth-genesis:\r\n    container_name: create-geth-genesis\r\n    depends_on:\r\n      - l1\r\n      - l2\r\n      - op-node\r\n    build:\r\n      context: ./../op-geth\r\n      dockerfile: ./Dockerfile\r\n    volumes:\r\n      - \"geth_data:/home/datadir/\"\r\n      - \"${PWD}/../.devnet/genesis-l2.json:/config/genesis.json\"\r\n    command: init --datadir /home/datadir /config/genesis.json\r\n\r\n  op-geth:\r\n    container_name: op-geth\r\n    depends_on:\r\n      create-geth-genesis:\r\n        condition: service_completed_successfully\r\n    build:\r\n      context: ./../op-geth\r\n      dockerfile: ./Dockerfile\r\n    ports:\r\n      - \"8549:8545\"\r\n      - \"8550:8546\"\r\n    volumes:\r\n      - \"geth_data:/home/datadir/\"\r\n      - \"${PWD}/test-jwt-secret.txt:/config/jwt.txt\"\r\n      - \"${PWD}/../.devnet/genesis-l2.json:/config/genesis.json\"\r\n    environment:\r\n      L1_RPC: http://l1:8545\r\n      L2_RPC: http://l2:8545\r\n      SEQUENCER_URL: http://op-node:8545\r\n    command: >\r\n      --http\r\n      --http.corsdomain=\"*\"\r\n      --http.vhosts=\"*\"\r\n      --http.addr=0.0.0.0\r\n      --http.api=web3,debug,eth,txpool,net,engine,miner\r\n      --ws\r\n      --ws.addr=0.0.0.0\r\n      --ws.port=8546\r\n      --ws.origins=\"*\"\r\n      --ws.api=web3,debug,eth,txpool,net,engine,miner\r\n      --syncmode=full\r\n      --gcmode=archive\r\n      --nodiscover\r\n      --maxpeers=0\r\n      --networkid=901\r\n      --authrpc.vhosts=\"*\"\r\n      --authrpc.addr=0.0.0.0\r\n      --authrpc.port=8551\r\n      --authrpc.jwtsecret=/config/jwt.txt\r\n      --rollup.sequencerhttp=http://op-node:8545\r\n      --datadir /home/datadir\r\n#     --snapshot=false\r\n#     --rollup.disabletxpoolgossip=true\r\n\r\n```\r\n\r\nlet me know if i'm misunderstanding something please @tynes ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1652843877/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1652866827",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/6410#issuecomment-1652866827",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6410",
    "id": 1652866827,
    "node_id": "IC_kwDODjvEJM5ihL8L",
    "user": {
      "login": "tynes",
      "id": 6626818,
      "node_id": "MDQ6VXNlcjY2MjY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6626818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tynes",
      "html_url": "https://github.com/tynes",
      "followers_url": "https://api.github.com/users/tynes/followers",
      "following_url": "https://api.github.com/users/tynes/following{/other_user}",
      "gists_url": "https://api.github.com/users/tynes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tynes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tynes/subscriptions",
      "organizations_url": "https://api.github.com/users/tynes/orgs",
      "repos_url": "https://api.github.com/users/tynes/repos",
      "events_url": "https://api.github.com/users/tynes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tynes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-27T03:47:19Z",
    "updated_at": "2023-07-27T03:47:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Are you proposing that we add blockscout to the docker compose setup?\r\n\r\n> i think im not totally sure what i really need\r\n\r\nIt would be helpful for us to know what problem you need solved :)\r\n\r\nThe statements that you made about the new system are generally correct\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1652866827/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1652907435",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/6410#issuecomment-1652907435",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6410",
    "id": 1652907435,
    "node_id": "IC_kwDODjvEJM5ihV2r",
    "user": {
      "login": "netzulo",
      "id": 11871932,
      "node_id": "MDQ6VXNlcjExODcxOTMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/11871932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/netzulo",
      "html_url": "https://github.com/netzulo",
      "followers_url": "https://api.github.com/users/netzulo/followers",
      "following_url": "https://api.github.com/users/netzulo/following{/other_user}",
      "gists_url": "https://api.github.com/users/netzulo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/netzulo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/netzulo/subscriptions",
      "organizations_url": "https://api.github.com/users/netzulo/orgs",
      "repos_url": "https://api.github.com/users/netzulo/repos",
      "events_url": "https://api.github.com/users/netzulo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/netzulo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-27T04:48:18Z",
    "updated_at": "2023-07-27T04:48:18Z",
    "author_association": "NONE",
    "body": "close this. i need to think more about my request, and no sense keep it open. XD totally agree",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1652907435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
