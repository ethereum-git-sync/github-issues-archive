{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/8168",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/8168/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/8168/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/8168/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/8168",
  "id": 1993508273,
  "node_id": "I_kwDODjvEJM520oWx",
  "number": 8168,
  "title": "Error Running go run cmd/main.go in op-node: JSON Unmarshal Issue",
  "user": {
    "login": "ZentaChainAdmin",
    "id": 40530024,
    "node_id": "MDQ6VXNlcjQwNTMwMDI0",
    "avatar_url": "https://avatars.githubusercontent.com/u/40530024?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZentaChainAdmin",
    "html_url": "https://github.com/ZentaChainAdmin",
    "followers_url": "https://api.github.com/users/ZentaChainAdmin/followers",
    "following_url": "https://api.github.com/users/ZentaChainAdmin/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZentaChainAdmin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZentaChainAdmin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZentaChainAdmin/subscriptions",
    "organizations_url": "https://api.github.com/users/ZentaChainAdmin/orgs",
    "repos_url": "https://api.github.com/users/ZentaChainAdmin/repos",
    "events_url": "https://api.github.com/users/ZentaChainAdmin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZentaChainAdmin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-11-14T20:22:59Z",
  "updated_at": "2023-12-05T09:41:04Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Describe the bug**\r\nWhen running the `go run cmd/main.go` command for the op-node with specific flags and parameters, the application fails with a critical error related to JSON unmarshaling. The error message indicates an issue with unmarshaling a string into a Go struct field of type `[]interface {}`.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set up the environment with the specified versions of Go, Node, and other dependencies on macOS 14.\r\n2. Navigate to the op-node directory in the terminal.\r\n3. Execute the following command:\r\n\r\n```\r\ngo run cmd/main.go genesis l2 \\\r\n--deploy-config ../packages/contracts-bedrock/deploy-config/getting-started.json \\\r\n--deployment-dir ../packages/contracts-bedrock/deployments/getting-started/ \\\r\n--outfile.l2 genesis.json \\\r\n--outfile.rollup rollup.json \\\r\n--l1-rpc $L1_RPC_URL\r\n```\r\n\r\n**Expected behavior**\r\nI expected the `go run` command to execute successfully without critical failures, generating the specified genesis and rollup JSON files.\r\n\r\n**System Specs:**\r\n- Operating System: macOS 14 Sonoma\r\n- Node Version: 20.9.0\r\n- Go Version: 1.21.4\r\n- Other Relevant Versions:\r\n- git: 2.42.0\r\n- pnpm: 16.14\r\n- foundry: 0.2.0\r\n- make: 3.81\r\n- jq: 1.7\r\n- direnv: 2.32.3\r\n\r\n**Additional context**\r\n3 attempts, all without success.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/8168/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/8168/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1811759916",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/8168#issuecomment-1811759916",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/8168",
    "id": 1811759916,
    "node_id": "IC_kwDODjvEJM5r_UMs",
    "user": {
      "login": "ZentaChainAdmin",
      "id": 40530024,
      "node_id": "MDQ6VXNlcjQwNTMwMDI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/40530024?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ZentaChainAdmin",
      "html_url": "https://github.com/ZentaChainAdmin",
      "followers_url": "https://api.github.com/users/ZentaChainAdmin/followers",
      "following_url": "https://api.github.com/users/ZentaChainAdmin/following{/other_user}",
      "gists_url": "https://api.github.com/users/ZentaChainAdmin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ZentaChainAdmin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ZentaChainAdmin/subscriptions",
      "organizations_url": "https://api.github.com/users/ZentaChainAdmin/orgs",
      "repos_url": "https://api.github.com/users/ZentaChainAdmin/repos",
      "events_url": "https://api.github.com/users/ZentaChainAdmin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ZentaChainAdmin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-15T03:39:57Z",
    "updated_at": "2023-11-15T03:39:57Z",
    "author_association": "NONE",
    "body": "## Issue Closure\r\n\r\nReport: The key to solving the problem was switching from `make` to `gmake`. Additionally, during the process, I reinstalled Homebrew and encountered some challenges with `direnv`. However, this was addressed by reconfiguring `direnv` in the `.bashrc` file, ensuring its proper functionality.\r\n\r\nThank you for the support.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1811759916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1820855441",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/8168#issuecomment-1820855441",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/8168",
    "id": 1820855441,
    "node_id": "IC_kwDODjvEJM5siAyR",
    "user": {
      "login": "evanlikn",
      "id": 126958457,
      "node_id": "U_kgDOB5E7eQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/126958457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/evanlikn",
      "html_url": "https://github.com/evanlikn",
      "followers_url": "https://api.github.com/users/evanlikn/followers",
      "following_url": "https://api.github.com/users/evanlikn/following{/other_user}",
      "gists_url": "https://api.github.com/users/evanlikn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/evanlikn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/evanlikn/subscriptions",
      "organizations_url": "https://api.github.com/users/evanlikn/orgs",
      "repos_url": "https://api.github.com/users/evanlikn/repos",
      "events_url": "https://api.github.com/users/evanlikn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/evanlikn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-21T12:43:29Z",
    "updated_at": "2023-11-21T12:43:29Z",
    "author_association": "NONE",
    "body": "> ## Issue Closure\r\n> Report: The key to solving the problem was switching from `make` to `gmake`. Additionally, during the process, I reinstalled Homebrew and encountered some challenges with `direnv`. However, this was addressed by reconfiguring `direnv` in the `.bashrc` file, ensuring its proper functionality.\r\n> \r\n> Thank you for the support.\r\n\r\nHow did you solved this issue by switching from `make` to `gmake`, it seems to me was no difference, could you explained with more details, thanks very much. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1820855441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1837164795",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/8168#issuecomment-1837164795",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/8168",
    "id": 1837164795,
    "node_id": "IC_kwDODjvEJM5tgOj7",
    "user": {
      "login": "rbrick",
      "id": 5923432,
      "node_id": "MDQ6VXNlcjU5MjM0MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5923432?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rbrick",
      "html_url": "https://github.com/rbrick",
      "followers_url": "https://api.github.com/users/rbrick/followers",
      "following_url": "https://api.github.com/users/rbrick/following{/other_user}",
      "gists_url": "https://api.github.com/users/rbrick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rbrick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rbrick/subscriptions",
      "organizations_url": "https://api.github.com/users/rbrick/orgs",
      "repos_url": "https://api.github.com/users/rbrick/repos",
      "events_url": "https://api.github.com/users/rbrick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rbrick/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-02T14:45:20Z",
    "updated_at": "2023-12-02T14:45:20Z",
    "author_association": "NONE",
    "body": "Following up to this. I ran into this issue. It seems like Forge as of the recent nightly builds are escaping strings passed into constructor (and likely other places) in the broadcast JSON. \r\n\r\nForge v0.2.0 (commit 5b7e4cb)\r\n\r\n```solidity\r\npragma solidity ^0.8.13;\r\n\r\ncontract Test {\r\n\r\n   string public s;\r\n\r\n   constructor(string memory _s) {\r\n    s = _s;\r\n   }\r\n\r\n}\r\n```\r\n\r\n```json\r\n\"arguments\": [\r\n        \"\\\"HelloWorld\\\"\"\r\n ]\r\n```\r\n\r\nThis escaping leads to it being encoded as a string:\r\n\r\n```json\r\n{\r\n \"arguments\": \"[\\\"0x6E5ed6320F977a956fA446EDF43Ab8DaABc274D4\\\",\\\"\\\\OVM_L1CrossDomainMessenger\\\\\\\"]\"\r\n}\r\n```\r\n\r\nWhere as Go expects an `[]any` slice/array.\r\n\r\nA solution I found for this was to change the Deployer.sol script:\r\n\r\nhttps://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/scripts/Deployer.sol#L382\r\n\r\nand use `jq` to parse the escaped string as JSON: \r\n\r\noriginal:\r\n```solidity\r\n     cmd[2] = string.concat(Executables.jq, \" -r '.arguments' <<< '\", _transaction, \"'\");\r\n```\r\n\r\nnew:\r\n\r\n```solidity\r\n     cmd[2] = string.concat(Executables.jq, \" -r 'try(.arguments|map_values(try(fromjson),.))' <<< '\", _transaction, \"'\");\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1837164795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1840388204",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/8168#issuecomment-1840388204",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/8168",
    "id": 1840388204,
    "node_id": "IC_kwDODjvEJM5tshhs",
    "user": {
      "login": "Sallery-X",
      "id": 45587738,
      "node_id": "MDQ6VXNlcjQ1NTg3NzM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/45587738?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sallery-X",
      "html_url": "https://github.com/Sallery-X",
      "followers_url": "https://api.github.com/users/Sallery-X/followers",
      "following_url": "https://api.github.com/users/Sallery-X/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sallery-X/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sallery-X/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sallery-X/subscriptions",
      "organizations_url": "https://api.github.com/users/Sallery-X/orgs",
      "repos_url": "https://api.github.com/users/Sallery-X/repos",
      "events_url": "https://api.github.com/users/Sallery-X/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sallery-X/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-05T09:40:28Z",
    "updated_at": "2023-12-05T09:40:28Z",
    "author_association": "NONE",
    "body": "I have the same issue\r\nt=2023-12-05T09:37:45+0000 lvl=info msg=\"Deploy config\" path=/app/deploy-config/142095.json\r\nt=2023-12-05T09:37:45+0000 lvl=info msg=\"Deployment directory\" path=/app/deployments/142095\r\nt=2023-12-05T09:37:45+0000 lvl=crit msg=\"Application failed\"   message=\"json: cannot unmarshal string into Go struct field Deployment.args of type []interface {}\"",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1840388204/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1840389014",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/8168#issuecomment-1840389014",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/8168",
    "id": 1840389014,
    "node_id": "IC_kwDODjvEJM5tshuW",
    "user": {
      "login": "Sallery-X",
      "id": 45587738,
      "node_id": "MDQ6VXNlcjQ1NTg3NzM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/45587738?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sallery-X",
      "html_url": "https://github.com/Sallery-X",
      "followers_url": "https://api.github.com/users/Sallery-X/followers",
      "following_url": "https://api.github.com/users/Sallery-X/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sallery-X/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sallery-X/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sallery-X/subscriptions",
      "organizations_url": "https://api.github.com/users/Sallery-X/orgs",
      "repos_url": "https://api.github.com/users/Sallery-X/repos",
      "events_url": "https://api.github.com/users/Sallery-X/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sallery-X/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-05T09:41:03Z",
    "updated_at": "2023-12-05T09:41:03Z",
    "author_association": "NONE",
    "body": "> Following up to this. I ran into this issue. It seems like Forge as of the recent nightly builds are escaping strings passed into constructor (and likely other places) in the broadcast JSON.\r\n> \r\n> Forge v0.2.0 (commit 5b7e4cb)\r\n> \r\n> ```solidity\r\n> pragma solidity ^0.8.13;\r\n> \r\n> contract Test {\r\n> \r\n>    string public s;\r\n> \r\n>    constructor(string memory _s) {\r\n>     s = _s;\r\n>    }\r\n> \r\n> }\r\n> ```\r\n> \r\n> ```json\r\n> \"arguments\": [\r\n>         \"\\\"HelloWorld\\\"\"\r\n>  ]\r\n> ```\r\n> \r\n> This escaping leads to it being encoded as a string:\r\n> \r\n> ```json\r\n> {\r\n>  \"arguments\": \"[\\\"0x6E5ed6320F977a956fA446EDF43Ab8DaABc274D4\\\",\\\"\\\\OVM_L1CrossDomainMessenger\\\\\\\"]\"\r\n> }\r\n> ```\r\n> \r\n> Where as Go expects an `[]any` slice/array.\r\n> \r\n> A solution I found for this was to change the Deployer.sol script:\r\n> \r\n> https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/scripts/Deployer.sol#L382\r\n> \r\n> and use `jq` to parse the escaped string as JSON:\r\n> \r\n> original:\r\n> \r\n> ```solidity\r\n>      cmd[2] = string.concat(Executables.jq, \" -r '.arguments' <<< '\", _transaction, \"'\");\r\n> ```\r\n> \r\n> new:\r\n> \r\n> ```solidity\r\n>      cmd[2] = string.concat(Executables.jq, \" -r 'try(.arguments|map_values(try(fromjson),.))' <<< '\", _transaction, \"'\");\r\n> ```\r\n\r\nI tried it, but it did not work",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1840389014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
