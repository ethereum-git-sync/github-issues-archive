{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/4845",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/4845/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/4845/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/4845/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/4845",
  "id": 1573227571,
  "node_id": "I_kwDODjvEJM5dxYwz",
  "number": 4845,
  "title": "Lib_MerkleTrie is susceptible to proof forgeries ",
  "user": {
    "login": "tjade273",
    "id": 3936648,
    "node_id": "MDQ6VXNlcjM5MzY2NDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3936648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tjade273",
    "html_url": "https://github.com/tjade273",
    "followers_url": "https://api.github.com/users/tjade273/followers",
    "following_url": "https://api.github.com/users/tjade273/following{/other_user}",
    "gists_url": "https://api.github.com/users/tjade273/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tjade273/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tjade273/subscriptions",
    "organizations_url": "https://api.github.com/users/tjade273/orgs",
    "repos_url": "https://api.github.com/users/tjade273/repos",
    "events_url": "https://api.github.com/users/tjade273/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tjade273/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4266439918,
      "node_id": "LA_kwDODjvEJM7-TLTu",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-bedrock-fixes-this",
      "name": "C-bedrock-fixes-this",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: Something Bedrock fixes"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-02-06T20:26:29Z",
  "updated_at": "2023-02-06T20:33:41Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "<!--\r\nNeed help?\r\nRefer to our contributing guidelines for additional information about making a good issue:\r\nhttps://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\n**Describe the bug**\r\nA carefully constructed internal MPT node can be interpreted alternatively as a \"short\" (<32 bytes) node, literally embedded in the parent or as the hash of a \"long\" node. It is possible to insert a pair of leaf nodes such that the `Lib_MerkleTrie.get` function will return a value that is not in the trie when queried at one of the keys and supplied with a maliciously constructed proof.\r\n\r\nThis bug is not exploitable in the live contracts as it requires a branch node close to the leaf, which is impractical to construct in a trie where keys are hashes, such as in the Ethereum state trie. All uses of `Lib_MerkleTrie` in the Optimism codebase are called via `Lib_SecureMerkleTrie`, which enforces that keys are keccak256 hashes. However, for defense in depth and to protect future use cases, `Lib_MerkleTrie` should strongly guarantee a lack of proof forgeries.\r\n\r\n**To Reproduce**\r\nExecute this contract:\r\n```\r\npragma solidity 0.8.14;\r\n\r\nimport \"../src/Lib_RLPReader.sol\";\r\nimport \"../src/Lib_MerkleTrie.sol\";\r\nimport \"../src/Lib_BytesUtils.sol\";\r\nimport \"forge-std/console.sol\";\r\n\r\ncontract Test{\r\n    bytes constant key = hex\"0000000000000000000000000000000000000000000000000000000000000000\";\r\n    bytes32 constant root = 0x3c88fcfaefa2e96e5192a9ec39e1ec17c71f7b6194875879754a545ac12cb0d7;\r\n    function testProofDivergence() public pure {\r\n        bytes memory proof1 = hex\"f8a4b844f842a01000000000000000000000000000000000000000000000000000000000000000a028456157f0fb83de685c3bac05f3a363bc2d9a367596d6001e8b42106f37c892b83bf839a0de209cd2f1897ee75b1a9bc61c5d2e25f1a5580ecb23c598894e64683e833200c82086666f6f626172808080808080808080808080808080a0df209d000000000000000000000000000000000000000000516b758b00000000\";\r\n        bytes memory proof2 = hex\"f8a3b844f842a01000000000000000000000000000000000000000000000000000000000000000a028456157f0fb83de685c3bac05f3a363bc2d9a367596d6001e8b42106f37c892b83bf839a0de209cd2f1897ee75b1a9bc61c5d2e25f1a5580ecb23c598894e64683e833200c82086666f6f6261728080808080808080808080808080809fde209cd2f1897ee75b1a9bc61c5d2e25f1a5580ecb23c598894e64683e8332\";\r\n        (bool exists1, bytes memory value1) = Lib_MerkleTrie.get(key, proof1, root);\r\n        require(exists1, \"Proof 1 proved exclusion\");\r\n        (bool exists2, bytes memory value2) = Lib_MerkleTrie.get(key, proof2, root);\r\n        require(exists2, \"Proof 2 proved exclusion\");\r\n\r\n        assert(!Lib_BytesUtils.equal(value1, value2));\r\n    }\r\n}\r\n```\r\n\r\n**Expected behavior**\r\nTwo unequal values should not be returned by `Lib_MerkleTrie.get` for an identical root and key.\r\n\r\n**Additional context**\r\nA reasonable fix for this issue is to compare the hashes of the `nodeId`s instead of padding the short node and comparing the values directly. \r\nAs an example: https://github.com/lidofinance/curve-merkle-oracle/blob/fffd375659358af54a6e8bbf8c3aa44188894c81/contracts/MerklePatriciaProofVerifier.sol#L169-L184",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/4845/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/4845/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1419708715",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/4845#issuecomment-1419708715",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/4845",
    "id": 1419708715,
    "node_id": "IC_kwDODjvEJM5Unwkr",
    "user": {
      "login": "tjade273",
      "id": 3936648,
      "node_id": "MDQ6VXNlcjM5MzY2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3936648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjade273",
      "html_url": "https://github.com/tjade273",
      "followers_url": "https://api.github.com/users/tjade273/followers",
      "following_url": "https://api.github.com/users/tjade273/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjade273/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjade273/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjade273/subscriptions",
      "organizations_url": "https://api.github.com/users/tjade273/orgs",
      "repos_url": "https://api.github.com/users/tjade273/repos",
      "events_url": "https://api.github.com/users/tjade273/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjade273/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-06T20:29:59Z",
    "updated_at": "2023-02-06T20:29:59Z",
    "author_association": "NONE",
    "body": "Details and example construction: https://github.com/tjade273/optimism-merkle-forgery-poc\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1419708715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1419709815",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/4845#issuecomment-1419709815",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/4845",
    "id": 1419709815,
    "node_id": "IC_kwDODjvEJM5Unw13",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-06T20:30:55Z",
    "updated_at": "2023-02-06T20:32:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "We are aware of this issue in the legacy `Lib_MerkleTrie` contract. We believe this should be fixed in the updated Bedrock version of the contract: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/contracts/libraries/trie/MerkleTrie.sol",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1419709815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
