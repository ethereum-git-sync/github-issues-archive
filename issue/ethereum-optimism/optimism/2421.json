{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2421",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2421/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2421/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2421/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/2421",
  "id": 1193538393,
  "node_id": "I_kwDODjvEJM5HI_NZ",
  "number": 2421,
  "title": "NFT bridge between L1 and Optimism",
  "user": {
    "login": "sam-goldman-zz",
    "id": 35856159,
    "node_id": "MDQ6VXNlcjM1ODU2MTU5",
    "avatar_url": "https://avatars.githubusercontent.com/u/35856159?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sam-goldman-zz",
    "html_url": "https://github.com/sam-goldman-zz",
    "followers_url": "https://api.github.com/users/sam-goldman-zz/followers",
    "following_url": "https://api.github.com/users/sam-goldman-zz/following{/other_user}",
    "gists_url": "https://api.github.com/users/sam-goldman-zz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sam-goldman-zz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sam-goldman-zz/subscriptions",
    "organizations_url": "https://api.github.com/users/sam-goldman-zz/orgs",
    "repos_url": "https://api.github.com/users/sam-goldman-zz/repos",
    "events_url": "https://api.github.com/users/sam-goldman-zz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sam-goldman-zz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2907832555,
      "node_id": "MDU6TGFiZWwyOTA3ODMyNTU1",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-feature-request",
      "name": "C-feature-request",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: A feature request."
    },
    {
      "id": 2981952422,
      "node_id": "MDU6TGFiZWwyOTgxOTUyNDIy",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/M-contracts",
      "name": "M-contracts",
      "color": "FBCA04",
      "default": false,
      "description": "Module: contracts"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2022-04-05T18:02:38Z",
  "updated_at": "2022-06-25T00:40:21Z",
  "closed_at": "2022-06-25T00:40:21Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "The purpose of this issue is to solicit feedback on an initial proposal for an ERC721 bridge between L1 and Optimism. The bridge allows owners of L1 NFTs to make deposits into L2 and withdrawals back to L1 in the same manner that ERC20s can be transferred using the [Standard Token Bridge](https://community.optimism.io/docs/developers/bridge/standard-bridge/#).\r\n\r\nThe relevant code can be found in [this PR](https://github.com/ethereum-optimism/optimism/pull/2577) or in the standalone repo [here](https://github.com/sam-goldman/optimism-nft-bridge). All contracts have been tested locally. For more information regarding the bridge, check out [these slides](https://docs.google.com/presentation/d/e/2PACX-1vQDgyIjiWeXjkR3Yq-DDZSnyGqvxQ5efrY5WrwgRg7YjumPegQzYMaGwOHtYK_R5SGw6EGZT6_CGju1/pub?start=false&loop=false&delayms=3000&slide=id.g120f23c86d9_0_0) (credit goes to Mark!)\r\n\r\nThe design of the ERC721 Bridge is almost exactly the same as the Standard Token Bridge, with one main difference: token URIs are transferred off-chain using a permissioned oracle. The reason for this design choice is mostly due to the cost of transferring a token URI from L1 to L2 on-chain, which can be expensive since it is a large string. Also, it is common for NFT projects to change token URIs for various reasons, which means users would need to pay gas fees every time they want to to update their L2 token URI. We view this as a temporary solution until it is possible to read L1 state from L2, which would allow us to permissionlessly view tokenURIs from L2 without using an oracle. To be clear, only token URIs would be transferred off-chain; token IDs would be sent on-chain.\r\n\r\nWe'd love to hear the community's feedback on the design of the bridge, as well as the following open questions:\r\n- What is the best way to handle the transfer of token URIs from L1 to L2?\r\n- Should there be a token list to maintain a source of truth for high-profile NFT projects, similar to [Optimism's ERC20 Token List](https://github.com/ethereum-optimism/ethereum-optimism.github.io/blob/master/optimism.tokenlist.json)?\r\n  - Who would maintain this token list?",
  "closed_by": {
    "login": "smartcontracts",
    "id": 14298799,
    "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/smartcontracts",
    "html_url": "https://github.com/smartcontracts",
    "followers_url": "https://api.github.com/users/smartcontracts/followers",
    "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
    "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
    "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
    "repos_url": "https://api.github.com/users/smartcontracts/repos",
    "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
    "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2421/reactions",
    "total_count": 10,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 5,
    "eyes": 5
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2421/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1093378227",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2421#issuecomment-1093378227",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2421",
    "id": 1093378227,
    "node_id": "IC_kwDODjvEJM5BK6Cz",
    "user": {
      "login": "annieke",
      "id": 15117059,
      "node_id": "MDQ6VXNlcjE1MTE3MDU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/15117059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/annieke",
      "html_url": "https://github.com/annieke",
      "followers_url": "https://api.github.com/users/annieke/followers",
      "following_url": "https://api.github.com/users/annieke/following{/other_user}",
      "gists_url": "https://api.github.com/users/annieke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/annieke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/annieke/subscriptions",
      "organizations_url": "https://api.github.com/users/annieke/orgs",
      "repos_url": "https://api.github.com/users/annieke/repos",
      "events_url": "https://api.github.com/users/annieke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/annieke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-08T21:34:56Z",
    "updated_at": "2022-04-08T21:34:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "the optimism team (@maurelian @bdresser me) and quixotic (@sam-goldman @markdawson) met about this yesterday, and we have some open questions for reviewers!\r\n\r\n1. How should we deal with TokenURIs?\r\n    - We could use a trusted oracle to retrieve URI from L1 to include on L2. This could also periodically poll for updates.\r\n    - We could send tokenURI over the bridge. This might be very expensive for users (unless we hash the data or do something fancy.)\r\n2. How does the frontend know which L2 contract to mint from?\r\n    - If the L2 contract is deployed form the standard factory, can we use on-chain data to look up the address used by previous versions of the same NFT?\r\n    - For custom L2 contracts, how should we manage the token list? Can only the original core team get their custom contract added to the token list? Or can anyone? Which teams are responsible for approving requests?\r\n3.  If users bridge an NFT before that NFT collection’s canonical/custom contract exists, what’s the process for swapping the “factory” NFT for the “canonical” one? Should we have a swap/exchange functionality?\r\n4. Will NFT/collection devs be upset about permissionless bridging?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1093378227/reactions",
      "total_count": 6,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 6,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1098533093",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2421#issuecomment-1098533093",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2421",
    "id": 1098533093,
    "node_id": "IC_kwDODjvEJM5Bekjl",
    "user": {
      "login": "xuannu-eth",
      "id": 93546063,
      "node_id": "U_kgDOBZNmTw",
      "avatar_url": "https://avatars.githubusercontent.com/u/93546063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xuannu-eth",
      "html_url": "https://github.com/xuannu-eth",
      "followers_url": "https://api.github.com/users/xuannu-eth/followers",
      "following_url": "https://api.github.com/users/xuannu-eth/following{/other_user}",
      "gists_url": "https://api.github.com/users/xuannu-eth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xuannu-eth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xuannu-eth/subscriptions",
      "organizations_url": "https://api.github.com/users/xuannu-eth/orgs",
      "repos_url": "https://api.github.com/users/xuannu-eth/repos",
      "events_url": "https://api.github.com/users/xuannu-eth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xuannu-eth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-13T22:11:23Z",
    "updated_at": "2022-04-13T22:11:23Z",
    "author_association": "NONE",
    "body": "hey! sharing some initial feedback as one of the creators of @crypto-coven after getting a ping from indreams.eth—i'm not familiar at all with l2s/bridging, so please feel free to take or leave any of these questions/comments!\r\n\r\n**token uris**: using an oracle sounds reasonable as an interim solution. are there any downsides other than that it's happening off-chain and needs to be periodically refreshed?\r\n\r\n**permissionless bridging**: speaking for ourselves, i can't see why we'd have any objections, assuming that it doesn't introduce any side effects for other tokens in the collection or the collection as a whole.\r\n\r\n**managing the token list**: restricting adding a canonical contract to the owner address of the l1 contract sounds like it'd probably be the route to go!\r\n\r\n**multiple l2 contracts**: this question feels like the biggest issue for me on a few levels:\r\n\r\n1. i can imagine changing the functionality of an nft to a standard factory nft becoming really fraught in a number of ways. two examples that come to mind are soulbound nfts and loanable nfts. neither feature is popular, but it's also not that uncommon to experiment with erc-721 contracts, and permissionless bridging with changed functionality feels like it could be... quite dangerous? i saw in the deck that the concern was malicious contracts; i'd be curious to know more about how that risk could manifest.\r\n2. fragmentation across an l2 would also be pretty undesirable—not just for liquidity, but for all kinds of functionality that you might want to build on top of a collection. has there been consideration around consolidating previously bridged nfts after a canonical contract exists?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1098533093/reactions",
      "total_count": 5,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 5,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1099863396",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2421#issuecomment-1099863396",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2421",
    "id": 1099863396,
    "node_id": "IC_kwDODjvEJM5BjpVk",
    "user": {
      "login": "sam-goldman-zz",
      "id": 35856159,
      "node_id": "MDQ6VXNlcjM1ODU2MTU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/35856159?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sam-goldman-zz",
      "html_url": "https://github.com/sam-goldman-zz",
      "followers_url": "https://api.github.com/users/sam-goldman-zz/followers",
      "following_url": "https://api.github.com/users/sam-goldman-zz/following{/other_user}",
      "gists_url": "https://api.github.com/users/sam-goldman-zz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sam-goldman-zz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sam-goldman-zz/subscriptions",
      "organizations_url": "https://api.github.com/users/sam-goldman-zz/orgs",
      "repos_url": "https://api.github.com/users/sam-goldman-zz/repos",
      "events_url": "https://api.github.com/users/sam-goldman-zz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sam-goldman-zz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-15T05:19:33Z",
    "updated_at": "2022-04-15T05:19:33Z",
    "author_association": "NONE",
    "body": "For the token URI issue, Mark and I think it’d be best to follow EIP-681: https://eips.ethereum.org/EIPS/eip-681. This would allow L2 ERC721 contracts to direct the client to the correct L1 ERC721 contract to retrieve the token URI. This means that the URI on L1 would remain the source of truth, and users would only need to trust that the front-end they are using is displaying the correct information (i.e. it isn’t malicious). ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1099863396/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1100105275",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2421#issuecomment-1100105275",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2421",
    "id": 1100105275,
    "node_id": "IC_kwDODjvEJM5BkkY7",
    "user": {
      "login": "strollinghome",
      "id": 5885048,
      "node_id": "MDQ6VXNlcjU4ODUwNDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5885048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/strollinghome",
      "html_url": "https://github.com/strollinghome",
      "followers_url": "https://api.github.com/users/strollinghome/followers",
      "following_url": "https://api.github.com/users/strollinghome/following{/other_user}",
      "gists_url": "https://api.github.com/users/strollinghome/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/strollinghome/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/strollinghome/subscriptions",
      "organizations_url": "https://api.github.com/users/strollinghome/orgs",
      "repos_url": "https://api.github.com/users/strollinghome/repos",
      "events_url": "https://api.github.com/users/strollinghome/events{/privacy}",
      "received_events_url": "https://api.github.com/users/strollinghome/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-15T13:19:31Z",
    "updated_at": "2022-04-15T13:19:31Z",
    "author_association": "NONE",
    "body": "> For the token URI issue, Mark and I think it’d be best to follow EIP-681: https://eips.ethereum.org/EIPS/eip-681.\r\n\r\nInteresting, what would be the benefits of EIP-681 over [EIP-3668](https://eips.ethereum.org/EIPS/eip-3668)?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1100105275/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1101824316",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2421#issuecomment-1101824316",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2421",
    "id": 1101824316,
    "node_id": "IC_kwDODjvEJM5BrIE8",
    "user": {
      "login": "markdawson",
      "id": 11080462,
      "node_id": "MDQ6VXNlcjExMDgwNDYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/11080462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdawson",
      "html_url": "https://github.com/markdawson",
      "followers_url": "https://api.github.com/users/markdawson/followers",
      "following_url": "https://api.github.com/users/markdawson/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdawson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdawson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdawson/subscriptions",
      "organizations_url": "https://api.github.com/users/markdawson/orgs",
      "repos_url": "https://api.github.com/users/markdawson/repos",
      "events_url": "https://api.github.com/users/markdawson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdawson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-18T22:39:35Z",
    "updated_at": "2022-04-18T22:39:35Z",
    "author_association": "NONE",
    "body": "> > For the token URI issue, Mark and I think it’d be best to follow EIP-681: https://eips.ethereum.org/EIPS/eip-681.\r\n> \r\n> Interesting, what would be the benefits of EIP-681 over [EIP-3668](https://eips.ethereum.org/EIPS/eip-3668)?\r\n\r\nEIP-681 is much more simple than EIP-3668 (and we don't really need EIP-3668's flexibility).\r\n\r\nUsing EIP-681, the layer 2 contract's `tokenURI` would return a link that looks like this:\r\n\r\n`ethereum:0x8C0ef71B6FFB7786db4b4b00eD2503c8896e6038@42/tokenUri?tokenId=1`  \r\n\r\nThis means the client should go look up the result of `tokenURI` in the layer 1 contract (in this case `@42` means to look up on chainId 42 which is the kovan testnet). I think of this as similar to an IPFS lookup in that it's the client's job to figure out how to connect to the URI even if it's not an HTTP uri.\r\n\r\nEIP-3668 would revert with error `OffchainLookup` and specify an array of URLs and a callback function. Returning an error for intended behavior might be sort of surprising and imply something is wrong. We also don't need a full array of URLs or a callback function, so the power of EIP-3668 isn't necessary.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1101824316/reactions",
      "total_count": 4,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 4,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1110168702",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2421#issuecomment-1110168702",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2421",
    "id": 1110168702,
    "node_id": "IC_kwDODjvEJM5CK9R-",
    "user": {
      "login": "outdoteth",
      "id": 37438950,
      "node_id": "MDQ6VXNlcjM3NDM4OTUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/37438950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/outdoteth",
      "html_url": "https://github.com/outdoteth",
      "followers_url": "https://api.github.com/users/outdoteth/followers",
      "following_url": "https://api.github.com/users/outdoteth/following{/other_user}",
      "gists_url": "https://api.github.com/users/outdoteth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/outdoteth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/outdoteth/subscriptions",
      "organizations_url": "https://api.github.com/users/outdoteth/orgs",
      "repos_url": "https://api.github.com/users/outdoteth/repos",
      "events_url": "https://api.github.com/users/outdoteth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/outdoteth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-26T19:27:58Z",
    "updated_at": "2022-04-26T19:27:58Z",
    "author_association": "NONE",
    "body": "Is it possible to have the token list maintained by a DAO?\r\n\r\n+1 for EIP-681. Very elegant.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1110168702/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1115440560",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2421#issuecomment-1115440560",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2421",
    "id": 1115440560,
    "node_id": "IC_kwDODjvEJM5CfEWw",
    "user": {
      "login": "rzmahmood",
      "id": 35128199,
      "node_id": "MDQ6VXNlcjM1MTI4MTk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/35128199?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rzmahmood",
      "html_url": "https://github.com/rzmahmood",
      "followers_url": "https://api.github.com/users/rzmahmood/followers",
      "following_url": "https://api.github.com/users/rzmahmood/following{/other_user}",
      "gists_url": "https://api.github.com/users/rzmahmood/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rzmahmood/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rzmahmood/subscriptions",
      "organizations_url": "https://api.github.com/users/rzmahmood/orgs",
      "repos_url": "https://api.github.com/users/rzmahmood/repos",
      "events_url": "https://api.github.com/users/rzmahmood/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rzmahmood/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-02T22:44:14Z",
    "updated_at": "2022-05-02T22:44:14Z",
    "author_association": "NONE",
    "body": "Curious on the usage of EIP-681 vs https://github.com/ChainAgnostic/CAIPs/blob/master/CAIPs/caip-19.md",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1115440560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1115448253",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2421#issuecomment-1115448253",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2421",
    "id": 1115448253,
    "node_id": "IC_kwDODjvEJM5CfGO9",
    "user": {
      "login": "markdawson",
      "id": 11080462,
      "node_id": "MDQ6VXNlcjExMDgwNDYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/11080462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdawson",
      "html_url": "https://github.com/markdawson",
      "followers_url": "https://api.github.com/users/markdawson/followers",
      "following_url": "https://api.github.com/users/markdawson/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdawson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdawson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdawson/subscriptions",
      "organizations_url": "https://api.github.com/users/markdawson/orgs",
      "repos_url": "https://api.github.com/users/markdawson/repos",
      "events_url": "https://api.github.com/users/markdawson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdawson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-02T23:01:37Z",
    "updated_at": "2022-05-02T23:01:37Z",
    "author_association": "NONE",
    "body": "> Is it possible to have the token list maintained by a DAO?\r\n> \r\n> +1 for EIP-681. Very elegant.\r\n\r\nI think the Optimism product team is actively thinking about how to maintain the token list. I think the ideal is that eventually it is maintained by a decentralized group but might begin with a smaller group that's easier to coordinate.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1115448253/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1115448720",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2421#issuecomment-1115448720",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2421",
    "id": 1115448720,
    "node_id": "IC_kwDODjvEJM5CfGWQ",
    "user": {
      "login": "markdawson",
      "id": 11080462,
      "node_id": "MDQ6VXNlcjExMDgwNDYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/11080462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdawson",
      "html_url": "https://github.com/markdawson",
      "followers_url": "https://api.github.com/users/markdawson/followers",
      "following_url": "https://api.github.com/users/markdawson/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdawson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdawson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdawson/subscriptions",
      "organizations_url": "https://api.github.com/users/markdawson/orgs",
      "repos_url": "https://api.github.com/users/markdawson/repos",
      "events_url": "https://api.github.com/users/markdawson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdawson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-02T23:02:41Z",
    "updated_at": "2022-05-02T23:02:41Z",
    "author_association": "NONE",
    "body": "> Curious on the usage of EIP-681 vs https://github.com/ChainAgnostic/CAIPs/blob/master/CAIPs/caip-19.md\r\n\r\nI haven't seen CAIP-19. Both standards seem like they would work. Do you know of any dapps that use CAIP-19?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1115448720/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1117741492",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2421#issuecomment-1117741492",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2421",
    "id": 1117741492,
    "node_id": "IC_kwDODjvEJM5Cn2G0",
    "user": {
      "login": "sam-goldman-zz",
      "id": 35856159,
      "node_id": "MDQ6VXNlcjM1ODU2MTU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/35856159?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sam-goldman-zz",
      "html_url": "https://github.com/sam-goldman-zz",
      "followers_url": "https://api.github.com/users/sam-goldman-zz/followers",
      "following_url": "https://api.github.com/users/sam-goldman-zz/following{/other_user}",
      "gists_url": "https://api.github.com/users/sam-goldman-zz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sam-goldman-zz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sam-goldman-zz/subscriptions",
      "organizations_url": "https://api.github.com/users/sam-goldman-zz/orgs",
      "repos_url": "https://api.github.com/users/sam-goldman-zz/repos",
      "events_url": "https://api.github.com/users/sam-goldman-zz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sam-goldman-zz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-04T19:30:25Z",
    "updated_at": "2022-05-04T19:34:52Z",
    "author_association": "NONE",
    "body": "> **multiple l2 contracts**: this question feels like the biggest issue for me on a few levels:\r\n> 1. i can imagine changing the functionality of an nft to a standard factory nft becoming really fraught in a number of ways. two examples that come to mind are soulbound nfts and loanable nfts. neither feature is popular, but it's also not that uncommon to experiment with erc-721 contracts, and permissionless bridging with changed functionality feels like it could be... quite dangerous? i saw in the deck that the concern was malicious contracts; i'd be curious to know more about how that risk could manifest.\r\n\r\nCollections that want to preserve special functionality on L2 should deploy a custom ERC721 contract instead of using the standard nft factory. However, there are two main risks with using a custom contract: it could be malicious (e.g. it could implement logic that steals any nft that’s transferred it), or it could be deployed by a trusted party yet have a bug that leads to stolen nfts. Since custom contracts will be necessary for some collections, we think that managing a token list is the best way to solve these issues. That way, nft owners can be sure that the custom contract is safe.\r\n \r\n> 2. fragmentation across an l2 would also be pretty undesirable—not just for liquidity, but for all kinds of functionality that you might want to build on top of a collection. has there been consideration around consolidating previously bridged nfts after a canonical contract exists?\r\n2. I've written a [tutorial](https://github.com/sam-goldman/optimism-nft-bridge/tree/main/tutorials/l2-custom-erc721) that shows how to solve the fragmentation issue :)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1117741492/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1166154936",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2421#issuecomment-1166154936",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2421",
    "id": 1166154936,
    "node_id": "IC_kwDODjvEJM5Fghy4",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-25T00:40:21Z",
    "updated_at": "2022-06-25T00:40:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1166154936/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
