{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/5435",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/5435/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/5435/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/5435/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/5435",
  "id": 1665677791,
  "node_id": "I_kwDODjvEJM5jSDnf",
  "number": 5435,
  "title": "Discrep in op-geth DoEstimateGas() logic leads to mempool zombies in rare cases",
  "user": {
    "login": "bstr156",
    "id": 6069215,
    "node_id": "MDQ6VXNlcjYwNjkyMTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6069215?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bstr156",
    "html_url": "https://github.com/bstr156",
    "followers_url": "https://api.github.com/users/bstr156/followers",
    "following_url": "https://api.github.com/users/bstr156/following{/other_user}",
    "gists_url": "https://api.github.com/users/bstr156/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bstr156/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bstr156/subscriptions",
    "organizations_url": "https://api.github.com/users/bstr156/orgs",
    "repos_url": "https://api.github.com/users/bstr156/repos",
    "events_url": "https://api.github.com/users/bstr156/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bstr156/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2907832490,
      "node_id": "MDU6TGFiZWwyOTA3ODMyNDkw",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-bug",
      "name": "C-bug",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: This is a bug"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-04-13T04:17:44Z",
  "updated_at": "2023-08-16T12:28:34Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Describe the bug**\r\nWhen L2geth checks a transaction against the block gas limit, it fails to account for the system transaction in the block.\r\n\r\ntypical Optimism system TX gas used = 46,913  (but varies)\r\n\r\nIn other words, in DoEstimateGas, only the raw block gas limit is used (25,000,000) instead of the appropriate (25,000,000 - 46,913) = 24,953,087\r\n\r\nIf a contract call is submitted which consumes between 24,953,087 and 25,000,000 gas, it is accepted into the mempool but never settles in a block as there will never be a block with sufficient gas available for it due to the offset from the Optimism system tx in every block. \r\n\r\n**To Reproduce**\r\nThis can be reproduced by calling a gas guzzler contract, e.g. one which accepts and stores an arbitrary array of numbers. Adjust your call's array length in order to hit the gas \"sweet spot\".\r\n\r\n**Expected behavior**\r\nWhat should happen is the call results in error \"gas required exceeds allowance\" instead of reaching the mempool.\r\n\r\n**Notes/Suggestions**\r\nSince it is challenging to know the exact gas expense of a systemTx ahead of time, maybe the best way to solve this is to add a buffer to the block gas limit for the limit check.   (blockGasLimit - 10%) or something similar.  A single execution consuming all the gas would be an oddity anyway, so this should solve it well.\r\n\r\n",
  "closed_by": {
    "login": "bstr156",
    "id": 6069215,
    "node_id": "MDQ6VXNlcjYwNjkyMTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6069215?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bstr156",
    "html_url": "https://github.com/bstr156",
    "followers_url": "https://api.github.com/users/bstr156/followers",
    "following_url": "https://api.github.com/users/bstr156/following{/other_user}",
    "gists_url": "https://api.github.com/users/bstr156/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bstr156/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bstr156/subscriptions",
    "organizations_url": "https://api.github.com/users/bstr156/orgs",
    "repos_url": "https://api.github.com/users/bstr156/repos",
    "events_url": "https://api.github.com/users/bstr156/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bstr156/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/5435/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/5435/timeline",
  "performed_via_github_app": null,
  "state_reason": "reopened"
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1508645701",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/5435#issuecomment-1508645701",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/5435",
    "id": 1508645701,
    "node_id": "IC_kwDODjvEJM5Z7BtF",
    "user": {
      "login": "sidhujag",
      "id": 6238042,
      "node_id": "MDQ6VXNlcjYyMzgwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sidhujag",
      "html_url": "https://github.com/sidhujag",
      "followers_url": "https://api.github.com/users/sidhujag/followers",
      "following_url": "https://api.github.com/users/sidhujag/following{/other_user}",
      "gists_url": "https://api.github.com/users/sidhujag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sidhujag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
      "organizations_url": "https://api.github.com/users/sidhujag/orgs",
      "repos_url": "https://api.github.com/users/sidhujag/repos",
      "events_url": "https://api.github.com/users/sidhujag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sidhujag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-14T14:28:02Z",
    "updated_at": "2023-04-14T14:45:57Z",
    "author_association": "NONE",
    "body": "I believe this came about because prior to regolith the system tx was unmetered, but now it is metered and so affects the gas limit for a regular tx.\r\n\r\nIn regolith the max gas is 1m for the system tx and it is metered so correct fix is to offset the blockGasLimit by 1m (in DoEstimateGas) to ensure the system tx and a max gas tx would be included",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1508645701/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1508964055",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/5435#issuecomment-1508964055",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/5435",
    "id": 1508964055,
    "node_id": "IC_kwDODjvEJM5Z8PbX",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-14T17:00:59Z",
    "updated_at": "2023-04-14T17:00:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you for the detailed report, we'll look into improving the gas estimation to account for this max-gas case better, and evict this type of transaction that cannot fit into a block.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1508964055/reactions",
      "total_count": 3,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 3,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
