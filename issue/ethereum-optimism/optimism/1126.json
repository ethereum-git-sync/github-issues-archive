{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1126",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1126/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1126/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1126/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/1126",
  "id": 925284321,
  "node_id": "MDU6SXNzdWU5MjUyODQzMjE=",
  "number": 1126,
  "title": "Data transport layer syncing with local L1 - reliability of discovering StartingL1BlockNumber - .queryFilter topic",
  "user": {
    "login": "CAPtheorem",
    "id": 79423264,
    "node_id": "MDQ6VXNlcjc5NDIzMjY0",
    "avatar_url": "https://avatars.githubusercontent.com/u/79423264?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/CAPtheorem",
    "html_url": "https://github.com/CAPtheorem",
    "followers_url": "https://api.github.com/users/CAPtheorem/followers",
    "following_url": "https://api.github.com/users/CAPtheorem/following{/other_user}",
    "gists_url": "https://api.github.com/users/CAPtheorem/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/CAPtheorem/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/CAPtheorem/subscriptions",
    "organizations_url": "https://api.github.com/users/CAPtheorem/orgs",
    "repos_url": "https://api.github.com/users/CAPtheorem/repos",
    "events_url": "https://api.github.com/users/CAPtheorem/events{/privacy}",
    "received_events_url": "https://api.github.com/users/CAPtheorem/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2907832518,
      "node_id": "MDU6TGFiZWwyOTA3ODMyNTE4",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-enhancement",
      "name": "C-enhancement",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: A PR with an enhancement or bugfix."
    },
    {
      "id": 2907832766,
      "node_id": "MDU6TGFiZWwyOTA3ODMyNzY2",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/M-dtl",
      "name": "M-dtl",
      "color": "FBCA04",
      "default": false,
      "description": "Module: data transport layer"
    },
    {
      "id": 2978714528,
      "node_id": "MDU6TGFiZWwyOTc4NzE0NTI4",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "C2E0C6",
      "default": true,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-06-19T01:10:12Z",
  "updated_at": "2023-06-16T18:59:50Z",
  "closed_at": "2023-06-16T18:59:50Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**Describe the bug**\r\nWhen booting, the DTL sometimes struggles to determine the correct StartingL1BlockNumber, due to problematic query filtering of `this.state.contracts.Lib_AddressManager.queryFilter`.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Configure the DTL like this:\r\n```\r\nDATA_TRANSPORT_LAYER__SYNC_FROM_L1: 'true'\r\nDATA_TRANSPORT_LAYER__SYNC_FROM_L2: 'false'\r\n```\r\n2. Spin up the system: `docker-compose up --renew-anon-volumes`\r\n3. DTL quits with `Unable to find appropriate L1 starting block number` \r\n\r\n**Expected behavior**\r\nRegardless of L1 data origin (local L1, Infura,...), the DTL, when configured to sync from L1, should reliably determine the starting L1 block based on the deployment of the AddressManager\r\n\r\n**Analysis**\r\nThe DTL is looking for topic `0x188466739ff00cc68bfb2367d23ae4b855264264fe1624caa8884399af23454c` aka `AddressSet()`, which may or may not be present/available to `this.state.contracts.Lib_AddressManager.queryFilter`. A more reliable topic to filter for might be `0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0` aka ownershipTransferred, which should be a good indicator of the first L1 block? In testing, filtering for `ownershipTransferred` rather than `AddressSet` has reduced `Unable to find appropriate L1 starting block number` errors. \r\n\r\n**Why does this matter**\r\nAnything that depends on L1 data, including the `Sequencer` and `Verifier`, need the DTL to be able to discover the L1 starting block for correct subsequent function.\r\n\r\n",
  "closed_by": {
    "login": "tynes",
    "id": 6626818,
    "node_id": "MDQ6VXNlcjY2MjY4MTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6626818?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tynes",
    "html_url": "https://github.com/tynes",
    "followers_url": "https://api.github.com/users/tynes/followers",
    "following_url": "https://api.github.com/users/tynes/following{/other_user}",
    "gists_url": "https://api.github.com/users/tynes/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tynes/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tynes/subscriptions",
    "organizations_url": "https://api.github.com/users/tynes/orgs",
    "repos_url": "https://api.github.com/users/tynes/repos",
    "events_url": "https://api.github.com/users/tynes/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tynes/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1126/reactions",
    "total_count": 4,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 1,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1126/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/864447286",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/1126#issuecomment-864447286",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1126",
    "id": 864447286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDQ0NzI4Ng==",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-19T18:35:45Z",
    "updated_at": "2021-06-19T18:35:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah this is a good observation, thank you for the report! I forgot that `Lib_AddressManager` is now `Ownable`, which means that `OwnershipTransferred` gets emitted as soon as it's created. Would you be interested in creating a PR that searches for `OwnershipTransferred` instead of `AddressSet`? Since it's backwards compatible it can be a PR directly into `develop`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/864447286/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/864450020",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/1126#issuecomment-864450020",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1126",
    "id": 864450020,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDQ1MDAyMA==",
    "user": {
      "login": "tynes",
      "id": 6626818,
      "node_id": "MDQ6VXNlcjY2MjY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6626818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tynes",
      "html_url": "https://github.com/tynes",
      "followers_url": "https://api.github.com/users/tynes/followers",
      "following_url": "https://api.github.com/users/tynes/following{/other_user}",
      "gists_url": "https://api.github.com/users/tynes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tynes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tynes/subscriptions",
      "organizations_url": "https://api.github.com/users/tynes/orgs",
      "repos_url": "https://api.github.com/users/tynes/repos",
      "events_url": "https://api.github.com/users/tynes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tynes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-19T18:59:00Z",
    "updated_at": "2021-06-19T18:59:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "A more compute heavy but decoupled from implemention way to do this would\nbe a binary search for the code. Then changes to the address manger\nwouldn't ever break discovery of the starting L1 blocknumber\n\nOn Sat, Jun 19, 2021, 11:35 AM smartcontracts ***@***.***>\nwrote:\n\n> Yeah this is a good observation, thank you for the report! I forgot that\n> Lib_AddressManager is now Ownable, which means that OwnershipTransferred\n> gets emitted as soon as it's created. Would you be interested in creating a\n> PR that searches for OwnershipTransferred instead of AddressSet? Since\n> it's backwards compatible it can be a PR directly into develop.\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereum-optimism/optimism/issues/1126#issuecomment-864447286>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABSR4ATPSGMAV5EI6SHZDKTTTTPQ3ANCNFSM466RTAFA>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/864450020/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/864456511",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/1126#issuecomment-864456511",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1126",
    "id": 864456511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDQ1NjUxMQ==",
    "user": {
      "login": "CAPtheorem",
      "id": 79423264,
      "node_id": "MDQ6VXNlcjc5NDIzMjY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/79423264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CAPtheorem",
      "html_url": "https://github.com/CAPtheorem",
      "followers_url": "https://api.github.com/users/CAPtheorem/followers",
      "following_url": "https://api.github.com/users/CAPtheorem/following{/other_user}",
      "gists_url": "https://api.github.com/users/CAPtheorem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CAPtheorem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CAPtheorem/subscriptions",
      "organizations_url": "https://api.github.com/users/CAPtheorem/orgs",
      "repos_url": "https://api.github.com/users/CAPtheorem/repos",
      "events_url": "https://api.github.com/users/CAPtheorem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CAPtheorem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-19T19:58:07Z",
    "updated_at": "2021-06-19T19:58:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Yeah this is a good observation, thank you for the report! I forgot that `Lib_AddressManager` is now `Ownable`, which means that `OwnershipTransferred` gets emitted as soon as it's created. Would you be interested in creating a PR that searches for `OwnershipTransferred` instead of `AddressSet`? Since it's backwards compatible it can be a PR directly into `develop`.\r\n\r\nYes, on it, 24 hours, will PR.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/864456511/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/864493340",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/1126#issuecomment-864493340",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1126",
    "id": 864493340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDQ5MzM0MA==",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-20T03:15:41Z",
    "updated_at": "2021-06-20T03:15:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "> A more compute heavy but decoupled from implemention way to do this would be a binary search for the code. Then changes to the address manger wouldn't ever break discovery of the starting L1 blocknumber\r\n> […](#)\r\n\r\nProblem with this approach is that many infra providers don't allow archival searches like this for free tiers. One alternative is to have all contracts extend a standard contract that either emits an event when created or stores the creation block number in the constructor. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/864493340/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1123400356",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/1126#issuecomment-1123400356",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1126",
    "id": 1123400356,
    "node_id": "IC_kwDODjvEJM5C9bqk",
    "user": {
      "login": "yzx0409",
      "id": 104751554,
      "node_id": "U_kgDOBj5hwg",
      "avatar_url": "https://avatars.githubusercontent.com/u/104751554?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yzx0409",
      "html_url": "https://github.com/yzx0409",
      "followers_url": "https://api.github.com/users/yzx0409/followers",
      "following_url": "https://api.github.com/users/yzx0409/following{/other_user}",
      "gists_url": "https://api.github.com/users/yzx0409/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yzx0409/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yzx0409/subscriptions",
      "organizations_url": "https://api.github.com/users/yzx0409/orgs",
      "repos_url": "https://api.github.com/users/yzx0409/repos",
      "events_url": "https://api.github.com/users/yzx0409/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yzx0409/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-11T09:07:03Z",
    "updated_at": "2022-05-11T09:07:03Z",
    "author_association": "NONE",
    "body": "#2126",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1123400356/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1540052639",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/1126#issuecomment-1540052639",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1126",
    "id": 1540052639,
    "node_id": "IC_kwDODjvEJM5by1af",
    "user": {
      "login": "shubhamshd",
      "id": 30751049,
      "node_id": "MDQ6VXNlcjMwNzUxMDQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/30751049?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shubhamshd",
      "html_url": "https://github.com/shubhamshd",
      "followers_url": "https://api.github.com/users/shubhamshd/followers",
      "following_url": "https://api.github.com/users/shubhamshd/following{/other_user}",
      "gists_url": "https://api.github.com/users/shubhamshd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shubhamshd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shubhamshd/subscriptions",
      "organizations_url": "https://api.github.com/users/shubhamshd/orgs",
      "repos_url": "https://api.github.com/users/shubhamshd/repos",
      "events_url": "https://api.github.com/users/shubhamshd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shubhamshd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T12:45:16Z",
    "updated_at": "2023-05-09T12:45:16Z",
    "author_association": "NONE",
    "body": "Hi @CAPtheorem  please close the issue, as the changes seem to have been merged but the issue is still open!!!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1540052639/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
