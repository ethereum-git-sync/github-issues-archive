{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2059",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2059/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2059/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2059/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/2059",
  "id": 1112127770,
  "node_id": "I_kwDODjvEJM5CSbka",
  "number": 2059,
  "title": "Dealing with filter using QuickNode web-socket and web3.py raises ValueError: {'code': -32000, 'message': 'filter not found'}",
  "user": {
    "login": "kootsZhin",
    "id": 69758390,
    "node_id": "MDQ6VXNlcjY5NzU4Mzkw",
    "avatar_url": "https://avatars.githubusercontent.com/u/69758390?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kootsZhin",
    "html_url": "https://github.com/kootsZhin",
    "followers_url": "https://api.github.com/users/kootsZhin/followers",
    "following_url": "https://api.github.com/users/kootsZhin/following{/other_user}",
    "gists_url": "https://api.github.com/users/kootsZhin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kootsZhin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kootsZhin/subscriptions",
    "organizations_url": "https://api.github.com/users/kootsZhin/orgs",
    "repos_url": "https://api.github.com/users/kootsZhin/repos",
    "events_url": "https://api.github.com/users/kootsZhin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kootsZhin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2907832490,
      "node_id": "MDU6TGFiZWwyOTA3ODMyNDkw",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-bug",
      "name": "C-bug",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: This is a bug."
    },
    {
      "id": 2930018676,
      "node_id": "MDU6TGFiZWwyOTMwMDE4Njc2",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/P-unconfirmed",
      "name": "P-unconfirmed",
      "color": "BFD4F2",
      "default": false,
      "description": "Issue might be valid, but itâ€™s not yet confirmed"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-01-24T03:35:35Z",
  "updated_at": "2022-10-25T19:13:18Z",
  "closed_at": "2022-10-25T19:13:18Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I was trying to listen the events emitted by contracts by the use of web3.py and QuickNode websocket, but got \"ValueError: {'code': -32000, 'message': 'filter not found'}\" as a result. The same code is working well when I tried connect other chains but only failing with optimism.\r\n\r\nThanks in advance and do let me know if any further information needed.\r\n\r\nI set up the filter in this way:\r\n```python\r\nevent_filter = self.factoryContract.events.PairCreated.createFilter(fromBlock=\"latest\")\r\n```\r\n\r\n```python\r\nOPTIMISM_ENDPOINT = \"wss://floral-autumn-wind.optimism.quiknode.pro/( api key here )/\"\r\n```\r\n\r\nRelevant code: (template: https://web3py.readthedocs.io/en/stable/filters.html)\r\n```python\r\ndef log_loop(self, event_filter, poll_interval):\r\n    while True:\r\n        try:\r\n            for event in event_filter.get_new_entries():\r\n                self.handle_event(event)\r\n        except Exception as e:\r\n            print(e)\r\n            print(self.network, self.name, \"filter failed\")\r\n            event_filterr = self.factoryContract.events.PairCreated.createFilter(\r\n        fromBlock=\"latest\")\r\n        time.sleep(poll_interval)\r\n\r\n\r\ndef execute(self):\r\n    event_filter = self.factoryContract.events.PairCreated.createFilter(\r\n        fromBlock=\"latest\")\r\n    # event_filter = self.w3.eth.filter({\"address\":self.factoryContract.address})\r\n    worker = Thread(target=self.log_loop, args=(event_filter, 5), daemon=True)\r\n    worker.start()\r\n    while True:\r\n        self.running\r\n```\r\n\r\nFull error log:\r\n```\r\nException in thread Thread-3:\r\nTraceback (most recent call last):\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\r\n    self.run()\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/threading.py\", line 870, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/Users/user/OneDrive - HKUST Connect/GitHub/factory-alert-bot/Connector.py\", line 116, in execute\r\n    print(event_filter.get_all_entries())\r\n  File \"/Users/user/.local/share/virtualenvs/factory-alert-bot-JllLHjlQ/lib/python3.8/site-packages/web3/_utils/filters.py\", line 164, in get_all_entries\r\n    log_entries = self._filter_valid_entries(self.eth_module.get_filter_logs(self.filter_id))\r\n  File \"/Users/user/.local/share/virtualenvs/factory-alert-bot-JllLHjlQ/lib/python3.8/site-packages/web3/module.py\", line 57, in caller\r\n    result = w3.manager.request_blocking(method_str,\r\n  File \"/Users/user/.local/share/virtualenvs/factory-alert-bot-JllLHjlQ/lib/python3.8/site-packages/web3/manager.py\", line 198, in request_blocking\r\n    return self.formatted_response(response,\r\n  File \"/Users/user/.local/share/virtualenvs/factory-alert-bot-JllLHjlQ/lib/python3.8/site-packages/web3/manager.py\", line 171, in formatted_response\r\n    raise ValueError(response[\"error\"])\r\nValueError: {'code': -32000, 'message': 'filter not found'}\r\n```\r\n\r\nEnvironment\r\n```\r\nPackage            Version\r\n------------------ ---------\r\naiohttp            3.8.1\r\naiosignal          1.2.0\r\nasync-timeout      4.0.2\r\nattrs              21.4.0\r\nbase58             2.1.1\r\nbitarray           1.2.2\r\ncertifi            2021.10.8\r\ncharset-normalizer 2.0.10\r\ncytoolz            0.11.2\r\neth-abi            2.1.1\r\neth-account        0.5.6\r\neth-hash           0.3.2\r\neth-keyfile        0.5.1\r\neth-keys           0.3.4\r\neth-rlp            0.2.1\r\neth-typing         2.3.0\r\neth-utils          1.10.0\r\nfrozenlist         1.3.0\r\nhexbytes           0.2.2\r\nidna               3.3\r\nipfshttpclient     0.8.0a2\r\njsonschema         3.2.0\r\nlru-dict           1.1.7\r\nmultiaddr          0.0.9\r\nmultidict          6.0.1\r\nnetaddr            0.8.0\r\nparsimonious       0.8.1\r\npip                21.3.1\r\nprotobuf           3.19.3\r\npycryptodome       3.12.0\r\npyrsistent         0.18.1\r\nrequests           2.27.1\r\nrlp                2.0.1\r\nsetuptools         60.5.0\r\nsix                1.16.0\r\ntoolz              0.11.2\r\nurllib3            1.26.8\r\nvarint             1.0.2\r\nweb3               5.26.0\r\nwebsockets         9.1\r\nwheel              0.37.1\r\nyarl               1.7.2\r\n```",
  "closed_by": {
    "login": "smartcontracts",
    "id": 14298799,
    "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/smartcontracts",
    "html_url": "https://github.com/smartcontracts",
    "followers_url": "https://api.github.com/users/smartcontracts/followers",
    "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
    "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
    "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
    "repos_url": "https://api.github.com/users/smartcontracts/repos",
    "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
    "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2059/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2059/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
