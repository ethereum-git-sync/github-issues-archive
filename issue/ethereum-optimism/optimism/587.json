{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/587",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/587/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/587/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/587/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/587",
  "id": 866331632,
  "node_id": "MDU6SXNzdWU4NjYzMzE2MzI=",
  "number": 587,
  "title": "Emit event for a relayed message even if the call reverts",
  "user": {
    "login": "transmissions11",
    "id": 26209401,
    "node_id": "MDQ6VXNlcjI2MjA5NDAx",
    "avatar_url": "https://avatars.githubusercontent.com/u/26209401?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/transmissions11",
    "html_url": "https://github.com/transmissions11",
    "followers_url": "https://api.github.com/users/transmissions11/followers",
    "following_url": "https://api.github.com/users/transmissions11/following{/other_user}",
    "gists_url": "https://api.github.com/users/transmissions11/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/transmissions11/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/transmissions11/subscriptions",
    "organizations_url": "https://api.github.com/users/transmissions11/orgs",
    "repos_url": "https://api.github.com/users/transmissions11/repos",
    "events_url": "https://api.github.com/users/transmissions11/events{/privacy}",
    "received_events_url": "https://api.github.com/users/transmissions11/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2907832518,
      "node_id": "MDU6TGFiZWwyOTA3ODMyNTE4",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-enhancement",
      "name": "C-enhancement",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: A PR with an enhancement or bugfix."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "smartcontracts",
    "id": 14298799,
    "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/smartcontracts",
    "html_url": "https://github.com/smartcontracts",
    "followers_url": "https://api.github.com/users/smartcontracts/followers",
    "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
    "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
    "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
    "repos_url": "https://api.github.com/users/smartcontracts/repos",
    "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
    "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-04-23T18:15:32Z",
  "updated_at": "2021-04-23T21:38:52Z",
  "closed_at": "2021-04-23T21:38:52Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**Is your feature request related to a problem? Please describe.**\r\nIf a relayed message performs a call that fails, the `RelayedMessage` event is not emitted (only on success). This means that the watcher will not pick up the relayed event. There are many applications I can think of where a user needs to be able to detect if a relayed message failed with the watcher, and this is currently not possible.\r\n\r\n**Describe the solution you'd like**\r\nI can think of a couple methods:\r\n- Add a `success` param to the `RelayedMessage` event and emit it in both cases.\r\n- Add a `FailedRelayedMessage` event and emit that if the call fails.\r\n- Emit `RelayedMessage` in both cases with no additional context.\r\n",
  "closed_by": {
    "login": "smartcontracts",
    "id": 14298799,
    "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/smartcontracts",
    "html_url": "https://github.com/smartcontracts",
    "followers_url": "https://api.github.com/users/smartcontracts/followers",
    "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
    "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
    "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
    "repos_url": "https://api.github.com/users/smartcontracts/repos",
    "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
    "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/587/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/587/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/825855596",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/587#issuecomment-825855596",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/587",
    "id": 825855596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTg1NTU5Ng==",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-23T18:54:35Z",
    "updated_at": "2021-04-23T18:54:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think some of our off-chain services rely on the current `RelayedMessage` event, so I'm gonna go with the strategy of adding a new `FailedRelayedMessage` event instead. Will make a PR in a sec.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/825855596/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/825860979",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/587#issuecomment-825860979",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/587",
    "id": 825860979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTg2MDk3OQ==",
    "user": {
      "login": "transmissions11",
      "id": 26209401,
      "node_id": "MDQ6VXNlcjI2MjA5NDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26209401?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/transmissions11",
      "html_url": "https://github.com/transmissions11",
      "followers_url": "https://api.github.com/users/transmissions11/followers",
      "following_url": "https://api.github.com/users/transmissions11/following{/other_user}",
      "gists_url": "https://api.github.com/users/transmissions11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/transmissions11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/transmissions11/subscriptions",
      "organizations_url": "https://api.github.com/users/transmissions11/orgs",
      "repos_url": "https://api.github.com/users/transmissions11/repos",
      "events_url": "https://api.github.com/users/transmissions11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/transmissions11/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-23T19:04:56Z",
    "updated_at": "2021-04-23T19:04:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Awesome. @smartcontracts would you also be able to make a PR to update the watcher's `getL2TransactionReceipt` function to support the failed messages as well? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/825860979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
