{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/7950",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/7950/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/7950/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/7950/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/7950",
  "id": 1969394132,
  "node_id": "I_kwDODjvEJM51YpHU",
  "number": 7950,
  "title": "Creating L2 genesis alloc using pure javascript / typescript",
  "user": {
    "login": "kaliubuntu0206",
    "id": 139627505,
    "node_id": "U_kgDOCFKL8Q",
    "avatar_url": "https://avatars.githubusercontent.com/u/139627505?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kaliubuntu0206",
    "html_url": "https://github.com/kaliubuntu0206",
    "followers_url": "https://api.github.com/users/kaliubuntu0206/followers",
    "following_url": "https://api.github.com/users/kaliubuntu0206/following{/other_user}",
    "gists_url": "https://api.github.com/users/kaliubuntu0206/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kaliubuntu0206/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kaliubuntu0206/subscriptions",
    "organizations_url": "https://api.github.com/users/kaliubuntu0206/orgs",
    "repos_url": "https://api.github.com/users/kaliubuntu0206/repos",
    "events_url": "https://api.github.com/users/kaliubuntu0206/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kaliubuntu0206/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2907832604,
      "node_id": "MDU6TGFiZWwyOTA3ODMyNjA0",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-question",
      "name": "C-question",
      "color": "C5DEF5",
      "default": false,
      "description": "User questions that are neither feature requests nor bug reports"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-10-30T23:44:38Z",
  "updated_at": "2023-11-02T00:28:43Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Since I don't like dependencies I would like to know how hard would it be to dump genesis alloc for a new op-stack rollup based on a deploy-config JSON https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/deploy-config/getting-started.json.\r\n\r\nMaybe I might be looking for implementing features of the go code here to js https://github.com/ethereum-optimism/optimism/tree/develop/op-chain-ops/genesis.\r\n\r\nSince there are ethereumjs it wouldn't be technically impossible but I would like to know what is required to do so.\r\n\r\nThanks.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/7950/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/7950/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1787040789",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/7950#issuecomment-1787040789",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/7950",
    "id": 1787040789,
    "node_id": "IC_kwDODjvEJM5qhBQV",
    "user": {
      "login": "tynes",
      "id": 6626818,
      "node_id": "MDQ6VXNlcjY2MjY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6626818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tynes",
      "html_url": "https://github.com/tynes",
      "followers_url": "https://api.github.com/users/tynes/followers",
      "following_url": "https://api.github.com/users/tynes/following{/other_user}",
      "gists_url": "https://api.github.com/users/tynes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tynes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tynes/subscriptions",
      "organizations_url": "https://api.github.com/users/tynes/orgs",
      "repos_url": "https://api.github.com/users/tynes/repos",
      "events_url": "https://api.github.com/users/tynes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tynes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-31T11:35:36Z",
    "updated_at": "2023-10-31T11:35:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Since I don't like dependencies\r\n\r\nWhat about `node_modules`? That is where ethereumjs would live.\r\n\r\nIt should be possible to reimplement the [L2 genesis generation](https://github.com/ethereum-optimism/optimism/blob/96a24cc3f6f5bbbb8f42011988208619a41344fd/op-chain-ops/genesis/layer_two.go#L17) in typescript, read through the code to see what it does. Note that it will be getting new features over time so you will need to maintain it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1787040789/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1789874824",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/7950#issuecomment-1789874824",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/7950",
    "id": 1789874824,
    "node_id": "IC_kwDODjvEJM5qr1KI",
    "user": {
      "login": "kaliubuntu0206",
      "id": 139627505,
      "node_id": "U_kgDOCFKL8Q",
      "avatar_url": "https://avatars.githubusercontent.com/u/139627505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaliubuntu0206",
      "html_url": "https://github.com/kaliubuntu0206",
      "followers_url": "https://api.github.com/users/kaliubuntu0206/followers",
      "following_url": "https://api.github.com/users/kaliubuntu0206/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaliubuntu0206/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaliubuntu0206/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaliubuntu0206/subscriptions",
      "organizations_url": "https://api.github.com/users/kaliubuntu0206/orgs",
      "repos_url": "https://api.github.com/users/kaliubuntu0206/repos",
      "events_url": "https://api.github.com/users/kaliubuntu0206/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaliubuntu0206/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-02T00:28:43Z",
    "updated_at": "2023-11-02T00:28:43Z",
    "author_association": "NONE",
    "body": "Yes, reading the code implementation would be\r\n\r\n1. dump system contract storage slots using hardhat-storage-layout package\r\n\r\n2. deploy contract on local hardhat network with required params, call every available storage slots\r\n\r\n3. assemble them to new genesis.json\r\n\r\nrollup.json would be easier since it only requires an address of a deployed contracts on L1 https://github.com/base-org/node/blob/main/mainnet/rollup.json",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1789874824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
