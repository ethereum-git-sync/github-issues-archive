{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6698",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6698/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6698/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6698/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/6698",
  "id": 1844649594,
  "node_id": "I_kwDODjvEJM5t8x56",
  "number": 6698,
  "title": "Unable to deploy the L1 contracts",
  "user": {
    "login": "RISHABHAGRAWALZRA",
    "id": 43982251,
    "node_id": "MDQ6VXNlcjQzOTgyMjUx",
    "avatar_url": "https://avatars.githubusercontent.com/u/43982251?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/RISHABHAGRAWALZRA",
    "html_url": "https://github.com/RISHABHAGRAWALZRA",
    "followers_url": "https://api.github.com/users/RISHABHAGRAWALZRA/followers",
    "following_url": "https://api.github.com/users/RISHABHAGRAWALZRA/following{/other_user}",
    "gists_url": "https://api.github.com/users/RISHABHAGRAWALZRA/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/RISHABHAGRAWALZRA/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/RISHABHAGRAWALZRA/subscriptions",
    "organizations_url": "https://api.github.com/users/RISHABHAGRAWALZRA/orgs",
    "repos_url": "https://api.github.com/users/RISHABHAGRAWALZRA/repos",
    "events_url": "https://api.github.com/users/RISHABHAGRAWALZRA/events{/privacy}",
    "received_events_url": "https://api.github.com/users/RISHABHAGRAWALZRA/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-08-10T08:07:28Z",
  "updated_at": "2023-08-10T08:07:28Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I am unable to deploy the L1 contracts, I am following the [Getting-Started doc](https://stack.optimism.io/docs/build/getting-started/#configure-your-network)\r\n\r\n\r\nI am getting this error of `script failed` while running this command `forge script scripts/Deploy.s.sol:Deploy --private-key $PRIVATE_KEY --broadcast --rpc-url $ETH_RPC_URL`\r\n\r\n> rishabhagrawal@192 contracts-bedrock % forge script scripts/Deploy.s.sol:Deploy --private-key $PRIVATE_KEY --broadcast --rpc-url $ETH_RPC_URL\r\n> [⠃] Compiling...\r\n> No files changed, compilation skipped\r\n> Traces:\r\n>   [43008596] → new Deploy@0x5b73C5498c1E3b4dbA84de0F1833c4a029d90519\r\n>     └─ ← 214183 bytes of code\r\n> \r\n>   [3026838] Deploy::setUp() \r\n>     ├─ [0] VM::projectRoot() [staticcall]\r\n>     │   └─ ← /Users/rishabhagrawal/Data/Workspace/Avail/optimism/packages/contracts-bedrock\r\n>     ├─ [0] VM::envOr(DEPLOY_SCRIPT, Deploy) \r\n>     │   └─ ← <env var value>\r\n>     ├─ [0] VM::envOr(DEPLOYMENT_CONTEXT, ) \r\n>     │   └─ ← <env var value>\r\n>     ├─ [0] VM::envOr(DEPLOY_FILE, run-latest.json) \r\n>     │   └─ ← <env var value>\r\n>     ├─ [0] VM::envOr(CHAIN_ID, 1337) \r\n>     │   └─ ← <env var value>\r\n>     ├─ [0] VM::toString(1337) [staticcall]\r\n>     │   └─ ← 0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000043133333700000000000000000000000000000000000000000000000000000000\r\n>     ├─ [0] VM::createDir(/Users/rishabhagrawal/Data/Workspace/Avail/optimism/packages/contracts-bedrock/deployments/getting-started, true) \r\n>     │   └─ ← ()\r\n>     ├─ [0] VM::readFile(/Users/rishabhagrawal/Data/Workspace/Avail/optimism/packages/contracts-bedrock/deployments/getting-started/.chainId) [staticcall]\r\n>     │   └─ ← <file>\r\n>     ├─ [0] VM::envOr(STRICT_DEPLOYMENT, true) \r\n>     │   └─ ← <env var value>\r\n>     ├─ [0] VM::parseUint(1337) [staticcall]\r\n>     │   └─ ← 1337\r\n>     ├─ [0] console::log(Connected to network with chainid %s, 1337) [staticcall]\r\n>     │   └─ ← ()\r\n>     ├─ [0] VM::readFile(/Users/rishabhagrawal/Data/Workspace/Avail/optimism/packages/contracts-bedrock/deployments/getting-started/.deploy) [staticcall]\r\n>     │   └─ ← <file>\r\n>     ├─ [0] console::log(Storing temp deployment data in %s, /Users/rishabhagrawal/Data/Workspace/Avail/optimism/packages/contracts-bedrock/deployments/getting-started/.deploy) [staticcall]\r\n>     │   └─ ← ()\r\n>     ├─ [0] VM::projectRoot() [staticcall]\r\n>     │   └─ ← /Users/rishabhagrawal/Data/Workspace/Avail/optimism/packages/contracts-bedrock\r\n>     ├─ [2583705] → new <Unknown>@0xC7f2Cf4845C6db0e1a1e91ED41Bcd0FcC1b0E141\r\n>     │   ├─ [0] console::log(DeployConfig: reading file %s, /Users/rishabhagrawal/Data/Workspace/Avail/optimism/packages/contracts-bedrock/deploy-config/getting-started.json) [staticcall]\r\n>     │   │   └─ ← ()\r\n>     │   ├─ [0] VM::readFile(/Users/rishabhagrawal/Data/Workspace/Avail/optimism/packages/contracts-bedrock/deploy-config/getting-started.json) [staticcall]\r\n>     │   │   └─ ← <file>\r\n>     │   ├─ [0] VM::parseJsonAddress(<stringified JSON>, $.finalSystemOwner) \r\n>     │   │   └─ ← 0xe42a3E5D36265D5bce471b7eDa3D3fD018991fBC\r\n>     │   ├─ [0] VM::parseJsonAddress(<stringified JSON>, $.portalGuardian) \r\n>     │   │   └─ ← 0xe42a3E5D36265D5bce471b7eDa3D3fD018991fBC\r\n>     │   ├─ [0] VM::parseJsonUint(<stringified JSON>, $.l1ChainID) \r\n>     │   │   └─ ← 1337\r\n>     │   ├─ [0] VM::parseJsonUint(<stringified JSON>, $.l2ChainID) \r\n>     │   │   └─ ← 42069 [4.206e4]\r\n>     │   ├─ [0] VM::parseJsonUint(<stringified JSON>, $.l2BlockTime) \r\n>     │   │   └─ ← 2\r\n>     │   ├─ [0] VM::parseJsonUint(<stringified JSON>, $.maxSequencerDrift) \r\n>     │   │   └─ ← 600\r\n>     │   ├─ [0] VM::parseJsonUint(<stringified JSON>, $.sequencerWindowSize) \r\n>     │   │   └─ ← 3600\r\n>     │   ├─ [0] VM::parseJsonUint(<stringified JSON>, $.channelTimeout) \r\n>     │   │   └─ ← 300\r\n>     │   ├─ [0] VM::parseJsonAddress(<stringified JSON>, $.p2pSequencerAddress) \r\n>     │   │   └─ ← 0x7B66446cF8a193d3241bD86F95211144948E12d6\r\n>     │   ├─ [0] VM::parseJsonAddress(<stringified JSON>, $.batchInboxAddress) \r\n>     │   │   └─ ← 0xFf00000000000000000000000000000000042069\r\n>     │   ├─ [0] VM::parseJsonAddress(<stringified JSON>, $.batchSenderAddress) \r\n>     │   │   └─ ← 0xF511CccF2304FB1bC433a1d38C535fC655a6F6F7\r\n>     │   ├─ [0] VM::parseJsonUint(<stringified JSON>, $.l2OutputOracleSubmissionInterval) \r\n>     │   │   └─ ← 120\r\n>     │   ├─ [0] VM::parseJsonInt(<stringified JSON>, $.l2OutputOracleStartingTimestamp) \r\n>     │   │   └─ ← 1691604266\r\n>     │   ├─ [0] VM::parseJsonUint(<stringified JSON>, $.l2OutputOracleStartingBlockNumber) \r\n>     │   │   └─ ← 0\r\n>     │   ├─ [0] VM::parseJsonAddress(<stringified JSON>, $.l2OutputOracleProposer) \r\n>     │   │   └─ ← 0x65E5dD681f21D1614b12E623ebe1366543093815\r\n>     │   ├─ [0] VM::parseJsonAddress(<stringified JSON>, $.l2OutputOracleChallenger) \r\n>     │   │   └─ ← 0xe42a3E5D36265D5bce471b7eDa3D3fD018991fBC\r\n>     │   ├─ [0] VM::parseJsonUint(<stringified JSON>, $.finalizationPeriodSeconds) \r\n>     │   │   └─ ← 12\r\n>     │   ├─ [0] VM::parseJsonAddress(<stringified JSON>, $.proxyAdminOwner) \r\n>     │   │   └─ ← 0xe42a3E5D36265D5bce471b7eDa3D3fD018991fBC\r\n>     │   ├─ [0] VM::parseJsonAddress(<stringified JSON>, $.baseFeeVaultRecipient) \r\n>     │   │   └─ ← 0xe42a3E5D36265D5bce471b7eDa3D3fD018991fBC\r\n>     │   ├─ [0] VM::parseJsonAddress(<stringified JSON>, $.l1FeeVaultRecipient) \r\n>     │   │   └─ ← 0xe42a3E5D36265D5bce471b7eDa3D3fD018991fBC\r\n>     │   ├─ [0] VM::parseJsonAddress(<stringified JSON>, $.sequencerFeeVaultRecipient) \r\n>     │   │   └─ ← 0xe42a3E5D36265D5bce471b7eDa3D3fD018991fBC\r\n>     │   ├─ [0] VM::parseJsonString(<stringified JSON>, $.governanceTokenName) \r\n>     │   │   └─ ← Optimism\r\n>     │   ├─ [0] VM::parseJsonString(<stringified JSON>, $.governanceTokenSymbol) \r\n>     │   │   └─ ← OP\r\n>     │   ├─ [0] VM::parseJsonAddress(<stringified JSON>, $.governanceTokenOwner) \r\n>     │   │   └─ ← 0xe42a3E5D36265D5bce471b7eDa3D3fD018991fBC\r\n>     │   ├─ [0] VM::parseJsonUint(<stringified JSON>, $.l2GenesisBlockGasLimit) \r\n>     │   │   └─ ← 30000000 [3e7]\r\n>     │   ├─ [0] VM::parseJsonUint(<stringified JSON>, $.l2GenesisBlockBaseFeePerGas) \r\n>     │   │   └─ ← 1000000000 [1e9]\r\n>     │   ├─ [0] VM::parseJsonUint(<stringified JSON>, $.gasPriceOracleOverhead) \r\n>     │   │   └─ ← 2100\r\n>     │   ├─ [0] VM::parseJsonUint(<stringified JSON>, $.gasPriceOracleScalar) \r\n>     │   │   └─ ← 1000000 [1e6]\r\n>     │   ├─ [0] VM::parseJsonUint(<stringified JSON>, $.eip1559Denominator) \r\n>     │   │   └─ ← 50\r\n>     │   ├─ [0] VM::parseJsonUint(<stringified JSON>, $.eip1559Elasticity) \r\n>     │   │   └─ ← 10\r\n>     │   ├─ [0] VM::parseJsonUint(<stringified JSON>, $.systemConfigStartBlock) \r\n>     │   │   └─ ← \"No matching value or array found for key $.systemConfigStartBlock\"\r\n>     │   └─ ← 0 bytes of code\r\n>     └─ ← \"No matching value or array found for key $.systemConfigStartBlock\"\r\n> \r\n> \r\n> \r\n> == Logs ==\r\n>   Connected to network with chainid 1337\r\n>   Storing temp deployment data in /Users/rishabhagrawal/Data/Workspace/Avail/optimism/packages/contracts-bedrock/deployments/getting-started/.deploy\r\n>   DeployConfig: reading file /Users/rishabhagrawal/Data/Workspace/Avail/optimism/packages/contracts-bedrock/deploy-config/getting-started.json\r\n> Error: \r\n> Script failed.\r\n\r\n\r\nAs per my research and understanding, In DeployerConfig.s.sol, it is trying to read systemConfigStartBlock from the getting-started.json file, but there is no such config variable given in that file.\r\n\r\n<img width=\"832\" alt=\"Screenshot 2023-08-10 at 1 02 17 PM\" src=\"https://github.com/ethereum-optimism/optimism/assets/43982251/f18708a2-24ff-4d90-b5cd-23e31264b393\">\r\n\r\nis this a recent change? Please help if anyone faces the same issue or has any solution and understanding for this.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6698/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6698/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
