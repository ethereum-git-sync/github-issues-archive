{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6740",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6740/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6740/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6740/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/6740",
  "id": 1846939529,
  "node_id": "I_kwDODjvEJM5uFg-J",
  "number": 6740,
  "title": "op-service: RPC client cleanup",
  "user": {
    "login": "protolambda",
    "id": 19571989,
    "node_id": "MDQ6VXNlcjE5NTcxOTg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/protolambda",
    "html_url": "https://github.com/protolambda",
    "followers_url": "https://api.github.com/users/protolambda/followers",
    "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
    "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
    "organizations_url": "https://api.github.com/users/protolambda/orgs",
    "repos_url": "https://api.github.com/users/protolambda/repos",
    "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/protolambda/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2978714528,
      "node_id": "MDU6TGFiZWwyOTc4NzE0NTI4",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "C2E0C6",
      "default": true,
      "description": ""
    },
    {
      "id": 3497805454,
      "node_id": "LA_kwDODjvEJM7QfEaO",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/go",
      "name": "go",
      "color": "16e2e2",
      "default": false,
      "description": "Pull requests that update Go code"
    },
    {
      "id": 5828636827,
      "node_id": "LA_kwDODjvEJM8AAAABW2nwmw",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/community",
      "name": "community",
      "color": "006b75",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "protolambda",
    "id": 19571989,
    "node_id": "MDQ6VXNlcjE5NTcxOTg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/protolambda",
    "html_url": "https://github.com/protolambda",
    "followers_url": "https://api.github.com/users/protolambda/followers",
    "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
    "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
    "organizations_url": "https://api.github.com/users/protolambda/orgs",
    "repos_url": "https://api.github.com/users/protolambda/repos",
    "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/protolambda/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-08-11T14:37:03Z",
  "updated_at": "2023-08-11T14:53:24Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "- [ ] extend RPC transport options\r\n  - We could support:\r\n    - websocket RPC, like geth\r\n    - IPC RPC, like geth\r\n    - attaching in-process: this can make tests faster, by not depending on http requests/servers.\r\n- [ ] move op-node client package and base sources utils into op-service\r\n  - [ ] `op-node/client` contains generic RPC client utils/wrappers that should be available to all services. Move all package contents.\r\n  - [ ] `op-node/sources` contains `EthClient` and RPC batching/types utils that should be part of the op-service client package instead.\r\n  - [ ] `op-node/testutils` contains mock bindings for the RPC interfaces, move this over too.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6740/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6740/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
