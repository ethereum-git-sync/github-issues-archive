{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2617",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2617/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2617/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2617/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/2617",
  "id": 1248316829,
  "node_id": "I_kwDODjvEJM5KZ82d",
  "number": 2617,
  "title": "Kustomize Instructions are broken, include nonstandard k8s CRD's for prometheus",
  "user": {
    "login": "DaveWK",
    "id": 13626476,
    "node_id": "MDQ6VXNlcjEzNjI2NDc2",
    "avatar_url": "https://avatars.githubusercontent.com/u/13626476?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/DaveWK",
    "html_url": "https://github.com/DaveWK",
    "followers_url": "https://api.github.com/users/DaveWK/followers",
    "following_url": "https://api.github.com/users/DaveWK/following{/other_user}",
    "gists_url": "https://api.github.com/users/DaveWK/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/DaveWK/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/DaveWK/subscriptions",
    "organizations_url": "https://api.github.com/users/DaveWK/orgs",
    "repos_url": "https://api.github.com/users/DaveWK/repos",
    "events_url": "https://api.github.com/users/DaveWK/events{/privacy}",
    "received_events_url": "https://api.github.com/users/DaveWK/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2907832490,
      "node_id": "MDU6TGFiZWwyOTA3ODMyNDkw",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-bug",
      "name": "C-bug",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: This is a bug."
    },
    {
      "id": 2907832834,
      "node_id": "MDU6TGFiZWwyOTA3ODMyODM0",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/M-ops",
      "name": "M-ops",
      "color": "FBCA04",
      "default": false,
      "description": "Module: ops"
    },
    {
      "id": 2930018676,
      "node_id": "MDU6TGFiZWwyOTMwMDE4Njc2",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/P-unconfirmed",
      "name": "P-unconfirmed",
      "color": "BFD4F2",
      "default": false,
      "description": "Issue might be valid, but itâ€™s not yet confirmed"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "optimisticben",
    "id": 82120899,
    "node_id": "MDQ6VXNlcjgyMTIwODk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/82120899?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/optimisticben",
    "html_url": "https://github.com/optimisticben",
    "followers_url": "https://api.github.com/users/optimisticben/followers",
    "following_url": "https://api.github.com/users/optimisticben/following{/other_user}",
    "gists_url": "https://api.github.com/users/optimisticben/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/optimisticben/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/optimisticben/subscriptions",
    "organizations_url": "https://api.github.com/users/optimisticben/orgs",
    "repos_url": "https://api.github.com/users/optimisticben/repos",
    "events_url": "https://api.github.com/users/optimisticben/events{/privacy}",
    "received_events_url": "https://api.github.com/users/optimisticben/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "optimisticben",
      "id": 82120899,
      "node_id": "MDQ6VXNlcjgyMTIwODk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/82120899?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/optimisticben",
      "html_url": "https://github.com/optimisticben",
      "followers_url": "https://api.github.com/users/optimisticben/followers",
      "following_url": "https://api.github.com/users/optimisticben/following{/other_user}",
      "gists_url": "https://api.github.com/users/optimisticben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/optimisticben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/optimisticben/subscriptions",
      "organizations_url": "https://api.github.com/users/optimisticben/orgs",
      "repos_url": "https://api.github.com/users/optimisticben/repos",
      "events_url": "https://api.github.com/users/optimisticben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/optimisticben/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2022-05-25T15:52:41Z",
  "updated_at": "2022-09-06T16:55:18Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Describe the bug**\r\nThe kustomize templates at:\r\nhttps://github.com/ethereum-optimism/optimism/tree/develop/infra/op-replica/kustomize\r\nInclude in the instructions to use a \"configmaps\" dir that doesn't exist under the \"Building\" header:\r\n`kubectl diff -k ./bases/configmaps/`\r\nand\r\n`kustomize build ./bases/configmaps/ `\r\n\r\nAfter some guessing, I assume that I am supposed to run:\r\n`kustomize overlays/kovan-replica-0-5-15/`\r\n? \r\nNot sure what the \"public-overlays\" folder is supposed to be for (not in readme)\r\n\r\nBut the template it produces includes references to `ServiceMonitor` and `PodMonitor` which I assume are from a prometheus operator that I was unaware was a requirement.\r\n\r\nThere also is some code referring to a proxy which does not appear to be documented or necessary.\r\n\r\n**Expected behavior**\r\n\r\nReally all I want is:\r\n\r\nA simple `Deployment` That includes the l2geth and data-transport-layer images in the same pod with a\r\n`PersistentVolumeClaim` for both their data directories, and a\r\n`Service` for the l2geth RPC and the data-transport-layer with a parameter to fill in for the URL of the Ethereum RPC server it should use for sync. \r\n\r\nI can orchestrate any monitoring using my existing processes.\r\n\r\nThis monitoring and waiter code that's mixed in makes a lot of assumptions about the k8s environment that may not be true, and obfuscates how exactly these 2 components interact with each other. ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2617/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2617/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1137764138",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2617#issuecomment-1137764138",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2617",
    "id": 1137764138,
    "node_id": "IC_kwDODjvEJM5D0Ocq",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-25T19:24:39Z",
    "updated_at": "2022-05-25T19:24:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @optimisticben ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1137764138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1137921570",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2617#issuecomment-1137921570",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2617",
    "id": 1137921570,
    "node_id": "IC_kwDODjvEJM5D004i",
    "user": {
      "login": "optimisticben",
      "id": 82120899,
      "node_id": "MDQ6VXNlcjgyMTIwODk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/82120899?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/optimisticben",
      "html_url": "https://github.com/optimisticben",
      "followers_url": "https://api.github.com/users/optimisticben/followers",
      "following_url": "https://api.github.com/users/optimisticben/following{/other_user}",
      "gists_url": "https://api.github.com/users/optimisticben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/optimisticben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/optimisticben/subscriptions",
      "organizations_url": "https://api.github.com/users/optimisticben/orgs",
      "repos_url": "https://api.github.com/users/optimisticben/repos",
      "events_url": "https://api.github.com/users/optimisticben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/optimisticben/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-25T22:48:03Z",
    "updated_at": "2022-05-25T22:48:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, the provided kustomizations are just examples of replica deployments to k8s that we use to deploy.\r\n\r\nI'll update the base resources with basic deployment example.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1137921570/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1219576538",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2617#issuecomment-1219576538",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2617",
    "id": 1219576538,
    "node_id": "IC_kwDODjvEJM5IsULa",
    "user": {
      "login": "DaveWK",
      "id": 13626476,
      "node_id": "MDQ6VXNlcjEzNjI2NDc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/13626476?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DaveWK",
      "html_url": "https://github.com/DaveWK",
      "followers_url": "https://api.github.com/users/DaveWK/followers",
      "following_url": "https://api.github.com/users/DaveWK/following{/other_user}",
      "gists_url": "https://api.github.com/users/DaveWK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DaveWK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DaveWK/subscriptions",
      "organizations_url": "https://api.github.com/users/DaveWK/orgs",
      "repos_url": "https://api.github.com/users/DaveWK/repos",
      "events_url": "https://api.github.com/users/DaveWK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DaveWK/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-18T14:37:27Z",
    "updated_at": "2022-08-18T14:37:27Z",
    "author_association": "NONE",
    "body": "any update on this? the instructions to run a full node are a rat's nest of indecipherable config vars that seem to have no purpose. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1219576538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1232282022",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2617#issuecomment-1232282022",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2617",
    "id": 1232282022,
    "node_id": "IC_kwDODjvEJM5JcyGm",
    "user": {
      "login": "DaveWK",
      "id": 13626476,
      "node_id": "MDQ6VXNlcjEzNjI2NDc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/13626476?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DaveWK",
      "html_url": "https://github.com/DaveWK",
      "followers_url": "https://api.github.com/users/DaveWK/followers",
      "following_url": "https://api.github.com/users/DaveWK/following{/other_user}",
      "gists_url": "https://api.github.com/users/DaveWK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DaveWK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DaveWK/subscriptions",
      "organizations_url": "https://api.github.com/users/DaveWK/orgs",
      "repos_url": "https://api.github.com/users/DaveWK/repos",
      "events_url": "https://api.github.com/users/DaveWK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DaveWK/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-30T23:43:45Z",
    "updated_at": "2022-08-30T23:43:45Z",
    "author_association": "NONE",
    "body": "I made my own using regular old YAML. I found it very frustrating to decipher what the complete set of vars I would need for the dtl and l2geth were, so if I missed any, or any of these can be decrufted, let me know. This uses the AWS EBS persistent volume plugin, but that can be defined to whatever storage class you'd like. \r\n\r\nIn my setup I am using AWS Ingress templates which I have left out of this snippet to avoid adding tech-specific items to the template. I don't really understand what the \"block signer key\" is for, or why I need to add it so let me know if that's some dev/test param I can get rid of.\r\n\r\n```\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: optimism-mainnet\r\n  labels:\r\n    app: optimism-mainnet\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      app: optimism-mainnet\r\n  strategy:\r\n    type: Recreate\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: optimism-mainnet\r\n    spec:\r\n      volumes:\r\n        - name: optimism-dtl-data\r\n          persistentVolumeClaim:\r\n            claimName: optimism-dtl-data\r\n        - name: optimism-l2geth-replica-data\r\n          persistentVolumeClaim:\r\n            claimName: optimism-l2geth-replica-data\r\n      containers:\r\n        - name: optimism-data-transport-layer\r\n          image: ethereumoptimism/data-transport-layer:0.5.42\r\n          volumeMounts:\r\n            - name: optimism-dtl-data\r\n              mountPath: /data\r\n          envFrom:\r\n            - configMapRef:\r\n                name: optimism-dtl-env-vars\r\n          ports:\r\n            - containerPort: 7878\r\n              name: http-dtl-rpc\r\n              protocol: TCP\r\n          resources:\r\n            requests:\r\n              memory: \"2000Mi\"\r\n              cpu: \"2\"\r\n            limits:\r\n              memory: \"2500Mi\"\r\n              cpu: \"2\"\r\n        - name: optimism-l2geth-replica\r\n          image: ethereumoptimism/l2geth:0.5.23\r\n          command:\r\n            - geth\r\n            - --datadir=$(DATADIR)\r\n            - --password=$(DATADIR)/password\r\n            - --allow-insecure-unlock\r\n            - --unlock=$(BLOCK_SIGNER_ADDRESS)\r\n            - --mine\r\n            - --miner.etherbase=$(BLOCK_SIGNER_ADDRESS)\r\n          volumeMounts:\r\n            - name: optimism-l2geth-replica-data\r\n              mountPath: /data\r\n          envFrom:\r\n            - configMapRef:\r\n                name: optimism-l2geth-env-vars\r\n          ports:\r\n            - containerPort: 8545\r\n              name: http-l2geth-rpc\r\n              protocol: TCP\r\n            - containerPort: 8546\r\n              name: http-l2geth-ws\r\n              protocol: TCP\r\n          resources:\r\n            requests:\r\n              memory: \"24000Mi\"\r\n              cpu: \"5\"\r\n            limits:\r\n              memory: \"25000Mi\"\r\n              cpu: \"5\"\r\n---\r\napiVersion: v1\r\nkind: PersistentVolumeClaim\r\nmetadata:\r\n  name: optimism-l2geth-replica-data\r\nspec:\r\n  accessModes:\r\n    - ReadWriteOnce\r\n  storageClassName: gp3 # aws value -- change this if you arent using aws\r\n  resources:\r\n    requests:\r\n      storage: 3500Gi\r\n---\r\napiVersion: v1\r\nkind: PersistentVolumeClaim\r\nmetadata:\r\n  name: optimism-dtl-data\r\nspec:\r\n  accessModes:\r\n    - ReadWriteOnce\r\n  storageClassName: gp3 # aws value -- change this if you arent using aws\r\n  resources:\r\n    requests:\r\n      storage: 1500Gi\r\n---\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: optimism-mainnet-l2geth\r\n  labels:\r\n    app: optimism-mainnet-l2geth\r\nspec:\r\n  type: NodePort\r\n  selector:\r\n    app: optimism-mainnet\r\n  ports:\r\n    - name: http-l2geth-rpc\r\n      port: 8545\r\n      protocol: TCP\r\n    - name: http-l2geth-ws\r\n      port: 8546\r\n      protocol: TCP\r\n---\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: optimism-mainnet-dtl\r\n  labels:\r\n    app: optimism-mainnet-dtl\r\nspec:\r\n  type: NodePort\r\n  selector:\r\n    app: optimism-mainnet\r\n  ports:\r\n    - name: http-dtl-rpc\r\n      port: 7878\r\n      protocol: TCP\r\n---\r\napiVersion: v1\r\nkind: ConfigMap\r\nmetadata:\r\n  name: optimism-l2geth-env-vars\r\ndata:\r\n  CHAIN_ID: \"10\"\r\n  DATADIR: \"/data\"\r\n  NETWORK_ID: \"10\"\r\n  NO_DISCOVER: \"true\"\r\n  NO_USB: \"true\"\r\n  GASPRICE: \"0\"\r\n  GCMODE: \"archive\"\r\n  BLOCK_SIGNER_ADDRESS: \"0x00000398232E2064F896018496b4b44b3D62751F\"\r\n  BLOCK_SIGNER_PRIVATE_KEY: \"6587ae678cf4fc9a33000cdbf9f35226b71dcc6a4684a31203241f9bcfd55d27\"\r\n  BLOCK_SIGNER_PRIVATE_KEY_PASSWORD: \"pwd\"\r\n  ETH1_CTC_DEPLOYMENT_HEIGHT: \"13596466\"\r\n  ETH1_L1_FEE_WALLET_ADDRESS: \"0x391716d440c151c42cdf1c95c1d83a5427bca52c\"\r\n  ETH1_L1_CROSS_DOMAIN_MESSENGER_ADDRESS: \"0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1\"\r\n  ETH1_L1_STANDARD_BRIDGE_ADDRESS: \"0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1\"\r\n  ETH1_SYNC_SERVICE_ENABLE: \"true\"\r\n  L2GETH_GENESIS_URL: \"https://storage.googleapis.com/optimism/mainnet/genesis-berlin.json\"\r\n  L2GETH_GENESIS_HASH: \"0x106b0a3247ca54714381b1109e82cc6b7e32fd79ae56fbcc2e7b1541122f84ea\"\r\n  L2GETH_BERLIN_ACTIVATION_HEIGHT: \"3950000\"\r\n  ROLLUP_ADDRESS_MANAGER_OWNER_ADDRESS: \"0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A\"\r\n  ROLLUP_BACKEND: \"l1\"\r\n  ROLLUP_CLIENT_HTTP: \"http://optimism-mainnet-dtl.<k8s namespace>:7878\"\r\n  ROLLUP_DISABLE_TRANSFERS: \"false\"\r\n  ROLLUP_ENABLE_L2_GAS_POLLING: \"false\"\r\n  ROLLUP_GAS_PRICE_ORACLE_OWNER_ADDRESS: \"0x648E3e8101BFaB7bf5997Bd007Fb473786019159\"\r\n  ROLLUP_MAX_CALLDATA_SIZE: \"40000\"\r\n  ROLLUP_POLL_INTERVAL_FLAG: \"500ms\"\r\n  ROLLUP_SYNC_SERVICE_ENABLE: \"true\"\r\n  ROLLUP_TIMESTAMP_REFRESH: \"5m\"\r\n  ROLLUP_VERIFIER_ENABLE: \"true\"\r\n  RETRIES: \"60\"\r\n  ETH1_HTTP: \"http://<k8s service for eth>:8545\"\r\n  RPC_ADDR: \"0.0.0.0\"\r\n  RPC_API: \"eth,rollup,net,web3,debug\"\r\n  RPC_CORS_DOMAIN: \"*\"\r\n  RPC_ENABLE: \"true\"\r\n  RPC_PORT: \"8545\"\r\n  RPC_VHOSTS: \"*\"\r\n  TARGET_GAS_LIMIT: \"15000000\"\r\n  USING_OVM: \"true\"\r\n  WS_ADDR: \"0.0.0.0\"\r\n  WS_API: \"eth,rollup,net,web3,debug\"\r\n  WS_ORIGINS: \"*\"\r\n  WS: \"true\"\r\n  IPC_DISABLE: \"true\"\r\n---\r\napiVersion: v1\r\nkind: ConfigMap\r\nmetadata:\r\n  name: optimism-dtl-env-vars\r\ndata:\r\n  DATA_TRANSPORT_LAYER__ADDRESS_MANAGER: \"0xdE1FCfB0851916CA5101820A69b13a4E276bd81F\"\r\n  DATA_TRANSPORT_LAYER__CONFIRMATIONS: \"0\"\r\n  DATA_TRANSPORT_LAYER__DANGEROUSLY_CATCH_ALL_ERRORS: \"true\"\r\n  DATA_TRANSPORT_LAYER__DB_PATH: \"/data\"\r\n  DATA_TRANSPORT_LAYER__DEFAULT_BACKEND: \"l1\"\r\n  DATA_TRANSPORT_LAYER__ENABLE_METRICS: \"true\"\r\n  DATA_TRANSPORT_LAYER__ETH_NETWORK_NAME: \"mainnet\"\r\n  DATA_TRANSPORT_LAYER__L1_GAS_PRICE_BACKEND: \"l1\"\r\n  DATA_TRANSPORT_LAYER__L1_START_HEIGHT: \"13596466\"\r\n  DATA_TRANSPORT_LAYER__L2_CHAIN_ID: \"10\"\r\n  DATA_TRANSPORT_LAYER__L1_RPC_ENDPOINT: \"http://<k8s service for eth>:8545\"\r\n  DATA_TRANSPORT_LAYER__L2_RPC_ENDPOINT: \"http://optimism-mainnet-l2geth.<k8s namespace>:8545\"\r\n  DATA_TRANSPORT_LAYER__LOGS_PER_POLLING_INTERVAL: \"2000\"\r\n  DATA_TRANSPORT_LAYER__NODE_ENV: \"production\"\r\n  DATA_TRANSPORT_LAYER__POLLING_INTERVAL: \"100\"\r\n  DATA_TRANSPORT_LAYER__SENTRY_TRACE_RATE: \"0.05\"\r\n  DATA_TRANSPORT_LAYER__SERVER_HOSTNAME: \"0.0.0.0\"\r\n  DATA_TRANSPORT_LAYER__SERVER_PORT: \"7878\"\r\n  DATA_TRANSPORT_LAYER__SYNC_FROM_L1: \"true\"\r\n  DATA_TRANSPORT_LAYER__SYNC_FROM_L2: \"false\"\r\n  DATA_TRANSPORT_LAYER__TRANSACTIONS_PER_POLLING_INTERVAL: \"1000\"\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1232282022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1233313148",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2617#issuecomment-1233313148",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2617",
    "id": 1233313148,
    "node_id": "IC_kwDODjvEJM5Jgt18",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-31T19:01:57Z",
    "updated_at": "2022-08-31T19:01:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I didn't write the Kustomize instructions so I can't help much there, but I did put together a minimal docker setup here: https://github.com/smartcontracts/simple-optimism-node\r\n\r\nEven if you don't want to run docker directly, you can probably use this to figure out exactly which environment variables are necessary and which aren't. Anything not listed in the docker setup is not strictly necessary.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1233313148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1233347324",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2617#issuecomment-1233347324",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2617",
    "id": 1233347324,
    "node_id": "IC_kwDODjvEJM5Jg2L8",
    "user": {
      "login": "DaveWK",
      "id": 13626476,
      "node_id": "MDQ6VXNlcjEzNjI2NDc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/13626476?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DaveWK",
      "html_url": "https://github.com/DaveWK",
      "followers_url": "https://api.github.com/users/DaveWK/followers",
      "following_url": "https://api.github.com/users/DaveWK/following{/other_user}",
      "gists_url": "https://api.github.com/users/DaveWK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DaveWK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DaveWK/subscriptions",
      "organizations_url": "https://api.github.com/users/DaveWK/orgs",
      "repos_url": "https://api.github.com/users/DaveWK/repos",
      "events_url": "https://api.github.com/users/DaveWK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DaveWK/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-31T19:40:46Z",
    "updated_at": "2022-08-31T19:40:46Z",
    "author_association": "NONE",
    "body": "ah thanks -- I will compare to that and reconcile any differences..\r\n\r\nIt seems strange to have to define all these variables that don't really change in between environments in normal operation.. Could all these boilerplate values be put into the Dockerfile with the defaults, or bundled in a more transparent way? \r\n\r\nfor example, the only params I actually am changing for l2geth are: \r\n\r\nDATADIR\r\nROLLUP_CLIENT_HTTP\r\nETH1_HTTP\r\nROLLUP_BACKEND\r\n\r\nand DTL:\r\nDATA_TRANSPORT_LAYER__L1_RPC_ENDPOINT\r\nDATA_TRANSPORT_LAYER__SYNC_FROM_L1\r\nDATA_TRANSPORT_LAYER__SYNC_FROM_L2\r\nDATA_TRANSPORT_LAYER__DB_PATH\r\n\r\nI think most people will never change a lot of these kind of params for mainnet unless there was explicit instructions from the optimism team:\r\nETH1_L1_CROSS_DOMAIN_MESSENGER_ADDRESS, ETH1_L1_STANDARD_BRIDGE_ADDRESS, L2GETH_GENESIS_HASH etc.. \r\n\r\nIf there was just a param called like \"OPTIMISM_NET_ENV\" that i could set to \"mainnet\", then the startup scripts in geth.sh/dtl.sh  could just `source` a baked-in file with all these static env values for a given environment (allowing for overrides), and I wouldn't need to worry about when new ones are added or old values are changed. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1233347324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1238413850",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/2617#issuecomment-1238413850",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/2617",
    "id": 1238413850,
    "node_id": "IC_kwDODjvEJM5J0LIa",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-06T16:55:18Z",
    "updated_at": "2022-09-06T16:55:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah this is what I tried to do with `simple-optimism-node`. I agree that would be the ideal way to manage environment variables. We currently have lots of boilerplate that users don't actually need to modify themselves.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1238413850/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
