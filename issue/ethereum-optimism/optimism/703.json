{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/703",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/703/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/703/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/703/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/703",
  "id": 871689231,
  "node_id": "MDU6SXNzdWU4NzE2ODkyMzE=",
  "number": 703,
  "title": "ChugSplash needs a contract that authenticates and executes upgrades as internal transactions",
  "user": {
    "login": "karlfloersch",
    "id": 706123,
    "node_id": "MDQ6VXNlcjcwNjEyMw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/706123?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karlfloersch",
    "html_url": "https://github.com/karlfloersch",
    "followers_url": "https://api.github.com/users/karlfloersch/followers",
    "following_url": "https://api.github.com/users/karlfloersch/following{/other_user}",
    "gists_url": "https://api.github.com/users/karlfloersch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karlfloersch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karlfloersch/subscriptions",
    "organizations_url": "https://api.github.com/users/karlfloersch/orgs",
    "repos_url": "https://api.github.com/users/karlfloersch/repos",
    "events_url": "https://api.github.com/users/karlfloersch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karlfloersch/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2907832555,
      "node_id": "MDU6TGFiZWwyOTA3ODMyNTU1",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-feature-request",
      "name": "C-feature-request",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: A feature request."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "smartcontracts",
    "id": 14298799,
    "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/smartcontracts",
    "html_url": "https://github.com/smartcontracts",
    "followers_url": "https://api.github.com/users/smartcontracts/followers",
    "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
    "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
    "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
    "repos_url": "https://api.github.com/users/smartcontracts/repos",
    "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
    "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2021-04-29T23:50:05Z",
  "updated_at": "2021-05-20T19:40:25Z",
  "closed_at": "2021-05-20T19:40:25Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "<!--\r\nNeed help?\r\nRefer to our contributing guidelines for additional information about making a good issue:\r\nhttps://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nDeployments at our level of complexity require multiple transactions spaced out over multiple blocks. This introduces annoyances around ensuring that all deployments are carried out to completion before operation of the chain continues.\r\n\r\nAdditionally, authenticating a deployment should be extremely high security & therefore it is extremely expensive to perform a deployment where you need to authenticate every transaction in a deployment that requires, say, 20 transactions. It's just unreasonable to sign 20 multisig txs!\r\n\r\n**Describe the solution you'd like**\r\nIn order to solve this we propose a deployment system which:\r\n1. Can authenticate a very large deployment in 1 transaction and allow **anyone** to actually execute the deployment.\r\n2. Locks the entire contract system while a deployment is in progress, ensuring that no transactions are executed against a partial deployment.\r\n3. Can perform deployments across L1 and L2 (the deployment pauses both L1 and L2 contracts so that we can upgrade any component of our system)\r\n4. Will never get stuck in the middle of a deployment.\r\n5. Tracks the version of the deployment.\r\n\r\nTo create this we need to create a DeploymentManager contract which handles initiating a new upgrade, shutting down the system, performing upgrades, updating the upgrade if needed, resuming the system, and emitting useful information which describes what the upgrade did.\r\n\r\nThere is a WIP implementation here: https://github.com/ethereum-optimism/optimism/blob/a33bf584e598bc1d9257d2134a79dc9a8f1f4add/packages/contracts/contracts/chugsplash/L2/ChugSplashDeployer.sol#L13\r\n\r\nThis issue is specifically scoped to implementing the DeploymentManager contract. Note that we will need to extend the functionality when we want to implement the specific pausing & resuming logic for L1 and L2 as they differ per environment.\r\n\r\n**Blockers**\r\nhttps://github.com/ethereum-optimism/optimism/issues/697\r\nhttps://github.com/ethereum-optimism/optimism/issues/696",
  "closed_by": {
    "login": "smartcontracts",
    "id": 14298799,
    "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/smartcontracts",
    "html_url": "https://github.com/smartcontracts",
    "followers_url": "https://api.github.com/users/smartcontracts/followers",
    "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
    "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
    "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
    "repos_url": "https://api.github.com/users/smartcontracts/repos",
    "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
    "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/703/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/703/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
