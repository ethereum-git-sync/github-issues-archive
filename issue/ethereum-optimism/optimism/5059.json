{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/5059",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/5059/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/5059/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/5059/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/5059",
  "id": 1611691674,
  "node_id": "I_kwDODjvEJM5gEHaa",
  "number": 5059,
  "title": "[feature] Stop block-generation when there is a significant lag in l2Safe compared to l2Unsafe",
  "user": {
    "login": "keroro520",
    "id": 1870648,
    "node_id": "MDQ6VXNlcjE4NzA2NDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1870648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/keroro520",
    "html_url": "https://github.com/keroro520",
    "followers_url": "https://api.github.com/users/keroro520/followers",
    "following_url": "https://api.github.com/users/keroro520/following{/other_user}",
    "gists_url": "https://api.github.com/users/keroro520/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/keroro520/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/keroro520/subscriptions",
    "organizations_url": "https://api.github.com/users/keroro520/orgs",
    "repos_url": "https://api.github.com/users/keroro520/repos",
    "events_url": "https://api.github.com/users/keroro520/events{/privacy}",
    "received_events_url": "https://api.github.com/users/keroro520/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2907832518,
      "node_id": "MDU6TGFiZWwyOTA3ODMyNTE4",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-enhancement",
      "name": "C-enhancement",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: A PR with an enhancement or bugfix."
    },
    {
      "id": 3602558442,
      "node_id": "LA_kwDODjvEJM7Wuq3q",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-discussion",
      "name": "C-discussion",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: A long-form discussion"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-03-06T15:42:49Z",
  "updated_at": "2023-03-27T18:51:47Z",
  "closed_at": "2023-03-27T18:51:47Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "<!--\r\nNeed help?\r\nRefer to our contributing guidelines for additional information about making a good issue:\r\nhttps://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\nCurrent Bedrocks designs the sequence window, which is configured using the `SeqWindowSize` parameter to ensure that the chain data of L2 epochs is submitted to L1 within a specific window. If the OP-Node fails to find L1 batches of the L2 block `l2safe + 1` within its sequence window, it generates an empty block for `l2Safe + 1`. This force-derived empty block enforces the chain's liveness, but it may cause a deep L2 reorg.\r\n\r\nWe are planning to deploy a standalone Optimism chain, but we are concerned about the potential for deep reorgs. We aim to limit the reorg depth to a configured value, such as `128`.\r\n\r\nTo prevent deep reorgs (depth greater than `128`), we propose a new configuration parameter called `cfg.MaxSafeLaggedBehindUnsafe` to OP-Node. Before block generation, OP-Node will check the difference between `l2Unsafe.Number` and `l2Safe.Number`, and if the result is greater than `128`, it will cancel the current block-generation plan and wait for the next ticker. Here is the PoC implementation, just simply adding a check before [`payload, err := s.sequencer.RunNextSequencerAction(ctx)`](https://github.com/ethereum-optimism/optimism/blob/377e782355fd6b726144f1ad6658253613ec3dd7/op-node/rollup/driver/state.go#L212):\r\n\r\n\r\n```go\r\n\t\tselect {\r\n\t\tcase <-sequencerCh:\r\n\t\t\tif s.derivation.SafeL2Head().Number+ cfg.MaxSafeLaggedBehindUnsafe <= s.derivation.UnsafeL2Head().Number {\r\n\t\t\t\ts.log.Warn(\"SafeL2 has lagged too many\", \"lagged\", s.derivation.UnsafeL2Head().Number - s.derivation.SafeL2Head().Number)\r\n\t\t\t\tplanSequencerAction()\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\r\n\t\t\tpayload, err := s.sequencer.RunNextSequencerAction(ctx)\r\n\t\t\tif err != nil {\r\n\t\t\t\ts.log.Error(\"Sequencer critical error\", \"err\", err)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n```\r\n\r\nCould you please provide feedback on the feasibility of this proposal?\r\nAre there any alternative solutions that could be more effective in limiting L2 deep reorg?\r\nWe would greatly appreciate your input on both the issue at hand and the proposed solution.",
  "closed_by": {
    "login": "trianglesphere",
    "id": 11803341,
    "node_id": "MDQ6VXNlcjExODAzMzQx",
    "avatar_url": "https://avatars.githubusercontent.com/u/11803341?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/trianglesphere",
    "html_url": "https://github.com/trianglesphere",
    "followers_url": "https://api.github.com/users/trianglesphere/followers",
    "following_url": "https://api.github.com/users/trianglesphere/following{/other_user}",
    "gists_url": "https://api.github.com/users/trianglesphere/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/trianglesphere/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/trianglesphere/subscriptions",
    "organizations_url": "https://api.github.com/users/trianglesphere/orgs",
    "repos_url": "https://api.github.com/users/trianglesphere/repos",
    "events_url": "https://api.github.com/users/trianglesphere/events{/privacy}",
    "received_events_url": "https://api.github.com/users/trianglesphere/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/5059/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 1,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/5059/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1464804991",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/5059#issuecomment-1464804991",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/5059",
    "id": 1464804991,
    "node_id": "IC_kwDODjvEJM5XTyZ_",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-11T03:01:02Z",
    "updated_at": "2023-03-11T03:01:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @protolambda ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1464804991/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
