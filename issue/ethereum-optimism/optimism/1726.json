{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1726",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1726/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1726/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1726/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/1726",
  "id": 1049027903,
  "node_id": "I_kwDODjvEJM4-huU_",
  "number": 1726,
  "title": "Make `DeployAndVerifyAndThen` more robust against errors in etherscan verification",
  "user": {
    "login": "maurelian",
    "id": 23033765,
    "node_id": "MDQ6VXNlcjIzMDMzNzY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maurelian",
    "html_url": "https://github.com/maurelian",
    "followers_url": "https://api.github.com/users/maurelian/followers",
    "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
    "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
    "organizations_url": "https://api.github.com/users/maurelian/orgs",
    "repos_url": "https://api.github.com/users/maurelian/repos",
    "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maurelian/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2978714528,
      "node_id": "MDU6TGFiZWwyOTc4NzE0NTI4",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "C2E0C6",
      "default": true,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-11-09T19:39:01Z",
  "updated_at": "2023-02-07T03:48:32Z",
  "closed_at": "2023-02-07T03:48:32Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**Description**\r\n\r\n#1722 Adds source code verification on Etherscan _during_ the deployment process.\r\nThat step is wrapped in a [try/catch](https://github.com/ethereum-optimism/optimism/pull/1722/files#diff-dd0936a724ca1d510721514845ec8ade2a343d5127e5efbb66d5dc009dc8c643R41\r\n). We should add better error handling to determine when to catch and when to continue.\r\n\r\n**Describe the solution you'd like**\r\n\r\n1. Understand the Etherscan verification API, and the different errors it returns.\r\n2. Enumerate which errors should be caught and which should not.\r\n3. Add logic to identify and handle those errors appropriately. \r\n",
  "closed_by": {
    "login": "smartcontracts",
    "id": 14298799,
    "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/smartcontracts",
    "html_url": "https://github.com/smartcontracts",
    "followers_url": "https://api.github.com/users/smartcontracts/followers",
    "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
    "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
    "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
    "repos_url": "https://api.github.com/users/smartcontracts/repos",
    "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
    "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1726/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1726/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1002908777",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/1726#issuecomment-1002908777",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1726",
    "id": 1002908777,
    "node_id": "IC_kwDODjvEJM47xyxp",
    "user": {
      "login": "indeavr",
      "id": 22181177,
      "node_id": "MDQ6VXNlcjIyMTgxMTc3",
      "avatar_url": "https://avatars.githubusercontent.com/u/22181177?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/indeavr",
      "html_url": "https://github.com/indeavr",
      "followers_url": "https://api.github.com/users/indeavr/followers",
      "following_url": "https://api.github.com/users/indeavr/following{/other_user}",
      "gists_url": "https://api.github.com/users/indeavr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/indeavr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/indeavr/subscriptions",
      "organizations_url": "https://api.github.com/users/indeavr/orgs",
      "repos_url": "https://api.github.com/users/indeavr/repos",
      "events_url": "https://api.github.com/users/indeavr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/indeavr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-30T07:41:14Z",
    "updated_at": "2021-12-30T07:41:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "There are 2 classes of errors:\r\n1. On Submit- `Failed to send contract verification request`\r\n2. On Verification - `Failure during etherscan status polling. The verification may still succeed but\r\nshould be checked manually`\r\n\r\nIn (1) it could either be a (1.1) network issue or (1.2):\r\n> Reason: The Etherscan API responded that the address ${req.contractaddress} does not have bytecode.\r\nThis can happen if the contract was recently deployed and this fact hasn't propagated to the backend yet.\r\nTry waiting for a minute before verifying your contract. If you are invoking this from a script,\r\ntry to wait for five confirmations of your contract deployment transaction before running the verification subtask.\r\n\r\nIn (2) the reason is `specified as text`. \r\n\r\nHow do you imagin that this error handling could be made robust ? \r\n\r\n### My Propositon: \r\n\r\nIMO the verification process should `ALWAYS throw`. \r\nThis way we ensure that a verification error can't stay unnoticed. \r\n\r\n* **I would recomment that we split the `DeployAndVerifyAndThen` into `separate functions`** - deploy & verify.\r\n\r\nObservation: There is no logic after the DeployAndVerifyAndThen inside the deploy scripts (& no postDeployAction). ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1002908777/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1005090570",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/1726#issuecomment-1005090570",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1726",
    "id": 1005090570,
    "node_id": "IC_kwDODjvEJM476HcK",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-04T19:02:48Z",
    "updated_at": "2022-01-04T19:02:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for this thoughtful response and taking the time to look into the code!\r\n\r\nFor context, this issue was requested by @smartcontracts in his review of the [initial PR](https://github.com/ethereum-optimism/optimism/pull/1722/files#r745894985). So it would be good to have him comment. Here are my thoughts:\r\n\r\n> How do you imagine that this error handling could be made robust ?\r\n\r\nIMO we should: \r\n\r\n1. enumerate the possible errors (which you've done!)\r\n2. decide which to catch or throw on \r\n\t- IMO none of the errors you've mentioned are worth throwing on. We can always restart the verification process separately. We're very unlikely to miss a failed verification, since the deployment scripts [explicitly include it as a step in the process](https://github.com/ethereum-optimism/optimism/blob/c3db334f51494e36fd959f7c70c60ed5ec7753e0/packages/contracts/deploy/011-set-addresses.ts#L35) before the upgrade is finalized). \r\n3. Explicitly catch those error classes, so that new error classes we haven't considered will throw. \r\n\r\n\r\n> * **I would recommend that we split the `DeployAndVerifyAndThen` into `separate functions`** - deploy & verify.\r\n\r\nI agree!\r\n\r\n> Observation: There is no logic after the `DeployAndVerifyAndThen` inside the deploy scripts (& no postDeployAction).\r\n\r\nIt'd be great to get rid of the `...AndThen`/`postDeployAction` part of the code then. :)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1005090570/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
