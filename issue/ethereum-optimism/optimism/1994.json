{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1994",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1994/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1994/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1994/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/1994",
  "id": 1096890171,
  "node_id": "I_kwDODjvEJM5BYTc7",
  "number": 1994,
  "title": "replica-healthcheck exits when state root cannot be checked",
  "user": {
    "login": "yorickdowne",
    "id": 71337066,
    "node_id": "MDQ6VXNlcjcxMzM3MDY2",
    "avatar_url": "https://avatars.githubusercontent.com/u/71337066?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/yorickdowne",
    "html_url": "https://github.com/yorickdowne",
    "followers_url": "https://api.github.com/users/yorickdowne/followers",
    "following_url": "https://api.github.com/users/yorickdowne/following{/other_user}",
    "gists_url": "https://api.github.com/users/yorickdowne/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/yorickdowne/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yorickdowne/subscriptions",
    "organizations_url": "https://api.github.com/users/yorickdowne/orgs",
    "repos_url": "https://api.github.com/users/yorickdowne/repos",
    "events_url": "https://api.github.com/users/yorickdowne/events{/privacy}",
    "received_events_url": "https://api.github.com/users/yorickdowne/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2907832490,
      "node_id": "MDU6TGFiZWwyOTA3ODMyNDkw",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-bug",
      "name": "C-bug",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: This is a bug."
    },
    {
      "id": 2930018676,
      "node_id": "MDU6TGFiZWwyOTMwMDE4Njc2",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/P-unconfirmed",
      "name": "P-unconfirmed",
      "color": "BFD4F2",
      "default": false,
      "description": "Issue might be valid, but itâ€™s not yet confirmed"
    },
    {
      "id": 2978714528,
      "node_id": "MDU6TGFiZWwyOTc4NzE0NTI4",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "C2E0C6",
      "default": true,
      "description": ""
    },
    {
      "id": 3519009723,
      "node_id": "LA_kwDODjvEJM7Rv9O7",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/M-replica-healthcheck",
      "name": "M-replica-healthcheck",
      "color": "FBCA04",
      "default": false,
      "description": "Module: replica-healthcheck"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-01-08T10:09:40Z",
  "updated_at": "2022-03-24T19:27:12Z",
  "closed_at": "2022-03-24T19:27:12Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Describe the bug**\r\n\r\nThere appears to be a race condition where replica-healthcheck tries to read state root when it's not available. This exits replica-healthcheck with a Go error `TypeError: Cannot read property 'stateRoot' of null`; and upon restart it can read the state root successfully.\r\n\r\n**To Reproduce**\r\n\r\nRun data-transport-later, l2geth and let them sync; run replica-healthcheck and observe it. This error happens with some regularity.\r\n\r\n**System Specs:**\r\n - OS: Ubuntu 20.04, docker\r\n - Package Version (or commit hash): healthcheck 0.3.3, l2geth 0.5.5, data-transport-layer 0.5.10.\r\n\r\n**Additional context**\r\n\r\n```\r\nreplica-healthcheck_1   | {\"level\":30,\"time\":1641636187844,\"msg\":\"Replica caught up with sequencer, waiting for next block\"}\r\nreplica-healthcheck_1   | {\"level\":30,\"time\":1641636188848,\"msg\":\"Replica caught up with sequencer, waiting for next block\"}\r\nreplica-healthcheck_1   | TypeError: Cannot read property 'stateRoot' of null\r\nreplica-healthcheck_1   |     at HealthcheckServer.runSyncCheck (/opt/optimism/packages/replica-healthcheck/dist/healthcheck-server.js:130:72)\r\nreplica-healthcheck_1   |     at processTicksAndRejections (internal/process/task_queues.js:95:5)\r\nreplica-healthcheck_1   |     at async /opt/optimism/packages/replica-healthcheck/dist/exec/run-healthcheck-server.js:28:5\r\nreplica-healthcheck_1   | {\"level\":30,\"time\":1641636191098,\"msg\":\"Listening on port 3000\"}\r\nreplica-healthcheck_1   | {\"level\":30,\"time\":1641636191254,\"blockNumber\":2090087,\"msg\":\"State roots matching\"}\r\nreplica-healthcheck_1   | {\"level\":30,\"time\":1641636191320,\"sequencerHeight\":2090090,\"replicaHeight\":2090087,\"heightDifference\":3,\"msg\":\"Syncing from sequencer\"}\r\nreplica-healthcheck_1   | {\"level\":30,\"time\":1641636191320,\"msg\":\"Replica caught up with sequencer, waiting for next block\"}\r\nreplica-healthcheck_1   | {\"level\":30,\"time\":1641636192467,\"blockNumber\":2090093,\"msg\":\"State roots matching\"}\r\n```\r\n",
  "closed_by": {
    "login": "smartcontracts",
    "id": 14298799,
    "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/smartcontracts",
    "html_url": "https://github.com/smartcontracts",
    "followers_url": "https://api.github.com/users/smartcontracts/followers",
    "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
    "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
    "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
    "repos_url": "https://api.github.com/users/smartcontracts/repos",
    "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
    "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1994/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1994/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1009142056",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/1994#issuecomment-1009142056",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1994",
    "id": 1009142056,
    "node_id": "IC_kwDODjvEJM48Jkko",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-10T17:11:36Z",
    "updated_at": "2022-01-10T17:12:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok I can confirm this is a legit bug and can be easily fixed. I'll describe the underlying issue and a proposed fix so that we can turn  this into a Good First Issue.\r\n\r\nFrom the error you provided I was able to find the line of code where this bug was triggered:\r\n\r\nhttps://github.com/ethereum-optimism/optimism/blob/94d8320cc9340b86bcbb2fead33d1e21ec6a0f76/packages/replica-healthcheck/src/healthcheck-server.ts#L196\r\n\r\nIt seems the bug occurs because `sequencerCorresponding` (the block being pulled from the Sequencer to check against) is returning `null`:\r\n\r\nhttps://github.com/ethereum-optimism/optimism/blob/94d8320cc9340b86bcbb2fead33d1e21ec6a0f76/packages/replica-healthcheck/src/healthcheck-server.ts#L191-L194\r\n\r\nInterestingly, `replicaLatest` is *not* null. This suggests that the replica is seeing a block that the Sequencer hasn't seen yet. It doesn't make sense for the replica to have a block that the Sequencer hasn't seen (since replicas follow the Sequencer). It's possible that there are some intermittent caching issues on the Sequencer endpoint being used for the healthcheck service. It might eventually be worth investigating exactly why the Sequencer block is coming back as `null` (I'll throw an issue for this in triage), but for now it seems more important to make sure that the healthcheck service doesn't crash when this happens.\r\n\r\nFix should be pretty easy, if the `sequencerCorresponding` block comes back as `null`, log something (`this.logger.warn`) and sleep for a few seconds before trying again (`await sleep(5000)`).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1009142056/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1009235784",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/1994#issuecomment-1009235784",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1994",
    "id": 1009235784,
    "node_id": "IC_kwDODjvEJM48J7dI",
    "user": {
      "login": "yorickdowne",
      "id": 71337066,
      "node_id": "MDQ6VXNlcjcxMzM3MDY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/71337066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yorickdowne",
      "html_url": "https://github.com/yorickdowne",
      "followers_url": "https://api.github.com/users/yorickdowne/followers",
      "following_url": "https://api.github.com/users/yorickdowne/following{/other_user}",
      "gists_url": "https://api.github.com/users/yorickdowne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yorickdowne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yorickdowne/subscriptions",
      "organizations_url": "https://api.github.com/users/yorickdowne/orgs",
      "repos_url": "https://api.github.com/users/yorickdowne/repos",
      "events_url": "https://api.github.com/users/yorickdowne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yorickdowne/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-10T18:43:36Z",
    "updated_at": "2022-01-10T18:43:36Z",
    "author_association": "NONE",
    "body": "I know why this happened. Oh boy. `DATA_TRANSPORT_LAYER__L2_RPC_ENDPOINT` and `REPLICA_HEALTHCHECK__ETH_NETWORK_RPC_PROVIDER` pointed to two different URLs. That'd do it re \"we have it but the health check provider doesn't know about it yet\".",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1009235784/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1009398923",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/1994#issuecomment-1009398923",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1994",
    "id": 1009398923,
    "node_id": "IC_kwDODjvEJM48KjSL",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-10T22:19:10Z",
    "updated_at": "2022-01-10T22:19:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@yorickdowne good to know! This seems like a common enough configuration that we should just handle this within the healthcheck server. I could imagine a number of reasons why the URLs would be different, e.g., wanting to keep production endpoints separated for the sake minimizing the impact of a failure on one endpoint. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1009398923/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1078006086",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/1994#issuecomment-1078006086",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1994",
    "id": 1078006086,
    "node_id": "IC_kwDODjvEJM5AQRFG",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-24T19:27:12Z",
    "updated_at": "2022-03-24T19:27:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "We fixed this as part of our new (updated) replica-healthcheck service.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1078006086/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
