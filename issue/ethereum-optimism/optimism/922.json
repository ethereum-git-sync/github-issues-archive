{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/922",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/922/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/922/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/922/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/922",
  "id": 895836291,
  "node_id": "MDU6SXNzdWU4OTU4MzYyOTE=",
  "number": 922,
  "title": "Integration tests timing out when running using yarn test:integration",
  "user": {
    "login": "maurelian",
    "id": 23033765,
    "node_id": "MDQ6VXNlcjIzMDMzNzY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maurelian",
    "html_url": "https://github.com/maurelian",
    "followers_url": "https://api.github.com/users/maurelian/followers",
    "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
    "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
    "organizations_url": "https://api.github.com/users/maurelian/orgs",
    "repos_url": "https://api.github.com/users/maurelian/repos",
    "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maurelian/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2907832490,
      "node_id": "MDU6TGFiZWwyOTA3ODMyNDkw",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-bug",
      "name": "C-bug",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: This is a bug."
    },
    {
      "id": 2930018676,
      "node_id": "MDU6TGFiZWwyOTMwMDE4Njc2",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/P-unconfirmed",
      "name": "P-unconfirmed",
      "color": "BFD4F2",
      "default": false,
      "description": "Issue might be valid, but itâ€™s not yet confirmed"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2021-05-19T20:07:45Z",
  "updated_at": "2021-05-22T13:12:36Z",
  "closed_at": "2021-05-21T20:19:38Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**Describe the bug**\r\n\r\nWhen I run the integration tests locally, all the before hooks time out on me.\r\n\r\nie. \r\n```\r\n       \"before all\" hook for \"should read transfer events from a proxy ERC20\":\r\n     Error: Timeout of 100000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/primary/Projects/O/monorepo-one/integration-tests/test/read-proxy-event.spec.ts)\r\n```\r\n\r\n\r\n**To Reproduce**\r\nThis currently seems to be isolated to my machine, but I'm recording for posterity. Here's what I'm doing:\r\n\r\nFirst, I'm testing on [this commit](https://github.com/ethereum-optimism/optimism/commit/5b7e13c671c97892566e824499bf823108cccdde), since it was working in CI just fine.\r\n\r\nThis works:\r\n1. `cd ops`\r\n2. `docker-compose up -d`\r\n3. `docker-compose run integration_tests`\r\n4. All tests pass. \r\n\r\nThe following does not work:\r\n1. `cd ops`\r\n2. `docker-compose up -d`\r\n3. `cd ../integration-test`\r\n4. `yarn test:integration`\r\n5. The timeout error pasted above eventually appears.\r\n\r\n**System Specs:**\r\n - OS: MacOs BigSur\r\n - Package Version (or commit hash): 5b7e13c671c97892566e824499bf823108cccdde\r\n\r\n**Observations**\r\n\r\n* The fact that all 8 test files have the same failure indicates, and it's in the before all hook tell us that it must be something common to all of them. The only common step across all of them is the call to [`await OptimismEnv.new()`](https://github.com/ethereum-optimism/optimism/blob/5b7e13c671c97892566e824499bf823108cccdde/integration-tests/test/fee-payment.spec.ts#L12).\r\n* Within that operation, the location of the timeout is specifically happening on this funduser step:\r\n\r\nhttps://github.com/ethereum-optimism/optimism/blob/5b7e13c671c97892566e824499bf823108cccdde/integration-tests/test/shared/env.ts#L61\r\n\r\n* The logs for `l2geth` sometimes include this message shortly after the `fundUser` call starts:\r\n`l2geth_1 | DEBUG[05-19|17:53:17.652] Reached the end of an OVM execution ID=f9bea6be Return Data=0x000000000000000000000000defa017defa017defa017defa017defa017defa0 Error=nil`\r\n* Unfortunately they sometimes don't seem to include that error. ",
  "closed_by": {
    "login": "maurelian",
    "id": 23033765,
    "node_id": "MDQ6VXNlcjIzMDMzNzY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maurelian",
    "html_url": "https://github.com/maurelian",
    "followers_url": "https://api.github.com/users/maurelian/followers",
    "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
    "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
    "organizations_url": "https://api.github.com/users/maurelian/orgs",
    "repos_url": "https://api.github.com/users/maurelian/repos",
    "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maurelian/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/922/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/922/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/844435183",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/922#issuecomment-844435183",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/922",
    "id": 844435183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDQzNTE4Mw==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-19T20:11:56Z",
    "updated_at": "2021-05-19T20:12:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Adding this as a comment, since I'm not sure it's relevant or not: \r\n\r\nGiven that the issue does not occur when running the`integration_tests` service, that might be instructive. I noticed in the Dockerfile:\r\n\r\nhttps://github.com/ethereum-optimism/optimism/blob/5b7e13c671c97892566e824499bf823108cccdde/ops/docker/Dockerfile.integration-tests#L25-L27\r\n\r\nThat it copies this script which ends with an `npx hardhat` command: \r\n\r\nhttps://github.com/ethereum-optimism/optimism/blob/5b7e13c671c97892566e824499bf823108cccdde/ops/scripts/integration-tests.sh#L26\r\n\r\nHowever that command is not run in the Dockerfile. Instead the entrypoint is `yarn test:integration`, which ( unlike the command in `integration-tests.sh`) is simply `hardhat --network optimism test`.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/844435183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/844447329",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/922#issuecomment-844447329",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/922",
    "id": 844447329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDQ0NzMyOQ==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-19T20:27:44Z",
    "updated_at": "2021-05-19T20:27:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another observation. Once again I'm running on the same commit hash above (for which all checks pass in CI):\r\n\r\nI paid closer attention to the results of the `docker-compose run integration_tests`, and I see that there are actually 3 test _cases_ failing (though not in the 'before all' hook). These cases all involve the `withdraw` step: \r\n\r\n```\r\n  1) Native ETH Integration Tests\r\n       withdraw:\r\n     Error: Timeout of 100000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/opt/optimism/integration-tests/test/native-eth.spec.ts)\r\n      at listOnTimeout (internal/timers.js:555:17)\r\n      at processTimers (internal/timers.js:498:7)\r\n\r\n  2) Native ETH Integration Tests\r\n       withdrawTo:\r\n     Error: Timeout of 100000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/opt/optimism/integration-tests/test/native-eth.spec.ts)\r\n      at listOnTimeout (internal/timers.js:555:17)\r\n      at processTimers (internal/timers.js:498:7)\r\n\r\n  3) Native ETH Integration Tests\r\n       deposit, transfer, withdraw:\r\n     Error: Timeout of 100000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/opt/optimism/integration-tests/test/native-eth.spec.ts)\r\n      at listOnTimeout (internal/timers.js:555:17)\r\n      at processTimers (internal/timers.js:498:7)\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/844447329/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/845425407",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/922#issuecomment-845425407",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/922",
    "id": 845425407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTQyNTQwNw==",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-20T19:45:00Z",
    "updated_at": "2021-05-20T19:45:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@maurelian I'm unable to reproduce your initial issue on my local machine. Were you able to reproduce after running `yarn clean && yarn build`?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/845425407/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/845466026",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/922#issuecomment-845466026",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/922",
    "id": 845466026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTQ2NjAyNg==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-20T20:47:46Z",
    "updated_at": "2021-05-20T20:47:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes it persists after clean and build. \n\nI have had the most progress with `docker system prune --all`",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/845466026/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/845568697",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/922#issuecomment-845568697",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/922",
    "id": 845568697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTU2ODY5Nw==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-21T00:29:04Z",
    "updated_at": "2021-05-21T00:29:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just had my first fully successful run of integration tests. This is what I did: \r\n1. Create a new commit checking in the yarn.lock updates that were created but not checked in by some ancestral commit\r\n2. `docker system prune --all --volumes`\r\n2. `yarn clean` (in root and integration-tests dirs)\r\n2. `yarn && yarn build` and yarn && yarn build:integrations`\r\n3. `yarn test:integration` \r\n\r\nI don't know which of those steps is or is not required, but aside from number 2, I will likely repeat them out of pure superstition should I end up in this situation again.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/845568697/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/846079800",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/922#issuecomment-846079800",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/922",
    "id": 846079800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NjA3OTgwMA==",
    "user": {
      "login": "platocrat",
      "id": 37757724,
      "node_id": "MDQ6VXNlcjM3NzU3NzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/37757724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/platocrat",
      "html_url": "https://github.com/platocrat",
      "followers_url": "https://api.github.com/users/platocrat/followers",
      "following_url": "https://api.github.com/users/platocrat/following{/other_user}",
      "gists_url": "https://api.github.com/users/platocrat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/platocrat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/platocrat/subscriptions",
      "organizations_url": "https://api.github.com/users/platocrat/orgs",
      "repos_url": "https://api.github.com/users/platocrat/repos",
      "events_url": "https://api.github.com/users/platocrat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/platocrat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-21T16:22:45Z",
    "updated_at": "2021-05-21T16:22:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I just had my first fully successful run of integration tests. This is what I did:\r\n> \r\n> 1. Create a new commit checking in the yarn.lock updates that were created but not checked in by some ancestral commit\r\n> 2. `docker system prune --all --volumes`\r\n> 3. `yarn clean` (in root and integration-tests dirs)\r\n> 4. `yarn && yarn build` and yarn && yarn build:integrations`\r\n> 5. `yarn test:integration`\r\n> \r\n> I don't know which of those steps is or is not required, but aside from number 2, I will likely repeat them out of pure superstition should I end up in this situation again.\r\n\r\nStep 2 should _generally_ not be required if you're always running `docker-compose down -v` after you shut down the running containers. Same as Step 2.\r\n\r\nThe only times I re-run `docker system prune -a` and `yarn clean` is after pulling recent changes. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/846079800/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/846230881",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/922#issuecomment-846230881",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/922",
    "id": 846230881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NjIzMDg4MQ==",
    "user": {
      "login": "maurelian",
      "id": 23033765,
      "node_id": "MDQ6VXNlcjIzMDMzNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maurelian",
      "html_url": "https://github.com/maurelian",
      "followers_url": "https://api.github.com/users/maurelian/followers",
      "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
      "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
      "organizations_url": "https://api.github.com/users/maurelian/orgs",
      "repos_url": "https://api.github.com/users/maurelian/repos",
      "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maurelian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-21T20:19:38Z",
    "updated_at": "2021-05-22T13:12:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have resolved my issues. First I had to upgrade my docker engine to a new version with better support for the M1 chip. \r\n\r\nFollowing that, these are the steps that always reliably work for me. Some of them may not be strictly required, but for now I am playing it safe as it's faster to go slow and get the right docker images built:\r\n\r\nFrom the root: \r\n```\r\nyarn clean\r\nyarn build\r\ncd integration-tests\r\nyarn build:integration\r\ncd ../ops\r\ndocker-compose down\r\ndocker-compose build -- builder deployer #(because this is what I'm usually modifying)\r\ndocker-compose up -d\r\ncd ../integration-tests\r\nyarn test:integration\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/846230881/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
