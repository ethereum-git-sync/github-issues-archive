{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/622",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/622/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/622/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/622/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/622",
  "id": 866800677,
  "node_id": "MDU6SXNzdWU4NjY4MDA2Nzc=",
  "number": 622,
  "title": "Update and simplify token gateways to match proposed new interface",
  "user": {
    "login": "maurelian",
    "id": 23033765,
    "node_id": "MDQ6VXNlcjIzMDMzNzY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/23033765?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/maurelian",
    "html_url": "https://github.com/maurelian",
    "followers_url": "https://api.github.com/users/maurelian/followers",
    "following_url": "https://api.github.com/users/maurelian/following{/other_user}",
    "gists_url": "https://api.github.com/users/maurelian/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/maurelian/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/maurelian/subscriptions",
    "organizations_url": "https://api.github.com/users/maurelian/orgs",
    "repos_url": "https://api.github.com/users/maurelian/repos",
    "events_url": "https://api.github.com/users/maurelian/events{/privacy}",
    "received_events_url": "https://api.github.com/users/maurelian/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2907832518,
      "node_id": "MDU6TGFiZWwyOTA3ODMyNTE4",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-enhancement",
      "name": "C-enhancement",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: A PR with an enhancement or bugfix."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-04-24T17:48:05Z",
  "updated_at": "2021-06-15T18:39:49Z",
  "closed_at": "2021-06-15T18:39:49Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**Is your feature request related to a problem? Please describe.**\r\nWe need a standard way to transfer ERC20 tokens from L1 to L2. \r\n\r\n**Describe the solution you'd like**\r\n\r\nThis is the interface: \r\n\r\n```\r\ninterface TokenGateway {\r\n\r\n  /**********\r\n   * Events *\r\n   **********/\r\n\r\n\t/**\r\n\t * @dev This emits when a token is sent from this domain to the cross-domain,\r\n\t * ie. in transferOver() and transferOverTo().\r\n\t * @param _from Address tokens were sent from.\r\n\t * @param _to Address that will receive the tokens on the cross-domain.\r\n   * @param _amount Amount of the token to transfer.\r\n   */\r\n  event TransferredOver(\r\n      address indexed _from,\r\n      address indexed _to,\r\n      uint256 _amount\r\n  );\r\n\r\n\t/**\r\n\t * @dev This emits when a token transfer from the cross-domain is paid out on this domain.\r\n   * ie. in finalizeReturnTransfer().\r\n\t * @param _from Address tokens were sent from on the cross-domain.\r\n\t * @param _to Address that will receive the tokens on the cross-domain.\r\n   * @param _amount Amount of the token to transfer.\r\n   */\r\n  event FinalizedReturn(\r\n\t\t\taddress indexed _from,\r\n      address indexed _to,\r\n      uint256 _amount\r\n  );\r\n\r\n\r\n  /********************\r\n   * Public Functions *\r\n   ********************/\r\n\r\n\t/// returns the address of the token (or the gateway)? on the xDomain\r\n  function crossDomainToken() returns(address)\r\n\r\n\t/**\r\n\t * @notice Transfers a token to the same address as msg.sender on the cross-domain.\r\n\t * emits a TransferredOver event\r\n   * @param _amount Amount of the ERC20 to deposit.\r\n   * @param _data\r\n   */\r\n  function transferOver(\r\n      uint _amount,\r\n\t\t\tbytes calldata _data\r\n  )\r\n      external;\r\n\r\n\t/**\r\n\t * @notice Transfers a token to another address on the cross-domain\r\n\t * emits a TransferredOver event\r\n\t * @param _to Address on cross domain to transfer to.\r\n   * @param _amount Amount of the ERC20 to transfer.\r\n   * @param _data Arbitrary data with additional information for use on the cross-domain.\r\n   */\r\n  function transferOverTo(\r\n      address _to,\r\n      uint _amount,\r\n\t\t\tbytes calldata _data\r\n  )\r\n      external;\r\n\r\n\r\n  /*************************\r\n   * Cross-chain Functions *\r\n   *************************/\r\n/**\r\n\t * @notice Finalizes one or more transfers initiated on the cross-domain\r\n\t * emits a FinalizedReturn event.\r\n\t * @param _to Address to transfer the token to.\r\n   * @param _amount Amount of the ERC20 to transfer.\r\n   * @returns _from Address of the sender on the cross-domain.\r\n   * @returns _data Data with additional information for use on the cross-domain.\r\n   */\r\n  function finalizeWithdrawal(\r\n  function transferBack(\r\n  function finalizeTransferBack(\r\n\tfunction finalizeReturnTransfer(\r\n      address _to,\r\n      uint _amount\r\n  )\r\n    external\r\n\t  returns\r\n  (\r\n\t\t\taddress _from,\r\n\t\t\tbytes memory _data\r\n  )\r\n}\r\n```\r\n",
  "closed_by": {
    "login": "smartcontracts",
    "id": 14298799,
    "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/smartcontracts",
    "html_url": "https://github.com/smartcontracts",
    "followers_url": "https://api.github.com/users/smartcontracts/followers",
    "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
    "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
    "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
    "repos_url": "https://api.github.com/users/smartcontracts/repos",
    "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
    "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/622/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/622/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/861742560",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/622#issuecomment-861742560",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/622",
    "id": 861742560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MTc0MjU2MA==",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-15T18:39:49Z",
    "updated_at": "2021-06-15T18:39:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closed at the request of @maurelian ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/861742560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
