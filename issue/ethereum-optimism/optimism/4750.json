{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/4750",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/4750/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/4750/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/4750/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/4750",
  "id": 1550817025,
  "node_id": "I_kwDODjvEJM5cb5cB",
  "number": 4750,
  "title": "Asking eth_getTransactionReceipt & eth_getTransactionByHash return value's semantic. ",
  "user": {
    "login": "yj0x0x",
    "id": 102578874,
    "node_id": "U_kgDOBh06ug",
    "avatar_url": "https://avatars.githubusercontent.com/u/102578874?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/yj0x0x",
    "html_url": "https://github.com/yj0x0x",
    "followers_url": "https://api.github.com/users/yj0x0x/followers",
    "following_url": "https://api.github.com/users/yj0x0x/following{/other_user}",
    "gists_url": "https://api.github.com/users/yj0x0x/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/yj0x0x/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yj0x0x/subscriptions",
    "organizations_url": "https://api.github.com/users/yj0x0x/orgs",
    "repos_url": "https://api.github.com/users/yj0x0x/repos",
    "events_url": "https://api.github.com/users/yj0x0x/events{/privacy}",
    "received_events_url": "https://api.github.com/users/yj0x0x/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2907832604,
      "node_id": "MDU6TGFiZWwyOTA3ODMyNjA0",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-question",
      "name": "C-question",
      "color": "C5DEF5",
      "default": false,
      "description": "User questions that are neither feature requests nor bug reports"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-01-20T13:05:42Z",
  "updated_at": "2023-02-07T03:47:11Z",
  "closed_at": "2023-02-07T03:47:11Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "<!--\r\nNeed help?\r\nRefer to our contributing guidelines for additional information about making a good issue:\r\nhttps://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\nI'm wonder that json-rpc return value's semantic. \r\n- `eth_getTransactionReceipt`\r\n    - ```\r\n       \"l1Fee\": \"0x51dac9e39908\",\r\n       \"l1FeeScalar\": \"1\",\r\n       \"l1GasPrice\": \"0x36a4129df\",\r\n       \"l1GasUsed\": \"0x17f8\",\r\n       ```\r\n l1fee is l1GasPrice multiply l1GasUsed?? \r\n and what is `l1FeeScalar` stands for? \r\n \r\n - `eth_getTransactionByHash`\r\n     -  ```\r\n        \"queueOrigin\": \"sequencer\",\r\n        \"l1TxOrigin\": null,\r\n        \"l1BlockNumber\": \"0xf625fc\",\r\n        \"l1Timestamp\": \"0x63904da5\",\r\n        ```\r\n  queueOrigin meant that where tx came from ?\r\n  if value is `sequencer` that is. L2 -> L2 transaction or this includes L2 -> L1 transaction too?\r\n  what for `l1TxOrigin`? \r\n  `l1BlockNumber & l1Timstamp` stand for sent tx confirmed on L1 side information? \r\n  \r\n  \r\n  If anyone let me know about above information would be appreciated. \r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**System Specs:**\r\n - OS:\r\n - Package Version (or commit hash):\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
  "closed_by": {
    "login": "smartcontracts",
    "id": 14298799,
    "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/smartcontracts",
    "html_url": "https://github.com/smartcontracts",
    "followers_url": "https://api.github.com/users/smartcontracts/followers",
    "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
    "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
    "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
    "repos_url": "https://api.github.com/users/smartcontracts/repos",
    "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
    "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/4750/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/4750/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1398857135",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/4750#issuecomment-1398857135",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/4750",
    "id": 1398857135,
    "node_id": "IC_kwDODjvEJM5TYN2v",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-20T19:50:15Z",
    "updated_at": "2023-01-20T19:50:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some answers for you:\r\n\r\n> l1fee is l1GasPrice multiply l1GasUsed??\r\n\r\nYes, `l1Fee` is computed as `l1GasPrice` multiplied by `l1GasUsed`.\r\n\r\n> and what is l1FeeScalar stands for?\r\n\r\n`l1FeeScalar` is an additional multiplier that is added to the actual L1 gas used to account for dynamic costs on L1. Currently this value is set to 1, so it has no impact on the L1 gas used.\r\n\r\n> queueOrigin meant that where tx came from ?\r\n\r\n`queueOrigin` is either `sequencer` or `l1`. Transactions sent directly to the sequencer will have a value of `sequencer` while transactions that were created as L1 to L2 messages will have a value of `l1`.\r\n\r\n> what for l1TxOrigin?\r\n\r\n`l1TxOrigin` applies only for L1 to L2 messages and olds the address that sent the message to L2.\r\n\r\n> l1BlockNumber & l1Timstamp stand for sent tx confirmed on L1 side information?\r\n\r\n`l1BlockNumber` and `l1Timestamp` tell you the timestamp and block number on L1 when the transaction was processed.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1398857135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
