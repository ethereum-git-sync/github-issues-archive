{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1245",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1245/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1245/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1245/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/1245",
  "id": 940494670,
  "node_id": "MDU6SXNzdWU5NDA0OTQ2NzA=",
  "number": 1245,
  "title": "Smockit - support mocking receive() and low-level calls",
  "user": {
    "login": "czhc",
    "id": 4633021,
    "node_id": "MDQ6VXNlcjQ2MzMwMjE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4633021?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/czhc",
    "html_url": "https://github.com/czhc",
    "followers_url": "https://api.github.com/users/czhc/followers",
    "following_url": "https://api.github.com/users/czhc/following{/other_user}",
    "gists_url": "https://api.github.com/users/czhc/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/czhc/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/czhc/subscriptions",
    "organizations_url": "https://api.github.com/users/czhc/orgs",
    "repos_url": "https://api.github.com/users/czhc/repos",
    "events_url": "https://api.github.com/users/czhc/events{/privacy}",
    "received_events_url": "https://api.github.com/users/czhc/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-07-09T07:22:31Z",
  "updated_at": "2021-08-30T21:47:06Z",
  "closed_at": "2021-08-30T21:47:05Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Is your feature request related to a problem? Please describe.**\r\n`smockit` allows stubbing/mocking responses for unit testing. It currently supports mocking defined functions, state variables and `fallback` of a given contract, but doesn't seem to support Solidity 0.8.0 [`receive`](https://docs.soliditylang.org/en/v0.8.0/contracts.html#receive-ether-function). \r\n\r\nFor example: a `contract` with: \r\n\r\n```solidity\r\n//Bank.sol\r\ncontract Bank {\r\n    uint balance;\r\n    function withdraw(){\r\n         msg.sender.transfer(balance);\r\n    }\r\n    receive() external payable {\r\n         balance += msg.value;\r\n    } \r\n}\r\n```\r\n\r\nmocked as :\r\n```javascript\r\n//Bank.test.js\r\n    this.BankFactory = await ethers.getContractFactory('Bank');\r\n    this.bank = await this.BankFactory.deploy();\r\n    await this.bank.deployed();\r\n    const mockBank = await smockit(this.bank);\r\n```\r\nwill return an object `mockBank` with: \r\n\r\n```javascript\r\n//console.log(mockBank);\r\n\r\nContract {\r\n    ...,\r\n    smocked: {\r\n        fallback:  {...},\r\n        'withdraw()': {...},\r\n        balance: {...}\r\n\r\n    }\r\n}\r\n```\r\nAs a result, it is not possible to mock the `receive()` function of the bank. \r\n\r\n`mockBank.smocked.receive.will.return.with((true))` returns an error message `TypeError: Cannot read property 'will' of undefined`. \r\n\r\n**Describe the solution you'd like**\r\nSupport mocking the `receive()` function to return the standard response `(bool, bytes memory)`. \r\n\r\n**Describe alternatives you've considered**\r\nI've looked through the docs but didn't see a way to mock `receive`, `call` etc. \r\n\r\n**Additional context**\r\n",
  "closed_by": {
    "login": "smartcontracts",
    "id": 14298799,
    "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/smartcontracts",
    "html_url": "https://github.com/smartcontracts",
    "followers_url": "https://api.github.com/users/smartcontracts/followers",
    "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
    "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
    "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
    "repos_url": "https://api.github.com/users/smartcontracts/repos",
    "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
    "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1245/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1245/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/877155303",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/1245#issuecomment-877155303",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1245",
    "id": 877155303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NzE1NTMwMw==",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-09T12:36:19Z",
    "updated_at": "2021-07-09T12:36:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I looked into this a little more, unfortunately it's more annoying to implement this than I'd have hoped. If a contract has both a fallback function and a receive function, Solidity will only pick the fallback function when `msg.data.length > 0`. I wanted to make the behavior of smock generally follow this but unfortunately ethers doesn't expose the fallback function or receive function as part of the ABI (who knows why). And I can't really implement this more complex logic without knowing if there's a fallback/receive. \r\n\r\nSo next steps here:\r\n1. I'm going to make an issue over on the Ethers project so they hopefully expose fallback/receive in `contract.interface`. \r\n2. For now I'll just make `receive` an alias for `fallback`. So modifying `fallback` will also result in modifying `receive` and vice versa.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/877155303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/877660837",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/1245#issuecomment-877660837",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1245",
    "id": 877660837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NzY2MDgzNw==",
    "user": {
      "login": "czhc",
      "id": 4633021,
      "node_id": "MDQ6VXNlcjQ2MzMwMjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4633021?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/czhc",
      "html_url": "https://github.com/czhc",
      "followers_url": "https://api.github.com/users/czhc/followers",
      "following_url": "https://api.github.com/users/czhc/following{/other_user}",
      "gists_url": "https://api.github.com/users/czhc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/czhc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/czhc/subscriptions",
      "organizations_url": "https://api.github.com/users/czhc/orgs",
      "repos_url": "https://api.github.com/users/czhc/repos",
      "events_url": "https://api.github.com/users/czhc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/czhc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-10T16:01:38Z",
    "updated_at": "2021-07-10T16:01:38Z",
    "author_association": "NONE",
    "body": "@smartcontracts  I put together a simple POC to illustrate why I needed to stub a `receive` or `call`: https://github.com/czhc/smockit-poc\r\n\r\nThe code and tests are commented: https://github.com/czhc/smockit-poc/blob/main/test/Greeter.test.js#L58\r\n\r\nThe goal is to be able to test how `Greeter` handles the payment to `TipJar`: https://github.com/czhc/smockit-poc/blob/main/contracts/Greeter.sol#L28\r\n\r\nI'm not sure if the approach makes sense - do let me know what you think about it!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/877660837/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/908723680",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/1245#issuecomment-908723680",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/1245",
    "id": 908723680,
    "node_id": "IC_kwDODjvEJM42KgXg",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-30T21:47:05Z",
    "updated_at": "2021-08-30T21:47:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Smock has been moved to https://github.com/defi-wonderland/smock. You should be able to get this behavior in Smock v2 by using `myFake.receive.reverts()` or `myFake.fallback.reverts()`.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/908723680/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
