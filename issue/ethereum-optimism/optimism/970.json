{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/970",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/970/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/970/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/970/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/970",
  "id": 904063146,
  "node_id": "MDU6SXNzdWU5MDQwNjMxNDY=",
  "number": 970,
  "title": "Add withdrawal functionality to sequencer entrypoint",
  "user": {
    "login": "karlfloersch",
    "id": 706123,
    "node_id": "MDQ6VXNlcjcwNjEyMw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/706123?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karlfloersch",
    "html_url": "https://github.com/karlfloersch",
    "followers_url": "https://api.github.com/users/karlfloersch/followers",
    "following_url": "https://api.github.com/users/karlfloersch/following{/other_user}",
    "gists_url": "https://api.github.com/users/karlfloersch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karlfloersch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karlfloersch/subscriptions",
    "organizations_url": "https://api.github.com/users/karlfloersch/orgs",
    "repos_url": "https://api.github.com/users/karlfloersch/repos",
    "events_url": "https://api.github.com/users/karlfloersch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karlfloersch/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2907832555,
      "node_id": "MDU6TGFiZWwyOTA3ODMyNTU1",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-feature-request",
      "name": "C-feature-request",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: A feature request."
    },
    {
      "id": 2981952422,
      "node_id": "MDU6TGFiZWwyOTgxOTUyNDIy",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/M-contracts",
      "name": "M-contracts",
      "color": "FBCA04",
      "default": false,
      "description": "Module: contracts"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-05-27T18:28:02Z",
  "updated_at": "2021-06-11T15:11:45Z",
  "closed_at": "2021-06-11T15:11:44Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "<!--\r\nNeed help?\r\nRefer to our contributing guidelines for additional information about making a good issue:\r\nhttps://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nWe are currently unable to withdraw funds that are sent to the sequencer entrypoint. This is annoying because the ECDSAWallet contract will send all fees to `msg.sender` -- normally the `sequencer entrypoint` & the sequencer needs to be able to withdraw fees collected to pay for the batches the sequencer submits!\r\n\r\n**Describe the solution you'd like**\r\nSimply add a function `withdrawFees() owned returns()` to the `sequencer entrypoint`. \r\n\r\nThis function should:\r\n- withdraw the FULL BALANCE of the sequencer entrypoint to the `l1FeeWallet`\r\n- `l1FeeWallet` can be RESOLVED by the L2 Address Manager\r\n- Be OWNED by an L2 contract. This contract can be an ECDSAWallet & can be resolved by the address manager.\r\n  - Many options here, do what is easiest.\r\n\r\n**Describe alternatives you've considered**\r\nInstead of **withdrawing** the full balance, you can simply SEND the full balance to the OWNER. This may be slightly easier as we don't need to resolve some L1 fee wallet. However, it will require 2 transactions to perform with withdrawal -\r\n1. Send full balance to the owner\r\n2. Owner withdraws its full balance.\r\n\r\n\r\n----\r\n\r\n**Additional context**\r\nNote that there is another way to allow the sequencer to withdraw fees that requires a change to the ECDSAContract wallet. \r\n\r\n- Hard code a \"fee collector\" wallet in the ECDSAContractAccount.\r\n- Send the money to the hardcoded wallet.\r\n\r\nThat approach is not suggested based on the following tradeoffs:\r\n\r\n1. Hardcode the sequencer’s fee address\r\n  a. The most efficient, requires a bit more implementation complexity as now the sequencer needs to manage two upgradable contracts & we need to add a new predeploy. Also it does introduce an implicit dependency with the hardcoded address in the wallet. Meaning if we change the predeploy address we could accidentally break wallet fees\r\n2. Use `msg.sender` (status quo) and add a function to withdraw the funds in the sequencer entrypoint\r\n  a. Medium efficiency. Requires a CALL and an SLOAD ([see](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/optimistic-ethereum/OVM/execution/OVM_ExecutionManager.sol#L234-L243))\r\n  b. Has the benefit of making it possible to pay a fee to folks other than the sequencer. This might have been the original thing that made us prefer # 2 over # 1 \r\n\r\nTradeoffs:\r\n- Efficiency\r\n  - Winner: # 1 — Probably saves like 1k gas per wallet transaction. (I got 1k from ~700 gas for the CALL & then ~100 for the warm SLOAD read, and then 200 gas for who knows what)\r\n- Implementation complexity\r\n  - Winner: # 2 — This is the status quo, doesn’t introduce a new predeploy or change EOA accounts\r\n- Flexibility\r\n  - Winner: # 2 — \r\n    - No risk of the hardcoded address getting out of sync with the predeploy address\r\n    - Allows fees to be paid to anyone who relays the transaction, not just the sequencer. IMO this is less important as it’s not a feature folks will use any time soon.\r\n",
  "closed_by": {
    "login": "smartcontracts",
    "id": 14298799,
    "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/smartcontracts",
    "html_url": "https://github.com/smartcontracts",
    "followers_url": "https://api.github.com/users/smartcontracts/followers",
    "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
    "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
    "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
    "repos_url": "https://api.github.com/users/smartcontracts/repos",
    "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
    "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/970/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/970/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/859650567",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/970#issuecomment-859650567",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/970",
    "id": 859650567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1OTY1MDU2Nw==",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-11T15:11:44Z",
    "updated_at": "2021-06-11T15:11:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Completed in #1029 ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/859650567/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
