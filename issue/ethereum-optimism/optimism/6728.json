{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6728",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6728/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6728/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6728/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/6728",
  "id": 1846722674,
  "node_id": "I_kwDODjvEJM5uEsBy",
  "number": 6728,
  "title": "L2 Shapella (Shanghai + Capella) hardfork support",
  "user": {
    "login": "protolambda",
    "id": 19571989,
    "node_id": "MDQ6VXNlcjE5NTcxOTg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/protolambda",
    "html_url": "https://github.com/protolambda",
    "followers_url": "https://api.github.com/users/protolambda/followers",
    "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
    "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
    "organizations_url": "https://api.github.com/users/protolambda/orgs",
    "repos_url": "https://api.github.com/users/protolambda/repos",
    "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/protolambda/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 5828636827,
      "node_id": "LA_kwDODjvEJM8AAAABW2nwmw",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/M-community",
      "name": "M-community",
      "color": "C2E0C6",
      "default": false,
      "description": "Meta: community help wanted"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "danyalprout",
    "id": 672580,
    "node_id": "MDQ6VXNlcjY3MjU4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/672580?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/danyalprout",
    "html_url": "https://github.com/danyalprout",
    "followers_url": "https://api.github.com/users/danyalprout/followers",
    "following_url": "https://api.github.com/users/danyalprout/following{/other_user}",
    "gists_url": "https://api.github.com/users/danyalprout/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/danyalprout/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/danyalprout/subscriptions",
    "organizations_url": "https://api.github.com/users/danyalprout/orgs",
    "repos_url": "https://api.github.com/users/danyalprout/repos",
    "events_url": "https://api.github.com/users/danyalprout/events{/privacy}",
    "received_events_url": "https://api.github.com/users/danyalprout/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "danyalprout",
      "id": 672580,
      "node_id": "MDQ6VXNlcjY3MjU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/672580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danyalprout",
      "html_url": "https://github.com/danyalprout",
      "followers_url": "https://api.github.com/users/danyalprout/followers",
      "following_url": "https://api.github.com/users/danyalprout/following{/other_user}",
      "gists_url": "https://api.github.com/users/danyalprout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danyalprout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danyalprout/subscriptions",
      "organizations_url": "https://api.github.com/users/danyalprout/orgs",
      "repos_url": "https://api.github.com/users/danyalprout/repos",
      "events_url": "https://api.github.com/users/danyalprout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danyalprout/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "trianglesphere",
      "id": 11803341,
      "node_id": "MDQ6VXNlcjExODAzMzQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/11803341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trianglesphere",
      "html_url": "https://github.com/trianglesphere",
      "followers_url": "https://api.github.com/users/trianglesphere/followers",
      "following_url": "https://api.github.com/users/trianglesphere/following{/other_user}",
      "gists_url": "https://api.github.com/users/trianglesphere/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trianglesphere/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trianglesphere/subscriptions",
      "organizations_url": "https://api.github.com/users/trianglesphere/orgs",
      "repos_url": "https://api.github.com/users/trianglesphere/repos",
      "events_url": "https://api.github.com/users/trianglesphere/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trianglesphere/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-08-11T12:16:15Z",
  "updated_at": "2023-10-10T18:02:53Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "This issue tracks the necessary changes to support the Shapella L1 upgrade in the OP-Stack. Starting with specs, op-node and op-geth changes.\r\n\r\nThese changes should be stacked together as PRs before merging, since end-to-end testing largely depends on various op-geth & engine API shapella features all being activated.\r\n\r\n# Introduced L1 EIPs\r\n\r\n*Source: https://blog.ethereum.org/2023/03/28/shapella-mainnet-announcement*\r\n\r\n- [EIP-3651: Warm COINBASE](https://eips.ethereum.org/EIPS/eip-3651)\r\n    - Affects EVM execution\r\n- [EIP-3855: PUSH0 instruction](https://eips.ethereum.org/EIPS/eip-3855)\r\n    - Affects EVM execution\r\n- [EIP-3860: Limit and meter initcode](https://eips.ethereum.org/EIPS/eip-3860)\r\n    - Affects EVM execution\r\n    - Need to signal this to users, if they depend on pre-shanghai behavior (large initcode during `CREATE` / `CREATE2`)\r\n- [EIP-4895: Beacon chain push withdrawals as operations](https://eips.ethereum.org/EIPS/eip-4895)\r\n    - Affects block-format\r\n    - Affects Engine API\r\n    - Affects state-transition outside EVM\r\n- [EIP-6049: Deprecate SELFDESTRUCT](https://eips.ethereum.org/EIPS/eip-6049)\r\n    - Soft-change, need to signal this to users\r\n\r\n# Upgrading\r\n\r\nThe shanghai hardfork affects both op-geth and op-node: the fork affects the Engine API.\r\n\r\nWe need to add a `shanghaiTime` rollup-config attribute, and can use the existing geth shanghai upgrade functionality.\r\n\r\n# op-node changes\r\n\r\n## Rollup Config `shanghaiTime` attribute\r\n\r\nThe rollup-config needs to be made aware of the shanghai hardfork time to enable some of the below changes to apply based on the hardfork timestamp: the Engine API usage is dependent on the hardfork timestamp.\r\n\r\nThis needs to be documented in the network-upgrades spec: https://github.com/ethereum-optimism/optimism/blob/develop/specs/network-upgrades.md\r\n\r\n## SSZ ExecutionPayload encoding\r\n\r\nThe SSZ encoding is used in P2P gossip: we need to support the withdrawals list attribute here (even if empty, since empty is different than non-existent as in pre-shanghai blocks).\r\n\r\nThis change needs to be documented in the P2P spec: https://github.com/ethereum-optimism/optimism/blob/develop/specs/rollup-node-p2p.md\r\n\r\nAnd requires a gossip-topic upgrade (the topic identifier is already versioned).\r\n\r\n## L2 Eth-RPC client bindings\r\n\r\nWhen retrieving an execution-payload/block, we need to respect the withdrawals-list. We have missed this in the L1 side of these bindings before (pre-bedrock lauch, durign shanghai upgrade of Goerli).\r\n\r\n## Engine API\r\n\r\nThe Engine API changed with Shanghai to support the new withdrawals attribute, and we must migrate over:\r\n\r\nhttps://github.com/ethereum/execution-apis/blob/main/src/engine/shanghai.md\r\n\r\nThe methods are a hard-requirement for blocks that are past the shanghai timestamp. The methods are backwards compatible with pre-shanghai. We need the V2 methods in op-geth to support Optimism first before we can start using them as the op-node.\r\n\r\nThe optionality depends on the timestamp of the content:\r\n\r\n`engine_newPayloadV2`: optionality between `ExecutionPayloadV1` **and** `ExecutionPayloadV2`\r\n\r\n`engine_forkchoiceUpdatedV2`: optionality between `PayloadAttributesV2` and `PayloadAttributesV2`\r\n\r\n`engine_getPayloadV2`: optionality between `ExecutionPayloadV1` **and** `ExecutionPayloadV2`\r\n\r\nBased on the timestamp the verifier and sequencer codepaths *(already unified to behind the `derive.EngineControl` interface)*\r\n\r\nThese engine-API changes need to be documented in the execution-engine spec: https://github.com/ethereum-optimism/optimism/blob/develop/specs/exec-engine.md\r\n\r\n# op-geth changes\r\n\r\n## Hardfork time config update\r\n\r\nWe need the hardfork to be scheduled for Goerli and Mainnet similar to how Regolith was scheduled:\r\n\r\n- Provide a hardfork override CLI option\r\n- Mutate the chain-config with the shanghai time upon startup, if the chain ID matches\r\n\r\n## Engine API\r\n\r\nReview that all the V2 methods are covered by the Optimism diff.\r\n\r\n# Shanghai testing\r\n\r\n- Update op-geth testing in the geth Engine API tests in op-e2e, covering the V2 methods one by one\r\n- Implement an op-e2e test like the regolith test\r\n- Implement action-tests that run through the Shanghai HF like the Regolith tests\r\n- Enable shanghai by default in the CI-devnet\r\n- Schedule and execute Shanghai on the internal devnet\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6728/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 1,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6728/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1753428955",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/6728#issuecomment-1753428955",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6728",
    "id": 1753428955,
    "node_id": "IC_kwDODjvEJM5ogzPb",
    "user": {
      "login": "danyalprout",
      "id": 672580,
      "node_id": "MDQ6VXNlcjY3MjU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/672580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danyalprout",
      "html_url": "https://github.com/danyalprout",
      "followers_url": "https://api.github.com/users/danyalprout/followers",
      "following_url": "https://api.github.com/users/danyalprout/following{/other_user}",
      "gists_url": "https://api.github.com/users/danyalprout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danyalprout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danyalprout/subscriptions",
      "organizations_url": "https://api.github.com/users/danyalprout/orgs",
      "repos_url": "https://api.github.com/users/danyalprout/repos",
      "events_url": "https://api.github.com/users/danyalprout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danyalprout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-09T17:59:28Z",
    "updated_at": "2023-10-09T17:59:28Z",
    "author_association": "NONE",
    "body": "Hey :wave:\r\n\r\nI’ve got a POC of this, have a couple of things I would like to sanity check.\r\n\r\n> The rollup-config needs to be made aware of the shanghai hardfork time to enable some of the below changes to apply based on the hardfork timestamp\r\n\r\nDo we want to enable Shanghai separately from Canyon or tie them both to the Canyon timestamp? Currently I’ve tied Shanghai enablement to the Canyon timestamp in op-node, but happy to decouple if you think that makes more sense.\r\n\r\n> we need to support the withdrawals list attribute here (even if empty, since empty is different than non-existent as in pre-shanghai blocks\r\n\r\nAs withdrawals will always be nil pre-Shanghai and always empty post Shanghai. Do we want to make gossip changes here? Or can we just ignore withdrawals at the op-node p2p layer and infer whether it should be empty or nil based on the execution payload timestamp?\r\n\r\n> optionality between ExecutionPayloadV1 and ExecutionPayloadV2\r\n\r\nWould you rather we have multiple versions of the ExecutionPayload struct? Right now I’ve extended the existing one with optional withdrawals.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1753428955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1755899468",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/6728#issuecomment-1755899468",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6728",
    "id": 1755899468,
    "node_id": "IC_kwDODjvEJM5oqOZM",
    "user": {
      "login": "tynes",
      "id": 6626818,
      "node_id": "MDQ6VXNlcjY2MjY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6626818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tynes",
      "html_url": "https://github.com/tynes",
      "followers_url": "https://api.github.com/users/tynes/followers",
      "following_url": "https://api.github.com/users/tynes/following{/other_user}",
      "gists_url": "https://api.github.com/users/tynes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tynes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tynes/subscriptions",
      "organizations_url": "https://api.github.com/users/tynes/orgs",
      "repos_url": "https://api.github.com/users/tynes/repos",
      "events_url": "https://api.github.com/users/tynes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tynes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-10T17:14:59Z",
    "updated_at": "2023-10-10T17:14:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "re: the gossip changes with the withdrawals, it feels a bit cleaner to gossip them even though they will always be empty. Longer term I have been thinking about making ether deposits into L2 be represented as withdrawals, this could greatly reduce the cost of simple ether deposits but it would not work for any sort of cross domain calls, the cross domain calls would still operate the way that they do now. Note that there is currently no consensus on this change but I personally think it would be good to reduce costs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1755899468/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1755901272",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/6728#issuecomment-1755901272",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6728",
    "id": 1755901272,
    "node_id": "IC_kwDODjvEJM5oqO1Y",
    "user": {
      "login": "tynes",
      "id": 6626818,
      "node_id": "MDQ6VXNlcjY2MjY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6626818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tynes",
      "html_url": "https://github.com/tynes",
      "followers_url": "https://api.github.com/users/tynes/followers",
      "following_url": "https://api.github.com/users/tynes/following{/other_user}",
      "gists_url": "https://api.github.com/users/tynes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tynes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tynes/subscriptions",
      "organizations_url": "https://api.github.com/users/tynes/orgs",
      "repos_url": "https://api.github.com/users/tynes/repos",
      "events_url": "https://api.github.com/users/tynes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tynes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-10T17:16:19Z",
    "updated_at": "2023-10-10T17:16:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Do we want to enable Shanghai separately from Canyon or tie them both to the Canyon timestamp? Currently I’ve tied Shanghai enablement to the Canyon timestamp in op-node, but happy to decouple if you think that makes more sense.\r\n\r\nPerhaps having devnet targets would help with this decision, ie canyon-devnet-0 has these features, then devnet-1 has an additional set of features. cc @trianglesphere ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1755901272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1755961245",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/6728#issuecomment-1755961245",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/6728",
    "id": 1755961245,
    "node_id": "IC_kwDODjvEJM5oqded",
    "user": {
      "login": "trianglesphere",
      "id": 11803341,
      "node_id": "MDQ6VXNlcjExODAzMzQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/11803341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trianglesphere",
      "html_url": "https://github.com/trianglesphere",
      "followers_url": "https://api.github.com/users/trianglesphere/followers",
      "following_url": "https://api.github.com/users/trianglesphere/following{/other_user}",
      "gists_url": "https://api.github.com/users/trianglesphere/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trianglesphere/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trianglesphere/subscriptions",
      "organizations_url": "https://api.github.com/users/trianglesphere/orgs",
      "repos_url": "https://api.github.com/users/trianglesphere/repos",
      "events_url": "https://api.github.com/users/trianglesphere/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trianglesphere/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-10T18:02:42Z",
    "updated_at": "2023-10-10T18:02:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Do we want to enable Shanghai separately from Canyon or tie them both to the Canyon timestamp? Currently I’ve tied Shanghai enablement to the Canyon timestamp in op-node, but happy to decouple if you think that makes more sense.\r\n\r\n\r\nTieing them together in op-node is fine.\r\n\r\n> > optionality between ExecutionPayloadV1 and ExecutionPayloadV2\r\n> \r\n> Would you rather we have multiple versions of the ExecutionPayload struct? Right now I’ve extended the existing one with optional withdrawals.\r\n\r\nIt looks like geth is using a single version of the execution payload and performing checks on the fields. https://github.com/ethereum/go-ethereum/blob/2c007cfed7db238ba038b8748ce2aabd108ac874/eth/catalyst/api.go#L450-L471",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1755961245/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
