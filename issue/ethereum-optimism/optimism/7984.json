{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/7984",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/7984/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/7984/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/7984/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/7984",
  "id": 1971824332,
  "node_id": "I_kwDODjvEJM51h6bM",
  "number": 7984,
  "title": "Removing necessity of an archive node used for op-proposer",
  "user": {
    "login": "kaliubuntu0206",
    "id": 139627505,
    "node_id": "U_kgDOCFKL8Q",
    "avatar_url": "https://avatars.githubusercontent.com/u/139627505?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kaliubuntu0206",
    "html_url": "https://github.com/kaliubuntu0206",
    "followers_url": "https://api.github.com/users/kaliubuntu0206/followers",
    "following_url": "https://api.github.com/users/kaliubuntu0206/following{/other_user}",
    "gists_url": "https://api.github.com/users/kaliubuntu0206/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kaliubuntu0206/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kaliubuntu0206/subscriptions",
    "organizations_url": "https://api.github.com/users/kaliubuntu0206/orgs",
    "repos_url": "https://api.github.com/users/kaliubuntu0206/repos",
    "events_url": "https://api.github.com/users/kaliubuntu0206/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kaliubuntu0206/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2907832604,
      "node_id": "MDU6TGFiZWwyOTA3ODMyNjA0",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-question",
      "name": "C-question",
      "color": "C5DEF5",
      "default": false,
      "description": "User questions that are neither feature requests nor bug reports"
    },
    {
      "id": 5852378744,
      "node_id": "LA_kwDODjvEJM8AAAABXNQ2eA",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/M-docs",
      "name": "M-docs",
      "color": "C2E0C6",
      "default": false,
      "description": "Meta: documentation related"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-11-01T07:04:48Z",
  "updated_at": "2023-11-01T21:37:36Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I might be blind but I could not find any necessity or proof that op-proposer will require historic states of the contract.\r\n\r\nAs written on the docs https://stack.optimism.io/docs/build/getting-started/#op-geth, op-proposer would require an archive node but asking to the Geth devs if we supply `reexec` option to the `debug_traceTransaction` method it would be able to fetch and trace calls for past 10K blocks by default, without running an archive node which Geth isn't optimized for.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/7984/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/7984/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1789537960",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/7984#issuecomment-1789537960",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/7984",
    "id": 1789537960,
    "node_id": "IC_kwDODjvEJM5qqi6o",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-01T19:33:30Z",
    "updated_at": "2023-11-01T19:33:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @protolambda can you confirm whether this works? We need the storage slot for the message passer but idk if it's possible to get this with the `reexec` option.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1789537960/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1789726206",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/7984#issuecomment-1789726206",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/7984",
    "id": 1789726206,
    "node_id": "IC_kwDODjvEJM5qrQ3-",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-01T21:37:36Z",
    "updated_at": "2023-11-01T21:37:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure anyone has tried the reexec option to be honest.\r\n\r\nThe risk with not using an actual archive node is that the proposer is required to submit proposals at a specific interval - the L2 output oracle contract will not allow it to skip proposals (https://github.com/ethereum-optimism/optimism/blob/f4a234c29b90f2a86e61fc897db343bda651202c/packages/contracts-bedrock/src/L1/L2OutputOracle.sol#L187-L190).  If the proposer is always up and functioning that's not an issue, but if it's down for a period of time then it will need old world state to catch up.  10k block history would allow less than 6 hours of downtime before the proposer couldn't recover.\r\n\r\nA large L1 reorg can also cause a very large L2 reorg to be required which an archive node can handle but we've seen cases on goerli where a full node hit the limit of what geth would reorg. Again, not sure if the reexec option would help there or not.\r\n\r\nSo I'd be happy to be corrected, but I suspect the official docs should continue say to use an archive node as it avoids all those risks. People can obviously make their own risk trade offs for their own deployments though.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/1789726206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
