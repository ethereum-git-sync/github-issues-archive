{
  "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/894",
  "repository_url": "https://api.github.com/repos/ethereum-optimism/optimism",
  "labels_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/894/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/894/comments",
  "events_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/894/events",
  "html_url": "https://github.com/ethereum-optimism/optimism/issues/894",
  "id": 893711224,
  "node_id": "MDU6SXNzdWU4OTM3MTEyMjQ=",
  "number": 894,
  "title": "discussion: Should we cut out upgrade cancellations?",
  "user": {
    "login": "smartcontracts",
    "id": 14298799,
    "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/smartcontracts",
    "html_url": "https://github.com/smartcontracts",
    "followers_url": "https://api.github.com/users/smartcontracts/followers",
    "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
    "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
    "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
    "repos_url": "https://api.github.com/users/smartcontracts/repos",
    "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
    "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2907927870,
      "node_id": "MDU6TGFiZWwyOTA3OTI3ODcw",
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/labels/C-meta",
      "name": "C-meta",
      "color": "C5DEF5",
      "default": false,
      "description": "Category: Meta discussion about this repository, git hygiene, issues, etc"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-05-17T21:02:14Z",
  "updated_at": "2021-05-20T19:45:22Z",
  "closed_at": "2021-05-20T19:45:22Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "<!--\r\nNeed help?\r\nRefer to our contributing guidelines for additional information about making a good issue:\r\nhttps://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\nThe `L2ChugSplashDeployer` currently comes with two functions [`cancelTransactionBundle`](https://github.com/ethereum-optimism/optimism/blob/422e6089c82f1ecd7d4a0a899f0647fa9ad22831/packages/contracts/contracts/chugsplash/L2ChugSplashDeployer.sol#L177-L199) and [`overrideTransactionBundle`](https://github.com/ethereum-optimism/optimism/blob/422e6089c82f1ecd7d4a0a899f0647fa9ad22831/packages/contracts/contracts/chugsplash/L2ChugSplashDeployer.sol#L201-L215) that allow the `owner` of the contract to halt upgrades that are already in progress. We intended these features to be a backstop against any sort of bug that would cause us to publish a faulty transaction bundle and unintentionally brick the system. \r\n\r\nSome technical restrictions make these functions difficult to support in practice. Specifically, we've found that these functions don't play nice with https://github.com/ethereum-optimism/optimism/pull/892 (feat[contracts]: add ability to pause EM during upgrades) because the method by which we \"pause\" the system forces all transactions to be routed through the `L2ChugSplashDeployer`. This has the (intended) effect of preventing any L1 => L2 messages from being relayed to their target contracts. However, `cancelTransactionBundle` and `overrideTransactionBundle` were designed to *only* by triggered via an L1 => L2 message. In order to support these functions, we'd need to add a non-trivial amount of complex logic to the `L2ChugSplashDeployer` (which is something we're desperately trying to avoid doing *during* an upgrade).\r\n\r\nThis issue is intended to act as a place for discussion about whether or not we can safely move forward by removing the two mentioned functions. This would have the following set of effects:\r\n1. Significantly reduced complexity in `L2ChugSplashDeployer`.\r\n2. No way to cancel upgrades that have already been started.\r\n\r\nAlthough point (2) is potentially scary, I personally feel that we should absolutely *never* be triggering an upgrade that needs to be cancelled. Upgrades should be double, triple, and quadruple checked. Every mainnet upgrade should be independently verified by each multisig participant (if not by the community at large). Furthermore, it's unlikely that these functions will be useful for cases in which the transaction bundle is valid (you can actually execute actions inside the bundle) because our automation will likely execute the bundle before we even notice something is wrong. The only case in which I can see these functions being potentially useful is if we were ever to sign off on a random hash that can't actually be used as part of a Merkle proof. This seems like such a dramatic failure that we should aim to avoid it at all costs.",
  "closed_by": {
    "login": "smartcontracts",
    "id": 14298799,
    "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
    "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/smartcontracts",
    "html_url": "https://github.com/smartcontracts",
    "followers_url": "https://api.github.com/users/smartcontracts/followers",
    "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
    "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
    "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
    "repos_url": "https://api.github.com/users/smartcontracts/repos",
    "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
    "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/894/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/894/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/842639284",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/894#issuecomment-842639284",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/894",
    "id": 842639284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MjYzOTI4NA==",
    "user": {
      "login": "ben-chain",
      "id": 10091895,
      "node_id": "MDQ6VXNlcjEwMDkxODk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10091895?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ben-chain",
      "html_url": "https://github.com/ben-chain",
      "followers_url": "https://api.github.com/users/ben-chain/followers",
      "following_url": "https://api.github.com/users/ben-chain/following{/other_user}",
      "gists_url": "https://api.github.com/users/ben-chain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ben-chain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ben-chain/subscriptions",
      "organizations_url": "https://api.github.com/users/ben-chain/orgs",
      "repos_url": "https://api.github.com/users/ben-chain/repos",
      "events_url": "https://api.github.com/users/ben-chain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ben-chain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-17T21:06:20Z",
    "updated_at": "2021-05-17T21:06:20Z",
    "author_association": "COLLABORATOR",
    "body": "I agree that it is very reasonable to enforce/expect that an upgrade is such a big deal that it should be meticulously tested and cannot be cancelled once underway.\r\n\r\nHowever, if we end up feeling otherwise, and the complexity that is coming with this is due to having multiple contracts (both `L2ChugSplashDeployer` and its owner), then we should consider just re-combining them into one contract.  If we still want the owner to optionally be an L2 contract, I left a [comment here](https://github.com/ethereum-optimism/optimism/pull/854#pullrequestreview-660480908) which outlines a construction that would make me feel comfortable with the approach.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/842639284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/842653255",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/894#issuecomment-842653255",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/894",
    "id": 842653255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MjY1MzI1NQ==",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-17T21:28:18Z",
    "updated_at": "2021-05-17T21:28:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Part of the complexity definitely does come from the two separate contracts, but we'd still have to tack on additional complexity (specifically parsing L1 => L2 messages in a manner identical to the L2CrossDomainMessenger). It ends up being harder to test and will definitely add a non-trivial amount of semi-complex code. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/842653255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/842662929",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/894#issuecomment-842662929",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/894",
    "id": 842662929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MjY2MjkyOQ==",
    "user": {
      "login": "tynes",
      "id": 6626818,
      "node_id": "MDQ6VXNlcjY2MjY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6626818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tynes",
      "html_url": "https://github.com/tynes",
      "followers_url": "https://api.github.com/users/tynes/followers",
      "following_url": "https://api.github.com/users/tynes/following{/other_user}",
      "gists_url": "https://api.github.com/users/tynes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tynes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tynes/subscriptions",
      "organizations_url": "https://api.github.com/users/tynes/orgs",
      "repos_url": "https://api.github.com/users/tynes/repos",
      "events_url": "https://api.github.com/users/tynes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tynes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-17T21:45:20Z",
    "updated_at": "2021-05-17T21:45:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not opposed to keeping the simplicity and not having the cancellation ability. We should be able to upgrade away from a bad upgrade right? Unless it is possible to upgrade the chugsplash deployer in a way that breaks it.\r\n\r\nLets think worst case scenario and the system is bricked by a bad upgrade. The obvious solution would be to have a regenesis like event and have the node software automatically switch to the new address manager at a certain height (without a new address manager, we would rely on an archive node for getting the historical values in the address manager). This would be able to stitch together multiple chains, altho the \"block offsets\" would be off quite a bit. The block offset config option could be solved by placing that config into a contract, I believe there is already thoughts around how to put config options into a contract.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/842662929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/842664808",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/894#issuecomment-842664808",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/894",
    "id": 842664808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MjY2NDgwOA==",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-17T21:48:57Z",
    "updated_at": "2021-05-17T21:48:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "> We should be able to upgrade away from a bad upgrade right?\r\n\r\nWe can upgrade away from a bad upgrade as long as the previous upgrade completes. It is, however, possible to publish an upgrade with a completely random hash that can't be used for a Merkle proof (i.e., the hash is not the root of a real merkle tree). However, I think this is unlikely to happen in practice assuming we verify upgrades multiple times.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/842664808/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/843510785",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/894#issuecomment-843510785",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/894",
    "id": 843510785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MzUxMDc4NQ==",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-18T19:53:45Z",
    "updated_at": "2021-05-18T19:53:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok unless anyone here feels very strongly about the need to have the ability to cancel upgrades once in progress, I'm going to make the executive decision that we'll remove these functions. I feel we should be absolutely confident in the correctness of our upgrades. Removing these functions will simplify the upgrade code path to a non-trivial extent and will simultaneously *force* us to be careful with upgrades.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/843510785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/843511504",
    "html_url": "https://github.com/ethereum-optimism/optimism/issues/894#issuecomment-843511504",
    "issue_url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/894",
    "id": 843511504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MzUxMTUwNA==",
    "user": {
      "login": "smartcontracts",
      "id": 14298799,
      "node_id": "MDQ6VXNlcjE0Mjk4Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14298799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartcontracts",
      "html_url": "https://github.com/smartcontracts",
      "followers_url": "https://api.github.com/users/smartcontracts/followers",
      "following_url": "https://api.github.com/users/smartcontracts/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartcontracts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartcontracts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartcontracts/subscriptions",
      "organizations_url": "https://api.github.com/users/smartcontracts/orgs",
      "repos_url": "https://api.github.com/users/smartcontracts/repos",
      "events_url": "https://api.github.com/users/smartcontracts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartcontracts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-18T19:54:54Z",
    "updated_at": "2021-05-18T19:54:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm going to open up a PR that removes these functions from the codebase. Any interested parties have until that PR is merged and approved (~1-2 days) to list their complaints. Ty!",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-optimism/optimism/issues/comments/843511504/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
