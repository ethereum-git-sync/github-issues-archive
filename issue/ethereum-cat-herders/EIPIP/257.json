{
  "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
  "repository_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP",
  "labels_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257/comments",
  "events_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257/events",
  "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257",
  "id": 1845481645,
  "node_id": "I_kwDODfkRC85t_9Ct",
  "number": 257,
  "title": "EIPIP Meeting 88",
  "user": {
    "login": "poojaranjan",
    "id": 29681685,
    "node_id": "MDQ6VXNlcjI5NjgxNjg1",
    "avatar_url": "https://avatars.githubusercontent.com/u/29681685?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/poojaranjan",
    "html_url": "https://github.com/poojaranjan",
    "followers_url": "https://api.github.com/users/poojaranjan/followers",
    "following_url": "https://api.github.com/users/poojaranjan/following{/other_user}",
    "gists_url": "https://api.github.com/users/poojaranjan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/poojaranjan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/poojaranjan/subscriptions",
    "organizations_url": "https://api.github.com/users/poojaranjan/orgs",
    "repos_url": "https://api.github.com/users/poojaranjan/repos",
    "events_url": "https://api.github.com/users/poojaranjan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/poojaranjan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 23,
  "created_at": "2023-08-10T16:03:08Z",
  "updated_at": "2023-08-25T18:50:50Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "# Date and Time\r\n\r\nAug 23, 2023 at 14:00 UTC\r\n# Location\r\n\r\nZoom: TBA in the Discord #eip-editing channel\r\n\r\nYouTube Live Stream/Recording: https://www.youtube.com/playlist?list=PL4cwHXAawZxpLrRIkDlBjDUUrGgF91pQw\r\n\r\n# Agenda\r\n### 1. Discuss Open Issues/PRs, and other topics\r\n- [x] [Placing a warning on ERC-20](https://github.com/ethereum-cat-herders/EIPIP/issues/255#issuecomment-1671818828)\r\n- [x] https://github.com/ethereum/EIPs/pull/7478\r\n- [x] https://github.com/ethereum/EIPs/pull/7388\r\n- [x] https://github.com/ethereum/EIPs/pull/7346\r\n- [x] https://github.com/ethereum/EIPs/pull/5533\r\n- [x] add NIST as a permitted origin for external links [ref](https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1688478926)\r\n- [x]  https://github.com/ethereum/EIPs/pull/7468 Ref [Discord](https://discord.com/channels/916516304972824576/916713912970412103/1143633277056471140)\r\n\r\n#### Changes to `Final` proposals\r\n\r\n- [x] https://github.com/ethereum/EIPs/pull/7506\r\n- [x] https://github.com/ethereum/EIPs/pull/7505\r\n- [x] https://github.com/ethereum/EIPs/pull/6860\r\n\r\n### 2. Discussion continued or updates from past meetings\r\n- [x] EIP-ERC GitHub repositories\r\n- [ ] https://github.com/ethereum/EIPs/pull/7230\r\n\r\n### 3. EIPs Insight - Monthly EIPs status reporting.\r\n- [Hackmd](https://hackmd.io/@poojaranjan/EIPsInsightAugust2023)\r\n- [EIPsInsight.com](https://eipsv2.vercel.app/insight/2023/8)\r\n\r\n### 4. [EIP Editing Office Hour](https://hackmd.io/@poojaranjan/EIPEditingOfficeHour)\r\n- Agenda [Meeting 23](https://github.com/ethereum-cat-herders/EIPIP/issues/258)\r\n- Recording [Meeting 22](https://youtu.be/9QCcCOTt3Mw)\r\n\r\n### 5. Review action items from earlier meetings\r\n- [Summary](https://github.com/ethereum-cat-herders/EIPIP/issues/255#issuecomment-1671727078)",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1673570892",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1673570892",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1673570892,
    "node_id": "IC_kwDODfkRC85jwKpM",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-10T16:49:01Z",
    "updated_at": "2023-08-10T16:49:01Z",
    "author_association": "NONE",
    "body": "Can we add \"Placing a warning on ERC-20\" (from [here](https://github.com/ethereum-cat-herders/EIPIP/issues/255#issuecomment-1671818828)) on this agenda?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1673570892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1673633982",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1673633982",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1673633982,
    "node_id": "IC_kwDODfkRC85jwaC-",
    "user": {
      "login": "poojaranjan",
      "id": 29681685,
      "node_id": "MDQ6VXNlcjI5NjgxNjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/29681685?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/poojaranjan",
      "html_url": "https://github.com/poojaranjan",
      "followers_url": "https://api.github.com/users/poojaranjan/followers",
      "following_url": "https://api.github.com/users/poojaranjan/following{/other_user}",
      "gists_url": "https://api.github.com/users/poojaranjan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/poojaranjan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/poojaranjan/subscriptions",
      "organizations_url": "https://api.github.com/users/poojaranjan/orgs",
      "repos_url": "https://api.github.com/users/poojaranjan/repos",
      "events_url": "https://api.github.com/users/poojaranjan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/poojaranjan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-10T17:36:18Z",
    "updated_at": "2023-08-10T17:36:18Z",
    "author_association": "MEMBER",
    "body": "@SamWilsn  added !",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1673633982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1687038319",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1687038319",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1687038319,
    "node_id": "IC_kwDODfkRC85kjilv",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-21T21:02:09Z",
    "updated_at": "2023-08-21T21:02:09Z",
    "author_association": "NONE",
    "body": "@Pandapip1 would like to remove the `requires:` header in favour of an automatically generated bibliography:\r\n\r\nhttps://github.com/ethereum/EIPs/pull/7478",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1687038319/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1688478926",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1688478926",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1688478926,
    "node_id": "IC_kwDODfkRC85kpCTO",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-22T15:54:11Z",
    "updated_at": "2023-08-22T15:54:11Z",
    "author_association": "NONE",
    "body": "@Therecanbeonlyone1969 would like to add NIST as a permitted origin for external links.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1688478926/reactions",
      "total_count": 4,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1690850073",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1690850073",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1690850073,
    "node_id": "IC_kwDODfkRC85kyFMZ",
    "user": {
      "login": "poojaranjan",
      "id": 29681685,
      "node_id": "MDQ6VXNlcjI5NjgxNjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/29681685?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/poojaranjan",
      "html_url": "https://github.com/poojaranjan",
      "followers_url": "https://api.github.com/users/poojaranjan/followers",
      "following_url": "https://api.github.com/users/poojaranjan/following{/other_user}",
      "gists_url": "https://api.github.com/users/poojaranjan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/poojaranjan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/poojaranjan/subscriptions",
      "organizations_url": "https://api.github.com/users/poojaranjan/orgs",
      "repos_url": "https://api.github.com/users/poojaranjan/repos",
      "events_url": "https://api.github.com/users/poojaranjan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/poojaranjan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-24T01:25:17Z",
    "updated_at": "2023-08-24T01:30:21Z",
    "author_association": "MEMBER",
    "body": "## Summary \r\n\r\n### 1. Discuss Open Issues/PRs, and other topics\r\n #### https://github.com/ethereum-cat-herders/EIPIP/issues/255#issuecomment-1671818828\r\n\r\n- Most of the editors on call weren't in favor of adding a warning to a `Final` or an existing EIP.\r\n- After some discussion, the general agreement was based on @gcolvin's suggestion that the user can write an informative EIP to share information about the usage of EIP-20 or use other media for information sharing at his/her disposal.\r\n- No action is needed from the editors' end.\r\n\r\n\r\n####  https://github.com/ethereum/EIPs/pull/7478\r\n\r\n- @xinbenlv: Not enough justification to remove this.\r\n- @gcolvin: Agrees to Victor.\r\n- @SamWilsn will add a comment to the PR stating editors' sentiments from the call.\r\n\r\n####  https://github.com/ethereum/EIPs/pull/7388\r\n\r\n- General agreement, PR approved.\r\n\r\n\r\n####  https://github.com/ethereum/EIPs/pull/7346\r\n\r\n- General agreement, PR approved.\r\n \r\n####  https://github.com/ethereum/EIPs/pull/5533\r\n\r\n- Not moving ahead with this PR.\r\n\r\n\r\n####  add NIST as a permitted origin for external links \r\n\r\n- No objection by the editors on call.  @SamWilsn will create an EIP for this.\r\n\r\n#### https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1688478926\r\n https://github.com/ethereum/EIPs/pull/7468 Ref [Discord](https://discord.com/channels/916516304972824576/916713912970412103/1143633277056471140)\r\n\r\n- @xinbenlv proposed to have the PR merged as `Informational` and add a warning/ announcement to move it to `Meta` EIP. \r\n- @SamWilsn: Will update the PR, change the status to `Informational` and merge the PR. In the next call, there will be another PR  to change the type to `Meta` to enforce the changes as mentioned in the EIP.\r\n\r\n### Changes to Final proposals\r\n #### https://github.com/ethereum/EIPs/pull/7506\r\n\r\n- No objection\r\n #### https://github.com/ethereum/EIPs/pull/7505\r\n \r\n- No objection\r\n\r\n#### https://github.com/ethereum/EIPs/pull/6860\r\n- Editors are still not convinced.  \r\n\r\n### 2. Discussion continued or updates from past meetings\r\n #### EIP-ERC GitHub repositories\r\n- @shemnon will move  [EIP-7329](https://eips.ethereum.org/EIPS/eip-7329) to `Last Call`.\r\n- Details of process and status preferences of different \"working groups\" will be discussed in future meetings. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1690850073/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693372317",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693372317",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693372317,
    "node_id": "IC_kwDODfkRC85k7s-d",
    "user": {
      "login": "Dexaran",
      "id": 26142412,
      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dexaran",
      "html_url": "https://github.com/Dexaran",
      "followers_url": "https://api.github.com/users/Dexaran/followers",
      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
      "repos_url": "https://api.github.com/users/Dexaran/repos",
      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T13:34:58Z",
    "updated_at": "2023-08-25T13:38:51Z",
    "author_association": "NONE",
    "body": "@poojaranjan @SamWilsn @gcolvin \r\n\r\n>https://github.com/ethereum-cat-herders/EIPIP/issues/255#issuecomment-1671818828\r\n\r\n>Most of the editors on call weren't in favor of adding a warning to a Final or an existing EIP.\r\n\r\n>After some discussion, the general agreement was based on @gcolvin's suggestion that the user can write an informative EIP to share information about the usage of EIP-20 or use other media for information sharing at his/her disposal.\r\n\r\n>No action is needed from the editors' end.\r\n\r\nSo EIP editors decided there is no need to make any steps towards \"disclosing a vulnerability\" in a finalized EIP.  I would like to notify EIP editors that this is a **direct violation of security principles**.\r\n\r\nHere is a description of the [vulnerability disclosure practices](https://blog.avast.com/the-importance-of-vulnerability-disclosure-avast) by Avast, which is a security company. \r\n\r\n>Vulnerability disclosure is an important process in keeping our products secure. Security researchers find the flaws, report them to the vendors, who then fix them. That's the theory. When it works, it works well; but it doesn't always work. \r\n\r\n>There are two basic approaches to vulnerability disclosure from the researchers, which are characterized by the terms 'full disclosure' and 'responsible disclosure'.\r\n> Source: Avast Software\r\n\r\nThere is another good publication from security researchers that describes a proper process of [security vulnerabilities disclosure](https://www.wordfence.com/blog/2021/07/youve-found-a-vulnerability-now-what-a-guide-to-responsible-disclosure/). \r\n\r\n\r\n![Wordsearch_Security](https://github.com/ethereum-cat-herders/EIPIP/assets/26142412/3ac49764-31c1-4633-a5b7-2aa72ee3e228)\r\n\r\n**Vulnerability disclosure is very important to make sure that users are safe.** If there is a vulnerability in a EIP, and we do have a security problem in ERC-20 that resulted in a [loss of $201M](https://gist.github.com/Dexaran/40213a04ce46b394279ac7daa581ce87) already, then it is important to notify all the readers of the EIP that this must be taken into account. Otherwise they will not know about it and they will keep using the EIP with a vulnerability and this will cause even more financial losses for the users.\r\n\r\n\r\nRefusing to disclose vulnerabilities is [heavily criticized](https://en.wikipedia.org/wiki/Security_through_obscurity#Criticism) by security researchers. \r\n\r\nPerhaps this decision was made by EIP editors without any consultation with security experts which could result in such a violation of well-known security principles.\r\n\r\n- Do somoene of the EIP editors have a security background?\r\n\r\n- Were security experts involved in the decision making process?\r\n\r\n- Isn't it reasonable to make security experts decide on how to solve security problems?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693372317/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693565799",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693565799",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693565799,
    "node_id": "IC_kwDODfkRC85k8cNn",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T15:45:44Z",
    "updated_at": "2023-08-25T15:45:44Z",
    "author_association": "NONE",
    "body": "There's a bit more nuance to our decision than Pooja included in the summary (which makes sense; it's a summary.)\r\n\r\nSo first, and most generally, we aren't opposed to vulnerability disclosure. Disclose away, propose better standards, and get implementers to migrate. All good things as far as we're concerned.\r\n\r\nThe problem is that we don't have a process to deal with vulnerability disclosures, and aren't really equipped to deal with them.\r\n\r\nIt isn't as simple as just putting a warning on the markdown file. We have a pretty hard rule that Final proposals are immutable. It comes up often, and trust me when I say this, it's better to not reopen that discussion. It boils down to: once contracts are deployed or hardforks forked, it is impossible to change them, so instead of editing the specification they were written against, you write a new and better specification going forward.\r\n\r\nEven if we were willing to edit final EIPs, we run into a problem of authority: who determines if a particular disclosure is actually a problem? For example, in this particular case, is sending tokens to a contract a security vulnerability or a user error? Yes, I am aware that blaming the users when the system itself could be designed to prevent it is a common problem in software. I don't want to debate the specifics on this agenda thread, just highlight that these kinds of decisions have to be made by _someone_. The EIP Editors do not want to be in the position to make decisions like these. We aren't technical experts on every subject, and usually only have a passing involvement in any proposal. I'm going to have to ask you to trust me again, but you _really_ don't want us making these kinds of decisions.\r\n\r\nMaybe the answer is that we make a wiki that runs alongside the formal EIP process? I'm not sure. We are willing to work towards a process for publishing vulnerabilities, but we aren't there today.\r\n\r\nTo answer your specific questions:\r\n\r\n> - Do somoene of the EIP editors have a security background?\r\n\r\nAll of us are software developers, including two core developers. I can't say any more specifically than that, since I don't know.\r\n\r\n>  - Were security experts involved in the decision making process?\r\n\r\nNot that I'm aware of, no.\r\n\r\n> - Isn't it reasonable to make security experts decide on how to solve security problems?\r\n\r\nAbsolutely! We don't want to stand in the way of anyone reporting security issues to implementers.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693565799/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693585974",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693585974",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693585974,
    "node_id": "IC_kwDODfkRC85k8hI2",
    "user": {
      "login": "Therecanbeonlyone1969",
      "id": 20665612,
      "node_id": "MDQ6VXNlcjIwNjY1NjEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/20665612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Therecanbeonlyone1969",
      "html_url": "https://github.com/Therecanbeonlyone1969",
      "followers_url": "https://api.github.com/users/Therecanbeonlyone1969/followers",
      "following_url": "https://api.github.com/users/Therecanbeonlyone1969/following{/other_user}",
      "gists_url": "https://api.github.com/users/Therecanbeonlyone1969/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Therecanbeonlyone1969/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Therecanbeonlyone1969/subscriptions",
      "organizations_url": "https://api.github.com/users/Therecanbeonlyone1969/orgs",
      "repos_url": "https://api.github.com/users/Therecanbeonlyone1969/repos",
      "events_url": "https://api.github.com/users/Therecanbeonlyone1969/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Therecanbeonlyone1969/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T16:02:38Z",
    "updated_at": "2023-08-25T16:02:38Z",
    "author_association": "NONE",
    "body": "> There's a bit more nuance to our decision than Pooja included in the summary (which makes sense; it's a summary.)\r\n> \r\n> So first, and most generally, we aren't opposed to vulnerability disclosure. Disclose away, propose better standards, and get implementers to migrate. All good things as far as we're concerned.\r\n> \r\n> The problem is that we don't have a process to deal with vulnerability disclosures, and aren't really equipped to deal with them.\r\n> \r\n> It isn't as simple as just putting a warning on the markdown file. We have a pretty hard rule that Final proposals are immutable. It comes up often, and trust me when I say this, it's better to not reopen that discussion. It boils down to: once contracts are deployed or hardforks forked, it is impossible to change them, so instead of editing the specification they were written against, you write a new and better specification going forward.\r\n> \r\n> Even if we were willing to edit final EIPs, we run into a problem of authority: who determines if a particular disclosure is actually a problem? For example, in this particular case, is sending tokens to a contract a security vulnerability or a user error? Yes, I am aware that blaming the users when the system itself could be designed to prevent it is a common problem in software. I don't want to debate the specifics on this agenda thread, just highlight that these kinds of decisions have to be made by _someone_. The EIP Editors do not want to be in the position to make decisions like these. We aren't technical experts on every subject, and usually only have a passing involvement in any proposal. I'm going to have to ask you to trust me again, but you _really_ don't want us making these kinds of decisions.\r\n> \r\n> Maybe the answer is that we make a wiki that runs alongside the formal EIP process? I'm not sure. We are willing to work towards a process for publishing vulnerabilities, but we aren't there today.\r\n> \r\n> To answer your specific questions:\r\n> \r\n> > * Do somoene of the EIP editors have a security background?\r\n> \r\n> All of us are software developers, including two core developers. I can't say any more specifically than that, since I don't know.\r\n> \r\n> > * Were security experts involved in the decision making process?\r\n> \r\n> Not that I'm aware of, no.\r\n> \r\n> > * Isn't it reasonable to make security experts decide on how to solve security problems?\r\n> \r\n> Absolutely! We don't want to stand in the way of anyone reporting security issues to implementers.\r\n\r\n@SamWilsn With standards, there are typically versions see e.g. W3C. Hence, one could create a new version of an EIP. I do not see a process for that referenced in the repo, unless I missed something. It probably would be a good thing to have. Also, the security consideration section would be the place to add any considerations as to potential vulnerabilities, unintended behavior and their mitigation, no? As it is non-normative, it could be updated with a PR, no?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693585974/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693678056",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693678056",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693678056,
    "node_id": "IC_kwDODfkRC85k83no",
    "user": {
      "login": "shemnon",
      "id": 38109,
      "node_id": "MDQ6VXNlcjM4MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shemnon",
      "html_url": "https://github.com/shemnon",
      "followers_url": "https://api.github.com/users/shemnon/followers",
      "following_url": "https://api.github.com/users/shemnon/following{/other_user}",
      "gists_url": "https://api.github.com/users/shemnon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shemnon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shemnon/subscriptions",
      "organizations_url": "https://api.github.com/users/shemnon/orgs",
      "repos_url": "https://api.github.com/users/shemnon/repos",
      "events_url": "https://api.github.com/users/shemnon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shemnon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T17:04:49Z",
    "updated_at": "2023-08-25T17:07:30Z",
    "author_association": "NONE",
    "body": "Apart from EIP editing processes my concern is that there is not any consensus on whether or not this specific claim is a security vulnerability that warrants this kind of action.  I see only one or two advocates and no other voices sustaining the vulnerability, and a lot of doubt from those who do look into the issue.  Consider also that the most vocal advocate has a competing standard I am concerned that the EIP warning pointing to the standard could be considered advertising (of another standard, not a third party product).\r\n\r\nWithin the scenarios that Dexaran sets I will concede that EIP-223 is the better standard, but I do not consider those scenarios to rise to the level of a security advisory.  I will also advance the idea that some scenarios exist outside of the 223 issues that may come into vogue, such as using ephemeral polymorphic contracts to manage token ownership. What is a security issue in one perspective is a feature from another.\r\n\r\nThe EIP process does not have the burden of proof to disprove that the claims are worthy of a security advisory.  I am of the opinion that instead Dexaran has the burden of proof, and that would involve finding one or more reputable and neutral security researchers whose expressed finding is that a security advisory needs to be added.  That is the level of rigor I feel is needed to alter a final standard, even if all that is warranted is to add new security considerations to the security section.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693678056/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693698307",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693698307",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693698307,
    "node_id": "IC_kwDODfkRC85k88kD",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T17:23:10Z",
    "updated_at": "2023-08-25T17:23:10Z",
    "author_association": "NONE",
    "body": "> With standards, there are typically versions see e.g. W3C. Hence, one could create a new version of an EIP. I do not see a process for that referenced in the repo, unless I missed something. It probably would be a good thing to have.\r\n\r\nThe equivalent for EIPs would be to make a new EIP, with a new number. You are correct that there is no in-process way to indicate the canonical successor for a Final EIP, and this is intentional. Conceptually, once an EIP goes to Final it is \"owned\" by the larger community. Who should have the authority to designate a successor?\r\n\r\n> Also, the security consideration section would be the place to add any considerations as to potential vulnerabilities, unintended behavior and their mitigation, no? As it is non-normative, it could be updated with a PR, no?\r\n\r\nI brought this up as an option on the call (personally I think it's a reasonable modification), and the consensus was that we will not modify Final EIPs to add security considerations.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693698307/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693709264",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693709264",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693709264,
    "node_id": "IC_kwDODfkRC85k8_PQ",
    "user": {
      "login": "Dexaran",
      "id": 26142412,
      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dexaran",
      "html_url": "https://github.com/Dexaran",
      "followers_url": "https://api.github.com/users/Dexaran/followers",
      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
      "repos_url": "https://api.github.com/users/Dexaran/repos",
      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T17:32:21Z",
    "updated_at": "2023-08-25T17:32:21Z",
    "author_association": "NONE",
    "body": "@shemnon \r\n\r\n>Apart from EIP editing processes my concern is that there is not any consensus on whether or not this specific claim is a security vulnerability\r\n\r\n### 1. I'm a hacker and I am saying it is a vulnerability\r\n\r\nI am a hacker. I have constructed and successfully executed [one of the largest consensus-level attacks](https://www.eosgo.io/blog/Eos-network-congestion-by-ddos-analysis/) on EOS mainnet and froze it for almost a month in 2019 with a clearest public record. I know how vulnerability looks like. I can even identify and exploit vulnerabilities that others struggle to see.\r\n\r\nI'm saying - this is a security problem and we can call it a vulnerability. This vulnerability can be classified as a \"failure of an interface that allows a user to make a security decision\". Full description here https://github.com/ethereum/ethereum-org-website/issues/10854#issuecomment-1683873221\r\n\r\n### 2. OpenZeppelin \"confirms\" it is a vulnerability\r\n\r\nI had a nice discussion with OpenZeppelin pointing out that ERC-20 design fits in their \"Critical Vulnerability Criteria\" according to their bug bounty https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4474\r\n\r\nDuring the discussion there were totally no arguments against the fact that it fits in the critical vulnerability criteria. They just told me \"it is well known\" and \"your submission is incorrect\" however this quite confirms that it is not possible to deny it is a \"critical vulnerability\" according to their bug bounty.\r\n\r\n### 3. There are well-known secure software development practices and ERC-20 design violates 3 of them\r\n\r\nFor example this https://kirkpatrickprice.com/blog/secure-coding-best-practices/\r\n\r\nAnd this https://docs.oracle.com/en/operating-systems/oracle-linux/6/security/ol_desprinsc_sec.html\r\n\r\n\r\n1. **Error handling is a must.** In ERC-20 there is no transaction handling for `transfer` function which means error handling is impossible.\r\n2. **Failsafe defaults / software must be secure by design.** ERC-20 is not secure by design and the \"default\" of `transfer` and `transferFrom` function is to allow action (transfer of tokens in this case) to be performed without checking for its correctness.\r\n3. **Allowing the user to make decisions related to the internal logic of the program must be avoided**. Token transfers to EOAs and to contracts work differently. Secure token standard must determine the transferring method automatically. ERC-20, ERC-1363 and other token standards prompt a user to make a decision on what transferring method to use and if the wrong method was chosen - it results in the loss of tokens for the user.\r\n\r\n\r\n### 4. It resulted in a loss of $200M\r\n\r\nhttps://gist.github.com/Dexaran/40213a04ce46b394279ac7daa581ce87\r\n\r\n### Conclusion\r\n\r\nSo, you have a hacker who has constructed one of the largest consensus-level attacks saying *\"this is a vulnerability\"*,  it perfectly fits in \"Critical Security Vulnerability\" criteria according to OpenZeppelin bug bounty, it violates well-known standard security practices, it caused a loss of $200M \r\n\r\nHow do you think is it a vulnerability or at least a security problem?\r\n\r\nWhat consensus are we expected to reach - consensus among solidity devs whose contracts get hacked 2 times out of 3 or consensus among ethereum redditors who don't know how to code? Does it make sense?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693709264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693714540",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693714540",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693714540,
    "node_id": "IC_kwDODfkRC85k9Ahs",
    "user": {
      "login": "Dexaran",
      "id": 26142412,
      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dexaran",
      "html_url": "https://github.com/Dexaran",
      "followers_url": "https://api.github.com/users/Dexaran/followers",
      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
      "repos_url": "https://api.github.com/users/Dexaran/repos",
      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T17:36:38Z",
    "updated_at": "2023-08-25T17:38:19Z",
    "author_association": "NONE",
    "body": ">The EIP process does not have the burden of proof to disprove that the claims are worthy of a security advisory. I am of the opinion that instead Dexaran has the burden of proof, and that would involve finding one or more reputable and neutral security researchers whose expressed finding is that a security advisory needs to be added.\r\n\r\nWell, this makes sense but I'm struggling with conflicts of interests for years. For example I can't ask for CertiK's  opinion. After they have audited 500 ERC-20 token contracts and assigned a \"secure\" label on them CertiK will never say \"ERC-20 has security problems. For the past 6 years we were assigning 'secure' labels on insecure contracts.\"\r\n\r\n\r\nIf we take into account that ERC-20 is the most widely adopted component of the ecosystem - there is almost zero chance to find an \"independent\" security auditor who will not suffer any reputation loss after saying \"ERC-20 has security problems\".",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693714540/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693716932",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693716932",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693716932,
    "node_id": "IC_kwDODfkRC85k9BHE",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T17:38:27Z",
    "updated_at": "2023-08-25T17:38:27Z",
    "author_association": "NONE",
    "body": "> Consider also that the most vocal advocate has a competing standard I am concerned that the EIP warning pointing to the standard could be considered advertising (of another standard, not a third party product).\r\n\r\nCreating another standard and advocating for it is the officially recommended way (as much as anything is official in Ethereum) to deprecate an EIP. Your concern here, however, is why we don't have `status: Superseded` or `superseded-by: 1234` fields that can be modified by an author.\r\n\r\n> Within the scenarios that Dexaran sets I will concede that EIP-223 is the better standard, but I do not consider those scenarios to rise to the level of a security advisory. I will also advance the idea that some scenarios exist outside of the 223 issues that may come into vogue, such as using ephemeral polymorphic contracts to manage token ownership. What is a security issue in one perspective is a feature from another.\r\n\r\nSure, ERC-223 might be better than ERC-20. Is it better than ERC-1155? Better than ERC-777? Is ERC-223 a worthwhile improvement over ERC-20 considering counterfactual contracts exist? Is the better solution to:\r\n\r\n - Pick an ERC-165 id that signals ERC-20 token support; and\r\n - Recommend that wallets:\r\n   - Warn when transferring tokens to a contract not supporting that interface id; and\r\n   - Warn when transferring tokens to an account that might not be an EOA (i.e. no transactions and no code.)\r\n\r\nAll these questions are subjective. EIP Editors don't like answering subjective questions.\r\n\r\n> The EIP process does not have the burden of proof to disprove that the claims are worthy of a security advisory. I am of the opinion that instead Dexaran has the burden of proof, and that would involve finding one or more **reputable and neutral security researchers** whose expressed finding is that a security advisory needs to be added. That is the level of rigor I feel is needed to alter a final standard, even if all that is warranted is to add new security considerations to the security section.\r\n\r\n(emphasis mine)\r\n\r\nYou've just moved where the subjectiveness comes in. Now EIP Editors have to determine who is a reputable and neutral security researcher.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693716932/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693728548",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693728548",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693728548,
    "node_id": "IC_kwDODfkRC85k9D8k",
    "user": {
      "login": "Dexaran",
      "id": 26142412,
      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dexaran",
      "html_url": "https://github.com/Dexaran",
      "followers_url": "https://api.github.com/users/Dexaran/followers",
      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
      "repos_url": "https://api.github.com/users/Dexaran/repos",
      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T17:48:05Z",
    "updated_at": "2023-08-25T17:48:05Z",
    "author_association": "NONE",
    "body": "@SamWilsn \r\n\r\n>Is the better solution to:\r\n>Pick an ERC-165 id that signals ERC-20 token support; and\r\n>Recommend that wallets:\r\n> - Warn when transferring tokens to a contract not supporting that interface id; and\r\n> - Warn when transferring tokens to an account that might not be an EOA (i.e. no transactions and no code.)\r\n\r\nFrom security point of view it is not a solution. Again, there are [well-known security practices](https://kirkpatrickprice.com/blog/secure-coding-best-practices/) that state \"software must be secure by design\" and implement \"failsafe defaults\".\r\n\r\nThis actually means that any standard that allows a user to make such a mistake (no matter if it *can be in theory may be at some point possibly solved by UIs at a higher level* which in practice never happens because UI devs introduce new problems rather than solve existing ones) then it is insecure.\r\n\r\nThis is not my \"subjective opinion\", this is not something revolutionary, this is not even something new. If someone will dare googling \"how to develop software securely\" - he will find most of the answers rather quickly and understand that ERC-20 violates very basic things.\r\n\r\nYou don't need 200 IQ to understand you need to fasten your seat belt when you drive. It's basic safety rule.\r\n\r\n>All these questions are subjective. EIP Editors don't like answering subjective questions.\r\n\r\nIf you will follow my links you will find that it's not something subjective or questionable. These are very basic things. If you open any security guideline - you will find them easily.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693728548/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693731382",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693731382",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693731382,
    "node_id": "IC_kwDODfkRC85k9Eo2",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T17:50:45Z",
    "updated_at": "2023-08-25T17:50:45Z",
    "author_association": "NONE",
    "body": "I guess the best suggestion I can give you, @Dexaran, is: come up with a process for how EIP vulnerabilities should be disclosed and published, then either run it yourself, or ask the EIP Editors to execute it. I fully admit that isn't a satisfying takeaway from this discussion though...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693731382/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693740271",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693740271",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693740271,
    "node_id": "IC_kwDODfkRC85k9Gzv",
    "user": {
      "login": "Dexaran",
      "id": 26142412,
      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dexaran",
      "html_url": "https://github.com/Dexaran",
      "followers_url": "https://api.github.com/users/Dexaran/followers",
      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
      "repos_url": "https://api.github.com/users/Dexaran/repos",
      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T17:58:51Z",
    "updated_at": "2023-08-25T17:58:51Z",
    "author_association": "NONE",
    "body": "@SamWilsn \r\n\r\n>The problem is that we don't have a process to deal with vulnerability disclosures, and aren't really equipped to deal with them.\r\n\r\nI want to start creating one now.\r\nWhat is the best place to start? Create a [EIP improvement issue](https://github.com/ethereum/EIPs/issues/new?assignees=&labels=enhancement&projects=&template=propose-process-change.yml)?\r\n\r\n>It isn't as simple as just putting a warning on the markdown file. We have a pretty hard rule that Final proposals are immutable.\r\n\r\nYea, but we can just put a label on the https://eips.ethereum.org/EIPS/eip-20 without modifying the EIP text at all.\r\n\r\nLook, here are EIP labels:\r\n![EIP_labels](https://github.com/ethereum-cat-herders/EIPIP/assets/26142412/ad2a7964-3adc-491a-8dde-86b0ffdc9c45)\r\n\r\nFor example you are now placing a big yellow label on draft EIPs saying that \"draft EIPs must not be used in production\". Can something similar be implemented? \r\n\r\n>It boils down to: once contracts are deployed or hardforks forked, it is impossible to change them, so instead of editing the specification they were written against, you write a new and better specification going forward.\r\n\r\nUnfortunately it doesn't solve problems with existing contracts.\r\n\r\nFor example if we put a label on ERC-20 saying \"it is insecure\" people will likely complain to Tether asking them to restandardize USDT or at least do something with it. This can force them to implement a fix. As the result people will not be losing their tokens with new contracts if USDT will be upgraded.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693740271/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693744809",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693744809",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693744809,
    "node_id": "IC_kwDODfkRC85k9H6p",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T18:03:18Z",
    "updated_at": "2023-08-25T18:03:18Z",
    "author_association": "NONE",
    "body": "> This actually means that any standard that allows a user to make such a mistake (no matter if it _can be in theory may be at some point possibly solved by UIs at a higher level_ which in practice never happens because UI devs introduce new problems rather than solve existing ones) then it is insecure.\r\n\r\nWith that logic, ERC-223 is fundamentally insecure because you can send tokens to accounts without known private keys or to addresses that will be counterfactually deployed (i.e. `CREATE2`.) Should ERC-223 get the same warning as ERC-20?\r\n\r\nI shouldn't have gone into the weeds in my earlier post; sorry about that :sweat_smile:\r\n\r\n> This is not my \"subjective opinion\", this is not something revolutionary, this is not even something new. If someone will dare googling \"how to develop software securely\" - he will find most of the answers rather quickly and understand that ERC-20 violates very basic things.\r\n\r\nI 100% agree that \"ERC-20 tokens being sent to address that cannot release them is a problem\" is an objective fact. I did suggest adding something to this effect to ERC-20's Security Considerations section on the EIPIP call, but was overruled.\r\n\r\n> You don't need 200 IQ to understand you need to fasten your seat belt when you drive. It's basic safety rule.\r\n\r\nIt's impossible to write this without sounding snide, so I ask for your forgiveness, but: you don't need 200 IQ to understand you don't mail cash to a random street address. It's basic financial literacy rule.\r\n\r\n> > All these questions are subjective. EIP Editors don't like answering subjective questions.\r\n> \r\n> If you will follow my links you will find that it's not something subjective or questionable. These are very basic things. If you open any security guideline - you will find them easily.\r\n\r\nIf we put a warning on every EIP where user error could cause a loss of funds, nearly all ERCs would have it. The subjectiveness is where to draw the line. The amount of money lost is _not_ a good criteria.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693744809/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693760071",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693760071",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693760071,
    "node_id": "IC_kwDODfkRC85k9LpH",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T18:16:34Z",
    "updated_at": "2023-08-25T18:16:34Z",
    "author_association": "NONE",
    "body": "> I want to start creating one now. What is the best place to start? Create a [EIP improvement issue](https://github.com/ethereum/EIPs/issues/new?assignees=&labels=enhancement&projects=&template=propose-process-change.yml)?\r\n\r\nFor something like this, that's going to get a lot of discussion, I'd probably recommend a thread on https://ethereum-magicians.org/\r\n\r\nIt's _extremely unlikely_ that we'll adopt a process that requires modifying a Final EIP. The most likely option, in my personal opinion, would be a second domain alongside `eips.ethereum.org` that we link to, like how `discussions-to` links already work today. That said, I haven't spoken to the other editors about this, so I can't say anything with certainty.\r\n\r\n> > It isn't as simple as just putting a warning on the markdown file. We have a pretty hard rule that Final proposals are immutable.\r\n> \r\n> Yea, but we can just put a label on the https://eips.ethereum.org/EIPS/eip-20 without modifying the EIP text at all.\r\n\r\nThose labels are just generated from the [preamble fields](https://github.com/ethereum/EIPs/blob/46f8d5bc9593f096cd92f66692e115218ec1c633/EIPS/eip-223.md?plain=1#L7).\r\n\r\n> > It boils down to: once contracts are deployed or hardforks forked, it is impossible to change them, so instead of editing the specification they were written against, you write a new and better specification going forward.\r\n> \r\n> Unfortunately it doesn't solve problems with existing contracts.\r\n\r\nAgreed.\r\n\r\n> For example if we put a label on ERC-20 saying \"it is insecure\" people will likely complain to Tether asking them to restandardize USDT or at least do something with it. This can force them to implement a fix. As the result people will not be losing their tokens with new contracts if USDT will be upgraded.\r\n\r\nThe Venn diagram of the stakeholders you've mentioned:\r\n\r\n![image](https://github.com/ethereum-cat-herders/EIPIP/assets/57262657/a918c2c8-0325-47d9-a4fa-bfb13c528841)\r\n\r\nSilliness aside, I sincerely doubt that adding a label to ERC-20 will make the slightest difference in adoption. Talking to implementers will.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693760071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693760552",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693760552",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693760552,
    "node_id": "IC_kwDODfkRC85k9Lwo",
    "user": {
      "login": "Therecanbeonlyone1969",
      "id": 20665612,
      "node_id": "MDQ6VXNlcjIwNjY1NjEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/20665612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Therecanbeonlyone1969",
      "html_url": "https://github.com/Therecanbeonlyone1969",
      "followers_url": "https://api.github.com/users/Therecanbeonlyone1969/followers",
      "following_url": "https://api.github.com/users/Therecanbeonlyone1969/following{/other_user}",
      "gists_url": "https://api.github.com/users/Therecanbeonlyone1969/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Therecanbeonlyone1969/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Therecanbeonlyone1969/subscriptions",
      "organizations_url": "https://api.github.com/users/Therecanbeonlyone1969/orgs",
      "repos_url": "https://api.github.com/users/Therecanbeonlyone1969/repos",
      "events_url": "https://api.github.com/users/Therecanbeonlyone1969/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Therecanbeonlyone1969/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T18:17:02Z",
    "updated_at": "2023-08-25T18:17:02Z",
    "author_association": "NONE",
    "body": "@Dexaran A standard is not code. At least, it should not be. The code appears in reference implementations of the standard. Reference implementations can be safe or not. And that is the place where security best practices should come into play, not the standard itself.\r\n\r\nI agree with you that a standard should point out security, privacy, and internationalization considerations, as applicable, and should be very thorough, IMHO. \r\n\r\n@SamWilsn If finals are 100% immutable, then adding a required field in the EIP header such as `supersedes` would allow a) the original authors to publish a new version of the same standard or b) other authors to publish an improved version of a given standard.\r\n\r\nIt would then also require a new section(s) for `Normative Changes to [EIP]` and/ or 'Non-Normative Changes to [EIP]'.\r\n\r\nThis might be a way to accomplish what @Dexaran tries to accomplish, and keep the Final is 100% final rule in place.\r\n\r\nThoughts? ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693760552/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693770019",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693770019",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693770019,
    "node_id": "IC_kwDODfkRC85k9OEj",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T18:26:38Z",
    "updated_at": "2023-08-25T18:26:38Z",
    "author_association": "NONE",
    "body": "@Therecanbeonlyone1969\r\n\r\n> If finals are 100% immutable, then adding a required field in the EIP header such as `supersedes` would allow a) the original authors to publish a new version of the same standard or b) other authors to publish an improved version of a given standard.\r\n\r\nI've definitely considered that. `supersedes: <earlier eip number>` doesn't have the same authority problem as `superseded-by: <later eip number>`. Aside from some minor rendering concerns, I don't see a `supersedes` header as problematic.\r\n\r\nAs you may have noticed, making any changes to the EIP process is... difficult. We're in the process of writing down our governance process ([here](https://eips.ethereum.org/EIPS/eip-5069), with discussions over [here](https://ethereum-magicians.org/t/eip-5069-eip-editor-handbook/9137)). My eventual goal is to provide more flexibility with these kinds of things, and come to decisions more quickly. Maybe `supersedes` will appear eventually :upside_down_face: ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693770019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693770685",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693770685",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693770685,
    "node_id": "IC_kwDODfkRC85k9OO9",
    "user": {
      "login": "Dexaran",
      "id": 26142412,
      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26142412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dexaran",
      "html_url": "https://github.com/Dexaran",
      "followers_url": "https://api.github.com/users/Dexaran/followers",
      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
      "repos_url": "https://api.github.com/users/Dexaran/repos",
      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T18:27:17Z",
    "updated_at": "2023-08-25T18:42:06Z",
    "author_association": "NONE",
    "body": "@SamWilsn \r\n\r\n>With that logic, ERC-223 is fundamentally insecure because you can send tokens to accounts without known private keys or to addresses that will be counterfactually deployed (i.e. CREATE2.) Should ERC-223 get the same warning as ERC-20?\r\n\r\nI had exactly the same discussion with Nick Johnson 6 years ago and he used the same argument. Here it is: https://www.reddit.com/r/ethereum/comments/6uckdx/comment/dlxw6vu/?utm_source=reddit&utm_medium=web2x&context=3\r\n\r\nHe intentionally thrown 1.23 ETH to ENS contract and said that \"you see, it is also possible\". The difference is that in 2017 there were $15,000 lost ERC-20 tokens, today it's $200M at least. And the amount of ETH in the ENS contract barely changed.\r\n\r\nAgain, there are well-known secure software design principles that state:\r\n\r\n- Error handling is a must.\r\n- Failsafe defaults\r\n- Do not allow users to make decisions related to the internal logic of the program\r\n\r\nPlain ether satisfies these criteria, ERC-223 satisfies these criteria, EOS C++ tokens satisfy these criteria, ERC-721 NFTs satisfy these criteria.\r\n\r\nOnly ERC-20 does not. And it caused money losses.\r\n\r\n>you don't need 200 IQ to understand you don't mail cash to a random street address. It's basic financial literacy rule.\r\n\r\n\"Sending to wrong address\" and \"misunderstanding internal logic of the smart-contract that can result in unhandled error\" are two different problems in my opinion.\r\n\r\nThe process of exchanging Ether for USDT at Binance looks like this:\r\n\r\n- Binance gives user a deposit address\r\n- User sends ETH directly to the given address\r\n- ETH appears at the balance\r\n- User makes a trade\r\n\r\nThe process of exchanging any ERC-20 token or any other asset at Binance looks exactly the same.\r\n\r\nThe process of exchanging tokens at Uniswap however looks like:\r\n\r\n- A user must issue approval\r\n- A user must call a contract that will automatically pull the tokens\r\n- Direct deposits are prohibited, even though it is technically possible\r\n\r\nAnd now we are wandering why there are $200M deposited to contracts directly.\r\n\r\n>Talking to implementers will.\r\n\r\nTalking to implementers in 2017: https://www.reddit.com/r/storj/comments/6ajjo3/comment/dhf95qz/?utm_source=reddit&utm_medium=web2x&context=3\r\n\r\nMe: \"Your users will lose money if you will use ERC-20 standard\"\r\n\r\nImplementers: \"We know but we prefer to err on the side of well tested code. Let our users lose the money.\"\r\n\r\nTalking to implementers in 2023: https://www.reddit.com/r/ethereum/comments/15lo5x9/comment/jvg4p1c/?utm_source=reddit&utm_medium=web2x&context=3\r\n\r\nMe: \"Your users will lose money if you will use ERC-20 standard\"\r\n\r\nImplementers: \"We are audited. Our auditors told us we are fine.\"\r\n\r\nAuditors: \"Loss of funds is standardized. If we will call it a problem then we will have no clients because we have to call insecure everything that implementers want to create.\" Big hello to OpenZeppelin as pioneers of this approach https://github.com/OpenZeppelin/openzeppelin-contracts/issues/4451",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693770685/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693770687",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693770687",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693770687,
    "node_id": "IC_kwDODfkRC85k9OO_",
    "user": {
      "login": "poojaranjan",
      "id": 29681685,
      "node_id": "MDQ6VXNlcjI5NjgxNjg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/29681685?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/poojaranjan",
      "html_url": "https://github.com/poojaranjan",
      "followers_url": "https://api.github.com/users/poojaranjan/followers",
      "following_url": "https://api.github.com/users/poojaranjan/following{/other_user}",
      "gists_url": "https://api.github.com/users/poojaranjan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/poojaranjan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/poojaranjan/subscriptions",
      "organizations_url": "https://api.github.com/users/poojaranjan/orgs",
      "repos_url": "https://api.github.com/users/poojaranjan/repos",
      "events_url": "https://api.github.com/users/poojaranjan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/poojaranjan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T18:27:17Z",
    "updated_at": "2023-08-25T18:29:37Z",
    "author_association": "MEMBER",
    "body": "@Dexaran To be honest, we value your effort in \"disclosing a vulnerability\" and sharing related sources. But, I agree with Sam that we don't have a process in place for that, yet. \r\n\r\nThe best way forward is to propose an alternate EIP, take it to the `Final` status, and educate contract developers about the issues with the existing standard and how the proposed standard is helping with that. Until we have a better standard, people will continue using what is available. \r\n \r\nEIP Editors are here to help with the documentation of the standard. If it helps, please follow  [EIP-5069](https://eips.ethereum.org/EIPS/eip-5069) where the \"[Mission](https://eips.ethereum.org/EIPS/eip-5069#mission)\" states what EIP Editors do and don't. \r\n\r\nTo the best of my knowledge, EIP Editors will help authors with whatever guidance is needed to move a proposal to `Final`. I'll be happy to invite you to [PEEPanEIP](https://www.youtube.com/playlist?list=PL4cwHXAawZxqu0PKKyMzG_3BJV_xZTi1F) to share more about the EIP-223  with the community.  We welcome your suggestion to create awareness.  \r\n\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693770687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693795176",
    "html_url": "https://github.com/ethereum-cat-herders/EIPIP/issues/257#issuecomment-1693795176",
    "issue_url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/257",
    "id": 1693795176,
    "node_id": "IC_kwDODfkRC85k9UNo",
    "user": {
      "login": "SamWilsn",
      "id": 57262657,
      "node_id": "MDQ6VXNlcjU3MjYyNjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/57262657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamWilsn",
      "html_url": "https://github.com/SamWilsn",
      "followers_url": "https://api.github.com/users/SamWilsn/followers",
      "following_url": "https://api.github.com/users/SamWilsn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamWilsn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamWilsn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamWilsn/subscriptions",
      "organizations_url": "https://api.github.com/users/SamWilsn/orgs",
      "repos_url": "https://api.github.com/users/SamWilsn/repos",
      "events_url": "https://api.github.com/users/SamWilsn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamWilsn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T18:50:50Z",
    "updated_at": "2023-08-25T18:50:50Z",
    "author_association": "NONE",
    "body": "@Dexaran\r\n\r\n> I had exactly the same [...] Only ERC-20 does not. And it caused money losses.\r\n\r\nSupposing that:\r\n - ERC-20 allows users to send funds to addresses that don't support ERC-20 tokens.\r\n - ERC-223 allows users to send funds to addresses that don't support ERC-223 tokens.\r\n - \"any standard that allows a user to make such a mistake [...] is insecure\".\r\n\r\nThen, exactly one of the following is true:\r\n - Neither ERC-20 nor ERC-223 are labelled insecure.\r\n - Both ERC-20 and ERC-223 are labelled insecure.\r\n - EIP Editors have to subjectively determine if the enhancements of ERC-223 are sufficient to be \"secure\".\r\n\r\n---\r\n\r\nThere are a few threads being discussed here, and I want to clarify my position on them:\r\n\r\n1. _Is ERC-20 unsafe?_ **Yes.** You don't have to keep trying to convince me.\r\n1. _Can we put \"insecure\" labels on insecure EIPs?_ **No.** Either EIP Editors will have to make subjective decisions; or all EIPs will have the label.\r\n1. _Can we put \"insecure\" labels somewhere else?_ **Yes.** Make a git repository, wiki, or whatever else you'd like and put the information there. Editors _may_ consider adding links to this information.\r\n1. _Can we modify ERC-20 to include this specific security consideration?_ **No.** While I might have agreed to do it, the other editors have spoken against it.\r\n1. _Can we have an official way to indicate an EIP replaces another EIP?_ **Maybe.** Bring it up after the next EIPIP meeting.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum-cat-herders/EIPIP/issues/comments/1693795176/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
