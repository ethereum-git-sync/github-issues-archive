{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/2725",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/2725/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/2725/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/2725/events",
  "html_url": "https://github.com/hyperledger/besu/issues/2725",
  "id": 989965551,
  "node_id": "MDU6SXNzdWU5ODk5NjU1NTE=",
  "number": 2725,
  "title": "Find the list of accounts in a range",
  "user": {
    "login": "matkt",
    "id": 26581503,
    "node_id": "MDQ6VXNlcjI2NTgxNTAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/26581503?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/matkt",
    "html_url": "https://github.com/matkt",
    "followers_url": "https://api.github.com/users/matkt/followers",
    "following_url": "https://api.github.com/users/matkt/following{/other_user}",
    "gists_url": "https://api.github.com/users/matkt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/matkt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/matkt/subscriptions",
    "organizations_url": "https://api.github.com/users/matkt/orgs",
    "repos_url": "https://api.github.com/users/matkt/repos",
    "events_url": "https://api.github.com/users/matkt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/matkt/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "matkt",
    "id": 26581503,
    "node_id": "MDQ6VXNlcjI2NTgxNTAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/26581503?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/matkt",
    "html_url": "https://github.com/matkt",
    "followers_url": "https://api.github.com/users/matkt/followers",
    "following_url": "https://api.github.com/users/matkt/following{/other_user}",
    "gists_url": "https://api.github.com/users/matkt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/matkt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/matkt/subscriptions",
    "organizations_url": "https://api.github.com/users/matkt/orgs",
    "repos_url": "https://api.github.com/users/matkt/repos",
    "events_url": "https://api.github.com/users/matkt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/matkt/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "matkt",
      "id": 26581503,
      "node_id": "MDQ6VXNlcjI2NTgxNTAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/26581503?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matkt",
      "html_url": "https://github.com/matkt",
      "followers_url": "https://api.github.com/users/matkt/followers",
      "following_url": "https://api.github.com/users/matkt/following{/other_user}",
      "gists_url": "https://api.github.com/users/matkt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matkt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matkt/subscriptions",
      "organizations_url": "https://api.github.com/users/matkt/orgs",
      "repos_url": "https://api.github.com/users/matkt/repos",
      "events_url": "https://api.github.com/users/matkt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matkt/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2021-09-07T13:07:13Z",
  "updated_at": "2021-12-13T09:20:52Z",
  "closed_at": "2021-12-13T09:20:52Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "We need to be able to retrieve the list of all accounts in a range in a specific block\r\n\r\nWith bonsai we store accounts by hash which allows to recover the list of accounts easily by browsing the list of keys  (natively with rocksdb) but we still need to think about performance\r\n\r\n```java \r\n\r\n public Stream<SnapAccount> streamAccounts(final Bytes32 startKeyHash, final Bytes32 endKeyHash) {\r\n    final BonsaiWorldStateKeyValueStorage worldStateStorage =\r\n            ((BonsaiPersistedWorldState) archive.getMutable()).getWorldStateStorage();\r\n    return worldStateStorage\r\n            .streamAccounts(startKeyHash, endKeyHash).stream()\r\n            .map(account -> new SnapAccount(Hash.wrap(account), get(Hash.wrap(account))));\r\n  }\r\n\r\n\r\npublic List<Bytes32> streamAccounts(final Bytes32 startKeyHash, final Bytes32 endKeyHash) {\r\n    System.out.println(startKeyHash);\r\n    List<Bytes32> hashes = new ArrayList<>();\r\n    final Iterator<Bytes> iterator = accountStorage\r\n            .streamKeys()\r\n            .sorted()\r\n            .map(Bytes::wrap).iterator();\r\n    while (iterator.hasNext()){\r\n      Bytes32 hash = Bytes32.wrap(iterator.next());\r\n      if(hash.compareTo(startKeyHash) >= 0) {\r\n        hashes.add(hash);\r\n      }\r\n      if(hash.compareTo(endKeyHash) > 0){\r\n        break;\r\n      }\r\n    }\r\n    return hashes;\r\n  }\r\n```\r\n\r\nBy doing this we will recover the accounts that are in the head. To find the accounts that are present in the previous blocks it is necessary to check the different layers . Shoud we do it every time or keep this information in memory ?? \r\n\r\nThere is a discussion with Geth because their behavior does not respect the current version of the specification https://github.com/ethereum/go-ethereum/issues/23536",
  "closed_by": {
    "login": "matkt",
    "id": 26581503,
    "node_id": "MDQ6VXNlcjI2NTgxNTAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/26581503?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/matkt",
    "html_url": "https://github.com/matkt",
    "followers_url": "https://api.github.com/users/matkt/followers",
    "following_url": "https://api.github.com/users/matkt/following{/other_user}",
    "gists_url": "https://api.github.com/users/matkt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/matkt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/matkt/subscriptions",
    "organizations_url": "https://api.github.com/users/matkt/orgs",
    "repos_url": "https://api.github.com/users/matkt/repos",
    "events_url": "https://api.github.com/users/matkt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/matkt/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/2725/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/2725/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
