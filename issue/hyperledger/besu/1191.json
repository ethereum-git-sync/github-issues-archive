{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/1191",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/1191/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/1191/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/1191/events",
  "html_url": "https://github.com/hyperledger/besu/issues/1191",
  "id": 650638897,
  "node_id": "MDU6SXNzdWU2NTA2Mzg4OTc=",
  "number": 1191,
  "title": "Smart Contract Account Permissions not checked on local transaction submission",
  "user": {
    "login": "magooster",
    "id": 12111442,
    "node_id": "MDQ6VXNlcjEyMTExNDQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/12111442?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/magooster",
    "html_url": "https://github.com/magooster",
    "followers_url": "https://api.github.com/users/magooster/followers",
    "following_url": "https://api.github.com/users/magooster/following{/other_user}",
    "gists_url": "https://api.github.com/users/magooster/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/magooster/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/magooster/subscriptions",
    "organizations_url": "https://api.github.com/users/magooster/orgs",
    "repos_url": "https://api.github.com/users/magooster/repos",
    "events_url": "https://api.github.com/users/magooster/events{/privacy}",
    "received_events_url": "https://api.github.com/users/magooster/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2152224197,
      "node_id": "MDU6TGFiZWwyMTUyMjI0MTk3",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/TeamRevenant",
      "name": "TeamRevenant",
      "color": "78e298",
      "default": false,
      "description": "GH issues worked on by Revenant Team"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "MadelineMurray",
    "id": 43356962,
    "node_id": "MDQ6VXNlcjQzMzU2OTYy",
    "avatar_url": "https://avatars.githubusercontent.com/u/43356962?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MadelineMurray",
    "html_url": "https://github.com/MadelineMurray",
    "followers_url": "https://api.github.com/users/MadelineMurray/followers",
    "following_url": "https://api.github.com/users/MadelineMurray/following{/other_user}",
    "gists_url": "https://api.github.com/users/MadelineMurray/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MadelineMurray/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MadelineMurray/subscriptions",
    "organizations_url": "https://api.github.com/users/MadelineMurray/orgs",
    "repos_url": "https://api.github.com/users/MadelineMurray/repos",
    "events_url": "https://api.github.com/users/MadelineMurray/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MadelineMurray/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "MadelineMurray",
      "id": 43356962,
      "node_id": "MDQ6VXNlcjQzMzU2OTYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/43356962?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MadelineMurray",
      "html_url": "https://github.com/MadelineMurray",
      "followers_url": "https://api.github.com/users/MadelineMurray/followers",
      "following_url": "https://api.github.com/users/MadelineMurray/following{/other_user}",
      "gists_url": "https://api.github.com/users/MadelineMurray/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MadelineMurray/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MadelineMurray/subscriptions",
      "organizations_url": "https://api.github.com/users/MadelineMurray/orgs",
      "repos_url": "https://api.github.com/users/MadelineMurray/repos",
      "events_url": "https://api.github.com/users/MadelineMurray/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MadelineMurray/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2020-07-03T14:42:50Z",
  "updated_at": "2021-09-28T04:04:17Z",
  "closed_at": "2021-09-28T04:01:42Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nEnabling smart contract based account permissioning results in transactions from non-allowed accounts filling the local nodes transaction pool.\r\n\r\n### Steps to Reproduce (Bug)\r\n1. Deploy smart contract based account permssioning (AccountIngress + Admin + AccountRules contracts)\r\n2. Send multiple signed raw transactions from an address not in the contracts allowlist.\r\n\r\n**Expected behavior:** [What you expect to happen]\r\nSend raw transaction request should be rejected with a suitable error.\r\n\r\n**Actual behavior:** [What actually happens]\r\nTransaction submission succeeds but transaction fails to be confirmed (included in a block), and future transactions remain in the local nodes transaction pool. The first transaction (nonce 0) is 'silently' dropped.\r\n\r\n**Frequency:** [What percentage of the time does it occur?]\r\nEvery time\r\n\r\n### Versions (Add all that apply)\r\n* Software version: 1.4.6\r\n\r\n### Additional Information\r\n\r\nIt looks like the onchain permission checks don't run as part of the checks when adding a transaction to the local nodes pool.",
  "closed_by": {
    "login": "macfarla",
    "id": 2627919,
    "node_id": "MDQ6VXNlcjI2Mjc5MTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2627919?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/macfarla",
    "html_url": "https://github.com/macfarla",
    "followers_url": "https://api.github.com/users/macfarla/followers",
    "following_url": "https://api.github.com/users/macfarla/following{/other_user}",
    "gists_url": "https://api.github.com/users/macfarla/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/macfarla/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/macfarla/subscriptions",
    "organizations_url": "https://api.github.com/users/macfarla/orgs",
    "repos_url": "https://api.github.com/users/macfarla/repos",
    "events_url": "https://api.github.com/users/macfarla/events{/privacy}",
    "received_events_url": "https://api.github.com/users/macfarla/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/1191/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/1191/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/658547866",
    "html_url": "https://github.com/hyperledger/besu/issues/1191#issuecomment-658547866",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1191",
    "id": 658547866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODU0Nzg2Ng==",
    "user": {
      "login": "MadelineMurray",
      "id": 43356962,
      "node_id": "MDQ6VXNlcjQzMzU2OTYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/43356962?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MadelineMurray",
      "html_url": "https://github.com/MadelineMurray",
      "followers_url": "https://api.github.com/users/MadelineMurray/followers",
      "following_url": "https://api.github.com/users/MadelineMurray/following{/other_user}",
      "gists_url": "https://api.github.com/users/MadelineMurray/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MadelineMurray/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MadelineMurray/subscriptions",
      "organizations_url": "https://api.github.com/users/MadelineMurray/orgs",
      "repos_url": "https://api.github.com/users/MadelineMurray/repos",
      "events_url": "https://api.github.com/users/MadelineMurray/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MadelineMurray/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-15T05:05:21Z",
    "updated_at": "2020-07-15T05:05:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "hi @magooster - this is by design.  The reason behind this is that onchain permissioning rules can be updated while a transaction is being added to or is in the transaction pool. This means the transaction might be allowed by the time it is added to a block. \r\n\r\nWhen permissioning rules are applied for onchain and local permissioning is illustrated here: \r\nhttps://besu.hyperledger.org/en/stable/Concepts/Permissioning/Permissioning-Overview/#onchain \r\n\r\nThe order transactions are dropped in is described here: https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Pool/#dropping-transactions-when-the-transaction-pool-is-full \r\n\r\nLet me know if that doesn't make sense or this behaviour is causing specific issues for your use-case. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/658547866/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/659910263",
    "html_url": "https://github.com/hyperledger/besu/issues/1191#issuecomment-659910263",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1191",
    "id": 659910263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTkxMDI2Mw==",
    "user": {
      "login": "magooster",
      "id": 12111442,
      "node_id": "MDQ6VXNlcjEyMTExNDQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/12111442?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/magooster",
      "html_url": "https://github.com/magooster",
      "followers_url": "https://api.github.com/users/magooster/followers",
      "following_url": "https://api.github.com/users/magooster/following{/other_user}",
      "gists_url": "https://api.github.com/users/magooster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/magooster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/magooster/subscriptions",
      "organizations_url": "https://api.github.com/users/magooster/orgs",
      "repos_url": "https://api.github.com/users/magooster/repos",
      "events_url": "https://api.github.com/users/magooster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/magooster/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-17T07:06:30Z",
    "updated_at": "2020-07-17T07:06:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the feedback, I was missing the content in the first link. Personally i'm not convinced  about the logic for when the checks are applied. The edge case for the reverse logic would be a transaction might be rejected after it has been accepted into the pool, at least the submitter would get 'feedback' at submission time.\r\n\r\nAlso in the scenario I describe above only the first transaction with the current sender nonce is evaluated against the contract permissions during block processing, the other transactions with future nonces pollute the pool, as the nonce validation occurs before the permissions validation. \r\n\r\nThe only way those will get processed is if i) the sender manually fills in the nonce gap and ii) the sender address is added to the allow list. \r\n\r\nIf the validation order were changed such that the permissions check occurs before the current nonce check  then those future transactions would not pollute the transactions pool. \r\n\r\n---\r\n\r\nI don't have a specific use-case, but one problem with the current implementation is that an external system has no means to efficiently capture and respond to a permissions failure.  With local permissions on submission an error would be returned. With other contract based permissions I can add a revert and interrogate that. The permissioning contracts provide neither, happy to be corrected here...\r\n\r\nOptions with the current implementation I can see is to manually call the permissioning contract prior to submission, or sync the local permissions with the contract.",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/659910263/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/666872190",
    "html_url": "https://github.com/hyperledger/besu/issues/1191#issuecomment-666872190",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1191",
    "id": 666872190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2Njg3MjE5MA==",
    "user": {
      "login": "MadelineMurray",
      "id": 43356962,
      "node_id": "MDQ6VXNlcjQzMzU2OTYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/43356962?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MadelineMurray",
      "html_url": "https://github.com/MadelineMurray",
      "followers_url": "https://api.github.com/users/MadelineMurray/followers",
      "following_url": "https://api.github.com/users/MadelineMurray/following{/other_user}",
      "gists_url": "https://api.github.com/users/MadelineMurray/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MadelineMurray/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MadelineMurray/subscriptions",
      "organizations_url": "https://api.github.com/users/MadelineMurray/orgs",
      "repos_url": "https://api.github.com/users/MadelineMurray/repos",
      "events_url": "https://api.github.com/users/MadelineMurray/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MadelineMurray/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-31T02:07:59Z",
    "updated_at": "2020-07-31T02:07:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@lucassaldanha - I'm looking at this again and I think we should talk about these two points specifically in standup on Monday: \r\n> If the validation order were changed such that the permissions check occurs before the current nonce check then those future transactions would not pollute the transactions pool.\r\n\r\n> With other contract based permissions I can add a revert and interrogate that. The permissioning contracts provide neither, happy to be corrected here... \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/666872190/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/668512389",
    "html_url": "https://github.com/hyperledger/besu/issues/1191#issuecomment-668512389",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1191",
    "id": 668512389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODUxMjM4OQ==",
    "user": {
      "login": "MadelineMurray",
      "id": 43356962,
      "node_id": "MDQ6VXNlcjQzMzU2OTYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/43356962?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MadelineMurray",
      "html_url": "https://github.com/MadelineMurray",
      "followers_url": "https://api.github.com/users/MadelineMurray/followers",
      "following_url": "https://api.github.com/users/MadelineMurray/following{/other_user}",
      "gists_url": "https://api.github.com/users/MadelineMurray/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MadelineMurray/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MadelineMurray/subscriptions",
      "organizations_url": "https://api.github.com/users/MadelineMurray/orgs",
      "repos_url": "https://api.github.com/users/MadelineMurray/repos",
      "events_url": "https://api.github.com/users/MadelineMurray/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MadelineMurray/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-04T10:18:26Z",
    "updated_at": "2020-08-04T10:18:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@magooster - we talked about this today and wondered if you could expand on this point specifically: \r\n> With other contract based permissions I can add a revert and interrogate that.  \r\n\r\nBy _other contract based permissions_ do you mean contract permissioning implemented by another client? Or using Besu with an alternative permissioning contract? \r\n\r\nI'm going to update the Besu documentation to make this clearer but the provided [permissioning contracts](https://github.com/PegaSysEng/permissioning-smart-contracts) are a simple implementation and the Besu permissioning is designed so the contracts can be switched out for contracts designed to meet specific use cases. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/668512389/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/673336585",
    "html_url": "https://github.com/hyperledger/besu/issues/1191#issuecomment-673336585",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1191",
    "id": 673336585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzMzNjU4NQ==",
    "user": {
      "login": "magooster",
      "id": 12111442,
      "node_id": "MDQ6VXNlcjEyMTExNDQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/12111442?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/magooster",
      "html_url": "https://github.com/magooster",
      "followers_url": "https://api.github.com/users/magooster/followers",
      "following_url": "https://api.github.com/users/magooster/following{/other_user}",
      "gists_url": "https://api.github.com/users/magooster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/magooster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/magooster/subscriptions",
      "organizations_url": "https://api.github.com/users/magooster/orgs",
      "repos_url": "https://api.github.com/users/magooster/repos",
      "events_url": "https://api.github.com/users/magooster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/magooster/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-13T08:21:41Z",
    "updated_at": "2020-08-13T08:21:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I meant that a permissioning system can be added to any smart contract implementation, which is evaluated at transaction execution time within the EVM. I can then use a revert statement in my contract implementation to indicate a permissioning issue. The revert reason is available for clients for interrogation.  I can even invoke via a call to check prior to transaction submission.   This is not possible with the permissioning contract implementation as they are evaluated separately as part of the general transaction validation (gas price, gas supplied, signature etc).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/673336585/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/673687911",
    "html_url": "https://github.com/hyperledger/besu/issues/1191#issuecomment-673687911",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1191",
    "id": 673687911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzY4NzkxMQ==",
    "user": {
      "login": "lucassaldanha",
      "id": 1766440,
      "node_id": "MDQ6VXNlcjE3NjY0NDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1766440?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucassaldanha",
      "html_url": "https://github.com/lucassaldanha",
      "followers_url": "https://api.github.com/users/lucassaldanha/followers",
      "following_url": "https://api.github.com/users/lucassaldanha/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucassaldanha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucassaldanha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucassaldanha/subscriptions",
      "organizations_url": "https://api.github.com/users/lucassaldanha/orgs",
      "repos_url": "https://api.github.com/users/lucassaldanha/repos",
      "events_url": "https://api.github.com/users/lucassaldanha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucassaldanha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-13T20:14:23Z",
    "updated_at": "2020-08-13T20:14:23Z",
    "author_association": "MEMBER",
    "body": "> which is evaluated at transaction execution time within the EVM\r\n\r\nI believe a problem with this approach is that the target node will need to allocate resources and start the tx execution in the EVM for any transactions, even those that aren't allowed. We have tried to avoid that with our implementation, applying permissioning rules outside the tx execution.\r\n\r\nEven with onchain permisioning, the rules are written onchain, but the enforcement happens pre tx-execution. The spec even has specific events to allow caching of the allowed accounts s owe minimise the impact of evaluating the rules in the client.\r\n\r\n> a permissioning system can be added to any smart contract implementation\r\n\r\nThis is correct. There are use cases that can benefit from this approach instead of the \"EEA\" approach. But then it isn't a client implementation domain and more a \"smart contract domain\", isn't it?",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/673687911/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/928753788",
    "html_url": "https://github.com/hyperledger/besu/issues/1191#issuecomment-928753788",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1191",
    "id": 928753788,
    "node_id": "IC_kwDODE2jmc43W6h8",
    "user": {
      "login": "macfarla",
      "id": 2627919,
      "node_id": "MDQ6VXNlcjI2Mjc5MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2627919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/macfarla",
      "html_url": "https://github.com/macfarla",
      "followers_url": "https://api.github.com/users/macfarla/followers",
      "following_url": "https://api.github.com/users/macfarla/following{/other_user}",
      "gists_url": "https://api.github.com/users/macfarla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/macfarla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/macfarla/subscriptions",
      "organizations_url": "https://api.github.com/users/macfarla/orgs",
      "repos_url": "https://api.github.com/users/macfarla/repos",
      "events_url": "https://api.github.com/users/macfarla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/macfarla/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-28T04:04:17Z",
    "updated_at": "2021-09-28T04:04:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@magooster we decided to change this to make Besu play nicer with MetaMask.  So this should work better for you now. https://github.com/hyperledger/besu/pull/2595 - let us know if this does/doesn't improve things for you!!",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/928753788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
