{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/2727",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/2727/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/2727/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/2727/events",
  "html_url": "https://github.com/hyperledger/besu/issues/2727",
  "id": 989974916,
  "node_id": "MDU6SXNzdWU5ODk5NzQ5MTY=",
  "number": 2727,
  "title": "Generate the proof of range accounts",
  "user": {
    "login": "matkt",
    "id": 26581503,
    "node_id": "MDQ6VXNlcjI2NTgxNTAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/26581503?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/matkt",
    "html_url": "https://github.com/matkt",
    "followers_url": "https://api.github.com/users/matkt/followers",
    "following_url": "https://api.github.com/users/matkt/following{/other_user}",
    "gists_url": "https://api.github.com/users/matkt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/matkt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/matkt/subscriptions",
    "organizations_url": "https://api.github.com/users/matkt/orgs",
    "repos_url": "https://api.github.com/users/matkt/repos",
    "events_url": "https://api.github.com/users/matkt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/matkt/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "matkt",
    "id": 26581503,
    "node_id": "MDQ6VXNlcjI2NTgxNTAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/26581503?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/matkt",
    "html_url": "https://github.com/matkt",
    "followers_url": "https://api.github.com/users/matkt/followers",
    "following_url": "https://api.github.com/users/matkt/following{/other_user}",
    "gists_url": "https://api.github.com/users/matkt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/matkt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/matkt/subscriptions",
    "organizations_url": "https://api.github.com/users/matkt/orgs",
    "repos_url": "https://api.github.com/users/matkt/repos",
    "events_url": "https://api.github.com/users/matkt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/matkt/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "matkt",
      "id": 26581503,
      "node_id": "MDQ6VXNlcjI2NTgxNTAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/26581503?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matkt",
      "html_url": "https://github.com/matkt",
      "followers_url": "https://api.github.com/users/matkt/followers",
      "following_url": "https://api.github.com/users/matkt/following{/other_user}",
      "gists_url": "https://api.github.com/users/matkt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matkt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matkt/subscriptions",
      "organizations_url": "https://api.github.com/users/matkt/orgs",
      "repos_url": "https://api.github.com/users/matkt/repos",
      "events_url": "https://api.github.com/users/matkt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matkt/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2021-09-07T13:16:55Z",
  "updated_at": "2021-12-13T09:20:50Z",
  "closed_at": "2021-12-13T09:20:50Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "We need to generate proof when we respond to the messages. With bonsai it is not difficult to generate proof. the code is already present just plug it to bonsai and also to the good bucket in order to have the proof linked to the asked stateroot \n\n\n```java\n List<Bytes> worldStateProofStartKeyHash = worldStateArchive.getAccountProof(Hash.wrap(worldStateRootHash),\n              Hash.wrap(startKeyHash), new ArrayList<>());\n\n  public List<Bytes> getAccountProof(\n          final Hash worldStateRoot,\n          final Hash accountHash,\n          final List<UInt256> accountStorageKeys) {\n    return worldStateProof.getProofRelatedNodes(worldStateRoot, accountHash, accountStorageKeys);\n  }\n\n\n  public List<Bytes> getProofRelatedNodes(\n          final Hash worldStateRoot,\n          final Hash accountHash,\n          final List<UInt256> accountStorageKeys) {\n    if (!worldStateStorage.isWorldStateAvailable(worldStateRoot, null)) {\n      return new ArrayList<>();\n    } else {\n      final Proof<Bytes> accountProof =\n              newAccountStateTrie(worldStateRoot).getValueWithProof(accountHash);\n      return accountProof.getProofRelatedNodes();\n    }\n  }\n\nprivate MerklePatriciaTrie<Bytes32, Bytes> newAccountStateTrie(final Bytes32 rootHash) {\n    return new StoredMerklePatriciaTrie<>(\n            (location, hash) ->\n        worldStateStorage.getAccountStateTrieNode(Optional.of(Hash.wrap(rootHash)), location, hash), rootHash, b -> b, b -> b);\n  }\n\n```\n\n",
  "closed_by": {
    "login": "matkt",
    "id": 26581503,
    "node_id": "MDQ6VXNlcjI2NTgxNTAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/26581503?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/matkt",
    "html_url": "https://github.com/matkt",
    "followers_url": "https://api.github.com/users/matkt/followers",
    "following_url": "https://api.github.com/users/matkt/following{/other_user}",
    "gists_url": "https://api.github.com/users/matkt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/matkt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/matkt/subscriptions",
    "organizations_url": "https://api.github.com/users/matkt/orgs",
    "repos_url": "https://api.github.com/users/matkt/repos",
    "events_url": "https://api.github.com/users/matkt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/matkt/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/2727/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/2727/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
