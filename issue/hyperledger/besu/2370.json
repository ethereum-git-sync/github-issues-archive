{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/2370",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/2370/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/2370/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/2370/events",
  "html_url": "https://github.com/hyperledger/besu/issues/2370",
  "id": 910227906,
  "node_id": "MDU6SXNzdWU5MTAyMjc5MDY=",
  "number": 2370,
  "title": "[Discussion] Unrestricted Privacy Encryption options/recomendations",
  "user": {
    "login": "antonydenyer",
    "id": 469160,
    "node_id": "MDQ6VXNlcjQ2OTE2MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/469160?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/antonydenyer",
    "html_url": "https://github.com/antonydenyer",
    "followers_url": "https://api.github.com/users/antonydenyer/followers",
    "following_url": "https://api.github.com/users/antonydenyer/following{/other_user}",
    "gists_url": "https://api.github.com/users/antonydenyer/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/antonydenyer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/antonydenyer/subscriptions",
    "organizations_url": "https://api.github.com/users/antonydenyer/orgs",
    "repos_url": "https://api.github.com/users/antonydenyer/repos",
    "events_url": "https://api.github.com/users/antonydenyer/events{/privacy}",
    "received_events_url": "https://api.github.com/users/antonydenyer/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2021-06-03T08:00:08Z",
  "updated_at": "2021-07-09T11:31:20Z",
  "closed_at": "2021-07-09T11:31:20Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Description\r\nAs an enterprise user, I want to be able to encrypt `unrestricted` private transactions. Unrestricted privacy is where the private/side-channel transaction is distributed to all participants in the network but only some can decrypt it. Besu will implement this using a pre-compile in the same way as `restricted` privacy. The key difference is that the payload for the transaction will be stored on-chain in the data property (aka the private payload) https://github.com/hyperledger/besu/pull/2324\r\n\r\nThere are numerous tactics and options on how best to encrypt private data. I don't think besu can recommend best practice with this regard, the best option will depend on the use case and trade-offs the user is willing to accept.\r\n\r\nAs such, I propose that we provide a plugin hook to allow users to do this. This still comes with it's own set of trade-offs:\r\n\r\n### Options ...\r\n\r\n### 1 - bytes in bytes out\r\nBesu could pass the rlp encoded `PrivateTransaction` to the plugin and receive back the encrypted private payload.\r\n\r\n```java\r\n  Bytes decrypt(final Bytes input);\r\n  Bytes encrypt(final Bytes input);\r\n```\r\nThis provides the most flexible option for the user. However, if they wanted to do anything useful they would need to deserialize the input to find out what the `privacyGroupId` is and encrypt the data on a per-group basis.\r\n\r\n### 2 - bytes and meta in bytes out\r\nIn addition, besu could pass some metadata with the raw private transaction to help with encryption. This is essentially what happens with the existing `restricted` privacy implementation. \r\n\r\n```java\r\n  Bytes decrypt(final Bytes input);\r\n  Bytes encrypt(final Bytes input, Bytes privacyGroupId);\r\n```\r\nIt gives the user a bit more help with encryption. But no extra help with decryption. \r\n\r\n### 3 - PrivateTransaction in bytes out\r\nThis would be the easiest from the user point of view but the hardest from an implementation point of view. We would be opening up the internals of besu to the plugin.\r\n\r\n```java\r\n  PrivateTransaction decrypt(final Bytes input);\r\n  Bytes encrypt(final PrivateTransaction input);\r\n```\r\n\r\n#### Serialization\r\nWhen upgrading a network any changes to `PrivateTransaction` would need to be non-breaking. This is currently the case when using an enclave, except that you can 'migrate' data in an enclave but you can't 'migrate' data on-chain. When adding properties to `PrivateTransaction` sensible defaults would be required.",
  "closed_by": {
    "login": "antonydenyer",
    "id": 469160,
    "node_id": "MDQ6VXNlcjQ2OTE2MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/469160?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/antonydenyer",
    "html_url": "https://github.com/antonydenyer",
    "followers_url": "https://api.github.com/users/antonydenyer/followers",
    "following_url": "https://api.github.com/users/antonydenyer/following{/other_user}",
    "gists_url": "https://api.github.com/users/antonydenyer/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/antonydenyer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/antonydenyer/subscriptions",
    "organizations_url": "https://api.github.com/users/antonydenyer/orgs",
    "repos_url": "https://api.github.com/users/antonydenyer/repos",
    "events_url": "https://api.github.com/users/antonydenyer/events{/privacy}",
    "received_events_url": "https://api.github.com/users/antonydenyer/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/2370/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/2370/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/853691254",
    "html_url": "https://github.com/hyperledger/besu/issues/2370#issuecomment-853691254",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/2370",
    "id": 853691254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MzY5MTI1NA==",
    "user": {
      "login": "alberto-hernandez",
      "id": 1534458,
      "node_id": "MDQ6VXNlcjE1MzQ0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1534458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alberto-hernandez",
      "html_url": "https://github.com/alberto-hernandez",
      "followers_url": "https://api.github.com/users/alberto-hernandez/followers",
      "following_url": "https://api.github.com/users/alberto-hernandez/following{/other_user}",
      "gists_url": "https://api.github.com/users/alberto-hernandez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alberto-hernandez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alberto-hernandez/subscriptions",
      "organizations_url": "https://api.github.com/users/alberto-hernandez/orgs",
      "repos_url": "https://api.github.com/users/alberto-hernandez/repos",
      "events_url": "https://api.github.com/users/alberto-hernandez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alberto-hernandez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-03T08:33:34Z",
    "updated_at": "2021-06-03T08:33:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi Anthony,\r\nI will add to the options a more generall approach for the encryption/decription process. In all the options it's supposed that it only will be used one key for the whole process and this could not be flexible for alll scenarios such us rotate the key every N blocks, etc.\r\n\r\nI suggest to add to the three options an extra parameter for define an encryption \"context\" where you can define all the stuffs that the encryption process will define.",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/853691254/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/853730523",
    "html_url": "https://github.com/hyperledger/besu/issues/2370#issuecomment-853730523",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/2370",
    "id": 853730523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MzczMDUyMw==",
    "user": {
      "login": "antonydenyer",
      "id": 469160,
      "node_id": "MDQ6VXNlcjQ2OTE2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/469160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antonydenyer",
      "html_url": "https://github.com/antonydenyer",
      "followers_url": "https://api.github.com/users/antonydenyer/followers",
      "following_url": "https://api.github.com/users/antonydenyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/antonydenyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antonydenyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antonydenyer/subscriptions",
      "organizations_url": "https://api.github.com/users/antonydenyer/orgs",
      "repos_url": "https://api.github.com/users/antonydenyer/repos",
      "events_url": "https://api.github.com/users/antonydenyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antonydenyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-03T09:31:19Z",
    "updated_at": "2021-06-03T09:31:19Z",
    "author_association": "MEMBER",
    "body": "We can add info about the marker transaction during the decrypt method. But with the encrypt it's slightly more difficult! The plugin would need to query for the current block height and make it it's own judgement about the possibility of the transaction being mined in time for the key to be valid. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/853730523/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/854495897",
    "html_url": "https://github.com/hyperledger/besu/issues/2370#issuecomment-854495897",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/2370",
    "id": 854495897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDQ5NTg5Nw==",
    "user": {
      "login": "alberto-hernandez",
      "id": 1534458,
      "node_id": "MDQ6VXNlcjE1MzQ0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1534458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alberto-hernandez",
      "html_url": "https://github.com/alberto-hernandez",
      "followers_url": "https://api.github.com/users/alberto-hernandez/followers",
      "following_url": "https://api.github.com/users/alberto-hernandez/following{/other_user}",
      "gists_url": "https://api.github.com/users/alberto-hernandez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alberto-hernandez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alberto-hernandez/subscriptions",
      "organizations_url": "https://api.github.com/users/alberto-hernandez/orgs",
      "repos_url": "https://api.github.com/users/alberto-hernandez/repos",
      "events_url": "https://api.github.com/users/alberto-hernandez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alberto-hernandez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-04T08:55:11Z",
    "updated_at": "2021-06-04T08:55:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's true that for the current block you can infer from the context which key will need to encrypt.\r\nBut what about to process previous private transactions from the past blocks in resync process or rehydratation? How could the plugin infer the key to use?",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/854495897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/854529483",
    "html_url": "https://github.com/hyperledger/besu/issues/2370#issuecomment-854529483",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/2370",
    "id": 854529483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDUyOTQ4Mw==",
    "user": {
      "login": "antonydenyer",
      "id": 469160,
      "node_id": "MDQ6VXNlcjQ2OTE2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/469160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antonydenyer",
      "html_url": "https://github.com/antonydenyer",
      "followers_url": "https://api.github.com/users/antonydenyer/followers",
      "following_url": "https://api.github.com/users/antonydenyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/antonydenyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antonydenyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antonydenyer/subscriptions",
      "organizations_url": "https://api.github.com/users/antonydenyer/orgs",
      "repos_url": "https://api.github.com/users/antonydenyer/repos",
      "events_url": "https://api.github.com/users/antonydenyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antonydenyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-04T09:28:48Z",
    "updated_at": "2021-06-04T09:28:48Z",
    "author_association": "MEMBER",
    "body": "> It's true that for the current block you can infer from the context which key will need to encrypt.\r\n> But what about to process previous private transactions from the past blocks in resync process or rehydratation? How could the plugin infer the key to use?\r\n\r\nIt will use the same method `decrypt`. If you are re-syncing the height is being set back so besu will just roll forward from that point and apply everything ontop. ",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/854529483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/854700846",
    "html_url": "https://github.com/hyperledger/besu/issues/2370#issuecomment-854700846",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/2370",
    "id": 854700846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDcwMDg0Ng==",
    "user": {
      "login": "antonydenyer",
      "id": 469160,
      "node_id": "MDQ6VXNlcjQ2OTE2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/469160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antonydenyer",
      "html_url": "https://github.com/antonydenyer",
      "followers_url": "https://api.github.com/users/antonydenyer/followers",
      "following_url": "https://api.github.com/users/antonydenyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/antonydenyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antonydenyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antonydenyer/subscriptions",
      "organizations_url": "https://api.github.com/users/antonydenyer/orgs",
      "repos_url": "https://api.github.com/users/antonydenyer/repos",
      "events_url": "https://api.github.com/users/antonydenyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antonydenyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-04T12:50:00Z",
    "updated_at": "2021-06-04T12:50:00Z",
    "author_association": "MEMBER",
    "body": "How about\r\n\r\n```java\r\n  PrivateTransaction decrypt(final Transaction privateMarkerTransaction);\r\n  Transaction encrypt(final PrivateTransaction privateMarkerTransaction);\r\n```\r\n\r\nThe decrypt would need to sort out the serialization from whatever source it deems fit. Equally with the encrypt it can choose to put whatever it wants in the input.",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/854700846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/860924199",
    "html_url": "https://github.com/hyperledger/besu/issues/2370#issuecomment-860924199",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/2370",
    "id": 860924199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDkyNDE5OQ==",
    "user": {
      "login": "antonydenyer",
      "id": 469160,
      "node_id": "MDQ6VXNlcjQ2OTE2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/469160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antonydenyer",
      "html_url": "https://github.com/antonydenyer",
      "followers_url": "https://api.github.com/users/antonydenyer/followers",
      "following_url": "https://api.github.com/users/antonydenyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/antonydenyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antonydenyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antonydenyer/subscriptions",
      "organizations_url": "https://api.github.com/users/antonydenyer/orgs",
      "repos_url": "https://api.github.com/users/antonydenyer/repos",
      "events_url": "https://api.github.com/users/antonydenyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antonydenyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-14T19:07:20Z",
    "updated_at": "2021-06-16T05:26:26Z",
    "author_association": "MEMBER",
    "body": "The plugin should also provide extension points to facilitate besu to maintain full compatibility with all json privacy endpoints. As per @pinges suggestions:\r\n\r\nhttps://github.com/hyperledger/besu/pull/2324#discussion_r650719273\r\nhttps://github.com/hyperledger/besu/pull/2324#discussion_r650723639\r\nhttps://github.com/hyperledger/besu/pull/2324#discussion_r650724896\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/860924199/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/862051315",
    "html_url": "https://github.com/hyperledger/besu/issues/2370#issuecomment-862051315",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/2370",
    "id": 862051315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MjA1MTMxNQ==",
    "user": {
      "login": "antonydenyer",
      "id": 469160,
      "node_id": "MDQ6VXNlcjQ2OTE2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/469160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antonydenyer",
      "html_url": "https://github.com/antonydenyer",
      "followers_url": "https://api.github.com/users/antonydenyer/followers",
      "following_url": "https://api.github.com/users/antonydenyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/antonydenyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antonydenyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antonydenyer/subscriptions",
      "organizations_url": "https://api.github.com/users/antonydenyer/orgs",
      "repos_url": "https://api.github.com/users/antonydenyer/repos",
      "events_url": "https://api.github.com/users/antonydenyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antonydenyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-16T05:28:16Z",
    "updated_at": "2021-06-16T05:28:16Z",
    "author_association": "MEMBER",
    "body": "Enable multi-tenancy for unrestricted privacy. This should be fairly simple, the HTTP request user (i.e JWT bearer/vertx user) should be passed down the plugin to enable them to decide.\r\n\r\nhttps://github.com/hyperledger/besu/pull/2324#discussion_r650641655 ",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/862051315/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/868317176",
    "html_url": "https://github.com/hyperledger/besu/issues/2370#issuecomment-868317176",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/2370",
    "id": 868317176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2ODMxNzE3Ng==",
    "user": {
      "login": "antonydenyer",
      "id": 469160,
      "node_id": "MDQ6VXNlcjQ2OTE2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/469160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antonydenyer",
      "html_url": "https://github.com/antonydenyer",
      "followers_url": "https://api.github.com/users/antonydenyer/followers",
      "following_url": "https://api.github.com/users/antonydenyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/antonydenyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antonydenyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antonydenyer/subscriptions",
      "organizations_url": "https://api.github.com/users/antonydenyer/orgs",
      "repos_url": "https://api.github.com/users/antonydenyer/repos",
      "events_url": "https://api.github.com/users/antonydenyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antonydenyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-25T08:22:40Z",
    "updated_at": "2021-06-25T08:24:29Z",
    "author_association": "MEMBER",
    "body": "Wire up simple plugin implementation as part of json rpc acceptance tests (remove all  `if (bftPrivacyType.restriction != Restriction.UNRESTRICTED)` code in tests)\r\n\r\nhttps://github.com/hyperledger/besu/pull/2324#discussion_r658514931\r\nhttps://github.com/hyperledger/besu/pull/2324#discussion_r658516905\r\nhttps://github.com/hyperledger/besu/pull/2324#discussion_r658517398\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/868317176/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
