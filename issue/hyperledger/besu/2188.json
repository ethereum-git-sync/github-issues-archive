{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/2188",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/2188/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/2188/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/2188/events",
  "html_url": "https://github.com/hyperledger/besu/issues/2188",
  "id": 867514787,
  "node_id": "MDU6SXNzdWU4Njc1MTQ3ODc=",
  "number": 2188,
  "title": "Flaky tests - transactionFromDeniedAccountShouldNotBreakBlockImport",
  "user": {
    "login": "matkt",
    "id": 26581503,
    "node_id": "MDQ6VXNlcjI2NTgxNTAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/26581503?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/matkt",
    "html_url": "https://github.com/matkt",
    "followers_url": "https://api.github.com/users/matkt/followers",
    "following_url": "https://api.github.com/users/matkt/following{/other_user}",
    "gists_url": "https://api.github.com/users/matkt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/matkt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/matkt/subscriptions",
    "organizations_url": "https://api.github.com/users/matkt/orgs",
    "repos_url": "https://api.github.com/users/matkt/repos",
    "events_url": "https://api.github.com/users/matkt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/matkt/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2047214992,
      "node_id": "MDU6TGFiZWwyMDQ3MjE0OTky",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/flake",
      "name": "flake",
      "color": "ed9482",
      "default": false,
      "description": "60% of the time it works 100% of the time."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-04-26T09:57:16Z",
  "updated_at": "2021-05-11T19:18:16Z",
  "closed_at": "2021-05-11T19:18:16Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Flaky test : \r\n- Failed : https://app.circleci.com/pipelines/github/hyperledger/besu/8427/workflows/b19f12c2-3d01-4fd1-8928-3f919b3ff3e7/jobs/42843\r\n\r\n>org.awaitility.core.ConditionTimeoutException: Assertion condition defined as a lambda expression in org.hyperledger.besu.tests.acceptance.dsl.AcceptanceTestBase \r\nExpecting:\r\n <0>\r\nto be greater than or equal to:\r\n <5>  within 2 minutes.\r\n\tat org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:165)\r\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:119)\r\n\tat org.awaitility.core.AssertionCondition.await(AssertionCondition.java:31)\r\n\tat org.awaitility.core.ConditionFactory.until(ConditionFactory.java:895)\r\n\tat org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:679)\r\n\tat org.hyperledger.besu.tests.acceptance.dsl.WaitUtils.waitFor(WaitUtils.java:31)\r\n\tat org.hyperledger.besu.tests.acceptance.dsl.AcceptanceTestBase.waitForBlockHeight(AcceptanceTestBase.java:224)\r\n\tat org.hyperledger.besu.tests.acceptance.permissioning.AccountLocalConfigPermissioningImportAcceptanceTest.transactionFromDeniedAccountShouldNotBreakBlockImport(AccountLocalConfigPermissioningImportAcceptanceTest.java:77)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:54)\r\n\tat org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:61)\r\n\tat org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:61)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)\r\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)\r\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)\r\n\tat org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)\r\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\r\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\r\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\r\n\tat com.sun.proxy.$Proxy5.processTestClass(Unknown Source)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:119)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\r\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)\r\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)\r\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)\r\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\r\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: java.lang.AssertionError: \r\nExpecting:\r\n <0>\r\nto be greater than or equal to:\r\n <5> \r\n\tat org.hyperledger.besu.tests.acceptance.dsl.AcceptanceTestBase.lambda$waitForBlockHeight$1(AcceptanceTestBase.java:228)\r\n\tat org.awaitility.core.AssertionCondition.lambda$new$0(AssertionCondition.java:53)\r\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:222)\r\n\tat org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:209)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\t... 1 more\r\n\r\n\r\nWorked after restart",
  "closed_by": {
    "login": "macfarla",
    "id": 2627919,
    "node_id": "MDQ6VXNlcjI2Mjc5MTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2627919?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/macfarla",
    "html_url": "https://github.com/macfarla",
    "followers_url": "https://api.github.com/users/macfarla/followers",
    "following_url": "https://api.github.com/users/macfarla/following{/other_user}",
    "gists_url": "https://api.github.com/users/macfarla/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/macfarla/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/macfarla/subscriptions",
    "organizations_url": "https://api.github.com/users/macfarla/orgs",
    "repos_url": "https://api.github.com/users/macfarla/repos",
    "events_url": "https://api.github.com/users/macfarla/events{/privacy}",
    "received_events_url": "https://api.github.com/users/macfarla/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/2188/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/2188/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/828898428",
    "html_url": "https://github.com/hyperledger/besu/issues/2188#issuecomment-828898428",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/2188",
    "id": 828898428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyODg5ODQyOA==",
    "user": {
      "login": "macfarla",
      "id": 2627919,
      "node_id": "MDQ6VXNlcjI2Mjc5MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2627919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/macfarla",
      "html_url": "https://github.com/macfarla",
      "followers_url": "https://api.github.com/users/macfarla/followers",
      "following_url": "https://api.github.com/users/macfarla/following{/other_user}",
      "gists_url": "https://api.github.com/users/macfarla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/macfarla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/macfarla/subscriptions",
      "organizations_url": "https://api.github.com/users/macfarla/orgs",
      "repos_url": "https://api.github.com/users/macfarla/repos",
      "events_url": "https://api.github.com/users/macfarla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/macfarla/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-29T02:20:30Z",
    "updated_at": "2021-04-29T02:20:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "lots of p2p Thread blocked exceptions\r\nhttps://circle-production-customer-artifacts.s3.amazonaws.com/picard/5d70c4385140754677d585cb/608686e3e8a563144c4d4950-5-build/artifacts/acceptance-tests-logs/org.hyperledger.besu.tests.acceptance.permissioning.AccountLocalConfigPermissioningImportAcceptanceTest.transactionFromDeniedAccountShouldNotBreakBlockImport.log?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20210429T021926Z&X-Amz-SignedHeaders=host&X-Amz-Expires=60&X-Amz-Credential=AKIAJR3Q6CR467H7Z55A%2F20210429%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=c9063d8328a3adaddbde39e8e6e3137c95cd867ef29929cb8f6e743f30f6802a\r\n\r\n```\r\nnodeB | io.vertx.core.VertxException: Thread blocked\r\nnodeB | \tat java.base@11.0.8/java.lang.Object.wait(Native Method)\r\nnodeB | \tat java.base@11.0.8/java.lang.Object.wait(Object.java:328)\r\nnodeB | \tat java.base@11.0.8/sun.security.provider.SeedGenerator$ThreadedSeedGenerator.getSeedByte(SeedGenerator.java:404)\r\nnodeB | \tat java.base@11.0.8/sun.security.provider.SeedGenerator$ThreadedSeedGenerator.getSeedBytes(SeedGenerator.java:393)\r\nnodeB | \tat java.base@11.0.8/sun.security.provider.SeedGenerator.generateSeed(SeedGenerator.java:144)\r\nnodeB | \tat java.base@11.0.8/sun.security.provider.AbstractDrbg.engineGenerateSeed(AbstractDrbg.java:456)\r\nnodeB | \tat java.base@11.0.8/sun.security.provider.DRBG.engineGenerateSeed(DRBG.java:238)\r\nnodeB | \tat java.base@11.0.8/java.security.SecureRandom.generateSeed(SecureRandom.java:857)\r\nnodeB | \tat app//org.hyperledger.besu.nativelib.secp256k1.LibSecp256k1.createContext(LibSecp256k1.java:49)\r\nnodeB | \tat app//org.hyperledger.besu.nativelib.secp256k1.LibSecp256k1.<clinit>(LibSecp256k1.java:40)\r\nnodeB | \tat app//org.hyperledger.besu.crypto.SECP256K1.signNative(SECP256K1.java:109)\r\nnodeB | \tat app//org.hyperledger.besu.crypto.SECP256K1.sign(SECP256K1.java:64)\r\nnodeB | \tat app//org.hyperledger.besu.crypto.KeyPairSecurityModule.sign(KeyPairSecurityModule.java:57)\r\nnodeB | \tat app//org.hyperledger.besu.crypto.NodeKey.sign(NodeKey.java:32)\r\nnodeB | \tat app//org.hyperledger.besu.ethereum.p2p.discovery.PeerDiscoveryAgent.lambda$updateNodeRecord$2(PeerDiscoveryAgent.java:232)\r\nnodeB | \tat app//org.hyperledger.besu.ethereum.p2p.discovery.PeerDiscoveryAgent$$Lambda$645/0x00000008005b8040.get(Unknown Source)\r\nnodeB | \tat java.base@11.0.8/java.util.Optional.orElseGet(Optional.java:369)\r\nnodeB | \tat app//org.hyperledger.besu.ethereum.p2p.discovery.PeerDiscoveryAgent.updateNodeRecord(PeerDiscoveryAgent.java:211)\r\nnodeB | \tat app//org.hyperledger.besu.ethereum.p2p.discovery.PeerDiscoveryAgent.lambda$start$0(PeerDiscoveryAgent.java:173)\r\nnodeB | \tat app//org.hyperledger.besu.ethereum.p2p.discovery.PeerDiscoveryAgent$$Lambda$634/0x0000000800573040.apply(Unknown Source)\r\nnodeB | \tat java.base@11.0.8/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\r\nnodeB | \tat java.base@11.0.8/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)\r\nnodeB | \tat java.base@11.0.8/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2073)\r\nnodeB | \tat app//org.hyperledger.besu.ethereum.p2p.discovery.VertxPeerDiscoveryAgent.handleListenerSetup(VertxPeerDiscoveryAgent.java:153)\r\nnodeB | \tat app//org.hyperledger.besu.ethereum.p2p.discovery.VertxPeerDiscoveryAgent.lambda$listenForConnections$3(VertxPeerDiscoveryAgent.java:113)\r\nnodeB | \tat app//org.hyperledger.besu.ethereum.p2p.discovery.VertxPeerDiscoveryAgent$$Lambda$629/0x0000000800574c40.handle(Unknown Source)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/828898428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/828898486",
    "html_url": "https://github.com/hyperledger/besu/issues/2188#issuecomment-828898486",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/2188",
    "id": 828898486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyODg5ODQ4Ng==",
    "user": {
      "login": "macfarla",
      "id": 2627919,
      "node_id": "MDQ6VXNlcjI2Mjc5MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2627919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/macfarla",
      "html_url": "https://github.com/macfarla",
      "followers_url": "https://api.github.com/users/macfarla/followers",
      "following_url": "https://api.github.com/users/macfarla/following{/other_user}",
      "gists_url": "https://api.github.com/users/macfarla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/macfarla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/macfarla/subscriptions",
      "organizations_url": "https://api.github.com/users/macfarla/orgs",
      "repos_url": "https://api.github.com/users/macfarla/repos",
      "events_url": "https://api.github.com/users/macfarla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/macfarla/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-29T02:20:41Z",
    "updated_at": "2021-04-29T02:20:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Too much concurrency?",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/828898486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/831686565",
    "html_url": "https://github.com/hyperledger/besu/issues/2188#issuecomment-831686565",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/2188",
    "id": 831686565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMTY4NjU2NQ==",
    "user": {
      "login": "macfarla",
      "id": 2627919,
      "node_id": "MDQ6VXNlcjI2Mjc5MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2627919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/macfarla",
      "html_url": "https://github.com/macfarla",
      "followers_url": "https://api.github.com/users/macfarla/followers",
      "following_url": "https://api.github.com/users/macfarla/following{/other_user}",
      "gists_url": "https://api.github.com/users/macfarla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/macfarla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/macfarla/subscriptions",
      "organizations_url": "https://api.github.com/users/macfarla/orgs",
      "repos_url": "https://api.github.com/users/macfarla/repos",
      "events_url": "https://api.github.com/users/macfarla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/macfarla/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-04T05:11:45Z",
    "updated_at": "2021-05-04T05:11:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Pretty sure this is entropy related #2214",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/831686565/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
