{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/4061",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/4061/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/4061/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/4061/events",
  "html_url": "https://github.com/hyperledger/besu/issues/4061",
  "id": 1294910264,
  "node_id": "I_kwDODE2jmc5NLsM4",
  "number": 4061,
  "title": "Allow private networks already using London fee market to use free gas",
  "user": {
    "login": "siladu",
    "id": 2893793,
    "node_id": "MDQ6VXNlcjI4OTM3OTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2893793?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/siladu",
    "html_url": "https://github.com/siladu",
    "followers_url": "https://api.github.com/users/siladu/followers",
    "following_url": "https://api.github.com/users/siladu/following{/other_user}",
    "gists_url": "https://api.github.com/users/siladu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/siladu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/siladu/subscriptions",
    "organizations_url": "https://api.github.com/users/siladu/orgs",
    "repos_url": "https://api.github.com/users/siladu/repos",
    "events_url": "https://api.github.com/users/siladu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/siladu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1537362490,
      "node_id": "MDU6TGFiZWwxNTM3MzYyNDkw",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 1921587647,
      "node_id": "MDU6TGFiZWwxOTIxNTg3NjQ3",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/TeamGroot",
      "name": "TeamGroot",
      "color": "1d76db",
      "default": false,
      "description": "GH issues worked on by Groot Team"
    },
    {
      "id": 4328777430,
      "node_id": "LA_kwDODE2jmc8AAAABAgPm1g",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/blocked",
      "name": "blocked",
      "color": "B60205",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "siladu",
    "id": 2893793,
    "node_id": "MDQ6VXNlcjI4OTM3OTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2893793?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/siladu",
    "html_url": "https://github.com/siladu",
    "followers_url": "https://api.github.com/users/siladu/followers",
    "following_url": "https://api.github.com/users/siladu/following{/other_user}",
    "gists_url": "https://api.github.com/users/siladu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/siladu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/siladu/subscriptions",
    "organizations_url": "https://api.github.com/users/siladu/orgs",
    "repos_url": "https://api.github.com/users/siladu/repos",
    "events_url": "https://api.github.com/users/siladu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/siladu/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "siladu",
      "id": 2893793,
      "node_id": "MDQ6VXNlcjI4OTM3OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2893793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/siladu",
      "html_url": "https://github.com/siladu",
      "followers_url": "https://api.github.com/users/siladu/followers",
      "following_url": "https://api.github.com/users/siladu/following{/other_user}",
      "gists_url": "https://api.github.com/users/siladu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/siladu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/siladu/subscriptions",
      "organizations_url": "https://api.github.com/users/siladu/orgs",
      "repos_url": "https://api.github.com/users/siladu/repos",
      "events_url": "https://api.github.com/users/siladu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/siladu/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-07-05T23:54:50Z",
  "updated_at": "2022-08-31T00:25:38Z",
  "closed_at": "2022-08-31T00:25:38Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "If you started (or hard-forked) a private network with the `londonBlock` fork without configuring the `baseFeePerGas` to zero at the time, then it's not possible to subsequently zero the base fee, meaning that you can't configure a [free gas network](https://besu.hyperledger.org/en/stable/HowTo/Configure/FreeGas/).\r\n\r\nConfiguring the baseFeePerGas to zero is not yet documented and was [only recently supported by this fix](https://github.com/hyperledger/besu/pull/4003) which works if you haven't yet upgraded to London (or are starting a new network).\r\n\r\n~Note: related to https://github.com/hyperledger/besu/issues/4053~\r\n\r\n---\r\n\r\n### Suggested solution (following [a spike](https://github.com/hyperledger/besu/issues/4067))\r\n\r\nIntroduce a `zeroBaseFee` config flag which wires up a `ZeroBaseFeeMarket`, an extension of `LondonFeeMarket` which returns 0 when computing the baseFee.\r\n\r\n### Genesis examples\r\n\r\nTo start a new free gas network on the latest fork:\r\n```\r\n{\r\n  \"config\": {\r\n    \"grayGlacier\": 0,\r\n    \"zeroBaseFee\": true,\r\n    ...\r\n}\r\n```\r\n\r\nNote, this replaces the only way to currently do this (although this way will still work for new networks):\r\n```\r\n{\r\n  \"config\": {\r\n    \"grayGlacier\": 0,\r\n    ...\r\n    },\r\n    \"baseFeePerGas\": \"0x0\"  \r\n}\r\n```\r\n\r\nTo upgrade an existing network to london (or beyond):\r\n```\r\n{\r\n  \"config\": {\r\n    \"berlinBlock\": 0,\r\n    \"londonBlock\": 999,\r\n    \"zeroBaseFee\": true,\r\n    ...\r\n}\r\n```\r\n\r\nTo convert an existing london network to free gas:\r\n```\r\n{\r\n  \"config\": {\r\n    \"londonBlock\": 0,\r\n    \"zeroBaseFee\": true, # added at some block > 0\r\n    ...\r\n}\r\n```\r\n\r\nThis would be a one-way operation: once you've set `zeroBaseFee`, you can't reset the base fee back to non-zero. There are complications around the block validation rules that lead to this simplification.\r\n\r\n`zeroBaseFee` is preferred over `baseFeePerGas` because it is a config value rather than a genesis value. This means it can be set at any time by the node operator - even if london is already activated - thus allowing conversion of a non-zero base fee network into a zero base fee (free gas) network.\r\n\r\nUsing the `transitions` mechanism was evaluated and ruled out due to requiring significant effort without a clear advantage: we don't know if any users will ever need to flexibly set a non-zero base fee in the future.\r\nThis solution doesn't preclude adding a more flexible transition in the future.\r\nNot using transitions does mean converting an existing network to free gas requires a synchronised restart, however I would expect this to be an exceptional scenario.\r\n\r\nYou still need to use `min-gas-price=0` in conjunction with this for a free gas network.\r\n\r\n---\r\n\r\n### Tasks\r\n\r\n- [x] Add `zeroBaseFee` config for all consensus types\r\n- [x] Introduce ZeroBaseFeeMarket overriding computeBaseFee with 0\r\n- [x] Wire ZeroBaseFeeMarket into MainnetProtocolSpecs.londonDefinition when `zeroBaseFee` set\r\n- [x] Fix BaseFeeMarketBlockHeaderGasPriceValidationRule to allow syncing to work\r\n- [x] Test block creation, syncing, local/remote frontier/eip1559 transactions, all consensus mechanisms\r\n- [x] Test BASEFEE opcode works\r\n- [x] Test what happens to miner rewards (should still be paid tip, just no base fee is burned)\r\n- [ ] Update Free Gas Network documentation",
  "closed_by": {
    "login": "siladu",
    "id": 2893793,
    "node_id": "MDQ6VXNlcjI4OTM3OTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2893793?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/siladu",
    "html_url": "https://github.com/siladu",
    "followers_url": "https://api.github.com/users/siladu/followers",
    "following_url": "https://api.github.com/users/siladu/following{/other_user}",
    "gists_url": "https://api.github.com/users/siladu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/siladu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/siladu/subscriptions",
    "organizations_url": "https://api.github.com/users/siladu/orgs",
    "repos_url": "https://api.github.com/users/siladu/repos",
    "events_url": "https://api.github.com/users/siladu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/siladu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/4061/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/4061/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1185600704",
    "html_url": "https://github.com/hyperledger/besu/issues/4061#issuecomment-1185600704",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/4061",
    "id": 1185600704,
    "node_id": "IC_kwDODE2jmc5GqtTA",
    "user": {
      "login": "antonydenyer",
      "id": 469160,
      "node_id": "MDQ6VXNlcjQ2OTE2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/469160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antonydenyer",
      "html_url": "https://github.com/antonydenyer",
      "followers_url": "https://api.github.com/users/antonydenyer/followers",
      "following_url": "https://api.github.com/users/antonydenyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/antonydenyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antonydenyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antonydenyer/subscriptions",
      "organizations_url": "https://api.github.com/users/antonydenyer/orgs",
      "repos_url": "https://api.github.com/users/antonydenyer/repos",
      "events_url": "https://api.github.com/users/antonydenyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antonydenyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-15T14:27:20Z",
    "updated_at": "2022-07-15T14:27:20Z",
    "author_association": "MEMBER",
    "body": "Ideally we would be able to configure a gas price at a block height (via a config transition) ",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1185600704/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1186697497",
    "html_url": "https://github.com/hyperledger/besu/issues/4061#issuecomment-1186697497",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/4061",
    "id": 1186697497,
    "node_id": "IC_kwDODE2jmc5Gu5EZ",
    "user": {
      "login": "siladu",
      "id": 2893793,
      "node_id": "MDQ6VXNlcjI4OTM3OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2893793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/siladu",
      "html_url": "https://github.com/siladu",
      "followers_url": "https://api.github.com/users/siladu/followers",
      "following_url": "https://api.github.com/users/siladu/following{/other_user}",
      "gists_url": "https://api.github.com/users/siladu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/siladu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/siladu/subscriptions",
      "organizations_url": "https://api.github.com/users/siladu/orgs",
      "repos_url": "https://api.github.com/users/siladu/repos",
      "events_url": "https://api.github.com/users/siladu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/siladu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-18T02:23:29Z",
    "updated_at": "2022-07-18T02:23:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I really like the idea of using a transition for this. It could add quite a big overhead because transitions are only supported for BFT, not Clique or ethash.",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1186697497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1186889374",
    "html_url": "https://github.com/hyperledger/besu/issues/4061#issuecomment-1186889374",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/4061",
    "id": 1186889374,
    "node_id": "IC_kwDODE2jmc5Gvn6e",
    "user": {
      "login": "antonydenyer",
      "id": 469160,
      "node_id": "MDQ6VXNlcjQ2OTE2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/469160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antonydenyer",
      "html_url": "https://github.com/antonydenyer",
      "followers_url": "https://api.github.com/users/antonydenyer/followers",
      "following_url": "https://api.github.com/users/antonydenyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/antonydenyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antonydenyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antonydenyer/subscriptions",
      "organizations_url": "https://api.github.com/users/antonydenyer/orgs",
      "repos_url": "https://api.github.com/users/antonydenyer/repos",
      "events_url": "https://api.github.com/users/antonydenyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antonydenyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-18T08:02:47Z",
    "updated_at": "2022-07-18T08:02:47Z",
    "author_association": "MEMBER",
    "body": "I think the current schema could use a bit of a tidy up 😄  something like \r\n\r\n```\r\ntransitions : [{\r\n  block: 134,\r\n  changeSetting: something\r\n}]\r\n```\r\n\r\nIt'd be nice to get a place to configure all things bespoke (ie not testnet/mainnet) feels like we have a bunch of things in different places that could affect consensus, especially on private/internal test networks. `min-gas-price` and `contractSizeLimit` jump to mind, both can cause forks if configured differently. Currently the only way to guarantee that doesn't happen is to stop your network, change the setting then restart.  ",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1186889374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
