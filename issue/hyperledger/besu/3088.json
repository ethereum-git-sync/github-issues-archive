{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/3088",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/3088/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/3088/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/3088/events",
  "html_url": "https://github.com/hyperledger/besu/issues/3088",
  "id": 1058518292,
  "node_id": "I_kwDODE2jmc4_F7UU",
  "number": 3088,
  "title": "`blockperiodseconds` in IBFT 2.0 falsely interpreted when set to value < 1 ",
  "user": {
    "login": "arne-da",
    "id": 75416280,
    "node_id": "MDQ6VXNlcjc1NDE2Mjgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/75416280?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/arne-da",
    "html_url": "https://github.com/arne-da",
    "followers_url": "https://api.github.com/users/arne-da/followers",
    "following_url": "https://api.github.com/users/arne-da/following{/other_user}",
    "gists_url": "https://api.github.com/users/arne-da/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/arne-da/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/arne-da/subscriptions",
    "organizations_url": "https://api.github.com/users/arne-da/orgs",
    "repos_url": "https://api.github.com/users/arne-da/repos",
    "events_url": "https://api.github.com/users/arne-da/events{/privacy}",
    "received_events_url": "https://api.github.com/users/arne-da/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1921587647,
      "node_id": "MDU6TGFiZWwxOTIxNTg3NjQ3",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/TeamGroot",
      "name": "TeamGroot",
      "color": "1d76db",
      "default": false,
      "description": "GH issues worked on by Groot Team"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-11-19T13:16:11Z",
  "updated_at": "2022-01-13T00:27:02Z",
  "closed_at": "2022-01-13T00:27:02Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Bug report\r\nIf `blockperiodseconds` is set to <1s, e.g. even '0.99' (instead of '1'), the block mining frequency is falsely becoming an extremely low value. I observe blocks being mined as frequent as every 5ms instead of the intended 999ms. \r\n\r\n### Why?\r\nAs a developer writing an application integrating with Besu that needs lower latency than the out-of-the-box options provide, I want to be able to set the block mining frequency with IBFT 2.0 to a number lower than 1s.  \r\n\r\n### Steps to Reproduce (Bug)\r\n1. Follow the steps of the [IBFT 2.0 quickstart tutorial](https://besu.hyperledger.org/en/21.10.2/Tutorials/Private-Network/Create-IBFT-Network/).\r\n2. Do everything as suggested, except change the `blockperiodseconds` in `ibftConfigFile.json` from \r\n```\r\n\"blockperiodseconds\": 2,\r\n```\r\nto \r\n```\r\n\"blockperiodseconds\": 0.99,\r\n```\r\n3. Start the network\r\n\r\n**Expected behavior:** A block mining frequency of 0.99 seconds. \r\n\r\n**Actual behavior:** \r\nFiltering the logs of `node1` for just 'New chain head detected ...' messages, I see blocks being mined extremely frequently: \r\n```\r\n...\r\n2021-11-19 13:44:01.262+01:00 | pool-8-thread-1 | DEBUG | BaseBftController | New chain head detected (block number=122), currently mining on top of 121.\r\n│2021-11-19 13:44:01.276+01:00 | pool-8-thread-1 | DEBUG | BaseBftController | New chain head detected (block number=123), currently mining on top of 122.\r\n│2021-11-19 13:44:01.293+01:00 | pool-8-thread-1 | DEBUG | BaseBftController | New chain head detected (block number=124), currently mining on top of 123.\r\n│2021-11-19 13:44:01.307+01:00 | pool-8-thread-1 | DEBUG | BaseBftController | New chain head detected (block number=125), currently mining on top of 124.\r\n│2021-11-19 13:44:01.324+01:00 | pool-8-thread-1 | DEBUG | BaseBftController | New chain head detected (block number=126), currently mining on top of 125.\r\n│2021-11-19 13:44:01.341+01:00 | pool-8-thread-1 | DEBUG | BaseBftController | New chain head detected (block number=127), currently mining on top of 126.\r\n│2021-11-19 13:44:01.359+01:00 | pool-8-thread-1 | DEBUG | BaseBftController | New chain head detected (block number=128), currently mining on top of 127.\r\n│2021-11-19 13:44:01.374+01:00 | pool-8-thread-1 | DEBUG | BaseBftController | New chain head detected (block number=129), currently mining on top of 128.\r\n│2021-11-19 13:44:01.387+01:00 | pool-8-thread-1 | DEBUG | BaseBftController | New chain head detected (block number=130), currently mining on top of 129.\r\n│2021-11-19 13:44:01.400+01:00 | pool-8-thread-1 | DEBUG | BaseBftController | New chain head detected (block number=131), currently mining on top of 130.\r\n│2021-11-19 13:44:01.413+01:00 | pool-8-thread-1 | DEBUG | BaseBftController | New chain head detected (block number=132), currently mining on top of 131.\r\n│2021-11-19 13:44:01.422+01:00 | pool-8-thread-1 | DEBUG | BaseBftController | New chain head detected (block number=133), currently mining on top of 132.\r\n│2021-11-19 13:44:01.435+01:00 | pool-8-thread-1 | DEBUG | BaseBftController | New chain head detected (block number=134), currently mining on top of 133.\r\n│2021-11-19 13:44:01.449+01:00 | pool-8-thread-1 | DEBUG | BaseBftController | New chain head detected (block number=135), currently mining on top of 134.\r\n│2021-11-19 13:44:01.462+01:00 | pool-8-thread-1 | DEBUG | BaseBftController | New chain head detected (block number=136), currently mining on top of 135.                                         \r\n│2021-11-19 13:44:01.475+01:00 | pool-8-thread-1 | DEBUG | BaseBftController | New chain head detected (block number=137), currently mining on top of 136.\r\n...\r\n```\r\nI observe the intended block mining frequency when changing `blockperiodseconds` from 0.99 to 1 in the genesis file. \r\n\r\n**Frequency:** Always\r\n\r\n### Versions (Add all that apply)\r\n* Software version: `besu/v21.10.2/linux-x86_64/openjdk-java-11`\r\n* Java version: `openjdk 11.0.11 2021-04-20`\r\n* OS Name & Version: Ubuntu 18.04 LTS\r\n* Kernel Version: `Linux arne-Precision-5540 5.4.0-90-generic #101~18.04.1-Ubuntu SMP Fri Oct 22 09:25:04 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux`\r\n\r\n\r\n",
  "closed_by": {
    "login": "siladu",
    "id": 2893793,
    "node_id": "MDQ6VXNlcjI4OTM3OTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2893793?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/siladu",
    "html_url": "https://github.com/siladu",
    "followers_url": "https://api.github.com/users/siladu/followers",
    "following_url": "https://api.github.com/users/siladu/following{/other_user}",
    "gists_url": "https://api.github.com/users/siladu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/siladu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/siladu/subscriptions",
    "organizations_url": "https://api.github.com/users/siladu/orgs",
    "repos_url": "https://api.github.com/users/siladu/repos",
    "events_url": "https://api.github.com/users/siladu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/siladu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/3088/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/3088/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1011575998",
    "html_url": "https://github.com/hyperledger/besu/issues/3088#issuecomment-1011575998",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/3088",
    "id": 1011575998,
    "node_id": "IC_kwDODE2jmc48S2y-",
    "user": {
      "login": "siladu",
      "id": 2893793,
      "node_id": "MDQ6VXNlcjI4OTM3OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2893793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/siladu",
      "html_url": "https://github.com/siladu",
      "followers_url": "https://api.github.com/users/siladu/followers",
      "following_url": "https://api.github.com/users/siladu/following{/other_user}",
      "gists_url": "https://api.github.com/users/siladu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/siladu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/siladu/subscriptions",
      "organizations_url": "https://api.github.com/users/siladu/orgs",
      "repos_url": "https://api.github.com/users/siladu/repos",
      "events_url": "https://api.github.com/users/siladu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/siladu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-13T00:27:02Z",
    "updated_at": "2022-01-13T00:27:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi, thanks for reporting this and apologies for the late reply. \r\nThe reason you're experiencing this behaviour is because `blockperiodseconds` expects integer second values and in this instance 0.99 was getting rounded _down_ 0.\r\nA `blockperiodseconds` of 0 results in blocks being constantly mined which will quickly fill up the disk space.\r\n\r\nWe have added some validation to make the expectation for this config clearer, i.e. only allow positive integers: https://github.com/hyperledger/besu/issues/3093\r\n\r\nThis has also caused some discussion in my team about whether we could or should support decimal block period values. The conclusion is that technically it could work but may require significant changes in how the block validation works. \r\nOne concern is that the block timestamp only has second granularity so if anyone (e.g. a via smart contract) is relying on block timestamps for ordering, then sub-second block production may cause problems.\r\n\r\nDespite it being feasible, this is not something we are planning to add to our roadmap at this stage. However, contributions are always welcome :)",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1011575998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
