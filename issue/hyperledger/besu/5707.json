{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/5707",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/5707/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/5707/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/5707/events",
  "html_url": "https://github.com/hyperledger/besu/issues/5707",
  "id": 1805950871,
  "node_id": "I_kwDODE2jmc5rpJ-X",
  "number": 5707,
  "title": "Unable to place 4 first nodes on multiple servers in IBFT2.0 Network with Besu v23.1.2",
  "user": {
    "login": "khiem20tc",
    "id": 53548789,
    "node_id": "MDQ6VXNlcjUzNTQ4Nzg5",
    "avatar_url": "https://avatars.githubusercontent.com/u/53548789?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/khiem20tc",
    "html_url": "https://github.com/khiem20tc",
    "followers_url": "https://api.github.com/users/khiem20tc/followers",
    "following_url": "https://api.github.com/users/khiem20tc/following{/other_user}",
    "gists_url": "https://api.github.com/users/khiem20tc/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/khiem20tc/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/khiem20tc/subscriptions",
    "organizations_url": "https://api.github.com/users/khiem20tc/orgs",
    "repos_url": "https://api.github.com/users/khiem20tc/repos",
    "events_url": "https://api.github.com/users/khiem20tc/events{/privacy}",
    "received_events_url": "https://api.github.com/users/khiem20tc/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1921587647,
      "node_id": "MDU6TGFiZWwxOTIxNTg3NjQ3",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/TeamGroot",
      "name": "TeamGroot",
      "color": "1d76db",
      "default": false,
      "description": "GH issues worked on by Groot Team"
    },
    {
      "id": 5290172097,
      "node_id": "LA_kwDODE2jmc8AAAABO1GewQ",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/non%20mainnet%20(private%20networks)",
      "name": "non mainnet (private networks)",
      "color": "0052cc",
      "default": false,
      "description": "not related to mainnet features - covers privacy, permissioning, IBFT2, QBFT"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-07-15T07:27:54Z",
  "updated_at": "2023-07-18T00:55:58Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I followed by tutorials and because of the limitation of servers, I need separate 4 nodes on multiple machines: AWS vs DO.\r\n[https://besu.hyperledger.org/23.4.0/private-networks/tutorials/ibft/validators]\r\n\r\n**Issue Description:**\r\nI am encountering an issue with the deployment of an IBFT2.0 network involving four nodes. Three nodes are hosted on AWS instances, and one node is deployed on a DigitalOcean (DO) instance. The network uses Besu v23.1.2 and Java version jdk20. Although the nodes have been successfully synced, the block production process is not functioning as expected.\r\n\r\n**Steps to Reproduce:**\r\n\r\nDeploy three nodes on AWS instances using Besu v23.1.2 and Java version jdk20.\r\nDeploy one node on DigitalOcean (DO) with the same Besu and Java versions.\r\nMy step-by-step start time includes: node1 as a boot node (AWS), node4 (DO), node2 (AWS), node3 (AWS)\r\nConfigure all nodes to use the IBFT2.0 consensus mechanism.\r\nEnsure all necessary ports (including the default Ethereum port 30303) are open for communication among the nodes.\r\nStart each node and monitor the synchronization process.\r\n\r\n**Expected Behavior:**\r\nUpon successful deployment and synchronization of the four nodes, the IBFT2.0 network should function correctly, and the nodes should be able to produce blocks in a distributed manner.\r\n\r\n**Actual Behavior:**\r\nDespite successful node deployment and synchronization, the nodes are not producing blocks as expected. The block production process seems to be stuck or halted, leading to a failure in achieving consensus among the nodes.\r\n\r\n**Additional Information:**\r\n\r\nThe AWS and DO instances are properly provisioned with sufficient resources to handle the network's demands.\r\nThere are no apparent firewall or networking issues, as all nodes are reachable and can sync with each other.\r\nThe time synchronization has been verified to ensure that nodes are operating with the correct time.\r\nPossible Root Causes:\r\n\r\nThere might be an issue with the IBFT2.0 consensus algorithm implementation or configuration that is preventing block production.\r\nThere could be a compatibility issue with Besu v23.1.2 and the Java version jdk20 when running on the specified server infrastructure.\r\nWorkarounds Tried:\r\nAs a workaround, I have attempted to restart the nodes, reconfigure the consensus mechanism, and redeploy the network on fresh instances. However, none of these measures have resolved the block production problem.\r\n\r\nExpected Resolution:\r\nI kindly request the Besu contributors to investigate this issue further to identify the root cause and provide a resolution. The ability to deploy and operate an IBFT2.0 network on multiple servers is crucial for our use case, and we are eager to participate in resolving this matter collaboratively.\r\n\r\nPlease let me know if any additional information or logs are required to diagnose and address the problem effectively. Thank you for your attention to this matter.\r\n\r\nBest regards,\r\n\r\n![image](https://github.com/hyperledger/besu/assets/53548789/3437fa61-497a-4d31-af0d-d5e64f72a94b)\r\n\r\n![image](https://github.com/hyperledger/besu/assets/53548789/faf69bc5-0231-42ad-87b6-d0c42ead43c6)\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/5707/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/5707/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1639113666",
    "html_url": "https://github.com/hyperledger/besu/issues/5707#issuecomment-1639113666",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/5707",
    "id": 1639113666,
    "node_id": "IC_kwDODE2jmc5hsuPC",
    "user": {
      "login": "siladu",
      "id": 2893793,
      "node_id": "MDQ6VXNlcjI4OTM3OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2893793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/siladu",
      "html_url": "https://github.com/siladu",
      "followers_url": "https://api.github.com/users/siladu/followers",
      "following_url": "https://api.github.com/users/siladu/following{/other_user}",
      "gists_url": "https://api.github.com/users/siladu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/siladu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/siladu/subscriptions",
      "organizations_url": "https://api.github.com/users/siladu/orgs",
      "repos_url": "https://api.github.com/users/siladu/repos",
      "events_url": "https://api.github.com/users/siladu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/siladu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-18T00:55:57Z",
    "updated_at": "2023-07-18T00:55:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @khiem20tc, the most common cause of no blocks being produced is a misconfigured extraData in the genesis file. The extraData needs to contain all your validating nodes' node addresses.\r\n\r\nPlease double check that the extraData string you have in your genesis file matches the list of validator addresses that you have set up, and note the validator addresses change if the private node key changes. Besu will auto-generate a private node key if you don't specify one, so redeploying nodes may be cause the keys to change if you don't separately specify them, https://besu.hyperledger.org/development/public-networks/reference/cli/options#node-private-key-file\r\n\r\nMore info about extraData is here:\r\nhttps://besu.hyperledger.org/23.4.0/private-networks/how-to/configure/consensus/ibft#extra-data\r\n\r\nThere's two ways you can validate the extraData is correct:\r\n1. Decode the extraData string as RLP, e.g. using this tool https://toolkit.abdk.consulting/ethereum#rlp which will give you a list of node addresses\r\n2. Manually re-encode your deployed nodes' address using `besu rlp encode --from=toEncode.json` as shown in the docs and then compare the result with your genesis file.\r\n\r\nI recommend getting used to configuring the network using https://docs.goquorum.consensys.net/tutorials/quorum-dev-quickstart/using-the-quickstart on one machine first, before you introduce the complication of multiple machines.\r\n\r\nIf this does not resolve your issue, please can you post some more logs, maybe can try increasing to DEBUG level as well: https://besu.hyperledger.org/development/public-networks/how-to/monitor/logging",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1639113666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
