{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/2868",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/2868/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/2868/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/2868/events",
  "html_url": "https://github.com/hyperledger/besu/issues/2868",
  "id": 1022341003,
  "node_id": "I_kwDODE2jmc4876-L",
  "number": 2868,
  "title": "QBFT - Select correct ValidatorProvider when transitioning from validator contract to block header mode",
  "user": {
    "login": "siladu",
    "id": 2893793,
    "node_id": "MDQ6VXNlcjI4OTM3OTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2893793?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/siladu",
    "html_url": "https://github.com/siladu",
    "followers_url": "https://api.github.com/users/siladu/followers",
    "following_url": "https://api.github.com/users/siladu/following{/other_user}",
    "gists_url": "https://api.github.com/users/siladu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/siladu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/siladu/subscriptions",
    "organizations_url": "https://api.github.com/users/siladu/orgs",
    "repos_url": "https://api.github.com/users/siladu/repos",
    "events_url": "https://api.github.com/users/siladu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/siladu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1921587647,
      "node_id": "MDU6TGFiZWwxOTIxNTg3NjQ3",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/TeamGroot",
      "name": "TeamGroot",
      "color": "1d76db",
      "default": false,
      "description": "GH issues worked on by Groot Team"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "siladu",
    "id": 2893793,
    "node_id": "MDQ6VXNlcjI4OTM3OTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2893793?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/siladu",
    "html_url": "https://github.com/siladu",
    "followers_url": "https://api.github.com/users/siladu/followers",
    "following_url": "https://api.github.com/users/siladu/following{/other_user}",
    "gists_url": "https://api.github.com/users/siladu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/siladu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/siladu/subscriptions",
    "organizations_url": "https://api.github.com/users/siladu/orgs",
    "repos_url": "https://api.github.com/users/siladu/repos",
    "events_url": "https://api.github.com/users/siladu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/siladu/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "siladu",
      "id": 2893793,
      "node_id": "MDQ6VXNlcjI4OTM3OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2893793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/siladu",
      "html_url": "https://github.com/siladu",
      "followers_url": "https://api.github.com/users/siladu/followers",
      "following_url": "https://api.github.com/users/siladu/following{/other_user}",
      "gists_url": "https://api.github.com/users/siladu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/siladu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/siladu/subscriptions",
      "organizations_url": "https://api.github.com/users/siladu/orgs",
      "repos_url": "https://api.github.com/users/siladu/repos",
      "events_url": "https://api.github.com/users/siladu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/siladu/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2021-10-11T07:07:11Z",
  "updated_at": "2021-10-13T23:25:16Z",
  "closed_at": "2021-10-13T23:25:16Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\nDuring the transition from contract mode to block header mode, when creating the extra data for a new block, we need to look ahead to the next block's validatorProvider to obtain the nonEmpty voteProvider associated with the BlockValidatorProvider.\n\n### Acceptance Criteria\n**Given** we are transitioning from contract to block header mode\n**When** a block’s extra data is created\n**Then** it should select the correct validatorProvider and not error upon selecting the TransactionValidatorProvider with an empty voteProvider.\n\n(The following is a more robust AC which gives better asserts in an automated test than the above AC's \"ensure it doesn't error\")\n**Given** we are transitioning from contract to block header mode\n**When** a block’s extra data is created\n**Then** it should use the same validators as the previous block (which will be the list of validators currently in the contract)\n\n### Steps to Reproduce (Bug)\n1. Start a node using a transition config like below:\n```\n\"transitions\": {\n      \"qbft\": [\n        {\n          \"block\": 2,\n          \"validatorselectionmode\": \"contract\",\n          \"validatorcontractaddress\": \"0x0000000000000000000000000000000000008888\"\n        },\n        {\n          \"block\": 4,\n          \"validatorselectionmode\": \"blockheader\"\n        }\n      ]\n    }\n```\n2. Wait for a block to be mined for the transition back to block header mode\n3. See the block creation fail due to this error:\n```\n2021-10-06 21:10:01.007+02:00 | pool-8-thread-1 | ERROR | EventMultiplexer | State machine threw exception while processing event \\{BlockTimerExpiry{Round Identifier=ConsensusRoundIdentifier{Sequence=4, Round=0}}\\}\njava.lang.IllegalStateException: Bft requires a vote provider\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:510)\n\tat org.hyperledger.besu.consensus.common.bft.blockcreation.BftBlockCreatorFactory.createExtraData(BftBlockCreatorFactory.java:108)\n\tat org.hyperledger.besu.consensus.qbft.blockcreation.QbftBlockCreatorFactory.createExtraData(QbftBlockCreatorFactory.java:93)\n\tat org.hyperledger.besu.consensus.common.bft.blockcreation.BftBlockCreatorFactory.lambda$create$1(BftBlockCreatorFactory.java:82)\n\tat org.hyperledger.besu.ethereum.blockcreation.AbstractBlockCreator.createBlock(AbstractBlockCreator.java:182)\n\tat org.hyperledger.besu.ethereum.blockcreation.AbstractBlockCreator.createBlock(AbstractBlockCreator.java:126)\n\tat org.hyperledger.besu.consensus.qbft.statemachine.QbftRound.createAndSendProposalMessage(QbftRound.java:100)\n\tat org.hyperledger.besu.consensus.qbft.statemachine.QbftBlockHeightManager.handleBlockTimerExpiry(QbftBlockHeightManager.java:125)\n\tat org.hyperledger.besu.consensus.common.bft.statemachine.BaseBftController.handleBlockTimerExpiry(BaseBftController.java:140)\n\tat org.hyperledger.besu.consensus.common.bft.EventMultiplexer.handleBftEvent(EventMultiplexer.java:54)\n\tat java.base/java.util.Optional.ifPresent(Optional.java:183)\n\tat org.hyperledger.besu.consensus.common.bft.BftProcessor.run(BftProcessor.java:60)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n```",
  "closed_by": {
    "login": "jframe",
    "id": 909467,
    "node_id": "MDQ6VXNlcjkwOTQ2Nw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/909467?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jframe",
    "html_url": "https://github.com/jframe",
    "followers_url": "https://api.github.com/users/jframe/followers",
    "following_url": "https://api.github.com/users/jframe/following{/other_user}",
    "gists_url": "https://api.github.com/users/jframe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jframe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jframe/subscriptions",
    "organizations_url": "https://api.github.com/users/jframe/orgs",
    "repos_url": "https://api.github.com/users/jframe/repos",
    "events_url": "https://api.github.com/users/jframe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jframe/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/2868/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/2868/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
