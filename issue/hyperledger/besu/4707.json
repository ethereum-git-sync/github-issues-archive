{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/4707",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/4707/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/4707/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/4707/events",
  "html_url": "https://github.com/hyperledger/besu/issues/4707",
  "id": 1455484261,
  "node_id": "I_kwDODE2jmc5WwO1l",
  "number": 4707,
  "title": "Memory leak during full sync",
  "user": {
    "login": "ahamlat",
    "id": 5099602,
    "node_id": "MDQ6VXNlcjUwOTk2MDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5099602?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ahamlat",
    "html_url": "https://github.com/ahamlat",
    "followers_url": "https://api.github.com/users/ahamlat/followers",
    "following_url": "https://api.github.com/users/ahamlat/following{/other_user}",
    "gists_url": "https://api.github.com/users/ahamlat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ahamlat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ahamlat/subscriptions",
    "organizations_url": "https://api.github.com/users/ahamlat/orgs",
    "repos_url": "https://api.github.com/users/ahamlat/repos",
    "events_url": "https://api.github.com/users/ahamlat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ahamlat/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-11-18T17:07:23Z",
  "updated_at": "2023-03-28T23:21:42Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "<!-- Have you done the following? -->\r\n<!--   * read the Code of Conduct? By filing an Issue, you are expected to -->  \r\n<!--     comply with it, including treating everyone with respect: -->\r\n<!--     https://github.com/hyperledger/besu/blob/main/CODE_OF_CONDUCT.md -->\r\n<!--   * Reproduced the issue in the latest version of the software -->\r\n<!--   * Read the debugging docs: https://besu.hyperledger.org/en/stable/HowTo/Monitor/Logging/ -->\r\n<!--   * Duplicate Issue check:  https://github.com/search?q=+is%3Aissue+repo%3Ahyperledger/Besu -->\r\n<!-- Note:  Not all sections will apply to all issue types. -->\r\n\r\n### Description\r\nAnalysing a heap dump from an archive node that went out of memory, I noticed two different memory issues and may be three \r\n\r\n<img width=\"1160\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5099602/202752116-f15b0c3a-02ec-4262-a975-c28b710acfa9.png\">\r\n \r\nAs the first memory leak is already addressed by @fab-10 in this PR  #4705, we'll focus here on the second memory issue. \r\n\r\nThe second issue is related to CodeCache, where the defined weigher with CodeScale class doesn't work for some use cases. We found in the heap dump some entries in the cache (CodeV0 instances) are referencing big byte arrays, much bigger than [bytes](https://github.com/hyperledger/besu/blob/f20b4b3bd1af09730b1e1172643d09f3691ee420/evm/src/main/java/org/hyperledger/besu/evm/code/CodeV0.java#L32) field size. We can see an example below that bytes of type ArrayWrappingBytes is referencing the big array with an offset and a length. As this field keeps a strong reference to the byte array, and the field is hold by the cache until reaching some threshold (CodeScale weigher), and this weigher does not take in account the array size but only the ArrayWrappingBytes instance length, the memory grows upon the defined limit.\r\n\r\n<img width=\"1263\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5099602/202755220-a427d51d-34ff-4a00-b302-6b31ac9cd957.png\">\r\n\r\nWe can see also that some of these big byte's arrays are referenced by several ArrayWrappingBytes instances \r\n\r\n<img width=\"1266\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5099602/202758009-e74bf4f5-64be-414e-bc99-8c0cad6136dd.png\">\r\n\r\nThe explication of this behaviour may be the usage of some of the methods (ex. slice) in Tuweni lib that creates only a reference to an existing array instead of creating a new one, to avoid a waste of memory and gain in performance.\r\n\r\nI noticed also that some of the cases are just fine, CodeV0 instance is holding a reference to byte array that has the same length.\r\n\r\n<img width=\"1262\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5099602/202759147-b397eb54-d999-4035-843d-8f74364f0242.png\">\r\n\r\nThis means IMO that, sometimes[ EVM.getCode](https://github.com/hyperledger/besu/blob/f20b4b3bd1af09730b1e1172643d09f3691ee420/evm/src/main/java/org/hyperledger/besu/evm/EVM.java#L322) is called with an input that is created by one of Tuweni methods or other methods that hold a reference to a bigger array.\r\n\r\n@matkt analysed the content of this big arrays and found interesting results. Could you complete the issue ?\r\n\r\n### Steps to Reproduce (Bug)\r\nBesu Full sync.\r\n\r\n**Expected behavior:** [What you expect to happen]\r\nThe code cache retained memory shouldn't be bigger then the defined threshold\r\n\r\n**Actual behavior:** [What actually happens]\r\nThe code cache retained memory is much bigger then the defined threshold\r\n\r\n**Frequency:** [What percentage of the time does it occur?]\r\nHard to say, I didn't have the issue in one of the full syncing nodes.\r\n\r\n### Versions (Add all that apply)\r\nrelease-22.10.1-alpha\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/4707/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/4707/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1320306569",
    "html_url": "https://github.com/hyperledger/besu/issues/4707#issuecomment-1320306569",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/4707",
    "id": 1320306569,
    "node_id": "IC_kwDODE2jmc5OskeJ",
    "user": {
      "login": "matkt",
      "id": 26581503,
      "node_id": "MDQ6VXNlcjI2NTgxNTAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/26581503?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matkt",
      "html_url": "https://github.com/matkt",
      "followers_url": "https://api.github.com/users/matkt/followers",
      "following_url": "https://api.github.com/users/matkt/following{/other_user}",
      "gists_url": "https://api.github.com/users/matkt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matkt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matkt/subscriptions",
      "organizations_url": "https://api.github.com/users/matkt/orgs",
      "repos_url": "https://api.github.com/users/matkt/repos",
      "events_url": "https://api.github.com/users/matkt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matkt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-18T17:17:02Z",
    "updated_at": "2022-11-21T16:43:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "by running this code to parse the byte referenced\r\n```\r\npublic static void main(final String[] args) throws IOException {\r\n\r\n  Path fileName\r\n          = Path.of(\"/Documents/res.txt\");\r\n\r\n  // Now calling Files.readString() method to\r\n  // read the file\r\n  String str = Files.readString(fileName);\r\n\r\n\r\n  BytesValueRLPInput bytesValueRLPInput = new BytesValueRLPInput(Bytes.fromHexString(str.replace(\"fa4035b501\",\"\")), false);\r\n  System.out.println(bytesValueRLPInput.readList(rlp -> BlockBody.readFrom(rlp, new MainnetBlockHeaderFunctions())).size());\r\n}\r\n```\r\n\r\nI found that it is a list of 172 block bodies. This node is doing a fullsync so It’s normal. We received this block bodies from another peer as RLP . we create a sub object from an RLP and we are using readBytes(). We need to know that this method is doing a slice to have the sub array. Slice is not doing a copy but just link the same array with another offset \r\n\r\n**So we have something like that**\r\n- Receive 172 bodies from peers as RLP\r\n   - Create a list of BlockBody class\r\n      - For each block body we wreate a list of Transaction class\r\n        - Each transaction has a payload\r\n           - We are using the payload to create a Code and putting this one in the cache [https://github.com/hyperledger/besu/blob/f20b4b3bd1af09730b1e1172643d09f3691ee420/[…]erledger/besu/ethereum/mainnet/MainnetTransactionProcessor.java](https://github.com/hyperledger/besu/blob/f20b4b3bd1af09730b1e1172643d09f3691ee420/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/MainnetTransactionProcessor.java#L373)\r\n           \r\nthe diff seems to be here\r\n[https://github.com/hyperledger/besu/blob/f20b4b3bd1af09730b1e1172643d09f3691ee420/[…]erledger/besu/ethereum/mainnet/MainnetTransactionProcessor.java](https://github.com/hyperledger/besu/blob/f20b4b3bd1af09730b1e1172643d09f3691ee420/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/MainnetTransactionProcessor.java#L381)\r\nvs\r\n[https://github.com/hyperledger/besu/blob/f20b4b3bd1af09730b1e1172643d09f3691ee420/[…]erledger/besu/ethereum/mainnet/MainnetTransactionProcessor.java](https://github.com/hyperledger/besu/blob/f20b4b3bd1af09730b1e1172643d09f3691ee420/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/MainnetTransactionProcessor.java#L396)\r\n\r\nso contrat creation is referencing all the block bodies and contract from DB has only the code of the contract",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1320306569/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1321986863",
    "html_url": "https://github.com/hyperledger/besu/issues/4707#issuecomment-1321986863",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/4707",
    "id": 1321986863,
    "node_id": "IC_kwDODE2jmc5Oy-sv",
    "user": {
      "login": "ahamlat",
      "id": 5099602,
      "node_id": "MDQ6VXNlcjUwOTk2MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5099602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahamlat",
      "html_url": "https://github.com/ahamlat",
      "followers_url": "https://api.github.com/users/ahamlat/followers",
      "following_url": "https://api.github.com/users/ahamlat/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahamlat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahamlat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahamlat/subscriptions",
      "organizations_url": "https://api.github.com/users/ahamlat/orgs",
      "repos_url": "https://api.github.com/users/ahamlat/repos",
      "events_url": "https://api.github.com/users/ahamlat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahamlat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-21T12:29:20Z",
    "updated_at": "2022-11-21T12:29:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shemnon I think this is not related to your last PRs on EOF, but it would be great to have your opinion on this. ",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1321986863/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1347351982",
    "html_url": "https://github.com/hyperledger/besu/issues/4707#issuecomment-1347351982",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/4707",
    "id": 1347351982,
    "node_id": "IC_kwDODE2jmc5QTvWu",
    "user": {
      "login": "non-fungible-nelson",
      "id": 85905982,
      "node_id": "MDQ6VXNlcjg1OTA1OTgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/85905982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/non-fungible-nelson",
      "html_url": "https://github.com/non-fungible-nelson",
      "followers_url": "https://api.github.com/users/non-fungible-nelson/followers",
      "following_url": "https://api.github.com/users/non-fungible-nelson/following{/other_user}",
      "gists_url": "https://api.github.com/users/non-fungible-nelson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/non-fungible-nelson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/non-fungible-nelson/subscriptions",
      "organizations_url": "https://api.github.com/users/non-fungible-nelson/orgs",
      "repos_url": "https://api.github.com/users/non-fungible-nelson/repos",
      "events_url": "https://api.github.com/users/non-fungible-nelson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/non-fungible-nelson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-12T21:25:12Z",
    "updated_at": "2022-12-12T21:25:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "What is the status of this issue? ",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1347351982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1355195038",
    "html_url": "https://github.com/hyperledger/besu/issues/4707#issuecomment-1355195038",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/4707",
    "id": 1355195038,
    "node_id": "IC_kwDODE2jmc5QxqKe",
    "user": {
      "login": "ahamlat",
      "id": 5099602,
      "node_id": "MDQ6VXNlcjUwOTk2MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5099602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahamlat",
      "html_url": "https://github.com/ahamlat",
      "followers_url": "https://api.github.com/users/ahamlat/followers",
      "following_url": "https://api.github.com/users/ahamlat/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahamlat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahamlat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahamlat/subscriptions",
      "organizations_url": "https://api.github.com/users/ahamlat/orgs",
      "repos_url": "https://api.github.com/users/ahamlat/repos",
      "events_url": "https://api.github.com/users/ahamlat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahamlat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-16T16:40:12Z",
    "updated_at": "2022-12-16T16:40:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "The status is open, I'm still waiting a feedback from @shemnon to confirm/refute @matkt's analysis.",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1355195038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1405080116",
    "html_url": "https://github.com/hyperledger/besu/issues/4707#issuecomment-1405080116",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/4707",
    "id": 1405080116,
    "node_id": "IC_kwDODE2jmc5Tv9I0",
    "user": {
      "login": "non-fungible-nelson",
      "id": 85905982,
      "node_id": "MDQ6VXNlcjg1OTA1OTgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/85905982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/non-fungible-nelson",
      "html_url": "https://github.com/non-fungible-nelson",
      "followers_url": "https://api.github.com/users/non-fungible-nelson/followers",
      "following_url": "https://api.github.com/users/non-fungible-nelson/following{/other_user}",
      "gists_url": "https://api.github.com/users/non-fungible-nelson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/non-fungible-nelson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/non-fungible-nelson/subscriptions",
      "organizations_url": "https://api.github.com/users/non-fungible-nelson/orgs",
      "repos_url": "https://api.github.com/users/non-fungible-nelson/repos",
      "events_url": "https://api.github.com/users/non-fungible-nelson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/non-fungible-nelson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-26T14:26:10Z",
    "updated_at": "2023-01-26T14:26:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ahamlat - Status ping again and @shemnon. Any comments? ",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1405080116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1487729867",
    "html_url": "https://github.com/hyperledger/besu/issues/4707#issuecomment-1487729867",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/4707",
    "id": 1487729867,
    "node_id": "IC_kwDODE2jmc5YrPTL",
    "user": {
      "login": "nowjean",
      "id": 38276102,
      "node_id": "MDQ6VXNlcjM4Mjc2MTAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38276102?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nowjean",
      "html_url": "https://github.com/nowjean",
      "followers_url": "https://api.github.com/users/nowjean/followers",
      "following_url": "https://api.github.com/users/nowjean/following{/other_user}",
      "gists_url": "https://api.github.com/users/nowjean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nowjean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nowjean/subscriptions",
      "organizations_url": "https://api.github.com/users/nowjean/orgs",
      "repos_url": "https://api.github.com/users/nowjean/repos",
      "events_url": "https://api.github.com/users/nowjean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nowjean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-28T23:21:42Z",
    "updated_at": "2023-03-28T23:21:42Z",
    "author_association": "NONE",
    "body": "Can it be temporary fix with restarting node which have memory leak issue?\r\n\r\nI found one of besu node took a lot of memory and then, I restarted that node. Now it has been working correctly.",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1487729867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
