{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/1939",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/1939/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/1939/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/1939/events",
  "html_url": "https://github.com/hyperledger/besu/issues/1939",
  "id": 814228471,
  "node_id": "MDU6SXNzdWU4MTQyMjg0NzE=",
  "number": 1939,
  "title": "NullpointerException during mainnet full synchronization (with experimental bonsai trie storage mode)",
  "user": {
    "login": "matkt",
    "id": 26581503,
    "node_id": "MDQ6VXNlcjI2NTgxNTAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/26581503?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/matkt",
    "html_url": "https://github.com/matkt",
    "followers_url": "https://api.github.com/users/matkt/followers",
    "following_url": "https://api.github.com/users/matkt/following{/other_user}",
    "gists_url": "https://api.github.com/users/matkt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/matkt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/matkt/subscriptions",
    "organizations_url": "https://api.github.com/users/matkt/orgs",
    "repos_url": "https://api.github.com/users/matkt/repos",
    "events_url": "https://api.github.com/users/matkt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/matkt/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-02-23T08:17:10Z",
  "updated_at": "2021-03-01T16:06:54Z",
  "closed_at": "2021-03-01T16:06:54Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "\n### Description\n\nAn error appeared during mainnet full synchronization. This doesn't seem to be related to fastsync and it stops synchronization on Block **11 905 272**\n\nhttps://grafana-metrics-ohio.ops.pegasys.tech/d/5S-6O8VZk/besu-overview?var-system=dev-besu-ohio-mainnet-karim-bonsai-trie-test-fast-final\n\n\n### Steps to Reproduce (Bug)\nRun a mainnet synchronisation\n\n\n**Expected behavior:** Import the block correctly\n\n**Actual behavior:** Throw an exception\n\n\n`{\"timestamp\":\"2021-02-22T06:38:36,407\",\"level\":\"ERROR\",\"thread\":\"EthScheduler-Workers-2\",\"class\":\"MainnetTransactionProcessor\",\"message\":\"Critical Exception Processing Transaction\",\"throwable\":\" java.lang.NullPointerException\\n\\tat java.base/java.util.Objects.requireNonNull(Objects.java:221)\\n\\tat java.base/java.util.Optional.<init>(Optional.java:107)\\n\\tat java.base/java.util.Optional.of(Optional.java:120)\\n\\tat org.hyperledger.besu.ethereum.bonsai.BonsaiWorldStateUpdater.getStorageValueBySlotHash(BonsaiWorldStateUpdater.java:297)\\n\\tat org.hyperledger.besu.ethereum.bonsai.BonsaiWorldStateUpdater.getStorageValue(BonsaiWorldStateUpdater.java:288)\\n\\tat org.hyperledger.besu.ethereum.bonsai.BonsaiAccount.getStorageValue(BonsaiAccount.java:242)\\n\\tat org.hyperledger.besu.ethereum.core.UpdateTrackingAccount.getStorageValue(UpdateTrackingAccount.java:217)\\n\\tat org.hyperledger.besu.ethereum.core.UpdateTrackingAccount.getStorageValue(UpdateTrackingAccount.java:217)\\n\\tat org.hyperledger.besu.ethereum.core.UpdateTrackingAccount.getStorageValue(UpdateTrackingAccount.java:217)\\n\\tat org.hyperledger.besu.ethereum.core.UpdateTrackingAccount.getStorageValue(UpdateTrackingAccount.java:217)\\n\\tat org.hyperledger.besu.ethereum.mainnet.IstanbulGasCalculator.calculateStorageCost(IstanbulGasCalculator.java:72)\\n\\tat org.hyperledger.besu.ethereum.vm.operations.SStoreOperation.execute(SStoreOperation.java:66)\\n\\tat org.hyperledger.besu.ethereum.vm.EVM.lambda$executeNextOperation$0(EVM.java:82)\\n\\tat org.hyperledger.besu.ethereum.vm.OperationTracer.lambda$static$0(OperationTracer.java:26)\\n\\tat org.hyperledger.besu.ethereum.vm.EVM.executeNextOperation(EVM.java:77)\\n\\tat org.hyperledger.besu.ethereum.vm.EVM.runToHalt(EVM.java:55)\\n\\tat org.hyperledger.besu.ethereum.mainnet.AbstractMessageProcessor.codeExecute(AbstractMessageProcessor.java:155)\\n\\tat org.hyperledger.besu.ethereum.mainnet.AbstractMessageProcessor.process(AbstractMessageProcessor.java:167)\\n\\tat org.hyperledger.besu.ethereum.mainnet.MainnetTransactionProcessor.process(MainnetTransactionProcessor.java:446)\\n\\tat org.hyperledger.besu.ethereum.mainnet.MainnetTransactionProcessor.processTransaction(MainnetTransactionProcessor.java:360)\\n\\tat org.hyperledger.besu.ethereum.mainnet.AbstractBlockProcessor.processBlock(AbstractBlockProcessor.java:147)\\n\\tat org.hyperledger.besu.ethereum.mainnet.AbstractBlockProcessor.processBlock(AbstractBlockProcessor.java:43)\\n\\tat org.hyperledger.besu.ethereum.mainnet.BlockProcessor.processBlock(BlockProcessor.java:65)\\n\\tat org.hyperledger.besu.ethereum.MainnetBlockValidator.processBlock(MainnetBlockValidator.java:135)\\n\\tat org.hyperledger.besu.ethereum.MainnetBlockValidator.validateAndProcessBlock(MainnetBlockValidator.java:108)\\n\\tat org.hyperledger.besu.ethereum.mainnet.MainnetBlockImporter.importBlock(MainnetBlockImporter.java:45)\\n\\tat org.hyperledger.besu.ethereum.core.BlockImporter.importBlock(BlockImporter.java:44)\\n\\tat org.hyperledger.besu.ethereum.eth.sync.tasks.PersistBlockTask.executeTask(PersistBlockTask.java:199)\\n\\tat org.hyperledger.besu.ethereum.eth.manager.task.AbstractEthTask.executeTaskTimed(AbstractEthTask.java:150)\\n\\tat org.hyperledger.besu.ethereum.eth.manager.task.AbstractEthTask.run(AbstractEthTask.java:75)\\n\\tat org.hyperledger.besu.ethereum.eth.sync.BlockPropagationManager.runImportTask(BlockPropagationManager.java:347)\\n\\tat org.hyperledger.besu.ethereum.eth.sync.BlockPropagationManager.validateAndProcessPendingBlock(BlockPropagationManager.java:325)\\n\\tat org.hyperledger.besu.ethereum.eth.sync.BlockPropagationManager.lambda$importOrSavePendingBlock$5(BlockPropagationManager.java:313)\\n\\tat org.hyperledger.besu.util.FutureUtils.propagateResult(FutureUtils.java:97)\\n\\tat org.hyperledger.besu.ethereum.eth.manager.EthScheduler.lambda$scheduleSyncWorkerTask$0(EthScheduler.java:108)\\n\\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\\n\\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\n\"}\n`\n\n",
  "closed_by": {
    "login": "matkt",
    "id": 26581503,
    "node_id": "MDQ6VXNlcjI2NTgxNTAz",
    "avatar_url": "https://avatars.githubusercontent.com/u/26581503?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/matkt",
    "html_url": "https://github.com/matkt",
    "followers_url": "https://api.github.com/users/matkt/followers",
    "following_url": "https://api.github.com/users/matkt/following{/other_user}",
    "gists_url": "https://api.github.com/users/matkt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/matkt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/matkt/subscriptions",
    "organizations_url": "https://api.github.com/users/matkt/orgs",
    "repos_url": "https://api.github.com/users/matkt/repos",
    "events_url": "https://api.github.com/users/matkt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/matkt/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/1939/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/1939/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/784336187",
    "html_url": "https://github.com/hyperledger/besu/issues/1939#issuecomment-784336187",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1939",
    "id": 784336187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDMzNjE4Nw==",
    "user": {
      "login": "shemnon",
      "id": 38109,
      "node_id": "MDQ6VXNlcjM4MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shemnon",
      "html_url": "https://github.com/shemnon",
      "followers_url": "https://api.github.com/users/shemnon/followers",
      "following_url": "https://api.github.com/users/shemnon/following{/other_user}",
      "gists_url": "https://api.github.com/users/shemnon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shemnon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shemnon/subscriptions",
      "organizations_url": "https://api.github.com/users/shemnon/orgs",
      "repos_url": "https://api.github.com/users/shemnon/repos",
      "events_url": "https://api.github.com/users/shemnon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shemnon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-23T16:39:16Z",
    "updated_at": "2021-02-23T16:39:16Z",
    "author_association": "MEMBER",
    "body": "I think the fix is to make BonsaiWorldStateUpdater.java:297 an Optional.ofNullable.  The updated portion of the value can validly be null (indicating it was deleted), and that translates downstream into a zero.  The call a few steps down deals with an empty optional.",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/784336187/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/784454865",
    "html_url": "https://github.com/hyperledger/besu/issues/1939#issuecomment-784454865",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1939",
    "id": 784454865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDQ1NDg2NQ==",
    "user": {
      "login": "shemnon",
      "id": 38109,
      "node_id": "MDQ6VXNlcjM4MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shemnon",
      "html_url": "https://github.com/shemnon",
      "followers_url": "https://api.github.com/users/shemnon/followers",
      "following_url": "https://api.github.com/users/shemnon/following{/other_user}",
      "gists_url": "https://api.github.com/users/shemnon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shemnon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shemnon/subscriptions",
      "organizations_url": "https://api.github.com/users/shemnon/orgs",
      "repos_url": "https://api.github.com/users/shemnon/repos",
      "events_url": "https://api.github.com/users/shemnon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shemnon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-23T19:30:34Z",
    "updated_at": "2021-02-23T19:30:34Z",
    "author_association": "MEMBER",
    "body": "Simple fix result in this stack trace - \r\n{\"timestamp\":\"2021-02-23T19:27:20,265\",\"level\":\"ERROR\",\"thread\":\"EthScheduler-Services-5 (importBlock)\",\"class\":\"PipelineChainDownloader\",\"message\":\"Chain download failed. Restarting after short delay.\",\"throwable\":\" java.util.concurrent.CompletionException: java.lang.RuntimeException: World State Root does not match expected value, header 0xfee64192f1b5c0dbfadacfaf08aca66313c83aca99f7a19190cbd95f9d265f87 calculated 0x9b45a625b3ae077f7e3c879e51b1c1cbb170c4a7e0bc6caa246cffebf46b7fb5\r\nat java.base/java.util.concurrent.CompletableFuture.encodeRelay(CompletableFuture.java:367)\r\nat java.base/java.util.concurrent.CompletableFuture.completeRelay(CompletableFuture.java:376)\r\nat java.base/java.util.concurrent.CompletableFuture$UniRelay.tryFire(CompletableFuture.java:1019)\r\nat java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)\r\nat java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2088)\r\nat org.hyperledger.besu.services.pipeline.Pipeline.abort(Pipeline.java:179)\r\nat org.hyperledger.besu.services.pipeline.Pipeline.lambda$runWithErrorHandling$3(Pipeline.java:158)\r\nat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\nat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\nat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\nat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\nat java.base/java.lang.Thread.run(Thread.java:829)\\nCaused by: java.lang.RuntimeException: World State Root does not match expected value, header 0xfee64192f1b5c0dbfadacfaf08aca66313c83aca99f7a19190cbd95f9d265f87 calculated 0x9b45a625b3ae077f7e3c879e51b1c1cbb170c4a7e0bc6caa246cffebf46b7fb5\r\nat org.hyperledger.besu.ethereum.bonsai.BonsaiPersistedWorldState.persist(BonsaiPersistedWorldState.java:244)\r\nat org.hyperledger.besu.ethereum.mainnet.AbstractBlockProcessor.processBlock(AbstractBlockProcessor.java:208)\r\nat org.hyperledger.besu.ethereum.mainnet.AbstractBlockProcessor.processBlock(AbstractBlockProcessor.java:44)\r\nat org.hyperledger.besu.ethereum.mainnet.BlockProcessor.processBlock(BlockProcessor.java:75)\r\nat org.hyperledger.besu.ethereum.MainnetBlockValidator.processBlock(MainnetBlockValidator.java:152)\r\nat org.hyperledger.besu.ethereum.MainnetBlockValidator.validateAndProcessBlock(MainnetBlockValidator.java:110)\r\nat org.hyperledger.besu.ethereum.mainnet.MainnetBlockImporter.importBlock(MainnetBlockImporter.java:45)\r\nat org.hyperledger.besu.ethereum.core.BlockImporter.importBlock(BlockImporter.java:44)\r\nat org.hyperledger.besu.ethereum.eth.sync.fullsync.FullImportBlockStep.accept(FullImportBlockStep.java:59)\r\nat org.hyperledger.besu.ethereum.eth.sync.fullsync.FullImportBlockStep.accept(FullImportBlockStep.java:31)\r\nat org.hyperledger.besu.services.pipeline.CompleterStage.run(CompleterStage.java:37)\r\nat org.hyperledger.besu.services.pipeline.Pipeline.lambda$runWithErrorHandling$3(Pipeline.java:151)\\n\\t... 5 more\\n\"}",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/784454865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/785431448",
    "html_url": "https://github.com/hyperledger/besu/issues/1939#issuecomment-785431448",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1939",
    "id": 785431448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTQzMTQ0OA==",
    "user": {
      "login": "shemnon",
      "id": 38109,
      "node_id": "MDQ6VXNlcjM4MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shemnon",
      "html_url": "https://github.com/shemnon",
      "followers_url": "https://api.github.com/users/shemnon/followers",
      "following_url": "https://api.github.com/users/shemnon/following{/other_user}",
      "gists_url": "https://api.github.com/users/shemnon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shemnon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shemnon/subscriptions",
      "organizations_url": "https://api.github.com/users/shemnon/orgs",
      "repos_url": "https://api.github.com/users/shemnon/repos",
      "events_url": "https://api.github.com/users/shemnon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shemnon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-24T22:38:58Z",
    "updated_at": "2021-02-24T22:38:58Z",
    "author_association": "MEMBER",
    "body": "Some more detail.  Looks like it's 2/3 tx combo.\r\n\r\nFirst, we need to have a call that creates a new contract, that writes to it's contract storage, then self destructs.  It needs to not exist in the world state prior to the block being processed.\r\n\r\nNext, we have a second TX, that also create a contract at the same address, and then writes to a field that is the same value that the field had prior to reaching self-destruct.\r\n\r\nI think I need to add a special case for deleted accounts that when the account didn't exist prior to the block we remove the bonsaivalue from the trie log instead of setting the updated to null.  Or something else....",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/785431448/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
