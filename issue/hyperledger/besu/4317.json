{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/4317",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/4317/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/4317/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/4317/events",
  "html_url": "https://github.com/hyperledger/besu/issues/4317",
  "id": 1352302218,
  "node_id": "I_kwDODE2jmc5Qmn6K",
  "number": 4317,
  "title": "java.lang.IllegalStateException: Storage has been closed when stopping",
  "user": {
    "login": "fab-10",
    "id": 91944855,
    "node_id": "U_kgDOBXr3lw",
    "avatar_url": "https://avatars.githubusercontent.com/u/91944855?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fab-10",
    "html_url": "https://github.com/fab-10",
    "followers_url": "https://api.github.com/users/fab-10/followers",
    "following_url": "https://api.github.com/users/fab-10/following{/other_user}",
    "gists_url": "https://api.github.com/users/fab-10/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fab-10/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fab-10/subscriptions",
    "organizations_url": "https://api.github.com/users/fab-10/orgs",
    "repos_url": "https://api.github.com/users/fab-10/repos",
    "events_url": "https://api.github.com/users/fab-10/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fab-10/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1537362500,
      "node_id": "MDU6TGFiZWwxNTM3MzYyNTAw",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "7057ff",
      "default": true,
      "description": "Good for newcomers"
    },
    {
      "id": 2129007612,
      "node_id": "MDU6TGFiZWwyMTI5MDA3NjEy",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/dev%20experience",
      "name": "dev experience",
      "color": "2a0b89",
      "default": false,
      "description": "The build system, things that enable easier development etc."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-08-26T13:53:34Z",
  "updated_at": "2023-04-12T17:37:30Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "<!-- Have you done the following? -->\r\n<!--   * read the Code of Conduct? By filing an Issue, you are expected to -->  \r\n<!--     comply with it, including treating everyone with respect: -->\r\n<!--     https://github.com/hyperledger/besu/blob/main/CODE_OF_CONDUCT.md -->\r\n<!--   * Reproduced the issue in the latest version of the software -->\r\n<!--   * Read the debugging docs: https://besu.hyperledger.org/en/stable/HowTo/Monitor/Logging/ -->\r\n<!--   * Duplicate Issue check:  https://github.com/search?q=+is%3Aissue+repo%3Ahyperledger/Besu -->\r\n<!-- Note:  Not all sections will apply to all issue types. -->\r\n\r\n### Description\r\n\r\nThis exception happened when stopping Besu\r\n\r\n```\r\n{\"timestamp\":\"2022-08-26T12:43:13,961\",\"level\":\"ERROR\",\"thread\":\"nioEventLoopGroup-3-6\",\"class\":\"RocksDBColumnarKeyValueStorage\",\"message\":\"Attempting to use a closed RocksDbKeyValueStorage\",\"throwable\":\"\"}\r\n{\"timestamp\":\"2022-08-26T12:43:13,962\",\"level\":\"ERROR\",\"thread\":\"nioEventLoopGroup-3-6\",\"class\":\"Subscribers\",\"message\":\"Error in callback: \",\"throwable\":\" java.lang.IllegalStateException: Storage has been closed\\n\\tat org.hyperledger.besu.plugin.services.storage.rocksdb.segmented.RocksDBColumnarKeyValueStorage.throwIfClosed(RocksDBColumnarKeyValueStorage.java:240)\\n\\tat org.hyperledger.besu.plugin.services.storage.rocksdb.segmented.RocksDBColumnarKeyValueStorage.get(RocksDBColumnarKeyValueStorage.java:170)\\n\\tat org.hyperledger.besu.plugin.services.storage.rocksdb.segmented.RocksDBColumnarKeyValueStorage.get(RocksDBColumnarKeyValueStorage.java:63)\\n\\tat org.hyperledger.besu.services.kvstore.SegmentedKeyValueStorageAdapter.get(SegmentedKeyValueStorageAdapter.java:50)\\n\\tat org.hyperledger.besu.ethereum.storage.keyvalue.KeyValueStoragePrefixedKeyBlockchainStorage.get(KeyValueStoragePrefixedKeyBlockchainStorage.java:136)\\n\\tat org.hyperledger.besu.ethereum.storage.keyvalue.KeyValueStoragePrefixedKeyBlockchainStorage.getTransactionReceipts(KeyValueStoragePrefixedKeyBlockchainStorage.java:103)\\n\\tat org.hyperledger.besu.ethereum.chain.DefaultBlockchain.getTxReceipts(DefaultBlockchain.java:245)\\n\\tat org.hyperledger.besu.ethereum.eth.manager.EthServer.constructGetReceiptsResponse(EthServer.java:229)\\n\\tat org.hyperledger.besu.ethereum.eth.manager.EthServer.lambda$registerResponseConstructors$2(EthServer.java:92)\\n\\tat org.hyperledger.besu.ethereum.eth.manager.EthMessages.lambda$dispatch$2(EthMessages.java:45)\\n\\tat java.base/java.util.Optional.map(Optional.java:265)\\n\\tat org.hyperledger.besu.ethereum.eth.manager.EthMessages.dispatch(EthMessages.java:43)\\n\\tat org.hyperledger.besu.ethereum.eth.manager.EthProtocolManager.processMessage(EthProtocolManager.java:303)\\n\\tat org.hyperledger.besu.ethereum.p2p.network.NetworkRunner.lambda$setupHandlers$0(NetworkRunner.java:135)\\n\\tat org.hyperledger.besu.ethereum.p2p.rlpx.connections.PeerConnectionEvents.lambda$dispatchMessage$1(PeerConnectionEvents.java:64)\\n\\tat org.hyperledger.besu.util.Subscribers.lambda$forEach$0(Subscribers.java:112)\\n\\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\\n\\tat org.hyperledger.besu.util.Subscribers.forEach(Subscribers.java:109)\\n\\tat org.hyperledger.besu.ethereum.p2p.rlpx.connections.PeerConnectionEvents.dispatchMessage(PeerConnectionEvents.java:64)\\n\\tat org.hyperledger.besu.ethereum.p2p.rlpx.connections.netty.ApiHandler.channelRead0(ApiHandler.java:99)\\n\\tat org.hyperledger.besu.ethereum.p2p.rlpx.connections.netty.ApiHandler.channelRead0(ApiHandler.java:33)\\n\\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\\n\\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\\n\\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327)\\n\\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\\n\\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\\n\\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\\n\\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)\\n\\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)\\n\\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\\n\\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\\n\\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\n\"}\r\n```\r\n\r\n\r\n### Acceptance Criteria\r\n\r\n### Steps to Reproduce (Bug)\r\n\r\nStop Besu\r\n\r\n**Expected behavior:** [What you expect to happen]\r\n\r\nA clean stop without exceptions\r\n\r\n**Actual behavior:** [What actually happens]\r\n\r\n**Frequency:** [What percentage of the time does it occur?]\r\n\r\nseens only once so far\r\n\r\n### Versions (Add all that apply)\r\n* Software version: 22.7.0\r\n* Java version: Java17\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/4317/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/4317/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
