{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/1892",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/1892/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/1892/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/1892/events",
  "html_url": "https://github.com/hyperledger/besu/issues/1892",
  "id": 804887608,
  "node_id": "MDU6SXNzdWU4MDQ4ODc2MDg=",
  "number": 1892,
  "title": "Feature request: new debug RPC method to get account info at a transaction index",
  "user": {
    "login": "haltman-at",
    "id": 35589221,
    "node_id": "MDQ6VXNlcjM1NTg5MjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/haltman-at",
    "html_url": "https://github.com/haltman-at",
    "followers_url": "https://api.github.com/users/haltman-at/followers",
    "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
    "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
    "organizations_url": "https://api.github.com/users/haltman-at/orgs",
    "repos_url": "https://api.github.com/users/haltman-at/repos",
    "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
    "received_events_url": "https://api.github.com/users/haltman-at/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "davemec",
    "id": 1975126,
    "node_id": "MDQ6VXNlcjE5NzUxMjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1975126?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/davemec",
    "html_url": "https://github.com/davemec",
    "followers_url": "https://api.github.com/users/davemec/followers",
    "following_url": "https://api.github.com/users/davemec/following{/other_user}",
    "gists_url": "https://api.github.com/users/davemec/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/davemec/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/davemec/subscriptions",
    "organizations_url": "https://api.github.com/users/davemec/orgs",
    "repos_url": "https://api.github.com/users/davemec/repos",
    "events_url": "https://api.github.com/users/davemec/events{/privacy}",
    "received_events_url": "https://api.github.com/users/davemec/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "davemec",
      "id": 1975126,
      "node_id": "MDQ6VXNlcjE5NzUxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1975126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davemec",
      "html_url": "https://github.com/davemec",
      "followers_url": "https://api.github.com/users/davemec/followers",
      "following_url": "https://api.github.com/users/davemec/following{/other_user}",
      "gists_url": "https://api.github.com/users/davemec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davemec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davemec/subscriptions",
      "organizations_url": "https://api.github.com/users/davemec/orgs",
      "repos_url": "https://api.github.com/users/davemec/repos",
      "events_url": "https://api.github.com/users/davemec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davemec/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-02-09T20:17:32Z",
  "updated_at": "2021-05-12T16:51:16Z",
  "closed_at": "2021-05-12T16:51:16Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Description\r\nObligatory as/want/so summary: As the maintainer of Truffle Debugger, I want a new debug RPC method that will allow getting the information for a specified account (excluding storage) at a specified transaction index, so that debugging tools could use it to better debug contracts that have self-destructed and failed contract creations, both of which currently pose problems, especially the former.\r\n\r\nSo, in more detail -- some of us at Truffle (@gnidan, @davidmurdoch) are trying to make this new method a thing more generally, and then the idea is that we'd put it in Ganache as well. :)  You can see [here](https://github.com/ledgerwatch/turbo-geth/issues/1455) the issue where we proposed it to Turbo-Geth.  I'm hoping what's specified there is agreeable because ideally this should all match up, rather than differ by client!\r\n\r\nSo, how would this work?  The idea is that there would be a new debug RPC method -- I called it `debug_accountAt`, which was intended as a placeholder name, although it seems like it might end up getting called that now -- which functions similarly to `debug_storageRangeAt`, but without the storage slot or limit parameters.  Instead of storage, it returns the (non-storage) account information for the given account at the given index.  Specifically, it should return an object with fields `code` (as data), `nonce` (as quantity), `balance` (in wei as quantity), and `codehash` (as data).\r\n\r\nThe idea then is that Truffle Debugger, and other debuggers, could use this for various purposes, similar to `debug_storageRangeAt` (which Truffle Debugger doesn't currently use, but we're planning to start using it soon!).  Like, currently debugging contracts that have self-destructed is a problem, because we don't have a reliable way to get their code at a point where they existed.  There are some hacky ways we could use, but it would be nice to have a reliable way (and in the worst case, if a contract were both created and destroyed in the same block, there'd be basically no reasonable way).  There are other things this could be used for too -- currently we have trouble correctly setting some of the Solidity globals when debugging certain failed contract creations, for instance, due to not having the nonces available.  And having balances would make it possible to add some sort of balance tracking display in the future.  Basically, it's all useful information for debuggers, so I thought I'd request it! :)\r\n\r\nThank you!\r\n\r\n### Acceptance Criteria\r\n\r\nAssuming that this doesn't get altered at all (maybe you think this should work slightly differently!)\r\n\r\n* The client should respond to the RPC method `debug_accountAt` with parameters `blockHash` (data), `txIndex` (integer), and `addres` (data) with an object containing account information for the given address at the given transaction index in the given block.  The object's fields would be `code` (data), `balance` (quantity), `nonce` (quantity), and `codehash` (data).",
  "closed_by": {
    "login": "RatanRSur",
    "id": 4733314,
    "node_id": "MDQ6VXNlcjQ3MzMzMTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4733314?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/RatanRSur",
    "html_url": "https://github.com/RatanRSur",
    "followers_url": "https://api.github.com/users/RatanRSur/followers",
    "following_url": "https://api.github.com/users/RatanRSur/following{/other_user}",
    "gists_url": "https://api.github.com/users/RatanRSur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/RatanRSur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/RatanRSur/subscriptions",
    "organizations_url": "https://api.github.com/users/RatanRSur/orgs",
    "repos_url": "https://api.github.com/users/RatanRSur/repos",
    "events_url": "https://api.github.com/users/RatanRSur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/RatanRSur/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/1892/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/1892/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/780863326",
    "html_url": "https://github.com/hyperledger/besu/issues/1892#issuecomment-780863326",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1892",
    "id": 780863326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDg2MzMyNg==",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-17T21:23:24Z",
    "updated_at": "2021-02-17T21:23:24Z",
    "author_association": "NONE",
    "body": "Well, it seems that TurboGeth has [now implemented this](https://github.com/ledgerwatch/turbo-geth/issues/1455), so I guess the placeholder name and suggested implementation has become the real one!",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/780863326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
