{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/5753",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/5753/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/5753/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/5753/events",
  "html_url": "https://github.com/hyperledger/besu/issues/5753",
  "id": 1836598218,
  "node_id": "I_kwDODE2jmc5teEPK",
  "number": 5753,
  "title": "Pluggable Censorship Detection",
  "user": {
    "login": "jflo",
    "id": 345937,
    "node_id": "MDQ6VXNlcjM0NTkzNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/345937?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jflo",
    "html_url": "https://github.com/jflo",
    "followers_url": "https://api.github.com/users/jflo/followers",
    "following_url": "https://api.github.com/users/jflo/following{/other_user}",
    "gists_url": "https://api.github.com/users/jflo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jflo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jflo/subscriptions",
    "organizations_url": "https://api.github.com/users/jflo/orgs",
    "repos_url": "https://api.github.com/users/jflo/repos",
    "events_url": "https://api.github.com/users/jflo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jflo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3013559202,
      "node_id": "MDU6TGFiZWwzMDEzNTU5MjAy",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/mainnet",
      "name": "mainnet",
      "color": "9D578C",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "jflo",
    "id": 345937,
    "node_id": "MDQ6VXNlcjM0NTkzNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/345937?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jflo",
    "html_url": "https://github.com/jflo",
    "followers_url": "https://api.github.com/users/jflo/followers",
    "following_url": "https://api.github.com/users/jflo/following{/other_user}",
    "gists_url": "https://api.github.com/users/jflo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jflo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jflo/subscriptions",
    "organizations_url": "https://api.github.com/users/jflo/orgs",
    "repos_url": "https://api.github.com/users/jflo/repos",
    "events_url": "https://api.github.com/users/jflo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jflo/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "jflo",
      "id": 345937,
      "node_id": "MDQ6VXNlcjM0NTkzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/345937?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jflo",
      "html_url": "https://github.com/jflo",
      "followers_url": "https://api.github.com/users/jflo/followers",
      "following_url": "https://api.github.com/users/jflo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jflo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jflo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jflo/subscriptions",
      "organizations_url": "https://api.github.com/users/jflo/orgs",
      "repos_url": "https://api.github.com/users/jflo/repos",
      "events_url": "https://api.github.com/users/jflo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jflo/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-08-04T11:42:59Z",
  "updated_at": "2023-08-14T22:16:19Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "_As a node operator who uses a MEV relay, I would like to specify my own criteria to determine if Besu should notify its CLC that it should use the currently produced block because it detects censorship._\r\n\r\nWith the introduction of the field `shouldOverrideBuilder` in the return value of `engine_getPayloadV3` [introduced by EIP-4844](https://github.com/ethereum/execution-apis/blob/main/src/engine/cancun.md#engine_getpayloadv3), node runners need to consider censorship detection capabilities when choosing with execution client to run. \r\n\r\nThis is a non-consensus behavior, and all clients are encouraged to implement different heuristics in order to encourage diverse means of censorship detection. Unfortunately, this creates another dimension along which users must decide what client to use, and if Besu ships with a default implementation they don't like, it risks losing market share.\r\n\r\nThe definition of censorship and _a users tolerance for it_ is very subjective. For example, should censorship be suspected, and the rewards for the proposed block are \"close enough\", the user might decide that their profit threshold had been met, and they want to propose a known censorship free block.\r\n\r\nIt is quite likely that any client shipping a single, rigid definition for detecting it risks losing its users who disagree with that definition. \r\n\r\nUsers should be able to provide a small script with a limited API that can return a value to provide to the CLC via `shouldOverrideBuilder`.\r\n\r\n### Acceptance Criteria\r\n* There is a configuration option to specify the script file to execute.\r\n* Using that option overrides any default censorship detection in Besu.\r\n* When censorship is detected, responses to the CLC via `engine_getPayloadV3` include a `shouldOverrideBuilder` value of `true`\r\n\r\nImplementation Notes:\r\n\r\n- Script must be \"read-only\" in all senses.\r\n- APIs available within the script will need to make the current state of the mempool available. They also MAY need to make some historical trends of the mempool behavior available as well.\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/5753/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/5753/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
