{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/6182",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/6182/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/6182/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/6182/events",
  "html_url": "https://github.com/hyperledger/besu/issues/6182",
  "id": 2000148626,
  "node_id": "I_kwDODE2jmc53N9iS",
  "number": 6182,
  "title": "Unable to obtain from and to address of a transaction from a full node with GraphQL",
  "user": {
    "login": "Wetitpig",
    "id": 25080795,
    "node_id": "MDQ6VXNlcjI1MDgwNzk1",
    "avatar_url": "https://avatars.githubusercontent.com/u/25080795?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Wetitpig",
    "html_url": "https://github.com/Wetitpig",
    "followers_url": "https://api.github.com/users/Wetitpig/followers",
    "following_url": "https://api.github.com/users/Wetitpig/following{/other_user}",
    "gists_url": "https://api.github.com/users/Wetitpig/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Wetitpig/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Wetitpig/subscriptions",
    "organizations_url": "https://api.github.com/users/Wetitpig/orgs",
    "repos_url": "https://api.github.com/users/Wetitpig/repos",
    "events_url": "https://api.github.com/users/Wetitpig/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Wetitpig/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-11-18T01:41:26Z",
  "updated_at": "2023-11-18T01:44:50Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Description\r\nAs specified in [EIP-1767](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1767.md), the type of `Transaction` should contain fields of `from` and `to` with the `Account` type. As a _full_ node would store all transaction receipts of the whole Ethereum blockchain without pruning, users should be able to obtain the details of any transaction in the past starting from the genesis block, as specified in the Ethereum RPC API from the GraphQL node, including `from` and `to` fields.\r\n\r\n### Acceptance Criteria\r\n\r\n### Steps to Reproduce (Bug)\r\n1. Invoke the GraphQL endpoint with the following request:\r\n```\r\nquery{\r\n    block(number: 17000000){ // or any other block long in the past\r\n        transactions{\r\n            from { address }\r\n            to { address }\r\n        }\r\n    }\r\n}\r\n```\r\n2. Invoke the GraphQL endpoint then with another request (omitting `from`):\r\n```\r\nquery{\r\n    block(number: 17000000){ // or any other block long in the past\r\n        transactions{\r\n            to { address }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Expected behavior:**\r\nThe GraphQL endpoint returns the sender and the destination address of all transactions within a past block.\r\n\r\n**Actual behavior:**\r\n1. The `from` fields from each transaction contains a `java.lang.InvocationTargetException` and other fields were not returned.\r\n2. The `to` field returns a `null` value.\r\n\r\n**Frequency:**\r\nAlways\r\n\r\n### Logs (if a bug)\r\n\r\n### Versions (Add all that apply)\r\n* Software version: 23.10.2\r\n* Java version: OpenJ9 Java 20\r\n* OS Name & Version: Ubuntu 22.04\r\n* Kernel Version: Linux x86-64\r\n* Consensus Client & Version if using Proof of Stake: Teku 23.11.0\r\n\r\n### Additional Information (Add any of the following or anything else that may be relevant)\r\n* I suspect the `getAndMapWorldState` in the `getFrom` and `getTo` methods to be the culprit.\r\n    * The world state is pruned in a _full_ node and only stored in an _archive_ node. Therefore it would be impossible to obtain the world state if users request a world state long in the past.\r\n    * During the GraphQL request execution, upon asking for the `from` account, the endpoint attempts to retrieve the world state, which would fail.\r\n    * However, it should still return the address, which is definitely retained, and `null` in pruned fields.\r\n* https://github.com/hyperledger/besu/blob/2f47e5cd73b261e6ada98078136407e70904604f/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/graphql/internal/pojoadapter/TransactionAdapter.java#L90-L97\r\n* https://github.com/hyperledger/besu/blob/2f47e5cd73b261e6ada98078136407e70904604f/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/graphql/internal/pojoadapter/TransactionAdapter.java#L107-L113\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/6182/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/6182/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
