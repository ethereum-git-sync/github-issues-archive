{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/1324",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/1324/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/1324/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/1324/events",
  "html_url": "https://github.com/hyperledger/besu/issues/1324",
  "id": 682995629,
  "node_id": "MDU6SXNzdWU2ODI5OTU2Mjk=",
  "number": 1324,
  "title": "Merkle. Trie. Exception.",
  "user": {
    "login": "RatanRSur",
    "id": 4733314,
    "node_id": "MDQ6VXNlcjQ3MzMzMTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4733314?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/RatanRSur",
    "html_url": "https://github.com/RatanRSur",
    "followers_url": "https://api.github.com/users/RatanRSur/followers",
    "following_url": "https://api.github.com/users/RatanRSur/following{/other_user}",
    "gists_url": "https://api.github.com/users/RatanRSur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/RatanRSur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/RatanRSur/subscriptions",
    "organizations_url": "https://api.github.com/users/RatanRSur/orgs",
    "repos_url": "https://api.github.com/users/RatanRSur/repos",
    "events_url": "https://api.github.com/users/RatanRSur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/RatanRSur/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1537362490,
      "node_id": "MDU6TGFiZWwxNTM3MzYyNDkw",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 2051683573,
      "node_id": "MDU6TGFiZWwyMDUxNjgzNTcz",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/P3",
      "name": "P3",
      "color": "ffff00",
      "default": false,
      "description": "Medium (ex: JSON-RPC request not working with a specific client library due to loose spec assumtion)"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-08-20T18:17:43Z",
  "updated_at": "2021-09-25T20:46:41Z",
  "closed_at": "2021-09-25T20:46:41Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\nAs a developer, I want to never see a `MerkleTrieException` so that I can sleep at night. Here's an example of one of my nightmares:\r\n\r\n```\r\n2020-08-20 12:19:34.017-05:00 | EthScheduler-Transactions-1 | ERROR | Besu | Uncaught exception in thread \"EthScheduler-Transactions-1\"\r\norg.hyperledger.besu.ethereum.trie.MerkleTrieException: Unable to load trie node value for hash 0xc565b6f9e357f4c1111e790c5f90d2ee41a2f48c212f4bb88935e5b409977abe\r\n\tat org.hyperledger.besu.ethereum.trie.StoredNode.lambda$load$0(StoredNode.java:108)\r\n\tat java.base/java.util.Optional.orElseThrow(Optional.java:408)\r\n\tat org.hyperledger.besu.ethereum.trie.StoredNode.load(StoredNode.java:107)\r\n\tat org.hyperledger.besu.ethereum.trie.StoredNode.accept(StoredNode.java:50)\r\n\tat org.hyperledger.besu.ethereum.trie.GetVisitor.visit(GetVisitor.java:46)\r\n\tat org.hyperledger.besu.ethereum.trie.BranchNode.accept(BranchNode.java:63)\r\n\tat org.hyperledger.besu.ethereum.trie.StoredNode.accept(StoredNode.java:51)\r\n\tat org.hyperledger.besu.ethereum.trie.GetVisitor.visit(GetVisitor.java:46)\r\n\tat org.hyperledger.besu.ethereum.trie.BranchNode.accept(BranchNode.java:63)\r\n\tat org.hyperledger.besu.ethereum.trie.StoredNode.accept(StoredNode.java:51)\r\n\tat org.hyperledger.besu.ethereum.trie.GetVisitor.visit(GetVisitor.java:46)\r\n\tat org.hyperledger.besu.ethereum.trie.BranchNode.accept(BranchNode.java:63)\r\n\tat org.hyperledger.besu.ethereum.trie.StoredNode.accept(StoredNode.java:51)\r\n\tat org.hyperledger.besu.ethereum.trie.StoredMerklePatriciaTrie.get(StoredMerklePatriciaTrie.java:80)\r\n\tat org.hyperledger.besu.ethereum.trie.StoredMerklePatriciaTrie.get(StoredMerklePatriciaTrie.java:35)\r\n\tat org.hyperledger.besu.ethereum.worldstate.DefaultMutableWorldState.get(DefaultMutableWorldState.java:111)\r\n\tat org.hyperledger.besu.ethereum.eth.transactions.TransactionPool.lambda$validateTransaction$2(TransactionPool.java:272)\r\n\tat java.base/java.util.Optional.map(Optional.java:265)\r\n\tat org.hyperledger.besu.ethereum.eth.transactions.TransactionPool.validateTransaction(TransactionPool.java:270)\r\n\tat org.hyperledger.besu.ethereum.eth.transactions.TransactionPool.addRemoteTransactions(TransactionPool.java:198)\r\n\tat org.hyperledger.besu.ethereum.eth.transactions.TransactionsMessageProcessor.processTransactionsMessage(TransactionsMessageProcessor.java:82)\r\n\tat org.hyperledger.besu.ethereum.eth.transactions.TransactionsMessageProcessor.processTransactionsMessage(TransactionsMessageProcessor.java:67)\r\n\tat org.hyperledger.besu.ethereum.eth.transactions.TransactionsMessageHandler.lambda$exec$0(TransactionsMessageHandler.java:48)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n```\r\n\r\nThat means that the node in the state/storage trie with the hash `0xc565b6f9e357f4c1111e790c5f90d2ee41a2f48c212f4bb88935e5b409977abe` was swept even thought it shouldn't have been.\r\nThe good news is that there were 5 more exceptions of this kind thrown simultaneously . Why is that good news? Because it means that things have gone horribly wrong and we're not searching for a node serial killer and not a node assassin. The former is much sloppier.\r\n\r\nThis all happened right before these block import failures.\r\n\r\n```\r\n2020-08-20 12:19:40.401-05:00 | EthScheduler-Services-23 (importBlock) | WARN  | MainnetBlockBodyValidator | Invalid block: receipts root mismatch (expected=0x701d274f98107d52c20070bc0d834770b882a897ba0fd7f048b99b31e6584289, actual=0x34affcf1e0dda56cfebba75487fe88fed9606367536c85bbdb4d6c3e8ab8abfe)\r\n2020-08-20 12:19:40.401-05:00 | EthScheduler-Services-23 (importBlock) | WARN  | PipelineChainDownloader | Invalid block detected.  Disconnecting from sync target. Failed to import block: Invalid block at #510987 (0x68d320222d203a54215f3e4fce972b71847c8367caf8cc01cb7ec469e11392bc)\r\n2020-08-20 12:19:40.406-05:00 | EthScheduler-Services-23 (importBlock) | INFO  | AbstractRetryingPeerTask | No peers available, waiting for peers: 0\r\n2020-08-20 12:19:40.407-05:00 | EthScheduler-Services-23 (importBlock) | WARN  | PipelineChainDownloader | Chain download failed. Restarting after short delay.\r\njava.util.concurrent.CompletionException: org.hyperledger.besu.ethereum.eth.sync.tasks.exceptions.InvalidBlockException: Failed to import block: Invalid block at #510987 (0x68d320222d203a54215f3e4fce972b71847c8367caf8cc01cb7ec469e11392bc)\r\n\tat java.base/java.util.concurrent.CompletableFuture.encodeRelay(CompletableFuture.java:367)\r\n\tat java.base/java.util.concurrent.CompletableFuture.completeRelay(CompletableFuture.java:376)\r\n\tat java.base/java.util.concurrent.CompletableFuture$UniRelay.tryFire(CompletableFuture.java:1019)\r\n\tat java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)\r\n\tat java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2088)\r\n\tat org.hyperledger.besu.services.pipeline.Pipeline.abort(Pipeline.java:152)\r\n\tat org.hyperledger.besu.services.pipeline.Pipeline.lambda$runWithErrorHandling$3(Pipeline.java:134)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: org.hyperledger.besu.ethereum.eth.sync.tasks.exceptions.InvalidBlockException: Failed to import block: Invalid block at #510987 (0x68d320222d203a54215f3e4fce972b71847c8367caf8cc01cb7ec469e11392bc)\r\n\tat org.hyperledger.besu.ethereum.eth.sync.fullsync.FullImportBlockStep.accept(FullImportBlockStep.java:57)\r\n\tat org.hyperledger.besu.ethereum.eth.sync.fullsync.FullImportBlockStep.accept(FullImportBlockStep.java:30)\r\n\tat org.hyperledger.besu.services.pipeline.CompleterStage.run(CompleterStage.java:37)\r\n\tat org.hyperledger.besu.services.pipeline.Pipeline.lambda$runWithErrorHandling$3(Pipeline.java:130)\r\n\t... 5 more\r\n```\r\n\r\n### Steps to Reproduce (Bug)\r\n1. Start a fresh **full** sync and pruning enabled.\r\n2. Pray.\r\n3. If step 2 didn't work, switch to another testnet and repeat. Or try using `pruning-block-confirmations=0` and `pruning-blocks-retained=1` or some other low numbers.\r\n\r\n### Versions (Add all that apply)\r\n* Software version: `1.5.3`\r\n\r\n### Additional Information\r\nWhen I encountered this bug, I also had multiple pruning machines running on completed mainnet fast syncs, walking over the entire huge trie as of block ~10,500,000 and those worked fine. I suspect it has something to do with the rapid marking and sweeping that happens when running a full sync from scratch and pruning _or_ because of peculiaries of contracts early in the history of the chain. For example take a look at a previous bug I fixed, #760\r\n",
  "closed_by": {
    "login": "RatanRSur",
    "id": 4733314,
    "node_id": "MDQ6VXNlcjQ3MzMzMTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4733314?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/RatanRSur",
    "html_url": "https://github.com/RatanRSur",
    "followers_url": "https://api.github.com/users/RatanRSur/followers",
    "following_url": "https://api.github.com/users/RatanRSur/following{/other_user}",
    "gists_url": "https://api.github.com/users/RatanRSur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/RatanRSur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/RatanRSur/subscriptions",
    "organizations_url": "https://api.github.com/users/RatanRSur/orgs",
    "repos_url": "https://api.github.com/users/RatanRSur/repos",
    "events_url": "https://api.github.com/users/RatanRSur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/RatanRSur/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/1324/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/1324/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/923176816",
    "html_url": "https://github.com/hyperledger/besu/issues/1324#issuecomment-923176816",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1324",
    "id": 923176816,
    "node_id": "IC_kwDODE2jmc43Bo9w",
    "user": {
      "login": "vmichalik",
      "id": 12459761,
      "node_id": "MDQ6VXNlcjEyNDU5NzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12459761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vmichalik",
      "html_url": "https://github.com/vmichalik",
      "followers_url": "https://api.github.com/users/vmichalik/followers",
      "following_url": "https://api.github.com/users/vmichalik/following{/other_user}",
      "gists_url": "https://api.github.com/users/vmichalik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vmichalik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vmichalik/subscriptions",
      "organizations_url": "https://api.github.com/users/vmichalik/orgs",
      "repos_url": "https://api.github.com/users/vmichalik/repos",
      "events_url": "https://api.github.com/users/vmichalik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vmichalik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-20T18:32:32Z",
    "updated_at": "2021-09-20T18:32:32Z",
    "author_association": "NONE",
    "body": "@RatanRSur might I guess that you haven't run into this again? If not, I'll close this for now",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/923176816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/927180709",
    "html_url": "https://github.com/hyperledger/besu/issues/1324#issuecomment-927180709",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1324",
    "id": 927180709,
    "node_id": "IC_kwDODE2jmc43Q6el",
    "user": {
      "login": "RatanRSur",
      "id": 4733314,
      "node_id": "MDQ6VXNlcjQ3MzMzMTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4733314?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RatanRSur",
      "html_url": "https://github.com/RatanRSur",
      "followers_url": "https://api.github.com/users/RatanRSur/followers",
      "following_url": "https://api.github.com/users/RatanRSur/following{/other_user}",
      "gists_url": "https://api.github.com/users/RatanRSur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RatanRSur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RatanRSur/subscriptions",
      "organizations_url": "https://api.github.com/users/RatanRSur/orgs",
      "repos_url": "https://api.github.com/users/RatanRSur/repos",
      "events_url": "https://api.github.com/users/RatanRSur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RatanRSur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-25T20:46:41Z",
    "updated_at": "2021-09-25T20:46:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing because of Bonsai Tries",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/927180709/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
