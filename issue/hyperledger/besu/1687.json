{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/1687",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/1687/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/1687/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/1687/events",
  "html_url": "https://github.com/hyperledger/besu/issues/1687",
  "id": 761300608,
  "node_id": "MDU6SXNzdWU3NjEzMDA2MDg=",
  "number": 1687,
  "title": "Issue with Besu keeping files open when sender does not actively close them",
  "user": {
    "login": "pegartillo95",
    "id": 10084974,
    "node_id": "MDQ6VXNlcjEwMDg0OTc0",
    "avatar_url": "https://avatars.githubusercontent.com/u/10084974?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pegartillo95",
    "html_url": "https://github.com/pegartillo95",
    "followers_url": "https://api.github.com/users/pegartillo95/followers",
    "following_url": "https://api.github.com/users/pegartillo95/following{/other_user}",
    "gists_url": "https://api.github.com/users/pegartillo95/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pegartillo95/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pegartillo95/subscriptions",
    "organizations_url": "https://api.github.com/users/pegartillo95/orgs",
    "repos_url": "https://api.github.com/users/pegartillo95/repos",
    "events_url": "https://api.github.com/users/pegartillo95/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pegartillo95/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1537362490,
      "node_id": "MDU6TGFiZWwxNTM3MzYyNDkw",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 2051683248,
      "node_id": "MDU6TGFiZWwyMDUxNjgzMjQ4",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/P2",
      "name": "P2",
      "color": "ff9900",
      "default": false,
      "description": "High (ex: Degrading performance issues, unexpected behavior of core features (DevP2P, syncing, etc))"
    },
    {
      "id": 2152224197,
      "node_id": "MDU6TGFiZWwyMTUyMjI0MTk3",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/TeamRevenant",
      "name": "TeamRevenant",
      "color": "78e298",
      "default": false,
      "description": "GH issues worked on by Revenant Team"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "macfarla",
    "id": 2627919,
    "node_id": "MDQ6VXNlcjI2Mjc5MTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2627919?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/macfarla",
    "html_url": "https://github.com/macfarla",
    "followers_url": "https://api.github.com/users/macfarla/followers",
    "following_url": "https://api.github.com/users/macfarla/following{/other_user}",
    "gists_url": "https://api.github.com/users/macfarla/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/macfarla/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/macfarla/subscriptions",
    "organizations_url": "https://api.github.com/users/macfarla/orgs",
    "repos_url": "https://api.github.com/users/macfarla/repos",
    "events_url": "https://api.github.com/users/macfarla/events{/privacy}",
    "received_events_url": "https://api.github.com/users/macfarla/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "macfarla",
      "id": 2627919,
      "node_id": "MDQ6VXNlcjI2Mjc5MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2627919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/macfarla",
      "html_url": "https://github.com/macfarla",
      "followers_url": "https://api.github.com/users/macfarla/followers",
      "following_url": "https://api.github.com/users/macfarla/following{/other_user}",
      "gists_url": "https://api.github.com/users/macfarla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/macfarla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/macfarla/subscriptions",
      "organizations_url": "https://api.github.com/users/macfarla/orgs",
      "repos_url": "https://api.github.com/users/macfarla/repos",
      "events_url": "https://api.github.com/users/macfarla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/macfarla/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2020-12-10T14:43:35Z",
  "updated_at": "2021-08-20T01:02:50Z",
  "closed_at": "2021-08-20T01:02:50Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Besu client 20.10.1 accepts indiscriminately all incoming HTTP RPC connections, making JVM eventually collapse, if the connections are not closed by the invokers. Details below:**\r\n\r\n##### Setup used for the test.\r\nClient info:\r\n- OS of the machine running the client: Ubuntu 18.04\r\n- Client used to send the transactions: Artillery version 1.6.1\r\n- Our client sending the transactions consist on a Artillery client on which we have a prebuilt json transaction. For each new sent transaction Artillery only needs to update the nonce and sign the new transaction.\r\n\r\nServer info:\r\n- OS of all the machines running the besu nodes: RedHat 7\r\n- Version of all Besu Nodes: 20.10.1\r\n\r\nNetwork info:\r\n- Consensus Protocol: IBFT2\r\n- Block time: 5 seconds.\r\n- Topology of the network: 4 validators, 2 boot nodes and 1 regular node (this is the one to which we are sending the transactions)\r\n\r\n### Test step by step\r\nI'll explain now our testing procedure at the same time trying to show you some of the results we got.\r\nThe purpose we had when we found this issue was to stress test our private Besu network.\r\nFirst we started sending transactions at a speed or about 250 txs/second, and we realized that suddenly after around 15 seconds the node was suddenly dying. So we started decreasing the number of txs/second little by little and we saw that it didn't matter how many txs/seconds we were sending the node will always crash after having processed around 3600 txs.\r\nThe number was always close to that amount it doesn’t matter if we sent 1 txs/second or 200 txs/second.\r\n\r\nAfter that we realized that this was probably happening because of the number of open files that besu was keeping alive, which was continuously increasing during the test.\r\nHere you can see some of our results for the number of open files we were getting in the case of sending only 1 tx/second, the metrics are taken from the machine running the regular node.\r\n```\r\nAfter roughly 15 minutes:\r\n--------------------------------------\r\n$ sudo lsof | grep java | wc -l\r\n5206\r\n\r\n$ sudo lsof | grep besu | wc -l\r\n79494\r\n--------------------------------------\r\n\r\n\r\nAfter roughly 25 minutes:\r\n--------------------------------------\r\n$ sudo lsof | grep java | wc -l\r\n8323\r\n\r\n$ sudo lsof | grep besu | wc -l\r\n151516\r\n---------------------------------------\r\n\r\n\r\nAfter roughly 35 minutes:\r\n--------------------------------------\r\n$ sudo lsof | grep java | wc -l\r\n11946\r\n\r\n$ sudo lsof | grep besu | wc -l\r\n234714\r\n--------------------------------------\r\n\r\n\r\nAt the point of having received around 3600, just before crashing\r\n--------------------------------------\r\n$ sudo lsof | grep java | wc -l\r\n13803\r\n\r\n$ sudo lsof | grep besu | wc -l\r\n278623\r\n--------------------------------------\r\n```\r\nAs you can see the number of open files increases continuously as time passes, up to a point that it cannot be handled by the machine and suddenly stops working.\r\n\r\nOn the next snippet you can see the “Too many open files error” from the point of view of of the logs from the besu node. From that point on the node completely crashes, stopping to answer any request and it needs to be manually restarted.\r\n```\r\n2020-12-04 13:58:11.136+00:00 | EthScheduler-Workers-1 | INFO  | PersistBlockTask | Imported #19,168 / 26 tx / 0 om / 546,000 (0.0%) gas / (0xae19fafef14c15747ca848337270148c7c387b196e4b808bd8f082dfceba1d2c) in 0.008s. Peers: 2\r\n2020-12-04 13:58:16.174+00:00 | EthScheduler-Workers-2 | INFO  | PersistBlockTask | Imported #19,169 / 24 tx / 0 om / 504,000 (0.0%) gas / (0x98876562c6b0f35c1f9170f23cf274d5ba3511d62770d5ffaee26a3e1c574c02) in 0.008s. Peers: 2\r\n2020-12-04 13:58:21.136+00:00 | EthScheduler-Workers-3 | INFO  | PersistBlockTask | Imported #19,170 / 26 tx / 0 om / 546,000 (0.0%) gas / (0xf500341efd03375da6a96b17f00aaf26fb020ef1878d192c8eb5f9c2c5b3d1f6) in 0.007s. Peers: 2\r\n2020-12-04 13:58:26.183+00:00 | EthScheduler-Workers-0 | INFO  | PersistBlockTask | Imported #19,171 / 24 tx / 0 om / 504,000 (0.0%) gas / (0x0f1d0a01ae9f9051a970f30752398fa4caa9a7a2b3723068648e9451abc3c9ff) in 0.008s. Peers: 2\r\n2020-12-04 13:58:28.958+00:00 | vert.x-acceptor-thread-0 | WARN  | DefaultChannelPipeline | An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. Too many open files\r\n2020-12-04 13:58:29.959+00:00 | vert.x-acceptor-thread-0 | WARN  | DefaultChannelPipeline | An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. Too many open files\r\n```\r\n\r\nThen we started to check what was happening on the client side and we realized that as we weren’t specifying Artillery to have a maximum number of virtual concurrent connections, it was opening one connection per http request and keeping them all open until the whole testing process had finished.\r\n\r\nFinally we found a way of specifying Artillery to not to have more than a fixed number of concurrent connections at the same time (by setting the config.http.pool parameter). With this change it doesn’t matter at which speed we send the transactions, the amount of open concurrent open files handled by besu stays on a fixed number instead of increasing infinitely, and due to that it works perfectly.\r\nThis is how the number of open files evolves after this change on Artillery.\r\n```\r\nAfter roughly 15 minutes:\r\n--------------------------------------\r\n$ sudo lsof | grep java | wc -l\r\n2532\r\n$ sudo lsof | grep besu | wc -l\r\n17965\r\n------------------------------\r\n\r\nAfter roughly 25 minutes:\r\n--------------------------------------\r\n$ sudo lsof | grep java | wc -l\r\n2532\r\n$ sudo lsof | grep besu | wc -l\r\n17965\r\n------------------------------\r\n\r\nAfter roughly 35 minutes:\r\n--------------------------------------\r\n$ sudo lsof | grep java | wc -l\r\n2532\r\n$ sudo lsof | grep besu | wc -l\r\n17965\r\n------------------------------\r\n\r\n\r\nAfter roughly 45 minutes:\r\n--------------------------------------\r\n$ sudo lsof | grep java | wc -l\r\n2532\r\n$ sudo lsof | grep besu | wc -l\r\n17965\r\n------------------------------\r\n```\r\nAs you can see it keeps completely stable during the whole test compared to the results before the change.\r\n\r\nIf you feel like there’s any point where you would like to have some more info on how we performed the test just feel free to ask, we are happy to collaborate because we think this is a critical issue that should be fixed. It allows for an easy way to DoS any Besu node just by using a client that does not actively close connections, because Besu does not close them unless the client does.",
  "closed_by": {
    "login": "bgravenorst",
    "id": 50852695,
    "node_id": "MDQ6VXNlcjUwODUyNjk1",
    "avatar_url": "https://avatars.githubusercontent.com/u/50852695?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bgravenorst",
    "html_url": "https://github.com/bgravenorst",
    "followers_url": "https://api.github.com/users/bgravenorst/followers",
    "following_url": "https://api.github.com/users/bgravenorst/following{/other_user}",
    "gists_url": "https://api.github.com/users/bgravenorst/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bgravenorst/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bgravenorst/subscriptions",
    "organizations_url": "https://api.github.com/users/bgravenorst/orgs",
    "repos_url": "https://api.github.com/users/bgravenorst/repos",
    "events_url": "https://api.github.com/users/bgravenorst/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bgravenorst/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/1687/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/1687/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/742638622",
    "html_url": "https://github.com/hyperledger/besu/issues/1687#issuecomment-742638622",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1687",
    "id": 742638622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjYzODYyMg==",
    "user": {
      "login": "shemnon",
      "id": 38109,
      "node_id": "MDQ6VXNlcjM4MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shemnon",
      "html_url": "https://github.com/shemnon",
      "followers_url": "https://api.github.com/users/shemnon/followers",
      "following_url": "https://api.github.com/users/shemnon/following{/other_user}",
      "gists_url": "https://api.github.com/users/shemnon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shemnon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shemnon/subscriptions",
      "organizations_url": "https://api.github.com/users/shemnon/orgs",
      "repos_url": "https://api.github.com/users/shemnon/repos",
      "events_url": "https://api.github.com/users/shemnon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shemnon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-10T16:40:30Z",
    "updated_at": "2020-12-10T16:40:30Z",
    "author_association": "MEMBER",
    "body": "Do you have a list of the HTTP headers that artillery is using?  Specifically I want to know if `keep-alive` is part of the set, i.e. if vert.x is keeping the connection open at the request of the client or if it's failing to explicitly close it.",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/742638622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/742722469",
    "html_url": "https://github.com/hyperledger/besu/issues/1687#issuecomment-742722469",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1687",
    "id": 742722469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjcyMjQ2OQ==",
    "user": {
      "login": "shemnon",
      "id": 38109,
      "node_id": "MDQ6VXNlcjM4MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shemnon",
      "html_url": "https://github.com/shemnon",
      "followers_url": "https://api.github.com/users/shemnon/followers",
      "following_url": "https://api.github.com/users/shemnon/following{/other_user}",
      "gists_url": "https://api.github.com/users/shemnon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shemnon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shemnon/subscriptions",
      "organizations_url": "https://api.github.com/users/shemnon/orgs",
      "repos_url": "https://api.github.com/users/shemnon/repos",
      "events_url": "https://api.github.com/users/shemnon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shemnon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-10T18:51:56Z",
    "updated_at": "2020-12-10T18:51:56Z",
    "author_association": "MEMBER",
    "body": "Also, is the artillery code publicly available or can it be made available?",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/742722469/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/742728050",
    "html_url": "https://github.com/hyperledger/besu/issues/1687#issuecomment-742728050",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1687",
    "id": 742728050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjcyODA1MA==",
    "user": {
      "login": "shemnon",
      "id": 38109,
      "node_id": "MDQ6VXNlcjM4MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shemnon",
      "html_url": "https://github.com/shemnon",
      "followers_url": "https://api.github.com/users/shemnon/followers",
      "following_url": "https://api.github.com/users/shemnon/following{/other_user}",
      "gists_url": "https://api.github.com/users/shemnon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shemnon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shemnon/subscriptions",
      "organizations_url": "https://api.github.com/users/shemnon/orgs",
      "repos_url": "https://api.github.com/users/shemnon/repos",
      "events_url": "https://api.github.com/users/shemnon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shemnon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-10T19:01:04Z",
    "updated_at": "2020-12-10T19:01:04Z",
    "author_association": "MEMBER",
    "body": "Also, what is the state of all of those sockets?  ESTABLISHED, CLOSED, CLOSE_WAIT?  Is artiliery relying onserver side closing? (not a good thing if so... https://stackoverflow.com/questions/3757289/when-is-tcp-option-so-linger-0-required).",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/742728050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/743081410",
    "html_url": "https://github.com/hyperledger/besu/issues/1687#issuecomment-743081410",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1687",
    "id": 743081410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzA4MTQxMA==",
    "user": {
      "login": "pegartillo95",
      "id": 10084974,
      "node_id": "MDQ6VXNlcjEwMDg0OTc0",
      "avatar_url": "https://avatars.githubusercontent.com/u/10084974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pegartillo95",
      "html_url": "https://github.com/pegartillo95",
      "followers_url": "https://api.github.com/users/pegartillo95/followers",
      "following_url": "https://api.github.com/users/pegartillo95/following{/other_user}",
      "gists_url": "https://api.github.com/users/pegartillo95/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pegartillo95/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pegartillo95/subscriptions",
      "organizations_url": "https://api.github.com/users/pegartillo95/orgs",
      "repos_url": "https://api.github.com/users/pegartillo95/repos",
      "events_url": "https://api.github.com/users/pegartillo95/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pegartillo95/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-11T09:27:36Z",
    "updated_at": "2020-12-11T09:27:36Z",
    "author_association": "NONE",
    "body": "> Do you have a list of the HTTP headers that artillery is using? Specifically I want to know if `keep-alive` is part of the set, i.e. if vert.x is keeping the connection open at the request of the client or if it's failing to explicitly close it.\r\n\r\nHere you have the set of headers that Artillery is using.\r\n```\r\n{ date: 'Fri, 11 Dec 2020 09:21:38 GMT',\r\n  'content-type': 'application/json',\r\n  'content-length': '103',\r\n  connection: 'keep-alive',\r\n  vary: 'Origin' }\r\n```\r\nAs you can see keep-alive is one of them as you were suspecting",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/743081410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/743099131",
    "html_url": "https://github.com/hyperledger/besu/issues/1687#issuecomment-743099131",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1687",
    "id": 743099131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzA5OTEzMQ==",
    "user": {
      "login": "pegartillo95",
      "id": 10084974,
      "node_id": "MDQ6VXNlcjEwMDg0OTc0",
      "avatar_url": "https://avatars.githubusercontent.com/u/10084974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pegartillo95",
      "html_url": "https://github.com/pegartillo95",
      "followers_url": "https://api.github.com/users/pegartillo95/followers",
      "following_url": "https://api.github.com/users/pegartillo95/following{/other_user}",
      "gists_url": "https://api.github.com/users/pegartillo95/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pegartillo95/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pegartillo95/subscriptions",
      "organizations_url": "https://api.github.com/users/pegartillo95/orgs",
      "repos_url": "https://api.github.com/users/pegartillo95/repos",
      "events_url": "https://api.github.com/users/pegartillo95/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pegartillo95/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-11T10:01:36Z",
    "updated_at": "2020-12-11T10:01:36Z",
    "author_association": "NONE",
    "body": "> Also, is the artillery code publicly available or can it be made available?\r\n\r\nSure, this is the repo we are using: https://github.com/san-lab/ethereumArtilleryTest\r\nAs you can see there are several tests, among them the one we were using the one called \"ethereumTestBasic.yml\". \r\nThe transaction that is used on that test consist on a sending of a small amount of Wei from one account to another.",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/743099131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/743258836",
    "html_url": "https://github.com/hyperledger/besu/issues/1687#issuecomment-743258836",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1687",
    "id": 743258836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzI1ODgzNg==",
    "user": {
      "login": "shemnon",
      "id": 38109,
      "node_id": "MDQ6VXNlcjM4MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shemnon",
      "html_url": "https://github.com/shemnon",
      "followers_url": "https://api.github.com/users/shemnon/followers",
      "following_url": "https://api.github.com/users/shemnon/following{/other_user}",
      "gists_url": "https://api.github.com/users/shemnon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shemnon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shemnon/subscriptions",
      "organizations_url": "https://api.github.com/users/shemnon/orgs",
      "repos_url": "https://api.github.com/users/shemnon/repos",
      "events_url": "https://api.github.com/users/shemnon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shemnon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-11T15:26:29Z",
    "updated_at": "2020-12-11T15:26:29Z",
    "author_association": "MEMBER",
    "body": "It's the keep-alive header being sent and then not re-using the http connection that's causing the problem.  Not sure that there is anything we _should_ do to address this.  All we really can do is disrespect keep-alive or trim it to a useless timeframe like 1 second.",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/743258836/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/743312058",
    "html_url": "https://github.com/hyperledger/besu/issues/1687#issuecomment-743312058",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1687",
    "id": 743312058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzMxMjA1OA==",
    "user": {
      "login": "JaimeGomezGarcia",
      "id": 35458562,
      "node_id": "MDQ6VXNlcjM1NDU4NTYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35458562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JaimeGomezGarcia",
      "html_url": "https://github.com/JaimeGomezGarcia",
      "followers_url": "https://api.github.com/users/JaimeGomezGarcia/followers",
      "following_url": "https://api.github.com/users/JaimeGomezGarcia/following{/other_user}",
      "gists_url": "https://api.github.com/users/JaimeGomezGarcia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JaimeGomezGarcia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JaimeGomezGarcia/subscriptions",
      "organizations_url": "https://api.github.com/users/JaimeGomezGarcia/orgs",
      "repos_url": "https://api.github.com/users/JaimeGomezGarcia/repos",
      "events_url": "https://api.github.com/users/JaimeGomezGarcia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JaimeGomezGarcia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-11T17:02:52Z",
    "updated_at": "2020-12-11T17:02:52Z",
    "author_association": "NONE",
    "body": "We'll do another test to gather the TCP session statuses and a packet capture. I guess Besu could:\r\n- Expire inactive sessions\r\n- Manage the error instead of failing\r\n- Set some kind, maybe configurable, of limit on sessions that the RPC endpoint is willing to manage simultaneously. Just like the number of listeners in Oracle.",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/743312058/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/743626095",
    "html_url": "https://github.com/hyperledger/besu/issues/1687#issuecomment-743626095",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1687",
    "id": 743626095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzYyNjA5NQ==",
    "user": {
      "login": "shemnon",
      "id": 38109,
      "node_id": "MDQ6VXNlcjM4MTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shemnon",
      "html_url": "https://github.com/shemnon",
      "followers_url": "https://api.github.com/users/shemnon/followers",
      "following_url": "https://api.github.com/users/shemnon/following{/other_user}",
      "gists_url": "https://api.github.com/users/shemnon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shemnon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shemnon/subscriptions",
      "organizations_url": "https://api.github.com/users/shemnon/orgs",
      "repos_url": "https://api.github.com/users/shemnon/repos",
      "events_url": "https://api.github.com/users/shemnon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shemnon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-12T01:51:17Z",
    "updated_at": "2020-12-12T01:51:17Z",
    "author_association": "MEMBER",
    "body": "The problem with expiring the session is that it is a server close, which leads to either CLOSE_WAIT or setting SO_LINGER which is considered bad practice.  Refusing the session still leaves the port in CLOSE_WAIT too as it would again be a server initiated close.",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/743626095/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/759354673",
    "html_url": "https://github.com/hyperledger/besu/issues/1687#issuecomment-759354673",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1687",
    "id": 759354673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTM1NDY3Mw==",
    "user": {
      "login": "JaimeGomezGarcia",
      "id": 35458562,
      "node_id": "MDQ6VXNlcjM1NDU4NTYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35458562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JaimeGomezGarcia",
      "html_url": "https://github.com/JaimeGomezGarcia",
      "followers_url": "https://api.github.com/users/JaimeGomezGarcia/followers",
      "following_url": "https://api.github.com/users/JaimeGomezGarcia/following{/other_user}",
      "gists_url": "https://api.github.com/users/JaimeGomezGarcia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JaimeGomezGarcia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JaimeGomezGarcia/subscriptions",
      "organizations_url": "https://api.github.com/users/JaimeGomezGarcia/orgs",
      "repos_url": "https://api.github.com/users/JaimeGomezGarcia/repos",
      "events_url": "https://api.github.com/users/JaimeGomezGarcia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JaimeGomezGarcia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-13T10:24:44Z",
    "updated_at": "2021-01-13T10:24:44Z",
    "author_association": "NONE",
    "body": "Hi @shemnon \r\nSorry for not having put attention on this since before Christmas.\r\nWe have made some further tests I'd like to comment. IMO this is an open target for a DoS to the node as you can easily crash it.\r\n1. We have workarounded this by setting an envoy proxy in the middle. It is able to manage the offending requests and establishes a controlled number of TCP sessions to Besu.\r\n2.From a TCP state machine perspective there are a couple of options:\r\n\r\nA) From LISTEN you can send a RST to reject connections when your active connection pool is over some threshold. This can also be achieved using iptables on host config. This approach would also enable the DoS but would avoid besu from crashing.\r\n\r\nB) From ESTABLISHED you can server-close inactive sessions which would lead you to FIN_WAIT_1 (and not to CLOSE_WAIT as you mentioned). From here, timing out those sessions if the other end does not participate in the closing handshake is a task for the TCP stack of the OS.\r\n\r\nJaime",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/759354673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/794706890",
    "html_url": "https://github.com/hyperledger/besu/issues/1687#issuecomment-794706890",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1687",
    "id": 794706890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NDcwNjg5MA==",
    "user": {
      "login": "macfarla",
      "id": 2627919,
      "node_id": "MDQ6VXNlcjI2Mjc5MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2627919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/macfarla",
      "html_url": "https://github.com/macfarla",
      "followers_url": "https://api.github.com/users/macfarla/followers",
      "following_url": "https://api.github.com/users/macfarla/following{/other_user}",
      "gists_url": "https://api.github.com/users/macfarla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/macfarla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/macfarla/subscriptions",
      "organizations_url": "https://api.github.com/users/macfarla/orgs",
      "repos_url": "https://api.github.com/users/macfarla/repos",
      "events_url": "https://api.github.com/users/macfarla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/macfarla/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-10T01:29:26Z",
    "updated_at": "2021-03-10T01:30:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is no built-in way in vert.x to limit the number of connections on the server side, this is the responsibility of the client. Advice seems to be that you can separate request handling logic from request handler itself.\n\nhttps://stackoverflow.com/questions/29521038/can-i-set-a-capacity-on-the-vert-x-http-request-queue",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/794706890/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/797086078",
    "html_url": "https://github.com/hyperledger/besu/issues/1687#issuecomment-797086078",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1687",
    "id": 797086078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzA4NjA3OA==",
    "user": {
      "login": "macfarla",
      "id": 2627919,
      "node_id": "MDQ6VXNlcjI2Mjc5MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2627919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/macfarla",
      "html_url": "https://github.com/macfarla",
      "followers_url": "https://api.github.com/users/macfarla/followers",
      "following_url": "https://api.github.com/users/macfarla/following{/other_user}",
      "gists_url": "https://api.github.com/users/macfarla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/macfarla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/macfarla/subscriptions",
      "organizations_url": "https://api.github.com/users/macfarla/orgs",
      "repos_url": "https://api.github.com/users/macfarla/repos",
      "events_url": "https://api.github.com/users/macfarla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/macfarla/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-11T22:15:22Z",
    "updated_at": "2021-03-11T22:15:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pegartillo95 and @JaimeGomezGarcia this should now be fixed in master. You can use `--rpc-http-max-active-connections` to set a max. Default is 80. Are you able to test this out with your setup?\n\n",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/797086078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/797425521",
    "html_url": "https://github.com/hyperledger/besu/issues/1687#issuecomment-797425521",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1687",
    "id": 797425521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzQyNTUyMQ==",
    "user": {
      "login": "JaimeGomezGarcia",
      "id": 35458562,
      "node_id": "MDQ6VXNlcjM1NDU4NTYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35458562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JaimeGomezGarcia",
      "html_url": "https://github.com/JaimeGomezGarcia",
      "followers_url": "https://api.github.com/users/JaimeGomezGarcia/followers",
      "following_url": "https://api.github.com/users/JaimeGomezGarcia/following{/other_user}",
      "gists_url": "https://api.github.com/users/JaimeGomezGarcia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JaimeGomezGarcia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JaimeGomezGarcia/subscriptions",
      "organizations_url": "https://api.github.com/users/JaimeGomezGarcia/orgs",
      "repos_url": "https://api.github.com/users/JaimeGomezGarcia/repos",
      "events_url": "https://api.github.com/users/JaimeGomezGarcia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JaimeGomezGarcia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-12T11:16:51Z",
    "updated_at": "2021-03-12T11:16:51Z",
    "author_association": "NONE",
    "body": "@macfarla Thanks for addressing this. It would take some time for us to check this as we would need to do some setups and are currently focused on another thing. But we'll follow up as soon as we can.",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/797425521/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
