{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/3819",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/3819/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/3819/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/3819/events",
  "html_url": "https://github.com/hyperledger/besu/issues/3819",
  "id": 1232359632,
  "node_id": "I_kwDODE2jmc5JdFDQ",
  "number": 3819,
  "title": "Remove 44-byte long constraint for --privacy-public-key-file so Besu could support Tessera's EC encryptor ",
  "user": {
    "login": "freemanzMrojo",
    "id": 29736144,
    "node_id": "MDQ6VXNlcjI5NzM2MTQ0",
    "avatar_url": "https://avatars.githubusercontent.com/u/29736144?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/freemanzMrojo",
    "html_url": "https://github.com/freemanzMrojo",
    "followers_url": "https://api.github.com/users/freemanzMrojo/followers",
    "following_url": "https://api.github.com/users/freemanzMrojo/following{/other_user}",
    "gists_url": "https://api.github.com/users/freemanzMrojo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/freemanzMrojo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/freemanzMrojo/subscriptions",
    "organizations_url": "https://api.github.com/users/freemanzMrojo/orgs",
    "repos_url": "https://api.github.com/users/freemanzMrojo/repos",
    "events_url": "https://api.github.com/users/freemanzMrojo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/freemanzMrojo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "freemanzMrojo",
    "id": 29736144,
    "node_id": "MDQ6VXNlcjI5NzM2MTQ0",
    "avatar_url": "https://avatars.githubusercontent.com/u/29736144?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/freemanzMrojo",
    "html_url": "https://github.com/freemanzMrojo",
    "followers_url": "https://api.github.com/users/freemanzMrojo/followers",
    "following_url": "https://api.github.com/users/freemanzMrojo/following{/other_user}",
    "gists_url": "https://api.github.com/users/freemanzMrojo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/freemanzMrojo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/freemanzMrojo/subscriptions",
    "organizations_url": "https://api.github.com/users/freemanzMrojo/orgs",
    "repos_url": "https://api.github.com/users/freemanzMrojo/repos",
    "events_url": "https://api.github.com/users/freemanzMrojo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/freemanzMrojo/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "freemanzMrojo",
      "id": 29736144,
      "node_id": "MDQ6VXNlcjI5NzM2MTQ0",
      "avatar_url": "https://avatars.githubusercontent.com/u/29736144?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/freemanzMrojo",
      "html_url": "https://github.com/freemanzMrojo",
      "followers_url": "https://api.github.com/users/freemanzMrojo/followers",
      "following_url": "https://api.github.com/users/freemanzMrojo/following{/other_user}",
      "gists_url": "https://api.github.com/users/freemanzMrojo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/freemanzMrojo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/freemanzMrojo/subscriptions",
      "organizations_url": "https://api.github.com/users/freemanzMrojo/orgs",
      "repos_url": "https://api.github.com/users/freemanzMrojo/repos",
      "events_url": "https://api.github.com/users/freemanzMrojo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/freemanzMrojo/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-05-11T10:00:40Z",
  "updated_at": "2022-08-10T03:54:27Z",
  "closed_at": "2022-08-08T10:49:59Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\nAs a user, I want to remove the 44-byte long constraint for `--privacy-public-key-file` so that I can use [Tessera's EC encryptor configuration](https://docs.tessera.consensys.net/en/stable/HowTo/Configure/Cryptographic-elliptic-curves/#configure-an-alternative-cryptographic-elliptic-curve). \r\n\r\nTessera currently supports the configuration of uncompressed SECP256r1 public keys in base64 (like `MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE+NYbGgkOxL7LWJh/68eCsHMOvxydvNO4gck/0KFsoCtkyCS3O7TuYfWwk9tr/2WKAsd3/v1a+XGffwnahB1PEw==`). This value is not currently supported by Besu for the attribute `--privacy-public-key-file` since it expects a value that is 44 chars long.\r\n\r\nThe purpose of this ticket is to get rid of that constraint since potentially Tessera could be configured with any JCA implementation and adapt the acceptance tests for privacy so we can use alternativa encryptors to `NaCl` (this time would be `EC`).\r\n\r\nAbout the **acceptance tests**, we would need to adapt them somehow since web3j's `Base64String` [has the same problem](https://github.com/web3j/web3j/blob/master/eea/src/main/java/org/web3j/utils/Base64String.java#L85). Some of the possible options would be:\r\n\r\n1. Create another implementation for privacy of the `org.web3j.tx.TransactionManager` interface within the `acceptance-tests` package in Besu so we do not use `Base64String`. The problem with this option is that we will encounter the same issue when trying to submit a private transaction from a \"blockchain service\" to Besu. It would solve the problem within the acceptance tests though.\r\n\r\n2. Modify `org.web3j.tx.PrivateTransactionManager` so it uses something different to `Base64String` in the constructor. This is not an ideal approach IMO since I do not really know who is already using `PrivateTransactionManager` outside of Besu (within Besu though it looks like it is just used for the acceptance tests).\r\n\r\n3. (**MY PREFERRED APPROACH**) Modify `Base64String` so it does not check that length of 44, similarly to what is suggested in this issue for Besu (the logic is the same, sometimes the enclave public key in base64 is longer than 44). All the current methods will behave the same way regarding arguments and method outcomes. [I have suggested this change already in Discord](https://discord.com/channels/779382027614158919/905428373218689054/973578966550052894) following web3j's contribution guidelines. [This is my branch with the change applied](https://github.com/freemanzMrojo/web3j/tree/privacy-pubkey-length-constraint-removed). I have [exported the package into my Besu branch](https://github.com/freemanzMrojo/besu/blob/privacy-pubkey-length-constraint-removed/acceptance-tests/dsl/build.gradle#L47) to test it with good results overall in the acceptance tests locally (still need to check some errors).\r\n\r\n### Acceptance Criteria\r\n* It is possible to provide uncompressed SECP256r1 base64 public key as the content for the file passed as `--privacy-public-key-file` attribute.\r\n* The acceptance tests are adapted so they accept Tessera's EC encryptor configuration.\r\n",
  "closed_by": {
    "login": "macfarla",
    "id": 2627919,
    "node_id": "MDQ6VXNlcjI2Mjc5MTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2627919?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/macfarla",
    "html_url": "https://github.com/macfarla",
    "followers_url": "https://api.github.com/users/macfarla/followers",
    "following_url": "https://api.github.com/users/macfarla/following{/other_user}",
    "gists_url": "https://api.github.com/users/macfarla/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/macfarla/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/macfarla/subscriptions",
    "organizations_url": "https://api.github.com/users/macfarla/orgs",
    "repos_url": "https://api.github.com/users/macfarla/repos",
    "events_url": "https://api.github.com/users/macfarla/events{/privacy}",
    "received_events_url": "https://api.github.com/users/macfarla/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/3819/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/3819/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1125089697",
    "html_url": "https://github.com/hyperledger/besu/issues/3819#issuecomment-1125089697",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/3819",
    "id": 1125089697,
    "node_id": "IC_kwDODE2jmc5DD4Gh",
    "user": {
      "login": "freemanzMrojo",
      "id": 29736144,
      "node_id": "MDQ6VXNlcjI5NzM2MTQ0",
      "avatar_url": "https://avatars.githubusercontent.com/u/29736144?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/freemanzMrojo",
      "html_url": "https://github.com/freemanzMrojo",
      "followers_url": "https://api.github.com/users/freemanzMrojo/followers",
      "following_url": "https://api.github.com/users/freemanzMrojo/following{/other_user}",
      "gists_url": "https://api.github.com/users/freemanzMrojo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/freemanzMrojo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/freemanzMrojo/subscriptions",
      "organizations_url": "https://api.github.com/users/freemanzMrojo/orgs",
      "repos_url": "https://api.github.com/users/freemanzMrojo/repos",
      "events_url": "https://api.github.com/users/freemanzMrojo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/freemanzMrojo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-12T14:49:15Z",
    "updated_at": "2022-05-12T14:49:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @NicolasMassart , I have adapted the acceptance tests but the ones [related to this feature](https://besu.hyperledger.org/en/stable/HowTo/Use-Privacy/Use-FlexiblePrivacy/) are failing.\r\n\r\nOn our side, it is ok if the EC encryptor does not work along with this feature, and I could accommodate the acceptance tests to run on the NaCl encryptor only (like nowadays). I have gone down the rabbit hole for the flexible privacy ones and it looks like we would need to adapt the management smart contracts to make them work since they use `bytes32` for the enclave public keys.\r\n\r\nLet me know what you guys think but IMO maybe that part should be included in a separate PR (or maybe do not implement it at all [since the method signatures for the proxy contract include `bytes32`](https://github.com/hyperledger/besu/blob/main/privacy-contracts/src/main/solidity/FlexiblePrivacyGroupManagementProxy.sol#L30), so it would not be straightforward for running private Besu blockchains to migrate to the new contract version).",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1125089697/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
