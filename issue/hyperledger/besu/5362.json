{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/5362",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/5362/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/5362/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/5362/events",
  "html_url": "https://github.com/hyperledger/besu/issues/5362",
  "id": 1673412729,
  "node_id": "I_kwDODE2jmc5jvkB5",
  "number": 5362,
  "title": "Clean shutdown",
  "user": {
    "login": "non-fungible-nelson",
    "id": 85905982,
    "node_id": "MDQ6VXNlcjg1OTA1OTgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/85905982?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/non-fungible-nelson",
    "html_url": "https://github.com/non-fungible-nelson",
    "followers_url": "https://api.github.com/users/non-fungible-nelson/followers",
    "following_url": "https://api.github.com/users/non-fungible-nelson/following{/other_user}",
    "gists_url": "https://api.github.com/users/non-fungible-nelson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/non-fungible-nelson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/non-fungible-nelson/subscriptions",
    "organizations_url": "https://api.github.com/users/non-fungible-nelson/orgs",
    "repos_url": "https://api.github.com/users/non-fungible-nelson/repos",
    "events_url": "https://api.github.com/users/non-fungible-nelson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/non-fungible-nelson/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1913956965,
      "node_id": "MDU6TGFiZWwxOTEzOTU2OTY1",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/epic",
      "name": "epic",
      "color": "3E4B9E",
      "default": false,
      "description": ""
    },
    {
      "id": 4328706977,
      "node_id": "LA_kwDODE2jmc8AAAABAgLToQ",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/TeamChupa",
      "name": "TeamChupa",
      "color": "fbca04",
      "default": false,
      "description": "GH issues worked on by Chupacabara Team"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "garyschulte",
    "id": 1238512,
    "node_id": "MDQ6VXNlcjEyMzg1MTI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1238512?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/garyschulte",
    "html_url": "https://github.com/garyschulte",
    "followers_url": "https://api.github.com/users/garyschulte/followers",
    "following_url": "https://api.github.com/users/garyschulte/following{/other_user}",
    "gists_url": "https://api.github.com/users/garyschulte/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/garyschulte/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/garyschulte/subscriptions",
    "organizations_url": "https://api.github.com/users/garyschulte/orgs",
    "repos_url": "https://api.github.com/users/garyschulte/repos",
    "events_url": "https://api.github.com/users/garyschulte/events{/privacy}",
    "received_events_url": "https://api.github.com/users/garyschulte/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "garyschulte",
      "id": 1238512,
      "node_id": "MDQ6VXNlcjEyMzg1MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1238512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garyschulte",
      "html_url": "https://github.com/garyschulte",
      "followers_url": "https://api.github.com/users/garyschulte/followers",
      "following_url": "https://api.github.com/users/garyschulte/following{/other_user}",
      "gists_url": "https://api.github.com/users/garyschulte/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garyschulte/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garyschulte/subscriptions",
      "organizations_url": "https://api.github.com/users/garyschulte/orgs",
      "repos_url": "https://api.github.com/users/garyschulte/repos",
      "events_url": "https://api.github.com/users/garyschulte/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garyschulte/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-04-18T15:50:24Z",
  "updated_at": "2023-06-01T20:34:52Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\nShutdowns with SEGFAULT and OOM can cause corrupted databases and rocksDB BUSY/LOCK. \r\n\r\nNeed to gather information on what areas of improvement are available to us. ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/5362/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/5362/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1572680248",
    "html_url": "https://github.com/hyperledger/besu/issues/5362#issuecomment-1572680248",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/5362",
    "id": 1572680248,
    "node_id": "IC_kwDODE2jmc5dvTI4",
    "user": {
      "login": "garyschulte",
      "id": 1238512,
      "node_id": "MDQ6VXNlcjEyMzg1MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1238512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garyschulte",
      "html_url": "https://github.com/garyschulte",
      "followers_url": "https://api.github.com/users/garyschulte/followers",
      "following_url": "https://api.github.com/users/garyschulte/following{/other_user}",
      "gists_url": "https://api.github.com/users/garyschulte/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garyschulte/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garyschulte/subscriptions",
      "organizations_url": "https://api.github.com/users/garyschulte/orgs",
      "repos_url": "https://api.github.com/users/garyschulte/repos",
      "events_url": "https://api.github.com/users/garyschulte/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garyschulte/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-01T19:51:20Z",
    "updated_at": "2023-06-01T19:54:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Segfault during shutdown, appears to have been during a forkchoiceUpdated, coming from a rocksdb transaction, presumably trying to write to a closed transaction:\r\n```\r\nStack: [0x00007fe68f600000,0x00007fe68f700000],  sp=0x00007fe68f6fbe08,  free space=1007k\r\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\r\nC  [librocksdbjni2724041697049812673.so+0x358178]  rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*)+0x8\r\nC  [librocksdbjni2724041697049812673.so+0x83fbd4]  rocksdb::TransactionBaseImpl::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&, bool)+0x44\r\nC  [librocksdbjni2724041697049812673.so+0x2de508]  std::_Function_handler<rocksdb::Status (rocksdb::Slice const&, rocksdb::Slice const&), std::_Bind<rocksdb::Status (rocksdb::Transaction::*(rocksdb::Transaction*, rocksdb::ColumnFamilyHandle*, std::_Placeholder<1>, std::_Placeholder<2>, unsigned char))(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&, bool)> >::_M_invoke(std::_Any_data const&, rocksdb::Slice const&, rocksdb::Slice const&)+0x48\r\nC  [librocksdbjni2724041697049812673.so+0x2da4c7]  txn_write_kv_helper(JNIEnv_*, std::function<rocksdb::Status (rocksdb::Slice const&, rocksdb::Slice const&)> const&, _jbyteArray* const&, int const&, _jbyteArray* const&, int const&)+0xc7\r\nC  [librocksdbjni2724041697049812673.so+0x2db0c7]  Java_org_rocksdb_Transaction_put__J_3BI_3BIJZ+0x67\r\nJ 14761  org.rocksdb.Transaction.put(J[BI[BIJZ)V (0 bytes) @ 0x00007fe6d7747a9e [0x00007fe6d77479a0+0x00000000000000fe]\r\nJ 21508 c2 org.hyperledger.besu.ethereum.bonsai.storage.BonsaiWorldStateKeyValueStorage$Updater.putStorageValueBySlotHash(Lorg/hyperledger/besu/datatypes/Hash;Lorg/hyperledger/besu/datatypesHash;Lorg/apache/tuweni/bytes/Bytes;)Lorg/hyperledger/besu/ethereum/bonsai/storage/BonsaiWorldStateKeyValueStorage$BonsaiUpdater; (37 bytes) @ 0x00007fe6d7e49228 [0x00007fe6d7e48dc0+0x0000000000000468]\r\nJ 20944 c2 org.hyperledger.besu.ethereum.bonsai.worldview.BonsaiWorldState.updateAccountStorageState(Ljava/util/Optional;Lorg/hyperledger/besu/ethereum/bonsai/worldview/BonsaiWorldStateUpdateAccumulator;Ljava/util/Map$Entry;)V (318 bytes) @ 0x00007fe6d81ff4c4 [0x00007fe6d81fd720+0x0000000000001da4]\r\nJ 21400 c2 java.util.concurrent.ConcurrentHashMap$EntrySpliterator.forEachRemaining(Ljava/util/function/Consumer;)V java.base@17.0.5 (50 bytes) @ 0x00007fe6d839b2e0 [0x00007fe6d839af60+0x0000000000000380]\r\nJ 20232 c2 java.util.stream.ReferencePipeline$Head.forEach(Ljava/util/function/Consumer;)V java.base@17.0.5 (26 bytes) @ 0x00007fe6d72d04d4 [0x00007fe6d72d0420+0x00000000000000b4]\r\nJ 21040 c1 org.hyperledger.besu.ethereum.bonsai.worldview.BonsaiWorldState.calculateRootHash(Ljava/util/Optional;Lorg/hyperledger/besu/ethereum/bonsai/worldview/BonsaiWorldStateUpdateAccumulator;)Lorg/hyperledger/besu/datatypes/Hash; (107 bytes) @ 0x00007fe6d084da04 [0x00007fe6d084cb60+0x0000000000000ea4]\r\nJ 21035 c1 org.hyperledger.besu.ethereum.bonsai.worldview.BonsaiWorldState.persist(Lorg/hyperledger/besu/ethereum/core/BlockHeader;)V (317 bytes) @ 0x00007fe6d0c0ce94 [0x00007fe6d0c0c400+0x0000000000000a94]\r\nJ 21139 c2 org.hyperledger.besu.ethereum.bonsai.BonsaiWorldStateProvider.rollMutableStateToBlockHash(Lorg/hyperledger/besu/ethereum/bonsai/worldview/BonsaiWorldState;Lorg/hyperledger/besu/datatypes/Hash;)Ljava/util/Optional; (734 bytes) @ 0x00007fe6d82b99bc [0x00007fe6d82b8f60+0x0000000000000a5c]\r\nJ 21966 c1 org.hyperledger.besu.ethereum.bonsai.BonsaiWorldStateProvider.getMutable(Lorg/hyperledger/besu/datatypes/Hash;Lorg/hyperledger/besu/datatypes/Hash;)Ljava/util/Optional; (10 bytes) @ 0x00007fe6d0c92784 [0x00007fe6d0c926c0+0x00000000000000c4]\r\nj  org.hyperledger.besu.consensus.merge.blockcreation.MergeCoordinator.forwardWorldStateTo(Lorg/hyperledger/besu/ethereum/core/BlockHeader;)Z+15\r\nj  org.hyperledger.besu.consensus.merge.blockcreation.MergeCoordinator.setNewHead(Lorg/hyperledger/besu/ethereum/chain/MutableBlockchain;Lorg/hyperledger/besu/ethereum/core/BlockHeader;)Z+110\r\nj  org.hyperledger.besu.consensus.merge.blockcreation.MergeCoordinator.updateForkChoice(Lorg/hyperledger/besu/ethereum/core/BlockHeader;Lorg/hyperledger/besu/datatypes/Hash;Lorg/hyperledger/besu/datatypes/Hash;)Lorg/hyperledger/besu/consensus/merge/blockcreation/MergeMiningCoordinator$ForkchoiceResult;+154\r\nj  org.hyperledger.besu.consensus.merge.blockcreation.TransitionCoordinator.updateForkChoice(Lorg/hyperledger/besu/ethereum/core/BlockHeader;Lorg/hyperledger/besu/datatypes/Hash;Lorg/hyperledger/besu/datatypes/Hash;)Lorg/hyperledger/besu/consensus/merge/blockcreation/MergeMiningCoordinator$ForkchoiceResult;+7\r\nJ 12615 c1 org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.engine.AbstractEngineForkchoiceUpdated.syncResponse(Lorg/hyperledger/besu/ethereum/api/jsonrpc/internal/JsonRpcRequestContext;)Lorg/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcResponse; (643 bytes) @ 0x00007fe6d0a28a44 [0x00007fe6d0a257c0+0x0000000000003284]\r\nJ 11718 c1 org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.ExecutionEngineJsonRpcMethod$$Lambda$1406+0x000000080125fa30.handle(Ljava/lang/Object;)V (16 bytes) @ 0x00007fe6d0136a84 [0x00007fe6d0136620+0x0000000000000464]\r\nJ 11043 c2 io.vertx.core.impl.ContextBase$$Lambda$1119+0x00000008011a0d18.handle(Ljava/lang/Object;)V (16 bytes) @ 0x00007fe6d72e0270 [0x00007fe6d72df060+0x0000000000001210]\r\nJ 10811 c2 io.vertx.core.impl.ContextInternal.dispatch(Ljava/lang/Object;Lio/vertx/core/Handler;)V (57 bytes) @ 0x00007fe6d7290b38 [0x00007fe6d7290920+0x0000000000000218]\r\nJ 13956 c2 io.vertx.core.impl.TaskQueue$$Lambda$814+0x00000008010a5430.run()V (8 bytes) @ 0x00007fe6d73bdc34 [0x00007fe6d73bd700+0x0000000000000534]\r\nj  java.util.concurrent.ThreadPoolExecutor.runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V+92 java.base@17.0.5\r\n```\r\n\r\nfix for this particular shutdown segfault could be as simple as checking whether db is closed prior to a put, get, or closed.",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1572680248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
