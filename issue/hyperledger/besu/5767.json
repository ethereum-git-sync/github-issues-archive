{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/5767",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/5767/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/5767/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/5767/events",
  "html_url": "https://github.com/hyperledger/besu/issues/5767",
  "id": 1855075305,
  "node_id": "I_kwDODE2jmc5ukjPp",
  "number": 5767,
  "title": "Receipt Compression Strategy",
  "user": {
    "login": "non-fungible-nelson",
    "id": 85905982,
    "node_id": "MDQ6VXNlcjg1OTA1OTgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/85905982?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/non-fungible-nelson",
    "html_url": "https://github.com/non-fungible-nelson",
    "followers_url": "https://api.github.com/users/non-fungible-nelson/followers",
    "following_url": "https://api.github.com/users/non-fungible-nelson/following{/other_user}",
    "gists_url": "https://api.github.com/users/non-fungible-nelson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/non-fungible-nelson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/non-fungible-nelson/subscriptions",
    "organizations_url": "https://api.github.com/users/non-fungible-nelson/orgs",
    "repos_url": "https://api.github.com/users/non-fungible-nelson/repos",
    "events_url": "https://api.github.com/users/non-fungible-nelson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/non-fungible-nelson/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1921587647,
      "node_id": "MDU6TGFiZWwxOTIxNTg3NjQ3",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/TeamGroot",
      "name": "TeamGroot",
      "color": "1d76db",
      "default": false,
      "description": "GH issues worked on by Groot Team"
    },
    {
      "id": 3013559202,
      "node_id": "MDU6TGFiZWwzMDEzNTU5MjAy",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/mainnet",
      "name": "mainnet",
      "color": "9D578C",
      "default": false,
      "description": ""
    },
    {
      "id": 5113384824,
      "node_id": "LA_kwDODE2jmc8AAAABMMgPeA",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/bonsai",
      "name": "bonsai",
      "color": "0E8A16",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-08-17T14:02:24Z",
  "updated_at": "2024-01-23T23:22:07Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\nThe largest part of the database storage is the receipts. As a Besu user, I want the lowest storage size possible on my disk. \n\nSome clients have a notion of \"ancient\" receipts that they compress or move to a freezer to keep storage small. For more recent data, Besu can provide non-compressed receipts/data. For older data, decompression will happen, latency may be introduced, which is a tradeoff for lower overall storage use. \n\nWe need to determine what \"ancient\" (user configurable) barriers are appropriate, what compression strategy we may use for these ancient receipts, and if we want to combine it with the freezer approach.\n\nSome references & implementations: \nhttps://github.com/ethereum/go-ethereum/pull/19345\nhttps://github.com/NethermindEth/nethermind/pull/5531\n\nWe may also be able to prune receipts over the `historical-block-limit` for BONSAI, reducing data further (is this covered by `--Xchain-pruning`? ).\n\n### Notes\n- may also mean we can improve sync because there's less data to write?\n- storing bloom filter is useless because you can recreate it?\n  - maybe rocksdb is already compressing all the leading zeros?\n  - https://github.com/hyperledger/besu/pull/5392 - not great results but Karim didn't spend much time on it\n- Could also compress other parts of the body?\n- Could we push to modify snapsync spec to avoid needing to download the receipt \n  - because it can be recreated anyway\n  - then maybe don't need to store the receipt at all\n- often addresses are stored multiple times in the receipt?\n  -  related to https://github.com/ethereum/go-ethereum/pull/19345#issue-426054825 ? -> \"_The big wins come from not storing the transaction hash and contract address since it is not amenable to the snappy compression used by LevelDB_\"\n- Are receipts stored for forks as well? c.f. trie log storage pruning #5390\n- Avoiding a \"pruning\"-style operation by always storing in a compressed format would have some benefits\n- Maybe split out some improvements we can do for all blocks, including near-head VS some we can only apply to \"ancient data\"\n\n### Tasks\n- [ ] Create a discussion in Eth R&D: we need to engage the community at large around needing receipts - in the DB and in the snap sync protocol.\n- [ ] Determine if receipts are used for protocol operation or for anything other than RPCs and snapsync.\n  - Consider EIP-6110? https://github.com/hyperledger/besu/blob/1c261db30f5cb9504e86b6b24eb99502d17b6336/ethereum/blockcreation/src/main/java/org/hyperledger/besu/ethereum/blockcreation/AbstractBlockCreator.java#L298-L304\n- [x] Prototype the other ELs receipt encoding and spike on a similar approach.\n- [ ] Investigate the possibility of not storing bloom filter and generating that on demand.\n- [x] Have a chat with Karim to try understand what the results were for the attempt on this PR: https://github.com/hyperledger/besu/pull/5392 - not great results but Karim didn't spend much time on it. maybe rocksdb is already compressing all the leading zeros?  \n- [x] Investigate and (possibly) spike on optimise the address stored multiple times in the receipts - related to https://github.com/ethereum/go-ethereum/pull/19345#issue-426054825 ? -> \"_The big wins come from not storing the transaction hash and contract address since it is not amenable to the snappy compression used by LevelDB_\"\n- [ ] Investigate if we're storing receipts for forks and how much storage pruning those would save",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/5767/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/5767/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1731462663",
    "html_url": "https://github.com/hyperledger/besu/issues/5767#issuecomment-1731462663",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/5767",
    "id": 1731462663,
    "node_id": "IC_kwDODE2jmc5nNAYH",
    "user": {
      "login": "non-fungible-nelson",
      "id": 85905982,
      "node_id": "MDQ6VXNlcjg1OTA1OTgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/85905982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/non-fungible-nelson",
      "html_url": "https://github.com/non-fungible-nelson",
      "followers_url": "https://api.github.com/users/non-fungible-nelson/followers",
      "following_url": "https://api.github.com/users/non-fungible-nelson/following{/other_user}",
      "gists_url": "https://api.github.com/users/non-fungible-nelson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/non-fungible-nelson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/non-fungible-nelson/subscriptions",
      "organizations_url": "https://api.github.com/users/non-fungible-nelson/orgs",
      "repos_url": "https://api.github.com/users/non-fungible-nelson/repos",
      "events_url": "https://api.github.com/users/non-fungible-nelson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/non-fungible-nelson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-22T13:53:33Z",
    "updated_at": "2023-09-22T13:53:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "we need to engage the community at large around needing receipts - in the DB and in the snap sync protocol. \r\n\r\nCreate a discussion in Eth R&D \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1731462663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
