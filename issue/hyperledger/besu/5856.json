{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/5856",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/5856/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/5856/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/5856/events",
  "html_url": "https://github.com/hyperledger/besu/issues/5856",
  "id": 1883560591,
  "node_id": "I_kwDODE2jmc5wRNqP",
  "number": 5856,
  "title": "NullPointerException when fast syncing QBFT chain",
  "user": {
    "login": "matthew1001",
    "id": 6599269,
    "node_id": "MDQ6VXNlcjY1OTkyNjk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6599269?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/matthew1001",
    "html_url": "https://github.com/matthew1001",
    "followers_url": "https://api.github.com/users/matthew1001/followers",
    "following_url": "https://api.github.com/users/matthew1001/following{/other_user}",
    "gists_url": "https://api.github.com/users/matthew1001/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/matthew1001/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/matthew1001/subscriptions",
    "organizations_url": "https://api.github.com/users/matthew1001/orgs",
    "repos_url": "https://api.github.com/users/matthew1001/repos",
    "events_url": "https://api.github.com/users/matthew1001/events{/privacy}",
    "received_events_url": "https://api.github.com/users/matthew1001/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1537362490,
      "node_id": "MDU6TGFiZWwxNTM3MzYyNDkw",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-09-06T08:53:59Z",
  "updated_at": "2023-09-11T08:06:17Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\n```\r\n2023-09-06 09:09:07.295+01:00 | BftProcessorExecutor-QBFT-0 | ERROR | EventMultiplexer | State machine threw exception while processing event \\{BlockTimerExpiry{Round Identifier=ConsensusRoundIdentifier{Sequence=378, Round=0}}\\}\r\njava.lang.IllegalStateException: Block creation failed unexpectedly. Will restart on next block added to chain.\r\n        at org.hyperledger.besu.ethereum.blockcreation.AbstractBlockCreator.createBlock(AbstractBlockCreator.java:292)\r\n        at org.hyperledger.besu.ethereum.blockcreation.AbstractBlockCreator.createBlock(AbstractBlockCreator.java:156)\r\n        at org.hyperledger.besu.ethereum.blockcreation.AbstractBlockCreator.createBlock(AbstractBlockCreator.java:142)\r\n        at org.hyperledger.besu.consensus.qbft.statemachine.QbftRound.createAndSendProposalMessage(QbftRound.java:130)\r\n        at org.hyperledger.besu.consensus.qbft.statemachine.QbftBlockHeightManager.handleBlockTimerExpiry(QbftBlockHeightManager.java:136)\r\n        at org.hyperledger.besu.consensus.common.bft.statemachine.BaseBftController.handleBlockTimerExpiry(BaseBftController.java:167)\r\n        at org.hyperledger.besu.consensus.common.bft.EventMultiplexer.handleBftEvent(EventMultiplexer.java:65)\r\n        at java.base/java.util.Optional.ifPresent(Optional.java:178)\r\n        at org.hyperledger.besu.consensus.common.bft.BftProcessor.run(BftProcessor.java:65)\r\n        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n        at java.base/java.lang.Thread.run(Thread.java:833)\r\nCaused by: java.lang.NullPointerException: Cannot invoke \"org.hyperledger.besu.ethereum.eth.transactions.PendingTransactions.selectTransactions(org.hyperledger.besu.ethereum.eth.transactions.PendingTransactions$TransactionSelector)\" because \"this.pendingTransactions\" is null\r\n        at org.hyperledger.besu.ethereum.eth.transactions.TransactionPool.selectTransactions(TransactionPool.java:526)\r\n        at org.hyperledger.besu.ethereum.blockcreation.BlockTransactionSelector.buildTransactionListForBlock(BlockTransactionSelector.java:274)\r\n        at org.hyperledger.besu.ethereum.blockcreation.AbstractBlockCreator.selectTransactions(AbstractBlockCreator.java:362)\r\n        at org.hyperledger.besu.ethereum.blockcreation.AbstractBlockCreator.createBlock(AbstractBlockCreator.java:200)\r\n        ... 11 more\r\n```\r\n\r\n### Steps to Reproduce (Bug)\r\n\r\n1. Start a 5 node QBFT chain\r\n2. Stop one of the nodes and delete its database\r\n3. Restart the node with `--sync-mode=FAST --fast-sync-min-peers=4` (the min peers is needed to avoid the min number of 5 before syncing starts)\r\n\r\n**Expected behavior:** The node syncs with the chain and then resumes proposing & validating blocks (since it was before it was stopped and its data deleted)\r\n\r\n**Actual behavior:** NPE ^^",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/5856/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/5856/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1707948841",
    "html_url": "https://github.com/hyperledger/besu/issues/5856#issuecomment-1707948841",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/5856",
    "id": 1707948841,
    "node_id": "IC_kwDODE2jmc5lzTsp",
    "user": {
      "login": "matthew1001",
      "id": 6599269,
      "node_id": "MDQ6VXNlcjY1OTkyNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6599269?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthew1001",
      "html_url": "https://github.com/matthew1001",
      "followers_url": "https://api.github.com/users/matthew1001/followers",
      "following_url": "https://api.github.com/users/matthew1001/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthew1001/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthew1001/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthew1001/subscriptions",
      "organizations_url": "https://api.github.com/users/matthew1001/orgs",
      "repos_url": "https://api.github.com/users/matthew1001/repos",
      "events_url": "https://api.github.com/users/matthew1001/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthew1001/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-06T09:00:07Z",
    "updated_at": "2023-09-06T09:00:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've tested a code fix that simply checks for null in `TransactionPool.selectTransactions()` and the sync completes successfully, and the node starts validating and proposing blocks in sync with the rest of the chain.\r\n\r\nHowever, this feels like it might be glossing over a more structural change that is needed, and that we shouldn't be reaching `TransactionPool.selectTransactions()` if the node is still syncing.\r\n\r\nI don't have enough experience of the `MiningCoordinator` to know if it should not be starting (or at least not starting fully) while the node is syncing, much like the transaction pool behaviour today. In that case, the fix would be to have the mining coordinator call `SyncState.subscribeCompletionReached()` and register a callback to start the mining coordinator fully once the node has synced.\r\n\r\nAlternatively a middle ground might be to have the mining coordinator start is it does today, but possible only handle certain BFT events once syncing is complete. For example it could ignore `BLOCK_TIMER_EXPIRY` events until syncing is complete.\r\n\r\nI'd benefit on others input as to the most appropriate fix.",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1707948841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1713376185",
    "html_url": "https://github.com/hyperledger/besu/issues/5856#issuecomment-1713376185",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/5856",
    "id": 1713376185,
    "node_id": "IC_kwDODE2jmc5mIAu5",
    "user": {
      "login": "matthew1001",
      "id": 6599269,
      "node_id": "MDQ6VXNlcjY1OTkyNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6599269?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthew1001",
      "html_url": "https://github.com/matthew1001",
      "followers_url": "https://api.github.com/users/matthew1001/followers",
      "following_url": "https://api.github.com/users/matthew1001/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthew1001/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthew1001/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthew1001/subscriptions",
      "organizations_url": "https://api.github.com/users/matthew1001/orgs",
      "repos_url": "https://api.github.com/users/matthew1001/repos",
      "events_url": "https://api.github.com/users/matthew1001/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthew1001/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-11T08:06:17Z",
    "updated_at": "2023-09-11T08:06:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Started looking at this under https://github.com/hyperledger/besu/pull/5861, taking the approach of not starting a BFT mining coordinator until the node is sync'd.",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1713376185/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
