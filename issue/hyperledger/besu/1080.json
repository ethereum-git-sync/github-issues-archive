{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/1080",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/1080/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/1080/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/1080/events",
  "html_url": "https://github.com/hyperledger/besu/issues/1080",
  "id": 639167192,
  "node_id": "MDU6SXNzdWU2MzkxNjcxOTI=",
  "number": 1080,
  "title": "Online backups using RocksDB checkpoint feature",
  "user": {
    "login": "benjamincburns",
    "id": 803016,
    "node_id": "MDQ6VXNlcjgwMzAxNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/803016?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/benjamincburns",
    "html_url": "https://github.com/benjamincburns",
    "followers_url": "https://api.github.com/users/benjamincburns/followers",
    "following_url": "https://api.github.com/users/benjamincburns/following{/other_user}",
    "gists_url": "https://api.github.com/users/benjamincburns/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/benjamincburns/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/benjamincburns/subscriptions",
    "organizations_url": "https://api.github.com/users/benjamincburns/orgs",
    "repos_url": "https://api.github.com/users/benjamincburns/repos",
    "events_url": "https://api.github.com/users/benjamincburns/events{/privacy}",
    "received_events_url": "https://api.github.com/users/benjamincburns/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1537362496,
      "node_id": "MDU6TGFiZWwxNTM3MzYyNDk2",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/enhancement",
      "name": "enhancement",
      "color": "a2eeef",
      "default": true,
      "description": "New feature or request"
    },
    {
      "id": 4164098293,
      "node_id": "LA_kwDODE2jmc74Mxj1",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/icebox",
      "name": "icebox",
      "color": "1D76DB",
      "default": false,
      "description": "items that need more consideration, time, or can wait"
    },
    {
      "id": 4328706977,
      "node_id": "LA_kwDODE2jmc8AAAABAgLToQ",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/TeamChupa",
      "name": "TeamChupa",
      "color": "fbca04",
      "default": false,
      "description": "GH issues worked on by Chupacabara Team"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-06-15T21:15:06Z",
  "updated_at": "2023-01-26T10:19:30Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Description\r\nAs a system operator, I want online database snapshotting so that I can schedule regular backups of a node's data without downtime.\r\n\r\nI think that this could easily be achieved by exposing the [built-in checkpointing feature in RocksDB](https://rocksdb.org/blog/2015/11/10/use-checkpoints-for-efficient-snapshots.html) as an ADMIN RPC call.\r\n\r\n### Background\r\n\r\nIn a cloud environment, it can be advantageous to make use of a local SSD as the data drive for Besu. However some cloud providers, particularly AWS, treat this disk as ephemeral, and even a reboot of the machine will wipe the data stored on the drive. To avoid having to resync the entire chain on reboot, it'd be nice if we could quickly take a snapshot, without downtime.\r\n\r\nPegaSys (team Yeti) are switching over to using these types of disks for hosting their dev/test infrastructure. This infrastructure is used for final tests prior to making releases of Besu. This enhancement would help this migration significantly.\r\n\r\n### Acceptance Criteria\r\n* A utility exists that lets me create a snapshot of a complete database\r\n* Snapshotting a database does not require me to shut down Besu\r\n\r\nNote: it's fine however if I can't simply copy/rsync the active data directory. As noted above, I think an RPC call is probably a good way to achieve this.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/1080/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/1080/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/644396018",
    "html_url": "https://github.com/hyperledger/besu/issues/1080#issuecomment-644396018",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1080",
    "id": 644396018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDM5NjAxOA==",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-15T21:19:04Z",
    "updated_at": "2020-06-15T21:19:04Z",
    "author_association": "NONE",
    "body": "By checkpointing you mean a snapshot at that moment in time, and not the checkpoint oracle that is built into rinkeby/goeril/ropsten/ etc correct? \n\n> On Jun 15, 2020, at 2:15 PM, Benjamin Burns <notifications@github.com> wrote:\n> \n> \n> Description\n> \n> As a system operator, I want online database snapshotting so that I can schedule regular backups of a node's data without downtime.\n> \n> I think that this could easily be achieved by exposing the built-in checkpointing feature in RocksDB <https://rocksdb.org/blog/2015/11/10/use-checkpoints-for-efficient-snapshots.html> as an ADMIN RPC call.\n> \n> Background\n> \n> In a cloud environment, it can be advantageous to make use of a local SSD as the data drive for Besu. However some cloud providers, particularly AWS, treat this disk as ephemeral, and even a reboot of the machine will wipe the data stored on the drive. To avoid having to resync the entire node, it'd be nice if we could quickly take a snapshot, without downtime.\n> \n> PegaSys (team Yeti) are switching over to using these types of disks for hosting their dev/test infrastructure. This infrastructure is used for final tests prior to making releases of Besu. This enhancement would help this migration significantly.\n> \n> Acceptance Criteria\n> \n> A utility exists that lets me create a snapshot of a complete database\n> Snapshotting a database does not require me to shut down Besu\n> Note: it's fine however if I can't simply copy/rsync the active data directory. As noted above, I think an RPC call is probably a good way to achieve this.\n> \n> Versions (Add all that apply)\n> \n> Software version: [besu --version]\n> Java version: [java -version]\n> OS Name & Version: [cat /etc/*release]\n> Kernel Version: [uname -a]\n> Virtual Machine software & version: [vmware -v]\n> Docker Version: [docker version]\n> Cloud VM, type, size: [Amazon Web Services I3-large]\n> Additional Information\n> \n> â€”\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub <https://github.com/hyperledger/besu/issues/1080>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AH2D4LD3E3ZF5O7MYWHEAWTRW2FOZANCNFSM4N6YTWMA>.\n> \n\n",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/644396018/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/644396185",
    "html_url": "https://github.com/hyperledger/besu/issues/1080#issuecomment-644396185",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1080",
    "id": 644396185,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDM5NjE4NQ==",
    "user": {
      "login": "benjamincburns",
      "id": 803016,
      "node_id": "MDQ6VXNlcjgwMzAxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/803016?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjamincburns",
      "html_url": "https://github.com/benjamincburns",
      "followers_url": "https://api.github.com/users/benjamincburns/followers",
      "following_url": "https://api.github.com/users/benjamincburns/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjamincburns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjamincburns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjamincburns/subscriptions",
      "organizations_url": "https://api.github.com/users/benjamincburns/orgs",
      "repos_url": "https://api.github.com/users/benjamincburns/repos",
      "events_url": "https://api.github.com/users/benjamincburns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjamincburns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-15T21:19:24Z",
    "updated_at": "2020-06-15T21:19:24Z",
    "author_association": "NONE",
    "body": "Correct",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/644396185/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/649278267",
    "html_url": "https://github.com/hyperledger/besu/issues/1080#issuecomment-649278267",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1080",
    "id": 649278267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTI3ODI2Nw==",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-25T06:57:02Z",
    "updated_at": "2020-06-25T06:57:02Z",
    "author_association": "NONE",
    "body": "Just some additional information, Splunk does support this feature\r\n\r\nsource: https://raw.githubusercontent.com/splunk/splunk-connect-for-ethereum/master/config.schema.json\r\n\r\n```json\r\n\r\n        \"CheckpointConfigSchema\": {\r\n            \"description\": \"The checkpoint is where ethlogger keeps track of its state, which blocks have already been processed.\\nThis allows it to resume where it left off after being shut down and restarted.\",\r\n            \"properties\": {\r\n                \"filename\": {\r\n                    \"default\": \"checkpoints.json\",\r\n                    \"description\": \"File path (relative to the current working directory) where the checkpoint file will be stored\",\r\n                    \"type\": \"string\"\r\n                },\r\n                \"saveInterval\": {\r\n                    \"description\": \"Maximum duration before saving updated checkpoint information to disk\",\r\n                    \"type\": [\"string\", \"number\"]\r\n\r\n```\r\n\r\nwill let you know how reliable this is ",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/649278267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1404799562",
    "html_url": "https://github.com/hyperledger/besu/issues/1080#issuecomment-1404799562",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1080",
    "id": 1404799562,
    "node_id": "IC_kwDODE2jmc5Tu4pK",
    "user": {
      "login": "non-fungible-nelson",
      "id": 85905982,
      "node_id": "MDQ6VXNlcjg1OTA1OTgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/85905982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/non-fungible-nelson",
      "html_url": "https://github.com/non-fungible-nelson",
      "followers_url": "https://api.github.com/users/non-fungible-nelson/followers",
      "following_url": "https://api.github.com/users/non-fungible-nelson/following{/other_user}",
      "gists_url": "https://api.github.com/users/non-fungible-nelson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/non-fungible-nelson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/non-fungible-nelson/subscriptions",
      "organizations_url": "https://api.github.com/users/non-fungible-nelson/orgs",
      "repos_url": "https://api.github.com/users/non-fungible-nelson/repos",
      "events_url": "https://api.github.com/users/non-fungible-nelson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/non-fungible-nelson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-26T10:19:30Z",
    "updated_at": "2023-01-26T10:19:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ahamlat - what's the feasibility or scope of something like this? Deciding if still necessary with out latest codebase. ",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1404799562/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
