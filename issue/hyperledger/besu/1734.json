{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/1734",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/1734/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/1734/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/1734/events",
  "html_url": "https://github.com/hyperledger/besu/issues/1734",
  "id": 772765126,
  "node_id": "MDU6SXNzdWU3NzI3NjUxMjY=",
  "number": 1734,
  "title": "Two honest IBFT2 validators add two different blocks with the same height to their respective blockchains.",
  "user": {
    "login": "saltiniroberto",
    "id": 38655434,
    "node_id": "MDQ6VXNlcjM4NjU1NDM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/38655434?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/saltiniroberto",
    "html_url": "https://github.com/saltiniroberto",
    "followers_url": "https://api.github.com/users/saltiniroberto/followers",
    "following_url": "https://api.github.com/users/saltiniroberto/following{/other_user}",
    "gists_url": "https://api.github.com/users/saltiniroberto/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/saltiniroberto/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/saltiniroberto/subscriptions",
    "organizations_url": "https://api.github.com/users/saltiniroberto/orgs",
    "repos_url": "https://api.github.com/users/saltiniroberto/repos",
    "events_url": "https://api.github.com/users/saltiniroberto/events{/privacy}",
    "received_events_url": "https://api.github.com/users/saltiniroberto/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-12-22T08:49:43Z",
  "updated_at": "2020-12-28T07:40:44Z",
  "closed_at": "2020-12-22T08:53:12Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Description\r\n### Possible Actual Behaviour of an IBFT2 validator\r\nLet _v_ be an IBFT2 validator. The following sequence of events may occur:\r\n1. _v_ receives a valid `<PROPOSAL, h, r, B>` message\r\n2. _v_ sends a valid `<PREPARE, h, r, hash(B)>` message\r\n3. _v_ stores locally a valid `<COMMIT, h, r, commitSeal(B), hash(B)>` message \r\n4. _v_ receives, from other 2 validators, 2 valid `<COMMIT, h, r, commitSeal(B), hash(B)>` messages and adds them to the event queue.\r\n5. The thread handling round timers (controlled by `IbftExecutors::timerExecutor`) is awakened by the expiry of the round timer for the current round (_r_) which causes a `RoundExpiry` event for the current round (_r_) to be put in the queue after the events for the 2 `COMMIT` messages sent at the point above.\r\n6. The thread executing the IBFT state machine (controlled by `IbftExecutors::ibftProcessorExecutor`) is scheduled and the two `COMMIT` message events are dequeued. Since the quorum for a network of 4 validators is 3 and the node has stored locally 3 valid `COMMIT` messages sent by 3 different validators (which includes the one stored at point 3), it adds block `B` to its local blockchain. This will cause a `NewChainHead` event to be added to the queue of events, but after the `RoundExpiry` event\r\n7. The `RoundExpiry` event is dequeued and as a consequence of this, a `<ROUND-CHANGE, h, r+1, latest`PREPARE`dCertificate>` message for round _r+1_ is sent\r\n\r\n### Possible Actual Behaviour of a Network of IBFT2 validators\r\nThe possible actual behaviour is exemplified on a network of 4 IBFT2 validators\r\n\r\n**Assumptions**\r\n- Network with 4 validators, _v1_, _v2_, _v3_ and _v4_\r\n- quorum = 3\r\n- _v1_ is malicious\r\n\r\n**Scenario**\r\n1. _v1_ multicasts a `<PROPOSAL, h, 0, B>` message\r\n2. _v3_ and _v4_ receive the `PROPOSAL` message sent by _v1_. _v2_ will not receive it.\r\n3. Each of the _v3_ and _v4_ nodes responds with a `<PREPARE, h, 0, hash(B)>` message and stores a `<COMMIT, h, 0, commitSeal(B), hash(B)>` message locally\r\n4. Only _v3_ receives the `PREPARE` messages sent at the point above. Since _v3_ has received a valid `PROPOSAL` message and 2 valid `PREPARE` messages for block `B`, it sends a `<COMMIT, h, 0, commitSeal(B), hash(B)>` message.  \r\nOnly _v3_ is prepared on round 0.\r\n6. _v1_, who is malicious, alse sends a `<COMMIT, h, 0, commitSeal(B), hash(B)>` message.\r\n7. Only _v4_ receives the `COMMIT` messages sent at points 4 and 5 and adds them to its event queue. \r\n8. The thread handling the round timers for _v4_ is awakened by the expiry of the round timer for round 0 which causes a `RoundExpiry` event for the current round (_r_) to be put in the queue after the events for the 2 `COMMIT` messages added to the queue at the point above.\r\n9. The thread executing the IBFT state machine on _v4_ is scheduled and the `COMMIT` messages are dequeued before the `RoundExpiry` event. Since _v4_ has received 1 `PROPOSAL` and 3 valid `<COMMIT, h, 0, commitSeal(B), hash(B)>` messages (one of which is the one that it stored locally when it received a valid `PROPOSAL` message at point 3), it adds block `B` to its local blockchain.\r\n10. _v4_ deques the `RoundExpiry` event for round 0 and therefore it multicasts a `<ROUND-CHANGE, h, r+1, empty>` with an empty prepared certificate as it did not prepare (_v4_ never received the `PREPARE` message sent by _v3_ at point 3).\r\n11. Also the round timer for node _v2_ expires and therefore _v2_ multicasts a `<ROUND-CHANGE, r, h, r+1, empty>` message with an empty prepared certificate as _v2_ never received any message for round 0.\r\n12. _v1_, who is malicious, also multicasts a `<ROUND-CHANGE, h, r+1, empty>` message with an empty prepared certificate.\r\n13. _v2_, who is the proposer for round 1, receives the `ROUND-CHANGE` messages sent by _v1_, _v2_ and _v4_.\r\n14. Since all the `ROUND-CHANGE` messages sent by _v1_, _v2_ and _v4_ have an empty prepared certificate, _v2_ does not have any preferred block to propose and it multicasts a `<PROPOSAL, h, 0, B2>` with `B2` different from `B`. \r\n15. _v1_ and _v2_ respond with a `<PREPARE, h, 1, hash(B2)>` message.\r\n16. _v1_, _v2_ and _v3_ receive 2 valid `PREPARE` messages for round 1 and block `B2` and therefore they send a `<COMMIT, h, 1, commitSeal(B2), hash(B2)>` message.\r\n17. _v2_ receives all the `COMMIT` messages sent at the point above and therefore it adds block `B2` to its blockchain at height _h_.\r\n18. _v4_ and _v2_ end up with two different blocks for the same height _h_, `B` and `B2` respectively, on their respective blockchains.\r\n\r\n### Expected Behaviour of a Network of IBFT2 Validators\r\nIt should never happen that in a network of 4 IBFT2 validators, out of which only one is malicious, two honest nodes add two different blocks with the same height to their respective blockchains.\r\n\r\n## How was this bug discovered\r\nThis bug was discovered as part of the formal specification and verification of an alternative BFT consensus protocol based on IBFT2.\r\n\r\n",
  "closed_by": {
    "login": "saltiniroberto",
    "id": 38655434,
    "node_id": "MDQ6VXNlcjM4NjU1NDM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/38655434?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/saltiniroberto",
    "html_url": "https://github.com/saltiniroberto",
    "followers_url": "https://api.github.com/users/saltiniroberto/followers",
    "following_url": "https://api.github.com/users/saltiniroberto/following{/other_user}",
    "gists_url": "https://api.github.com/users/saltiniroberto/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/saltiniroberto/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/saltiniroberto/subscriptions",
    "organizations_url": "https://api.github.com/users/saltiniroberto/orgs",
    "repos_url": "https://api.github.com/users/saltiniroberto/repos",
    "events_url": "https://api.github.com/users/saltiniroberto/events{/privacy}",
    "received_events_url": "https://api.github.com/users/saltiniroberto/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/1734/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/1734/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/749426988",
    "html_url": "https://github.com/hyperledger/besu/issues/1734#issuecomment-749426988",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1734",
    "id": 749426988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTQyNjk4OA==",
    "user": {
      "login": "saltiniroberto",
      "id": 38655434,
      "node_id": "MDQ6VXNlcjM4NjU1NDM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38655434?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saltiniroberto",
      "html_url": "https://github.com/saltiniroberto",
      "followers_url": "https://api.github.com/users/saltiniroberto/followers",
      "following_url": "https://api.github.com/users/saltiniroberto/following{/other_user}",
      "gists_url": "https://api.github.com/users/saltiniroberto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saltiniroberto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saltiniroberto/subscriptions",
      "organizations_url": "https://api.github.com/users/saltiniroberto/orgs",
      "repos_url": "https://api.github.com/users/saltiniroberto/repos",
      "events_url": "https://api.github.com/users/saltiniroberto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saltiniroberto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-22T08:53:12Z",
    "updated_at": "2020-12-22T08:53:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed by #1575 ",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/749426988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/751617307",
    "html_url": "https://github.com/hyperledger/besu/issues/1734#issuecomment-751617307",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/1734",
    "id": 751617307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTYxNzMwNw==",
    "user": {
      "login": "sambacha",
      "id": 32783916,
      "node_id": "MDQ6VXNlcjMyNzgzOTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32783916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sambacha",
      "html_url": "https://github.com/sambacha",
      "followers_url": "https://api.github.com/users/sambacha/followers",
      "following_url": "https://api.github.com/users/sambacha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sambacha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sambacha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sambacha/subscriptions",
      "organizations_url": "https://api.github.com/users/sambacha/orgs",
      "repos_url": "https://api.github.com/users/sambacha/repos",
      "events_url": "https://api.github.com/users/sambacha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sambacha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-28T07:40:44Z",
    "updated_at": "2020-12-28T07:40:44Z",
    "author_association": "NONE",
    "body": "Is there a link to the formal specification and verification for IBFT2 you are referencing or is it just the whitepaper that was published. ",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/751617307/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
