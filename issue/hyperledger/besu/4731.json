{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/4731",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/4731/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/4731/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/4731/events",
  "html_url": "https://github.com/hyperledger/besu/issues/4731",
  "id": 1463183258,
  "node_id": "I_kwDODE2jmc5XNmea",
  "number": 4731,
  "title": "Attempt to send unsupported message (13) via cap eth/67",
  "user": {
    "login": "Gabriel-Trintinalia",
    "id": 14837672,
    "node_id": "MDQ6VXNlcjE0ODM3Njcy",
    "avatar_url": "https://avatars.githubusercontent.com/u/14837672?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Gabriel-Trintinalia",
    "html_url": "https://github.com/Gabriel-Trintinalia",
    "followers_url": "https://api.github.com/users/Gabriel-Trintinalia/followers",
    "following_url": "https://api.github.com/users/Gabriel-Trintinalia/following{/other_user}",
    "gists_url": "https://api.github.com/users/Gabriel-Trintinalia/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Gabriel-Trintinalia/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Gabriel-Trintinalia/subscriptions",
    "organizations_url": "https://api.github.com/users/Gabriel-Trintinalia/orgs",
    "repos_url": "https://api.github.com/users/Gabriel-Trintinalia/repos",
    "events_url": "https://api.github.com/users/Gabriel-Trintinalia/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Gabriel-Trintinalia/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2152224197,
      "node_id": "MDU6TGFiZWwyMTUyMjI0MTk3",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/TeamRevenant",
      "name": "TeamRevenant",
      "color": "78e298",
      "default": false,
      "description": "GH issues worked on by Revenant Team"
    },
    {
      "id": 3013559202,
      "node_id": "MDU6TGFiZWwzMDEzNTU5MjAy",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/mainnet",
      "name": "mainnet",
      "color": "9D578C",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "Gabriel-Trintinalia",
    "id": 14837672,
    "node_id": "MDQ6VXNlcjE0ODM3Njcy",
    "avatar_url": "https://avatars.githubusercontent.com/u/14837672?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Gabriel-Trintinalia",
    "html_url": "https://github.com/Gabriel-Trintinalia",
    "followers_url": "https://api.github.com/users/Gabriel-Trintinalia/followers",
    "following_url": "https://api.github.com/users/Gabriel-Trintinalia/following{/other_user}",
    "gists_url": "https://api.github.com/users/Gabriel-Trintinalia/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Gabriel-Trintinalia/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Gabriel-Trintinalia/subscriptions",
    "organizations_url": "https://api.github.com/users/Gabriel-Trintinalia/orgs",
    "repos_url": "https://api.github.com/users/Gabriel-Trintinalia/repos",
    "events_url": "https://api.github.com/users/Gabriel-Trintinalia/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Gabriel-Trintinalia/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "Gabriel-Trintinalia",
      "id": 14837672,
      "node_id": "MDQ6VXNlcjE0ODM3Njcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/14837672?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gabriel-Trintinalia",
      "html_url": "https://github.com/Gabriel-Trintinalia",
      "followers_url": "https://api.github.com/users/Gabriel-Trintinalia/followers",
      "following_url": "https://api.github.com/users/Gabriel-Trintinalia/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gabriel-Trintinalia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gabriel-Trintinalia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gabriel-Trintinalia/subscriptions",
      "organizations_url": "https://api.github.com/users/Gabriel-Trintinalia/orgs",
      "repos_url": "https://api.github.com/users/Gabriel-Trintinalia/repos",
      "events_url": "https://api.github.com/users/Gabriel-Trintinalia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gabriel-Trintinalia/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-11-24T11:14:42Z",
  "updated_at": "2022-11-26T02:43:19Z",
  "closed_at": "2022-11-26T02:43:19Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Message from @fab-10 :\r\n\r\n\r\n> investigating the issues  I found these error logs java.lang.UnsupportedOperationException: Attempt to send unsupported message (13) via cap eth/67\r\n\r\n```\r\njava.lang.UnsupportedOperationException: Attempt to send unsupported message (13) via cap eth/67\r\n\tat org.hyperledger.besu.ethereum.p2p.rlpx.connections.AbstractPeerConnection.doSend(AbstractPeerConnection.java:97)\r\n\tat org.hyperledger.besu.ethereum.p2p.rlpx.connections.AbstractPeerConnection.send(AbstractPeerConnection.java:86)\r\n\tat org.hyperledger.besu.ethereum.p2p.rlpx.connections.PeerConnection.sendForProtocol(PeerConnection.java:72)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.EthPeer.lambda$sendRequest$5(EthPeer.java:361)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.RequestManager.dispatchRequest(RequestManager.java:68)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.EthPeer.sendRequest(EthPeer.java:360)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.EthPeer.getNodeData(EthPeer.java:306)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.task.GetNodeDataFromPeerTask.lambda$sendRequest$0(GetNodeDataFromPeerTask.java:70)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.PendingPeerRequest.sendRequest(PendingPeerRequest.java:74)\r\n\tat java.base/java.util.Optional.ifPresent(Optional.java:183)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.PendingPeerRequest.attemptExecution(PendingPeerRequest.java:65)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.EthPeers.executePeerRequest(EthPeers.java:151)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.task.AbstractPeerRequestTask.sendRequestToPeer(AbstractPeerRequestTask.java:94)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.task.GetNodeDataFromPeerTask.sendRequest(GetNodeDataFromPeerTask.java:67)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.task.AbstractPeerRequestTask.executeTask(AbstractPeerRequestTask.java:59)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.task.AbstractEthTask.executeTaskTimed(AbstractEthTask.java:150)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.task.AbstractEthTask.run(AbstractEthTask.java:75)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.task.AbstractEthTask.executeSubTask(AbstractEthTask.java:120)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.task.RetryingGetNodeDataFromPeerTask.executePeerTask(RetryingGetNodeDataFromPeerTask.java:64)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.task.AbstractRetryingPeerTask.executeTask(AbstractRetryingPeerTask.java:90)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.task.AbstractEthTask.executeTaskTimed(AbstractEthTask.java:150)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.task.AbstractEthTask.run(AbstractEthTask.java:75)\r\n\tat org.hyperledger.besu.ethereum.eth.sync.worldstate.WorldStatePeerTrieNodeFinder.findByGetNodeData(WorldStatePeerTrieNodeFinder.java:115)\r\n\tat org.hyperledger.besu.ethereum.eth.sync.worldstate.WorldStatePeerTrieNodeFinder.getAccountStorageTrieNode(WorldStatePeerTrieNodeFinder.java:93)\r\n\tat org.hyperledger.besu.ethereum.bonsai.BonsaiWorldStateKeyValueStorage.lambda$getAccountStorageTrieNode$4(BonsaiWorldStateKeyValueStorage.java:158)\r\n\tat java.base/java.util.Optional.flatMap(Optional.java:294)\r\n\tat org.hyperledger.besu.ethereum.bonsai.BonsaiWorldStateKeyValueStorage.lambda$getAccountStorageTrieNode$5(BonsaiWorldStateKeyValueStorage.java:156)\r\n\tat java.base/java.util.Optional.or(Optional.java:318)\r\n\tat org.hyperledger.besu.ethereum.bonsai.BonsaiWorldStateKeyValueStorage.getAccountStorageTrieNode(BonsaiWorldStateKeyValueStorage.java:154)\r\n\tat org.hyperledger.besu.ethereum.bonsai.BonsaiWorldStateKeyValueStorage.lambda$getStorageValueBySlotHash$6(BonsaiWorldStateKeyValueStorage.java:196)\r\n\tat org.hyperledger.besu.ethereum.trie.StoredNodeFactory.retrieve(StoredNodeFactory.java:96)\r\n\tat org.hyperledger.besu.ethereum.trie.StoredNode.load(StoredNode.java:130)\r\n\tat org.hyperledger.besu.ethereum.trie.StoredNode.accept(StoredNode.java:63)\r\n\tat org.hyperledger.besu.ethereum.trie.StoredMerklePatriciaTrie.get(StoredMerklePatriciaTrie.java:119)\r\n\tat org.hyperledger.besu.ethereum.bonsai.BonsaiWorldStateKeyValueStorage.getStorageValueBySlotHash(BonsaiWorldStateKeyValueStorage.java:200)\r\n\tat org.hyperledger.besu.ethereum.bonsai.BonsaiPersistedWorldState.getStorageValueBySlotHash(BonsaiPersistedWorldState.java:404)\r\n\tat org.hyperledger.besu.ethereum.bonsai.BonsaiWorldStateUpdater.getStorageValueBySlotHash(BonsaiWorldStateUpdater.java:332)\r\n\tat org.hyperledger.besu.ethereum.bonsai.BonsaiWorldStateUpdater.getStorageValue(BonsaiWorldStateUpdater.java:319)\r\n\tat org.hyperledger.besu.ethereum.bonsai.BonsaiAccount.getStorageValue(BonsaiAccount.java:208)\r\n\tat org.hyperledger.besu.evm.worldstate.UpdateTrackingAccount.getStorageValue(UpdateTrackingAccount.java:213)\r\n\tat org.hyperledger.besu.evm.worldstate.UpdateTrackingAccount.getStorageValue(UpdateTrackingAccount.java:213)\r\n\tat org.hyperledger.besu.evm.worldstate.UpdateTrackingAccount.getStorageValue(UpdateTrackingAccount.java:213)\r\n\tat org.hyperledger.besu.evm.operation.SLoadOperation.execute(SLoadOperation.java:58)\r\n\tat org.hyperledger.besu.evm.EVM.runToHalt(EVM.java:282)\r\n\tat org.hyperledger.besu.evm.processor.AbstractMessageProcessor.codeExecute(AbstractMessageProcessor.java:161)\r\n\tat org.hyperledger.besu.evm.processor.AbstractMessageProcessor.process(AbstractMessageProcessor.java:173)\r\n\tat org.hyperledger.besu.ethereum.mainnet.MainnetTransactionProcessor.process(MainnetTransactionProcessor.java:492)\r\n\tat org.hyperledger.besu.ethereum.mainnet.MainnetTransactionProcessor.processTransaction(MainnetTransactionProcessor.java:404)\r\n\tat org.hyperledger.besu.ethereum.mainnet.AbstractBlockProcessor.processBlock(AbstractBlockProcessor.java:104)\r\n\tat org.hyperledger.besu.ethereum.mainnet.BlockProcessor.processBlock(BlockProcessor.java:76)\r\n\tat org.hyperledger.besu.ethereum.MainnetBlockValidator.processBlock(MainnetBlockValidator.java:205)\r\n\tat org.hyperledger.besu.ethereum.MainnetBlockValidator.validateAndProcessBlock(MainnetBlockValidator.java:135)\r\n\tat org.hyperledger.besu.ethereum.MainnetBlockValidator.validateAndProcessBlock(MainnetBlockValidator.java:74)\r\n\tat org.hyperledger.besu.ethereum.eth.sync.backwardsync.BackwardSyncContext.saveBlock(BackwardSyncContext.java:320)\r\n\tat org.hyperledger.besu.ethereum.eth.sync.backwardsync.ForwardSyncStep.saveBlocks(ForwardSyncStep.java:124)\r\n\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\r\n\tat java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)\r\n\tat java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2073)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.task.RetryingGetBlocksFromPeersTask.lambda$executeTaskOnCurrentPeer$0(RetryingGetBlocksFromPeersTask.java:88)\r\n\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\r\n\tat java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)\r\n\tat java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2073)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.task.AbstractPeerRequestTask.lambda$executeTask$2(AbstractPeerRequestTask.java:83)\r\n\tat java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:859)\r\n\tat java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:837)\r\n\tat java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)\r\n\tat java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2073)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.task.AbstractPeerRequestTask.lambda$handleMessage$3(AbstractPeerRequestTask.java:110)\r\n\tat java.base/java.util.Optional.ifPresent(Optional.java:183)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.task.AbstractPeerRequestTask.handleMessage(AbstractPeerRequestTask.java:108)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.task.AbstractPeerRequestTask.lambda$executeTask$0(AbstractPeerRequestTask.java:67)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.RequestManager$ResponseStream.dispatchBufferedResponses(RequestManager.java:211)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.RequestManager$ResponseStream.processMessage(RequestManager.java:202)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.RequestManager.lambda$dispatchResponse$0(RequestManager.java:82)\r\n\tat java.base/java.util.Optional.ifPresentOrElse(Optional.java:201)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.RequestManager.dispatchResponse(RequestManager.java:81)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.EthPeer.lambda$dispatch$7(EthPeer.java:386)\r\n\tat java.base/java.util.Optional.ifPresentOrElse(Optional.java:201)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.EthPeer.dispatch(EthPeer.java:385)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.EthPeers.dispatchMessage(EthPeers.java:160)\r\n\tat org.hyperledger.besu.ethereum.eth.manager.EthProtocolManager.processMessage(EthProtocolManager.java:300)\r\n\tat org.hyperledger.besu.ethereum.p2p.network.NetworkRunner.lambda$setupHandlers$0(NetworkRunner.java:135)\r\n\tat org.hyperledger.besu.ethereum.p2p.rlpx.connections.PeerConnectionEvents.lambda$dispatchMessage$1(PeerConnectionEvents.java:64)\r\n\tat org.hyperledger.besu.util.Subscribers.lambda$forEach$0(Subscribers.java:112)\r\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\r\n\tat org.hyperledger.besu.util.Subscribers.forEach(Subscribers.java:109)\r\n\tat org.hyperledger.besu.ethereum.p2p.rlpx.connections.PeerConnectionEvents.dispatchMessage(PeerConnectionEvents.java:64)\r\n\tat org.hyperledger.besu.ethereum.p2p.rlpx.connections.netty.ApiHandler.channelRead0(ApiHandler.java:99)\r\n\tat org.hyperledger.besu.ethereum.p2p.rlpx.connections.netty.ApiHandler.channelRead0(ApiHandler.java:33)\r\n\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:829)\r\n```",
  "closed_by": {
    "login": "Gabriel-Trintinalia",
    "id": 14837672,
    "node_id": "MDQ6VXNlcjE0ODM3Njcy",
    "avatar_url": "https://avatars.githubusercontent.com/u/14837672?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Gabriel-Trintinalia",
    "html_url": "https://github.com/Gabriel-Trintinalia",
    "followers_url": "https://api.github.com/users/Gabriel-Trintinalia/followers",
    "following_url": "https://api.github.com/users/Gabriel-Trintinalia/following{/other_user}",
    "gists_url": "https://api.github.com/users/Gabriel-Trintinalia/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Gabriel-Trintinalia/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Gabriel-Trintinalia/subscriptions",
    "organizations_url": "https://api.github.com/users/Gabriel-Trintinalia/orgs",
    "repos_url": "https://api.github.com/users/Gabriel-Trintinalia/repos",
    "events_url": "https://api.github.com/users/Gabriel-Trintinalia/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Gabriel-Trintinalia/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/4731/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/4731/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
