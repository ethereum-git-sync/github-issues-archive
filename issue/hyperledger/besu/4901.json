{
  "url": "https://api.github.com/repos/hyperledger/besu/issues/4901",
  "repository_url": "https://api.github.com/repos/hyperledger/besu",
  "labels_url": "https://api.github.com/repos/hyperledger/besu/issues/4901/labels{/name}",
  "comments_url": "https://api.github.com/repos/hyperledger/besu/issues/4901/comments",
  "events_url": "https://api.github.com/repos/hyperledger/besu/issues/4901/events",
  "html_url": "https://github.com/hyperledger/besu/issues/4901",
  "id": 1526705224,
  "node_id": "I_kwDODE2jmc5a_6xI",
  "number": 4901,
  "title": "Besu world state download pipeline cancelled due to RocksDB Busy exception.",
  "user": {
    "login": "wcgcyx",
    "id": 27591580,
    "node_id": "MDQ6VXNlcjI3NTkxNTgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/27591580?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wcgcyx",
    "html_url": "https://github.com/wcgcyx",
    "followers_url": "https://api.github.com/users/wcgcyx/followers",
    "following_url": "https://api.github.com/users/wcgcyx/following{/other_user}",
    "gists_url": "https://api.github.com/users/wcgcyx/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wcgcyx/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wcgcyx/subscriptions",
    "organizations_url": "https://api.github.com/users/wcgcyx/orgs",
    "repos_url": "https://api.github.com/users/wcgcyx/repos",
    "events_url": "https://api.github.com/users/wcgcyx/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wcgcyx/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3932728358,
      "node_id": "LA_kwDODE2jmc7qaKwm",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/syncing",
      "name": "syncing",
      "color": "ECC431",
      "default": false,
      "description": ""
    },
    {
      "id": 5080817549,
      "node_id": "LA_kwDODE2jmc8AAAABLtcfjQ",
      "url": "https://api.github.com/repos/hyperledger/besu/labels/forest",
      "name": "forest",
      "color": "62EE48",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-01-10T03:31:53Z",
  "updated_at": "2023-01-26T18:56:38Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "<!-- Have you done the following? -->\r\n<!--   * read the Code of Conduct? By filing an Issue, you are expected to -->  \r\n<!--     comply with it, including treating everyone with respect: -->\r\n<!--     https://github.com/hyperledger/besu/blob/main/CODE_OF_CONDUCT.md -->\r\n<!--   * Reproduced the issue in the latest version of the software -->\r\n<!--   * Read the debugging docs: https://besu.hyperledger.org/en/stable/HowTo/Monitor/Logging/ -->\r\n<!--   * Duplicate Issue check:  https://github.com/search?q=+is%3Aissue+repo%3Ahyperledger/Besu -->\r\n<!-- Note:  Not all sections will apply to all issue types. -->\r\n\r\n### Description\r\nAt the moment, the world state sync would hangs if besu encounters RocksDB busy exception as it breaks the pipeline. Especially when using forest data format - I'm getting this after enabling DEBUG logging:\r\n```\r\n{\"@timestamp\":\"2023-01-06T02:40:19,785\",\"level\":\"DEBUG\",\"thread\":\"EthScheduler-Services-8 (batchPersistStorageData)\",\"class\":\"Pipeline\",\"message\":\"Unhandled exception in pipeline. Aborting.\",\"throwable\":\" org.hyperledger.besu.plugin.services.exception.StorageException: org.rocksdb.RocksDBException: Busy\r\n    at org.hyperledger.besu.plugin.services.storage.rocksdb.segmented.RocksDBColumnarKeyValueStorage$RocksDbTransaction.commit(RocksDBColumnarKeyValueStorage.java:350)\r\n    at org.hyperledger.besu.services.kvstore.SegmentedKeyValueStorageTransactionTransitionValidatorDecorator.commit(SegmentedKeyValueStorageTransactionTransitionValidatorDecorator.java:49)\r\n    at org.hyperledger.besu.services.kvstore.SegmentedKeyValueStorageAdapter$1.commit(SegmentedKeyValueStorageAdapter.java:119)\r\n    at org.hyperledger.besu.ethereum.storage.keyvalue.WorldStateKeyValueStorage$Updater.commit(WorldStateKeyValueStorage.java:211)\r\n    at org.hyperledger.besu.ethereum.eth.sync.snapsync.request.StorageRangeDataRequest.lambda$doPersist$0(StorageRangeDataRequest.java:97)\r\n    at org.hyperledger.besu.ethereum.trie.CommitVisitor.maybeStoreNode(CommitVisitor.java:72)\r\n    at org.hyperledger.besu.ethereum.eth.sync.snapsync.StackTrie$1.maybeStoreNode(StackTrie.java:125)\r\n    at org.hyperledger.besu.ethereum.trie.CommitVisitor.visit(CommitVisitor.java:63)\r\n    at org.hyperledger.besu.ethereum.trie.LeafNode.accept(LeafNode.java:79)\r\n    at org.hyperledger.besu.ethereum.trie.CommitVisitor.visit(CommitVisitor.java:50)\r\n    at org.hyperledger.besu.ethereum.trie.BranchNode.accept(BranchNode.java:90)\r\n    at org.hyperledger.besu.ethereum.trie.CommitVisitor.visit(CommitVisitor.java:50)\r\n    at org.hyperledger.besu.ethereum.trie.BranchNode.accept(BranchNode.java:90)\r\n    at org.hyperledger.besu.ethereum.trie.CommitVisitor.visit(CommitVisitor.java:50)\r\n    at org.hyperledger.besu.ethereum.trie.BranchNode.accept(BranchNode.java:90)\r\n    at org.hyperledger.besu.ethereum.trie.StoredMerklePatriciaTrie.commit(StoredMerklePatriciaTrie.java:170)\r\n    at org.hyperledger.besu.ethereum.eth.sync.snapsync.StackTrie.commit(StackTrie.java:119)\r\n    at org.hyperledger.besu.ethereum.eth.sync.snapsync.request.StorageRangeDataRequest.doPersist(StorageRangeDataRequest.java:102)\r\n    at org.hyperledger.besu.ethereum.eth.sync.snapsync.request.SnapDataRequest.persist(SnapDataRequest.java:101)\r\n    at org.hyperledger.besu.ethereum.eth.sync.snapsync.PersistDataStep.persist(PersistDataStep.java:59)\r\n    at org.hyperledger.besu.ethereum.eth.sync.snapsync.SnapWorldStateDownloadProcess$Builder.lambda$build$8(SnapWorldStateDownloadProcess.java:264)\r\n    at org.hyperledger.besu.services.pipeline.MapProcessor.processNextInput(MapProcessor.java:31)\r\n    at org.hyperledger.besu.services.pipeline.ProcessingStage.run(ProcessingStage.java:38)\r\n    at org.hyperledger.besu.services.pipeline.Pipeline.lambda$runWithErrorHandling$3(Pipeline.java:152)\r\n    at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n    at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n    at java.base/java.lang.Thread.run(Thread.java:829)\r\nCaused by: org.rocksdb.RocksDBException: Busy\r\n    at org.rocksdb.Transaction.commit(Native Method)\r\n    at org.rocksdb.Transaction.commit(Transaction.java:208)\r\n    at org.hyperledger.besu.plugin.services.storage.rocksdb.segmented.RocksDBColumnarKeyValueStorage$RocksDbTransaction.commit(RocksDBColumnarKeyValueStorage.java:344)\r\n    ... 28 more\"}\r\n```\r\nI've attempted a fix here: \r\nhttps://github.com/hyperledger/besu/compare/main...wcgcyx:besu:forest-sync-rocksdb-retry?expand=1 \r\nThis addressed any busy exception during sync but ideally this could be done in rocksdb level so the retry mechanism works for anywhere in the codebase. \r\n\r\n### Acceptance Criteria\r\n* Besu recovers from database busy exception (e.g. retry after busy) and continues sync.\r\n\r\n### Steps to Reproduce (Bug)\r\n1. Start besu on mainnet with FOREST data format (snap sync, checkpoint sync or fast sync) with DEBUG logging\r\n\r\n**Expected behavior:** [What you expect to happen]\r\nBesu finishes syncing.\r\n\r\n**Actual behavior:** [What actually happens]\r\nWorld state download cancelled when busy exception is thrown and besu never finishes syncing.\r\n\r\n**Frequency:** [What percentage of the time does it occur?]\r\nAlmost every time on my machine.\r\n\r\n### Versions (Add all that apply)\r\n* Software version: [22.10.3 and 23.1.0-beta]\r\n\r\n### Additional Information (Add any of the following or anything else that may be relevant)\r\n* Besu setup info - mainnet\r\n* System info - MacBook Pro 2021, CPU: M1 Pro, Memory: 32GB\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/4901/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/hyperledger/besu/issues/4901/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1405128568",
    "html_url": "https://github.com/hyperledger/besu/issues/4901#issuecomment-1405128568",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/4901",
    "id": 1405128568,
    "node_id": "IC_kwDODE2jmc5TwI94",
    "user": {
      "login": "non-fungible-nelson",
      "id": 85905982,
      "node_id": "MDQ6VXNlcjg1OTA1OTgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/85905982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/non-fungible-nelson",
      "html_url": "https://github.com/non-fungible-nelson",
      "followers_url": "https://api.github.com/users/non-fungible-nelson/followers",
      "following_url": "https://api.github.com/users/non-fungible-nelson/following{/other_user}",
      "gists_url": "https://api.github.com/users/non-fungible-nelson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/non-fungible-nelson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/non-fungible-nelson/subscriptions",
      "organizations_url": "https://api.github.com/users/non-fungible-nelson/orgs",
      "repos_url": "https://api.github.com/users/non-fungible-nelson/repos",
      "events_url": "https://api.github.com/users/non-fungible-nelson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/non-fungible-nelson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-26T14:52:52Z",
    "updated_at": "2023-01-26T14:52:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ahamlat - any opinion on the PR linked above? ",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1405128568/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1405458761",
    "html_url": "https://github.com/hyperledger/besu/issues/4901#issuecomment-1405458761",
    "issue_url": "https://api.github.com/repos/hyperledger/besu/issues/4901",
    "id": 1405458761,
    "node_id": "IC_kwDODE2jmc5TxZlJ",
    "user": {
      "login": "ahamlat",
      "id": 5099602,
      "node_id": "MDQ6VXNlcjUwOTk2MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5099602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahamlat",
      "html_url": "https://github.com/ahamlat",
      "followers_url": "https://api.github.com/users/ahamlat/followers",
      "following_url": "https://api.github.com/users/ahamlat/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahamlat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahamlat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahamlat/subscriptions",
      "organizations_url": "https://api.github.com/users/ahamlat/orgs",
      "repos_url": "https://api.github.com/users/ahamlat/repos",
      "events_url": "https://api.github.com/users/ahamlat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahamlat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-26T18:56:37Z",
    "updated_at": "2023-01-26T18:56:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "The issue here seems to be more related to FOREST implementation. We had \"Busy\" exceptions in the past on BONSAI as well but IIRC we haven't had this exception recently as it should be fixed.\r\nRegarding FOREST, Zhenyang suggests a workaround to catch the \"busy\" exception and try again, retryAttempts times. Ideally, we would do the same work as BONSAI to fix concurrency issues but I'm not sure that FOREST is used a lot. So depending on our priorities, we can imagine three options\r\n1. Do nothing, as we're pushing for BONSAI instead of FOREST\r\n2. Create the workaround if the issue is still reported by users\r\n3. Take more time to study the concurrency issues and resolve them",
    "reactions": {
      "url": "https://api.github.com/repos/hyperledger/besu/issues/comments/1405458761/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
