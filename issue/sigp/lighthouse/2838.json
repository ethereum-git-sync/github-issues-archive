{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/2838",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/2838/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/2838/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/2838/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/2838",
  "id": 1066841364,
  "node_id": "I_kwDOCFeAzc4_lrUU",
  "number": 2838,
  "title": "Proposer boosting in fork choice",
  "user": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1071554809,
      "node_id": "MDU6TGFiZWwxMDcxNTU0ODA5",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/spec_change",
      "name": "spec_change",
      "color": "0bedad",
      "default": false,
      "description": "A change related to the Eth2 spec"
    },
    {
      "id": 2034355093,
      "node_id": "MDU6TGFiZWwyMDM0MzU1MDkz",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/consensus",
      "name": "consensus",
      "color": "5e59bf",
      "default": false,
      "description": "An issue/PR that touches consensus code, such as state_processing or block verification."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2021-11-30T06:19:59Z",
  "updated_at": "2021-12-13T23:56:36Z",
  "closed_at": "2021-12-13T23:56:36Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nTracking issue for the implementation of proposer boosting in fork choice: https://github.com/ethereum/consensus-specs/pull/2730\r\n\r\n## Current Status\r\n\r\nI've started on an implementation here: https://github.com/michaelsproul/lighthouse/commit/2aca02a9a8c08910247ee64a368277928a38531c\r\n\r\nI think the best way to capture the sub-slot timing is to pass the `block_delay` in as a `Duration` to `on_block`. I experimented with making the fork choice store aware of `Duration`s rather than slots, but it got quite messy, and the fork choice store ended up requiring a copy of the slot clock. That approach is in this commit if we wish to revive it: https://github.com/michaelsproul/lighthouse/commit/000ca67bb5b8cf9d9b317b8e038864c05f2207b0.\r\n\r\n## TODO\r\n\r\n### Apply boost weight\r\n\r\nThe major TODO is implementing the proposer boost's influence on fork choice via the proto array.\r\n\r\nI'm not super familiar with the Proto fork choice internals, but I think we could implement the boost in `ProtoArrayForkChoice::find_head`, by adding it (or subtracting it) as a delta before calling `apply_score_changes`.\r\n\r\n----\r\n\r\nInitially I thought something like this would work:\r\n\r\n* Keep track of the `proposer_boost_root` and its associated weight in the `ProtoArray`. I.e. a field like `proposer_boost: (Hash256, u64)`.\r\n* When `on_block` is called with a new boosted block, compute the boost weight and _add_ it to the boosted block's `ProtoNode.weight`.\r\n* When `on_block` is called with _any block_, invalidate any previous boost by looking up the node corresponding to the previous value of `ProtoArray.proposer_boost` and _subtracting_ the boost.\r\n\r\n However I'm not sure if changes to the child weights would be correctly applied when the boost is removed, which is why I'm leaning towards the `compute_deltas`/`apply_score_changes` approach.\r\n \r\n ### Optional boosting\r\n \r\n Ideally we can turn proposer boosting off in the CLI\r\n \r\n ### Migrations\r\n \r\n I've left a `FIXME(boost)` about migrating the fork choice store to contain the `proposer_boost_root`. It could be added as part of the same migration from https://github.com/sigp/lighthouse/pull/2822, or a separate one (I think I prefer the same migration).",
  "closed_by": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/2838/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/2838/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/982997106",
    "html_url": "https://github.com/sigp/lighthouse/issues/2838#issuecomment-982997106",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2838",
    "id": 982997106,
    "node_id": "IC_kwDOCFeAzc46l1hy",
    "user": {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-30T20:32:51Z",
    "updated_at": "2021-11-30T20:32:51Z",
    "author_association": "COLLABORATOR",
    "body": "Since the `proposer_boost_root` is tracked in the `store`, I think we'll need to pass it into the `find_head` method, similar to how we pass in information about the justified and finalized checkpoints. Otherwise we don't easily have a means of updating `ProtoArray` from the `on_tick` method. Then a route we could go is storing a `previous_proposer_boost: (Hash256, u64)` in the `ProtoArray` and on every call to `find_head` use the previous proposer boost to create a negative delta and calculate the current proposer boost and apply it as a positive delta. Then update `previous_proposer_boost` with the freshly calculated one.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/982997106/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/983065632",
    "html_url": "https://github.com/sigp/lighthouse/issues/2838#issuecomment-983065632",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2838",
    "id": 983065632,
    "node_id": "IC_kwDOCFeAzc46mGQg",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-30T22:10:51Z",
    "updated_at": "2021-11-30T22:10:51Z",
    "author_association": "MEMBER",
    "body": "> Otherwise we don't easily have a means of updating ProtoArray from the on_tick method. \r\n\r\nAh of course, we need to make sure that the boost is removed if there's a skipped slot immediately after a boosted block.\r\n\r\nI think storing the `previous_proposer_boost` in `ProtoArray` and then subtracting it from `find_head` sounds good :+1:",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/983065632/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/983081000",
    "html_url": "https://github.com/sigp/lighthouse/issues/2838#issuecomment-983081000",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2838",
    "id": 983081000,
    "node_id": "IC_kwDOCFeAzc46mKAo",
    "user": {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-30T22:34:52Z",
    "updated_at": "2021-11-30T22:46:27Z",
    "author_association": "COLLABORATOR",
    "body": "> I experimented with making the fork choice store aware of Durations rather than slots, but it got quite messy, and the fork choice store ended up requiring a copy of the slot clock. That approach is in this commit if we wish to revive it: michaelsproul@000ca67.\r\n\r\nSeems like this might make integrating the EF tests easier, so I might try to revive it\r\n\r\nEdit: Nevermind, don't think it's necessary",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/983081000/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/993018895",
    "html_url": "https://github.com/sigp/lighthouse/issues/2838#issuecomment-993018895",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2838",
    "id": 993018895,
    "node_id": "IC_kwDOCFeAzc47MEQP",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-12-13T23:56:34Z",
    "updated_at": "2021-12-13T23:56:34Z",
    "author_association": "MEMBER",
    "body": "Closed by #2822 :tada:",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/993018895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
