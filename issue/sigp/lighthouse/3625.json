{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/3625",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/3625/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/3625/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/3625/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/3625",
  "id": 1396735288,
  "node_id": "I_kwDOCFeAzc5TQH04",
  "number": 3625,
  "title": "EIP-4844 Tracking",
  "user": {
    "login": "realbigsean",
    "id": 5160426,
    "node_id": "MDQ6VXNlcjUxNjA0MjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/realbigsean",
    "html_url": "https://github.com/realbigsean",
    "followers_url": "https://api.github.com/users/realbigsean/followers",
    "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
    "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
    "organizations_url": "https://api.github.com/users/realbigsean/orgs",
    "repos_url": "https://api.github.com/users/realbigsean/repos",
    "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
    "received_events_url": "https://api.github.com/users/realbigsean/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4615284981,
      "node_id": "LA_kwDOCFeAzc8AAAABExeo9Q",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/deneb",
      "name": "deneb",
      "color": "B7BBEC",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-10-04T19:19:23Z",
  "updated_at": "2022-12-08T14:11:54Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nThanks a lot @dknopik and @mariusVanDerWijden for kick starting the Lighthouse implementation!\r\n\r\nThe main Lighthouse EIP-4844 branch will be here: https://github.com/sigp/lighthouse/tree/eip4844\r\n\r\nThis branch currently has a lot of boiler plate implemented but there is still a lot of functionality missing. The goal in the short term is to at least get this branch far enough along to participate in devnets.  I'll write up issues for the tasks listed below and link them here. All the specs are still under development so the info here will likely change. \r\n\r\n## Tasks [Outdated - See below [comment](https://github.com/sigp/lighthouse/issues/3625#issuecomment-1304268350)]\r\n\r\n#### Primary\r\n- Block and blob processing\r\n  - We could treat blocks as optimistic until blobs are validated\r\n  - A `BlobHandle` similar to `ExecPayloadHandle` but would be for an RPC request and include a channel receiver from gossip \r\n  - Verifying kzg commintments against transactions - this is specified in gossip and block processing\r\n- Block production\r\n  - Includes kzg proof construction \r\n  - KZG implementation status\r\n    - https://github.com/benjaminion/c-kzg - from what I can tell no rust bindings yet\r\n    - https://github.com/ralexstokes/kzg\r\n  - `BlobSidecar` signing\r\n  - Implementation of Beacon API changes to support unsigned and signed blob communication\r\n- Gossip validation\r\n  - blob and block validation are currently independent of each other in gossip \r\n- Make the execution payload into a `superstruct`\r\n  - Mark and Michael have been working on this in our Capella implementation. We will similarly need this because there are new fee market fields in the execution payload.\r\n#### Secondary\r\n- Blob pruning\r\n- Newtype SSZ derive `#[ssz(transparent)]`\r\n\r\n## Outstanding Questions\r\n - Will blocks and blobs be gossiped and RPC'd together? Currently no on the devnet\r\n - Should we include `BlobsByRoot` in RPC?\r\n - Should `BlobsByRange` use signed or unsigned blobs?\r\n\r\n## Spec Links\r\n\r\n- Meta Spec - https://hackmd.io/@protolambda/eip4844-meta\r\n- Execution API - https://github.com/ethereum/execution-apis/pull/197\r\n- Beacon API - Does not exist yet but we'll need something for block production\r\n- Consensus specs - https://github.com/ethereum/consensus-specs/tree/dev/specs/eip4844\r\n- The [EIP](https://eips.ethereum.org/EIPS/eip-4844) itself\r\n- EIP 4844 Devnet repo - https://github.com/Inphi/eip4844-interop\r\n\r\n## Other Useful Links\r\n\r\n- Prysm implementation notes https://hackmd.io/hZefl5F5RgWXeibgWflRQQ?view\r\n- Notes on whether to couple block and blob in RPC/gossip https://notes.ethereum.org/RLOGb1hYQ0aWt3hcVgzhgQ?view\r\n- General FAQ https://notes.ethereum.org/@vbuterin/proto_danksharding_faq#What-is-proto-danksharding-aka-EIP-4844\r\n- Readiness checklist https://github.com/ethereum/pm/blob/master/Breakout-Room/4844-readiness-checklist.md\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/3625/reactions",
    "total_count": 7,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 5,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/3625/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1267479801",
    "html_url": "https://github.com/sigp/lighthouse/issues/3625#issuecomment-1267479801",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3625",
    "id": 1267479801,
    "node_id": "IC_kwDOCFeAzc5LjDT5",
    "user": {
      "login": "pawanjay176",
      "id": 9890508,
      "node_id": "MDQ6VXNlcjk4OTA1MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9890508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pawanjay176",
      "html_url": "https://github.com/pawanjay176",
      "followers_url": "https://api.github.com/users/pawanjay176/followers",
      "following_url": "https://api.github.com/users/pawanjay176/following{/other_user}",
      "gists_url": "https://api.github.com/users/pawanjay176/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pawanjay176/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pawanjay176/subscriptions",
      "organizations_url": "https://api.github.com/users/pawanjay176/orgs",
      "repos_url": "https://api.github.com/users/pawanjay176/repos",
      "events_url": "https://api.github.com/users/pawanjay176/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pawanjay176/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-04T19:26:22Z",
    "updated_at": "2022-10-04T19:26:22Z",
    "author_association": "MEMBER",
    "body": "> Should we include BlobsByRoot in RPC?\r\n\r\nI think yes, because in the case when we get a `BeaconBlock` before the `Blob`, we can request for the corresponding `block_root` over RPC similar to how we do for attestations and sync committee messages.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1267479801/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1271476780",
    "html_url": "https://github.com/sigp/lighthouse/issues/3625#issuecomment-1271476780",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3625",
    "id": 1271476780,
    "node_id": "IC_kwDOCFeAzc5LyTIs",
    "user": {
      "login": "xrchz",
      "id": 181254,
      "node_id": "MDQ6VXNlcjE4MTI1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/181254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xrchz",
      "html_url": "https://github.com/xrchz",
      "followers_url": "https://api.github.com/users/xrchz/followers",
      "following_url": "https://api.github.com/users/xrchz/following{/other_user}",
      "gists_url": "https://api.github.com/users/xrchz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xrchz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xrchz/subscriptions",
      "organizations_url": "https://api.github.com/users/xrchz/orgs",
      "repos_url": "https://api.github.com/users/xrchz/repos",
      "events_url": "https://api.github.com/users/xrchz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xrchz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-07T11:35:14Z",
    "updated_at": "2022-10-07T11:35:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd be happy to add Rust bindings to c-kzg if someone at Lighthouse can coordinate on what interface would be good for them. We have a stripped down 4844 specific version of c-kzg in development here, currently adding C# bindings for Nethermind. https://github.com/dankrad/c-kzg/tree/4844/min-bindings",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1271476780/reactions",
      "total_count": 3,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1304268350",
    "html_url": "https://github.com/sigp/lighthouse/issues/3625#issuecomment-1304268350",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3625",
    "id": 1304268350,
    "node_id": "IC_kwDOCFeAzc5NvY4-",
    "user": {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-04T21:17:54Z",
    "updated_at": "2022-12-08T14:11:54Z",
    "author_association": "COLLABORATOR",
    "body": "### Outstanding tasks [Updated Nov. 4th]\r\n\r\nTasks required to join the next devnet:\r\n\r\n- [x] KZG crypto WIP by @pawanjay176  https://github.com/sigp/lighthouse/issues/3685\r\n- [x] Blob sync https://github.com/sigp/lighthouse/issues/3686\r\n- [x] Complete blob produciton https://github.com/sigp/lighthouse/issues/3687\r\n\r\nTasks not required to join the next devnet:\r\n\r\n- [x] Consensus spec tests https://github.com/sigp/lighthouse/issues/3688\r\n- [x] Local testnet that forks to 4844 https://github.com/sigp/lighthouse/issues/3691\r\n- [ ] Execution block generator across forks https://github.com/sigp/lighthouse/issues/3690\r\n- [ ] Builder API https://github.com/sigp/lighthouse/issues/3689",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1304268350/reactions",
      "total_count": 3,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 3,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
