{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/2883",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/2883/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/2883/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/2883/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/2883",
  "id": 1088516667,
  "node_id": "I_kwDOCFeAzc5A4XI7",
  "number": 2883,
  "title": "Set fee recipient per validator",
  "user": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647284,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODQ=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/enhancement",
      "name": "enhancement",
      "color": "a2eeef",
      "default": true,
      "description": "New feature or request"
    },
    {
      "id": 2490303709,
      "node_id": "MDU6TGFiZWwyNDkwMzAzNzA5",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/A0",
      "name": "A0",
      "color": "bc3e3a",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2021-12-24T23:50:50Z",
  "updated_at": "2022-02-17T23:36:24Z",
  "closed_at": "2022-02-17T23:36:23Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "It would be nice to be able to set the fee recipient on a per-validator basis so that validators sharing a BN need not use the same address",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/2883/reactions",
    "total_count": 4,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/2883/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1009760138",
    "html_url": "https://github.com/sigp/lighthouse/issues/2883#issuecomment-1009760138",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2883",
    "id": 1009760138,
    "node_id": "IC_kwDOCFeAzc48L7eK",
    "user": {
      "login": "beetrootkid",
      "id": 34025634,
      "node_id": "MDQ6VXNlcjM0MDI1NjM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/34025634?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beetrootkid",
      "html_url": "https://github.com/beetrootkid",
      "followers_url": "https://api.github.com/users/beetrootkid/followers",
      "following_url": "https://api.github.com/users/beetrootkid/following{/other_user}",
      "gists_url": "https://api.github.com/users/beetrootkid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beetrootkid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beetrootkid/subscriptions",
      "organizations_url": "https://api.github.com/users/beetrootkid/orgs",
      "repos_url": "https://api.github.com/users/beetrootkid/repos",
      "events_url": "https://api.github.com/users/beetrootkid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beetrootkid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-11T09:32:40Z",
    "updated_at": "2022-01-11T09:38:45Z",
    "author_association": "NONE",
    "body": "Can I just check that by 'per validator', you mean validator account rather than validator client? Also, any insight on how / where the validator will store the validator account | fee recipient association?\r\n\r\nJust to add a bit more colour - for non-pooling staking providers, this will be an important feature.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1009760138/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1010865928",
    "html_url": "https://github.com/sigp/lighthouse/issues/2883#issuecomment-1010865928",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2883",
    "id": 1010865928,
    "node_id": "IC_kwDOCFeAzc48QJcI",
    "user": {
      "login": "pawanjay176",
      "id": 9890508,
      "node_id": "MDQ6VXNlcjk4OTA1MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9890508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pawanjay176",
      "html_url": "https://github.com/pawanjay176",
      "followers_url": "https://api.github.com/users/pawanjay176/followers",
      "following_url": "https://api.github.com/users/pawanjay176/following{/other_user}",
      "gists_url": "https://api.github.com/users/pawanjay176/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pawanjay176/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pawanjay176/subscriptions",
      "organizations_url": "https://api.github.com/users/pawanjay176/orgs",
      "repos_url": "https://api.github.com/users/pawanjay176/repos",
      "events_url": "https://api.github.com/users/pawanjay176/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pawanjay176/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-12T10:00:39Z",
    "updated_at": "2022-01-12T10:00:39Z",
    "author_association": "MEMBER",
    "body": "If we require different `fee_recipients` for different validators from the VC, then I think we would need to change the [`/validators/beacon/{slot}`](https://ethereum.github.io/beacon-APIs/#/Validator/produceBlockV2) api to also accept an optional `fee_recipient` parameter to pass to the beacon node when requesting a block. ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1010865928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1014072458",
    "html_url": "https://github.com/sigp/lighthouse/issues/2883#issuecomment-1014072458",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2883",
    "id": 1014072458,
    "node_id": "IC_kwDOCFeAzc48cYSK",
    "user": {
      "login": "kanewallmann",
      "id": 57159130,
      "node_id": "MDQ6VXNlcjU3MTU5MTMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/57159130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kanewallmann",
      "html_url": "https://github.com/kanewallmann",
      "followers_url": "https://api.github.com/users/kanewallmann/followers",
      "following_url": "https://api.github.com/users/kanewallmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/kanewallmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kanewallmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kanewallmann/subscriptions",
      "organizations_url": "https://api.github.com/users/kanewallmann/orgs",
      "repos_url": "https://api.github.com/users/kanewallmann/repos",
      "events_url": "https://api.github.com/users/kanewallmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kanewallmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T02:07:56Z",
    "updated_at": "2022-01-17T02:07:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "This feature is highly desirable for Rocket Pool (and likely for other staking providers). The main use case for us is for users running both Rocket Pool validators and solo validators simultaneously. Being able to direct priority fees to themselves or to Rocket Pool based on which validator proposed the block.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1014072458/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1014305671",
    "html_url": "https://github.com/sigp/lighthouse/issues/2883#issuecomment-1014305671",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2883",
    "id": 1014305671,
    "node_id": "IC_kwDOCFeAzc48dROH",
    "user": {
      "login": "pk910",
      "id": 491045,
      "node_id": "MDQ6VXNlcjQ5MTA0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/491045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pk910",
      "html_url": "https://github.com/pk910",
      "followers_url": "https://api.github.com/users/pk910/followers",
      "following_url": "https://api.github.com/users/pk910/following{/other_user}",
      "gists_url": "https://api.github.com/users/pk910/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pk910/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pk910/subscriptions",
      "organizations_url": "https://api.github.com/users/pk910/orgs",
      "repos_url": "https://api.github.com/users/pk910/repos",
      "events_url": "https://api.github.com/users/pk910/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pk910/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T09:22:43Z",
    "updated_at": "2022-01-17T09:25:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've added a fee-recipient & fee-recipient-file flag to the validator client which works the same way as graffiti / graffiti-file does.\r\nThe fee-recipient is pushed to the beacon node via an optional `fee_recipient` parameter in the [/eth/v2/validator/blocks/{slot}](https://ethereum.github.io/beacon-APIs/#/Validator/produceBlockV2) api call as @pawanjay176 described above.\r\n\r\nCurrently testing it on kintsugi to see if it's working like that :)  I'm not very familiar with rust and it's just a learning-by-doing copy-paste implementation of the existing graffiti / graffiti-file code.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1014305671/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1014771837",
    "html_url": "https://github.com/sigp/lighthouse/issues/2883#issuecomment-1014771837",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2883",
    "id": 1014771837,
    "node_id": "IC_kwDOCFeAzc48fDB9",
    "user": {
      "login": "pawanjay176",
      "id": 9890508,
      "node_id": "MDQ6VXNlcjk4OTA1MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9890508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pawanjay176",
      "html_url": "https://github.com/pawanjay176",
      "followers_url": "https://api.github.com/users/pawanjay176/followers",
      "following_url": "https://api.github.com/users/pawanjay176/following{/other_user}",
      "gists_url": "https://api.github.com/users/pawanjay176/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pawanjay176/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pawanjay176/subscriptions",
      "organizations_url": "https://api.github.com/users/pawanjay176/orgs",
      "repos_url": "https://api.github.com/users/pawanjay176/repos",
      "events_url": "https://api.github.com/users/pawanjay176/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pawanjay176/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T17:41:10Z",
    "updated_at": "2022-01-17T17:41:10Z",
    "author_association": "MEMBER",
    "body": "Turns out that since the CL needs to ask the EL to start preparing a payload well in advance of it's proposal duties (check this issue for more details https://github.com/sigp/lighthouse/issues/2715) , we cannot send the `fee_recipient` field with the `/validators/beacon/{slot}` api.\r\n\r\nAs mentioned in the above linked issue, we would need to have an api like `prepareBeaconProposer` on the VC which would indicate the `feeRecipient` to be used for a given validator index. There is already a draft PR here https://github.com/ethereum/beacon-APIs/pull/178/\r\n\r\nApologies for the misinformation, specially to @pk910 for the extra work :sweat_smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1014771837/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1014856820",
    "html_url": "https://github.com/sigp/lighthouse/issues/2883#issuecomment-1014856820",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2883",
    "id": 1014856820,
    "node_id": "IC_kwDOCFeAzc48fXx0",
    "user": {
      "login": "pk910",
      "id": 491045,
      "node_id": "MDQ6VXNlcjQ5MTA0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/491045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pk910",
      "html_url": "https://github.com/pk910",
      "followers_url": "https://api.github.com/users/pk910/followers",
      "following_url": "https://api.github.com/users/pk910/following{/other_user}",
      "gists_url": "https://api.github.com/users/pk910/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pk910/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pk910/subscriptions",
      "organizations_url": "https://api.github.com/users/pk910/orgs",
      "repos_url": "https://api.github.com/users/pk910/repos",
      "events_url": "https://api.github.com/users/pk910/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pk910/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-17T20:12:04Z",
    "updated_at": "2022-01-17T20:12:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yea, saw it and makes sense. Didn't know that the EL needs to prepare blocks before that api call. (lighthouse currently does that all synchronously)\r\nDoesn't matter about the extra work - that was a great first project to get a little bit known to the code :)\r\n\r\nMaybe I'll try on implementing the prepare_beacon_proposer endpoint..\r\nI just didn't fully understand how that works securely, yet. It seems everyone with network access to the api might override the fee-recipient of all validators connected to that BN just with the validator index number without any signature or so?\r\n\r\nAnd `prepare_beacon_proposer` should be called regularly for all validators once per epoch - even if the validator is not selected for proposing..\r\nWouldn't it make more sense to call it just for validators that are selected for proposing? maybe at the beginning of the epoch or so?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1014856820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1015095107",
    "html_url": "https://github.com/sigp/lighthouse/issues/2883#issuecomment-1015095107",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2883",
    "id": 1015095107,
    "node_id": "IC_kwDOCFeAzc48gR9D",
    "user": {
      "login": "pawanjay176",
      "id": 9890508,
      "node_id": "MDQ6VXNlcjk4OTA1MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9890508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pawanjay176",
      "html_url": "https://github.com/pawanjay176",
      "followers_url": "https://api.github.com/users/pawanjay176/followers",
      "following_url": "https://api.github.com/users/pawanjay176/following{/other_user}",
      "gists_url": "https://api.github.com/users/pawanjay176/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pawanjay176/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pawanjay176/subscriptions",
      "organizations_url": "https://api.github.com/users/pawanjay176/orgs",
      "repos_url": "https://api.github.com/users/pawanjay176/repos",
      "events_url": "https://api.github.com/users/pawanjay176/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pawanjay176/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-18T05:59:52Z",
    "updated_at": "2022-01-18T05:59:52Z",
    "author_association": "MEMBER",
    "body": "> It seems everyone with network access to the api might override the fee-recipient of all validators connected to that BN\r\n\r\nYep, the proposal assumes that the BN api is closed off to anyone but the authenticated VCs. \r\n\r\n> Wouldn't it make more sense to call it just for validators that are selected for proposing\r\n\r\nProposer shuffling is known only 1 epoch in advance. So if we are at the final slot `s` of epoch `e`, then we won't know if we are the proposer in epoch `e+1` until we process a slot for `s`. So we need to accommodate the corner case. \r\n\r\n> Maybe I'll try on implementing the prepare_beacon_proposer endpoint\r\n\r\nI think @paulhauner would be able to guide you better on this one, I think there are a fair bit of intricacies to take care of related to caching proposer duties here.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1015095107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1017117741",
    "html_url": "https://github.com/sigp/lighthouse/issues/2883#issuecomment-1017117741",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2883",
    "id": 1017117741,
    "node_id": "IC_kwDOCFeAzc48n_wt",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-20T04:48:46Z",
    "updated_at": "2022-01-20T04:48:46Z",
    "author_association": "MEMBER",
    "body": "Summarising some conversation from this [Discord](https://discord.com/channels/605577013327167508/618981555985186827/933544017063477249) thread:\r\n\r\n* The VC needs to send a new `prepare_beacon_proposer` message each time it detects that one of its beacon nodes has gone offline and then come back online. This gives the BN has a better chance of having fee recipient info after it restarts.\r\n* The VC should check that the fee recipient is as it expects when signing and refuse to sign if there's a mismatch. This protects against the BN or the EL being malicious and converts cases where the BN lacks the correct fee recipient into signing failures (i.e. equivalent to if the BN were offline).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1017117741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1022134872",
    "html_url": "https://github.com/sigp/lighthouse/issues/2883#issuecomment-1022134872",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2883",
    "id": 1022134872,
    "node_id": "IC_kwDOCFeAzc487IpY",
    "user": {
      "login": "joaocenoura",
      "id": 5530392,
      "node_id": "MDQ6VXNlcjU1MzAzOTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5530392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joaocenoura",
      "html_url": "https://github.com/joaocenoura",
      "followers_url": "https://api.github.com/users/joaocenoura/followers",
      "following_url": "https://api.github.com/users/joaocenoura/following{/other_user}",
      "gists_url": "https://api.github.com/users/joaocenoura/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joaocenoura/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joaocenoura/subscriptions",
      "organizations_url": "https://api.github.com/users/joaocenoura/orgs",
      "repos_url": "https://api.github.com/users/joaocenoura/repos",
      "events_url": "https://api.github.com/users/joaocenoura/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joaocenoura/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-26T12:02:45Z",
    "updated_at": "2022-01-26T12:02:45Z",
    "author_association": "NONE",
    "body": "Hi @michaelsproul, I was following the discussion on Discord. Did you guys agreed on feeding this information via file or exposing an endpoint via HTTP? In the context of staking providers, an API could possibly be the easiest path to integrate with. In any case, could you guys allow updating the fee recipient per validator without needing to restart BN or VC?\r\n\r\nJust to add an alternative, VC could pool this configuration via HTTP, in a similar way it re-reads from a file.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1022134872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1027147220",
    "html_url": "https://github.com/sigp/lighthouse/issues/2883#issuecomment-1027147220",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2883",
    "id": 1027147220,
    "node_id": "IC_kwDOCFeAzc49OQXU",
    "user": {
      "login": "xrchz",
      "id": 181254,
      "node_id": "MDQ6VXNlcjE4MTI1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/181254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xrchz",
      "html_url": "https://github.com/xrchz",
      "followers_url": "https://api.github.com/users/xrchz/followers",
      "following_url": "https://api.github.com/users/xrchz/following{/other_user}",
      "gists_url": "https://api.github.com/users/xrchz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xrchz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xrchz/subscriptions",
      "organizations_url": "https://api.github.com/users/xrchz/orgs",
      "repos_url": "https://api.github.com/users/xrchz/repos",
      "events_url": "https://api.github.com/users/xrchz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xrchz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-01T18:17:59Z",
    "updated_at": "2022-02-01T18:17:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The VC should check that the fee recipient is as it expects when signing and refuse to sign if there's a mismatch. This protects against the BN or the EL being malicious and converts cases where the BN lacks the correct fee recipient into signing failures (i.e. equivalent to if the BN were offline).\r\n\r\nI think this needs to be somewhat configurable, to support using alternative BN and/or EL as a fallback (and letting them have the fees when in use).",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1027147220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1027565997",
    "html_url": "https://github.com/sigp/lighthouse/issues/2883#issuecomment-1027565997",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2883",
    "id": 1027565997,
    "node_id": "IC_kwDOCFeAzc49P2mt",
    "user": {
      "login": "jj13jj",
      "id": 79786325,
      "node_id": "MDQ6VXNlcjc5Nzg2MzI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/79786325?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jj13jj",
      "html_url": "https://github.com/jj13jj",
      "followers_url": "https://api.github.com/users/jj13jj/followers",
      "following_url": "https://api.github.com/users/jj13jj/following{/other_user}",
      "gists_url": "https://api.github.com/users/jj13jj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jj13jj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jj13jj/subscriptions",
      "organizations_url": "https://api.github.com/users/jj13jj/orgs",
      "repos_url": "https://api.github.com/users/jj13jj/repos",
      "events_url": "https://api.github.com/users/jj13jj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jj13jj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-02T04:26:04Z",
    "updated_at": "2022-02-02T04:26:04Z",
    "author_association": "NONE",
    "body": "I have validator indexes and beacon nodes,  eth2 withdrawal address , and a\nbunch of other stuff.. it says I have 900 something ether on the beacon\ncha.in.. but I don't know , what exactly, I'm doing with all this stuff.  I\ndon't know how to recieve fee payments.  I dont even know what I'm\nvalidating to be quite honest.  Can some one help me with this? I'm under\nthe impression I've got money somewhere, but I started messing with crypto\naround July 2020.\n\nOn Tue, Feb 1, 2022, 11:18 AM Ramana Kumar ***@***.***> wrote:\n\n> The VC should check that the fee recipient is as it expects when signing\n> and refuse to sign if there's a mismatch. This protects against the BN or\n> the EL being malicious and converts cases where the BN lacks the correct\n> fee recipient into signing failures (i.e. equivalent to if the BN were\n> offline).\n>\n> I think this needs to be somewhat configurable, to support using\n> alternative BN and/or EL as a fallback (and letting them have the fees when\n> in use).\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sigp/lighthouse/issues/2883#issuecomment-1027147220>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ATAXCVPVHPYLNO2BMLWMLA3UZAPWPANCNFSM5KXGK4IA>\n> .\n> Triage notifications on the go with GitHub Mobile for iOS\n> <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n> or Android\n> <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.\n>\n> You are receiving this because you are subscribed to this thread.Message\n> ID: ***@***.***>\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1027565997/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1043625966",
    "html_url": "https://github.com/sigp/lighthouse/issues/2883#issuecomment-1043625966",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2883",
    "id": 1043625966,
    "node_id": "IC_kwDOCFeAzc4-NHfu",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-17T23:36:23Z",
    "updated_at": "2022-02-17T23:36:23Z",
    "author_association": "MEMBER",
    "body": "Resolved via #2924 which implements setting the fee recipient via:\r\n\r\n- Global flag on VC.\r\n- Per-validator via `validator_definitions.yml`\r\n- Per-validator via a `--suggested-fee-recipient-file`\r\n\r\nMore information here: https://lighthouse-book.sigmaprime.io/suggested-fee-recipient.html",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1043625966/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
