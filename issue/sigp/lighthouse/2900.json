{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/2900",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/2900/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/2900/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/2900/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/2900",
  "id": 1098623108,
  "node_id": "I_kwDOCFeAzc5Be6iE",
  "number": 2900,
  "title": "Validator client should handle extra fields that aren't strings in `/config/spec`",
  "user": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647286,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODY=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "7057ff",
      "default": true,
      "description": "Good for newcomers"
    },
    {
      "id": 1245875191,
      "node_id": "MDU6TGFiZWwxMjQ1ODc1MTkx",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/val-client",
      "name": "val-client",
      "color": "9cd6fc",
      "default": false,
      "description": "Relates to the validator client binary"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-01-11T03:59:13Z",
  "updated_at": "2022-01-20T12:15:22Z",
  "closed_at": "2022-01-20T12:15:22Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nWhen the Lighthouse VC queries the `/config/spec` endpoint of the beacon node, it decodes any unknown fields into an `extra_fields` hashmap with type `HashMap<String, String>`.\r\n\r\nAs raised in https://github.com/sigp/lighthouse/pull/2899 this isn't quite ideal when the BN returns values that can't be encoded as strings, e.g. `null`.\r\n\r\n## Present Behaviour\r\n\r\nThe VC logs a decode error when connected to a BN returning non-string data, e.g.\r\n\r\n```\r\nERRO Unable to read spec from beacon node    endpoint: http://localhost:5052/, error: Reqwest(reqwest::Error { kind: Decode, source: Error(\"invalid type: null, expected a string\", line: 1, column: 2811) })\r\n```\r\n\r\nYou can recreate this with a v2.0.1 VC and a BN running commit 6976796162432fa346a453d357d1e915d27cd348.\r\n\r\n## Expected Behaviour\r\n\r\nThe VC should be able to decode arbitrary types returned by the BN, including `null`, integers, lists, maps, etc. This will allow Lighthouse BN releases to be more easily backwards compatible (no hacks like #2899 required).\r\n\r\n## Steps to resolve\r\n\r\nI think it would suffice to change the map's value to a [`serde_json::Value`](https://docs.serde.rs/serde_json/enum.Value.html). Some investigation to ensure that we only ever use the `ConfigAndPreset` with JSON decoders would also be prudent (I think we do).\r\n\r\nThe relevant code is here:\r\n\r\nhttps://github.com/sigp/lighthouse/blob/6976796162432fa346a453d357d1e915d27cd348/consensus/types/src/config_and_preset.rs#L5-L21\r\n\r\nSome modifications to the [injected constants](https://github.com/sigp/lighthouse/blob/6976796162432fa346a453d357d1e915d27cd348/consensus/types/src/config_and_preset.rs#L39) will also be necessary. Ideally we could inject each constant with a nice one-liner to reduce boilerplate. This also links in with https://github.com/sigp/lighthouse/issues/2638\r\n",
  "closed_by": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/2900/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/2900/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
