{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/2739",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/2739/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/2739/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/2739/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/2739",
  "id": 1031914222,
  "node_id": "I_kwDOCFeAzc49gcLu",
  "number": 2739,
  "title": "Support multiple key-value pairs for arrays in HTTP API",
  "user": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2336800343,
      "node_id": "MDU6TGFiZWwyMzM2ODAwMzQz",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/HTTP-API",
      "name": "HTTP-API",
      "color": "5A63A2",
      "default": false,
      "description": ""
    },
    {
      "id": 2490305065,
      "node_id": "MDU6TGFiZWwyNDkwMzA1MDY1",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/A1",
      "name": "A1",
      "color": "223184",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "macladson",
    "id": 58379419,
    "node_id": "MDQ6VXNlcjU4Mzc5NDE5",
    "avatar_url": "https://avatars.githubusercontent.com/u/58379419?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/macladson",
    "html_url": "https://github.com/macladson",
    "followers_url": "https://api.github.com/users/macladson/followers",
    "following_url": "https://api.github.com/users/macladson/following{/other_user}",
    "gists_url": "https://api.github.com/users/macladson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/macladson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/macladson/subscriptions",
    "organizations_url": "https://api.github.com/users/macladson/orgs",
    "repos_url": "https://api.github.com/users/macladson/repos",
    "events_url": "https://api.github.com/users/macladson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/macladson/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "macladson",
      "id": 58379419,
      "node_id": "MDQ6VXNlcjU4Mzc5NDE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58379419?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/macladson",
      "html_url": "https://github.com/macladson",
      "followers_url": "https://api.github.com/users/macladson/followers",
      "following_url": "https://api.github.com/users/macladson/following{/other_user}",
      "gists_url": "https://api.github.com/users/macladson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/macladson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/macladson/subscriptions",
      "organizations_url": "https://api.github.com/users/macladson/orgs",
      "repos_url": "https://api.github.com/users/macladson/repos",
      "events_url": "https://api.github.com/users/macladson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/macladson/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2021-10-20T23:36:13Z",
  "updated_at": "2022-01-23T23:52:47Z",
  "closed_at": "2022-01-23T23:52:47Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nIn the HTTP API there are several places where we use comma-separated lists in query parameters e.g. for the `beacon/states/{state_id}/validators` API:\r\n\r\n```bash\r\ncurl \"http://localhost:5052/eth/v1/beacon/states/head/validators?id=0,1\"\r\n```\r\n\r\nThis corresponds to `style: form`, `explode: false` from the OpenAPI specification: https://swagger.io/docs/specification/serialization/#query\r\n\r\nHowever, the default serialisation format is defined to be `style: form`, `explode: true`, which looks like this:\r\n\r\n```bash\r\ncurl \"http://localhost:5052/eth/v1/beacon/states/head/validators?id=0&id=1\"\r\n```\r\n\r\nCurrently this 2nd query will fail with a deserialisation error:\r\n\r\n```json\r\n{\r\n  \"code\": 400,\r\n  \"message\": \"BAD_REQUEST: invalid query: Invalid query string\",\r\n  \"stacktraces\": []\r\n}\r\n```\r\n\r\n## Steps to fix\r\n\r\nI think we should adapt a hybrid style that avoids breaking backwards compatibility. We should collect all values of the key, and then comma-split each value and flatten the results into a single list. E.g.\r\n\r\n```\r\nid=1&id=2,3&id=4,5\r\n```\r\n\r\nparses as:\r\n\r\n```\r\nids = [1, 2, 3, 4, 5]\r\n```\r\n\r\nand queries like:\r\n\r\n```\r\nid=1,2,3,4,5\r\n```\r\n\r\nparse the same as they do currently.\r\n\r\nThe (de)serialisation is implemented in the `QueryVec` type here:\r\n\r\nhttps://github.com/sigp/lighthouse/blob/fff01b24ddedcd54486e374460855ca20d3dd232/common/eth2/src/types.rs#L523-L525\r\n\r\nIf we're lucky we might be able to get it to work by changing its `TryFrom` impl to `TryFrom<Vec<String>>` :crossed_fingers: \r\n\r\n## Version\r\n\r\nLighthouse v2.0.1\r\n\r\n## Additional Info\r\n\r\nThanks to @guybrush for raising this (https://discord.com/channels/605577013327167508/605577013331361793/900420789365510144)",
  "closed_by": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/2739/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/2739/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/977966029",
    "html_url": "https://github.com/sigp/lighthouse/issues/2739#issuecomment-977966029",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2739",
    "id": 977966029,
    "node_id": "IC_kwDOCFeAzc46SpPN",
    "user": {
      "login": "mooori",
      "id": 32731489,
      "node_id": "MDQ6VXNlcjMyNzMxNDg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/32731489?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mooori",
      "html_url": "https://github.com/mooori",
      "followers_url": "https://api.github.com/users/mooori/followers",
      "following_url": "https://api.github.com/users/mooori/following{/other_user}",
      "gists_url": "https://api.github.com/users/mooori/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mooori/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mooori/subscriptions",
      "organizations_url": "https://api.github.com/users/mooori/orgs",
      "repos_url": "https://api.github.com/users/mooori/repos",
      "events_url": "https://api.github.com/users/mooori/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mooori/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-24T15:08:27Z",
    "updated_at": "2021-11-24T15:08:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "## Tl;dr\r\nI've been looking into this and I'm stuck on getting a sequence of _all_ values of a repeated key to `TryFrom`: for query `id=1&id=2` I couldn't get `[\"1\", \"2\"]` passed to `TryFrom`.\r\n\r\nIf this is possible, it would be much appreciated if someone could point out how to do it.\r\n\r\n[Here](https://github.com/mooori/multikey-api) is a small project which isolates the issue of `QueryVec` deserialization.\r\n\r\n## Findings / What I tried\r\nMaybe this might help to find a solution I couldn't see.\r\n\r\n### Find out more about error `Invalid query string`\r\n`warp::filters::query` [uses](https://docs.rs/warp/0.3.2/src/warp/filters/query.rs.html#65-79) `serde_urlencoded`, which has chosen _not_ to support duplicate query parameters ([issue](https://github.com/nox/serde_urlencoded/issues/6), [issue](https://github.com/nox/serde_urlencoded/issues/75)).\r\n\r\nEnabling tracing on `warp` requests shows that deserialization fails with `duplicate field` error. According to [this issue](https://github.com/serde-rs/serde/issues/690) that's a dead end.\r\n\r\n### Using `TryFrom<Vec<String>>`\r\n...via\r\n\r\n```rust\r\n#[serde(try_from = \"Vec<String>\", bound = \"T: FromStr\")]\r\n```\r\nresults in error `Invalid query string`. Tracing the request in `warp` shows that `TryFrom<Vec<String>>` receives only a `String` (the first value of the repeated query param), not `Vec<String>` (all values) ([comment](https://github.com/nox/serde_urlencoded/issues/6#issuecomment-456732400)).\r\n\r\n### Implement `Deserialize` for `QueryVec`\r\nThis is based on this [stackoverflow post](https://stackoverflow.com/a/64406395). Assume trying to deserialize `q=1&q=2` for\r\n\r\n```rust\r\nstruct S {\r\n    #[serde(flatten)]\r\n    q: QueryVec<u64>\r\n}\r\n```\r\nDeserialization fails with `Error(\"can only flatten structs and maps\")`.\r\n\r\nProbably due to `QueryVec<T>` having a generic parameter, [this](https://github.com/serde-rs/serde/pull/1771) `serde` issue or a combination of both.\r\n\r\nIt appears to be the wrong approach and I couldn't make it work. There might be a way I didn't see, though.\r\n\r\n### `serde_with`\r\nThere is an [example](https://docs.rs/serde_with/1.11.0/serde_with/rust/tuple_list_as_map/index.html#examples) showing how duplicate keys can be deserialized with `tuple_list_as_map`. However, this fails in conjunction with `warp::query` as input must be a map, not just the string value of the key's first occurrence (see section `TryFrom<Vec<String>>`).\r\n\r\n## Another possible approach: `serde_qs`\r\n[`serde_qs`](https://docs.rs/serde_qs/0.8.5/serde_qs/index.html#supported-types) supports deserializing repeated key-value pairs as sequences. However, it requires such keys in the query string to be annotated with indices, like `id[0]=1&id[1]=2`. Hence I assume `serde_qs` can't help to close this issue.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/977966029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1012594987",
    "html_url": "https://github.com/sigp/lighthouse/issues/2739#issuecomment-1012594987",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2739",
    "id": 1012594987,
    "node_id": "IC_kwDOCFeAzc48Wvkr",
    "user": {
      "login": "macladson",
      "id": 58379419,
      "node_id": "MDQ6VXNlcjU4Mzc5NDE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58379419?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/macladson",
      "html_url": "https://github.com/macladson",
      "followers_url": "https://api.github.com/users/macladson/followers",
      "following_url": "https://api.github.com/users/macladson/following{/other_user}",
      "gists_url": "https://api.github.com/users/macladson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/macladson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/macladson/subscriptions",
      "organizations_url": "https://api.github.com/users/macladson/orgs",
      "repos_url": "https://api.github.com/users/macladson/repos",
      "events_url": "https://api.github.com/users/macladson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/macladson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-13T23:00:46Z",
    "updated_at": "2022-01-14T02:48:35Z",
    "author_association": "COLLABORATOR",
    "body": "Thank you for the thorough breakdown of your work @mooori. Having your notes on hand was extremely helpful while attempting to solve this myself.\r\n\r\nAs you noted in your comment, using `warp`'s default implementation which uses `serde_urlencoded`, was a dead-end as they (rightly so) are concered about the performance overhead of supporting something like this.\r\n\r\nI went down a bit of a rabbit hole with trying to extend `serde_qs` to support the multi-key queries without needing the square brackets, however it seems as though the architecture of the library is ill-suited for something like that (as the [maintainers themselves also noted](https://github.com/samscott89/serde_qs/issues/16#issuecomment-450464628)).\r\n\r\nThen I found this very helpful comment: [https://github.com/seanmonstar/warp/issues/733#issuecomment-722359432](https://github.com/seanmonstar/warp/issues/733#issuecomment-722359432)\r\n\r\nThis means we can parse out each key and value in the query string into a `Vec<(String, String)>`.  From there, we can deserialize into the necessary types.\r\n\r\nTo avoid needing to have a separate deserializing function for each type, @michaelsproul wrote a general deserializer for these types of query strings [here](https://github.com/sigp/serde_array_query).\r\n\r\nAnd I'm using that library in my PR [here](https://github.com/sigp/lighthouse/pull/2908).\r\n\r\nIt ended up being more involved than we were hoping but thanks again @mooori for the work you did.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1012594987/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1012841477",
    "html_url": "https://github.com/sigp/lighthouse/issues/2739#issuecomment-1012841477",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2739",
    "id": 1012841477,
    "node_id": "IC_kwDOCFeAzc48XrwF",
    "user": {
      "login": "mooori",
      "id": 32731489,
      "node_id": "MDQ6VXNlcjMyNzMxNDg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/32731489?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mooori",
      "html_url": "https://github.com/mooori",
      "followers_url": "https://api.github.com/users/mooori/followers",
      "following_url": "https://api.github.com/users/mooori/following{/other_user}",
      "gists_url": "https://api.github.com/users/mooori/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mooori/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mooori/subscriptions",
      "organizations_url": "https://api.github.com/users/mooori/orgs",
      "repos_url": "https://api.github.com/users/mooori/repos",
      "events_url": "https://api.github.com/users/mooori/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mooori/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-14T07:24:57Z",
    "updated_at": "2022-01-14T07:24:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Great to hear it was helpful! I was indeed curious how this was solved, so thanks a lot for the breakdown of your solution @macladson.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1012841477/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1019595299",
    "html_url": "https://github.com/sigp/lighthouse/issues/2739#issuecomment-1019595299",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2739",
    "id": 1019595299,
    "node_id": "IC_kwDOCFeAzc48xcoj",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-23T23:52:45Z",
    "updated_at": "2022-01-23T23:52:45Z",
    "author_association": "MEMBER",
    "body": "Closed by #2908",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1019595299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
