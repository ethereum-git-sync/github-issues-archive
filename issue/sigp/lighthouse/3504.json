{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/3504",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/3504/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/3504/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/3504/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/3504",
  "id": 1349179287,
  "node_id": "I_kwDOCFeAzc5QateX",
  "number": 3504,
  "title": "Metric `validator_monitor_beacon_block_total` starts from 1",
  "user": {
    "login": "ghost",
    "id": 10137,
    "node_id": "MDQ6VXNlcjEwMTM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ghost",
    "html_url": "https://github.com/ghost",
    "followers_url": "https://api.github.com/users/ghost/followers",
    "following_url": "https://api.github.com/users/ghost/following{/other_user}",
    "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
    "organizations_url": "https://api.github.com/users/ghost/orgs",
    "repos_url": "https://api.github.com/users/ghost/repos",
    "events_url": "https://api.github.com/users/ghost/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ghost/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647284,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODQ=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/enhancement",
      "name": "enhancement",
      "color": "a2eeef",
      "default": true,
      "description": "New feature or request"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-08-24T09:59:40Z",
  "updated_at": "2023-01-16T06:36:20Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nI want to create a table with blocks, proposed by our validators, but I found out that `validator_monitor_beacon_block_total` starts immediately from 1.  This is a problem because it's really hard to detect exactly this first appearance in Prometheus via `changes`, `rate` and other functions.\r\n\r\nMetric `validator_monitor_beacon_block_total` starts from 1 and before that event it doesn't exist.\r\n![image](https://user-images.githubusercontent.com/87700053/186389835-f9e16b0c-5da0-46d3-bdce-8122ec960663.png)\r\n\r\n\r\nCurrently, I make my query, which consist of two parts:\r\n* Find first appearance of metric started from 1. Use query like `validator_monitor_beacon_block_total{...} unless validator_monitor_beacon_block_total{...} offset 1m) ==1`\r\n* Find all metric changes. Use query like `changes(validator_monitor_beacon_block_total{...}[5m]) > 0`\r\n\r\nFull query looks like this:\r\n```\r\n1000* min by (validator) (timestamp( (validator_monitor_beacon_block_total{...} unless validator_monitor_beacon_block_total{...} offset 1m) ==1 or changes(validator_monitor_beacon_block_total{...}[5m]) > 0)) \r\n```\r\n\r\nAnd this first part for detecting exactly first metric appearance is really annoying and sometimes unstable. It could be a more way easy if this metric just started from 0 and appeared at lighthouse startup: I could use only `changes()` query.\r\n\r\nThe core problem: all metrics related to block proposer changes really rare, and every change is significant, but in current approach it's hard to detect first appearance of this metrics in Prometheus. \r\n\r\n## Version\r\n\r\n```\r\nlighthouse --version\r\nLighthouse v3.0.0-18c61a5\r\nBLS library: blst-portable\r\nSHA256 hardware acceleration: false\r\nSpecs: mainnet (true), minimal (false), gnosis (true)\r\n```\r\n\r\n## Present Behaviour\r\n\r\nMetric `validator_monitor_beacon_block_total` only appears after first block proposal and starts from 1\r\n\r\n## Expected Behaviour\r\n\r\nHow _should_ the application behave?\r\n\r\nMetric `validator_monitor_beacon_block_total` should start from 0 at startup time\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/3504/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/3504/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1261335936",
    "html_url": "https://github.com/sigp/lighthouse/issues/3504#issuecomment-1261335936",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3504",
    "id": 1261335936,
    "node_id": "IC_kwDOCFeAzc5LLnWA",
    "user": {
      "login": "tthebst",
      "id": 44725942,
      "node_id": "MDQ6VXNlcjQ0NzI1OTQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/44725942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tthebst",
      "html_url": "https://github.com/tthebst",
      "followers_url": "https://api.github.com/users/tthebst/followers",
      "following_url": "https://api.github.com/users/tthebst/following{/other_user}",
      "gists_url": "https://api.github.com/users/tthebst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tthebst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tthebst/subscriptions",
      "organizations_url": "https://api.github.com/users/tthebst/orgs",
      "repos_url": "https://api.github.com/users/tthebst/repos",
      "events_url": "https://api.github.com/users/tthebst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tthebst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-28T18:55:12Z",
    "updated_at": "2022-09-28T18:55:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the issue is that metric variables in lighthouse are defined as lazy static [variables](https://sourcegraph.com/github.com/sigp/lighthouse/-/blob/beacon_node/beacon_chain/src/metrics.rs?L760:20). This means `validator_monitor_beacon_block_total` is therefore created on first [access](https://sourcegraph.com/github.com/sigp/lighthouse@01e84b71f524968f5b940fbd2fa31d29408b6581/-/blob/beacon_node/beacon_chain/src/validator_monitor.rs?L703:22) where it is immediatly  incremented and you won't see any 0 -> 1 transition in Prometheus.\r\n\r\nA possible solution for this is to call `lazy_static::initialize(& VALIDATOR_MONITOR_BEACON_BLOCK_TOTAL);` when the beacon node starts.\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1261335936/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
