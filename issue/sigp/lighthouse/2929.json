{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/2929",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/2929/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/2929/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/2929/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/2929",
  "id": 1107468826,
  "node_id": "I_kwDOCFeAzc5CAqIa",
  "number": 2929,
  "title": "Bellatrix Task Tracker",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3743113288,
      "node_id": "LA_kwDOCFeAzc7fG2BI",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/bellatrix",
      "name": "bellatrix",
      "color": "A906A4",
      "default": false,
      "description": "Required to support the Bellatrix Upgrade"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-01-18T23:37:05Z",
  "updated_at": "2022-02-02T22:42:50Z",
  "closed_at": "2022-02-02T22:42:50Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "[`validate_merge_block`]: https://github.com/sigp/lighthouse/blob/9ed92d6e7830893670e2176a4e3bfd571f344cbf/beacon_node/beacon_chain/src/execution_payload.rs#L72-L139\r\n\r\n## Description\r\n\r\n**This is an incomplete WIP. Please check again later :pray:**\r\n\r\n## Tasks\r\n\r\n### API\r\n\r\n### Optimistic Sync\r\n\r\n- Modify `BeaconBlock` gossip verification to ensure that invalid payloads (except the `payload.timestamp` check) are an IGNORE and the peer isn't down-scored. See [merge p2p specification](https://github.com/sigp/consensus-specs/blob/opt-sync-2/specs/bellatrix/p2p-interface.md#the-gossip-domain-gossipsub)\r\n- #2986 \r\n    - ~~Only optimistically import a block when the [spec conditions](https://github.com/sigp/consensus-specs/blob/opt-sync-2/sync/optimistic.md#when-to-optimistically-import-blocks) are met (i.e., block is old enough or transition is justified).~~\r\n    - ~~Add support for the [`--safe-slots-to-import-optimistically`](https://github.com/sigp/consensus-specs/blob/opt-sync-2/sync/optimistic.md#fork-choice-poisoning) flag.~~\r\n- Retrospectively check the transition block against [`validate_merge_block`][] after performing an optimistic sync.\r\n    - The EL *must* know about the transition block if any later block in that chain becomes VALID.\r\n    - There might be multiple transition blocks.\r\n    - We need to figure out how to track the multiple transition blocks and how to know when a descendant has become VALID.\r\n- Ensure that we don't serve optimistic blocks via the API.\r\n    - It can be difficult to tell if ancient blocks are VALID/SYNCING from an EL perspective. It might be that we just don't return *any* blocks when the justified checkpoint is not VALID.\r\n- Ensure we return the latest valid ancestor when `\"head\"` is used for the `{block_id}` or `{state_id}` in the API.\r\n    - If the justified checkpoint is SYNCING, I think we should just return a 503 syncing response to *any* request for the head.\r\n- Ensure all Bellatrix CLI arguments have tests (I'm pretty sure some have slipped through the cracks).\r\n    \r\n## Unit Tests\r\n\r\nThis section lists unit tests that will help ensure we meet the optimistic sync requirements:\r\n\r\n- A block changing from SYNCING to INVALID will *invalidate* all *descendants*.\r\n- A block changing from SYNCING to VALID will *validate* all *ancestors*.\r\n- The transition block is checked after an optimistic sync.\r\n- Optimistic blocks are only imported if they're older than `SAFE_SLOTS_TO_IMPORT_OPTIMISTICALLY` or the justified checkpoint has execution enabled.\r\n- Ensure blocks which fail the `TERMINAL_BLOCK_HASH` are *not* optimistically imported.\r\n- Ensure block production endpoints return an error with an optimistic head:\r\n    - `GET eth/v2/validator/blocks` (v1 and v2 endpoints)\r\n    - `POST eth/v2/beacon/blocks` (v1 and v2 endpoints)\r\n- Ensure attestation endpoints return an error with an optimistic head:\r\n    - `GET /eth/v1/validator/attestation_data`\r\n    - `POST /eth/v1/beacon/pool/attestations`\r\n    - `GET /eth/v1/validator/aggregate_attestation`\r\n    - `POST /eth/v1/validator/aggregate_and_proofs`\r\n- Ensure sync committee endpoints return an error with an optimistic head:\r\n    - `GET /eth/v1/validator/contribution_and_proofs`\r\n    - `POST /eth/v1/validator/sync_committee_contribution`\r\n    - `POST /eth/v1/beacon/pool/sync_committees`\r\n    \r\n\r\n",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/2929/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/2929/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1028427092",
    "html_url": "https://github.com/sigp/lighthouse/issues/2929#issuecomment-1028427092",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2929",
    "id": 1028427092,
    "node_id": "IC_kwDOCFeAzc49TI1U",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-02T22:42:50Z",
    "updated_at": "2022-02-02T22:42:50Z",
    "author_association": "MEMBER",
    "body": "Closing since I have created smaller issues for all of these tasks.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1028427092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
