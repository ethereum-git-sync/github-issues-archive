{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/2656",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/2656/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/2656/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/2656/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/2656",
  "id": 1012419070,
  "node_id": "I_kwDOCFeAzc48WEn-",
  "number": 2656,
  "title": "/script/tests/doppelganger_protection.sh succeeded when it should have failed",
  "user": {
    "login": "winksaville",
    "id": 1024284,
    "node_id": "MDQ6VXNlcjEwMjQyODQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1024284?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/winksaville",
    "html_url": "https://github.com/winksaville",
    "followers_url": "https://api.github.com/users/winksaville/followers",
    "following_url": "https://api.github.com/users/winksaville/following{/other_user}",
    "gists_url": "https://api.github.com/users/winksaville/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/winksaville/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/winksaville/subscriptions",
    "organizations_url": "https://api.github.com/users/winksaville/orgs",
    "repos_url": "https://api.github.com/users/winksaville/repos",
    "events_url": "https://api.github.com/users/winksaville/events{/privacy}",
    "received_events_url": "https://api.github.com/users/winksaville/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "realbigsean",
    "id": 5160426,
    "node_id": "MDQ6VXNlcjUxNjA0MjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/realbigsean",
    "html_url": "https://github.com/realbigsean",
    "followers_url": "https://api.github.com/users/realbigsean/followers",
    "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
    "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
    "organizations_url": "https://api.github.com/users/realbigsean/orgs",
    "repos_url": "https://api.github.com/users/realbigsean/repos",
    "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
    "received_events_url": "https://api.github.com/users/realbigsean/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2021-09-30T17:07:24Z",
  "updated_at": "2021-10-19T20:37:17Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nI renamed `NODE_COUNT` to `BN_COUNT` in `/scripts/local_testnet/vars.env`, but didn't do it in `/scripts/tests/vars.env`. The consequence was the test `doppelganger_protection.sh success` succeeded, but it should have failed. Luckily `doppelganger_protection.sh failure` did fail. Although, I believe, it should have failed for a different reason.\r\n\r\n## Version\r\n\r\nTesting PR #2614 off unstable at [this commit](https://github.com/sigp/lighthouse/pull/2614/commits/81e466a603d3228dff5398caba54c0a720c38c25)\r\n\r\n\r\n## Present Behaviour\r\n\r\nWhat you can see below is that validator clients did not start and the Genesis state wasn't created as we don't `Building genesis state... (this might take a while):` nor do we see `Created genesis state in /home/runner/.lighthouse/local-testnet/testnet`. Instead we see `BN_COUNT: unbound variable`, **the bug** and the copy failed. But the script continued with `Starting bootnode`:\r\n```\r\nSubmitting deposit for validator 79...\r\nSpecification generated at /home/runner/.lighthouse/local-testnet/testnet.\r\n../local_testnet/setup.sh: line 45: BN_COUNT: unbound variable\r\nGenerating 80 validators concurrently... (this may take a while)\r\ncp: cannot stat '/home/runner/.lighthouse/local-testnet/node_1': No such file or directory\r\nStarting bootnode\r\n```\r\n\r\nAnd the test went on to \"succeeded\", but it should have failed because as validators never started and hence there were **no attestations**:\r\n```\r\n10m 2s\r\nRun cd scripts/tests\r\n  cd scripts/tests\r\n  ./doppelganger_protection.sh success\r\n  shell: /usr/bin/bash -e {0}\r\n  env:\r\n    RUSTFLAGS: -D warnings\r\n    PINNED_NIGHTLY: nightly-2021-06-09\r\nStarting ganache\r\nSetting up local testnet\r\nDeposit contract address: \"0x8c594691c0e592ffa21f153a16ae41db5befcaaa\"\r\nSubmitting deposit for validator 0...\r\nSubmitting deposit for validator 1...\r\nSubmitting deposit for validator 2...\r\nSubmitting deposit for validator 3...\r\nSubmitting deposit for validator 4...\r\n\r\n...\r\n\r\nSubmitting deposit for validator 75...\r\nSubmitting deposit for validator 76...\r\nSubmitting deposit for validator 77...\r\nSubmitting deposit for validator 78...\r\nSubmitting deposit for validator 79...\r\nSpecification generated at /home/runner/.lighthouse/local-testnet/testnet.\r\n../local_testnet/setup.sh: line 45: BN_COUNT: unbound variable\r\nGenerating 80 validators concurrently... (this may take a while)\r\ncp: cannot stat '/home/runner/.lighthouse/local-testnet/node_1': No such file or directory\r\nStarting bootnode\r\nStarting local beacon nodes\r\nStarting local validator clients\r\nWaiting an epoch before starting the next validator client\r\nStarting the last validator client\r\nWaiting three epochs...\r\nSep 30 03:20:10.186 INFO Lighthouse started                      version: Lighthouse/v1.5.2-028f7fa\r\nSep 30 03:20:10.186 INFO Configured for network                  name: custom (/home/runner/.lighthouse/local-testnet/testnet)\r\nSep 30 03:20:10.187 INFO Starting validator client               validator_dir: \"/home/runner/.lighthouse/local-testnet/node_4/validators\", beacon_nodes: [\"http://localhost:8100/\"]\r\nSep 30 03:20:10.187 INFO HTTP metrics server is disabled\r\nSep 30 03:20:10.188 INFO Completed validator discovery           new_validators: 0\r\nSep 30 03:20:11.433 INFO Modified key_cache saved successfully\r\nSep 30 03:20:11.433 INFO Initialized validators                  enabled: 0, disabled: 0\r\nSep 30 03:20:11.433 WARN No enabled validators                   hint: create validators via the API, or the `lighthouse account` CLI command\r\nSep 30 03:20:11.451 WARN Offline beacon node                     endpoint: http://localhost:8100/, error: Reqwest(reqwest::Error { kind: Request, url: Url { scheme: \"http\", cannot_be_a_base: false, username: \"\", password: None, host: Some(Domain(\"localhost\")), port: Some(8100), path: \"/eth/v1/node/version\", query: None, fragment: None }, source: hyper::Error(Connect, ConnectError(\"tcp connect error\", Os { code: 111, kind: ConnectionRefused, message: \"Connection refused\" })) })\r\nSep 30 03:20:11.451 WARN Unable to connect to a beacon node      available: 0, total: 1, retry in: 2 seconds\r\nSep 30 03:20:13.453 WARN Offline beacon node                     endpoint: http://localhost:8100/, error: Reqwest(reqwest::Error { kind: Request, url: Url { scheme: \"http\", cannot_be_a_base: false, username: \"\", password: None, host: Some(Domain(\"localhost\")), port: Some(8100), path: \"/eth/v1/node/version\", query: None, fragment: None }, source: hyper::Error(Connect, ConnectError(\"tcp connect error\", Os { code: 111, kind: ConnectionRefused, message: \"Connection refused\" })) })\r\n\r\n...\r\n\r\nSep 30 03:28:09.953 WARN Offline beacon node                     endpoint: http://localhost:8100/, error: Reqwest(reqwest::Error { kind: Request, url: Url { scheme: \"http\", cannot_be_a_base: false, username: \"\", password: None, host: Some(Domain(\"localhost\")), port: Some(8100), path: \"/eth/v1/node/version\", query: None, fragment: None }, source: hyper::Error(Connect, ConnectError(\"tcp connect error\", Os { code: 111, kind: ConnectionRefused, message: \"Connection refused\" })) })\r\nSep 30 03:28:09.953 WARN Unable to connect to a beacon node      available: 0, total: 1, retry in: 2 seconds\r\nShutting down\r\n./doppelganger_protection.sh: line 132: kill: (39846) - No such process\r\n./doppelganger_protection.sh: line 132: kill: (39847) - No such process\r\n./doppelganger_protection.sh: line 132: kill: (39848) - No such process\r\nSep 30 03:28:10.185 INFO Shutting down..                         reason: Success(\"Received SIGTERM\")\r\nDone\r\n```\r\n\r\n## Expected Behaviour\r\n\r\nIn a properly successful test we see the deposit being submitted and then Validator 1 .. 80 are created and then the Buliding and Creation of the Gensis state and then continuing with `Starting bootnode` and finishing with a list of attestations:\r\n```\r\nRun cd scripts/tests\r\n  cd scripts/tests\r\n  ./doppelganger_protection.sh success\r\n  shell: /usr/bin/bash -e {0}\r\n  env:\r\n    RUSTFLAGS: -D warnings\r\n    PINNED_NIGHTLY: nightly-2021-06-09\r\nStarting ganache\r\nSetting up local testnet\r\nDeposit contract address: \"0x8c594691c0e592ffa21f153a16ae41db5befcaaa\"\r\nSubmitting deposit for validator 0...\r\nSubmitting deposit for validator 1...\r\nSubmitting deposit for validator 2...\r\nSubmitting deposit for validator 3...\r\nSubmitting deposit for validator 4...\r\n\r\n...\r\n\r\nSubmitting deposit for validator 77...\r\nSubmitting deposit for validator 78...\r\nSubmitting deposit for validator 79...\r\nSpecification generated at /home/runner/.lighthouse/local-testnet/testnet.\r\nGenerating 80 validators concurrently... (this may take a while)\r\nValidator 1\r\nWARN: Scrypt parameters are too weak (n: 2, p: 1, r: 8), we recommend (n: 262144, p: 1, r: 8)\r\nValidator 2\r\nWARN: Scrypt parameters are too weak (n: 2, p: 1, r: 8), we recommend (n: 262144, p: 1, r: 8)\r\nValidator 3\r\nWARN: Scrypt parameters are too weak (n: 2, p: 1, r: 8), we recommend (n: 262144, p: 1, r: 8)\r\n\r\n...\r\n\r\nValidator 78\r\nValidator 79\r\nWARN: Scrypt parameters are too weak (n: 2, p: 1, r: 8), we recommend (n: 262144, p: 1, r: 8)\r\nValidator 80\r\nWARN: Scrypt parameters are too weak (n: 2, p: 1, r: 8), we recommend (n: 262144, p: 1, r: 8)\r\nValidators generated with keystore passwords at /home/runner/.lighthouse/local-testnet.\r\nBuilding genesis state... (this might take a while)\r\nCreated genesis state in /home/runner/.lighthouse/local-testnet/testnet\r\nStarting bootnode\r\nStarting local beacon nodes\r\nStarting local validator clients\r\nWaiting an epoch before starting the next validator client\r\nStarting the last validator client\r\nWaiting three epochs...\r\nSep 30 03:39:32.771 INFO Lighthouse started                      version: Lighthouse/v1.5.2-30f9bb3\r\nSep 30 03:39:32.771 INFO Configured for network                  name: custom (/home/runner/.lighthouse/local-testnet/testnet)\r\nSep 30 03:39:32.772 INFO Starting validator client               validator_dir: \"/home/runner/.lighthouse/local-testnet/node_4/validators\", beacon_nodes: [\"http://localhost:8100/\"]\r\nSep 30 03:39:32.772 INFO HTTP metrics server is disabled\r\nSep 30 03:39:32.785 INFO Completed validator discovery           new_validators: 20\r\nWARN: Scrypt parameters are too weak (n: 2, p: 1, r: 8), we recommend (n: 262144, p: 1, r: 8)\r\nSep 30 03:39:32.796 INFO Enabled validator                       voting_pubkey: 0xabef42538a17a55804b634aac9d211b92b5768c4cc1263342ca287323bb3d5c768080451d1b5d652e9f8646fbb35f57c, signing_method: local_keystore\r\nWARN: Scrypt parameters are too weak (n: 2, p: 1, r: 8), we recommend (n: 262144, p: 1, r: 8)\r\nSep 30 03:39:32.797 INFO Enabled validator                       voting_pubkey: 0xa98c264dfc3bc3ed635df5dbfd54909e77600cd68480ec201d9f5c416580591daaa9735b04743e10e7fc6370a8189775, signing_method: local_keystore\r\nWARN: Scrypt parameters are too weak (n: 2, p: 1, r: 8), we recommend (n: 262144, p: 1, r: 8)\r\nWARN: Scrypt parameters are too weak (n: 2, p: 1, r: 8), we recommend (n: 262144, p: 1, r: 8)\r\nSep 30 03:39:32.798 INFO Enabled validator                       voting_pubkey: 0x91ae4686b0d20470409f020eaca826c3efc6c1926ed25d05e6f0f7916391ec89c2341917277c437ac8fffffe94b68111, signing_method: local_keystore\r\n\r\n...\r\n\r\nSep 30 03:47:32.011 INFO Successfully published attestations     type: unaggregated, slot: 195, committee_index: 0, head_block: 0x0101442ef637cf7fa3dba37fde20a0ec95ad0b7e1ab899ee582c1e071f7b3ae6, count: 1, service: attestation\r\nSep 30 03:47:32.501 INFO Connected to beacon node(s)             synced: 1, available: 1, total: 1, service: notifier\r\nSep 30 03:47:32.501 INFO All validators active                   slot: 195, epoch: 6, total_validators: 20, active_validators: 20, proposers: 9, service: notifier\r\nSep 30 03:47:33.011 INFO Successfully published attestations     type: aggregated, slot: 195, committee_index: 0, head_block: 0x0101442ef637cf7fa3dba37fde20a0ec95ad0b7e1ab899ee582c1e071f7b3ae6, signatures: 3, aggregator: 60, service: attestation\r\nSep 30 03:47:34.039 INFO Successfully published block            slot: 196, graffiti: None, attestations: 1, deposits: 0, service: block\r\n0x80a2be2c7dbce8ddc2eba03522697587c375a5a9e92d4b31ed9e3c34bee047095d93e3c70b1662b3faa301f5b19978e5 attested in epoch 4.\r\n0x86a73886aa0114bbdbba346cb7c07376c81b549a4802c24d98ebbc54a6a1b5d2ac874ef657cfb27c3644fcb85f97a2b5 attested in epoch 4.\r\n0x8a0d241955104bedacb3b829162f2b457915c2beb9018ede8ef8ea80f401b471c42354358da9e62b51c38d54263a78a9 attested in epoch 4.\r\n0x8bb7aa61aa8bbd2b7825d28c340da89b625381232dcf2742276b4e3a2e4a0f42ef68794fdf005d94014636732fba2f40 attested in epoch 4.\r\n0x8bb9e1693eab1496d7583bf22fb1f2a475934c63b4d94118940617aa187bc277f738223e0ec1ce8a5566035d9bcc5470 attested in epoch 4.\r\n0x902ff56a7a4c5b6cc57708ea7b0b72cb54e4b821c95373f503648185f15208f6ca6281677fa0ecc14f911d7b7ca04f4e attested in epoch 4.\r\n0x91ae4686b0d20470409f020eaca826c3efc6c1926ed25d05e6f0f7916391ec89c2341917277c437ac8fffffe94b68111 attested in epoch 4.\r\n0x93bb1c86717fa7303f65cb8c45c9fcc8fecb88428b7cd1dd59967a132109c25ab5c97888e46c5d471ff911c573f45a34 attested in epoch 4.\r\n0x974b2aed17665e51c1c091998ca9649875330947de3d2733a5bd2eda69b0c593cdac2e416993a87f9a17aec1ccdc2368 attested in epoch 4.\r\n0x98f011f9a4dff94eb0352ff6e21b7df45e2a112bd5d789b5729111b89b368e7ed554e4d1c16b72f4d105090173cafed2 attested in epoch 4.\r\nSep 30 03:47:35.010 INFO Successfully published attestations     type: unaggregated, slot: 196, committee_index: 0, head_block: 0x6b6905c4379ef1c0755770d8880f3191faedc1eb016436e92a9a157ae0797af6, count: 1, service: attestation\r\n0x98f620aadc4e58392b5b583fed96c452b54c39ba3a9fe8c277f625fae7e1317d034f732995fd88c1461463edd0f2b86d attested in epoch 4.\r\n0xa3177a98f653cea646f525f0f13348efb27e0d3d0cd824704c91d8d959096d259c9e577298f444acc629920c9619be50 attested in epoch 4.\r\n0xa7f5d408af436d71ec7acfe9a4592679649d326c00ac92c6f3332423be30c3601d232f265078f1f2a5d6d6cde08de7d7 attested in epoch 4.\r\n0xa8a18565733e70663c77bc0c80e08f50de908cc048152f1e7dae85d8cc218afbdd337d7d33a44e25400be2f06907c64a attested in epoch 4.\r\n0xa8be337b3d0e6be415dcb037b246831f9966aacef62b69d6b609e4ff8208bc536c6473bc9fe9e3bec9a8665c8caa05c5 attested in epoch 4.\r\n0xa8e3c2d3ac4e0e3c83380577ff7b7b5b2a98571e0d04ddebc0a6c472ce3bc5cc6a6733be728a0ee17da74b7691d2679d attested in epoch 4.\r\n0xa98c264dfc3bc3ed635df5dbfd54909e77600cd68480ec201d9f5c416580591daaa9735b04743e10e7fc6370a8189775 attested in epoch 4.\r\n0xaa241b2afbb33f92a5d281aec9c8bac8997c1dddc051455fc0f334de48320f160b5029b552495aed21ed9ce252aab499 attested in epoch 4.\r\n0xabef42538a17a55804b634aac9d211b92b5768c4cc1263342ca287323bb3d5c768080451d1b5d652e9f8646fbb35f57c attested in epoch 4.\r\n0xafe6eface52fb6de91055a81abf9aa6e42ce2ef36fd8ae0d09aec6e5d8bd40a065dfccda6104af94df3f7a5854559ef4 attested in epoch 4.\r\nSep 30 03:47:35.385 INFO Shutting down..                         reason: Success(\"Received SIGTERM\")\r\nShutting down\r\nDone\r\n```\r\n\r\n## Steps to resolve\r\n\r\nMy bug, not renaming `NODE_COUNT` to `BN_COUNT` in `/scripts/tests/vars.env`, is fixed. But I believe there should be some kind of test at the end of the `doppelganger_protection.sh success` path that actually verifies that the expected number of attestations were actually completed.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/2656/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/2656/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/931844039",
    "html_url": "https://github.com/sigp/lighthouse/issues/2656#issuecomment-931844039",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2656",
    "id": 931844039,
    "node_id": "IC_kwDOCFeAzc43is_H",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-01T02:23:21Z",
    "updated_at": "2021-10-01T02:23:21Z",
    "author_association": "MEMBER",
    "body": "I haven't dug into it in detail but it looks like the success script attempts to check the status of attestations, but it's possible that errors are being conflated with success/failure. Here:\r\n\r\nhttps://github.com/sigp/lighthouse/blob/f9bba92db3468321b28ddd9010e26b359f88bafe/scripts/tests/doppelganger_protection.sh#L98-L126\r\n\r\nThis is the downside of testing with `bash` :expressionless: \r\n\r\nA simple improvement would be to add `set -o nounset` to error on unbound variables. I usually use `set -o errexit` in my bash scripts too, but the test currently relies on reading non-zero exit codes, so we couldn't use that here without a bit of refactoring.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/931844039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/938250986",
    "html_url": "https://github.com/sigp/lighthouse/issues/2656#issuecomment-938250986",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2656",
    "id": 938250986,
    "node_id": "IC_kwDOCFeAzc437JLq",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-08T00:40:20Z",
    "updated_at": "2021-10-08T00:40:20Z",
    "author_association": "MEMBER",
    "body": "IMO, we should look to port these `bash` scripts to Rust which runs Lighthouse using `std::process::Command`, much like the [CLI args tests](https://github.com/sigp/lighthouse/blob/stable/lighthouse/tests/beacon_node.rs).\r\n\r\nI think it would actually be quite straight-forward. It would also open up our testing capabilities since we would have much easier parsing of API responses.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/938250986/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/947086029",
    "html_url": "https://github.com/sigp/lighthouse/issues/2656#issuecomment-947086029",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2656",
    "id": 947086029,
    "node_id": "IC_kwDOCFeAzc44c2LN",
    "user": {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-19T20:37:09Z",
    "updated_at": "2021-10-19T20:37:09Z",
    "author_association": "COLLABORATOR",
    "body": "> IMO, we should look to port these bash scripts to Rust which runs Lighthouse using std::process::Command, much like the CLI args tests.\r\n\r\nI started on this a while ago, can pick it up again.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/947086029/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
