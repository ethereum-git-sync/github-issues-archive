{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/4040",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/4040/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/4040/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/4040/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/4040",
  "id": 1605793243,
  "node_id": "I_kwDOCFeAzc5ftnXb",
  "number": 4040,
  "title": "Add a flag to always use payloads from builders",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1930671200,
      "node_id": "MDU6TGFiZWwxOTMwNjcxMjAw",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/low-hanging-fruit",
      "name": "low-hanging-fruit",
      "color": "5cbc18",
      "default": false,
      "description": "Easy to resolve, get it before someone else does!"
    },
    {
      "id": 5178734145,
      "node_id": "LA_kwDOCFeAzc8AAAABNK02QQ",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/v3.5.1",
      "name": "v3.5.1",
      "color": "C6B198",
      "default": false,
      "description": "Scheduled for March 2023"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2023-03-01T22:51:41Z",
  "updated_at": "2023-03-07T07:55:55Z",
  "closed_at": "2023-03-07T07:55:55Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nIn #3934 we added support for the new payload value APIs, which means we've started using local payloads if they're more profitable than the builder. Since we released v3.5.0 with that change, we've had two requests to add another flag that always prefers the builder.\r\n\r\nThe first of these requests was so that Rocket Pool (RP) can force some operators to always use a specific builder to ensure that the operator isn't secretly pocketing MEV.\r\n\r\nThe second was from @mcdee, who wants to always use the builder because:\r\n\r\n> Vouch needs the blinded proposals from multiple beacon nodes to use the same execution payload so it can compare them, and also importantly so it can publish the fully unblinded block to all beacon nodes.\r\n\r\nThere may be views that we *shouldn't* add this feature to try and force more locally produced blocks. I see those views, but these two scenarios show to me that there's valid, Ethereum-aligned use-cases for this flag and I don't think we should stand in the way of our users.\r\n\r\nAdditionally, there's been scenarios on testnets where we've always wanted to use the builder (e.g., the \"big blocks\" tests). This flag would be useful there, too.\r\n\r\n## Additional Info\r\n\r\nRather than an \"always use the builder\" flag, we could have a flag that's along the lines of \"use the builder *unless* the value of the local builder is worth more than `x` ETH\". I'm a little unsure about this complexity, though. I suspect that if you're going to be comparing payload values then you'll always want the most profitable one. The two use cases I listed above are \"always use the builder\" so I'm tempted to just stick with that.\r\n\r\n",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/4040/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/4040/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1451020260",
    "html_url": "https://github.com/sigp/lighthouse/issues/4040#issuecomment-1451020260",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4040",
    "id": 1451020260,
    "node_id": "IC_kwDOCFeAzc5WfM_k",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-01T23:24:45Z",
    "updated_at": "2023-03-01T23:24:45Z",
    "author_association": "MEMBER",
    "body": "I agree it's clean to have an \"always use the builder flag\".\r\n\r\nHowever there is also a nice symmetry in a profit margin flag like `--builder-profit-margin N` where `N` is allowed to be negative. The logic would be:\r\n\r\n```rust\r\nlet block = if builder_value >= local_value + N {\r\n    // use builder\r\n    builder_block\r\n} else {\r\n   // use local block\r\n   local_block\r\n};\r\n```\r\n\r\nWhen `N` is positive it allows users who prefer local blocks to only take the builder block if it offers a substantial improvement (this was requested here: https://github.com/sigp/lighthouse/issues/3699#issuecomment-1426533691).\r\n\r\nWhen `N` is negative it allows users who prefer builder blocks to only take the local block if it offers a substantial improvement. This could be used for the \"always use the builder\" case by setting `N=i128::MIN`.\r\n\r\nThere's no I256 type in ethereum-types, so we would have to use `i128` for the calculation. I think this isn't likely to be an issue as it still represents values from -3.4 x10^20 to +3.4 x10^20 ETH.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1451020260/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1452950106",
    "html_url": "https://github.com/sigp/lighthouse/issues/4040#issuecomment-1452950106",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4040",
    "id": 1452950106,
    "node_id": "IC_kwDOCFeAzc5WmkJa",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-03T04:28:10Z",
    "updated_at": "2023-03-03T04:28:10Z",
    "author_association": "MEMBER",
    "body": "For whoever implements this, I believe we just need to add an extra bool to this `if` statement (and a flag to toggle it):\r\n\r\nhttps://github.com/sigp/lighthouse/blob/0fb58a680d6f0c9f0dc8beecf142186debff9a8d/beacon_node/execution_layer/src/lib.rs#L851-L859\r\n\r\nE.g.,\r\n\r\n```rust\r\nif !self.always_prefer_builder_payload && local_value >= relay_value {\r\n   ...\r\n}\r\n```\r\n\r\nI think we should be careful to always use the builder payload only *if it is available*. I.e., if the builder doesn't return a paylaod but the EL does, then we still want to use the EL payload. I don't think this it's reasonable or safe to skip a block when we can avoid it.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1452950106/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1452972414",
    "html_url": "https://github.com/sigp/lighthouse/issues/4040#issuecomment-1452972414",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4040",
    "id": 1452972414,
    "node_id": "IC_kwDOCFeAzc5Wmpl-",
    "user": {
      "login": "divagant-martian",
      "id": 26765164,
      "node_id": "MDQ6VXNlcjI2NzY1MTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/26765164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/divagant-martian",
      "html_url": "https://github.com/divagant-martian",
      "followers_url": "https://api.github.com/users/divagant-martian/followers",
      "following_url": "https://api.github.com/users/divagant-martian/following{/other_user}",
      "gists_url": "https://api.github.com/users/divagant-martian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/divagant-martian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/divagant-martian/subscriptions",
      "organizations_url": "https://api.github.com/users/divagant-martian/orgs",
      "repos_url": "https://api.github.com/users/divagant-martian/repos",
      "events_url": "https://api.github.com/users/divagant-martian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/divagant-martian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-03T04:56:44Z",
    "updated_at": "2023-03-03T04:56:44Z",
    "author_association": "COLLABORATOR",
    "body": "@danielrachi would you be interested in this issue?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1452972414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1453019052",
    "html_url": "https://github.com/sigp/lighthouse/issues/4040#issuecomment-1453019052",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4040",
    "id": 1453019052,
    "node_id": "IC_kwDOCFeAzc5Wm0-s",
    "user": {
      "login": "danielrachi",
      "id": 67139425,
      "node_id": "MDQ6VXNlcjY3MTM5NDI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/67139425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielrachi",
      "html_url": "https://github.com/danielrachi",
      "followers_url": "https://api.github.com/users/danielrachi/followers",
      "following_url": "https://api.github.com/users/danielrachi/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielrachi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielrachi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielrachi/subscriptions",
      "organizations_url": "https://api.github.com/users/danielrachi/orgs",
      "repos_url": "https://api.github.com/users/danielrachi/repos",
      "events_url": "https://api.github.com/users/danielrachi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielrachi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-03T06:01:35Z",
    "updated_at": "2023-03-03T06:01:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sure, I'll work on it during the weekend",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1453019052/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1455223511",
    "html_url": "https://github.com/sigp/lighthouse/issues/4040#issuecomment-1455223511",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4040",
    "id": 1455223511,
    "node_id": "IC_kwDOCFeAzc5WvPLX",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-05T22:14:01Z",
    "updated_at": "2023-03-05T22:14:01Z",
    "author_association": "MEMBER",
    "body": "Thanks @danielrachi, much appreciated!\r\n\r\nWe're planning a release for Wednesday the 8th and we need to get this included in that release. We need a day of testing before we can release too, so the timeline is a little tight on this one.\r\n\r\nI know you're a voluntary contributor so I certainly don't want to rush you. If you feel like you can get it done in time, please do. Otherwise please let me know and we can take it ☺️",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1455223511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1455559953",
    "html_url": "https://github.com/sigp/lighthouse/issues/4040#issuecomment-1455559953",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4040",
    "id": 1455559953,
    "node_id": "IC_kwDOCFeAzc5WwhUR",
    "user": {
      "login": "danielrachi",
      "id": 67139425,
      "node_id": "MDQ6VXNlcjY3MTM5NDI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/67139425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielrachi",
      "html_url": "https://github.com/danielrachi",
      "followers_url": "https://api.github.com/users/danielrachi/followers",
      "following_url": "https://api.github.com/users/danielrachi/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielrachi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielrachi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielrachi/subscriptions",
      "organizations_url": "https://api.github.com/users/danielrachi/orgs",
      "repos_url": "https://api.github.com/users/danielrachi/repos",
      "events_url": "https://api.github.com/users/danielrachi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielrachi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-06T07:04:32Z",
    "updated_at": "2023-03-06T07:04:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@paulhauner I think it's almost ready, I just have to write more tests and solve a weird compilation error I'm having trouble with.\r\n\r\nYou can check the draft PR now, if you think I'm not in the right direction please feel free to take the issue, I don't want to cause any trouble with the release.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1455559953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1457205491",
    "html_url": "https://github.com/sigp/lighthouse/issues/4040#issuecomment-1457205491",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4040",
    "id": 1457205491,
    "node_id": "IC_kwDOCFeAzc5W2zDz",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-06T23:25:38Z",
    "updated_at": "2023-03-06T23:25:38Z",
    "author_association": "MEMBER",
    "body": "@mcdee I'm curious, does Vouch also disable the builder health checks in order to work its magic with blinded blocks?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1457205491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1457212512",
    "html_url": "https://github.com/sigp/lighthouse/issues/4040#issuecomment-1457212512",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4040",
    "id": 1457212512,
    "node_id": "IC_kwDOCFeAzc5W20xg",
    "user": {
      "login": "mcdee",
      "id": 511384,
      "node_id": "MDQ6VXNlcjUxMTM4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/511384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcdee",
      "html_url": "https://github.com/mcdee",
      "followers_url": "https://api.github.com/users/mcdee/followers",
      "following_url": "https://api.github.com/users/mcdee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcdee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcdee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcdee/subscriptions",
      "organizations_url": "https://api.github.com/users/mcdee/orgs",
      "repos_url": "https://api.github.com/users/mcdee/repos",
      "events_url": "https://api.github.com/users/mcdee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcdee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-06T23:32:25Z",
    "updated_at": "2023-03-06T23:32:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "It doesn't require them to be disabled, but if the beacon node decides not to use the payload from the relay Vouch will in turn reject the blinded block.  So if the beacon node is in a state where it thinks that it shouldn't be using relays:\r\n1. Vouch requests a blinded block\r\n1. the beacon node returns a blinded block with a locally-built payload\r\n1. Vouch rejects the blinded block due to the transactions root not matching\r\n1. Vouch requests a (non-blinded) block from the beacon node, and works with that\r\n\r\nI have considered requesting that in step 2) the beacon node sends a 404 rather than building a blinded block with a local payload without telling us (it's a right pain on testnets in particular, where they can be unstable to the point that the circuit breaker is active a lot of the time) but understand why, in the general case, it makes sense to do this.\r\n\r\nThe only other thing worth noting is that if there are multiple beacon nodes with different circuit breaker conditions then as long as one of them is taking the payload from the relay we'll use that regardless of the relative value of the blocks in terms of consensus rewards, which is a shame but not much we can do about it.  So in that case it can make sense for the circuit breaker conditions to be rather lenient, if not entirely off.  It's down to the individual users who configure their beacon nodes as to how they want to set it, though.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1457212512/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1457247588",
    "html_url": "https://github.com/sigp/lighthouse/issues/4040#issuecomment-1457247588",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4040",
    "id": 1457247588,
    "node_id": "IC_kwDOCFeAzc5W29Vk",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-07T00:08:52Z",
    "updated_at": "2023-03-07T00:08:52Z",
    "author_association": "MEMBER",
    "body": "Thanks for the comprehensive reply!\n\nWe've got the always-prefer flag landing in v3.5.1 so it sounds like that should restore things to the previous status quo. It's interesting to think of minimally invasive improvements we could make on this front though, thanks again for the input.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1457247588/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1457707553",
    "html_url": "https://github.com/sigp/lighthouse/issues/4040#issuecomment-1457707553",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4040",
    "id": 1457707553,
    "node_id": "IC_kwDOCFeAzc5W4toh",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-07T07:52:06Z",
    "updated_at": "2023-03-07T07:52:06Z",
    "author_association": "MEMBER",
    "body": "Resolved via #4052 🎉 ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1457707553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
