{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/485",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/485/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/485/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/485/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/485",
  "id": 476377116,
  "node_id": "MDU6SXNzdWU0NzYzNzcxMTY=",
  "number": 485,
  "title": "DoS vector when processing blocks with big skips",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647281,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODE=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 1141293876,
      "node_id": "MDU6TGFiZWwxMTQxMjkzODc2",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/work-started",
      "name": "work-started",
      "color": "e072ab",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2019-08-02T22:27:57Z",
  "updated_at": "2020-08-28T00:07:33Z",
  "closed_at": "2020-08-28T00:07:32Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nAs mentioned in #482, when we receive a block for processing we load its previous state from disk and advance the state to the slot of the to-be-processed block.\r\n\r\nAdvancing the state requires significant computation (hashing, per-epoch processing, etc) which scales linearly with the slot-wise distance between the block and it's parent. With an unbounded distance, it's not unreasonable to expect minutes/hours of computation. This is a severe DoS vector.\r\n\r\n## Potential Solutions\r\n\r\nI propose that we add a `MAX_DISTANCE` value (not necessarily constant) which defines the maximum slot-wise distance between a block and it's parent, and that we impose that upon all block processing. Any block that exceeds this distance will be deemed invalid.\r\n\r\nThe trade-off here is that we fail to support some valid consensus messages (e.g., producing a block at slot 1,000,000 which references genesis is indeed valid). My conjecture is that if `MAX_DISTANCE` is set to to something in the order of 10's of epochs there would be no negative impact on a real-world system.",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/485/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/485/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/517862862",
    "html_url": "https://github.com/sigp/lighthouse/issues/485#issuecomment-517862862",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/485",
    "id": 517862862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzg2Mjg2Mg==",
    "user": {
      "login": "terencechain",
      "id": 21316537,
      "node_id": "MDQ6VXNlcjIxMzE2NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21316537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechain",
      "html_url": "https://github.com/terencechain",
      "followers_url": "https://api.github.com/users/terencechain/followers",
      "following_url": "https://api.github.com/users/terencechain/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechain/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechain/orgs",
      "repos_url": "https://api.github.com/users/terencechain/repos",
      "events_url": "https://api.github.com/users/terencechain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-02T22:34:43Z",
    "updated_at": "2019-08-02T22:34:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@prestonvanloon was just talking about this today, we saw big timeout when beacon node has to process a bunch of skip slots to compute the assignments. We are researching a proper way to cache for long skip slots and redundant advancements",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/517862862/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/517868821",
    "html_url": "https://github.com/sigp/lighthouse/issues/485#issuecomment-517868821",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/485",
    "id": 517868821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzg2ODgyMQ==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-02T23:10:50Z",
    "updated_at": "2019-08-02T23:10:50Z",
    "author_association": "MEMBER",
    "body": "Great minds! :D\r\n\r\nWe have a cached `BeaconState` that we use for faster block production and committee retrieval. It's a bit naive at the moment, but I'm looking to improve it with #482. I'll be interested to hear what you come up with!\r\n\r\nI think this issue is similar to that, but a solution to the block _production_ and committee retrieval problem doesn't necessarily address this problem about block _processing_. When doing production and committee retrieval, we can optimize under the assumption that we're operating operating +/- 1 epoch from the current slot and that we want to work off the head. When it comes to block _processing_ we're potentially dealing with actors who can arbitrarily pick the parent.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/517868821/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/517870705",
    "html_url": "https://github.com/sigp/lighthouse/issues/485#issuecomment-517870705",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/485",
    "id": 517870705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzg3MDcwNQ==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-02T23:24:24Z",
    "updated_at": "2019-08-02T23:24:24Z",
    "author_association": "MEMBER",
    "body": "@protolambda just pointed out that there's a safe `MAX_DISTANCE` that doesn't restrict the set of processable blocks because at some point all validators will be slashed out. ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/517870705/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/518052897",
    "html_url": "https://github.com/sigp/lighthouse/issues/485#issuecomment-518052897",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/485",
    "id": 518052897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODA1Mjg5Nw==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-05T01:08:18Z",
    "updated_at": "2019-08-05T01:08:18Z",
    "author_association": "MEMBER",
    "body": "I'm working on this now",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/518052897/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/518367151",
    "html_url": "https://github.com/sigp/lighthouse/issues/485#issuecomment-518367151",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/485",
    "id": 518367151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODM2NzE1MQ==",
    "user": {
      "login": "prestonvanloon",
      "id": 7246818,
      "node_id": "MDQ6VXNlcjcyNDY4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7246818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prestonvanloon",
      "html_url": "https://github.com/prestonvanloon",
      "followers_url": "https://api.github.com/users/prestonvanloon/followers",
      "following_url": "https://api.github.com/users/prestonvanloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/prestonvanloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prestonvanloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prestonvanloon/subscriptions",
      "organizations_url": "https://api.github.com/users/prestonvanloon/orgs",
      "repos_url": "https://api.github.com/users/prestonvanloon/repos",
      "events_url": "https://api.github.com/users/prestonvanloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prestonvanloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-05T19:28:32Z",
    "updated_at": "2019-08-05T19:28:32Z",
    "author_association": "NONE",
    "body": "Why would a block at slot 1,000,000 have a parent block that is genesis and still be valid? (Assuming there is at least one finalized epoch since genesis.) We already know that this block can never be the head of the chain since we already have a finalized fork height that is greater than the parent of this block.\r\n\r\nI'm thinking that we can reject any block from the future and any block that references a parent older than the most recent finalized epoch. What do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/518367151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/518475804",
    "html_url": "https://github.com/sigp/lighthouse/issues/485#issuecomment-518475804",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/485",
    "id": 518475804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODQ3NTgwNA==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-06T02:48:23Z",
    "updated_at": "2019-08-06T02:48:23Z",
    "author_association": "MEMBER",
    "body": "> I'm thinking that we can reject any block from the future and any block that references a parent older than the most recent finalized epoch. What do you think?\r\n\r\nAgreed, we're taking this approach too.\r\n\r\nHowever, if the last finalized epoch is 4 epochs ago, there's still this problem where a malicious actor can force us to replay 4 epochs worth of skipping when it's very unlikely that `4 * 64` blocks have been skipped.\r\n\r\nThe real concern is that we can't even verify the signature of the block before we do this skipping as we can't map `block.slot -> validator_index` until we know the shuffling in that final state, meaning this attack is not restricted to proposers (anyone can do it).\r\n\r\nThinking about this some more, the `MAX_DISTANCE` solution is a bit heavy handed. Here are some alternatives:\r\n\r\n### Add a `proposer` field to `BeaconBlock`\r\n\r\nThis field would contain the index of the proposer that signed the block.\r\n\r\nWith this field, we could run the following checks using only the parent block's state (i.e., without any skipping):\r\n- Is the validator obviously not active in the slot of the proposed block? (i.e., inactive, slashed, etc)\r\n- Did the validator actually sign the block?\r\n\r\nThis would reduce the scope of the attack to validators who are _probably_ slashable.\r\n\r\n- Pros\r\n    - Signature verification becomes much easier, becomes cheaper to reject blocks that aren't signed by validators.\r\n    - Simpler than other solutions.\r\n- Cons\r\n    - Spec change.\r\n    - 8 more bytes to send over the wire.\r\n\r\n### Create a light-weight skip method\r\n\r\nIn order to learn the `validator_index` of the proposer and reduce the scope of this attack to deposited validators, all you need to know is the shuffling for that epoch.\r\n\r\nYou don't need to do the whole `per_slot_processing` to learn that -- I think all you need is `active_validator_indices` for each intermediate epoch and the seed of the last epoch (easily computed).\r\n\r\n- Pros\r\n    - Doesn't change spec.\r\n- Cons\r\n    - Light-weight skip method is additional complexity.\r\n    - Calculating active validator indices is still a bit of work.\r\n\r\n### Use an attestation-based heuristic for rejecting such blocks\r\n\r\nYou could make a reasonable judgement that if some block skips 4 epochs, but there's some block 1 epoch ago with significant amount of attestations than the received block is invalid.\r\n\r\n- Pros:\r\n    - Doesn't change the spec.\r\n- Cons:\r\n    - Rejects valid consensus messages (even if those messages might be eventually useless).\r\n    - Maintaining and calculating this heuristic is potentially more effort than the previous suggestions.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/518475804/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/518509703",
    "html_url": "https://github.com/sigp/lighthouse/issues/485#issuecomment-518509703",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/485",
    "id": 518509703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODUwOTcwMw==",
    "user": {
      "login": "arnetheduck",
      "id": 1382986,
      "node_id": "MDQ6VXNlcjEzODI5ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnetheduck",
      "html_url": "https://github.com/arnetheduck",
      "followers_url": "https://api.github.com/users/arnetheduck/followers",
      "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
      "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
      "repos_url": "https://api.github.com/users/arnetheduck/repos",
      "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-06T05:37:46Z",
    "updated_at": "2019-08-06T05:37:46Z",
    "author_association": "NONE",
    "body": "> Create a light-weight skip method\r\n\r\nWe've been contemplating this one mostly - it applies to most of the spec that it would be nice to be able to apply only relevant parts. We have yet to make the data dependency analysis to find out which parts of the spec code touch which parts of the state and therefore can be made independent. Has anyone conducted a study like this? I imagine with a control flow graph one could generate it from the code.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/518509703/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/518564635",
    "html_url": "https://github.com/sigp/lighthouse/issues/485#issuecomment-518564635",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/485",
    "id": 518564635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODU2NDYzNQ==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-06T08:22:15Z",
    "updated_at": "2019-08-06T08:22:15Z",
    "author_association": "MEMBER",
    "body": "> Has anyone conducted a study like this? I imagine with a control flow graph one could generate it from the code.\r\n\r\nI haven't done anything like this, but as I just mentioned here https://github.com/ethereum/eth2.0-specs/issues/1339, you probably need to scan the validator registry at least once during this process.\r\n\r\nValidator exit or activation epochs might occur during the skips and you need to keep track of that in order to know the active validator indices (and therefore the shuffling) for the to-be-verified block's epoch.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/518564635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/518849364",
    "html_url": "https://github.com/sigp/lighthouse/issues/485#issuecomment-518849364",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/485",
    "id": 518849364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODg0OTM2NA==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-06T21:23:14Z",
    "updated_at": "2019-08-06T21:23:14Z",
    "author_association": "MEMBER",
    "body": "Here's a fairly detailed analysis from Vitalik: https://github.com/ethereum/eth2.0-specs/issues/1340",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/518849364/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/656145257",
    "html_url": "https://github.com/sigp/lighthouse/issues/485#issuecomment-656145257",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/485",
    "id": 656145257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjE0NTI1Nw==",
    "user": {
      "login": "adaszko",
      "id": 165678,
      "node_id": "MDQ6VXNlcjE2NTY3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/165678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adaszko",
      "html_url": "https://github.com/adaszko",
      "followers_url": "https://api.github.com/users/adaszko/followers",
      "following_url": "https://api.github.com/users/adaszko/following{/other_user}",
      "gists_url": "https://api.github.com/users/adaszko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adaszko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adaszko/subscriptions",
      "organizations_url": "https://api.github.com/users/adaszko/orgs",
      "repos_url": "https://api.github.com/users/adaszko/repos",
      "events_url": "https://api.github.com/users/adaszko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adaszko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-09T14:00:33Z",
    "updated_at": "2020-07-09T14:00:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closed it accidentally (GitHub UI deceived me).  Please ignore.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/656145257/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/682251963",
    "html_url": "https://github.com/sigp/lighthouse/issues/485#issuecomment-682251963",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/485",
    "id": 682251963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjI1MTk2Mw==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-28T00:07:32Z",
    "updated_at": "2020-08-28T00:07:32Z",
    "author_association": "MEMBER",
    "body": "Closing this since we now have `proposer_index` on blocks and we have a fairly light-weight method for skipping slots to compute committees.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/682251963/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
