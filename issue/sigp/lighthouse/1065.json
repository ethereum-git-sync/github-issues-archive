{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/1065",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/1065/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/1065/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/1065/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/1065",
  "id": 607494835,
  "node_id": "MDU6SXNzdWU2MDc0OTQ4MzU=",
  "number": 1065,
  "title": "Possible consensus bug with proposer slashings",
  "user": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647281,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODE=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2020-04-27T12:08:07Z",
  "updated_at": "2020-04-30T05:21:44Z",
  "closed_at": "2020-04-30T05:21:44Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "The `process_proposer_slashings` function has two key steps, namely verifying the proposer slashings in parallel and then calling `slash_validator` once per `proposer_slashing`. The parallel proposer slashing verification seems to assume proposer slashings can be verified independently but there is some state dependency in `assert is_slashable_validator(proposer, get_current_epoch(state))` (see spec [here](https://github.com/ethereum/eth2.0-specs/blob/dev/specs/phase0/beacon-chain.md#proposer-slashings)).\r\n\r\nSpecifically, if the same (unslashed) validator is put several times in `process_proposer_slashings` then the second proposer slashing should throw an error. As far as I can tell `slash_validator` in Lighthouse will *not* throw an error if the validator is already slashed and `process_proposer_slashings` will not throw an error if the same validator is slashed several times.",
  "closed_by": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/1065/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/1065/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620005736",
    "html_url": "https://github.com/sigp/lighthouse/issues/1065#issuecomment-620005736",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1065",
    "id": 620005736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDAwNTczNg==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T14:01:07Z",
    "updated_at": "2020-04-27T14:01:07Z",
    "author_association": "NONE",
    "body": "The spec has no explicit concurrency, Lighthouse may have optimized it wrong, and the edge case deserves a test. After first slashing, validator.slashed = True, and is-slashable will be False and abort the 2nd slashing.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620005736/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620010454",
    "html_url": "https://github.com/sigp/lighthouse/issues/1065#issuecomment-620010454",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1065",
    "id": 620010454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDAxMDQ1NA==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T14:08:15Z",
    "updated_at": "2020-04-27T14:08:15Z",
    "author_association": "NONE",
    "body": "Can confirm the bug; https://github.com/sigp/lighthouse/blob/32074f0d095d901e77ce039ac02b3687f9cce76c/eth2/state_processing/src/per_block_processing.rs#L288\r\n\r\nThe operations are verified with a parallel iterator, only *reading* the state. Rust doesn't complain here. And then the slashings are applied, and the two proposer slashings that were valid on the pre-state, but not the specced intermediate state, would be confirmed.\r\n\r\nMaybe it's a good idea to adjust `slash_validator` in the spec to explicitly check `is_slashable_validator`, so this can never happen again?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620010454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620262474",
    "html_url": "https://github.com/sigp/lighthouse/issues/1065#issuecomment-620262474",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1065",
    "id": 620262474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDI2MjQ3NA==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T22:10:22Z",
    "updated_at": "2020-04-27T22:10:22Z",
    "author_association": "MEMBER",
    "body": "Thanks @JustinDrake, this is a great pickup.\r\n\r\nI think this comes from back when I was working on [serenity-benches](https://github.com/sigp/serenity-benches), so I'll take responsibility for this.\r\n\r\nWe do this type of parallel execution for several block-operations processing functions because we saw a significant gain from doing BLS verification on multiple cores. Now we're doing batch BLS verification and we never* actually verify signatures during `per_block_processing`/`per_state_processing` I think we can realistically remove all these `par_iter`. @michaelsproul keen to hear your thoughts, as always.\r\n\r\n*: we still verify signatures during deposits processing. Perhaps keeping _only_ concurrent signature verification here is sensible.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620262474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620348692",
    "html_url": "https://github.com/sigp/lighthouse/issues/1065#issuecomment-620348692",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1065",
    "id": 620348692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDM0ODY5Mg==",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T02:59:04Z",
    "updated_at": "2020-04-28T03:00:19Z",
    "author_association": "MEMBER",
    "body": "I had a look at attestation processing, and it looks like it's safe because it only verifies the indexed attestations in parallel, and does the actual slashing in series, checking the non-empty slashing condition here:\r\n\r\nhttps://github.com/sigp/lighthouse/blob/26bdc2927b6f51fd7c0deb909ea4e54c03087c45/eth2/state_processing/src/per_block_processing/verify_attester_slashing.rs#L97\r\n\r\nFor proposer slashings, I agree we could remove the parallel iterator entirely. And I guess we could defensively remove all parallel iterators from state processing?\r\n\r\n----\r\n\r\nOh damn, and I just checked the op pool, which I thought handled this correctly, but it looks like it doesn't :\\ It takes great care to avoid including duplicate attester slashings, but just piles in all the proposer slashings that are compatible with a single state:\r\n\r\nhttps://github.com/sigp/lighthouse/blob/15a3af89662c4f2bc02f3eeaffca46be70a532b1/eth2/operation_pool/src/lib.rs#L237-L246",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620348692/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620486862",
    "html_url": "https://github.com/sigp/lighthouse/issues/1065#issuecomment-620486862",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1065",
    "id": 620486862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDQ4Njg2Mg==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T09:21:14Z",
    "updated_at": "2020-04-28T09:21:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think we can realistically remove all these `par_iter`\r\n\r\nIn this particular instance it may be wise to remove the `par_iter` especially if the performance gains are small. Having said that, as more of a meta comment for the codebase as a whole, I quite like that you guys are going \"beyond\" the spec to squeeze out performance :)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620486862/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620531929",
    "html_url": "https://github.com/sigp/lighthouse/issues/1065#issuecomment-620531929",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1065",
    "id": 620531929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDUzMTkyOQ==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T10:51:38Z",
    "updated_at": "2020-04-28T10:51:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "As a meta question for @zedt3ster, why didn't the fuzzing infrastructure catch this bug or the recent consensus bug in Prysm regarding reward calculations?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620531929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620547945",
    "html_url": "https://github.com/sigp/lighthouse/issues/1065#issuecomment-620547945",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1065",
    "id": 620547945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDU0Nzk0NQ==",
    "user": {
      "login": "protolambda",
      "id": 19571989,
      "node_id": "MDQ6VXNlcjE5NTcxOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19571989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/protolambda",
      "html_url": "https://github.com/protolambda",
      "followers_url": "https://api.github.com/users/protolambda/followers",
      "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
      "organizations_url": "https://api.github.com/users/protolambda/orgs",
      "repos_url": "https://api.github.com/users/protolambda/repos",
      "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/protolambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T11:28:38Z",
    "updated_at": "2020-04-28T11:36:54Z",
    "author_association": "NONE",
    "body": "@JustinDrake Prysm introduced the bug just a few days before testnet launch with a last-minute v0.11 update. Can't catch something with fuzzing when the fuzzer doesn't run the code. But I'm sure it could have, if it were up to date.\r\nFor lighthouse, it's more questionable. Maybe the double proposer slashing is too specific to find with the fuzzer. The fuzzer would need to figure out to duplicate the exact slashing operation, not impossible though.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620547945/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620554229",
    "html_url": "https://github.com/sigp/lighthouse/issues/1065#issuecomment-620554229",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1065",
    "id": 620554229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDU1NDIyOQ==",
    "user": {
      "login": "zedt3ster",
      "id": 9854592,
      "node_id": "MDQ6VXNlcjk4NTQ1OTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9854592?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zedt3ster",
      "html_url": "https://github.com/zedt3ster",
      "followers_url": "https://api.github.com/users/zedt3ster/followers",
      "following_url": "https://api.github.com/users/zedt3ster/following{/other_user}",
      "gists_url": "https://api.github.com/users/zedt3ster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zedt3ster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zedt3ster/subscriptions",
      "organizations_url": "https://api.github.com/users/zedt3ster/orgs",
      "repos_url": "https://api.github.com/users/zedt3ster/repos",
      "events_url": "https://api.github.com/users/zedt3ster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zedt3ster/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T11:43:29Z",
    "updated_at": "2020-04-28T11:43:29Z",
    "author_association": "MEMBER",
    "body": "So our beacon fuzz fuzzers were targeting `v0.10` up until a few days ago. As mentioned by @protolambda, the code that was instrumented didn't include the bug in question. We've also ran into multiple issues with the Prysm build (that are now resolved) which prevented us from integrating them into our continuous fuzzing.\r\n\r\nWe're currently revamping the differential fuzzer completely to include new mutation engines and leveraging structural fuzzing. In fact, we just identified an [SSZ decoding/processing bug](https://github.com/prysmaticlabs/prysm/issues/5658) in Prysm. The differential part of the fuzzers is currently \"_on hold\",_ we'll be sharing a new design this week - this type of bug could definitely be picked up in the future.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620554229/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/621036114",
    "html_url": "https://github.com/sigp/lighthouse/issues/1065#issuecomment-621036114",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1065",
    "id": 621036114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTAzNjExNA==",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-29T07:30:04Z",
    "updated_at": "2020-04-29T07:30:04Z",
    "author_association": "MEMBER",
    "body": "I'm going to fix this",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/621036114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
