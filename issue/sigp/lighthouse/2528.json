{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/2528",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/2528/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/2528/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/2528/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/2528",
  "id": 975280997,
  "node_id": "MDU6SXNzdWU5NzUyODA5OTc=",
  "number": 2528,
  "title": "Additional metrics for block delays",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647284,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODQ=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/enhancement",
      "name": "enhancement",
      "color": "a2eeef",
      "default": true,
      "description": "New feature or request"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "macladson",
    "id": 58379419,
    "node_id": "MDQ6VXNlcjU4Mzc5NDE5",
    "avatar_url": "https://avatars.githubusercontent.com/u/58379419?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/macladson",
    "html_url": "https://github.com/macladson",
    "followers_url": "https://api.github.com/users/macladson/followers",
    "following_url": "https://api.github.com/users/macladson/following{/other_user}",
    "gists_url": "https://api.github.com/users/macladson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/macladson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/macladson/subscriptions",
    "organizations_url": "https://api.github.com/users/macladson/orgs",
    "repos_url": "https://api.github.com/users/macladson/repos",
    "events_url": "https://api.github.com/users/macladson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/macladson/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "macladson",
      "id": 58379419,
      "node_id": "MDQ6VXNlcjU4Mzc5NDE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58379419?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/macladson",
      "html_url": "https://github.com/macladson",
      "followers_url": "https://api.github.com/users/macladson/followers",
      "following_url": "https://api.github.com/users/macladson/following{/other_user}",
      "gists_url": "https://api.github.com/users/macladson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/macladson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/macladson/subscriptions",
      "organizations_url": "https://api.github.com/users/macladson/orgs",
      "repos_url": "https://api.github.com/users/macladson/repos",
      "events_url": "https://api.github.com/users/macladson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/macladson/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-08-20T05:31:05Z",
  "updated_at": "2021-09-30T07:08:05Z",
  "closed_at": "2021-09-30T07:08:05Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "[attestation production routine]: https://github.com/sigp/lighthouse/blob/12fe72bd372b6ffc788572aa0b3c559961a97a55/beacon_node/beacon_chain/src/beacon_chain.rs#L1254-L1428\r\n[`BEACON_BLOCK_IMPORTED_SLOT_START_DELAY_TIME`]: https://github.com/sigp/lighthouse/blob/12fe72bd372b6ffc788572aa0b3c559961a97a55/beacon_node/beacon_chain/src/metrics.rs#L629-L632\r\n[`BEACON_BLOCK_HEAD_SLOT_START_DELAY_TIME`]: https://github.com/sigp/lighthouse/blob/12fe72bd372b6ffc788572aa0b3c559961a97a55/beacon_node/beacon_chain/src/metrics.rs#L633-L636\r\n[`BEACON_BLOCK_GOSSIP_SLOT_START_DELAY_TIME`]: https://github.com/sigp/lighthouse/blob/12fe72bd372b6ffc788572aa0b3c559961a97a55/beacon_node/network/src/metrics.rs#L464-L467\r\n[in the `BeaconChain::fork_choice` function]: https://github.com/sigp/lighthouse/blob/12fe72bd372b6ffc788572aa0b3c559961a97a55/beacon_node/beacon_chain/src/beacon_chain.rs#L2947-L2951\r\n\r\n## Le Problème\r\n\r\nThere is a well-known issue where validators frequently \"miss\" the head/target votes (i.e., vote for a block that is not canonical). Assuming that our [attestation production routine] is solid (I believe it is), these missed votes occur because we haven't managed to import and set the correct block as our head before the attestation is created (4s after the slot starts). There's two reasons why this might happen:\r\n\r\n- Our peers sent us the block too late (i.e., later than 4s from slot start).\r\n- We got the block in time, but it took us too long to import it and set it as the head.\r\n\r\nThis information is not new, I've been chasing this problem for quite a while. In my previous efforts, I added some metrics:\r\n\r\n1. [`BEACON_BLOCK_GOSSIP_SLOT_START_DELAY_TIME`]: The delay between the start of the slot and when we saw it on the gossip network.\r\n1. [`BEACON_BLOCK_IMPORTED_SLOT_START_DELAY_TIME`]: The delay between the start of the slot and when we verified the block and imported it to the DB.\r\n1. [`BEACON_BLOCK_HEAD_SLOT_START_DELAY_TIME`]: The delay between the start of the slot and when we set it as the canonical head.\r\n\r\nThese metrics work well on their own, however I'm unable to link them together to answer this important question:\r\n\r\n*\"When a block is set as the canonical head too late, is it because we saw the block too late? Or, is it because it took us too long to import it? Or, did we manage to import it in time but were too slow to set it as the head?\"*\r\n\r\nThe answer to this question might help us understand if we need to focus on spreading blocks around the network faster (i.e., gossip propagation times), *or*, if we need to focus on speeding up our block import or fork choice times.\r\n\r\nSo, what's stopping us from linking those metrics together?\r\n\r\nWhen we set metric (3) [in the `BeaconChain::fork_choice` function], we've completely lost the time when we saw the block on the network and when we finished verifying it. Importing the block to the DB is a *completely separate function* to running the fork choice algorithm to find and set the canonical head.\r\n\r\nWe need to be able to make the network/import delay information available to the `BeaconChain::fork_choice` function.\r\n\r\n## La Solution Potentielle\r\n\r\nCreate a new cache and stick it to the `BeaconChain`. It would likely look something like this:\r\n\r\n```rust\r\nstruct Timestamps {\r\n  observed: Option<Duration>,\r\n  imported: Option<Duration>,\r\n  set_as_head: Option<Duration>\r\n}\r\n\r\ntype BlockRoot = Hash256;\r\n\r\nstruct BlockDelays(HashMap<BlockRoot, Timestamps>);\r\n```\r\nWe set `observed` when we see the block via:\r\n\r\n- Network (RPC)\r\n- Network (Gossip)\r\n- HTTP API\r\n\r\nWe set `imported` somewhere around [here](https://github.com/sigp/lighthouse/blob/12fe72bd372b6ffc788572aa0b3c559961a97a55/beacon_node/beacon_chain/src/beacon_chain.rs#L2461-L2468).\r\n\r\nWe set `set_as_head` (and report some new metrics/logs) somewhere around [here](https://github.com/sigp/lighthouse/blob/12fe72bd372b6ffc788572aa0b3c559961a97a55/beacon_node/beacon_chain/src/beacon_chain.rs#L2947-L2951).\r\n\r\n### Considérations Supplémentaires\r\n\r\nWhenever we add a cache we need to be sure that we bound the size of it and prune it. For this cache, I think we only need to track blocks from the last couple of epochs. That's probably only 64ish blocks and relatively minuscule compared to everything else. We could trigger a prune on [`BeaconChain::per_slot_task`](https://github.com/sigp/lighthouse/blob/12fe72bd372b6ffc788572aa0b3c559961a97a55/beacon_node/beacon_chain/src/beacon_chain.rs#L3122-L3130) and just prune blocks that are `n` slots older than the current slot.\r\n\r\nDue to some valid edge cases, we might have the case where set the head and we don't have timing info. That's totally fine, perhaps we just log a `debug!` log.\r\n\r\nPresently, metric (1) only tracks gossip blocks. We should probably track blocks from the RPC too. Any block from the network goes via the [`BeaconProcessor`](https://github.com/sigp/lighthouse/blob/unstable/beacon_node/network/src/beacon_processor/mod.rs). You can [see](https://github.com/sigp/lighthouse/blob/12fe72bd372b6ffc788572aa0b3c559961a97a55/beacon_node/network/src/beacon_processor/mod.rs#L328) that we track the `seen_timestamp` for gossip blocks but [not for rpc blocks](https://github.com/sigp/lighthouse/blob/12fe72bd372b6ffc788572aa0b3c559961a97a55/beacon_node/network/src/beacon_processor/mod.rs#L429-L431). I'm not sure how hard this is, but we can *probably* follow that function trail upstream and take a timestamp at the earliest possible time and thread it through the `BeaconProcessor`. If this gets hard, feel free to reach out to me :)",
  "closed_by": {
    "login": "macladson",
    "id": 58379419,
    "node_id": "MDQ6VXNlcjU4Mzc5NDE5",
    "avatar_url": "https://avatars.githubusercontent.com/u/58379419?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/macladson",
    "html_url": "https://github.com/macladson",
    "followers_url": "https://api.github.com/users/macladson/followers",
    "following_url": "https://api.github.com/users/macladson/following{/other_user}",
    "gists_url": "https://api.github.com/users/macladson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/macladson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/macladson/subscriptions",
    "organizations_url": "https://api.github.com/users/macladson/orgs",
    "repos_url": "https://api.github.com/users/macladson/repos",
    "events_url": "https://api.github.com/users/macladson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/macladson/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/2528/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/2528/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/903026097",
    "html_url": "https://github.com/sigp/lighthouse/issues/2528#issuecomment-903026097",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2528",
    "id": 903026097,
    "node_id": "IC_kwDOCFeAzc410xWx",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-21T00:53:52Z",
    "updated_at": "2021-08-21T00:53:52Z",
    "author_association": "MEMBER",
    "body": "#2533 is somewhat related to this.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/903026097/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/930894392",
    "html_url": "https://github.com/sigp/lighthouse/issues/2528#issuecomment-930894392",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2528",
    "id": 930894392,
    "node_id": "IC_kwDOCFeAzc43fFI4",
    "user": {
      "login": "macladson",
      "id": 58379419,
      "node_id": "MDQ6VXNlcjU4Mzc5NDE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58379419?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/macladson",
      "html_url": "https://github.com/macladson",
      "followers_url": "https://api.github.com/users/macladson/followers",
      "following_url": "https://api.github.com/users/macladson/following{/other_user}",
      "gists_url": "https://api.github.com/users/macladson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/macladson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/macladson/subscriptions",
      "organizations_url": "https://api.github.com/users/macladson/orgs",
      "repos_url": "https://api.github.com/users/macladson/repos",
      "events_url": "https://api.github.com/users/macladson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/macladson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-30T07:08:05Z",
    "updated_at": "2021-09-30T07:08:05Z",
    "author_association": "COLLABORATOR",
    "body": "Resolved in #2546 ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/930894392/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
