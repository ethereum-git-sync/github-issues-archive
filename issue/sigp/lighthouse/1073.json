{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/1073",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/1073/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/1073/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/1073/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/1073",
  "id": 608092259,
  "node_id": "MDU6SXNzdWU2MDgwOTIyNTk=",
  "number": 1073,
  "title": "Validator keypair handling",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1232620456,
      "node_id": "MDU6TGFiZWwxMjMyNjIwNDU2",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/RFC",
      "name": "RFC",
      "color": "4aaa19",
      "default": false,
      "description": "Request for comment"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-04-28T07:33:33Z",
  "updated_at": "2020-05-01T05:17:42Z",
  "closed_at": "2020-05-01T05:17:42Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "This issue is an RFC regarding how we handle validator keypairs.\r\n\r\n## Problem statement\r\n\r\nEth2 validators need to keep two keypairs (potentially the same):\r\n\r\n- _Voting keypair_: a \"hot\" keypair used for voting on attestations/blocks and exiting.\r\n- _Withdrawal keypair_: a \"cold\" keypair used for obtaining ETH after a validator has become withdrawable.\r\n\r\n## Definitions\r\n\r\n- Keypair: a BLS-381 keypair stored in an encrypted [EIP-2335](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2335.md) keystore.\r\n- `validator-dir`: a directory in the validator clients datadir that contains a director for each validator that is named after it's voting public key\r\n  - E.g., `~/.lighthouse/validators/0x01ab..`\r\n\r\n## Observations/Assumptions\r\n\r\n- Voting keypair will need to be loaded into memory by the validator client so it can performing its duties.\r\n- Withdrawal keypair is not used much, in fact it doesn't even have any purpose in phase 1 beyond being used in the initial deposit.\r\n-  Voting keypair is sensitive because it can trigger a slashing.\r\n- Withdrawal keypair is sensitive because it ultimately controls the fate of withdrawn ETH.\r\n\r\n## Desired\r\n\r\n- Support for common _or_ distinct keypairs for voting & withdrawal keypairs.\r\n  - Default flow for separate voting & withdrawal keypairs.\r\n- Support for distinct voting & withdrawal keypairs, but both encrypted with the same password\r\n  - Default flow for distinct passwords.\r\n- Easy to support multiple (10s, 100s) of validators in the same validator client.\r\n- Flow should be sensible when conducted via CLI or via the HTTP API (in the case of a GUI staking interface).\r\n\r\n## Suggested Flows\r\n\r\n### Flow: CLI key generation\r\n\r\n- User runs `lighthouse account validator new` with the following flags:\r\n  - `--specify-voting-password`: if present, the user is prompted to enter a password for the voting keypair. Otherwise it is generated randomly.\r\n  - `--generate-withdrawal-password` if present, user is _not_ prompted for a withdrawal password and it is generated randomly/\r\n  - other flags like `--count`, `--testnet-dir`, etc that aren't important to this example.\r\n\r\nThe user is then (maybe) prompted for the following password(s):\r\n\r\n- If `--generate-withdrawal-password` **is not** specified, they should enter it in via CLI prompt.\r\n- If `--specify-voting-password` **is** specified, they should enter it via CLI prompt.\r\n\r\nIn all scenarios, the encrypted keystore for the voting and withdrawal keypairs will be placed in the `validator-dir`.\r\n\r\nIn all scenarios, the password for the (hot) _voting keypair_ will placed in the `validator-dir`.\r\n\r\nThe password for the _withdrawal keypair_ will only be placed in the `validator-dir` if the `--generate-withdrawal-password` is supplied. Otherwise, we assume the user has backed it up elsewhere.\r\n\r\n### Flow: API key generation\r\n\r\nBasically the same as the CLI key generation, except we're going to need to pass the passwords along with the request.\r\n\r\nOpen question: do encrypt the passwords in the request or do we assume there's transport-level security (HTTPS)?\r\n\r\n### Flow: CLI validator client start\r\n\r\nSimply run `lighthouse vc` and then it will be able to load all the validators from `~/.lighthouse/validators` directory and decrypt the corresponding voting keystore using the adjacent password.\r\n\r\n### Flow: validator withdrawal\r\n\r\nWe don't really know how this will work since it's not included in phase 0.\r\n\r\nHowever, according to the previous flows the user has either (hopefully) backed it up or it has been placed inside the `validator-dir`.\r\n\r\n## Justifications\r\n\r\n### Why are we reading passwords from disk?\r\n\r\nI can see three options to get the voting keypair into the validator client:\r\n\r\n1. CLI flag: `lighthouse vc --password 1234`\r\n1. Env variable: `export VALIDATOR_PASSWORD=1234; lighthouse vc`\r\n1. Passwords as files: `lighthouse vc --password-dir ~/.lighthouse/passwords`\r\n\r\nI'm hesitant with (1) since it commonly ends up exposing passwords in bash history, etc. It's also pretty much unmanageable for large validator counts with distinct passwords.\r\n\r\n(2) is pretty standard, this is how AWS credentials are commonly handled. However, it doesn't scale so well for multiple validators either.\r\n\r\n(3) scales well with multiple validators and it also avoids exposing secrets to the shell. It's also how eth1 does it now.\r\n\r\n### Why are we putting the passwords inside the validator directory?\r\n\r\nI can see two places we can put the passwords:\r\n\r\n1. Inside the corresponding dir in the `~/.lighthouse/validators` directory (as proposed)\r\n1. Put all the passwords in one big folder and then ensure that the name of the password file maps to a validator voting key.\r\n\r\nIMO (1) will be easier for users since it uses a less complex password file name scheme. It also makes validator directories more portable.\r\n\r\n(2) does mean your passwords aren't right next to the keystore, but what does that really gain? If you can do `cat password.txt` you can probably also do `cat ../passwords/password.txt`.\r\n\r\n(1) is probably the easiest, however it means that your password is right next to the encrypted store. (2) means your passwords are in some other directory, however is that really worth anything?\r\n\r\n### Why even bother password-encrypting the voting keypair if you put the password right next to it?\r\n\r\nIt just seems more flexible to me. Perhaps you can use file permissions to allow some user/group to read your keystore to obtain the pubkey but restrict it from accessing the password to read the privkey?\r\n\r\n### Why is one flag --specify-... and the other --generate-..?\r\n\r\nThanks @pawanjay176 for raising this, its a good question.\r\n\r\nMy original thinking was that users were more likely to use a common withdrawal key and distinct voting keypairs. Perhaps this is an awkward, opinionated assumption; keen to hear thoughts.\r\n",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/1073/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/1073/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620515336",
    "html_url": "https://github.com/sigp/lighthouse/issues/1073#issuecomment-620515336",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1073",
    "id": 620515336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDUxNTMzNg==",
    "user": {
      "login": "CarlBeek",
      "id": 12530043,
      "node_id": "MDQ6VXNlcjEyNTMwMDQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12530043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarlBeek",
      "html_url": "https://github.com/CarlBeek",
      "followers_url": "https://api.github.com/users/CarlBeek/followers",
      "following_url": "https://api.github.com/users/CarlBeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarlBeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarlBeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarlBeek/subscriptions",
      "organizations_url": "https://api.github.com/users/CarlBeek/orgs",
      "repos_url": "https://api.github.com/users/CarlBeek/repos",
      "events_url": "https://api.github.com/users/CarlBeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarlBeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T10:18:11Z",
    "updated_at": "2020-04-28T10:18:11Z",
    "author_association": "NONE",
    "body": "### On Mnemonics\r\n\r\nIdeally a mnemonic serves as the core backup mechanism for validators. It is much easier for users to backup their keys via a mnemonic instead of via withdrawal keystore(s). Treatment of this is missing from this discussion.\r\n\r\n### On Withdrawal keys\r\n\r\nI think clients should avoid storing withdrawal credentials entirely. Reasoning:\r\n\r\n* Forces users to remember extra password(s)\r\n* Extra attack surface due to having additional keystores around (which are ancestors in the key-tree)\r\n* Additional engineering work for clients\r\n* Useless in Phase 0\r\n* In Phase 2, withdrawals may be to contracts/arbitrary verification functions (not BLS)\r\n* Potential to confuse users why they have extra keys\r\n* EF's deposit UI does not provide withdrawal keystores\r\n* Debates around whether to store 1 withdrawal key for all validators or 1 key per validator\r\n\r\n### Passwords on Disk\r\n\r\nYour proposal to store the passwords on disk inside the validator directory makes a lot of sense for the reasons you specify.\r\n\r\nStoring the passwords next to the keystores also makes sense outside of the direct context of clients. Portability between client instances, PCs, backups, etc is better when security can be increased by having passwords separate from keystores.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620515336/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620526230",
    "html_url": "https://github.com/sigp/lighthouse/issues/1073#issuecomment-620526230",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1073",
    "id": 620526230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDUyNjIzMA==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T10:38:27Z",
    "updated_at": "2020-04-28T10:38:27Z",
    "author_association": "MEMBER",
    "body": "Thanks @CarlBeek! I completely forgot about mnemonics when writing this :man_facepalming: \r\n\r\nDo you expect a separate mnemonic for voting and withdrawal keypair?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620526230/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620529708",
    "html_url": "https://github.com/sigp/lighthouse/issues/1073#issuecomment-620529708",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1073",
    "id": 620529708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDUyOTcwOA==",
    "user": {
      "login": "CarlBeek",
      "id": 12530043,
      "node_id": "MDQ6VXNlcjEyNTMwMDQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12530043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarlBeek",
      "html_url": "https://github.com/CarlBeek",
      "followers_url": "https://api.github.com/users/CarlBeek/followers",
      "following_url": "https://api.github.com/users/CarlBeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarlBeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarlBeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarlBeek/subscriptions",
      "organizations_url": "https://api.github.com/users/CarlBeek/orgs",
      "repos_url": "https://api.github.com/users/CarlBeek/repos",
      "events_url": "https://api.github.com/users/CarlBeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarlBeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T10:46:03Z",
    "updated_at": "2020-04-28T10:46:03Z",
    "author_association": "NONE",
    "body": "So the idea is that there is one mnemonic from which all of the keys are derived.\r\n\r\nFrom the mnemonic, a tree of keys is generated where all of the withdrawal and signing keys can be found. The way I defined it in [EIP #2334](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2334.md#eth2-specific-parameters) is that the `i`th withdrawal keys are at `m/12381/3600/i/0` and the corresponding signing keys are the `0`th child (`m/12381/3600/i/0/0`).",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620529708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620944978",
    "html_url": "https://github.com/sigp/lighthouse/issues/1073#issuecomment-620944978",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1073",
    "id": 620944978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDk0NDk3OA==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-29T01:48:29Z",
    "updated_at": "2020-04-29T01:48:29Z",
    "author_association": "MEMBER",
    "body": "I think I'm going to need to think though this and come up with something that's based around hierarchical generation from a mnemonic.\r\n\r\nPerhaps taking inspiration from @mcdee's very cool [ethdo](https://github.com/wealdtech/ethdo).\r\n\r\nThanks to @CarlBeek for your input and @protolambda for offline input.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620944978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
