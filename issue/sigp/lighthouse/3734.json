{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/3734",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/3734/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/3734/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/3734/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/3734",
  "id": 1453367896,
  "node_id": "I_kwDOCFeAzc5WoKJY",
  "number": 3734,
  "title": "Service attribute in logs pollutes datadog log ingestion/indexing",
  "user": {
    "login": "paymog",
    "id": 1986950,
    "node_id": "MDQ6VXNlcjE5ODY5NTA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paymog",
    "html_url": "https://github.com/paymog",
    "followers_url": "https://api.github.com/users/paymog/followers",
    "following_url": "https://api.github.com/users/paymog/following{/other_user}",
    "gists_url": "https://api.github.com/users/paymog/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paymog/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
    "organizations_url": "https://api.github.com/users/paymog/orgs",
    "repos_url": "https://api.github.com/users/paymog/repos",
    "events_url": "https://api.github.com/users/paymog/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paymog/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647286,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODY=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "7057ff",
      "default": true,
      "description": "Good for newcomers"
    },
    {
      "id": 2336802021,
      "node_id": "MDU6TGFiZWwyMzM2ODAyMDIx",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/UX-and-logs",
      "name": "UX-and-logs",
      "color": "DB9046",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2022-11-17T13:39:19Z",
  "updated_at": "2023-04-25T11:03:39Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nLighthouse outputs logs with a `service` field. For those of us monitoring lighthouse with datadog, this creates issues with how logs are categorized by datadog since `service` is a reserved field. Here's a sample log:\r\n\r\n```\r\n{\"msg\":\"Execution endpoint is not synced\",\"level\":\"WARN\",\"ts\":\"2022-11-16T11:12:41.10838561Z\",\"service\":\"deposit_contract_rpc\",\"action\":\"trying fallback\",\"last_seen_block_unix_timestamp\":1612458123,\"endpoint\":\"http://0.0.0.0:8551/, auth=true\"}\r\n```\r\n\r\nThis causes datadog to categorize the log as coming from a service called `deposit_contract_rpc` which is incorrect. Here's an example of that:\r\n\r\n<img width=\"849\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1986950/202460721-b602dedb-0702-4336-9df2-c73ec1e80c5b.png\">\r\n\r\n\r\n## Version\r\n\r\nI'm running the following docker image: sigp/lighthouse:v3.1.2\r\n\r\n## Present Behaviour\r\n\r\nLighthouse outputs logs with a field called `service`\r\n\r\n## Expected Behaviour\r\n\r\nIdeally this field would be renamed to `subservice` or something similar. Another possible solution is to expose an environment variable to determine what this field should be called.\r\n\r\n## Steps to resolve\r\n\r\nWe can set up log pipelines in datadog but that's a brittle solution.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/3734/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/3734/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1500986519",
    "html_url": "https://github.com/sigp/lighthouse/issues/3734#issuecomment-1500986519",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3734",
    "id": 1500986519,
    "node_id": "IC_kwDOCFeAzc5ZdzyX",
    "user": {
      "login": "muang0",
      "id": 28738612,
      "node_id": "MDQ6VXNlcjI4NzM4NjEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28738612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muang0",
      "html_url": "https://github.com/muang0",
      "followers_url": "https://api.github.com/users/muang0/followers",
      "following_url": "https://api.github.com/users/muang0/following{/other_user}",
      "gists_url": "https://api.github.com/users/muang0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muang0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muang0/subscriptions",
      "organizations_url": "https://api.github.com/users/muang0/orgs",
      "repos_url": "https://api.github.com/users/muang0/repos",
      "events_url": "https://api.github.com/users/muang0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muang0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-08T22:07:44Z",
    "updated_at": "2023-04-08T22:07:44Z",
    "author_association": "NONE",
    "body": "What's the exact pain point you're experiencing with this? You should be able to exclude `service` as a filtered field for log searches and monitor queries. If you did want to go the log pipeline route, it should only require one remapping rule.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1500986519/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1501738858",
    "html_url": "https://github.com/sigp/lighthouse/issues/3734#issuecomment-1501738858",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3734",
    "id": 1501738858,
    "node_id": "IC_kwDOCFeAzc5Zgrdq",
    "user": {
      "login": "paymog",
      "id": 1986950,
      "node_id": "MDQ6VXNlcjE5ODY5NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paymog",
      "html_url": "https://github.com/paymog",
      "followers_url": "https://api.github.com/users/paymog/followers",
      "following_url": "https://api.github.com/users/paymog/following{/other_user}",
      "gists_url": "https://api.github.com/users/paymog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paymog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
      "organizations_url": "https://api.github.com/users/paymog/orgs",
      "repos_url": "https://api.github.com/users/paymog/repos",
      "events_url": "https://api.github.com/users/paymog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paymog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-10T12:02:08Z",
    "updated_at": "2023-04-10T12:02:08Z",
    "author_association": "NONE",
    "body": "> What's the exact pain point you're experiencing with this? You should be able to exclude `service` as a filtered field for log searches and monitor queries. If you did want to go the log pipeline route, it should only require one remapping rule.\r\n\r\nhuh, maybe I just suck at datadog config. I tried to do a remapping and failed and then when I asked datadog support they said that since `service` is a reserved field there's no way to fix this without changing the underlying code. Maybe the person I datadog support rep I spoke to was incorrect?\r\n\r\nThe exact pain point is that logs emitted by lighthouse get all sorts of value for `service` when they should have just one value based on what I set using [unified service tagging](https://docs.datadoghq.com/getting_started/tagging/unified_service_tagging/?tab=kubernetes). Here's a specific example for a kubernetes deployment which ought to have a service value of `firehose-goerli-reader` but some of the logs have other values for `service` because that field is emitted by the lighthouse logs\r\n\r\n<img width=\"907\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1986950/230897903-b73fe1f2-c9b7-4e00-a923-fc3aab4c6ed9.png\">\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1501738858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1509938088",
    "html_url": "https://github.com/sigp/lighthouse/issues/3734#issuecomment-1509938088",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3734",
    "id": 1509938088,
    "node_id": "IC_kwDOCFeAzc5Z_9Oo",
    "user": {
      "login": "muang0",
      "id": 28738612,
      "node_id": "MDQ6VXNlcjI4NzM4NjEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28738612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muang0",
      "html_url": "https://github.com/muang0",
      "followers_url": "https://api.github.com/users/muang0/followers",
      "following_url": "https://api.github.com/users/muang0/following{/other_user}",
      "gists_url": "https://api.github.com/users/muang0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muang0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muang0/subscriptions",
      "organizations_url": "https://api.github.com/users/muang0/orgs",
      "repos_url": "https://api.github.com/users/muang0/repos",
      "events_url": "https://api.github.com/users/muang0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muang0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-15T19:32:33Z",
    "updated_at": "2023-04-15T19:32:33Z",
    "author_association": "NONE",
    "body": "Gotchu\n\nThis more than likely isn't the case, but wanted to verify there's not an unexpected [service remapper](https://docs.datadoghq.com/logs/log_configuration/processors/?tab=ui#service-remapper) in place, right? \n\nAlso, I noticed in your first screenshot, the 'service' field in the log was getting mapped as 'subservice'. I'm assuming that mapping is something you set up in your log processor as an attempted fix?\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1509938088/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1510287954",
    "html_url": "https://github.com/sigp/lighthouse/issues/3734#issuecomment-1510287954",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3734",
    "id": 1510287954,
    "node_id": "IC_kwDOCFeAzc5aBSpS",
    "user": {
      "login": "paymog",
      "id": 1986950,
      "node_id": "MDQ6VXNlcjE5ODY5NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paymog",
      "html_url": "https://github.com/paymog",
      "followers_url": "https://api.github.com/users/paymog/followers",
      "following_url": "https://api.github.com/users/paymog/following{/other_user}",
      "gists_url": "https://api.github.com/users/paymog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paymog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
      "organizations_url": "https://api.github.com/users/paymog/orgs",
      "repos_url": "https://api.github.com/users/paymog/repos",
      "events_url": "https://api.github.com/users/paymog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paymog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-16T10:46:39Z",
    "updated_at": "2023-04-16T10:46:39Z",
    "author_association": "NONE",
    "body": "> This more than likely isn't the case, but wanted to verify there's not an unexpected [service remapper](https://docs.datadoghq.com/logs/log_configuration/processors/?tab=ui#service-remapper) in place, right?\r\n\r\nNope, at least not that I can see in our configuration\r\n\r\n<img width=\"1281\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1986950/232300890-2d70e9f1-f138-481c-83c8-50597ec110ba.png\">\r\n\r\n> Also, I noticed in your first screenshot, the 'service' field in the log was getting mapped as 'subservice'. I'm assuming that mapping is something you set up in your log processor as an attempted fix?\r\n\r\nYup, precisely! See above screenshot for confirmation",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1510287954/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1516405060",
    "html_url": "https://github.com/sigp/lighthouse/issues/3734#issuecomment-1516405060",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3734",
    "id": 1516405060,
    "node_id": "IC_kwDOCFeAzc5aYoFE",
    "user": {
      "login": "muang0",
      "id": 28738612,
      "node_id": "MDQ6VXNlcjI4NzM4NjEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28738612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muang0",
      "html_url": "https://github.com/muang0",
      "followers_url": "https://api.github.com/users/muang0/followers",
      "following_url": "https://api.github.com/users/muang0/following{/other_user}",
      "gists_url": "https://api.github.com/users/muang0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muang0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muang0/subscriptions",
      "organizations_url": "https://api.github.com/users/muang0/orgs",
      "repos_url": "https://api.github.com/users/muang0/repos",
      "events_url": "https://api.github.com/users/muang0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muang0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-20T14:12:43Z",
    "updated_at": "2023-04-20T14:23:52Z",
    "author_association": "NONE",
    "body": "I see 🤔\r\n\r\nwould using a log parser/forwarder like fluentbit be an acceptable approach? I can't imagine fluentbit would auto-remap the service field like the DD agent is doing (IF that remapping is happening at the agent layer rather than in DD itself). I also checked the DD k8s agent configuration options, doesn't look like there's anything there we could use to disable this auto-remapping (we could also push datadog to expose this as a configuration toggle or even remove it completely, imho any remapping should disabled by default).\r\n\r\nhttps://docs.fluentbit.io/manual/pipeline/outputs/datadog",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1516405060/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1521598754",
    "html_url": "https://github.com/sigp/lighthouse/issues/3734#issuecomment-1521598754",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3734",
    "id": 1521598754,
    "node_id": "IC_kwDOCFeAzc5ascEi",
    "user": {
      "login": "paymog",
      "id": 1986950,
      "node_id": "MDQ6VXNlcjE5ODY5NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paymog",
      "html_url": "https://github.com/paymog",
      "followers_url": "https://api.github.com/users/paymog/followers",
      "following_url": "https://api.github.com/users/paymog/following{/other_user}",
      "gists_url": "https://api.github.com/users/paymog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paymog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
      "organizations_url": "https://api.github.com/users/paymog/orgs",
      "repos_url": "https://api.github.com/users/paymog/repos",
      "events_url": "https://api.github.com/users/paymog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paymog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-25T11:03:39Z",
    "updated_at": "2023-04-25T11:03:39Z",
    "author_association": "NONE",
    "body": "Adding more infra to our stack isn't ideal since it requires more maintenance on our side. I guess we could run fluentbit as a sidecar to the lighthouse container and do the remapping there instead of doing a much broader deployment of fluentbit?\r\n\r\nI do wish datadog exposed this as config but I suspect their infra has quite deep assumptions about the notion of a service. \r\n\r\nHow hard would it be to rename this log field in lighthouse? Is it a single place that adds the service log field or is that littered all over the codebase?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1521598754/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
