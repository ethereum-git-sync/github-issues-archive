{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/3695",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/3695/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/3695/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/3695/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/3695",
  "id": 1437637282,
  "node_id": "I_kwDOCFeAzc5VsJqi",
  "number": 3695,
  "title": "Lighthouse releases do not compile with latest Rust (1.65.0)",
  "user": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647281,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODE=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 4700293255,
      "node_id": "LA_kwDOCFeAzc8AAAABGCjIhw",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/v3.3.0",
      "name": "v3.3.0",
      "color": "8C80FA",
      "default": false,
      "description": "Minor release following v3.2.0"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-11-07T01:25:14Z",
  "updated_at": "2022-11-24T05:18:25Z",
  "closed_at": "2022-11-24T05:18:25Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nThe latest Lighthouse release v3.2.1 cannot be compiled with Rust 1.65.0.\r\n\r\nThis is due to an inconsequential yet annoying incompatibility rather than a serious issue. The incompatibility is fixed in `unstable` and our next releases will be compatible with Rust 1.65.0.\r\n\r\n## The Error\r\n\r\nThe compilation error indicating the incompatibility looks like this:\r\n\r\n```\r\nerror[E0275]: overflow evaluating the requirement `Vec<u8>: std::marker::Send`\r\n  |\r\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`http_api`)\r\n  = note: required because it appears within the type `std::result::Result<Vec<u8>, ()>`\r\n  = note: required because it appears within the type `warp::reply::Json`\r\n  = note: required because it appears within the type `(warp::reply::Json,)`\r\n  = note: required for `BoxedFilter<(warp::reply::Json,)>` to implement `warp::filter::FilterBase`\r\n  = note: required for `BoxedFilter<(warp::reply::Json,)>` to implement `warp::Filter`\r\n  = note: 121 redundant requirements hidden\r\n  = note: required for `warp::cors::internal::CorsFilter<warp::filter::map::Map<log::internal::WithLog<[closure@beacon_node/http_api/src/lib.rs:183:23: 183:34], log::internal::WithLog<[closure@beacon_node/http_api/src/lib.rs:150:23: 150:34], warp::filter::recover::Recover<warp::filter::or::Or<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<BoxedFilter<(warp::reply::Json,)>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::WithHeader<warp::http::Response<warp::hyper::Body>>,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::WithHeader<warp::http::Response<warp::hyper::Body>>,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(WithStatus<eth2::StatusCode>,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::http::Response<Vec<u8>>,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(sse::SseReply<sse::SseKeepAlive<futures::stream::SelectAll<tokio_stream::stream_ext::map::Map<BroadcastStream<EventKind<<T as BeaconChainTypes>::EthSpec>>, [closure@beacon_node/http_api/src/lib.rs:3071:79: 3071:84]>>>>,)>>>, warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@post::{closure#0}]>::{closure#0}]>, warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<BoxedFilter<(eth2::StatusCode,)>, BoxedFilter<(eth2::StatusCode,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>, BoxedFilter<(warp::reply::Json,)>>>>, fn(Rejection) -> impl futures::Future<Output = std::result::Result<impl Reply, Infallible>> {handle_rejection}>>>, [closure@beacon_node/http_api/src/lib.rs:3187:14: 3187:21]>>` to implement `warp::filter::FilterBase`\r\n  = note: required because it appears within the type `(std::net::SocketAddr, impl futures::Future<Output = ()>)`\r\n```\r\n\r\n## The Workaround\r\n\r\nFrom the `lighthouse` source directory, set an override for the 1.64 compiler then run `make` as normal:\r\n\r\n```\r\nrustup override set 1.64\r\nmake\r\n```",
  "closed_by": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/3695/reactions",
    "total_count": 7,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 3,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/3695/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1325969540",
    "html_url": "https://github.com/sigp/lighthouse/issues/3695#issuecomment-1325969540",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3695",
    "id": 1325969540,
    "node_id": "IC_kwDOCFeAzc5PCLCE",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-24T05:18:24Z",
    "updated_at": "2022-11-24T05:18:24Z",
    "author_association": "MEMBER",
    "body": "Fixed by v3.3.0",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1325969540/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
