{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/693",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/693/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/693/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/693/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/693",
  "id": 535450758,
  "node_id": "MDU6SXNzdWU1MzU0NTA3NTg=",
  "number": 693,
  "title": "Stop beacon node on unrecoverable DB issues",
  "user": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2019-12-10T02:22:36Z",
  "updated_at": "2020-03-02T03:11:23Z",
  "closed_at": "2020-03-02T03:11:23Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "@AgeManning suggested that we halt the node if we receive an unrecoverable database issue, to prevent the node lingering on the network in a bogus state. Currently this is possible if the database has become inconsistent due to a failure between storing a block and its state (see #692)\r\n\r\nWe should be able to classify errors into unrecoverable ones and gracefully halt the Beacon Node appropriately in these cases.\r\n\r\n",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/693/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/693/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/566267326",
    "html_url": "https://github.com/sigp/lighthouse/issues/693#issuecomment-566267326",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/693",
    "id": 566267326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjI2NzMyNg==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-16T22:10:20Z",
    "updated_at": "2019-12-16T22:10:43Z",
    "author_association": "MEMBER",
    "body": "I like this, I'm just not exactly sure how we define unrecoverable.\r\n\r\nWe _could_ say that if there's ever a missing beacon state that we're unrecoverable, but we risk the scenario where there's a bug in some old/fork state and but we're still good to produce blocks on the canonical chain. In such a case we'd shutdown prematurely from a validator point of view.\r\n\r\nI would be tempted to redefine this as \"stop syncing if it's enters an unrecoverable state\" as opposed to shutting down the whole client. Mainly because I'm worried about being heavy-handed and killing a client that may be able to continue on gossip alone. Also I'm not exactly sure how we can get the client to gracefully shut itself down. I'm sure it's possible, it's just not immediately obvious to me.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/566267326/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/566381614",
    "html_url": "https://github.com/sigp/lighthouse/issues/693#issuecomment-566381614",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/693",
    "id": 566381614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjM4MTYxNA==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-17T05:01:40Z",
    "updated_at": "2019-12-17T05:01:40Z",
    "author_association": "MEMBER",
    "body": "For graceful shutdown, I would imagine the main thread would hold a one-shot or an exit_signal channel. A major error in one of the threads would call this one-shot and the main thread would drop `beacon_chain`. \r\n\r\nIn regards to keeping a beacon chain alive. Perhaps this is desirable for mainnet when we have a proper peer management in place. For the current iteration, a faulty/corrupt db even without sync, would not propagate blocks/attestations (as it won't be able to verify them, in the worst case) and will degrade the gossip network (as the mesh only has 6 peers in it)\r\n\r\nOther peers could try and sync off the faulty node and reject the node when it doesn't return the correct results (this will damage the sync of the requesting peer, because sync still needs to handle malfunctioning peers). In this case, nodes will still go into a kick-rejoin loop, with repeating DB errors.\r\n\r\nGiven a sophisticated enough peer management, other peers would detect this kind of behaviour and reject/isolate the peer and ultimately it would be kicked from the network and be idle. \r\n\r\nI think for testnets, if there is a critical db error (or something we can define as such, i.e prevent a node from participating in RPC requests and/or block propagation) we should kill the client or at the very least, drop its network thread.\r\n\r\nI agree that for mainnet, with a sufficiently robust management of peers, we should leave the client limping along, although with loud and constant error logs to the user (as the peer will ultimately be isolated and essentially disconnected/turned off). \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/566381614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/566887523",
    "html_url": "https://github.com/sigp/lighthouse/issues/693#issuecomment-566887523",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/693",
    "id": 566887523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Njg4NzUyMw==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-18T06:29:15Z",
    "updated_at": "2019-12-18T06:29:15Z",
    "author_association": "MEMBER",
    "body": "> For graceful shutdown, I would imagine the main thread would hold a one-shot or an exit_signal channel. A major error in one of the threads would call this one-shot and the main thread would drop beacon_chain.\r\n\r\nThere's lots of different places that could find this error (anywhere that reads the db), so I think it's going to be easier said than done to ensure that the client always shuts down when the DB is inconsistent. We can't just put it into the store because the store has no idea about a state that _must_ exist (e.g., referenced by a block) vs a state that _can maybe_ exist (e.g., query from the API).\r\n\r\nIt seems to me that what we _really_ want from this is to just get faulty peers off the network until we can get the network to a state where it can tolerate such madness. Given that, it seems we should keep this fairly self-contained in the network service; we give it it the ability to kill itself and the smarts to figure out when it should do so.\r\n\r\nNotably, we have already addressed what is likely the cause of the inconsistent DB so I reckon we should wait and see if we keep getting the errors before we go about trying to handle them.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/566887523/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/566887938",
    "html_url": "https://github.com/sigp/lighthouse/issues/693#issuecomment-566887938",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/693",
    "id": 566887938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Njg4NzkzOA==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-18T06:30:54Z",
    "updated_at": "2019-12-18T06:30:54Z",
    "author_association": "MEMBER",
    "body": "I'm tempted to pull this off the `v0.1.1` milestone because I have no information to suggest that this is still a pressing issue after we fixed the \"storing blocks before states\" thing. Has anyone else seen this happen since we made that change?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/566887938/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/567278062",
    "html_url": "https://github.com/sigp/lighthouse/issues/693#issuecomment-567278062",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/693",
    "id": 567278062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzI3ODA2Mg==",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-19T00:47:02Z",
    "updated_at": "2019-12-19T00:47:02Z",
    "author_association": "MEMBER",
    "body": "Yeah, sounds good",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/567278062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/567278299",
    "html_url": "https://github.com/sigp/lighthouse/issues/693#issuecomment-567278299",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/693",
    "id": 567278299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzI3ODI5OQ==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-19T00:48:07Z",
    "updated_at": "2019-12-19T00:48:07Z",
    "author_association": "MEMBER",
    "body": "Pulling this off the `v0.1.1`, feel free to object @AgeManning ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/567278299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/593198788",
    "html_url": "https://github.com/sigp/lighthouse/issues/693#issuecomment-593198788",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/693",
    "id": 593198788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzE5ODc4OA==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-02T03:11:22Z",
    "updated_at": "2020-03-02T03:11:22Z",
    "author_association": "MEMBER",
    "body": "I'll close this one since we haven't seen this corruption issue since we started storing blocks before states. Feel free to reopen if you want :)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/593198788/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
