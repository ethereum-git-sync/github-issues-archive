{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/1914",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/1914/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/1914/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/1914/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/1914",
  "id": 743474099,
  "node_id": "MDU6SXNzdWU3NDM0NzQwOTk=",
  "number": 1914,
  "title": "Batch attestation slashability checking",
  "user": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1245875191,
      "node_id": "MDU6TGFiZWwxMjQ1ODc1MTkx",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/val-client",
      "name": "val-client",
      "color": "9cd6fc",
      "default": false,
      "description": "Relates to the validator client binary"
    },
    {
      "id": 1999784343,
      "node_id": "MDU6TGFiZWwxOTk5Nzg0MzQz",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/optimization",
      "name": "optimization",
      "color": "f9de40",
      "default": false,
      "description": "Something to make Lighthouse run more efficiently."
    },
    {
      "id": 2336798682,
      "node_id": "MDU6TGFiZWwyMzM2Nzk4Njgy",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/database",
      "name": "database",
      "color": "C01C9D",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2020-11-16T05:09:54Z",
  "updated_at": "2023-10-05T03:51:06Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nWith large numbers of validators and heavy disk congestion, we've observed the slashing protection database timing out with errors like this:\r\n\r\n```\r\n: Nov 16 00:50:31.056 INFO Successfully published attestation      type: unaggregated, slot: 39850, committee_index: 2, head_block: 0x3bd75ebc65de718b36911eaab7dad3a9ef7ca44c7ba03d32c7092195c43bcf43, service: attestation\r\n: Nov 16 00:50:32.838 CRIT Not signing slashable block             error: SQLPoolError(\"Error(None)\")\r\n: Nov 16 00:50:32.838 CRIT Error whilst producing block            message: Unable to sign block, service: block\r\n```\r\n\r\nThe default timeout is 5 seconds.\r\n\r\nPresently, we sign attestations one at a time and broadcast them, which means that each attester requires a new SQLite database transaction.\r\n\r\nhttps://github.com/sigp/lighthouse/blob/master/validator_client/src/attestation_service.rs#L332-L404\r\n\r\nTo alleviate the congestion slightly, we could switch to an algorithm like:\r\n\r\n1. Begin an SQLite transaction `txn`\r\n2. Check and sign all attestations as part of `txn`\r\n3. Commit `txn`\r\n4. Broadcast attestations\r\n\r\nThat way we preserve the property that an attestation is only broadcast if its signature has been persisted to disk (which is crash-safe). Broadcasting after each check but _before_ the transaction commits would violate this property.\r\n\r\n## Version\r\n\r\nLighthouse v0.3.4\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/1914/reactions",
    "total_count": 2,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/1914/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/734509820",
    "html_url": "https://github.com/sigp/lighthouse/issues/1914#issuecomment-734509820",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1914",
    "id": 734509820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNDUwOTgyMA==",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-26T23:50:43Z",
    "updated_at": "2020-11-26T23:50:43Z",
    "author_association": "MEMBER",
    "body": "Another potential advantage to batching like this: we might be able to harden SQLite against crashes by performing a disk `sync` after each batch. Although we would still be vulnerable to disks that don't respect `fsync` (section 3.1 here https://www.sqlite.org/howtocorrupt.html)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/734509820/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/917934011",
    "html_url": "https://github.com/sigp/lighthouse/issues/1914#issuecomment-917934011",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1914",
    "id": 917934011,
    "node_id": "IC_kwDOCFeAzc42to-7",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-13T07:53:44Z",
    "updated_at": "2021-09-13T07:53:44Z",
    "author_association": "MEMBER",
    "body": "I tried to implement this atop the Web3Signer PR (#2522) just now. I quickly ran into borrowck hell, as the sqlite library doesn't support sharing a `Transaction` across threads (it is not `Send`), see: https://github.com/rusqlite/rusqlite/issues/697.\r\n\r\nThis doesn't currently cause problems at compile time because each call to `sign_attestation` begins its own local transaction which commits before the async call to the background thread/remote signer is made. However, the database only supports 1 active transaction at a time (for safety), so this is a bottleneck, and will hamper the parallel requests to the remote signer, i.e. all the tasks will need to individually obtain the transaction lock and commit before they hit the remote :(\r\n\r\nSo far the best solution I can think of is quite spicy :hot_pepper:, and changes one of the fundamental invariants of the validator client. Rather than enforcing:\r\n\r\n> (1) Only _sign_ an attestation if it is safe to do so\r\n\r\nWe could enforce:\r\n\r\n> (2) Only _broadcast_ an attestation if it is safe to do so\r\n\r\nThis would let us make the slashability checks in one batch after all of the signatures had been created in parallel. No need to hold a lock on a `Transaction` across await calls, and no lock contention because we just lock and write once. For this to really work though we would need to refactor the attestation service. Currently it spawns one task per committee and index, with a broadcast happening in each task. I need to think more about whether refactoring it to sign _all_ attestations, store _all_ attestations, broadcast _all_ attestations is feasible, and whether it would introduce any other issues.\r\n\r\n----\r\n\r\nAlternatively, a more involved solution would be to modify the slashing protection database's locking paradigm so that it can lock on a per-validator basis. We should never be signing more than 1 attestation for the same validator in a single slot, so this would be ideal, but it seems that we wouldn't be able to (easily) achieve this with SQLite: https://softwareengineering.stackexchange.com/questions/340550/why-are-concurrent-writes-not-allowed-on-an-sqlite-database",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/917934011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/918414405",
    "html_url": "https://github.com/sigp/lighthouse/issues/1914#issuecomment-918414405",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1914",
    "id": 918414405,
    "node_id": "IC_kwDOCFeAzc42veRF",
    "user": {
      "login": "winksaville",
      "id": 1024284,
      "node_id": "MDQ6VXNlcjEwMjQyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winksaville",
      "html_url": "https://github.com/winksaville",
      "followers_url": "https://api.github.com/users/winksaville/followers",
      "following_url": "https://api.github.com/users/winksaville/following{/other_user}",
      "gists_url": "https://api.github.com/users/winksaville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winksaville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winksaville/subscriptions",
      "organizations_url": "https://api.github.com/users/winksaville/orgs",
      "repos_url": "https://api.github.com/users/winksaville/repos",
      "events_url": "https://api.github.com/users/winksaville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winksaville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-13T17:30:11Z",
    "updated_at": "2021-09-13T17:30:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Alternatively, a more involved solution would be to modify the slashing protection database's locking paradigm so that it can lock on a per-validator basis. We should never be signing more than 1 attestation for the same validator in a single slot, so this would be ideal, but it seems that we wouldn't be able to (easily) achieve this with SQLite:\r\n\r\nIt seems to me using another DB should be considered if SQLite doesn't support desirable features that lighthouse could/should support. For example, if it allowed easier implementation of #2557, which is important to me, I'd go in that direction.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/918414405/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/953115986",
    "html_url": "https://github.com/sigp/lighthouse/issues/1914#issuecomment-953115986",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1914",
    "id": 953115986,
    "node_id": "IC_kwDOCFeAzc44z2VS",
    "user": {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-27T16:51:15Z",
    "updated_at": "2021-10-27T16:51:15Z",
    "author_association": "COLLABORATOR",
    "body": "We've had a report in Discord about the `web3signer` endpoint taking more than 20 seconds to return a request. I'm thinking it has to do with lock contention on the slashing protection DB. The same user also reported that attesting validators have missed attestations while new validators are being created with the `web3signer` endpoint.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/953115986/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1747992542",
    "html_url": "https://github.com/sigp/lighthouse/issues/1914#issuecomment-1747992542",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1914",
    "id": 1747992542,
    "node_id": "IC_kwDOCFeAzc5oMD_e",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-05T03:51:06Z",
    "updated_at": "2023-10-05T03:51:06Z",
    "author_association": "MEMBER",
    "body": "Gonna start on this for Holesky's sake.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1747992542/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
