{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/4669",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/4669/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/4669/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/4669/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/4669",
  "id": 1867712228,
  "node_id": "I_kwDOCFeAzc5vUwbk",
  "number": 4669,
  "title": "Modularize beacon node backend",
  "user": {
    "login": "eserilev",
    "id": 7217615,
    "node_id": "MDQ6VXNlcjcyMTc2MTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7217615?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/eserilev",
    "html_url": "https://github.com/eserilev",
    "followers_url": "https://api.github.com/users/eserilev/followers",
    "following_url": "https://api.github.com/users/eserilev/following{/other_user}",
    "gists_url": "https://api.github.com/users/eserilev/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/eserilev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/eserilev/subscriptions",
    "organizations_url": "https://api.github.com/users/eserilev/orgs",
    "repos_url": "https://api.github.com/users/eserilev/repos",
    "events_url": "https://api.github.com/users/eserilev/events{/privacy}",
    "received_events_url": "https://api.github.com/users/eserilev/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-08-25T21:36:40Z",
  "updated_at": "2023-08-25T22:37:53Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nI am creating this issue to track the progress of my work surrounding the enabling of multiple database implementations for the beacon node. The initial goal is to modularize the beacon node backend and abstract over the current LevelDB implementation. We'll eventually want to add a second database implementation. Theres some work being done on #4424 to add several new database implementations to the slasher backend. We may be able to decide on a relevant database implementation to add to the beacon node based on the current work being done on the slasher.\r\n\r\nI plan to use the modularized slasher backend as a \"blueprint\" for my work on the beacon node. Similar to the slasher, I'll add a `interface.rs` file that allow us to abstract over different database implementations. That interface should encapsulate all the relevant database operations needed for the beacon node. Tentatively it will look something like this:\r\n\r\n``` rust\r\n\r\nimpl Environment {\r\n    pub fn new(config: &StoreConfig) {\r\n    }\r\n\r\n    pub fn create_database(&self) {\r\n    }\r\n\r\n    pub fn create_rw_transaction(&self) {\r\n    }\r\n}\r\n\r\nimpl RwTransaction {\r\n    pub fn put_with_options(&self) {\r\n    }\r\n\r\n    pub fn get(&self) {\r\n    }\r\n\r\n    pub fn delete(&self) { \r\n    }\r\n\r\n    pub fn do_atomically(&self, ops_batch: Vec<KeyValueStoreOp>) {\r\n    }\r\n\r\n    pub fn compact(&self) {\r\n    }\r\n\r\n    pub fn iter_column(&self) {\r\n    }\r\n}\r\n```\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/4669/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/4669/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1694004369",
    "html_url": "https://github.com/sigp/lighthouse/issues/4669#issuecomment-1694004369",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4669",
    "id": 1694004369,
    "node_id": "IC_kwDOCFeAzc5k-HSR",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T22:37:53Z",
    "updated_at": "2023-08-25T22:37:53Z",
    "author_association": "MEMBER",
    "body": "Sounds great @eserilev! There is an existing trait called `KeyValueStore` which does part of the abstract-ing already. The problem is that large parts of Lighthouse assume that the KV store is always LevelDB (in type aliases, etc)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1694004369/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
