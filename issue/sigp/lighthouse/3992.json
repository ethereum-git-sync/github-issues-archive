{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/3992",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/3992/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/3992/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/3992/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/3992",
  "id": 1587928771,
  "node_id": "I_kwDOCFeAzc5epd7D",
  "number": 3992,
  "title": "Decoupling the by root request",
  "user": {
    "login": "realbigsean",
    "id": 5160426,
    "node_id": "MDQ6VXNlcjUxNjA0MjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/realbigsean",
    "html_url": "https://github.com/realbigsean",
    "followers_url": "https://api.github.com/users/realbigsean/followers",
    "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
    "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
    "organizations_url": "https://api.github.com/users/realbigsean/orgs",
    "repos_url": "https://api.github.com/users/realbigsean/repos",
    "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
    "received_events_url": "https://api.github.com/users/realbigsean/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4615284981,
      "node_id": "LA_kwDOCFeAzc8AAAABExeo9Q",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/deneb",
      "name": "deneb",
      "color": "B7BBEC",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "realbigsean",
    "id": 5160426,
    "node_id": "MDQ6VXNlcjUxNjA0MjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/realbigsean",
    "html_url": "https://github.com/realbigsean",
    "followers_url": "https://api.github.com/users/realbigsean/followers",
    "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
    "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
    "organizations_url": "https://api.github.com/users/realbigsean/orgs",
    "repos_url": "https://api.github.com/users/realbigsean/repos",
    "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
    "received_events_url": "https://api.github.com/users/realbigsean/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "divagant-martian",
      "id": 26765164,
      "node_id": "MDQ6VXNlcjI2NzY1MTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/26765164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/divagant-martian",
      "html_url": "https://github.com/divagant-martian",
      "followers_url": "https://api.github.com/users/divagant-martian/followers",
      "following_url": "https://api.github.com/users/divagant-martian/following{/other_user}",
      "gists_url": "https://api.github.com/users/divagant-martian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/divagant-martian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/divagant-martian/subscriptions",
      "organizations_url": "https://api.github.com/users/divagant-martian/orgs",
      "repos_url": "https://api.github.com/users/divagant-martian/repos",
      "events_url": "https://api.github.com/users/divagant-martian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/divagant-martian/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-02-16T15:42:45Z",
  "updated_at": "2023-02-16T18:14:42Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "We need to update the `BlockAndBlobsSidecar` by root request we have implemented to a `BlobSidecar` by root request. When serving this request presently we check the early attester cache, now it seems like we should draw from whatever caching we have for blobs in gossip, this would let us serve blobs to peers even if we haven't been able to check data availability ourselves, this seems better for the network. \r\n\r\nthe `BlobSidecar` now includes a parent block root field, this would let us request for missing blob parents by root. This is interesting but may end up being tricky. I'm unsure how this ends up fitting into our current use of the `ResourceUnavailable` response. We're using it to denote the requrested blob was pre-4844. \r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/3992/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/3992/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1433512952",
    "html_url": "https://github.com/sigp/lighthouse/issues/3992#issuecomment-1433512952",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3992",
    "id": 1433512952,
    "node_id": "IC_kwDOCFeAzc5Vcav4",
    "user": {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-16T18:14:41Z",
    "updated_at": "2023-02-16T18:14:41Z",
    "author_association": "COLLABORATOR",
    "body": "Some notes from talking to @pawanjay176 and @divagant-martian \r\n\r\n- Peers will be able to serve a block or blob even if they don't necessarily have both (haven't verified data availability)\r\n- If there’s any attestation for a block by a peer, that peer *should* have block and blob\r\n- If a missing parent comes from gossip and there’s no peer claiming attestations for that block we will still want to keep it, serve it and ask other peers for it's corresponding blobs. Is it possible we want a threshold of peer requests for associated blobs before we assume the data is not available?\r\n- The cache that we are building for observed blobs + blocks in gossip should be checked in order to serve blocks and blobs via these RPC by roots request\r\n- That cache should also be considered when we are searching for chains via series of parent by root requests (do we have one of the referenced parents cached already) \r\n- when we are searching for a new chain via a series of by roots requests, we should probably just consider the chain of *block* parent roots, and not consider the blob's `block_parent_root` field. The blob's `block_parent_root` field should be considered in blob validation, but probably shouldn't trigger a parent blob by root request as this may become tough to reconcile with a chain of block parent root requests happening in parallel, especially because both block + block will be necessary for import",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1433512952/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
