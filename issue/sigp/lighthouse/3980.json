{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/3980",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/3980/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/3980/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/3980/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/3980",
  "id": 1586058117,
  "node_id": "I_kwDOCFeAzc5eiVOF",
  "number": 3980,
  "title": "`ProtocolId` re-work",
  "user": {
    "login": "realbigsean",
    "id": 5160426,
    "node_id": "MDQ6VXNlcjUxNjA0MjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/realbigsean",
    "html_url": "https://github.com/realbigsean",
    "followers_url": "https://api.github.com/users/realbigsean/followers",
    "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
    "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
    "organizations_url": "https://api.github.com/users/realbigsean/orgs",
    "repos_url": "https://api.github.com/users/realbigsean/repos",
    "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
    "received_events_url": "https://api.github.com/users/realbigsean/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647286,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODY=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "7057ff",
      "default": true,
      "description": "Good for newcomers"
    },
    {
      "id": 1690958121,
      "node_id": "MDU6TGFiZWwxNjkwOTU4MTIx",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/code-quality",
      "name": "code-quality",
      "color": "77a7ff",
      "default": false,
      "description": ""
    },
    {
      "id": 2336800125,
      "node_id": "MDU6TGFiZWwyMzM2ODAwMTI1",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/t%20Networking",
      "name": "t Networking",
      "color": "40E0D0",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2023-02-15T15:30:10Z",
  "updated_at": "2023-06-21T01:12:07Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\n[`ProtocolId`](https://github.com/sigp/lighthouse/blob/stable/beacon_node/lighthouse_network/src/rpc/protocol.rs#L267) contains a single `Version` enum for all protocols, this doesn't really make sense though because protocols are versioned independently. Places where this isn't great include https://github.com/sigp/lighthouse/pull/3972 where we want a complete match across protocol + version, but currently this means matching on protocol + version combinations that don't actually exist, e.g. `LightClientBootstrap` + `Version::V2`. Also `handle_v1_response` the `handle_v2_response` end up being very confusing to work with because some v1 protocols end up having functionality more similar to v2 protocols (e.g. fork-awareness in the blobs by range v1 protocol is almost the same as fork-awareness in blocks by range v2 protocol and very unlike the blocks by range v1 protocol) but have to be handled independently. \r\n\r\nOptions:\r\n- Add variants per-version to `Protocol`. Maximally strict but maybe makes the most sense. \r\n\r\n```\r\nenum Protocol {\r\n    MetadataV1,\r\n    MetadataV2,\r\n...\r\n}\r\n``` \r\n\r\n- Nest version enums inside each protocol. More verbose, but more flexible\r\n\r\n```\r\nenum Protocol {\r\n    Metadata(MetadataVersion),\r\n    BlocksByRange(BlocksByRangeVersion),\r\n...\r\n}\r\n``` \r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/3980/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/3980/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1431748432",
    "html_url": "https://github.com/sigp/lighthouse/issues/3980#issuecomment-1431748432",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3980",
    "id": 1431748432,
    "node_id": "IC_kwDOCFeAzc5VVr9Q",
    "user": {
      "login": "winksaville",
      "id": 1024284,
      "node_id": "MDQ6VXNlcjEwMjQyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winksaville",
      "html_url": "https://github.com/winksaville",
      "followers_url": "https://api.github.com/users/winksaville/followers",
      "following_url": "https://api.github.com/users/winksaville/following{/other_user}",
      "gists_url": "https://api.github.com/users/winksaville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winksaville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winksaville/subscriptions",
      "organizations_url": "https://api.github.com/users/winksaville/orgs",
      "repos_url": "https://api.github.com/users/winksaville/repos",
      "events_url": "https://api.github.com/users/winksaville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winksaville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-15T17:33:29Z",
    "updated_at": "2023-02-15T17:33:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there any interest in solving this on a wider scale. In particular I'd like to be able to uniquely identify items in an agnostic way. The minimum set of groupings I see are:\r\n\r\n - Messages\r\n - Protocols - a set of messages\r\n - ProtocolSets - a set of protocols\r\n\r\nEach would have a unique identifier and semver. Again, these should be defined in a \"language\" and \"platform\" agnostic manner so as to be maximally portable.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1431748432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1431940687",
    "html_url": "https://github.com/sigp/lighthouse/issues/3980#issuecomment-1431940687",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3980",
    "id": 1431940687,
    "node_id": "IC_kwDOCFeAzc5VWa5P",
    "user": {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-15T19:54:36Z",
    "updated_at": "2023-02-15T19:54:36Z",
    "author_association": "COLLABORATOR",
    "body": "@divagant-martian @AgeManning what do you guys think?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1431940687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1432035872",
    "html_url": "https://github.com/sigp/lighthouse/issues/3980#issuecomment-1432035872",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3980",
    "id": 1432035872,
    "node_id": "IC_kwDOCFeAzc5VWyIg",
    "user": {
      "login": "divagant-martian",
      "id": 26765164,
      "node_id": "MDQ6VXNlcjI2NzY1MTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/26765164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/divagant-martian",
      "html_url": "https://github.com/divagant-martian",
      "followers_url": "https://api.github.com/users/divagant-martian/followers",
      "following_url": "https://api.github.com/users/divagant-martian/following{/other_user}",
      "gists_url": "https://api.github.com/users/divagant-martian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/divagant-martian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/divagant-martian/subscriptions",
      "organizations_url": "https://api.github.com/users/divagant-martian/orgs",
      "repos_url": "https://api.github.com/users/divagant-martian/repos",
      "events_url": "https://api.github.com/users/divagant-martian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/divagant-martian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-15T21:09:01Z",
    "updated_at": "2023-02-15T21:09:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @realbigsean and @winksaville \r\n\r\n> Is there any interest in solving this on a wider scale. In particular I'd like to be able to uniquely identify items in an agnostic way. The minimum set of groupings I see are:\r\n> \r\n>     * Messages\r\n> \r\n>     * Protocols - a set of messages\r\n> \r\n>     * ProtocolSets - a set of protocols\r\n> \r\nThe `ProtocolId` is an internal model used for protocol negotiation with other peers, so this issue is more of a code quality one than an API one. In this sense I don't think we will be adding a higher hierarchy (ProtocolSets) \r\n\r\n> Each would have a unique identifier and semver. Again, these should be defined in a \"language\" and \"platform\" agnostic manner so as to be maximally portable.\r\n\r\nWe already model messages as the individual chunks received per protocol and don't support protocols depending on language or platform\r\n\r\n> [ProtocolId](https://github.com/sigp/lighthouse/blob/stable/beacon_node/lighthouse_network/src/rpc/protocol.rs#L267) contains a single Version enum for all protocols, this doesn't really make sense\r\n\r\nYeah agree, let's change this\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1432035872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1432185397",
    "html_url": "https://github.com/sigp/lighthouse/issues/3980#issuecomment-1432185397",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3980",
    "id": 1432185397,
    "node_id": "IC_kwDOCFeAzc5VXWo1",
    "user": {
      "login": "winksaville",
      "id": 1024284,
      "node_id": "MDQ6VXNlcjEwMjQyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winksaville",
      "html_url": "https://github.com/winksaville",
      "followers_url": "https://api.github.com/users/winksaville/followers",
      "following_url": "https://api.github.com/users/winksaville/following{/other_user}",
      "gists_url": "https://api.github.com/users/winksaville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winksaville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winksaville/subscriptions",
      "organizations_url": "https://api.github.com/users/winksaville/orgs",
      "repos_url": "https://api.github.com/users/winksaville/repos",
      "events_url": "https://api.github.com/users/winksaville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winksaville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-15T22:53:40Z",
    "updated_at": "2023-02-15T22:55:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I believe I understand there is one `Protocol` with a set of messages identified by:\r\n\r\nhttps://github.com/sigp/lighthouse/blob/38514c07f222ff7783834c48cf5c0a6ee7f346d0/beacon_node/lighthouse_network/src/rpc/protocol.rs#L141-L158\r\n\r\nI was thinking there were many protocols and many combinations of messages.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1432185397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1432294064",
    "html_url": "https://github.com/sigp/lighthouse/issues/3980#issuecomment-1432294064",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3980",
    "id": 1432294064,
    "node_id": "IC_kwDOCFeAzc5VXxKw",
    "user": {
      "login": "divagant-martian",
      "id": 26765164,
      "node_id": "MDQ6VXNlcjI2NzY1MTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/26765164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/divagant-martian",
      "html_url": "https://github.com/divagant-martian",
      "followers_url": "https://api.github.com/users/divagant-martian/followers",
      "following_url": "https://api.github.com/users/divagant-martian/following{/other_user}",
      "gists_url": "https://api.github.com/users/divagant-martian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/divagant-martian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/divagant-martian/subscriptions",
      "organizations_url": "https://api.github.com/users/divagant-martian/orgs",
      "repos_url": "https://api.github.com/users/divagant-martian/repos",
      "events_url": "https://api.github.com/users/divagant-martian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/divagant-martian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-16T00:41:10Z",
    "updated_at": "2023-02-16T00:43:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's the `Protocol` enum that we use to identify which of the different 7 protocols is in use. Messages are handled per request, you can check the `InboundRequest` and `OutboundRequest` to check what messages are sent in each. We might be referring to \"Protocol\" to different things",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1432294064/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1432369699",
    "html_url": "https://github.com/sigp/lighthouse/issues/3980#issuecomment-1432369699",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3980",
    "id": 1432369699,
    "node_id": "IC_kwDOCFeAzc5VYDoj",
    "user": {
      "login": "winksaville",
      "id": 1024284,
      "node_id": "MDQ6VXNlcjEwMjQyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winksaville",
      "html_url": "https://github.com/winksaville",
      "followers_url": "https://api.github.com/users/winksaville/followers",
      "following_url": "https://api.github.com/users/winksaville/following{/other_user}",
      "gists_url": "https://api.github.com/users/winksaville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winksaville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winksaville/subscriptions",
      "organizations_url": "https://api.github.com/users/winksaville/orgs",
      "repos_url": "https://api.github.com/users/winksaville/repos",
      "events_url": "https://api.github.com/users/winksaville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winksaville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-16T02:06:46Z",
    "updated_at": "2023-02-16T02:06:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "SG, txs.\r\n\r\nI think we have similar models in mind. Your `enum Protocol` I call a `ProtocolSet`. It's a set of `Protocol`s like \"Status\", \"Goodbye\", ... and then each of those protocols defines a small set of request/response messages. Because I envision many `ProtocolSet`s there will be a semver, but since you have only one `ProtocolSet`, I too agree semver is not necessary.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1432369699/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1432484057",
    "html_url": "https://github.com/sigp/lighthouse/issues/3980#issuecomment-1432484057",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3980",
    "id": 1432484057,
    "node_id": "IC_kwDOCFeAzc5VYfjZ",
    "user": {
      "login": "PatStiles",
      "id": 33334338,
      "node_id": "MDQ6VXNlcjMzMzM0MzM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/33334338?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PatStiles",
      "html_url": "https://github.com/PatStiles",
      "followers_url": "https://api.github.com/users/PatStiles/followers",
      "following_url": "https://api.github.com/users/PatStiles/following{/other_user}",
      "gists_url": "https://api.github.com/users/PatStiles/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PatStiles/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PatStiles/subscriptions",
      "organizations_url": "https://api.github.com/users/PatStiles/orgs",
      "repos_url": "https://api.github.com/users/PatStiles/repos",
      "events_url": "https://api.github.com/users/PatStiles/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PatStiles/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-16T04:06:48Z",
    "updated_at": "2023-02-16T04:06:48Z",
    "author_association": "NONE",
    "body": "I'm interested in taking this on if it hasn't already been taken by @winksaville ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1432484057/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1432491278",
    "html_url": "https://github.com/sigp/lighthouse/issues/3980#issuecomment-1432491278",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3980",
    "id": 1432491278,
    "node_id": "IC_kwDOCFeAzc5VYhUO",
    "user": {
      "login": "winksaville",
      "id": 1024284,
      "node_id": "MDQ6VXNlcjEwMjQyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winksaville",
      "html_url": "https://github.com/winksaville",
      "followers_url": "https://api.github.com/users/winksaville/followers",
      "following_url": "https://api.github.com/users/winksaville/following{/other_user}",
      "gists_url": "https://api.github.com/users/winksaville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winksaville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winksaville/subscriptions",
      "organizations_url": "https://api.github.com/users/winksaville/orgs",
      "repos_url": "https://api.github.com/users/winksaville/repos",
      "events_url": "https://api.github.com/users/winksaville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winksaville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-16T04:18:26Z",
    "updated_at": "2023-02-16T04:18:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "> \r\n\r\nI won't have time, please take it on!",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1432491278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1436125776",
    "html_url": "https://github.com/sigp/lighthouse/issues/3980#issuecomment-1436125776",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3980",
    "id": 1436125776,
    "node_id": "IC_kwDOCFeAzc5VmYpQ",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-19T23:13:39Z",
    "updated_at": "2023-02-19T23:13:39Z",
    "author_association": "MEMBER",
    "body": "My 2 cents on this topic is:\r\nLibp2p doesn't distinguish between any of the abstract values we've added (i.e protocol, version, encoding, string_prefix). It just cares about matching random bytes. So if our abstraction is causing pain, we should modify the abstraction a little. \r\n\r\nAt the moment, we only really use one encoding, we removed the support of plain ssz. So currently there is pain matching on just protocol and version, and I assume not for the encoding. \r\n\r\nWe build a list of supported protocols using the raw abstract types (`Protocol`, `Version`, `Encoding`) which we advertise to our peers. I think it might be nicer then, to create a new abstract enum called `SupportedProtocol` which contains all the variants that are supported (I know some can be turned off/on at runtime but the matching pattern will no longer have crazy variants as described in this issue). \r\n\r\nThen when building the supported protocols here: https://github.com/sigp/lighthouse/blob/38514c07f222ff7783834c48cf5c0a6ee7f346d0/beacon_node/lighthouse_network/src/rpc/protocol.rs#L223\r\n\r\nWe could use this enum, i..e `SupportedProtocol::currently_supported(info: RPCProtocol)` and we could implement something like:\r\n```rust\r\nimpl ProtocolId {\r\n   fn supported_protocol(&self) -> SupportedProtocol { .. }\r\n   }\r\n```\r\n\r\nSo when we are checking the match, we convert the raw ProtocolId into a `SupportedProtocol` and match on that to avoid any non-existent variant. ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1436125776/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1599921386",
    "html_url": "https://github.com/sigp/lighthouse/issues/3980#issuecomment-1599921386",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3980",
    "id": 1599921386,
    "node_id": "IC_kwDOCFeAzc5fXNzq",
    "user": {
      "login": "divagant-martian",
      "id": 26765164,
      "node_id": "MDQ6VXNlcjI2NzY1MTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/26765164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/divagant-martian",
      "html_url": "https://github.com/divagant-martian",
      "followers_url": "https://api.github.com/users/divagant-martian/followers",
      "following_url": "https://api.github.com/users/divagant-martian/following{/other_user}",
      "gists_url": "https://api.github.com/users/divagant-martian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/divagant-martian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/divagant-martian/subscriptions",
      "organizations_url": "https://api.github.com/users/divagant-martian/orgs",
      "repos_url": "https://api.github.com/users/divagant-martian/repos",
      "events_url": "https://api.github.com/users/divagant-martian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/divagant-martian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-21T01:12:07Z",
    "updated_at": "2023-06-21T01:12:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "This can be closed now",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1599921386/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
