{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/1618",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/1618/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/1618/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/1618/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/1618",
  "id": 701433235,
  "node_id": "MDU6SXNzdWU3MDE0MzMyMzU=",
  "number": 1618,
  "title": "Optimise validator keypair decryption",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1232620456,
      "node_id": "MDU6TGFiZWwxMjMyNjIwNDU2",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/RFC",
      "name": "RFC",
      "color": "4aaa19",
      "default": false,
      "description": "Request for comment"
    },
    {
      "id": 2336803064,
      "node_id": "MDU6TGFiZWwyMzM2ODAzMDY0",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/infra-ci",
      "name": "infra-ci",
      "color": "7365BC",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "blacktemplar",
    "id": 3133334,
    "node_id": "MDQ6VXNlcjMxMzMzMzQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3133334?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/blacktemplar",
    "html_url": "https://github.com/blacktemplar",
    "followers_url": "https://api.github.com/users/blacktemplar/followers",
    "following_url": "https://api.github.com/users/blacktemplar/following{/other_user}",
    "gists_url": "https://api.github.com/users/blacktemplar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/blacktemplar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/blacktemplar/subscriptions",
    "organizations_url": "https://api.github.com/users/blacktemplar/orgs",
    "repos_url": "https://api.github.com/users/blacktemplar/repos",
    "events_url": "https://api.github.com/users/blacktemplar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/blacktemplar/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "blacktemplar",
      "id": 3133334,
      "node_id": "MDQ6VXNlcjMxMzMzMzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3133334?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blacktemplar",
      "html_url": "https://github.com/blacktemplar",
      "followers_url": "https://api.github.com/users/blacktemplar/followers",
      "following_url": "https://api.github.com/users/blacktemplar/following{/other_user}",
      "gists_url": "https://api.github.com/users/blacktemplar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blacktemplar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blacktemplar/subscriptions",
      "organizations_url": "https://api.github.com/users/blacktemplar/orgs",
      "repos_url": "https://api.github.com/users/blacktemplar/repos",
      "events_url": "https://api.github.com/users/blacktemplar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blacktemplar/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2020-09-14T21:20:15Z",
  "updated_at": "2020-11-08T23:45:15Z",
  "closed_at": "2020-11-08T23:45:15Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Problem\r\n\r\nWith our current default params for EIP-2335 keystores, it can take a few seconds to obtain a BLS keypair from it's encrypted form:\r\n\r\nhttps://github.com/sigp/lighthouse/blob/e5fc6bab485fa54d7e518b325f4eb9201ba5c6a1/crypto/eth2_keystore/src/keystore.rs#L285-L296\r\n\r\nWhen running 10s, 100s or more validators, this represents a significant (minutes or more) delay when starting a validator client.\r\n\r\n## Potential Solution\r\n\r\nCreate an encrypted cache-file to store BLS keypairs that have been decrypted from an EIP-2335 wallet. I believe Prysm have already done something like this.\r\n\r\nThe cache can be a simple flat-file which is effectively a `Map<PublicKey, SecretKey>`.\r\n\r\n### Considerations\r\n\r\n#### Concurrency\r\n\r\nThe cache should never be accessed be separate processes, since this could lead to key duplication and slashing.\r\n\r\nI think it is sensible to add a lock file to prevent any concurrent reads/writes to the cache-file.\r\n\r\n#### Consistency\r\n\r\nIt will be important to ensure that for each entry in the cache there exists an EIP-2335 keystore *somewhere* with a corresponding public key. I think it would be safest to check this condition before any read or write.\r\n\r\n#### Encryption\r\n\r\nI haven't put any thought into a suitable encryption scheme for cache-file, yet. Perhaps @kirk-baird or @carlbeek have some suggestions? :)\r\n",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/1618/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/1618/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/692371967",
    "html_url": "https://github.com/sigp/lighthouse/issues/1618#issuecomment-692371967",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1618",
    "id": 692371967,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjM3MTk2Nw==",
    "user": {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-14T23:30:32Z",
    "updated_at": "2020-09-14T23:30:32Z",
    "author_association": "COLLABORATOR",
    "body": "I can pick this up",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/692371967/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/692411870",
    "html_url": "https://github.com/sigp/lighthouse/issues/1618#issuecomment-692411870",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1618",
    "id": 692411870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjQxMTg3MA==",
    "user": {
      "login": "kirk-baird",
      "id": 27878213,
      "node_id": "MDQ6VXNlcjI3ODc4MjEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/27878213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kirk-baird",
      "html_url": "https://github.com/kirk-baird",
      "followers_url": "https://api.github.com/users/kirk-baird/followers",
      "following_url": "https://api.github.com/users/kirk-baird/following{/other_user}",
      "gists_url": "https://api.github.com/users/kirk-baird/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kirk-baird/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kirk-baird/subscriptions",
      "organizations_url": "https://api.github.com/users/kirk-baird/orgs",
      "repos_url": "https://api.github.com/users/kirk-baird/repos",
      "events_url": "https://api.github.com/users/kirk-baird/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kirk-baird/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-15T01:49:58Z",
    "updated_at": "2020-09-15T01:55:27Z",
    "author_association": "MEMBER",
    "body": "If we take the encryption option:\r\n\r\nEncrypting a single file can easily be done to provide 128 bits of security. Using AES is the simplest and probably best choice. I'd say AES128-CBC would be the best mode for our situation. Though we could use AES128-ECB if we want to also have concurrency at the risk malicious users may be able to delete part of the cache file.\r\n\r\nWe would still need a key for AES, a password based kdf would be the easiest option. However, this is an additional password for the users to remember / lighthouse to manage. \r\nIt'd make sense to use scrypt as the kdf here since we can leverage the existing code.\r\n\r\nThe benefit here would that we just do a single scrypt execution, AES decrypt a file and then deserialisation of public key and secret key which should be pretty quick. It would also be good to store the public keys in uncompressed form which will save performing a square root for each key (which is slow).\r\n\r\nSo to summarise we could use AES128-CBC to encrypt the flattened `Map<publicKey, secretKey>` and use Scrypt to generate an AES key from a password.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/692411870/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/692962354",
    "html_url": "https://github.com/sigp/lighthouse/issues/1618#issuecomment-692962354",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1618",
    "id": 692962354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5Mjk2MjM1NA==",
    "user": {
      "login": "Karmastic",
      "id": 25420279,
      "node_id": "MDQ6VXNlcjI1NDIwMjc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/25420279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Karmastic",
      "html_url": "https://github.com/Karmastic",
      "followers_url": "https://api.github.com/users/Karmastic/followers",
      "following_url": "https://api.github.com/users/Karmastic/following{/other_user}",
      "gists_url": "https://api.github.com/users/Karmastic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Karmastic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Karmastic/subscriptions",
      "organizations_url": "https://api.github.com/users/Karmastic/orgs",
      "repos_url": "https://api.github.com/users/Karmastic/repos",
      "events_url": "https://api.github.com/users/Karmastic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Karmastic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-15T20:30:58Z",
    "updated_at": "2020-09-15T20:30:58Z",
    "author_association": "NONE",
    "body": "To clarify what Prysm does to address this: they have a single keystore file with all keys; importing a key adds it to this file.  They encrypt this single file on disk, so there's only one decryption operation done, to decrypt all keys.  It sounds equivalent to what you're discussing above.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/692962354/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/699926676",
    "html_url": "https://github.com/sigp/lighthouse/issues/1618#issuecomment-699926676",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1618",
    "id": 699926676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTkyNjY3Ng==",
    "user": {
      "login": "blacktemplar",
      "id": 3133334,
      "node_id": "MDQ6VXNlcjMxMzMzMzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3133334?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blacktemplar",
      "html_url": "https://github.com/blacktemplar",
      "followers_url": "https://api.github.com/users/blacktemplar/followers",
      "following_url": "https://api.github.com/users/blacktemplar/following{/other_user}",
      "gists_url": "https://api.github.com/users/blacktemplar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blacktemplar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blacktemplar/subscriptions",
      "organizations_url": "https://api.github.com/users/blacktemplar/orgs",
      "repos_url": "https://api.github.com/users/blacktemplar/repos",
      "events_url": "https://api.github.com/users/blacktemplar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blacktemplar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-28T10:37:37Z",
    "updated_at": "2020-09-28T10:37:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am currently working on this issue and had the following idea:\r\n\r\nWhat about using the concatenation of the passwords of all the stored secrets as password for the cache file? This would have the benefit of no new password for the user and if the user removes a password from the password dir, then one would need this password before one could encrypt the cache, so removing a password really ensures that no one without the password can access the secret (also not via the cache).",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/699926676/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/723684439",
    "html_url": "https://github.com/sigp/lighthouse/issues/1618#issuecomment-723684439",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1618",
    "id": 723684439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzY4NDQzOQ==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-08T23:45:15Z",
    "updated_at": "2020-11-08T23:45:15Z",
    "author_association": "MEMBER",
    "body": "Resolved in #1695",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/723684439/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
