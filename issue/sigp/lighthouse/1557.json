{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/1557",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/1557/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/1557/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/1557/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/1557",
  "id": 683496051,
  "node_id": "MDU6SXNzdWU2ODM0OTYwNTE=",
  "number": 1557,
  "title": "Head tracker has unsafe API wrt concurrency",
  "user": {
    "login": "adaszko",
    "id": 165678,
    "node_id": "MDQ6VXNlcjE2NTY3OA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/165678?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/adaszko",
    "html_url": "https://github.com/adaszko",
    "followers_url": "https://api.github.com/users/adaszko/followers",
    "following_url": "https://api.github.com/users/adaszko/following{/other_user}",
    "gists_url": "https://api.github.com/users/adaszko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/adaszko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/adaszko/subscriptions",
    "organizations_url": "https://api.github.com/users/adaszko/orgs",
    "repos_url": "https://api.github.com/users/adaszko/repos",
    "events_url": "https://api.github.com/users/adaszko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/adaszko/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647281,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODE=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 1690958121,
      "node_id": "MDU6TGFiZWwxNjkwOTU4MTIx",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/code-quality",
      "name": "code-quality",
      "color": "77a7ff",
      "default": false,
      "description": ""
    },
    {
      "id": 2034355093,
      "node_id": "MDU6TGFiZWwyMDM0MzU1MDkz",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/consensus",
      "name": "consensus",
      "color": "5e59bf",
      "default": false,
      "description": "An issue/PR that touches consensus code, such as state_processing or block verification."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-08-21T11:30:28Z",
  "updated_at": "2022-11-09T05:03:09Z",
  "closed_at": "2020-10-19T07:17:35Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nFunctions like `head`:\r\nhttps://github.com/sigp/lighthouse/blob/3cfd70d7fd290a9f293d6d869bade90aba6c95ae/beacon_node/beacon_chain/src/beacon_chain.rs#L475-L485\r\n\r\nor `heads`: https://github.com/sigp/lighthouse/blob/3cfd70d7fd290a9f293d6d869bade90aba6c95ae/beacon_node/beacon_chain/src/beacon_chain.rs#L509-L513\r\n\r\nor `head_info`: https://github.com/sigp/lighthouse/blob/3cfd70d7fd290a9f293d6d869bade90aba6c95ae/beacon_node/beacon_chain/src/beacon_chain.rs#L488-L506\r\n\r\nexpose an API that is unsafe wrt to concurrent modifications of the head tracker.\r\n## Version\r\n\r\n3cfd70d7fd290a9f293d6d869bade90aba6c95ae\r\n\r\n## Present Behaviour\r\n\r\nForks pruning deletes entries from the head tracker in a separate thread.  It may happen that a head gets removed from the head tracker while it is being used in a different thread.  That's a race condition.\r\n\r\n## Expected Behaviour\r\n\r\nFunctions like `head()`, `heads()`, `head_info()` should hold a read lock on the head tracker while its contents are being used, by returning lock guards instead of simply copying `Hash256`.\r\n\r\n## Steps to resolve\r\n\r\nReturn lock guards from the mentioned functions and fix all the resulting compilation errors.",
  "closed_by": {
    "login": "bors[bot]",
    "id": 26634292,
    "node_id": "MDM6Qm90MjY2MzQyOTI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bors%5Bbot%5D",
    "html_url": "https://github.com/apps/bors",
    "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/1557/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/1557/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/691854723",
    "html_url": "https://github.com/sigp/lighthouse/issues/1557#issuecomment-691854723",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1557",
    "id": 691854723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTg1NDcyMw==",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-14T06:51:53Z",
    "updated_at": "2020-09-14T06:51:53Z",
    "author_association": "MEMBER",
    "body": "## The Problem\r\n\r\nWhile investigating this I've realised that the concurrency issues go beyond just the head tracker, and that \"fixing the head tracker\" alone is not feasible or desirable.\r\n\r\nThe two main places where we update the head tracker are:\r\n\r\n1. When importing blocks (`import_block`) -- we add the new block to the head tracker and remove its parent (which may or may not be present, the parent could be an older non-head block):\r\n\r\nhttps://github.com/sigp/lighthouse/blob/c9596fcf0ee3a17bfb1df48e23ed6339c3791457/beacon_node/beacon_chain/src/beacon_chain.rs#L1586-L1587\r\n\r\n2. When pruning (`prune_abandoned_forks`) -- we delete all the heads that were pruned from the database.\r\n\r\nhttps://github.com/sigp/lighthouse/blob/c9596fcf0ee3a17bfb1df48e23ed6339c3791457/beacon_node/beacon_chain/src/migrate.rs#L243-L245\r\n\r\nThe issue Adam highlighted is definitely a problem, a beacon node could interleave updating a head (via block import) with pruning heads, which could lead to a head in the head tracker that has had its parent (and abandoned ancestors) pruned from the database. The real issue is actually concurrent database access, as the following possible execution shows:\r\n\r\n1. Start processing a block `B2` that has parent `B1`.\r\n2. Before processing of `B2` completes, pruning deletes `B1` and its associated data from the on-disk database.\r\n3. Processing of `B2` completes, which results in `B2` and its state being stored in the database.\r\n\r\nEnd result: the invariant that a block being in the DB implies its parent is also in the DB is violated (because `B2` is in the DB but `B1` isn't). The atomicity of the individual writes of (2) and (3) does nothing to help us, because the writes are only related semantically by this invariant, and don't actually conflict.\r\n\r\n## Using a Big Lock\r\n\r\nA simple solution would be to wrap block importing and pruning in one big lock, so that interleaving of their internal steps becomes impossible, something like:\r\n\r\n```\r\nimport_block:\r\n  - Lock A\r\n  - Write new block to database\r\n  - Write block to head tracker\r\n  - Unlock A\r\n\r\nprune_abandoned_heads:\r\n  - Lock A\r\n  - Delete abandoned heads from database\r\n  - Delete abandoned heads from the head tracker\r\n  - Unlock A\r\n```\r\n\r\nThis prevents consistency issues by making the execution trace above impossible. However, it is very coarse-grained and involves substantial risk: no blocks can be imported whilst pruning runs. If pruning runs for an extended period, the node could end up stalled, unable to import new blocks while it waits for pruning to complete.\r\n\r\nThe coarse-grained locking is the issue here, and prohibits perfectly safe executions like this:\r\n\r\n1. Start processing a block on the canonical chain (or some viable fork), `B`\r\n2. Start pruning the database, deleting lots of non-viable forks, but no data related to `B`\r\n3. Finish processing `B`, store it in the database\r\n\r\n## Other Solutions\r\n\r\nI thought a bit about a data-structure for head-tracking that allows each head to be locked/mutated/deleted individually, but this still doesn't solve the database consistency issue.\r\n\r\nThe database consistency issue might be best addressed by using a read-write transaction that fails if the data it read has been deleted by the time it commits. This sort of transaction isn't available in LevelDB, but might be in LMDB/RocksDB (which begs the question of #483). Another complication is caching, if the transaction doesn't need to read the parent block/state because it is cached, then it might not conflict \"correctly\" (but this is easy to work around I think). More research and thought is required, this comment is getting long enough... TBC\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/691854723/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/692028915",
    "html_url": "https://github.com/sigp/lighthouse/issues/1557#issuecomment-692028915",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1557",
    "id": 692028915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjAyODkxNQ==",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-14T12:47:09Z",
    "updated_at": "2020-09-14T12:47:09Z",
    "author_association": "MEMBER",
    "body": "It's worth noting that these concurrency issues are quite unlikely to occur in practice: usually if a head is about to be pruned, then block proposers have stopped producing blocks on top of it. But this isn't guaranteed, and the consequences (being unable to prune your DB and having to resync) are quite severe.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/692028915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/695853480",
    "html_url": "https://github.com/sigp/lighthouse/issues/1557#issuecomment-695853480",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1557",
    "id": 695853480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTg1MzQ4MA==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-20T23:59:00Z",
    "updated_at": "2020-09-20T23:59:00Z",
    "author_association": "MEMBER",
    "body": "Thanks for the analysis @michaelsproul. I agree that this is an important issue that must eventually be addressed, but I don't think we should aim for this to be completed prior to October sec reviews for the following reasons:\r\n\r\n- It's not trivial and we are tight on resources prior to audit.\r\n- It's an edge case that we're unlikely to see occur often.\r\n\r\nAs such, I'm going to change this to `A1`. ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/695853480/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/702577317",
    "html_url": "https://github.com/sigp/lighthouse/issues/1557#issuecomment-702577317",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1557",
    "id": 702577317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMjU3NzMxNw==",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-02T07:38:06Z",
    "updated_at": "2020-10-02T07:38:06Z",
    "author_association": "MEMBER",
    "body": "I think a manifestation of this bug was observed on Spadina, where it broke the pruning algorithm. I _think_ the flow is:\r\n\r\n1. Pruning starts, deletes blocks + states from the database (transaction commits)\r\n2. Process shuts down due to Ctrl-C\r\n3. Head-tracker is left un-updated\r\n4. Process restarts, head tracker contains deleted head\r\n5. All pruning runs fail because the pruned head blocks from the head tracker can no longer be found in the database",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/702577317/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
