{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/2031",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/2031/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/2031/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/2031/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/2031",
  "id": 754386541,
  "node_id": "MDU6SXNzdWU3NTQzODY1NDE=",
  "number": 2031,
  "title": "Remote graffiti provider",
  "user": {
    "login": "remyroy",
    "id": 303593,
    "node_id": "MDQ6VXNlcjMwMzU5Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/303593?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/remyroy",
    "html_url": "https://github.com/remyroy",
    "followers_url": "https://api.github.com/users/remyroy/followers",
    "following_url": "https://api.github.com/users/remyroy/following{/other_user}",
    "gists_url": "https://api.github.com/users/remyroy/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/remyroy/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/remyroy/subscriptions",
    "organizations_url": "https://api.github.com/users/remyroy/orgs",
    "repos_url": "https://api.github.com/users/remyroy/repos",
    "events_url": "https://api.github.com/users/remyroy/events{/privacy}",
    "received_events_url": "https://api.github.com/users/remyroy/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647284,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODQ=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/enhancement",
      "name": "enhancement",
      "color": "a2eeef",
      "default": true,
      "description": "New feature or request"
    },
    {
      "id": 2336802021,
      "node_id": "MDU6TGFiZWwyMzM2ODAyMDIx",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/UX-and-logs",
      "name": "UX-and-logs",
      "color": "DB9046",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2020-12-01T13:17:53Z",
  "updated_at": "2022-09-12T08:12:52Z",
  "closed_at": "2022-09-12T08:12:51Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nThe current graffiti value is a constant value that cannot be easily changed.\r\n\r\n## Version\r\n\r\nLighthouse v1.0.3-65dcdc36\r\nBLS Library: blst\r\n\r\n## Present Behaviour\r\n\r\nWhen starting your validators, you can only provide a static and constant value for your graffiti.\r\n\r\n## Expected Behaviour\r\n\r\nIt would be nice to provide a dynamic value for the graffiti with an external provider. Use cases for this include:\r\n\r\n* Easier painting on [the beaconcha.in graffiti wall](https://beaconcha.in/graffitiwall)\r\n* Playing the game number\r\n* Displaying multi-line ASCII images in collaboration with other validators\r\n* Pooling graffiti values together to achieve a common goal\r\n* Other *fun* and unexpected games and use cases\r\n\r\nIt would also be nice to be able to change the graffiti without having to restart the validator client.\r\n\r\n## Steps to resolve\r\n\r\nA simple solution would be to provide a path to a file instead of a constant value for the graffiti. When the validator client needs to propose a block, it would read that file and include the content as the graffiti. An external application would have to monitor when a graffiti is included and change the content of that file for the next value.\r\n\r\nOther solutions include client/server protocols, using an HTTP backend, other IPC solutions.\r\n\r\n## Related\r\n\r\nThis is somewhat related to #1944 .\r\n",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/2031/reactions",
    "total_count": 4,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 4,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/2031/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/736560715",
    "html_url": "https://github.com/sigp/lighthouse/issues/2031#issuecomment-736560715",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2031",
    "id": 736560715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjU2MDcxNQ==",
    "user": {
      "login": "remyroy",
      "id": 303593,
      "node_id": "MDQ6VXNlcjMwMzU5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/303593?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/remyroy",
      "html_url": "https://github.com/remyroy",
      "followers_url": "https://api.github.com/users/remyroy/followers",
      "following_url": "https://api.github.com/users/remyroy/following{/other_user}",
      "gists_url": "https://api.github.com/users/remyroy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/remyroy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/remyroy/subscriptions",
      "organizations_url": "https://api.github.com/users/remyroy/orgs",
      "repos_url": "https://api.github.com/users/remyroy/repos",
      "events_url": "https://api.github.com/users/remyroy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/remyroy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-01T13:45:22Z",
    "updated_at": "2020-12-01T13:45:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Lighthouse could have graffiti fallbacks:\r\n\r\n```\r\n--> Use remote graffiti provider\r\n  | (on fail/not available/empty/not defined)\r\n  v\r\n  --> Use constant per account graffiti\r\n    | (on fail/not available/empty/not defined)\r\n    v \r\n    --> Use globablly defined graffiti\r\n      | (on fail/not available/empty/not defined)\r\n      v\r\n      --> Use default value (Client name + version)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/736560715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/738306290",
    "html_url": "https://github.com/sigp/lighthouse/issues/2031#issuecomment-738306290",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2031",
    "id": 738306290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODMwNjI5MA==",
    "user": {
      "login": "remyroy",
      "id": 303593,
      "node_id": "MDQ6VXNlcjMwMzU5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/303593?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/remyroy",
      "html_url": "https://github.com/remyroy",
      "followers_url": "https://api.github.com/users/remyroy/followers",
      "following_url": "https://api.github.com/users/remyroy/following{/other_user}",
      "gists_url": "https://api.github.com/users/remyroy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/remyroy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/remyroy/subscriptions",
      "organizations_url": "https://api.github.com/users/remyroy/orgs",
      "repos_url": "https://api.github.com/users/remyroy/repos",
      "events_url": "https://api.github.com/users/remyroy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/remyroy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-03T21:05:26Z",
    "updated_at": "2020-12-03T21:05:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Things to consider:\r\n\r\n* A push vs pull solution. Since block creation is time sensitive, it might be more interesting for the validator client to offer some kind of REST API instead of connecting to an external provider. This could be part of the [Validation Client API](https://lighthouse-book.sigmaprime.io/api-vc.html).",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/738306290/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/754305616",
    "html_url": "https://github.com/sigp/lighthouse/issues/2031#issuecomment-754305616",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2031",
    "id": 754305616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDMwNTYxNg==",
    "user": {
      "login": "gak",
      "id": 31338,
      "node_id": "MDQ6VXNlcjMxMzM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/31338?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gak",
      "html_url": "https://github.com/gak",
      "followers_url": "https://api.github.com/users/gak/followers",
      "following_url": "https://api.github.com/users/gak/following{/other_user}",
      "gists_url": "https://api.github.com/users/gak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gak/subscriptions",
      "organizations_url": "https://api.github.com/users/gak/orgs",
      "repos_url": "https://api.github.com/users/gak/repos",
      "events_url": "https://api.github.com/users/gak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T00:21:24Z",
    "updated_at": "2021-01-05T00:21:24Z",
    "author_association": "NONE",
    "body": "I'm casually investigating this, and have a few questions. I can see that both the bn and vc can specify a graffiti, and there is a rule where the vc overrides the bn configured graffiti if specified.\r\n\r\nIf one was to implement this issue, should this logic live in the vc?\r\n\r\nDoes the bn actually need this functionality?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/754305616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/754357917",
    "html_url": "https://github.com/sigp/lighthouse/issues/2031#issuecomment-754357917",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2031",
    "id": 754357917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDM1NzkxNw==",
    "user": {
      "login": "remyroy",
      "id": 303593,
      "node_id": "MDQ6VXNlcjMwMzU5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/303593?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/remyroy",
      "html_url": "https://github.com/remyroy",
      "followers_url": "https://api.github.com/users/remyroy/followers",
      "following_url": "https://api.github.com/users/remyroy/following{/other_user}",
      "gists_url": "https://api.github.com/users/remyroy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/remyroy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/remyroy/subscriptions",
      "organizations_url": "https://api.github.com/users/remyroy/orgs",
      "repos_url": "https://api.github.com/users/remyroy/repos",
      "events_url": "https://api.github.com/users/remyroy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/remyroy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T03:02:53Z",
    "updated_at": "2021-01-05T03:02:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I believe the vc should ultimately be deciding the value of the grafiti. I'm not sure if it is still needed in the bn. Someone might want to run the bn alone just as a health benefit or for an explorer. In a way, if you want better role seperation, bn should not know about any grafiti value.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/754357917/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/754375353",
    "html_url": "https://github.com/sigp/lighthouse/issues/2031#issuecomment-754375353",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2031",
    "id": 754375353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDM3NTM1Mw==",
    "user": {
      "login": "gak",
      "id": 31338,
      "node_id": "MDQ6VXNlcjMxMzM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/31338?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gak",
      "html_url": "https://github.com/gak",
      "followers_url": "https://api.github.com/users/gak/followers",
      "following_url": "https://api.github.com/users/gak/following{/other_user}",
      "gists_url": "https://api.github.com/users/gak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gak/subscriptions",
      "organizations_url": "https://api.github.com/users/gak/orgs",
      "repos_url": "https://api.github.com/users/gak/repos",
      "events_url": "https://api.github.com/users/gak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T03:54:20Z",
    "updated_at": "2021-01-05T03:54:20Z",
    "author_association": "NONE",
    "body": "Related PR https://github.com/sigp/lighthouse/pull/2044 for graffiti per validator in `validator_definitions.yml`.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/754375353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/754456102",
    "html_url": "https://github.com/sigp/lighthouse/issues/2031#issuecomment-754456102",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2031",
    "id": 754456102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDQ1NjEwMg==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T07:25:13Z",
    "updated_at": "2021-01-05T07:25:13Z",
    "author_association": "MEMBER",
    "body": "It seems this feature is getting a bit of attention. \r\n\r\nI believe our current plan was to get the VC to read from a file before block production.\r\n\r\nIt might make sense to just add an endpoint to the VC HTTP API. However this API is restricted and should only be used locally for security reasons, so will limit its accessibility.\r\n\r\nThe VC is ultimately deciding the value of the graffiti (this is why it overrides any BN settings). The reason we had it in the BN is that by default it prints `Lighthouse` and the current BN version (which is very handy for debugging and identifying issues if things go wrong). We could shift the default behaviour to the VC, however the VC version is mostly irrelevant when debugging issues on the network and we really want to know the version of the BN (as it contains practically all the logic of the client). \r\n\r\nAs it stands, having the default functionality to print the BN version in the BN doesn't really cause any harm (maybe a little bit of confusion) but it does help us identify and solve issues. There are flags to disable it and any graffiti set in a validator will override it. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/754456102/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/754456895",
    "html_url": "https://github.com/sigp/lighthouse/issues/2031#issuecomment-754456895",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2031",
    "id": 754456895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDQ1Njg5NQ==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T07:26:38Z",
    "updated_at": "2021-01-05T07:26:38Z",
    "author_association": "MEMBER",
    "body": "#2074 is the relevant issue to track for this",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/754456895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1243371374",
    "html_url": "https://github.com/sigp/lighthouse/issues/2031#issuecomment-1243371374",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2031",
    "id": 1243371374,
    "node_id": "IC_kwDOCFeAzc5KHFdu",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-12T08:12:51Z",
    "updated_at": "2022-09-12T08:12:51Z",
    "author_association": "MEMBER",
    "body": "I'm going to close this once since it hasn't had much interest for quite some time. Free free to re-open if you really desire this feature.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1243371374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
