{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/2731",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/2731/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/2731/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/2731/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/2731",
  "id": 1029826860,
  "node_id": "I_kwDOCFeAzc49Yeks",
  "number": 2731,
  "title": "Downloading historical blocks from a friendly peer",
  "user": {
    "login": "paulmillr",
    "id": 574696,
    "node_id": "MDQ6VXNlcjU3NDY5Ng==",
    "avatar_url": "https://avatars.githubusercontent.com/u/574696?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulmillr",
    "html_url": "https://github.com/paulmillr",
    "followers_url": "https://api.github.com/users/paulmillr/followers",
    "following_url": "https://api.github.com/users/paulmillr/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulmillr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulmillr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulmillr/subscriptions",
    "organizations_url": "https://api.github.com/users/paulmillr/orgs",
    "repos_url": "https://api.github.com/users/paulmillr/repos",
    "events_url": "https://api.github.com/users/paulmillr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulmillr/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2021-10-19T03:47:48Z",
  "updated_at": "2021-10-27T06:43:18Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\n`Downloading historical blocks` takes some time.\r\n\r\nImagine running lighthouse node and starting second node from scratch. You want to sync it from the network. It would be great if you could sync it from your first node.\r\n\r\nThe suggestion here is to add something like a config flag, or a cli flag, or whatever, on both nodes to mark the node X as friendly. If they both mark each other, lighthouse can prioritize the node over others and download the data quickly. DoS vector can be mitigated by using whitelists.\r\n\r\n## Version\r\n\r\n2.0.0\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/2731/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/2731/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/952411237",
    "html_url": "https://github.com/sigp/lighthouse/issues/2731#issuecomment-952411237",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2731",
    "id": 952411237,
    "node_id": "IC_kwDOCFeAzc44xKRl",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-26T23:37:09Z",
    "updated_at": "2021-10-26T23:37:34Z",
    "author_association": "MEMBER",
    "body": "I'm not discounting this idea, I'd just like to point out that completing the `Downloading historical blocks` is not required for staking or any tip-of-the-chain queries.\r\n\r\nThe only reasons we download historical blocks are:\r\n\r\n1. To serve them to other syncing peers. (This is the primary reason)\r\n2. So users can access these blocks via the API, if they wish.\r\n\r\nAssuming the user doesn't want to query old blocks via the API, there's really no need to for them wait for this process to complete.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/952411237/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/952547579",
    "html_url": "https://github.com/sigp/lighthouse/issues/2731#issuecomment-952547579",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2731",
    "id": 952547579,
    "node_id": "IC_kwDOCFeAzc44xrj7",
    "user": {
      "login": "paulmillr",
      "id": 574696,
      "node_id": "MDQ6VXNlcjU3NDY5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/574696?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulmillr",
      "html_url": "https://github.com/paulmillr",
      "followers_url": "https://api.github.com/users/paulmillr/followers",
      "following_url": "https://api.github.com/users/paulmillr/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulmillr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulmillr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulmillr/subscriptions",
      "organizations_url": "https://api.github.com/users/paulmillr/orgs",
      "repos_url": "https://api.github.com/users/paulmillr/repos",
      "events_url": "https://api.github.com/users/paulmillr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulmillr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-27T05:19:21Z",
    "updated_at": "2021-10-27T05:19:21Z",
    "author_association": "NONE",
    "body": "I understand, but this \n\n> To serve them to other syncing peers\n\nContributes to healthy network. Just need to think of an elegant way to do this, I guess!",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/952547579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/952579499",
    "html_url": "https://github.com/sigp/lighthouse/issues/2731#issuecomment-952579499",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2731",
    "id": 952579499,
    "node_id": "IC_kwDOCFeAzc44xzWr",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-27T06:21:48Z",
    "updated_at": "2021-10-27T06:21:48Z",
    "author_association": "MEMBER",
    "body": "We already have a `--trusted-peers` flag, but this just means we dont downscore the peer. \r\n\r\nAt the moment, we are downloading all the way back to genesis, however in the future we won't be downloading the whole chain backwards, just a moving window. This will make this time bounded (and should be a reasonable bound). \r\n\r\nThere are also RPC concurrency limits likely to be introduced into the spec, which limits concurrent requests to a single peer. Our downloader spreads these requests across peers to get best performance without over-burdening a single peer. If these spec changes get introduced we would still be limited to doing a single request per peer. I think it would be alright and a simple modification if we prioritised trusted peers when downloading blocks, although for user's not wanting this we could inadvertently overburden a trusted peer (such that if they don't trust us, we could get penalized for over-requesting). \r\n\r\nI'll reference any modification to this issue so you can track any changes\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/952579499/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/952589913",
    "html_url": "https://github.com/sigp/lighthouse/issues/2731#issuecomment-952589913",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2731",
    "id": 952589913,
    "node_id": "IC_kwDOCFeAzc44x15Z",
    "user": {
      "login": "paulmillr",
      "id": 574696,
      "node_id": "MDQ6VXNlcjU3NDY5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/574696?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulmillr",
      "html_url": "https://github.com/paulmillr",
      "followers_url": "https://api.github.com/users/paulmillr/followers",
      "following_url": "https://api.github.com/users/paulmillr/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulmillr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulmillr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulmillr/subscriptions",
      "organizations_url": "https://api.github.com/users/paulmillr/orgs",
      "repos_url": "https://api.github.com/users/paulmillr/repos",
      "events_url": "https://api.github.com/users/paulmillr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulmillr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-27T06:43:12Z",
    "updated_at": "2021-10-27T06:43:18Z",
    "author_association": "NONE",
    "body": "Thanks, that sounds good.\r\n\r\nJust want a fast way to get as many nodes live and fully participating as possible",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/952589913/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
