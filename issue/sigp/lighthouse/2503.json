{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/2503",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/2503/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/2503/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/2503/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/2503",
  "id": 963543837,
  "node_id": "MDU6SXNzdWU5NjM1NDM4Mzc=",
  "number": 2503,
  "title": "Produce attestations after new head block",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647284,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODQ=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/enhancement",
      "name": "enhancement",
      "color": "a2eeef",
      "default": true,
      "description": "New feature or request"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "realbigsean",
    "id": 5160426,
    "node_id": "MDQ6VXNlcjUxNjA0MjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/realbigsean",
    "html_url": "https://github.com/realbigsean",
    "followers_url": "https://api.github.com/users/realbigsean/followers",
    "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
    "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
    "organizations_url": "https://api.github.com/users/realbigsean/orgs",
    "repos_url": "https://api.github.com/users/realbigsean/repos",
    "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
    "received_events_url": "https://api.github.com/users/realbigsean/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2021-08-09T00:05:06Z",
  "updated_at": "2022-10-21T02:39:58Z",
  "closed_at": "2022-10-21T02:39:57Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\n[Attesting]: https://github.com/ethereum/eth2.0-specs/blob/v1.0.1/specs/phase0/validator.md#attesting\r\n[`tokio::select!`]: https://docs.rs/tokio/1.9.0/tokio/macro.select.html\r\n\r\nPresently, Lighthouse doesn't exactly follow the [Attesting] section of the honest validator guide. Specifically, we are slack in this section:\r\n\r\n> A validator should create and broadcast the attestation to the associated attestation subnet when either (a) the validator has received a valid block from the expected block proposer for the assigned slot or (b) one-third of the slot has transpired (SECONDS_PER_SLOT / 3 seconds after the start of slot) -- whichever comes first.\r\n\r\nWe always wait for condition (b) and never check for condition (a). I think we should start checking for (a) in the dual interests of consistently following the spec and also because getting our attestations out early *seems* like it will result in better attestation inclusion stats.\r\n\r\nFor the record, we didn't implement this behaviour initially for the following reasons:\r\n\r\n- Lack of streaming events (resolved by SSE events in the standard API)\r\n- Lack of support for queuing attestations for unknown blocks (see #635)\r\n\r\nThese two points have been resolved and are no longer obstacles.\r\n\r\n## Steps to Resolve\r\n\r\nPresently, attestation production tasks in the VC are triggered after waiting until 1/3rd of the way through a slot:\r\n\r\nhttps://github.com/sigp/lighthouse/blob/3b600acdc5bf9726367c18277a22486573b8b457/validator_client/src/attestation_service.rs#L142-L167\r\n\r\nI propose we instead trigger `AttestationService::spawn_attestation_tasks` when *either* of these two conditions are met:\r\n\r\n- It is 1/3rd through the slot (current behaviour).\r\n- We have received a `/eth/v1/events` `head` SSE event where `data.slot == wall_clock_slot`.\r\n\r\nThis *\"whichever comes first\"* logic is well suited for [`tokio::select!`].\r\n\r\n I haven't looked deeply, but I *think* this should be a pretty straight-forward change which has little effect on the downstream unagg. and aggregate creation logic.\r\n \r\n### Complication: Fallbacks\r\n\r\nConsider the following setup:\r\n\r\n1. A VC which has two BNs (i.e., a primary and one fallback)\r\n1. An implementation where the `/eth/v1/events` subscriptions are created at startup and only re-established if there's a HTTP failure.\r\n\r\nNow, imagine that during startup the primary node is unavailable and we happen to subscribe to the fallback. Then, the primary node becomes available.\r\n\r\nFrom this point, we'd now be following the events of the backup whilst attesting with the primary. If the backup gets a block before the primary, then we'll end up creating premature attestations.\r\n\r\nOne solution might be to create a new subscription at the start of each slot. However, this might not interact so well with  `start_fallback_updater_service`. There might be edge cases there where we subscribe to the fallback, then the fallback-updater-service registers the primary as online, then we use it to create attestations.\r\n\r\nAnother solution might be to check the head before we create an attestation (only if that attestation was triggered from a head event). If, during that pre-attestation check, the head is inconsistent, wait until the typical 1/3rd through the slot and then attest. This is a bit more cumbersome but feels more consistent.\r\n\r\nFurther investigation will be required, I'm not yet convinced of the best solution.",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/2503/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/2503/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/894878208",
    "html_url": "https://github.com/sigp/lighthouse/issues/2503#issuecomment-894878208",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2503",
    "id": 894878208,
    "node_id": "IC_kwDOCFeAzc41VsIA",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-09T00:05:44Z",
    "updated_at": "2021-08-09T00:05:44Z",
    "author_association": "MEMBER",
    "body": "Perhaps this would be interesting for @realbigsean?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/894878208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/894889675",
    "html_url": "https://github.com/sigp/lighthouse/issues/2503#issuecomment-894889675",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2503",
    "id": 894889675,
    "node_id": "IC_kwDOCFeAzc41Vu7L",
    "user": {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-09T00:56:54Z",
    "updated_at": "2021-08-09T00:56:54Z",
    "author_association": "COLLABORATOR",
    "body": "Interested!",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/894889675/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/895316496",
    "html_url": "https://github.com/sigp/lighthouse/issues/2503#issuecomment-895316496",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2503",
    "id": 895316496,
    "node_id": "IC_kwDOCFeAzc41XXIQ",
    "user": {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-09T15:23:17Z",
    "updated_at": "2021-08-09T15:23:17Z",
    "author_association": "COLLABORATOR",
    "body": "> One solution might be to create a new subscription at the start of each slot. However, this might not interact so well with start_fallback_updater_service. There might be edge cases there where we subscribe to the fallback, then the fallback-updater-service registers the primary as online, then we use it to create attestations.\r\n\r\nCould we add to the fallback service, some idea of a \"primary candidate\" which is the candidate we are going to try first on the next request? Any request failure could update this.  We could maintain/re-establish the event subscription to this node. Might be a way to minimize the odds of having an inconsistency.\r\n\r\n> Another solution might be to check the head before we create an attestation (only if that attestation was triggered from a head event). If, during that pre-attestation check, the head is inconsistent, wait until the typical 1/3rd through the slot and then attest. This is a bit more cumbersome but feels more consistent.\r\n\r\nI generally like this idea better because even though it's a bit clunkier, I think it could perform better (at the very least seems like it couldn't cause a performance regression) and might actually be simpler to implement because we wouldn't be bogged down by tougher edge cases.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/895316496/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/924060455",
    "html_url": "https://github.com/sigp/lighthouse/issues/2503#issuecomment-924060455",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2503",
    "id": 924060455,
    "node_id": "IC_kwDOCFeAzc43FAsn",
    "user": {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-21T14:45:55Z",
    "updated_at": "2021-09-21T14:45:55Z",
    "author_association": "COLLABORATOR",
    "body": "A Discord user brought up how this could impact certain setups. If someone has load-balancing for validator client requests across beacon nodes that circumvents the `--beacon-nodes` flag, our attempts at mitigating regressions won't have an impact, so I think we will always need a flag to either enable or disable this feature.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/924060455/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1286383094",
    "html_url": "https://github.com/sigp/lighthouse/issues/2503#issuecomment-1286383094",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2503",
    "id": 1286383094,
    "node_id": "IC_kwDOCFeAzc5MrKX2",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-21T02:39:57Z",
    "updated_at": "2022-10-21T02:39:57Z",
    "author_association": "MEMBER",
    "body": "I'm going to close this since I don't see us implementing it anytime soon.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1286383094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
