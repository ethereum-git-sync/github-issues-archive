{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/4904",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/4904/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/4904/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/4904/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/4904",
  "id": 1976940470,
  "node_id": "I_kwDOCFeAzc511be2",
  "number": 4904,
  "title": "Getting `404 not found` errors for missed blocks instead of a specific missed error code",
  "user": {
    "login": "wangwzhou",
    "id": 118584093,
    "node_id": "U_kgDOBxFzHQ",
    "avatar_url": "https://avatars.githubusercontent.com/u/118584093?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wangwzhou",
    "html_url": "https://github.com/wangwzhou",
    "followers_url": "https://api.github.com/users/wangwzhou/followers",
    "following_url": "https://api.github.com/users/wangwzhou/following{/other_user}",
    "gists_url": "https://api.github.com/users/wangwzhou/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wangwzhou/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wangwzhou/subscriptions",
    "organizations_url": "https://api.github.com/users/wangwzhou/orgs",
    "repos_url": "https://api.github.com/users/wangwzhou/repos",
    "events_url": "https://api.github.com/users/wangwzhou/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wangwzhou/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2336800343,
      "node_id": "MDU6TGFiZWwyMzM2ODAwMzQz",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/HTTP-API",
      "name": "HTTP-API",
      "color": "5A63A2",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2023-11-03T21:14:32Z",
  "updated_at": "2024-01-10T08:12:18Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nWhen I fetch the slot data of a missed slot with `eth/v2/beacon/blocks` and `eth/v1/beacon/headers`, the response is `404 Not Found`, instead of a specific error indicating this is a missed block, which makes it difficult to differentiate the following 2 cases:\r\n1. Cannot fetch slot data because it's a missed slot.\r\n2. Cannot fetch slot data because nodes are out of sync, or the slot hasn't been proposed yet.\r\n\r\nWondering should client return a specific error for missed slot?\r\n\r\n## Version\r\n\r\n`Lighthouse/v4.5.0-441fc16/x86_64-linux`\r\n\r\n## Present Behaviour\r\n\r\nWhen fetching the slot data of a missed slot with `eth/v2/beacon/blocks` and `eth/v1/beacon/headers`, the response is `404 Not Found`.\r\n\r\nFor example, when fetch block header for https://holesky.beaconcha.in/slot/1, the response is\r\n\r\n`\r\n{\r\n  \"code\": 404,\r\n  \"message\": \"NOT_FOUND: beacon block at slot 1\",\r\n  \"stacktraces\": []\r\n}\r\n`\r\n\r\n## Expected Behaviour\r\n\r\nShould client return a specific error/error code for missed slots?\r\n\r\n## Steps to resolve\r\n\r\nPlease describe the steps required to resolve this issue, if known.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/4904/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/4904/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1793137232",
    "html_url": "https://github.com/sigp/lighthouse/issues/4904#issuecomment-1793137232",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4904",
    "id": 1793137232,
    "node_id": "IC_kwDOCFeAzc5q4RpQ",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-03T21:42:07Z",
    "updated_at": "2023-11-03T21:42:07Z",
    "author_association": "MEMBER",
    "body": "I agree this can be a bit confusing, but the spec mandates a 404 in the case where a block is skipped",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1793137232/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1793140119",
    "html_url": "https://github.com/sigp/lighthouse/issues/4904#issuecomment-1793140119",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4904",
    "id": 1793140119,
    "node_id": "IC_kwDOCFeAzc5q4SWX",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-03T21:45:43Z",
    "updated_at": "2023-11-03T21:45:43Z",
    "author_association": "MEMBER",
    "body": "Some options:\n\n- Return a 400 for slots in the future\n- Return a 400 for slots prior to the database's backfill limit (`oldest_block_slot`)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1793140119/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1793149469",
    "html_url": "https://github.com/sigp/lighthouse/issues/4904#issuecomment-1793149469",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4904",
    "id": 1793149469,
    "node_id": "IC_kwDOCFeAzc5q4Uod",
    "user": {
      "login": "wangwzhou",
      "id": 118584093,
      "node_id": "U_kgDOBxFzHQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/118584093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wangwzhou",
      "html_url": "https://github.com/wangwzhou",
      "followers_url": "https://api.github.com/users/wangwzhou/followers",
      "following_url": "https://api.github.com/users/wangwzhou/following{/other_user}",
      "gists_url": "https://api.github.com/users/wangwzhou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wangwzhou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wangwzhou/subscriptions",
      "organizations_url": "https://api.github.com/users/wangwzhou/orgs",
      "repos_url": "https://api.github.com/users/wangwzhou/repos",
      "events_url": "https://api.github.com/users/wangwzhou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wangwzhou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-03T21:57:35Z",
    "updated_at": "2023-11-03T22:01:49Z",
    "author_association": "NONE",
    "body": "IMO, as long as we can differentiate skipped blocks with other not_found cases should be fine, we can either return with a specific error code or even keep 404 but with a specific error message.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1793149469/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1883915454",
    "html_url": "https://github.com/sigp/lighthouse/issues/4904#issuecomment-1883915454",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4904",
    "id": 1883915454,
    "node_id": "IC_kwDOCFeAzc5wSkS-",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-09T22:42:44Z",
    "updated_at": "2024-01-09T22:42:44Z",
    "author_association": "MEMBER",
    "body": "I discussed this with the other beacon-APIs maintainers and we didn't yet reach a conclusion on how to proceed, although we agreed that _something_ should be done.\r\n\r\nJacek (@arnetheduck) from Nimbus pointed out that it would be good to be able to differentiate these cases by status code:\r\n\r\n* I don't know this route - give up on this server\r\n* I don't know about this slot - ask someone else or later\r\n* I know this slot doesn't have a block - move on to the next slot\r\n\r\nAt the moment they are all 404s.\r\n\r\nThe problem is we couldn't agree on which status codes to use, as none from the HTTP spec are quite right. E.g.\r\n\r\n* Route unknown: [405 Method Not Allowed](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405) (not quite right, because we don't accept any method on the route, so this should really be a 404)\r\n* Slot unknown: [410 Gone](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/410) (not quite right, because 410 _usually_ implies permanent loss and the absence of old blocks & states can be remedied by backfilling them)\r\n* Slot does not have a block: 404 (fine)\r\n\r\nThere was also a desire by @rolfyone to avoid 5xx status codes, which is fair, seeing as they usually indicate bugs. That said, I think [503 Service Unavailable](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503) _could_ be useful for the \"I don't know about this slot, try again later\" because its descriptions matches quite closely:\r\n\r\n> The HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the **server is not ready to handle the request**.\r\n\r\n> Common causes are a server that is down for maintenance or that is overloaded. This response should be used for **temporary conditions** and the [Retry-After](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) HTTP header should, if possible, contain the estimated time for the recovery of the service.\r\n\r\n(emphasis added)\r\n\r\nAs a middle-ground I'm now proposing:\r\n\r\n- Route unknown: 404\r\n- Slot unknown/unavailable: 503\r\n- Slot known to be empty: 404\r\n\r\nThis still combines two cases with a 404 status, but is still an improvement over the current state of things. The argument would be that callers _should_ be able to rule out the non-existence of the route by checking their software version _or_ by reading the error message returned (assuming they can get at it under layers of reverse proxies and similar).",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1883915454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1884355305",
    "html_url": "https://github.com/sigp/lighthouse/issues/4904#issuecomment-1884355305",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4904",
    "id": 1884355305,
    "node_id": "IC_kwDOCFeAzc5wUPrp",
    "user": {
      "login": "arnetheduck",
      "id": 1382986,
      "node_id": "MDQ6VXNlcjEzODI5ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1382986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnetheduck",
      "html_url": "https://github.com/arnetheduck",
      "followers_url": "https://api.github.com/users/arnetheduck/followers",
      "following_url": "https://api.github.com/users/arnetheduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnetheduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnetheduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnetheduck/subscriptions",
      "organizations_url": "https://api.github.com/users/arnetheduck/orgs",
      "repos_url": "https://api.github.com/users/arnetheduck/repos",
      "events_url": "https://api.github.com/users/arnetheduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnetheduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-10T07:58:56Z",
    "updated_at": "2024-01-10T07:58:56Z",
    "author_association": "NONE",
    "body": "503 wfm, great if you can get that upstreamed ;) \r\n\r\nfor \"slot known to be empty\" I actually think 200 is the right code - with an explicit response that indicates an empty slot.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1884355305/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1884371327",
    "html_url": "https://github.com/sigp/lighthouse/issues/4904#issuecomment-1884371327",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4904",
    "id": 1884371327,
    "node_id": "IC_kwDOCFeAzc5wUTl_",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-10T08:12:17Z",
    "updated_at": "2024-01-10T08:12:17Z",
    "author_association": "MEMBER",
    "body": "Ooh, a 200 with an empty body and a header that indicates it was intentional? 🤔 Thinking of something that works for JSON & SSZ, but maybe for JSON a response like this would be better:\r\n\r\n```json\r\n{\r\n   \"data\": null,\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1884371327/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
