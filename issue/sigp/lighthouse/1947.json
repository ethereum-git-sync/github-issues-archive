{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/1947",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/1947/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/1947/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/1947/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/1947",
  "id": 748382009,
  "node_id": "MDU6SXNzdWU3NDgzODIwMDk=",
  "number": 1947,
  "title": "Add stable/unstable branches, remove master",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1232620456,
      "node_id": "MDU6TGFiZWwxMjMyNjIwNDU2",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/RFC",
      "name": "RFC",
      "color": "4aaa19",
      "default": false,
      "description": "Request for comment"
    },
    {
      "id": 2490303709,
      "node_id": "MDU6TGFiZWwyNDkwMzAzNzA5",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/A0",
      "name": "A0",
      "color": "bc3e3a",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2020-11-22T23:58:37Z",
  "updated_at": "2021-01-14T22:31:14Z",
  "closed_at": "2021-01-14T22:31:14Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Introduction\r\n\r\nCurrently, PRs are merged directly into `master`. This means that *all* PRs must have the full suite of CI run on them individually. We've had some bugs merged into `master`, which means we probably need to increase our CI coverage. At the same time, CI is running very slow and it would be great to run *less* CI on each individual CI.\r\n\r\nThis indicates to me that we should introduce a \"staging\" environment for code that we intend to push to users and should have a big fat CI suite run on it.\r\n\r\n## Proposal\r\n\r\nI propose that instead of the single `master` branch, we have two long-living branches: `stable` and `unstable`.\r\n\r\nThe `master` branch naming is contentious and vague, we express ourselves more clearly with `stable` or `unstable`. It seems like a \"tradition\" to have a `master` branch, but I don't see what it gives us so I think we should axe it. It might be annoying to run `git checkout master` and not find anything, but I propose that's better than running `git checkout master` and not knowing if you're going to get production code or some PR I whipped up last night.\r\n\r\nTo achieve this, I propose:\r\n\r\n- Add a `stable` branch.\r\n- Rename `master` to `unstable`\r\n  - I'm unsure if `unstable` or `dev` is better here. I'd take either.\r\n- Introduce the concept of a \"release candidate\", a release that has not yet passed the full suite of CI.\r\n\r\n*Note: I've chosen `unstable` as the default branch so we don't have to always change the PR base (and consequently forget to change it and break `stable`).*\r\n\r\n## Workflows\r\n\r\n### Feature PRs\r\n\r\nThese are everyday PRs that add a feature, fix a bug, etc. These will run standard CI and aren't expected to have already run on testnets/canaries.\r\n\r\n#### Process\r\n\r\n- `git checkout unstable`\r\n- `git checkout -b my-feature-name`\r\n- Create a PR which proposes to squash-merge `my-feature-name` into `unstable`.\r\n\r\n### Cutting a Release Candidate\r\n\r\nA \"release candidate\" expresses the intention to make changes to `master`, triggering additional CI and other testing (e.g., running on testnets, canary nodes).\r\n\r\n#### Process\r\n\r\n- `git checkout unstable`\r\n- `git checkout -b my-release-branch`\r\n- Create a PR which proposes to squash-merge `my-release-branch` into `unstable`.\r\n- After review and squash-merge, tag the commit with: `git checkout unstable && git tag vx.x.x-rc1` (note the `rc1` suffix).\r\n\r\n### Cutting a Release\r\n\r\nA release is a change to master which has undergone enough testing for us to declare it is production ready.\r\n\r\n- Ensure all the `-rc` CI and checklists pass.\r\n- Create a PR that proposes to merge some commit from `unstable` into `stable`.\r\n- Remove `-rc` prefix from semver tag (e.g., `v0.1.1-rc` -> `v0.1.1`)\r\n- After review, merge the PR into `stable`.\r\n After review and squash-merge, tag the commit with: `git checkout stable && git tag vx.x.x` (no `rc1` suffix).\r\n\r\n## CI/Testing\r\n\r\nI think we should have two varieties of CI; minimal and full.\r\n\r\n- Minimal CI: runs on every PR and commit to `unstable`.\r\n- Full CI: runs on every time we add a tag to `unstable`.\r\n- Full CI: runs every time we add a tag to `stable`.\r\n\r\n## Build Server\r\n\r\nI think we should have a build server which automatically produces binaries:\r\n\r\n- Whenever a tag is added to `unstable` or `stable`.\r\n\r\n## Open Questions\r\n\r\nWe haven't yet defined the difference between full/minimal CI, nor have we described the process to move a RC into a *real* release. I think we can start to work on these things once we have this PR structure started.\r\n\r\n## Inspiration\r\n\r\nThis is based upon @q9f's suggestions [here](https://hackmd.io/@q9/release#Flow-Release-Strategy) which were in-turn based upon an [Atlassian doc](https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow).\r\n\r\nI've not fully adopted the `git flow` approach, since I think using a `git`-wrapper is not really ideal for a team of systems-programmers (no cotton-wool wrapping plz). I also don't see the benefits of enforcing strict branch naming with a fairly small engineering team.\r\n\r\nAlso, I've skipped the `rc` branch since I feel like we can just use PRs and tags to replicate it on `unstable`, ultimately reducing complexity.",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/1947/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/1947/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/731870533",
    "html_url": "https://github.com/sigp/lighthouse/issues/1947#issuecomment-731870533",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1947",
    "id": 731870533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTg3MDUzMw==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T00:06:54Z",
    "updated_at": "2020-11-23T00:06:54Z",
    "author_association": "MEMBER",
    "body": "I think this is reasonable, however I think we keep `master` and have a `dev` branch. So essentially your `stable` is `master` and `unstable` is `dev`. \r\n\r\nI've seen this used in other repo's and it avoid the confusion to not having a master branch, when it seems to me that `stable` is actually a `master` branch. \r\n\r\nThen only `stable` code gets merged to master, so there is no uncertainty when you pull `master` that you are getting some random PR. \r\n\r\nI was thinking we should add a long-lived `dev`branch also.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/731870533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/731871361",
    "html_url": "https://github.com/sigp/lighthouse/issues/1947#issuecomment-731871361",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1947",
    "id": 731871361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTg3MTM2MQ==",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T00:12:05Z",
    "updated_at": "2020-11-23T00:12:05Z",
    "author_association": "MEMBER",
    "body": "I'm in favour of the two branch approach and I quite like the symmetry of the `stable`/`unstable` names. I can also see the argument for keeping `master` and adding a `dev` branch (user momentum behind `git pull origin master`, etc).",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/731871361/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/731875390",
    "html_url": "https://github.com/sigp/lighthouse/issues/1947#issuecomment-731875390",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1947",
    "id": 731875390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTg3NTM5MA==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T00:33:04Z",
    "updated_at": "2020-11-23T01:03:47Z",
    "author_association": "MEMBER",
    "body": ">  when it seems to me that stable is actually a master branch.\r\n\r\nBut, `stable` is only a \"master\" branch if you assume that \"master\" should be stable, which is unclear. For us, `master` pretty much unstable.\r\n\r\nPerhaps another example is that it seems fine to have either:\r\n\r\n- `master`/`dev`\r\n- `master`/`stable`\r\n\r\nThis indicates to me that `master` is an ambiguous word and that we'd be better off using something more explicit.\r\n\r\n> avoid the confusion to not having a master branch,\r\n\r\nI'm not really convinced it's that confusing to *not* have a `master` branch. When you `git clone` you'll get the default branch and you can run `make` without thinking about anything. If you're going to start playing around with branches it's probably useful if you're forced to go and understand which branch is stable and which one the devs are working on.\r\n\r\nI would also suggest that the typical flow of `git checkout master && git checkout my-feature` is *not* what we want users to do anyway, they should be generally be doing `git checkout unstable ..`.\r\n\r\nIn general, I just still don't see what value `master` has beyond following a tradition that repos have a branch named `master` which is *probably* the stable branch, but also might be something else entirely. Since Github has allowed changing the default branch and old tooling has been forced to handle a lack of `master` branch, I'd argue that it's a tradition that's dying rather than strengthening.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/731875390/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/731876797",
    "html_url": "https://github.com/sigp/lighthouse/issues/1947#issuecomment-731876797",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1947",
    "id": 731876797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTg3Njc5Nw==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T00:39:47Z",
    "updated_at": "2020-11-23T00:39:47Z",
    "author_association": "MEMBER",
    "body": "> I was thinking we should add a long-lived `dev` branch also.\r\n\r\n@AgeManning I'm not sure what you mean here? Maybe a typo?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/731876797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/731892632",
    "html_url": "https://github.com/sigp/lighthouse/issues/1947#issuecomment-731892632",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1947",
    "id": 731892632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTg5MjYzMg==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T02:07:46Z",
    "updated_at": "2020-11-23T02:16:03Z",
    "author_association": "NONE",
    "body": "Github allows changing the default branch, so we can name them as we see fit\r\n\r\n-----------------------------------------------------------------------\r\n\r\nI see two kinds of test suites and three workflows for this system:\r\n\r\n### Test suites\r\n\r\n* Standard: Focus on linting, ETH2 standards, and unit testing\r\n* Release: Focus on integration testing\r\n\r\n### Workflows\r\n\r\n* Feature\r\n* Release Candidate\r\n* Stable Release\r\n\r\n## Workflow - Feature\r\n\r\nThis is what most devs and contributors will do\r\n\r\n- git pull `unstable`\r\n- git checkout -b `feature/my-feature`\r\n- Implementation loop / developer magic 🦄 \r\n- git push\r\n- Do a Pull Request\r\n- **Standard** suite of tests\r\n  - If is a contributor, such suite runs in their repositories\r\n  - If it is a @sigp member, runs in our box, `Gazorpazorp`™\r\n- Loop over tests or review observations\r\n- Lighthouse Team approves PR\r\n- Merge into unstable\r\n  - Triggered with `bors`\r\n\r\n## Workflow - Release Candidate\r\n\r\nTLDR: Like a feature, but we don't do implementation, and run more tests\r\n\r\nThese activities are to be executed by a team member wishing to cut a release\r\n\r\n- git pull `unstable`\r\n- git checkout -b `release/my-release`\r\n- git push\r\n- Do a Pull Request\r\n- Run the **RELEASE** suite of tests\r\n  - Here we run every test on earth we can conceive:\r\n    - The **Standard** suite plus integration, testnet, etc\r\n- Loop upon any situation found during testing\r\n- Team approves PR\r\n  - Triggered with `bors`\r\n  - Merge into `unstable` and **tag** the release candidate\r\n    - `git tag vx.x.x-rc1` (note the rc1 suffix)\r\n    - Publish unstable binaries\r\n\r\n## Workflow - Stable Release\r\n\r\nAt this stage this is more an admin procedure, as we _already passed_ the **RELEASE** tests\r\n\r\nExpect reports of the unstable binary from different actors in the ecosystem\r\n\r\nOnce it is decided a **release candidate** can become a **stable release** the steps are:\r\n\r\n- git pull `vx.x.x-rc1`\r\n- Create a PR that proposes to merge the above branch into `stable`\r\n- We already ran the **RELEASE** suite of tests for this commit\r\n  - Also, as specified above, we collected feedback from ecosystem actors\r\n- Team approves PR\r\n  - Triggered with `bors`\r\n  - Merge into `stable`\r\n  - Remove -rc prefix from semver tag (e.g., `v0.1.1-rc` -> `v0.1.1`)\r\n  - Publish stable binaries\r\n\r\n## Build server\r\n\r\nJust summarizing from the comments above\r\n\r\n### Standard Tests\r\n\r\n* For contributors\r\n  * They will run `Standard` tests in their own repositories\r\n* @sigp members\r\n  * They will run `Standard` tests in our box, `Gazorpazorp`™\r\n    * Hooked to github\r\n  * Provided they push a `feature/.*` branch\r\n\r\n### Release Tests\r\n\r\n* To be triggered by `bors` on release candidate workflow\r\n\r\n### Binary creation\r\n\r\n* To be triggered by `bors` on\r\n  * Release candidate workflow\r\n  * Release workflow\r\n* Binaries to be signed and published for other automated process to pick them up\r\n\r\n-----------------------------------------------------------------------",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/731892632/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/731904188",
    "html_url": "https://github.com/sigp/lighthouse/issues/1947#issuecomment-731904188",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1947",
    "id": 731904188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTkwNDE4OA==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T03:09:10Z",
    "updated_at": "2020-11-23T03:09:10Z",
    "author_association": "MEMBER",
    "body": "> This indicates to me that master is an ambiguous word and that we'd be better off using something more explicit.\r\n\r\nI dont think so. I think if pick a random repo on github and pull master, I expect it to compile, run and work and be `stable` in the sense it has the latest code waiting to be added to a release. A more `stable` version would be to checkout one of its release tags. In fact with a lot of projects I actively assume this. The default branch doesn't necessarily indicate the `stable` branch. For example the default branch for the eth2-specs is the dev branch. But I know to checkout master to get the latest `stable` (without having to search for any documentation about how the repo is set up). \r\n\r\nI think its just the naming here. I agree with everything else suggested. \r\n\r\n> @AgeManning I'm not sure what you mean here? Maybe a typo?\r\n\r\nI was saying that I agree we should have another long-lived branch separate to master that we build alongside for things that are not yet `stable`. \r\n\r\nI just think it will add confusion to users to not have a `master` branch. I understand we can change the default branch, but when every other project in the ecosystem has a `master` branch and external contribs generally know not to make commits to master for their PRs I think it will add confusion to not have a `master` branch.\r\n\r\nI still don't quite get the argument for why we want to rename master and go against the current standard, there is no ambiguity in the traditional name `master` from my perspective.\r\n\r\nIf others think we should change it, happy to go along, just seems like it will add a lot of confusion for non-lighthouse people without any real benefit.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/731904188/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/731933021",
    "html_url": "https://github.com/sigp/lighthouse/issues/1947#issuecomment-731933021",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1947",
    "id": 731933021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTkzMzAyMQ==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T05:23:25Z",
    "updated_at": "2020-11-23T05:41:28Z",
    "author_association": "MEMBER",
    "body": "> I think if pick a random repo on github and pull master, I expect it to compile, run and work and be stable in the sense it has the latest code waiting to be added to a release. A more stable version would be to checkout one of its release tags. \r\n\r\nIf I understand correctly, here you expect master to:\r\n\r\n- Be less stable than release tags.\r\n- Contain the latest PRs that haven't made it into a release.\r\n\r\nThis is the case for:\r\n\r\n- Lighthouse: yes (currently)\r\n- https://github.com/ethereum/eth2.0-specs: no (for phase 0)\r\n- https://github.com/rust-lang: yes\r\n\r\n> But I know to checkout master to get the latest stable\r\n\r\nBut here, I understand that you want master to:\r\n\r\n- Be as stable as release tags.\r\n- Only contain PRs that are considered stable.\r\n\r\nThis is the case for:\r\n\r\n- Lighthouse: no (but it's what I'm proposing)\r\n- https://github.com/ethereum/eth2.0-specs: yes (for phase 0)\r\n- https://github.com/rust-lang: no\r\n\r\n> there is no ambiguity in the traditional name master from my perspective.\r\n\r\nI think there's definitely ambiguity. From my reading, a stable-master vs unstable-master seems to be as varied as merge or squash-merge. If you go to eth2.0-spec and pull `master` you're going to get something that's behind `dev`. If you go to rust-lang you're going to get something that's ahead of `stable`.\r\n\r\nTry Googling this: https://www.google.com/search?hl=en&q=stable%20master%20branch. There seems to be a lot of people out there unsure if `master` is stable and varied responses to them. At least one random person agrees with me (in a confused way):\r\n\r\n> \"Ask the owner of the repository. \"stable\" might just mean \"this is stable and intended for release\" whereas master could mean \"this has already been released\". But again, you must ask the owner of the repository what meaning they attribute to the branches. There is no fixed answer that anyone can provide here because it depends\"\r\n\r\nAlso take [Afri's doc](https://hackmd.io/@q9/release#Flow-Release-Strategy) as an example, it has two strategies and one of the primary differences between them is whether or not master is stable.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/731933021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/732033782",
    "html_url": "https://github.com/sigp/lighthouse/issues/1947#issuecomment-732033782",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1947",
    "id": 732033782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMjAzMzc4Mg==",
    "user": {
      "login": "q9f",
      "id": 58883403,
      "node_id": "MDQ6VXNlcjU4ODgzNDAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/58883403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/q9f",
      "html_url": "https://github.com/q9f",
      "followers_url": "https://api.github.com/users/q9f/followers",
      "following_url": "https://api.github.com/users/q9f/following{/other_user}",
      "gists_url": "https://api.github.com/users/q9f/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/q9f/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/q9f/subscriptions",
      "organizations_url": "https://api.github.com/users/q9f/orgs",
      "repos_url": "https://api.github.com/users/q9f/repos",
      "events_url": "https://api.github.com/users/q9f/events{/privacy}",
      "received_events_url": "https://api.github.com/users/q9f/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T09:20:35Z",
    "updated_at": "2020-11-23T09:22:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Moving away from a `master` branch and having branch names that are less ambiguous is strongly recommended.\r\n\r\nHaving a `stable/unstable` or `release/develop` tuple is much more clear to potential contributors than `master` or `main` as mentioned earlier, different release strategies handle them differently.\r\n\r\n---\r\n\r\nEdit, my personal favorite is still the `stable/beta/unstable` triple but that requires a more involved strategy (e.g., as the rust compiler does).",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/732033782/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/732207225",
    "html_url": "https://github.com/sigp/lighthouse/issues/1947#issuecomment-732207225",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1947",
    "id": 732207225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMjIwNzIyNQ==",
    "user": {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T14:45:58Z",
    "updated_at": "2020-11-23T14:50:06Z",
    "author_association": "COLLABORATOR",
    "body": "I think we should keep `master` and add a new `dev` branch at least until we are through the v1.0.0 release. Removing `master` right before users are going to be forced to update within a limited timeframe seems like adding an unnecessary source of confusion (however small).  Just adding `dev` and keeping master the default branch will minimize confusion.  After v1.0.0, I think switching to `stable` and `unstable` is totally reasonable but I'm also fine with keeping `master`/`dev`. \r\n\r\nI'm in favor of keeping `master` (or eventually `stable`) the default because it makes it clear what code we suggest people run. It will add a bit more overhead to people looking to contribute, but those people will be more familiar with git.\r\n\r\n> Note: I've chosen unstable as the default branch so we don't have to always change the PR base (and consequently forget to change it and break stable\r\n\r\nCould we ensure we don't break `stable` by having CI fail for PRs to `stable` without `-rc` in the branch name?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/732207225/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/732400063",
    "html_url": "https://github.com/sigp/lighthouse/issues/1947#issuecomment-732400063",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1947",
    "id": 732400063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMjQwMDA2Mw==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T20:12:38Z",
    "updated_at": "2020-11-23T20:13:46Z",
    "author_association": "MEMBER",
    "body": "> I think we should keep master and add a new dev branch at least until we are through the v1.0.0 release. Removing master right before users are going to be forced to update within a limited timeframe seems like adding an unnecessary source of confusion (however small).\r\n\r\nYeah, I've also been thinking this. Removing `master` and/or changing the default branch will potentially impact genesis validators.\r\n\r\nHow about this:\r\n\r\n1. Create `stable`/`unstable`\r\n1. Set `stable` to be default (for the time being, at least)\r\n1. Keep `master` and get it to track `stable`.\r\n\r\nThat way we give the `master` branch a little sunset period. This way people who aren't really considering if `master` is stable can keep using it (and get the stable stream). People who *are* wondering about stability can use the aptly named `stable`/`unstable`.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/732400063/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/760517043",
    "html_url": "https://github.com/sigp/lighthouse/issues/1947#issuecomment-760517043",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1947",
    "id": 760517043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MDUxNzA0Mw==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-14T22:31:14Z",
    "updated_at": "2021-01-14T22:31:14Z",
    "author_association": "MEMBER",
    "body": "Closing since this has been implemented.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/760517043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
