{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/3735",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/3735/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/3735/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/3735/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/3735",
  "id": 1453661917,
  "node_id": "I_kwDOCFeAzc5WpR7d",
  "number": 3735,
  "title": "Windows + Nssm + Lighthouse + AppRotateOnline 1",
  "user": {
    "login": "xanatos",
    "id": 821344,
    "node_id": "MDQ6VXNlcjgyMTM0NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/821344?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/xanatos",
    "html_url": "https://github.com/xanatos",
    "followers_url": "https://api.github.com/users/xanatos/followers",
    "following_url": "https://api.github.com/users/xanatos/following{/other_user}",
    "gists_url": "https://api.github.com/users/xanatos/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/xanatos/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/xanatos/subscriptions",
    "organizations_url": "https://api.github.com/users/xanatos/orgs",
    "repos_url": "https://api.github.com/users/xanatos/repos",
    "events_url": "https://api.github.com/users/xanatos/events{/privacy}",
    "received_events_url": "https://api.github.com/users/xanatos/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2336802021,
      "node_id": "MDU6TGFiZWwyMzM2ODAyMDIx",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/UX-and-logs",
      "name": "UX-and-logs",
      "color": "DB9046",
      "default": false,
      "description": ""
    },
    {
      "id": 3034786437,
      "node_id": "MDU6TGFiZWwzMDM0Nzg2NDM3",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/windows",
      "name": "windows",
      "color": "3B9ED5",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-11-17T16:47:53Z",
  "updated_at": "2022-11-25T10:09:36Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Nssm is a quite commonly used (on Windows) tool to make an app a service. The version I'm using (taken from https://nssm.cc/download) is the [nssm 2.24-101-g897c7ad](https://nssm.cc/ci/nssm-2.24-101-g897c7ad.zip) (that is the pre-release).\r\n\r\nI've done tests on two copies of Windows 11 Pro ITA (various subreleases... I had this problem from the beginning, 6 months ago)\r\n\r\nEverything works correctly, unless I try to enable the options Rotate files + Rotate while service is running (`AppRotateFiles 1` and `AppRotateOnline 1`)\r\n\r\nTo test, in an administrative console of Windows:\r\n\r\n```\r\nnssm.exe install lhv C:\\lh\\lighthouse.exe\r\nnssm.exe set lhv AppParameters \"validator --network goerli --datadir C:\\lhdata\"\r\nnssm.exe set lhv AppDirectory C:\\lh\r\nnssm.exe set lhv AppExit Default Restart\r\nnssm.exe set lhv AppStdout c:\\lhdata\\validator.log\r\nnssm.exe set lhv AppStderr c:\\lhdata\\validator.log\r\nnssm.exe set lhv AppRotateFiles 1\r\nnssm.exe set lhv AppRotateOnline 1\r\nnssm.exe set lhv AppRotateBytes 1000000\r\nnssm.exe set lhv DisplayName lhv\r\nnssm.exe set lhv ObjectName LocalSystem\r\nnssm.exe set lhv Start SERVICE_DELAYED_AUTO_START\r\nnssm.exe set lhv Type SERVICE_WIN32_OWN_PROCESS\r\n```\r\n\r\nthen\r\n\r\n```\r\nsc start lhv\r\n\r\nsc stop lhv\r\n\r\nsc query lhv\r\n```\r\n\r\nThe state should be `STOPPED`, but with `AppRotateOnline 1` the state is `STOP_PENDING` and the nssm \"hangs\".\r\n\r\nDon't know if the bug is in nssm or in how Lighthouse handles the console, and sadly nssm is \"abandonware\".",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/3735/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/3735/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1327278879",
    "html_url": "https://github.com/sigp/lighthouse/issues/3735#issuecomment-1327278879",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3735",
    "id": 1327278879,
    "node_id": "IC_kwDOCFeAzc5PHKsf",
    "user": {
      "login": "xanatos",
      "id": 821344,
      "node_id": "MDQ6VXNlcjgyMTM0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/821344?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xanatos",
      "html_url": "https://github.com/xanatos",
      "followers_url": "https://api.github.com/users/xanatos/followers",
      "following_url": "https://api.github.com/users/xanatos/following{/other_user}",
      "gists_url": "https://api.github.com/users/xanatos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xanatos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xanatos/subscriptions",
      "organizations_url": "https://api.github.com/users/xanatos/orgs",
      "repos_url": "https://api.github.com/users/xanatos/repos",
      "events_url": "https://api.github.com/users/xanatos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xanatos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-25T10:08:48Z",
    "updated_at": "2022-11-25T10:09:36Z",
    "author_association": "NONE",
    "body": "I've made some tests. The problem seems to be in the nssm . It hangs waiting for the pipes to close. I was able to make a very small program in rust that only logged something and that could reproduce the problem.\r\n\r\n```\r\nuse slog::info;\r\nuse sloggers::Build;\r\nuse sloggers::terminal::{TerminalLoggerBuilder /* , Destination */};\r\n//use sloggers::types::Severity;\r\n\r\nfn main() {\r\n    let /* mut */ builder = TerminalLoggerBuilder::new();\r\n\r\n    let logger = builder.build().unwrap();\r\n    info!(logger, \"Starting!\");\r\n    let mut line = String::new();\r\n    let _b1 = std::io::stdin().read_line(&mut line).unwrap();\r\n    info!(logger, \"Ending!\");\r\n}\r\n```\r\n\r\nLuckily there seems to be a workaround. sloggers logs only on Stderr, and lighthouse, when launched as beaconnode or as a validator, only uses Stderr or logs through sloggers, so no Stdout use. If you *don't log* Stdout but only log Stderr, then the problem doesn't appear (you can even log Stdout to a different file and everything will work, the problem only appears when you try to log both Stdout AND Stderr to the same file)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1327278879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
