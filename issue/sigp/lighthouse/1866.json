{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/1866",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/1866/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/1866/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/1866/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/1866",
  "id": 737630058,
  "node_id": "MDU6SXNzdWU3Mzc2MzAwNTg=",
  "number": 1866,
  "title": "v0.3.3 beacon_node db uses large amount of disk space from fresh sync even after Medalla finalized",
  "user": {
    "login": "jerryji",
    "id": 83122,
    "node_id": "MDQ6VXNlcjgzMTIy",
    "avatar_url": "https://avatars.githubusercontent.com/u/83122?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jerryji",
    "html_url": "https://github.com/jerryji",
    "followers_url": "https://api.github.com/users/jerryji/followers",
    "following_url": "https://api.github.com/users/jerryji/following{/other_user}",
    "gists_url": "https://api.github.com/users/jerryji/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jerryji/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jerryji/subscriptions",
    "organizations_url": "https://api.github.com/users/jerryji/orgs",
    "repos_url": "https://api.github.com/users/jerryji/repos",
    "events_url": "https://api.github.com/users/jerryji/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jerryji/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2490303709,
      "node_id": "MDU6TGFiZWwyNDkwMzAzNzA5",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/A0",
      "name": "A0",
      "color": "bc3e3a",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2020-11-06T10:01:16Z",
  "updated_at": "2020-11-09T07:57:14Z",
  "closed_at": "2020-11-09T07:57:14Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nv0.3.3 beacon_node db uses large amount of disk space from fresh sync after Medalla finalized\r\n\r\n## Version\r\n\r\nLighthouse v0.3.3 compiled from master\r\n\r\n## Present Behaviour\r\n\r\nAfter Medalla (re)finalized on 04-Nov-2020, the beacon_node db still grows to more than 90G from a _fresh sync_\r\n\r\n## Expected Behaviour\r\n\r\nIdeally the db size should be around 8G\r\n\r\n## Steps to resolve\r\n\r\nNo known workaround\r\n",
  "closed_by": {
    "login": "bors[bot]",
    "id": 26634292,
    "node_id": "MDM6Qm90MjY2MzQyOTI=",
    "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bors%5Bbot%5D",
    "html_url": "https://github.com/apps/bors",
    "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers",
    "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}",
    "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions",
    "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs",
    "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos",
    "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events",
    "type": "Bot",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/1866/reactions",
    "total_count": 4,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/1866/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/723205730",
    "html_url": "https://github.com/sigp/lighthouse/issues/1866#issuecomment-723205730",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1866",
    "id": 723205730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzIwNTczMA==",
    "user": {
      "login": "ChuckNorrison",
      "id": 2964146,
      "node_id": "MDQ6VXNlcjI5NjQxNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2964146?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChuckNorrison",
      "html_url": "https://github.com/ChuckNorrison",
      "followers_url": "https://api.github.com/users/ChuckNorrison/followers",
      "following_url": "https://api.github.com/users/ChuckNorrison/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChuckNorrison/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChuckNorrison/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChuckNorrison/subscriptions",
      "organizations_url": "https://api.github.com/users/ChuckNorrison/orgs",
      "repos_url": "https://api.github.com/users/ChuckNorrison/repos",
      "events_url": "https://api.github.com/users/ChuckNorrison/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChuckNorrison/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-06T17:32:09Z",
    "updated_at": "2020-11-06T17:32:09Z",
    "author_association": "NONE",
    "body": "My chain_db is 94GB on Mainnet after sync. Any recommendations on amount of disk space to keep free over next 3 years? In a thread it was meant to grow once to max amount and then it will try to force sync which should reduce the db again. But as i understand we need to get the full amount of the beacon chain available for now",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/723205730/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/723392296",
    "html_url": "https://github.com/sigp/lighthouse/issues/1866#issuecomment-723392296",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1866",
    "id": 723392296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzM5MjI5Ng==",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-07T04:59:43Z",
    "updated_at": "2020-11-07T04:59:43Z",
    "author_association": "MEMBER",
    "body": "This might be because the node witnessed the Medalla chaos via sync (i.e. it downloaded all the stray blocks), even if it synced after it all occurred. Nonetheless, the fix is the same:\r\n\r\nThere's a known issue where LevelDB is really slow at reclaiming space after the database grows. We're seeing that a lot on nodes that were running throughout the period of non-finality. I just tested a rough fix on my node (invoking LevelDB's compaction), and it shrank the DB from 90GB+ to 8.9GB, with a runtime of ~1 minute. I'll polish the code and put a PR up early next week, we'll ship a new release, and everyone's databases can go back to being <20GB :tada: \r\n\r\nFor mainnet, I think it makes sense to leave a bit of headroom and not rely on the DB being any smaller than 128GB. I suspect many people will be running on 1TB SSDs, particularly if they're running a Geth instance.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/723392296/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/723399690",
    "html_url": "https://github.com/sigp/lighthouse/issues/1866#issuecomment-723399690",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1866",
    "id": 723399690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzM5OTY5MA==",
    "user": {
      "login": "jerryji",
      "id": 83122,
      "node_id": "MDQ6VXNlcjgzMTIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/83122?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jerryji",
      "html_url": "https://github.com/jerryji",
      "followers_url": "https://api.github.com/users/jerryji/followers",
      "following_url": "https://api.github.com/users/jerryji/following{/other_user}",
      "gists_url": "https://api.github.com/users/jerryji/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jerryji/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jerryji/subscriptions",
      "organizations_url": "https://api.github.com/users/jerryji/orgs",
      "repos_url": "https://api.github.com/users/jerryji/repos",
      "events_url": "https://api.github.com/users/jerryji/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jerryji/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-07T06:28:44Z",
    "updated_at": "2020-11-07T06:28:44Z",
    "author_association": "NONE",
    "body": "@michaelsproul Thank you so much for the PR and explanation.\r\n\r\n> For mainnet, I think it makes sense to leave a bit of headroom and not rely on the DB being any smaller than 128GB.\r\n\r\nJust to confirm: does it mean even with your PR the mainnet db could still grow upto 128GB despite the lesser probability / shorter duration of non-finality?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/723399690/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/723694272",
    "html_url": "https://github.com/sigp/lighthouse/issues/1866#issuecomment-723694272",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1866",
    "id": 723694272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzY5NDI3Mg==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-09T00:41:45Z",
    "updated_at": "2020-11-09T00:41:45Z",
    "author_association": "MEMBER",
    "body": "I believe @michaelsproul is working on a fix to this :)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/723694272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/723703801",
    "html_url": "https://github.com/sigp/lighthouse/issues/1866#issuecomment-723703801",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1866",
    "id": 723703801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzcwMzgwMQ==",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-09T01:26:41Z",
    "updated_at": "2020-11-09T01:26:41Z",
    "author_association": "MEMBER",
    "body": "> I believe @michaelsproul is working on a fix to this :)\r\n\r\nYep! PR is up now https://github.com/sigp/lighthouse/pull/1871\r\n\r\n> Just to confirm: does it mean even with your PR the mainnet db could still grow upto 128GB despite the lesser probability / shorter duration of non-finality?\r\n\r\n@jerryji Kind of. If the non-finality duration isn't as long, then the database won't grow as large, but I think we should be prepared for the worst.\r\n\r\nI also realised that the disk usage during sync could be due just to the canonical chain. Without finalization, we store a (heavy) `BeaconState` in the hot DB every epoch, and for 4000 epochs of non-finality, that's a lot of space. To sync Medalla will now require ~90GB disk space (assuming the worst), even if we were to adopt other disk usage reductions (like #1872). Fixing this would require substantial changes to sync and the database which I don't think are viable before mainnet.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/723703801/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
