{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/1789",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/1789/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/1789/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/1789/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/1789",
  "id": 724508743,
  "node_id": "MDU6SXNzdWU3MjQ1MDg3NDM=",
  "number": 1789,
  "title": "Incorrect zeroizing of newtype structs",
  "user": {
    "login": "pawanjay176",
    "id": 9890508,
    "node_id": "MDQ6VXNlcjk4OTA1MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9890508?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pawanjay176",
    "html_url": "https://github.com/pawanjay176",
    "followers_url": "https://api.github.com/users/pawanjay176/followers",
    "following_url": "https://api.github.com/users/pawanjay176/following{/other_user}",
    "gists_url": "https://api.github.com/users/pawanjay176/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pawanjay176/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pawanjay176/subscriptions",
    "organizations_url": "https://api.github.com/users/pawanjay176/orgs",
    "repos_url": "https://api.github.com/users/pawanjay176/repos",
    "events_url": "https://api.github.com/users/pawanjay176/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pawanjay176/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2490303709,
      "node_id": "MDU6TGFiZWwyNDkwMzAzNzA5",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/A0",
      "name": "A0",
      "color": "bc3e3a",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-10-19T11:04:46Z",
  "updated_at": "2020-11-09T00:29:47Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nExplicitly dropping any stack variable (e.g. [`ZeroizeHash`](https://github.com/sigp/lighthouse/blob/master/crypto/bls/src/zeroize_hash.rs)) by calling `drop(self)` could lead to memory not being correctly zeroized.\r\n\r\n## Version\r\n\r\nmaster\r\n\r\n## Present Behaviour\r\n\r\nThe following program prints out\r\n```rust\r\nuse zeroize::Zeroize;\r\n\r\n#[derive(Zeroize)]\r\n#[zeroize(drop)]\r\npub struct DerivedKey([u8; 32 as usize]);\r\n\r\nimpl DerivedKey {\r\n    /// Returns a reference to the underlying byte array.\r\n    pub fn as_bytes(&self) -> &[u8] {\r\n        &self.0\r\n    }\r\n}\r\n\r\nimpl Drop for DerivedKey {\r\n    fn drop(&mut self) {\r\n        println!(\"Pointer in zeroize: {:?}\", self.0.as_ptr());\r\n        self.0.zeroize();\r\n    }\r\n}\r\n\r\nfn my_func() -> *const u8 {\r\n    let zeroized_key = DerivedKey([42; 32]);\r\n\r\n    let ptr = zeroized_key.0.as_ptr();\r\n    println!(\"Pointer in func: {:?}\", ptr);\r\n\r\n    println!(\"Memory in func: {:?}\", unsafe {\r\n        core::slice::from_raw_parts(ptr, 32)\r\n    });\r\n    drop(zeroized_key);\r\n    ptr\r\n}\r\n\r\nfn main() {\r\n    let ptr: *const u8 = my_func();\r\n    println!(\"Pointer in main: {:?}\", ptr);\r\n    println!(\"Memory in main: {:?}\", unsafe {\r\n        core::slice::from_raw_parts(ptr, 32)\r\n    });\r\n}\r\n\r\n```\r\n```\r\nPointer in func: 0x7ffe801ca2a0\r\nMemory in func: [42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42]\r\nPointer in zeroize: 0x7ffe801ca230\r\nPointer in main: 0x7ffe801ca2a0\r\nMemory in main: [48, 162, 28, 128, 254, 127, 0, 0, 208, 37, 148, 4, 136, 85, 0, 0, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42]\r\n```\r\nThe issue is when we explicitly do the `drop(zeroized_key)` in `my_func`, there's an implicit copy (I'm not sure why, since `DerivedKey` does not implement copy) of `derived_key` which is passed to drop. So the original memory ends up not being zeroized properly.\r\n\r\nThe memory is zeroized correctly if we don't explicitly call drop and let the variable go out of scope.\r\n\r\nI couldn't find any code in our Lighthouse that drops a zeroize struct explicitly, but could be a potential issue if improperly used.\r\n\r\n## Steps to resolve\r\nPotentially use heap memory like \r\n```rust\r\npub struct DerivedKey(Box<[u8; 32 as usize]>);\r\n```\r\nfor newtype wrappers as described in https://benma.github.io/2020/10/16/rust-zeroize-move.html\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/1789/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/1789/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/717004928",
    "html_url": "https://github.com/sigp/lighthouse/issues/1789#issuecomment-717004928",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1789",
    "id": 717004928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzAwNDkyOA==",
    "user": {
      "login": "kirk-baird",
      "id": 27878213,
      "node_id": "MDQ6VXNlcjI3ODc4MjEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/27878213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kirk-baird",
      "html_url": "https://github.com/kirk-baird",
      "followers_url": "https://api.github.com/users/kirk-baird/followers",
      "following_url": "https://api.github.com/users/kirk-baird/following{/other_user}",
      "gists_url": "https://api.github.com/users/kirk-baird/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kirk-baird/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kirk-baird/subscriptions",
      "organizations_url": "https://api.github.com/users/kirk-baird/orgs",
      "repos_url": "https://api.github.com/users/kirk-baird/repos",
      "events_url": "https://api.github.com/users/kirk-baird/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kirk-baird/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-27T06:01:49Z",
    "updated_at": "2020-10-27T06:01:49Z",
    "author_association": "MEMBER",
    "body": "Locations:\r\n- `crypto/bls/src/zeroize_hash.rs::ZeroizeHash`\r\n- `crypto/eth2_key_derivation/src/derived_key.rs::DeriveKey` (Note `DeriveKey` is a wrapper for `ZeroizeHash`)\r\n- `crypto/eth2_keystore/src/derived_key.rs::DeriveKey` (Note different to above)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/717004928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
