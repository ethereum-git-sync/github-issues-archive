{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/2666",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/2666/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/2666/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/2666/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/2666",
  "id": 1013465015,
  "node_id": "I_kwDOCFeAzc48aD-3",
  "number": 2666,
  "title": "Purge incompatible DB automatically when `--checkpoint-sync-url` is used",
  "user": {
    "login": "dong77",
    "id": 1710087,
    "node_id": "MDQ6VXNlcjE3MTAwODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1710087?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dong77",
    "html_url": "https://github.com/dong77",
    "followers_url": "https://api.github.com/users/dong77/followers",
    "following_url": "https://api.github.com/users/dong77/following{/other_user}",
    "gists_url": "https://api.github.com/users/dong77/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dong77/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dong77/subscriptions",
    "organizations_url": "https://api.github.com/users/dong77/orgs",
    "repos_url": "https://api.github.com/users/dong77/repos",
    "events_url": "https://api.github.com/users/dong77/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dong77/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2021-10-01T15:11:53Z",
  "updated_at": "2022-02-07T00:48:14Z",
  "closed_at": "2022-02-07T00:48:14Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "If `--checkpoint-sync-url` is used, BN shall first try to get data from that URL for checkpoint sync. If no valid data is fetched, BN shall exit with an error message without modifying the database if it exists; if valid date is returned from the specified sync URL, BN shall delete the existing database if it is incompatible with checkpoint sync mode without the `--purge-db` flag used. This will enable a smooth transition from normal sync mode to the checkout sync mode.\r\n",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/2666/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/2666/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/932688886",
    "html_url": "https://github.com/sigp/lighthouse/issues/2666#issuecomment-932688886",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2666",
    "id": 932688886,
    "node_id": "IC_kwDOCFeAzc43l7P2",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-02T05:55:31Z",
    "updated_at": "2021-10-02T05:55:31Z",
    "author_association": "MEMBER",
    "body": "> This will enable a smooth transition from normal sync mode to the checkout sync mode.\n\nWe want to avoid deleting a good database unnecessarily. Most of the time when a beacon node restarts it will be pretty much fully synced, in which case it doesn't make sense to delete the entire database and start again. Checkpoint sync _does not_ help sync to head faster due to any algorithmic difference, but due to starting closer to the head, so there's nothing that a healthy, almost-synced BN can gain from using it.\n\nWe could attempt to detect the case where checkpoint sync _would_ be faster, but I fear this would be too uncertain to enable by default. It's not as simple as checking whether the database's current head is older than the checkpoint, because checkpoint sync also imposes the cost of backfilling all the blocks (extra work) which may not even be available (extra risk).\n\nI think the current system where checkpoint sync can be triggered by stopping the node and adding `--purge-db`, or manually deleting the database â€“ offers the right compromise between ease of use and protection from unnecessary re-syncing.\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/932688886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/932689566",
    "html_url": "https://github.com/sigp/lighthouse/issues/2666#issuecomment-932689566",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2666",
    "id": 932689566,
    "node_id": "IC_kwDOCFeAzc43l7ae",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-02T06:01:25Z",
    "updated_at": "2021-10-02T06:01:25Z",
    "author_association": "MEMBER",
    "body": "> BN shall delete the existing database if it is incompatible with checkpoint sync mode\n\nJust to clarify here, there's no such thing as a \"database that is incompatible with checkpoint sync\". Lighthouse can only tell the difference between:\n\n1) A database with all historic states available, which could be the result of genesis sync OR checkpoint sync with `--restore-historic-states`: these databases end up exactly the same. OR\n2) A database with some historic states missing, which must have been checkpoint synced. It may or may not (yet) have all blocks available. If historic state reconstruction isn't used then it will be forever identifiable as checkpoint synced.\n\ni.e. if Lighthouse detects case (1) it shouldn't try to checkpoint sync, because it is potentially in a better (more complete) state already",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/932689566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1019446574",
    "html_url": "https://github.com/sigp/lighthouse/issues/2666#issuecomment-1019446574",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2666",
    "id": 1019446574,
    "node_id": "IC_kwDOCFeAzc48w4Uu",
    "user": {
      "login": "xrchz",
      "id": 181254,
      "node_id": "MDQ6VXNlcjE4MTI1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/181254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xrchz",
      "html_url": "https://github.com/xrchz",
      "followers_url": "https://api.github.com/users/xrchz/followers",
      "following_url": "https://api.github.com/users/xrchz/following{/other_user}",
      "gists_url": "https://api.github.com/users/xrchz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xrchz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xrchz/subscriptions",
      "organizations_url": "https://api.github.com/users/xrchz/orgs",
      "repos_url": "https://api.github.com/users/xrchz/repos",
      "events_url": "https://api.github.com/users/xrchz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xrchz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-23T09:32:09Z",
    "updated_at": "2022-01-23T09:32:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "> so there's nothing that a healthy, almost-synced BN can gain from using it.\r\n\r\nI think one possible gain from switching to checkpoint sync from a fully or almost synced BN is a reduction in disk space usage. For this use case do you still prefer a manual `--purge-db`? It would be nice if lighthouse could detect whether the space reduction will be achieved before purging though.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1019446574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1019574526",
    "html_url": "https://github.com/sigp/lighthouse/issues/2666#issuecomment-1019574526",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2666",
    "id": 1019574526,
    "node_id": "IC_kwDOCFeAzc48xXj-",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-23T21:51:37Z",
    "updated_at": "2022-01-23T21:51:37Z",
    "author_association": "MEMBER",
    "body": "> I think one possible gain from switching to checkpoint sync from a fully or almost synced BN is a reduction in disk space usage.\r\n\r\nThis is a bit of a hack though â€“ the reason checkpoint sync can save space is that it doesn't store restore points (states) from before the checkpoint. We could achieve even better space savings by implementing a config option to prevent storage of _all_ restore points, and this could be turned on regardless of whether checkpoint sync was used and without requiring a resync of all the blocks.\r\n\r\nI'm still hesitant to add any sort of automatic database purge because having to resync all the blocks is a non-trivial amount of work, and could cause a data availability issue if every node deleted its database and had to resync at the same time.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1019574526/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1030961354",
    "html_url": "https://github.com/sigp/lighthouse/issues/2666#issuecomment-1030961354",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2666",
    "id": 1030961354,
    "node_id": "IC_kwDOCFeAzc49czjK",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-07T00:48:14Z",
    "updated_at": "2022-02-07T00:48:14Z",
    "author_association": "MEMBER",
    "body": "I'm also keen to keep things simple and explicit regarding database purges. An unexpected purge could be very frustrating, especially when using a node for archival purposes.\r\n\r\nI'm going to close this for now. Feel free to reopen, but keep in mind that any automation with database purging needs to be very predictable and clear. ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1030961354/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
