{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/3634",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/3634/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/3634/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/3634/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/3634",
  "id": 1401860937,
  "node_id": "I_kwDOCFeAzc5TjrNJ",
  "number": 3634,
  "title": "Doppelganger Protection - remember attestations after restarting",
  "user": {
    "login": "uwuforever",
    "id": 49468408,
    "node_id": "MDQ6VXNlcjQ5NDY4NDA4",
    "avatar_url": "https://avatars.githubusercontent.com/u/49468408?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/uwuforever",
    "html_url": "https://github.com/uwuforever",
    "followers_url": "https://api.github.com/users/uwuforever/followers",
    "following_url": "https://api.github.com/users/uwuforever/following{/other_user}",
    "gists_url": "https://api.github.com/users/uwuforever/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/uwuforever/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/uwuforever/subscriptions",
    "organizations_url": "https://api.github.com/users/uwuforever/orgs",
    "repos_url": "https://api.github.com/users/uwuforever/repos",
    "events_url": "https://api.github.com/users/uwuforever/events{/privacy}",
    "received_events_url": "https://api.github.com/users/uwuforever/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-10-08T07:49:23Z",
  "updated_at": "2023-01-16T06:45:23Z",
  "closed_at": "2023-01-16T06:45:22Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nDoppelganger protection will wait for 3 missed attestations any time it finds attestations recently on the network... even when this isn't necessary. \r\n\r\nWhen restarting a validator, the new VC instance should be able to recognize if the last several attestations were from the previous VC instance, and if they were, \r\n1) The client that is being shut down quickly writes a small file to /tmp/ccdatesxxxx-yy-zz where xxxx-yy-zz is your birthday.\r\n   - This file contains the last 5 attestations from this validator. ('The new restarted VC will pull the last 3 published attestations from the network to compare...')\r\n   - The file is only written at the end of the process shutdown. ('The new restored VC knows that if it finds this file, that the ETH1 VC process needed to have ended in order to create this file.');\r\n2) The file should be saved in a folder where it won't accidentally be apart of a Lighthouse configuration backup.\r\n3) The new VC instance should check for this file on startup. It should only be around for a few seconds from the time it's written by the VC instance shutting down, and the time it's read and deleted by the new restarted VC instance. ",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/3634/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/3634/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1383564066",
    "html_url": "https://github.com/sigp/lighthouse/issues/3634#issuecomment-1383564066",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3634",
    "id": 1383564066,
    "node_id": "IC_kwDOCFeAzc5Sd4Mi",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-16T06:45:22Z",
    "updated_at": "2023-01-16T06:45:22Z",
    "author_association": "MEMBER",
    "body": "> Doppelganger protection will wait for 3 missed attestations any time it finds attestations recently on the network...\r\n\r\nDoppelganger (DG) protection doesn't wait *only if* it finds attestations on the network. Rather, it *always* waits and shuts down loudly if any other attestations are found on the network.\r\n\r\nThe purpose of DG is to stay silent for three epochs so that it can detect any other instances of the same validator running. Knowing the history of previous attestations isn't relevant to the question of \"is there another instance of this validator running on the network *right now*\".\r\n\r\nI believe there's been a misunderstanding of the purpose of DG protection, so I'm closing this issue. Feel free to reopen if you disagree.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1383564066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
