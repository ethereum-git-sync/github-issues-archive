{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/2936",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/2936/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/2936/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/2936/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/2936",
  "id": 1108861522,
  "node_id": "I_kwDOCFeAzc5CF-JS",
  "number": 2936,
  "title": "Provide `payloadAttributes` for block proposers in advance",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 3743113288,
      "node_id": "LA_kwDOCFeAzc7fG2BI",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/bellatrix",
      "name": "bellatrix",
      "color": "A906A4",
      "default": false,
      "description": "Required to support the Bellatrix Upgrade"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-01-20T04:54:38Z",
  "updated_at": "2022-03-09T03:20:21Z",
  "closed_at": "2022-03-09T03:20:21Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\n[`engine_forkchoiceUpdatedV1`]: https://github.com/ethereum/execution-apis/blob/main/src/engine/specification.md#engine_forkchoiceupdatedv1\r\n[`engine_getPayloadV1`]: https://github.com/ethereum/execution-apis/blob/main/src/engine/specification.md#engine_getpayloadv1\r\n\r\nAccording to the [execution API spec](https://github.com/ethereum/execution-apis/blob/main/src/engine/specification.md), consensus clients must call [`engine_forkchoiceUpdatedV1`][] (fcU) with a `payloadAttributes` that is non-`null` when the node expects to produce a block in the next slot. This gives the execution engine time to prepare the optimal set of transactions, before we request the payload.\r\n\r\nLighthouse is not presently sending the `payloadAttributes` in advance. Instead, it always ends up hitting the [fall-back path](https://github.com/sigp/lighthouse/blob/ef7351ddfecbb35cd23dde11835d58d4d4e689a8/beacon_node/execution_layer/src/lib.rs#L276-L300) which sends the fcU message immediately before the [`engine_getPayloadV1`][] call.\r\n\r\n## Mechanisms\r\n\r\nIn order to supply `payloadAttributes` in advance, we need the VC to call the `/eth/v1/validator/prepare_beacon_proposer`, an endpoint currently implemented in a [PR to the beacon-APIs repo](https://github.com/ethereum/beacon-APIs/pull/178).\r\n\r\nThe simplest implementation would be for the BN to immediately do an fcU call when it receives something on the `prepare_beacon_proposer` endpoint. However, I don't think that's how we should implement it. There's a whole bunch of edge-cases regarding re-orgs and timing assumptions, I think it's best if the VC just says \"hey I have this validator\" and then the BN takes care of issuing the right call at the right time. AFAIK, this is how all other clients are implementing it too.\r\n\r\nTo implement it properly, I think we should build a service in the BN that accepts `prepare_beacon_proposer` calls and then \"registers\" a `validator_index` as a local, potential block producer. Then, that service would issues the fcU with the appropriate `payloadAttributes` when it's some time (`t`) before the start of a slot. It would also be re-org aware and could make sure the execution engine is kept up-to-date relative to a changing head.\r\n\r\nThe API docs state:\r\n\r\n> The information supplied for each validator index will persist through the epoch in which the call is submitted and for a further two epochs after that, or until the beacon node restarts.\r\n\r\nSo, this service needs to track each validator for 2-3 epochs and then forget about it. That means that the VC will need to issue this call *at least* once every 2-3 epochs. I suggest we do it more frequently, perhaps every epoch or every slot.\r\n\r\n## Steps Required\r\n\r\nAs I see it, we need to do the following things:\r\n\r\n1. Add the mechanisms to the VC to poll the `prepare_beacon_proposer` with all its validators (that have validator indices) every slot/epoch/whatever.\r\n1. Add the service to the BN that can track the registered validator indices and issue the fcU calls at the appropriate times.\r\n    - *Note: we can call fcU on the EL whenever we want, we don't have to make sure we call it when our head changes. We can call it with the same head if we like.*\r\n1. Build tests",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/2936/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/2936/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1017122536",
    "html_url": "https://github.com/sigp/lighthouse/issues/2936#issuecomment-1017122536",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2936",
    "id": 1017122536,
    "node_id": "IC_kwDOCFeAzc48oA7o",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-20T05:01:40Z",
    "updated_at": "2022-01-20T05:01:40Z",
    "author_association": "MEMBER",
    "body": "I think this will interact significantly with https://github.com/sigp/lighthouse/issues/2883, and should possibly be implemented in the same PR.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1017122536/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1062514805",
    "html_url": "https://github.com/sigp/lighthouse/issues/2936#issuecomment-1062514805",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2936",
    "id": 1062514805,
    "node_id": "IC_kwDOCFeAzc4_VLB1",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-09T03:20:07Z",
    "updated_at": "2022-03-09T03:20:07Z",
    "author_association": "MEMBER",
    "body": "Resolved via #3043",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1062514805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
