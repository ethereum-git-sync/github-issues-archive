{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/927",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/927/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/927/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/927/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/927",
  "id": 582951594,
  "node_id": "MDU6SXNzdWU1ODI5NTE1OTQ=",
  "number": 927,
  "title": "Add UPnP support for Lighthouse",
  "user": {
    "login": "AgeManning",
    "id": 7454587,
    "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AgeManning",
    "html_url": "https://github.com/AgeManning",
    "followers_url": "https://api.github.com/users/AgeManning/followers",
    "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
    "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
    "organizations_url": "https://api.github.com/users/AgeManning/orgs",
    "repos_url": "https://api.github.com/users/AgeManning/repos",
    "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AgeManning/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647286,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODY=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "7057ff",
      "default": true,
      "description": "Good for newcomers"
    },
    {
      "id": 2336800125,
      "node_id": "MDU6TGFiZWwyMzM2ODAwMTI1",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/t%20Networking",
      "name": "t Networking",
      "color": "40E0D0",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "pawanjay176",
    "id": 9890508,
    "node_id": "MDQ6VXNlcjk4OTA1MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9890508?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pawanjay176",
    "html_url": "https://github.com/pawanjay176",
    "followers_url": "https://api.github.com/users/pawanjay176/followers",
    "following_url": "https://api.github.com/users/pawanjay176/following{/other_user}",
    "gists_url": "https://api.github.com/users/pawanjay176/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pawanjay176/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pawanjay176/subscriptions",
    "organizations_url": "https://api.github.com/users/pawanjay176/orgs",
    "repos_url": "https://api.github.com/users/pawanjay176/repos",
    "events_url": "https://api.github.com/users/pawanjay176/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pawanjay176/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "pawanjay176",
      "id": 9890508,
      "node_id": "MDQ6VXNlcjk4OTA1MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9890508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pawanjay176",
      "html_url": "https://github.com/pawanjay176",
      "followers_url": "https://api.github.com/users/pawanjay176/followers",
      "following_url": "https://api.github.com/users/pawanjay176/following{/other_user}",
      "gists_url": "https://api.github.com/users/pawanjay176/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pawanjay176/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pawanjay176/subscriptions",
      "organizations_url": "https://api.github.com/users/pawanjay176/orgs",
      "repos_url": "https://api.github.com/users/pawanjay176/repos",
      "events_url": "https://api.github.com/users/pawanjay176/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pawanjay176/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": {
    "url": "https://api.github.com/repos/sigp/lighthouse/milestones/3",
    "html_url": "https://github.com/sigp/lighthouse/milestone/3",
    "labels_url": "https://api.github.com/repos/sigp/lighthouse/milestones/3/labels",
    "id": 4917495,
    "node_id": "MDk6TWlsZXN0b25lNDkxNzQ5NQ==",
    "number": 3,
    "title": "v0.2.0",
    "description": null,
    "creator": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 24,
    "state": "open",
    "created_at": "2019-12-10T02:14:12Z",
    "updated_at": "2020-11-08T23:26:43Z",
    "due_on": null,
    "closed_at": null
  },
  "comments": 3,
  "created_at": "2020-03-17T11:41:02Z",
  "updated_at": "2020-10-20T11:36:17Z",
  "closed_at": "2020-10-20T11:36:17Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nAdding UPnP support will help grow our DHT by allowing NAT traversal for peers with UPnP supported routers. \r\n\r\nThe modification is relatively trivial, however searching for the gateway and modifying ports should be done asynchronously. ",
  "closed_by": {
    "login": "AgeManning",
    "id": 7454587,
    "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AgeManning",
    "html_url": "https://github.com/AgeManning",
    "followers_url": "https://api.github.com/users/AgeManning/followers",
    "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
    "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
    "organizations_url": "https://api.github.com/users/AgeManning/orgs",
    "repos_url": "https://api.github.com/users/AgeManning/repos",
    "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AgeManning/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/927/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/927/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/601518473",
    "html_url": "https://github.com/sigp/lighthouse/issues/927#issuecomment-601518473",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/927",
    "id": 601518473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTUxODQ3Mw==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-20T04:09:51Z",
    "updated_at": "2020-03-20T04:09:51Z",
    "author_association": "MEMBER",
    "body": "For this one, I think we can just use igd: https://docs.rs/igd/0.10.0/igd/\r\nI've tested this on my router and seems work fine. \r\nIt should be straight forward do something like their example here: https://github.com/sbstp/rust-igd/blob/master/examples/add_port.rs for both the libp2p tcp port and discovery udp port. \r\n\r\nI imagine we can run this in it's own thread. We don't need channels or shared memory as I don't think really care about the result (failed or not). If it succeeds, then the ports will be open externally, the local ENR sets the local TCP port regardless, see here: https://github.com/sigp/lighthouse/blob/enr-v0.2.0/beacon_node/eth2-libp2p/src/discovery/enr_helpers.rs#L86\r\n(Note, i'll merge this to v0.2.0 soon). \r\n\r\nSo if the UPnP is successful, when the node connects to others, discv5 will do it's magic and update the IP to the un-NAT'd external IP and UDP ports. \r\nIf it fails, then there was nothing we could do anyway (we could change ports, but I dont think we go down this path just yet). \r\n\r\nTherefore, I think it's sufficient to just spawn a thread, that takes a reference to a logger, and attempts to open the ports in the config. It should log failure or success, so at least the user knows. \r\n\r\nWe should also add a CLI option to disable UPnP support if people like. \r\n\r\nI imagine the best place to spawn the thread is somewhere that has access to `NetworkConfig`. I guess when the network starts up here: https://github.com/sigp/lighthouse/blob/enr-v0.2.0/beacon_node/eth2-libp2p/src/service.rs#L57\r\n\r\nShould able to use the info in `config` to give you all you need to try and open ports on UPnP in a thread from here. ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/601518473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/687545643",
    "html_url": "https://github.com/sigp/lighthouse/issues/927#issuecomment-687545643",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/927",
    "id": 687545643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NzU0NTY0Mw==",
    "user": {
      "login": "darcys22",
      "id": 2188604,
      "node_id": "MDQ6VXNlcjIxODg2MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2188604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darcys22",
      "html_url": "https://github.com/darcys22",
      "followers_url": "https://api.github.com/users/darcys22/followers",
      "following_url": "https://api.github.com/users/darcys22/following{/other_user}",
      "gists_url": "https://api.github.com/users/darcys22/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darcys22/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darcys22/subscriptions",
      "organizations_url": "https://api.github.com/users/darcys22/orgs",
      "repos_url": "https://api.github.com/users/darcys22/repos",
      "events_url": "https://api.github.com/users/darcys22/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darcys22/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-05T04:17:49Z",
    "updated_at": "2020-09-05T04:18:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've had a go at this at #1587 \r\n\r\nCould I request a review to see if this is on the right track?\r\n\r\nIn addition, would one make the function asynchronous using the executor parameter that is being passed around the service function?\r\n```\r\nimpl<TSpec: EthSpec> Service<TSpec> {\r\n    pub async fn new(\r\n        executor: environment::TaskExecutor,\r\n        config: &NetworkConfig,\r\n        enr_fork_id: EnrForkId,\r\n        log: &slog::Logger,\r\n    ) \r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/687545643/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/712787693",
    "html_url": "https://github.com/sigp/lighthouse/issues/927#issuecomment-712787693",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/927",
    "id": 712787693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjc4NzY5Mw==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-20T11:36:16Z",
    "updated_at": "2020-10-20T11:36:16Z",
    "author_association": "MEMBER",
    "body": "Resolved in #1587 ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/712787693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
