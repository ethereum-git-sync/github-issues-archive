{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/3613",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/3613/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/3613/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/3613/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/3613",
  "id": 1386987276,
  "node_id": "I_kwDOCFeAzc5Sq78M",
  "number": 3613,
  "title": "Improve beacon node failover in validator client [tracking issue]",
  "user": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647284,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODQ=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/enhancement",
      "name": "enhancement",
      "color": "a2eeef",
      "default": true,
      "description": "New feature or request"
    },
    {
      "id": 1232620456,
      "node_id": "MDU6TGFiZWwxMjMyNjIwNDU2",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/RFC",
      "name": "RFC",
      "color": "4aaa19",
      "default": false,
      "description": "Request for comment"
    },
    {
      "id": 1245875191,
      "node_id": "MDU6TGFiZWwxMjQ1ODc1MTkx",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/val-client",
      "name": "val-client",
      "color": "9cd6fc",
      "default": false,
      "description": "Relates to the validator client binary"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "macladson",
    "id": 58379419,
    "node_id": "MDQ6VXNlcjU4Mzc5NDE5",
    "avatar_url": "https://avatars.githubusercontent.com/u/58379419?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/macladson",
    "html_url": "https://github.com/macladson",
    "followers_url": "https://api.github.com/users/macladson/followers",
    "following_url": "https://api.github.com/users/macladson/following{/other_user}",
    "gists_url": "https://api.github.com/users/macladson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/macladson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/macladson/subscriptions",
    "organizations_url": "https://api.github.com/users/macladson/orgs",
    "repos_url": "https://api.github.com/users/macladson/repos",
    "events_url": "https://api.github.com/users/macladson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/macladson/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "macladson",
      "id": 58379419,
      "node_id": "MDQ6VXNlcjU4Mzc5NDE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58379419?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/macladson",
      "html_url": "https://github.com/macladson",
      "followers_url": "https://api.github.com/users/macladson/followers",
      "following_url": "https://api.github.com/users/macladson/following{/other_user}",
      "gists_url": "https://api.github.com/users/macladson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/macladson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/macladson/subscriptions",
      "organizations_url": "https://api.github.com/users/macladson/orgs",
      "repos_url": "https://api.github.com/users/macladson/repos",
      "events_url": "https://api.github.com/users/macladson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/macladson/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-09-27T02:41:30Z",
  "updated_at": "2023-05-12T10:30:12Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nI think the beacon node failover feature is in need of some love, particularly now that we are post-merge and it is complicated by the addition of the execution node.\r\n\r\nThere are several issues:\r\n\r\n- Beacon nodes continue to self-report their status as synced when the execution node goes offline. This means they will be used by validator clients to produce sub-optimal attestations.\r\n- Beacon nodes self-report their status as synced for [_eight epochs_](https://github.com/sigp/lighthouse/blob/01e84b71f524968f5b940fbd2fa31d29408b6581/beacon_node/http_api/src/lib.rs#L70-L75) after their internal sync state switches to syncing. Again this results in sub-optimal attestations.\r\n- Beacon nodes return nasty 500 internal server errors when the head is optimistic, e.g.\r\n\r\n```\r\nCRIT Error during attestation routine        slot: 4747474, committee_index: 11, error: \"All endpoints failed http://localhost:5052/ => RequestFailed(\"Failed to produce attestation data: ServerMessage(ErrorMessage { code: 500, message: \\\"UNHANDLED_ERROR: HeadBlockNotFullyVerified { beacon_block_root: 0xbef1f36d129ca41de0a2da31962f5cb5025262f8813c6be2448524fc75be9947, execution_status: Optimistic(0x93219f971e74377cb48ba8050f1f193390d0313afd23c8cc4b1e8a119fb32fa1) }\\\", stacktraces: [] })\")\"\r\n```\r\n\r\nThis error is probably handled _most_ gracefully by a VC with redundant beacon nodes, as it should failover to the next BN (need to double check this, the log above is from a node without failover BNs).\r\n\r\n## Option 1: Fail Fast\r\n\r\nOne way to address all of these issues would be to add a flag to the beacon node like `--fail-fast` which makes it report its status as unsynced more readily:\r\n\r\n- If the execution node is offline, report BN status as unsynced. Extension of https://github.com/sigp/lighthouse/pull/3428.\r\n- If the internal sync state is anything but fully synced, report sync status as unsynced (ignore `SYNC_TOLERANCE_EPOCHS`).\r\n\r\nThe downside of this approach is that it adds configuration complexity: most beacon nodes used for redundancy should be configured with `--fail-fast`, but _at least one_ beacon node per cluster should _not be_, in order to not cripple liveness in case of sync issues (which is what `SYNC_TOLERANCE_EPOCHS` is trying to guard against).\r\n\r\nThe `--fail-fast` solution may also still not fail fast enough for some users, Lighthouse will usually consider itself synced for a few epochs (2?) without any blocks, during which time attestations will _still_ miss.\r\n\r\n## Option 2: Quality Control\r\n\r\nRather than changing the behaviour of the beacon node, we could change the behaviour of the validator client to make it smarter about which beacon nodes to try first. Instead of using a binary \"synced\" or \"not synced\" differentiation the VC could use other data to make its choice, e.g. sync distance, optimistic status, execution layer online/offline status.\r\n\r\nThe complication with this approach is that we need to work within the confines of standard APIs provided by beacon nodes (which e.g. doesn't include EL status), and we need to avoid opening ourselves to attacks where an attacker tricks us into following their chain by proposing blocks closer to the current wall clock slot than the canonical chain.\r\n\r\nI think I have a preference for option 2 currently.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/3613/reactions",
    "total_count": 9,
    "+1": 6,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 3,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/3613/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1265284958",
    "html_url": "https://github.com/sigp/lighthouse/issues/3613#issuecomment-1265284958",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3613",
    "id": 1265284958,
    "node_id": "IC_kwDOCFeAzc5Larde",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-03T11:10:56Z",
    "updated_at": "2022-10-03T11:10:56Z",
    "author_association": "MEMBER",
    "body": "Related:\r\n\r\n- https://github.com/sigp/lighthouse/issues/3002. This switchback stickiness could be implemented as part of the \"quality\" assessment and switching mechanism.\r\n\r\nComplementary:\r\n\r\n- https://github.com/sigp/lighthouse/issues/3516. Publishing messages to all connected BNs is an orthogonal improvement that we could make alongside improving the current lightweight fallback system.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1265284958/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1545530292",
    "html_url": "https://github.com/sigp/lighthouse/issues/3613#issuecomment-1545530292",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3613",
    "id": 1545530292,
    "node_id": "IC_kwDOCFeAzc5cHuu0",
    "user": {
      "login": "jmcruz1983",
      "id": 15966694,
      "node_id": "MDQ6VXNlcjE1OTY2Njk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/15966694?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcruz1983",
      "html_url": "https://github.com/jmcruz1983",
      "followers_url": "https://api.github.com/users/jmcruz1983/followers",
      "following_url": "https://api.github.com/users/jmcruz1983/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcruz1983/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcruz1983/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcruz1983/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcruz1983/orgs",
      "repos_url": "https://api.github.com/users/jmcruz1983/repos",
      "events_url": "https://api.github.com/users/jmcruz1983/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcruz1983/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T10:30:12Z",
    "updated_at": "2023-05-12T10:30:12Z",
    "author_association": "NONE",
    "body": "@michaelsproul \r\nwhat about implementing following logic on the `/eth/v1/node/health` endpoint:\r\n- when execution node is syncing then returning unhealthy (something like 4xx or 5xx http error code)\r\n- using that as readiness probe in k8s would stop sending traffic to current beacon meanwhile execution node is syncing\r\nwdyt? ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1545530292/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
