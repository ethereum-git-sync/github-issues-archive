{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/2069",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/2069/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/2069/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/2069/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/2069",
  "id": 759836607,
  "node_id": "MDU6SXNzdWU3NTk4MzY2MDc=",
  "number": 2069,
  "title": "Enable Doppleganger Detection to reduce the likelihood of slashing",
  "user": {
    "login": "superphiz",
    "id": 51464737,
    "node_id": "MDQ6VXNlcjUxNDY0NzM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/51464737?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/superphiz",
    "html_url": "https://github.com/superphiz",
    "followers_url": "https://api.github.com/users/superphiz/followers",
    "following_url": "https://api.github.com/users/superphiz/following{/other_user}",
    "gists_url": "https://api.github.com/users/superphiz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/superphiz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/superphiz/subscriptions",
    "organizations_url": "https://api.github.com/users/superphiz/orgs",
    "repos_url": "https://api.github.com/users/superphiz/repos",
    "events_url": "https://api.github.com/users/superphiz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/superphiz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2336798682,
      "node_id": "MDU6TGFiZWwyMzM2Nzk4Njgy",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/database",
      "name": "database",
      "color": "C01C9D",
      "default": false,
      "description": ""
    },
    {
      "id": 2490305065,
      "node_id": "MDU6TGFiZWwyNDkwMzA1MDY1",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/A1",
      "name": "A1",
      "color": "223184",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2020-12-08T22:34:15Z",
  "updated_at": "2021-08-02T02:04:42Z",
  "closed_at": "2021-08-02T02:04:42Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nStakers with the best intentions are inclined to create redundant staking solutions to reduce the risk of downtime. These redundant solutions may involve copies of validator keys on multiple machines that can lead to accidental slashing.\r\n\r\n## Version\r\n\r\nN/A\r\n\r\n## Present Behaviour\r\n\r\nslashing protection is enabled on client running on a single machine but not to detect attestations from keys being loaded and prepared for validating.\r\n\r\n## Expected Behaviour\r\n\r\nThe default behavior of the validator upon start should be to look/listen for attestations from the loaded key indexes for a reasonable period before submitting new attestations. The validator should pause and warn the user if attestations are found that could cause a slashable event.\r\n\r\n## Steps to resolve\r\n\r\nInclude doppelganger detection in the default behavior of the validator client.\r\n",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/2069/reactions",
    "total_count": 5,
    "+1": 5,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/2069/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/741154567",
    "html_url": "https://github.com/sigp/lighthouse/issues/2069#issuecomment-741154567",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2069",
    "id": 741154567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTE1NDU2Nw==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-08T22:40:16Z",
    "updated_at": "2020-12-08T22:40:16Z",
    "author_association": "NONE",
    "body": "Also suggest that it could be override with a flag `--override-doppleganger-detection-UNSAFE`\r\n\r\nCool thing is it might promote education. You might wonder why you take a couple of epochs to start making attestations and look it up. You then learn about the flag and about slashing risks",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/741154567/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/741277797",
    "html_url": "https://github.com/sigp/lighthouse/issues/2069#issuecomment-741277797",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2069",
    "id": 741277797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTI3Nzc5Nw==",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-09T00:04:32Z",
    "updated_at": "2020-12-09T00:04:32Z",
    "author_association": "MEMBER",
    "body": "I like the name ;)\r\n\r\nI agree this is something we should implement ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/741277797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/741488979",
    "html_url": "https://github.com/sigp/lighthouse/issues/2069#issuecomment-741488979",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2069",
    "id": 741488979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTQ4ODk3OQ==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-09T02:41:44Z",
    "updated_at": "2020-12-09T02:41:44Z",
    "author_association": "MEMBER",
    "body": "Sounds good to me. I believe @dankrad also proposed a similar (identical?) scheme prior to mainnet but we never found the time to implement.\r\n\r\nSome misc points to note:\r\n\r\n- By default, BNs don't listen to all the attestation subnets so they're going to be restricted to attestations that are either on-chain or published as aggregates on the beacon subnet. I don't think this is a major issue.\r\n- Lighthouse has the ability to arbitrarily stop/start validators whilst the process is running (via the API). We would need to consider this and perhaps trigger the delay on a per-validator-started basis, rather than per-entire-validator-client-started.\r\n- I'm not certain on the best way to get information about attestations through to the VC.\r\n  - The [eventstream API](https://ethereum.github.io/eth2.0-APIs/#/Events/eventstream) was my first thought, but it provides `Attestation` not `IndexedAttestation`. Determining actual validator indices from an `Attestation::aggregation_bits` in the VC is not feasible, IMO. We could potentially change the API to return an `IndexedAttestation`, but that's a bit of a reach.\r\n  - We could add a special BN endpoint to say \"have you seen this validator at all in the past 2 epochs?\". We're well suited to do this already (notably, we can indicate *if* the validator attested, but not *what* the validator attested to). There's some edge-cases here with a newly-started BN though.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/741488979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/741850625",
    "html_url": "https://github.com/sigp/lighthouse/issues/2069#issuecomment-741850625",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2069",
    "id": 741850625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTg1MDYyNQ==",
    "user": {
      "login": "djrtwo",
      "id": 1433595,
      "node_id": "MDQ6VXNlcjE0MzM1OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1433595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrtwo",
      "html_url": "https://github.com/djrtwo",
      "followers_url": "https://api.github.com/users/djrtwo/followers",
      "following_url": "https://api.github.com/users/djrtwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions",
      "organizations_url": "https://api.github.com/users/djrtwo/orgs",
      "repos_url": "https://api.github.com/users/djrtwo/repos",
      "events_url": "https://api.github.com/users/djrtwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrtwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-09T15:35:18Z",
    "updated_at": "2020-12-09T15:35:18Z",
    "author_association": "NONE",
    "body": "`beacon/state/validators/{index}/online`\r\n`beacon/state/validators/{index}/online?epoch_lookback=3`\r\n\r\nSomething like the above, where \"online\" is defined as having a message included on chain in the past 2 epochs (attestation, maybe block). Not sure if `epoch_lookback` is good or not. Arbitrary lookback on this can be expensive.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/741850625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/751335717",
    "html_url": "https://github.com/sigp/lighthouse/issues/2069#issuecomment-751335717",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2069",
    "id": 751335717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTMzNTcxNw==",
    "user": {
      "login": "m0n5t3r",
      "id": 183823,
      "node_id": "MDQ6VXNlcjE4MzgyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/183823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m0n5t3r",
      "html_url": "https://github.com/m0n5t3r",
      "followers_url": "https://api.github.com/users/m0n5t3r/followers",
      "following_url": "https://api.github.com/users/m0n5t3r/following{/other_user}",
      "gists_url": "https://api.github.com/users/m0n5t3r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m0n5t3r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m0n5t3r/subscriptions",
      "organizations_url": "https://api.github.com/users/m0n5t3r/orgs",
      "repos_url": "https://api.github.com/users/m0n5t3r/repos",
      "events_url": "https://api.github.com/users/m0n5t3r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m0n5t3r/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-26T08:44:16Z",
    "updated_at": "2020-12-26T08:44:16Z",
    "author_association": "NONE",
    "body": "Not sure how hard it would be, but the ideal solution would be some sort of communication channel between validators with the same key, so they can either\r\n\r\n* fire in a round-robin fashion (the node that goes down will still miss its attestations, but you only lose 1/n instead of n attestations), or \r\n* vote / elect the one that should be active (this would require an odd number of validators for HA, and would still miss attestations when the active node goes down, while a new one gets elected, but this should be fast enough to incur minimal penalties)\r\n\r\nPresumably the mode can be selected based on the number of nodes, and the latter can be specified on startup via a parameter.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/751335717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/751872377",
    "html_url": "https://github.com/sigp/lighthouse/issues/2069#issuecomment-751872377",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2069",
    "id": 751872377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTg3MjM3Nw==",
    "user": {
      "login": "dankrad",
      "id": 6130607,
      "node_id": "MDQ6VXNlcjYxMzA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6130607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dankrad",
      "html_url": "https://github.com/dankrad",
      "followers_url": "https://api.github.com/users/dankrad/followers",
      "following_url": "https://api.github.com/users/dankrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dankrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dankrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dankrad/subscriptions",
      "organizations_url": "https://api.github.com/users/dankrad/orgs",
      "repos_url": "https://api.github.com/users/dankrad/repos",
      "events_url": "https://api.github.com/users/dankrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dankrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-28T21:38:20Z",
    "updated_at": "2020-12-28T21:38:20Z",
    "author_association": "NONE",
    "body": "> communication channel between validators with the same key\r\n\r\nThere is no guaranteed channel to reach all validators with one key, and I would think trying to construct one would increase the validator privacy problems by multitudes. Not to mention that it would be quite complex.\r\n\r\nThe solution suggested here can be implemented in a few extra lines of code and already gives a pretty good protection.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/751872377/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/890655960",
    "html_url": "https://github.com/sigp/lighthouse/issues/2069#issuecomment-890655960",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2069",
    "id": 890655960,
    "node_id": "IC_kwDOCFeAzc41FlTY",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-02T02:04:41Z",
    "updated_at": "2021-08-02T02:04:41Z",
    "author_association": "MEMBER",
    "body": "Resolved via #2230 :tada: ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/890655960/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
