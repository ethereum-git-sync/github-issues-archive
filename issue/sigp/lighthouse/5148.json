{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/5148",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/5148/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/5148/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/5148/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/5148",
  "id": 2107074689,
  "node_id": "I_kwDOCFeAzc59l2iB",
  "number": 5148,
  "title": "Super batch verify same-subnet attestations",
  "user": {
    "login": "dapplion",
    "id": 35266934,
    "node_id": "MDQ6VXNlcjM1MjY2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dapplion",
    "html_url": "https://github.com/dapplion",
    "followers_url": "https://api.github.com/users/dapplion/followers",
    "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
    "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
    "organizations_url": "https://api.github.com/users/dapplion/orgs",
    "repos_url": "https://api.github.com/users/dapplion/repos",
    "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dapplion/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2024-01-30T06:46:10Z",
  "updated_at": "2024-01-30T06:46:11Z",
  "closed_at": null,
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nLighthouse batch verifies attestations and other messages into collections of signature sets, by combining _different_ messages into a linear combination. \r\n\r\n$$\r\nS⋆ = r_1 S_1 + ⋯ r_n S_n\r\n$$\r\n\r\nThis saves at the limit 50% of pairings. The optimization is explained in detailed here https://ethresear.ch/t/security-of-bls-batch-verification/10748\r\n\r\nHowever, we can do better. When a node is an aggregator, it receives ~439 individual attestations that sign over the same message. Since its the same message, there's no need to multiply each signature / message tuple by a random integer just perform your classic 'old FastAggregateVerify and pay a single pairing for those 439 messages. \r\n\r\n___Epic savings___\r\n\r\n## How to \r\n\r\nSome layer of the stack must group to-verify messages by signing root. \r\n1. The network processor queues or groups attestations by AttestationData, then sends collections of the same data to the super batch verify function\r\n2. Some intermediary layer in the BLS verifier that buffers messages and groups then by signing root, independent of the message represents. It's a more generic approach, but only subnet attestations are worth grouping this way. Buffering also adds latency.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/5148/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/5148/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
