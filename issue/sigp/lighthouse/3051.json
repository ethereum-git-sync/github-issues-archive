{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/3051",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/3051/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/3051/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/3051/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/3051",
  "id": 1155964083,
  "node_id": "I_kwDOCFeAzc5E5pyz",
  "number": 3051,
  "title": "Fix handling of `api-token.txt` and `validator_key_cache.json` when disk is full",
  "user": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647281,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODE=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 985647286,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODY=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "7057ff",
      "default": true,
      "description": "Good for newcomers"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-03-01T23:42:43Z",
  "updated_at": "2022-03-10T21:31:35Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nUsers have reported the validator client being unable to start after running out of disk space due to the `api-token.txt` or `validator_key_cache.json` file being truncated/empty. I think this is a variant of an old issue that affected the validator definitions file, and was fixed by using atomic writes: https://github.com/sigp/lighthouse/issues/2159\r\n\r\nStrangely, we already seem to be using atomic writes for the key cache, so this new issue may require something beyond that :thinking:. The user who reported it was running under Docker, and it's possible our current atomic write function doesn't work on Docker's volumes for some reason (do they behave like network drives?). \r\n\r\n## Steps to resolve\r\n\r\nEnsure that `api-token.txt` and `validator_key_cache.json` are written using atomic writes (`write_file_via_temporary`).\r\n\r\nAdditionally, we could just delete and regenerate both files if they are found to be invalid, logging a warning if this occurs.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/3051/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/3051/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1064523234",
    "html_url": "https://github.com/sigp/lighthouse/issues/3051#issuecomment-1064523234",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3051",
    "id": 1064523234,
    "node_id": "IC_kwDOCFeAzc4_c1Xi",
    "user": {
      "login": "tthebst",
      "id": 44725942,
      "node_id": "MDQ6VXNlcjQ0NzI1OTQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/44725942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tthebst",
      "html_url": "https://github.com/tthebst",
      "followers_url": "https://api.github.com/users/tthebst/followers",
      "following_url": "https://api.github.com/users/tthebst/following{/other_user}",
      "gists_url": "https://api.github.com/users/tthebst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tthebst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tthebst/subscriptions",
      "organizations_url": "https://api.github.com/users/tthebst/orgs",
      "repos_url": "https://api.github.com/users/tthebst/repos",
      "events_url": "https://api.github.com/users/tthebst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tthebst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-10T21:31:35Z",
    "updated_at": "2022-03-10T21:31:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "This seems to be hard to reproduce but looking at `write_file_via_temporary ` it seems that it doesn't actually flush data to disk. Something similar to [this](https://doc.rust-lang.org/std/fs/struct.File.html#method.flush) should be done. But I'm not sure that this actually solves the issue.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1064523234/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
