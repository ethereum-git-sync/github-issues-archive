{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/886",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/886/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/886/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/886/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/886",
  "id": 574670868,
  "node_id": "MDU6SXNzdWU1NzQ2NzA4Njg=",
  "number": 886,
  "title": "Test suite for attestation service timing",
  "user": {
    "login": "AgeManning",
    "id": 7454587,
    "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AgeManning",
    "html_url": "https://github.com/AgeManning",
    "followers_url": "https://api.github.com/users/AgeManning/followers",
    "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
    "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
    "organizations_url": "https://api.github.com/users/AgeManning/orgs",
    "repos_url": "https://api.github.com/users/AgeManning/repos",
    "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AgeManning/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647284,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODQ=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/enhancement",
      "name": "enhancement",
      "color": "a2eeef",
      "default": true,
      "description": "New feature or request"
    },
    {
      "id": 985647286,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODY=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "7057ff",
      "default": true,
      "description": "Good for newcomers"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2020-03-03T13:32:52Z",
  "updated_at": "2020-05-13T13:38:19Z",
  "closed_at": "2020-05-13T13:38:19Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nThe naive attestation aggregation strategy involves quite a bit of timing logic. Depending on connected validators, a beacon node needs to subscribe to a set of long-lived subnets for a period of time. On top of this, the node needs to subscribe, unsubscribe and search for new peers when a validator needs to attest on a specific slot. \r\n\r\nThere is significant logic and edge cases that can occur here. Getting the timing of these events wrong could mean a validator missing attestations and loss of money. \r\n\r\nA collection of tests should be built on the `attester_service` to ensure the it is behaving as expected.\r\n\r\nIf you are looking at picking this issue up, hit up @AgeManning either here or our discord for further direction",
  "closed_by": {
    "login": "AgeManning",
    "id": 7454587,
    "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AgeManning",
    "html_url": "https://github.com/AgeManning",
    "followers_url": "https://api.github.com/users/AgeManning/followers",
    "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
    "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
    "organizations_url": "https://api.github.com/users/AgeManning/orgs",
    "repos_url": "https://api.github.com/users/AgeManning/repos",
    "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AgeManning/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/886/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/886/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/596141095",
    "html_url": "https://github.com/sigp/lighthouse/issues/886#issuecomment-596141095",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/886",
    "id": 596141095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjE0MTA5NQ==",
    "user": {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-07T21:51:16Z",
    "updated_at": "2020-03-07T21:51:16Z",
    "author_association": "COLLABORATOR",
    "body": "Hey, I'd be interested in picking this up.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/596141095/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/596320564",
    "html_url": "https://github.com/sigp/lighthouse/issues/886#issuecomment-596320564",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/886",
    "id": 596320564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjMyMDU2NA==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-09T03:58:53Z",
    "updated_at": "2020-03-09T04:05:14Z",
    "author_association": "MEMBER",
    "body": "Hey @realbigsean, thanks for the interest and the help!\r\n\r\nThis I've tried to make fairly localised and is a good start to learning some localised sections of the code base. \r\n\r\nThis issue in particular deals with an object I've called the `attester_service`. This currently exists on the `naive_attestation_aggregation` branch (which I will clean up so that tests can run fine on this branch). \r\n\r\nThe `attestation_service` can be found here: https://github.com/sigp/lighthouse/blob/naive-attestation-aggregation/beacon_node/network/src/attestation_service/mod.rs\r\n\r\nIn it's current (incomplete) form it has a single public function: https://github.com/sigp/lighthouse/blob/naive-attestation-aggregation/beacon_node/network/src/attestation_service/mod.rs#L115\r\n\r\nThis takes in a list of subscriptions then builds various timeouts for events that need to happen. The attester_service then needs to be regularly poll'd in order for the events to be emitted. \r\n\r\nI imagine there are a few bugs in the current implentation, and it would be nice to find them by building some tests, that create an `attestation_service` give it a few subscriptions and see if it outputs events as expected. \r\n\r\nTo do this, we need to first create the service. This can be done with a dummy BeaconChain and NetworkGlobals. I'd recommend looking at these tests as an example of how to build a dummy beacon chain: https://github.com/sigp/lighthouse/blob/naive-attestation-aggregation/beacon_node/network/src/service/tests.rs#L38\r\nAnd a NetworkGlobals can just be created with a random peer id, i.e PeerId::random()\r\n\r\nNext, in order to do some tests, I need to explain the logic of what this is supposed to be doing. \r\n\r\nWhen a validator connects to the beacon node, it looks two epochs in advance to see when it needs to submit an attestation. Note that a validator client can have many validators, so there could be many subscriptions, ultimately in this service you will just see a list of subscriptions for all kinds of validators and they come in at assorted times. \r\n\r\nThe general premise is that validators on a given slot, need to listen and obtain attestations from a particular gossipsub topic. This means the validator needs to search for peers that may be on this subnet, connect to them, subscribe to the topics and then unsubscribe after the slot. The discovery needs to happen no more than 1 epoch in advance and we should subscribe 1/3 of a slot prior to the slot (to allow for the subscription to reach our peers). We should then unsubscribe from the slot. \r\n\r\nThe above is the general principle. However to complicate things further, for each validator connected, the beacon node needs to subscribe to `random_subnets_per_validator` for a long-lived time `epochs_per_random_subnet_subscription`. See here: https://github.com/ethereum/eth2.0-specs/blob/dev/specs/phase0/validator.md#phase-0-attestation-subnet-stability for the spec. \r\n\r\nThere are only 64 subnets. So if 64 validators are connected, we should be subscribed to all subnets and shouldn't disconnect from any. The logic here should also account for the case that if we are already subscribed to a long-lived subnet, it shouldn't need to discover new peers or send a subscription request. \r\n\r\nAs there is quite a bit of logic going on here, some thought about what to test should also be considered. Some initial things to get started are some of the logic cases I mentioned above plus:\r\n- A new validator subscription should create a subscription to a long-lived subnet (if there are any left, and not if we are already subscribed to everything)\r\n- subscriptions for a subnet that is not long-lived should unsubscribe after a slot\r\n- If all local subscriptions are complete, we should only be subscribed to `random_subnet_per_validator` * `seen_validator` subnets. i.e we have unsubscribed from all unnecessary ones\r\n- Two subscriptions for the same slot, subnet should not produce multiple requests for discovery/subscription\r\n- Subscriptions for consecutive slots on the same subnet should not subscribe, unsubscribe then re-subscribe. I.e we should just stay connected to the subnet for consecutive slots. This might need to be tested for not just two, perhaps three. \r\n\r\nPossibly a lot more, but this might do to start it off. \r\n\r\nLet me know if you need help starting or building a framework to start the testing.\r\n\r\nWe're probably going to need to adjust the times, and slot definition to make the tests run faster than using realistic times. We can deal with this when we get to it i guess",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/596320564/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/597438059",
    "html_url": "https://github.com/sigp/lighthouse/issues/886#issuecomment-597438059",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/886",
    "id": 597438059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzQzODA1OQ==",
    "user": {
      "login": "realbigsean",
      "id": 5160426,
      "node_id": "MDQ6VXNlcjUxNjA0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5160426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realbigsean",
      "html_url": "https://github.com/realbigsean",
      "followers_url": "https://api.github.com/users/realbigsean/followers",
      "following_url": "https://api.github.com/users/realbigsean/following{/other_user}",
      "gists_url": "https://api.github.com/users/realbigsean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realbigsean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realbigsean/subscriptions",
      "organizations_url": "https://api.github.com/users/realbigsean/orgs",
      "repos_url": "https://api.github.com/users/realbigsean/repos",
      "events_url": "https://api.github.com/users/realbigsean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realbigsean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-11T04:27:02Z",
    "updated_at": "2020-03-11T04:27:02Z",
    "author_association": "COLLABORATOR",
    "body": "Thanks for the detailed explanation! I've started working on this and will let you know when I have some basic scenarios working, or if I run into any issues.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/597438059/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/627620123",
    "html_url": "https://github.com/sigp/lighthouse/issues/886#issuecomment-627620123",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/886",
    "id": 627620123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNzYyMDEyMw==",
    "user": {
      "login": "divagant-martian",
      "id": 26765164,
      "node_id": "MDQ6VXNlcjI2NzY1MTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/26765164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/divagant-martian",
      "html_url": "https://github.com/divagant-martian",
      "followers_url": "https://api.github.com/users/divagant-martian/followers",
      "following_url": "https://api.github.com/users/divagant-martian/following{/other_user}",
      "gists_url": "https://api.github.com/users/divagant-martian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/divagant-martian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/divagant-martian/subscriptions",
      "organizations_url": "https://api.github.com/users/divagant-martian/orgs",
      "repos_url": "https://api.github.com/users/divagant-martian/repos",
      "events_url": "https://api.github.com/users/divagant-martian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/divagant-martian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-12T21:57:32Z",
    "updated_at": "2020-05-12T21:57:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this one can be closed?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/627620123/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/627992562",
    "html_url": "https://github.com/sigp/lighthouse/issues/886#issuecomment-627992562",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/886",
    "id": 627992562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNzk5MjU2Mg==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-13T13:38:19Z",
    "updated_at": "2020-05-13T13:38:19Z",
    "author_association": "MEMBER",
    "body": "Yep, resolved in #1070",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/627992562/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
