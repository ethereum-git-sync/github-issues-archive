{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/2557",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/2557/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/2557/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/2557/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/2557",
  "id": 985837083,
  "node_id": "MDU6SXNzdWU5ODU4MzcwODM=",
  "number": 2557,
  "title": "Feature Request: simpler and safer workflow to move validators from one lighthouse vc to another",
  "user": {
    "login": "winksaville",
    "id": 1024284,
    "node_id": "MDQ6VXNlcjEwMjQyODQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1024284?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/winksaville",
    "html_url": "https://github.com/winksaville",
    "followers_url": "https://api.github.com/users/winksaville/followers",
    "following_url": "https://api.github.com/users/winksaville/following{/other_user}",
    "gists_url": "https://api.github.com/users/winksaville/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/winksaville/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/winksaville/subscriptions",
    "organizations_url": "https://api.github.com/users/winksaville/orgs",
    "repos_url": "https://api.github.com/users/winksaville/repos",
    "events_url": "https://api.github.com/users/winksaville/events{/privacy}",
    "received_events_url": "https://api.github.com/users/winksaville/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2021-09-01T23:38:14Z",
  "updated_at": "2021-10-05T14:44:26Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nThere should be a workflow to move one or more validators from one lighthouse vc to another. This workflow should minimize missed attestations, ideally zero, and should make all best attempts to guarantee no slashing.\r\n\r\n## Version\r\n\r\nv1.5.1-stable\r\n\r\n## Present Behavior\r\n\r\nAssume I have two lighthouse vc instances running on the same or different computers, VC1 and VC2. Each with a different set of enabled validators in their respective validator_definitions.yml file. I want to move a subset of the validators from VC1 to VC2. To do so I have to perform the following steps:\r\n\r\n1. Stop VC1.\r\n2. Edit VC1 valdiator_definitions.yml and disable all validators that are to be moved to VC2\r\n3. Export VC1 slashing protection data.\r\n4. Start VC1.\r\n5. Start count down timer for 2 epochs (approx 13 min)\r\n6. Stop VC2.\r\n7. If the validators from VC1 do not exist in VC2 validator_definitions.yml then import them to VC2.\r\n8. Edit VC2 validator_definitions.yml and **ENABLE** the validators that are to be moved from VC1 to VC2 and leave all current VC2 validators enabled.\r\n9. Import the slashing protection data exported in step 3 to VC2.\r\n10. Edit VC2 validator_definitions.yml and **DISABLE** only the validators that are to be moved from VC1 to VC2.\r\n11. Start VC2.\r\n12. Edit VC2 validator_definitions.yml and **ENABLE** the validators that are to be moved from VC1 to VC2.\r\n11. Wait until timer from step 5 has counted down to zero.\r\n12. Restart VC2 (i.e. stop VC2 and then start VC2).\r\n13. The validators will now be running on VC2 and if no mistakes were made in the above steps \"no slashings** will occur. But there will have been a number of missed attestations that would be unnecessary in an ideal case.\r\n\r\n## Expected Behavior\r\n\r\nIdeally, the necessary steps should be able to be accomplished by issuing a single command specifying source VC, destination VC and a list of validators to move. That command should be able handle all details as specified above and atomically move the validators without user intervention. Plus, the there should be no missed attestations or slashings.\r\n\r\nIf the ideal case is not possible than the next best solution is that the only missed attestations would be for those validators that actually moved and only a minimal possibility of slashings.\r\n\r\n## Steps to resolve\r\n\r\nI'm sure there is a non-trivial amount of work to do, but based on feedback from a question I posted on discord, https://discord.com/channels/605577013327167508/710978433823277099/882429074436407357,  @michaelsproul suggests it might be possible.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/2557/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/2557/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/919590689",
    "html_url": "https://github.com/sigp/lighthouse/issues/2557#issuecomment-919590689",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2557",
    "id": 919590689,
    "node_id": "IC_kwDOCFeAzc42z9ch",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-14T23:54:07Z",
    "updated_at": "2021-09-14T23:54:07Z",
    "author_association": "MEMBER",
    "body": "I think this is a great idea and a good candidate for inclusion in the standard validator client API being developed (https://github.com/ethereum/beacon-APIs/pull/151).\r\n\r\nOn the implementation side, there are a few things that spring to mind:\r\n\r\n1. We should fix issues with false positives on import: https://github.com/sigp/lighthouse/issues/2419. I'll start on that this week.\r\n2. We need to restructure the slashing protection database internals so that it supports exporting a subset of validators.\r\n3. We should spec out the `/import` and `/export` end points, describing the structure of requests/responses and the guarantees e.g. that export should atomically disable the selected validators and return a JSON object with keystores _and_ EIP-3076 slashing protection data.\r\n3. We could add a prototype implementation under the `/lighthouse/` prefix until our proposal is accepted into the standard API\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/919590689/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/932838869",
    "html_url": "https://github.com/sigp/lighthouse/issues/2557#issuecomment-932838869",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2557",
    "id": 932838869,
    "node_id": "IC_kwDOCFeAzc43mf3V",
    "user": {
      "login": "winksaville",
      "id": 1024284,
      "node_id": "MDQ6VXNlcjEwMjQyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winksaville",
      "html_url": "https://github.com/winksaville",
      "followers_url": "https://api.github.com/users/winksaville/followers",
      "following_url": "https://api.github.com/users/winksaville/following{/other_user}",
      "gists_url": "https://api.github.com/users/winksaville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winksaville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winksaville/subscriptions",
      "organizations_url": "https://api.github.com/users/winksaville/orgs",
      "repos_url": "https://api.github.com/users/winksaville/repos",
      "events_url": "https://api.github.com/users/winksaville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winksaville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-03T00:20:07Z",
    "updated_at": "2021-10-03T00:20:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "A [short discussion on discord](https://discord.com/channels/605577013327167508/605577013331361793/893959792652083230) it was mentioned an API might look something like:\r\n```\r\nstruct ValidtatorInfo {\r\n  ValidatorPubkey, // Maybe Kestore has ValidatorPubkey ???\r\n  Keystore,\r\n  Password,\r\n  Interchange,\r\n  ...\r\n}\r\n\r\nstopValidators(vlist: Vec<ValidatorPubkey>) -> Result<Vec<ValidatorInfo>, Error>;\r\nstartValidators(Vec<ValidatorInfo>) -> Vec<(ValidatorPubkey, Result<(), Error>)>;\r\n```\r\nNote; the `Vec<ValidatorInfo>` passed to `startValidators` is not necessarily the same as returned by `stopValidators` as the entity moving validators may be moving them among a set of Validator Clients.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/932838869/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/934135616",
    "html_url": "https://github.com/sigp/lighthouse/issues/2557#issuecomment-934135616",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2557",
    "id": 934135616,
    "node_id": "IC_kwDOCFeAzc43rcdA",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-05T07:19:05Z",
    "updated_at": "2021-10-05T07:19:05Z",
    "author_association": "MEMBER",
    "body": "A standard API has been specced by Dapplion that would be suitable for our use-case.\r\n\r\nAs noted [in my review](https://github.com/ethereum/beacon-APIs/pull/151#pullrequestreview-770798959), it is slightly different from the original vision described here in that it _does not_ support exporting the keystores or extracting them from the validator. I think we can still make the atomic migrate work by having the CLI coordinator read the keystores from disk (possibly from the Lighthouse datadir, or elsewhere).",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/934135616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/934477669",
    "html_url": "https://github.com/sigp/lighthouse/issues/2557#issuecomment-934477669",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2557",
    "id": 934477669,
    "node_id": "IC_kwDOCFeAzc43sv9l",
    "user": {
      "login": "winksaville",
      "id": 1024284,
      "node_id": "MDQ6VXNlcjEwMjQyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winksaville",
      "html_url": "https://github.com/winksaville",
      "followers_url": "https://api.github.com/users/winksaville/followers",
      "following_url": "https://api.github.com/users/winksaville/following{/other_user}",
      "gists_url": "https://api.github.com/users/winksaville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winksaville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winksaville/subscriptions",
      "organizations_url": "https://api.github.com/users/winksaville/orgs",
      "repos_url": "https://api.github.com/users/winksaville/repos",
      "events_url": "https://api.github.com/users/winksaville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winksaville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-05T14:44:26Z",
    "updated_at": "2021-10-05T14:44:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "My knee jerk reaction is that we can support the standard API but create a private API that does the complete job.\r\n\r\nYour point about security is very prudent, I'd suggest that all of API's require a separate PKI keypair to be used to establish a connection. Of course a user can always use an SSH tunnel, but I think having it built-in would be preferred.\r\n\r\nNote: These are the opinion of a neophyte :)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/934477669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
