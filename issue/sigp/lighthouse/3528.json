{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/3528",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/3528/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/3528/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/3528/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/3528",
  "id": 1356266509,
  "node_id": "I_kwDOCFeAzc5Q1vwN",
  "number": 3528,
  "title": "Return `InvalidToken` only for jwt token errors",
  "user": {
    "login": "pawanjay176",
    "id": 9890508,
    "node_id": "MDQ6VXNlcjk4OTA1MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9890508?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pawanjay176",
    "html_url": "https://github.com/pawanjay176",
    "followers_url": "https://api.github.com/users/pawanjay176/followers",
    "following_url": "https://api.github.com/users/pawanjay176/following{/other_user}",
    "gists_url": "https://api.github.com/users/pawanjay176/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pawanjay176/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pawanjay176/subscriptions",
    "organizations_url": "https://api.github.com/users/pawanjay176/orgs",
    "repos_url": "https://api.github.com/users/pawanjay176/repos",
    "events_url": "https://api.github.com/users/pawanjay176/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pawanjay176/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-08-30T20:27:35Z",
  "updated_at": "2022-09-15T14:25:20Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nCurrently, we return the `InvalidToken` execution endpoint error if the HTTP error code is 401 or 403. However, execution clients can return jwt errors for other types of errors as well (e.g. incorrectly set vhosts on geth) which might be potentially confusing to debug.\r\n\r\nAlso, different ELs return different errors codes/responses for jwt errors:\r\n1. geth returns 403 with a a response \"missing token\" \"invalid signature\"\r\n2. nethermind returns a 200 with a valid json rpc response like `{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32700,\"message\":\"Authentication error\"},\"id\":null}` \r\n3. besu returns a 403 with valid json rpc response like `{\r\n  \"jsonrpc\": \"2.0\",\r\n  \"id\": null,\r\n  \"error\": {\r\n    \"code\": -40100,\r\n    \"message\": \"Unauthorized\"\r\n  }\r\n}`\r\n\r\n## Expected behaviour\r\nFix the error response in lighthouse to return `InvalidToken` only for actual jwt errors.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/3528/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/3528/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1232550312",
    "html_url": "https://github.com/sigp/lighthouse/issues/3528#issuecomment-1232550312",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3528",
    "id": 1232550312,
    "node_id": "IC_kwDOCFeAzc5Jdzmo",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-31T07:12:02Z",
    "updated_at": "2022-08-31T07:12:02Z",
    "author_association": "MEMBER",
    "body": "> Fix the error response in lighthouse to return InvalidToken only for actual jwt errors.\r\n\r\nWhat do you mean by an _actual_ JWT error? Ideally I think we should log the error message if we get a 401/403 which is what I was trying to do in https://github.com/sigp/lighthouse/pull/3454, https://github.com/sigp/lighthouse/issues/3435. For Nethermind I guess we should look for that non-null `error` value and translate that to an error as well (while preserving the error).",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1232550312/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1233316282",
    "html_url": "https://github.com/sigp/lighthouse/issues/3528#issuecomment-1233316282",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3528",
    "id": 1233316282,
    "node_id": "IC_kwDOCFeAzc5Jgum6",
    "user": {
      "login": "pawanjay176",
      "id": 9890508,
      "node_id": "MDQ6VXNlcjk4OTA1MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9890508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pawanjay176",
      "html_url": "https://github.com/pawanjay176",
      "followers_url": "https://api.github.com/users/pawanjay176/followers",
      "following_url": "https://api.github.com/users/pawanjay176/following{/other_user}",
      "gists_url": "https://api.github.com/users/pawanjay176/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pawanjay176/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pawanjay176/subscriptions",
      "organizations_url": "https://api.github.com/users/pawanjay176/orgs",
      "repos_url": "https://api.github.com/users/pawanjay176/repos",
      "events_url": "https://api.github.com/users/pawanjay176/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pawanjay176/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-08-31T19:05:18Z",
    "updated_at": "2022-08-31T19:05:18Z",
    "author_association": "MEMBER",
    "body": "> What do you mean by an actual JWT error?\r\n\r\nI meant the error returned by the the EL for invalid jwt. The fact that all ELs respond in different formats and error codes makes this a bit annoying, but I think we can change the `InvalidToken` error to something like `AuthenticationError` to keep it more general and just log whatever the EL returns in the error field if 403/401. Made an issue in nethermind to return the correct response code https://github.com/NethermindEth/nethermind/issues/4508",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1233316282/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1236110258",
    "html_url": "https://github.com/sigp/lighthouse/issues/3528#issuecomment-1236110258",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3528",
    "id": 1236110258,
    "node_id": "IC_kwDOCFeAzc5JrYuy",
    "user": {
      "login": "antondlr",
      "id": 55993670,
      "node_id": "MDQ6VXNlcjU1OTkzNjcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/55993670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antondlr",
      "html_url": "https://github.com/antondlr",
      "followers_url": "https://api.github.com/users/antondlr/followers",
      "following_url": "https://api.github.com/users/antondlr/following{/other_user}",
      "gists_url": "https://api.github.com/users/antondlr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antondlr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antondlr/subscriptions",
      "organizations_url": "https://api.github.com/users/antondlr/orgs",
      "repos_url": "https://api.github.com/users/antondlr/repos",
      "events_url": "https://api.github.com/users/antondlr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antondlr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-03T12:31:51Z",
    "updated_at": "2022-09-03T12:31:51Z",
    "author_association": "COLLABORATOR",
    "body": "> However, execution clients can return jwt errors for other types of errors as well (e.g. incorrectly set vhosts on geth) which might be potentially confusing to debug.  \r\n\r\n> The fact that all ELs respond in different formats and error codes makes this a bit annoying\r\n\r\nI think the true solution would be for all (current and future) EL's to offer streamlined, predictable behaviour on failure, ideally including an error message in the JSON response that we can re-use on top of the error code (e.g.: 401 for JWT or other auth issues, 403 for mismatching host headers, disallowed sources, etc ?)\r\nIs this not defined in the OpenRPC base? If not, can we get it included in the EE API spec?\r\n\r\nHaving to catch specific clients' behaviour would be a maintenance nightmare: nothing worse than a specific but wrong error (this is what happens today)! \r\n\r\nIn the meantime, we could just make the current error message more ambiguous (`Request rejected by EE: potential JWT error or host mismatch` ?), as to not misdirect any troubleshooting effort.\r\nIt basically boils down to this; if we can already jump one place ahead with very little effort, we should go for it, I think: \r\n> Correct, concise logging **>** ambiguous logging **>** wrong or misleading logging \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1236110258/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1248178532",
    "html_url": "https://github.com/sigp/lighthouse/issues/3528#issuecomment-1248178532",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3528",
    "id": 1248178532,
    "node_id": "IC_kwDOCFeAzc5KZbFk",
    "user": {
      "login": "baguettex",
      "id": 87177017,
      "node_id": "MDQ6VXNlcjg3MTc3MDE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/87177017?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/baguettex",
      "html_url": "https://github.com/baguettex",
      "followers_url": "https://api.github.com/users/baguettex/followers",
      "following_url": "https://api.github.com/users/baguettex/following{/other_user}",
      "gists_url": "https://api.github.com/users/baguettex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/baguettex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/baguettex/subscriptions",
      "organizations_url": "https://api.github.com/users/baguettex/orgs",
      "repos_url": "https://api.github.com/users/baguettex/repos",
      "events_url": "https://api.github.com/users/baguettex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/baguettex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-15T14:25:20Z",
    "updated_at": "2022-09-15T14:25:20Z",
    "author_association": "NONE",
    "body": "latest version awalys print Auth(InvalidToken) :(",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1248178532/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
