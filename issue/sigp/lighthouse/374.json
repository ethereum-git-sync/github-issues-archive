{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/374",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/374/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/374/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/374/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/374",
  "id": 443067913,
  "node_id": "MDU6SXNzdWU0NDMwNjc5MTM=",
  "number": 374,
  "title": "JSON log output for testing",
  "user": {
    "login": "mslipper",
    "id": 67953,
    "node_id": "MDQ6VXNlcjY3OTUz",
    "avatar_url": "https://avatars.githubusercontent.com/u/67953?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mslipper",
    "html_url": "https://github.com/mslipper",
    "followers_url": "https://api.github.com/users/mslipper/followers",
    "following_url": "https://api.github.com/users/mslipper/following{/other_user}",
    "gists_url": "https://api.github.com/users/mslipper/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mslipper/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mslipper/subscriptions",
    "organizations_url": "https://api.github.com/users/mslipper/orgs",
    "repos_url": "https://api.github.com/users/mslipper/repos",
    "events_url": "https://api.github.com/users/mslipper/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mslipper/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2019-05-12T05:54:31Z",
  "updated_at": "2019-09-18T23:28:57Z",
  "closed_at": "2019-09-18T23:28:57Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nHi Lighthouse team,\r\n\r\nAntoine Toulmne and I are working on an ETH2 test runner that needs access to the state of the clients under test at each block. Currently, we're doing this by exposing a JSON log with the following format:\r\n\r\n```\r\n{\r\n   \"date\":1557296388510,\r\n   \"index\":1,\r\n   \"slot\":1,\r\n   \"epoch\":0,\r\n   \"block_root\":\"0x774D273A6A67482FAA5627A3F3CD3D55E2074EC89BDCC448873DA7B0F3F52C1B\",\r\n   \"block_parent_root\":\"0x73F42156F0E9611F710891CFB059EDFCA7CB18CBFF60DC0A6CB2ED39678B4782\",\r\n   \"block_body\":\"0x0DE2E04B0BF89EFEC669C00EF41BE42E8F93218B85CC6272C6CCD95B8399648D\",\r\n   \"last_justified_block_root\":\"0x73F42156F0E9611F710891CFB059EDFCA7CB18CBFF60DC0A6CB2ED39678B4782\",\r\n   \"last_justified_state_root\":\"0x38F7F34A166FB777C8647C66725F12454DCED268024BA5054C20ABF31CE7A213\",\r\n   \"last_finalized_block_root\":\"0x73F42156F0E9611F710891CFB059EDFCA7CB18CBFF60DC0A6CB2ED39678B4782\",\r\n   \"last_finalized_state_root\":\"0x38F7F34A166FB777C8647C66725F12454DCED268024BA5054C20ABF31CE7A213\",\r\n   \"validators\":[\r\n      {\r\n         \"pubkey\":\"(05209b1ea72bd2c1a430cda13d79cfbe617694c18b374a0fbf2a85aa74f6f582373f4ace1ac7b996969bc7540125ce84,08b081dc8249ef361d17510d17a193a7aee28940a9ab1fba742c1f7f9a3f9cf1288a767efcd37c750e91a8d0cf408b1f)\",\r\n         \"balance\":\"32000000000\"\r\n      }\r\n   ]\r\n}\r\n```\r\n\r\nWe were thinking that the log would be exposed by either:\r\n\r\n1. A CLI flag to write the log to the specified directory.\r\n2. A JSON-RPC endpoint to get the log at a specified block.\r\n\r\nWhich would your team find more amenable, and what do you think of this approach in general? To make things easier, we're happy to implement this and open a PR. I've also opened a similar issue against Prysm (https://github.com/prysmaticlabs/prysm/issues/2574).\r\n\r\n## Present Behaviour\r\n\r\nAs far as I am aware, there is no present behaviour to support this feature.\r\n\r\n## Expected Behaviour\r\n\r\nN/A - not a bug.\r\n\r\n## Steps to resolve\r\n\r\nN/A - not a bug.\r\n",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/374/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/374/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/491578805",
    "html_url": "https://github.com/sigp/lighthouse/issues/374#issuecomment-491578805",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/374",
    "id": 491578805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTU3ODgwNQ==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-12T09:14:04Z",
    "updated_at": "2019-05-12T23:39:02Z",
    "author_association": "MEMBER",
    "body": "Hi @mslipper,\r\n  Thanks for reaching out!\r\n\r\nI'll start with our present plans for APIs, then ask a couple of questions about this format.\r\n\r\nWe are intending to provide two APIs -- average users just care about (1) and advanced users can use (2):\r\n\r\n1. HTTP-REST (JSON) \"General Purpose\" API: Basically the same functionality as existing Eth1 clients. Provides information about the canonical chain and allows DB lookups, etc. (There's a [spec issue](https://github.com/ethereum/eth2.0-specs/issues/1012) around this.\r\n2. Websocket stream: Verbose stream of blocks, attestations, etc along with some judgements about them (valid, invalid, etc).\r\n\r\nIn your format, does `block_root` refer to the clients \"best\" block root (the latest in the canonical chain)? If so, what are you thoughts about querying this info from the REST API (1) or the Websocket API (2)?\r\n\r\nI guess there's two things to unpack in that question:\r\n\r\n- Do either of those APIs match your requirements, or are your requirements unique?\r\n- If either of these APIs do suit, what do you think about using these transport methods? (They're both very \"web standard\".)\r\n\r\nKeen to hear your thoughts :)\r\n\r\n~~P.S. I think you missed a find-replace in the first line~~",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/491578805/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/491690528",
    "html_url": "https://github.com/sigp/lighthouse/issues/374#issuecomment-491690528",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/374",
    "id": 491690528,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTY5MDUyOA==",
    "user": {
      "login": "mslipper",
      "id": 67953,
      "node_id": "MDQ6VXNlcjY3OTUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/67953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mslipper",
      "html_url": "https://github.com/mslipper",
      "followers_url": "https://api.github.com/users/mslipper/followers",
      "following_url": "https://api.github.com/users/mslipper/following{/other_user}",
      "gists_url": "https://api.github.com/users/mslipper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mslipper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mslipper/subscriptions",
      "organizations_url": "https://api.github.com/users/mslipper/orgs",
      "repos_url": "https://api.github.com/users/mslipper/repos",
      "events_url": "https://api.github.com/users/mslipper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mslipper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T06:20:06Z",
    "updated_at": "2019-05-13T06:20:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Man, my bad for that find-replace. That's what I get for not proofreading. Hope I didn't come across as impersonal.\r\n\r\n`block_root` does refer to the client's \"best\" block root (@atoulmne can you confirm?). Regarding the Websocket API, if it streams the same information as is currently included within the proposed JSON schema then I'm all for using it. It's relatively trivial for us to write a wrapper that consumes the Websocket API and dumps it into the appropriate JSON format. Have you implemented the WS API already, or is that something you'd like help with?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/491690528/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/491738441",
    "html_url": "https://github.com/sigp/lighthouse/issues/374#issuecomment-491738441",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/374",
    "id": 491738441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTczODQ0MQ==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T09:00:57Z",
    "updated_at": "2019-05-13T09:00:57Z",
    "author_association": "MEMBER",
    "body": "No worries, happens to the best of us! I appreciate you reaching out.\r\n\r\nWe don't have the WS API yet, nor have we spec'd it out. I imagine that'll happen in the coming weeks. However, I'm thinking that your request sounds like it would be best served from the HTTP API, considering you're after _canonical_ info, not just _all_ info, do you agree?\r\n\r\nLuke has been specifying the validator HTTP API via OpenAPI [here](https://github.com/ethereum/eth2.0-specs/pull/1069) and is going to start our implementation next week. Perhaps we could work together to define the endpoint in OpenAPI and see if the other clients would be open to standardising on it? I'm wary not to try and scope-creep your task, just thowing ideas around :)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/491738441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/491739949",
    "html_url": "https://github.com/sigp/lighthouse/issues/374#issuecomment-491739949",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/374",
    "id": 491739949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTczOTk0OQ==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T09:05:22Z",
    "updated_at": "2019-05-13T09:06:02Z",
    "author_association": "MEMBER",
    "body": "Just looking at the equivalent issue on the Prysm repo and saw this:\r\n\r\n> I believe we'd process it post test run.\r\n\r\nFor testing we have been using a function we (inelegantly) named \"chain dump\". It produces an array of these objects, representing the canonical chain from genesis through to head:\r\n\r\n```python\r\n(\r\n  \"beacon_block\": BeaconBlock,\r\n  \"beacon_block_root\": Hash256,\r\n  \"beacon_state\": BeaconState,\r\n  \"beacon_state_root\": Hash256,\r\n)\r\n```\r\nPerhaps this is the info you're after?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/491739949/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/493273178",
    "html_url": "https://github.com/sigp/lighthouse/issues/374#issuecomment-493273178",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/374",
    "id": 493273178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzI3MzE3OA==",
    "user": {
      "login": "mslipper",
      "id": 67953,
      "node_id": "MDQ6VXNlcjY3OTUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/67953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mslipper",
      "html_url": "https://github.com/mslipper",
      "followers_url": "https://api.github.com/users/mslipper/followers",
      "following_url": "https://api.github.com/users/mslipper/following{/other_user}",
      "gists_url": "https://api.github.com/users/mslipper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mslipper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mslipper/subscriptions",
      "organizations_url": "https://api.github.com/users/mslipper/orgs",
      "repos_url": "https://api.github.com/users/mslipper/repos",
      "events_url": "https://api.github.com/users/mslipper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mslipper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-17T00:13:44Z",
    "updated_at": "2019-05-17T00:13:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, this is the info we're after! How shall I call that method? Is it accessible via CLI/RPC, or is it something I'll have to write a tool to link against?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/493273178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/532904980",
    "html_url": "https://github.com/sigp/lighthouse/issues/374#issuecomment-532904980",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/374",
    "id": 532904980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjkwNDk4MA==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-18T23:28:57Z",
    "updated_at": "2019-09-18T23:28:57Z",
    "author_association": "MEMBER",
    "body": "I'm going to close this one, I feel like it's no so relevant anymore.\r\n\r\nFeel free to re-open if you disagree :)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/532904980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
