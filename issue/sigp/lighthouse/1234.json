{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/1234",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/1234/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/1234/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/1234/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/1234",
  "id": 628056498,
  "node_id": "MDU6SXNzdWU2MjgwNTY0OTg=",
  "number": 1234,
  "title": "VC issues when BN reports it is not syncing when first booted",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647281,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODE=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 2034355093,
      "node_id": "MDU6TGFiZWwyMDM0MzU1MDkz",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/consensus",
      "name": "consensus",
      "color": "5e59bf",
      "default": false,
      "description": "An issue/PR that touches consensus code, such as state_processing or block verification."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-05-31T22:26:54Z",
  "updated_at": "2022-11-09T05:03:06Z",
  "closed_at": "2020-11-08T23:30:38Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nNA\r\n\r\n## Version\r\n\r\n`master`\r\n\r\n## Present Behaviour\r\n\r\nWhen the BN first starts some distance behind the head, it reports that it is not syncing until it finds some peers:\r\n\r\n```json\r\n{\"is_syncing\":false,\"sync_status\":{\"starting_slot\":0,\"current_slot\":25919,\"highest_slot\":25919}}\r\n```\r\n\r\nThis causes the validator client to immediately start requesting and performing duties. Since the BN is so far behind, this causes very long skip-slots and excess resource consumption.\r\n\r\n## Steps to resolve\r\n\r\nIt seems like we need to be able to detect the case where the BN:\r\n\r\n- Has just started.\r\n- Has not yet surveyed the status of other peers.\r\n\r\nA simple-fix might be to get the VC to not produce blocks if the BN doesn't have any peers and BN has an old head (compared to slot clock). However this feels to me like it'll introduce new edge-cases with undesired behaviour.\r\n\r\nPerhaps @AgeManning has some thoughts?",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/1234/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/1234/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/636618238",
    "html_url": "https://github.com/sigp/lighthouse/issues/1234#issuecomment-636618238",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1234",
    "id": 636618238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNjYxODIzOA==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-01T05:19:08Z",
    "updated_at": "2020-06-01T05:19:08Z",
    "author_association": "MEMBER",
    "body": "A few thoughts:\r\n\r\n1. I built a /lighthouse/syncing endoint, which in this case will return \"Stalled\". We could use this endpoint and not do anything when the sync state is stalled. This probably isn't ideal as we are diverging from the official API's and our validator client would then be lighthouse specific. Also this endpoint isn't correct JSON atm, and if we are going to use it, should clean it up a bit. Was mainly for my use atm.\r\n\r\n2. Change the `is_syncing` to true in this case. Not a huge fan of this as it will be inconsistent with the actual sync states we use in lighthouse, where `Stalled` is more accurate and used internally.  This probably a better solution to 1. however if we are choosing 2. over 1. because of conformance with other clients, then we would need other clients to also have this logic. \r\n\r\n3. Add a new endpoint and make it official that is like /validator/status that returns Ready or something when the BN is ready to accept validator input. \r\n\r\n4. /node/ heuristics. As you suggest we could add a check for number of peers and distance and deal with the edge cases as they come.\r\n\r\nI'm down with any of these. My preferences would be 3, 1, 4, 2 each has obvious cons associated with them.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/636618238/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/651417993",
    "html_url": "https://github.com/sigp/lighthouse/issues/1234#issuecomment-651417993",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1234",
    "id": 651417993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTQxNzk5Mw==",
    "user": {
      "login": "ethDreamer",
      "id": 37123614,
      "node_id": "MDQ6VXNlcjM3MTIzNjE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/37123614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ethDreamer",
      "html_url": "https://github.com/ethDreamer",
      "followers_url": "https://api.github.com/users/ethDreamer/followers",
      "following_url": "https://api.github.com/users/ethDreamer/following{/other_user}",
      "gists_url": "https://api.github.com/users/ethDreamer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ethDreamer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ethDreamer/subscriptions",
      "organizations_url": "https://api.github.com/users/ethDreamer/orgs",
      "repos_url": "https://api.github.com/users/ethDreamer/repos",
      "events_url": "https://api.github.com/users/ethDreamer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ethDreamer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-29T23:19:17Z",
    "updated_at": "2020-06-30T00:08:16Z",
    "author_association": "COLLABORATOR",
    "body": "@AgeManning \r\n\r\nI think this looks interesting but I have a few questions:\r\n>This probably isn't ideal as we are diverging from the official API's\r\n\r\nI wasn't aware there were official API's for the communication between the beacon node and validator node. I don't see that in the spec and it looks like Prysm uses their own API... \r\n\r\n> conformance with other clients\r\n\r\nI remember a while back I asked Paul about this and he said the API wasn't standardized so you couldn't mix beacon and validators from different projects :/...\r\n\r\n>Add a new endpoint and make it official\r\n\r\nMake it official? I'm missing something fundamental here :/\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/651417993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/651520252",
    "html_url": "https://github.com/sigp/lighthouse/issues/1234#issuecomment-651520252",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1234",
    "id": 651520252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTUyMDI1Mg==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-30T04:14:26Z",
    "updated_at": "2020-06-30T04:14:26Z",
    "author_association": "MEMBER",
    "body": "Yeah, there is a drive towards standardising a beacon node's http API. \r\n\r\nThe main repo holding the standards and where the final product once we all converge on an API will be here: https://github.com/ethereum/eth2.0-APIs\r\n\r\nSee the issues and PR's within. Also there is a discussion on the eth2 discord in the API's channel. \r\n\r\nFundamentally, the idea is to standardise this API so users and developers will have a unified eth2 http api across all clients",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/651520252/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/723682714",
    "html_url": "https://github.com/sigp/lighthouse/issues/1234#issuecomment-723682714",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1234",
    "id": 723682714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzY4MjcxNA==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-08T23:30:38Z",
    "updated_at": "2020-11-08T23:30:38Z",
    "author_association": "MEMBER",
    "body": "All this logic has been refactored so this issue is stale.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/723682714/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
