{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/4280",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/4280/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/4280/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/4280/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/4280",
  "id": 1704727908,
  "node_id": "I_kwDOCFeAzc5lnBVk",
  "number": 4280,
  "title": "Error when building mdbx-sys",
  "user": {
    "login": "danielrachi",
    "id": 67139425,
    "node_id": "MDQ6VXNlcjY3MTM5NDI1",
    "avatar_url": "https://avatars.githubusercontent.com/u/67139425?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/danielrachi",
    "html_url": "https://github.com/danielrachi",
    "followers_url": "https://api.github.com/users/danielrachi/followers",
    "following_url": "https://api.github.com/users/danielrachi/following{/other_user}",
    "gists_url": "https://api.github.com/users/danielrachi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/danielrachi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/danielrachi/subscriptions",
    "organizations_url": "https://api.github.com/users/danielrachi/orgs",
    "repos_url": "https://api.github.com/users/danielrachi/repos",
    "events_url": "https://api.github.com/users/danielrachi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/danielrachi/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2023-05-10T22:59:28Z",
  "updated_at": "2023-05-12T20:47:21Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nI'm getting this error:\r\n```\r\nerror: failed to run custom build command for `mdbx-sys v0.11.6-4 (https://github.com/sigp/libmdbx-rs?tag=v0.1.4#096da80a)`\r\n\r\nCaused by:\r\n  process didn't exit successfully: `/home/danielrachi/Code/lighthouse/target/release/build/mdbx-sys-057a1d896a8dceb6/build-script-build` (exit status: 101)\r\n  --- stderr\r\n  thread 'main' panicked at '\"MDBX_version_info_struct_(unnamed_at_/home/danielrachi/_cargo/git/checkouts/libmdbx-rs-c1b523f5b64ff08c/096da80/mdbx-sys/libmdbx/mdbx_h_611_3)\" is not a valid Ident', /home/danielrachi/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.56/src/fallback.rs:811:9\r\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n```\r\nIn two scenarios:\r\n1. When running `make test`.\r\n2. When trying to install from source.\r\n\r\n## Version\r\n\r\n`rustc 1.69.0 (84c898d65 2023-04-16)`\r\nTrying to test: Lighthouse unstable branch @ b7b4549545da019b5b642ec35e29a7b2d092abc8\r\nTrying to build: Lighthouse stable branch @ 693886b94176faa4cb450f024696cb69cda2fe58\r\n\r\n## Present Behaviour\r\n\r\nI pulled the unstable branch and tried to run `make test` (in my development folder):\r\n```\r\ndanielrachi@swiftx ~/C/lighthouse (unstable)> make test\r\ncargo test --workspace --release --exclude ef_tests --exclude beacon_chain --exclude slasher\r\n   ...\r\nerror: failed to run custom build command for `mdbx-sys v0.11.6-4 (https://github.com/sigp/libmdbx-rs?tag=v0.1.4#096da80a)`\r\n\r\nCaused by:\r\n  process didn't exit successfully: `/home/danielrachi/Code/lighthouse/target/release/build/mdbx-sys-5e93f4144f3d672e/build-script-build` (exit status: 101)\r\n  --- stderr\r\n  thread 'main' panicked at '\"MDBX_version_info_struct_(unnamed_at_/home/danielrachi/_cargo/git/checkouts/libmdbx-rs-c1b523f5b64ff08c/096da80/mdbx-sys/libmdbx/mdbx_h_611_3)\" is not a valid Ident', /home/danielrachi/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.55/src/fallback.rs:811:9\r\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\nwarning: build failed, waiting for other jobs to finish...\r\nmake: *** [Makefile:109: test-release] Error 101\r\n```\r\n\r\nThen, I pulled the stable branch and tried to install using make (in a folder generated by git-cloning `sigp/lighthouse`): \r\n```\r\ndanielrachi@swiftx ~/lighthouse (stable)> make\r\ncargo install --path lighthouse --force --locked \\\r\n        --features \"jemalloc\" \\\r\n        --profile \"release\" \\\r\n\r\n  Installing lighthouse v4.1.0 (/home/danielrachi/lighthouse/lighthouse)\r\n    ...\r\nerror: failed to run custom build command for `mdbx-sys v0.11.6-4 (https://github.com/sigp/libmdbx-rs?tag=v0.1.4#096da80a)`\r\n\r\nCaused by:\r\n  process didn't exit successfully: `/home/danielrachi/lighthouse/target/release/build/mdbx-sys-49c7e9c0e0060040/build-script-build` (exit status: 101)\r\n  --- stderr\r\n  thread 'main' panicked at '\"MDBX_version_info_struct_(unnamed_at_/home/danielrachi/_cargo/git/checkouts/libmdbx-rs-c1b523f5b64ff08c/096da80/mdbx-sys/libmdbx/mdbx_h_611_3)\" is not a valid Ident', /home/danielrachi/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.56/src/fallback.rs:811:9\r\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: failed to compile `lighthouse v4.1.0 (/home/danielrachi/lighthouse/lighthouse)`, intermediate artifacts can be found at `/home/danielrachi/lighthouse/target`\r\nmake: *** [Makefile:48: install] Error 101\r\n```\r\n\r\n## Expected Behaviour\r\n\r\nI expected the tests to start running in one scenario and to have lighthouse v4.1.0 installed in the other.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/4280/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/4280/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1542920967",
    "html_url": "https://github.com/sigp/lighthouse/issues/4280#issuecomment-1542920967",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4280",
    "id": 1542920967,
    "node_id": "IC_kwDOCFeAzc5b9xsH",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-10T23:11:03Z",
    "updated_at": "2023-05-10T23:11:03Z",
    "author_association": "MEMBER",
    "body": "Yeah this is unfortunately a C compiler incompatibility. We're stuck on the current version of MDBX, but it's only used for the slasher so you can disable it with `--no-default-features` (which is a `cargo` argument). You can plumb it into `make` (but not `make test`) via `CARGO_INSTALL_EXTRA_FLAGS`, see: https://lighthouse-book.sigmaprime.io/installation-source.html#feature-flags.\r\n\r\nWe should probably disable it by default, as more and more people are having this issue\r\n\r\nWhich Linux distro are you on, and what does `gcc --version` show?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1542920967/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1543043938",
    "html_url": "https://github.com/sigp/lighthouse/issues/4280#issuecomment-1543043938",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4280",
    "id": 1543043938,
    "node_id": "IC_kwDOCFeAzc5b-Pti",
    "user": {
      "login": "danielrachi",
      "id": 67139425,
      "node_id": "MDQ6VXNlcjY3MTM5NDI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/67139425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielrachi",
      "html_url": "https://github.com/danielrachi",
      "followers_url": "https://api.github.com/users/danielrachi/followers",
      "following_url": "https://api.github.com/users/danielrachi/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielrachi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielrachi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielrachi/subscriptions",
      "organizations_url": "https://api.github.com/users/danielrachi/orgs",
      "repos_url": "https://api.github.com/users/danielrachi/repos",
      "events_url": "https://api.github.com/users/danielrachi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielrachi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T01:27:03Z",
    "updated_at": "2023-05-11T01:27:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm using Fedora 38 (Workstation Edition)\r\n\r\n```\r\ndanielrachi@swiftx ~> gcc --version\r\ngcc (GCC) 13.1.1 20230426 (Red Hat 13.1.1-1)\r\nCopyright (C) 2023 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1543043938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1543319417",
    "html_url": "https://github.com/sigp/lighthouse/issues/4280#issuecomment-1543319417",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4280",
    "id": 1543319417,
    "node_id": "IC_kwDOCFeAzc5b_S95",
    "user": {
      "login": "danielrachi",
      "id": 67139425,
      "node_id": "MDQ6VXNlcjY3MTM5NDI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/67139425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielrachi",
      "html_url": "https://github.com/danielrachi",
      "followers_url": "https://api.github.com/users/danielrachi/followers",
      "following_url": "https://api.github.com/users/danielrachi/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielrachi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielrachi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielrachi/subscriptions",
      "organizations_url": "https://api.github.com/users/danielrachi/orgs",
      "repos_url": "https://api.github.com/users/danielrachi/repos",
      "events_url": "https://api.github.com/users/danielrachi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielrachi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T04:34:19Z",
    "updated_at": "2023-05-11T04:34:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "If I run:\r\n`cargo test --workspace --release --exclude ef_tests --exclude beacon_chain --exclude slasher --no-default-features`\r\n(The cargo command `make test` runs but with `--no-default-features` at the end.) I no longer get this error. However I now get:\r\n```\r\nerror: linking with `cc` failed: exit status: 1\r\n...\r\n= note: /usr/bin/ld: cannot find -lpq: No such file or directory\r\n          collect2: error: ld returned 1 exit status\r\n\r\n\r\nerror: could not compile `watch` due to previous error\r\n```\r\n\r\nAlso, I don't know if this will make any of the tests fail.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1543319417/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1543351893",
    "html_url": "https://github.com/sigp/lighthouse/issues/4280#issuecomment-1543351893",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4280",
    "id": 1543351893,
    "node_id": "IC_kwDOCFeAzc5b_a5V",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T05:17:38Z",
    "updated_at": "2023-05-11T05:17:38Z",
    "author_association": "MEMBER",
    "body": "the libpq thing is for postgres, you need to `sudo dnf install libpq-devel`\r\n\r\nthe `--exclude slasher` flag should ensure that nothing fails",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1543351893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1544704960",
    "html_url": "https://github.com/sigp/lighthouse/issues/4280#issuecomment-1544704960",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4280",
    "id": 1544704960,
    "node_id": "IC_kwDOCFeAzc5cElPA",
    "user": {
      "login": "danielrachi",
      "id": 67139425,
      "node_id": "MDQ6VXNlcjY3MTM5NDI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/67139425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielrachi",
      "html_url": "https://github.com/danielrachi",
      "followers_url": "https://api.github.com/users/danielrachi/followers",
      "following_url": "https://api.github.com/users/danielrachi/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielrachi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielrachi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielrachi/subscriptions",
      "organizations_url": "https://api.github.com/users/danielrachi/orgs",
      "repos_url": "https://api.github.com/users/danielrachi/repos",
      "events_url": "https://api.github.com/users/danielrachi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielrachi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T21:29:26Z",
    "updated_at": "2023-05-11T21:29:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "We should add libpq-devel to the list of  additional requirements for developers in [the book](https://lighthouse-book.sigmaprime.io/setup.html#development-environment).\r\n\r\nThere are some tests using slasher logic outside of the slasher module, specifically in `lighthouse/tests/beacon_node.rs`\r\n```\r\ndanielrachi@swiftx ~/C/lighthouse (fork_revert_logic) [101]> cargo test --workspace --release --exclude ef_tests --exclude beacon_chain --exclude slasher --no\r\n-default-features\r\n   Compiling lighthouse v4.1.0 (/home/danielrachi/Code/lighthouse/lighthouse)\r\nerror[E0599]: no variant or associated item named `Mdbx` found for enum `DatabaseBackend` in the current scope\r\n    --> lighthouse/tests/beacon_node.rs:1906:74\r\n     |\r\n1906 |             assert_eq!(slasher_config.backend, slasher::DatabaseBackend::Mdbx);\r\n     |                                                                          ^^^^ variant or associated item not found in `DatabaseBackend`\r\n\r\nerror[E0599]: no variant or associated item named `Mdbx` found for enum `DatabaseBackend` in the current scope\r\n    --> lighthouse/tests/beacon_node.rs:1920:74\r\n     |\r\n1920 |             assert_eq!(slasher_config.backend, slasher::DatabaseBackend::Mdbx);\r\n     |                                                                          ^^^^ variant or associated item not found in `DatabaseBackend`\r\n\r\nFor more information about this error, try `rustc --explain E0599`.\r\nerror: could not compile `lighthouse` due to 2 previous errors\r\n```\r\nThis happens because they are not marked as part of the slasher feature. I added `#[cfg(feature = \"slasher\")]` on top of those tests (and others in that same file) and the error went away... But now other tests are failing and I don't know how are they related to the slasher.\r\n\r\n```\r\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\r\n\r\n     Running tests/tests.rs (target/release/deps/tests-e404371a88a45637)\r\n\r\nrunning 9 tests\r\ntest short_chain ... FAILED\r\ntest chain_grows_with_metadata_and_multiple_skip_slots ... FAILED\r\ntest short_chain_with_skip_slot ... FAILED\r\ntest short_chain_with_reorg ... FAILED\r\ntest large_chain ... FAILED\r\ntest chain_grows_to_second_epoch ... FAILED\r\ntest short_chain_sync_starts_on_skip_slot ... FAILED\r\ntest chain_grows ... FAILED\r\ntest chain_grows_with_metadata ... FAILED\r\n\r\nfailures:\r\n\r\n---- short_chain stdout ----\r\nthread 'short_chain' panicked at 'failed to start container', /home/danielrachi/.cargo/registry/src/github.com-1ecc6299db9ec823/testcontainers-0.14.0/src/clie\r\n\r\n---- chain_grows_with_metadata_and_multiple_skip_slots stdout ----\r\nthread 'chain_grows_with_metadata_and_multiple_skip_slots' panicked at 'failed to start container', /home/danielrachi/.cargo/registry/src/github.com-1ecc6299d\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\n---- short_chain_with_skip_slot stdout ----\r\nthread 'short_chain_with_skip_slot' panicked at 'failed to start container', /home/danielrachi/.cargo/registry/src/github.com-1ecc6299db9ec823/testcontainers-\r\n\r\n---- short_chain_with_reorg stdout ----\r\nthread 'short_chain_with_reorg' panicked at 'failed to start container', /home/danielrachi/.cargo/registry/src/github.com-1ecc6299db9ec823/testcontainers-0.14\r\n\r\n---- large_chain stdout ----\r\nthread 'large_chain' panicked at 'failed to start container', /home/danielrachi/.cargo/registry/src/github.com-1ecc6299db9ec823/testcontainers-0.14.0/src/clients/cli.rs:48:9\r\n\r\n---- chain_grows_to_second_epoch stdout ----\r\nthread 'chain_grows_to_second_epoch' panicked at 'failed to start container', /home/danielrachi/.cargo/registry/src/github.com-1ecc6299db9ec823/testcontainers-0.14.0/src/clients/cli.rs:48:9\r\n\r\n---- short_chain_sync_starts_on_skip_slot stdout ----\r\nthread 'short_chain_sync_starts_on_skip_slot' panicked at 'failed to start container', /home/danielrachi/.cargo/registry/src/github.com-1ecc6299db9ec823/testcontainers-0.14.0/src/clients/cli.rs:48:9\r\n\r\n---- chain_grows stdout ----\r\nthread 'chain_grows' panicked at 'failed to start container', /home/danielrachi/.cargo/registry/src/github.com-1ecc6299db9ec823/testcontainers-0.14.0/src/clients/cli.rs:48:9\r\n\r\n---- chain_grows_with_metadata stdout ----\r\nthread 'chain_grows_with_metadata' panicked at 'failed to start container', /home/danielrachi/.cargo/registry/src/github.com-1ecc6299db9ec823/testcontainers-0.14.0/src/clients/cli.rs:48:9\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1544704960/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1544713284",
    "html_url": "https://github.com/sigp/lighthouse/issues/4280#issuecomment-1544713284",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4280",
    "id": 1544713284,
    "node_id": "IC_kwDOCFeAzc5cEnRE",
    "user": {
      "login": "danielrachi",
      "id": 67139425,
      "node_id": "MDQ6VXNlcjY3MTM5NDI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/67139425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielrachi",
      "html_url": "https://github.com/danielrachi",
      "followers_url": "https://api.github.com/users/danielrachi/followers",
      "following_url": "https://api.github.com/users/danielrachi/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielrachi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielrachi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielrachi/subscriptions",
      "organizations_url": "https://api.github.com/users/danielrachi/orgs",
      "repos_url": "https://api.github.com/users/danielrachi/repos",
      "events_url": "https://api.github.com/users/danielrachi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielrachi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T21:37:17Z",
    "updated_at": "2023-05-11T21:37:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the real problem is that we don't have a way to share a reliable development environment. Docker _could_ be used for this but there are some details I don't like about it for this purpose. I've heard Nix is a great tool for this. I'll give it a try and see if I can come up with something  useful.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1544713284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1544933655",
    "html_url": "https://github.com/sigp/lighthouse/issues/4280#issuecomment-1544933655",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4280",
    "id": 1544933655,
    "node_id": "IC_kwDOCFeAzc5cFdEX",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T00:30:42Z",
    "updated_at": "2023-05-12T00:30:42Z",
    "author_association": "MEMBER",
    "body": "> We should add libpq-devel to the list of additional requirements for developers in [the book](https://lighthouse-book.sigmaprime.io/setup.html#development-environment).\r\n\r\nThat's a great idea. Would you mind opening a PR?\r\n\r\nThis, and the other issues are fallout from merging a rather major new component, the `beacon.watch` chain indexer: <https://github.com/sigp/lighthouse/pull/3362>. Usually there are some quirks in docs and tests after merging such a large feature, even if we make every effort to avoid them.\r\n\r\n> ---- chain_grows_with_metadata_and_multiple_skip_slots stdout ----\r\nthread 'chain_grows_with_metadata_and_multiple_skip_slots' panicked at 'failed to start container', /home/danielrachi/.cargo/registry/src/github.com-1ecc6299d\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nThis is also beacon.watch related. Do you have Docker/Podman installed? I think the new `watch` tests use Docker to spawn Postgres in a container. Or if you're already running in Docker, it might be a Docker-in-Docker sort of bug.\r\n\r\n> I think the real problem is that we don't have a way to share a reliable development environment.\r\n\r\nWe kind of _do_ have a standard environment: it's the Github runner image used by CI. It would be possible to use this locally, but as you say, but probably not particularly fun (I would also prefer not to use Docker for my dev environment).\r\n\r\n> I've heard Nix is a great tool for this. I'll give it a try and see if I can come up with something useful.\r\n\r\nI'd be wary of going too deep on this, just because for it to be effective it would need to be adopted as our primary CI. If we added a Nix env that wasn't tested on CI it would be prone to bitrot. To keep CI fast, it would probably mean our _only_ CI run would have to use Nix. As far as I know none of the main Lighthouse devs use Nix at all, so it's also an issue of familiarity (I've used it very briefly several years ago).\r\n\r\nRelated to this we also have some in-progress work to further Docker-ify CI so that it runs on a bare metal machine owned by SigP: https://github.com/sigp/lighthouse/pull/4115. Those images could potentially be used for standardised local dev environments by people who are interested.\r\n\r\nIn summary I think we should:\r\n\r\n- Add libpq to dev requirements docs\r\n- Switch default slasher backend to LMDB so that tests can run without MDBX build issues. Disable MDBX by default when building from source, but keep it in the released binaries\r\n- Document how to use CI Docker images to run tests locally",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1544933655/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1546276828",
    "html_url": "https://github.com/sigp/lighthouse/issues/4280#issuecomment-1546276828",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4280",
    "id": 1546276828,
    "node_id": "IC_kwDOCFeAzc5cKk_c",
    "user": {
      "login": "danielrachi",
      "id": 67139425,
      "node_id": "MDQ6VXNlcjY3MTM5NDI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/67139425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielrachi",
      "html_url": "https://github.com/danielrachi",
      "followers_url": "https://api.github.com/users/danielrachi/followers",
      "following_url": "https://api.github.com/users/danielrachi/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielrachi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielrachi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielrachi/subscriptions",
      "organizations_url": "https://api.github.com/users/danielrachi/orgs",
      "repos_url": "https://api.github.com/users/danielrachi/repos",
      "events_url": "https://api.github.com/users/danielrachi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielrachi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T20:47:21Z",
    "updated_at": "2023-05-12T20:47:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Turns out you need docker installed and **running**. Added that to the PR.\r\n\r\nI opened a second PR adding the slasher feature flag to the slasher tests I mentioned in a previous comment.\r\n\r\nWith those changes made I successfully compiled and passed all tests using:\r\n\r\n```\r\ncargo test --workspace --release --exclude ef_tests --exclude beacon_chain --exclude slasher --no-default-features\r\n``` ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1546276828/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
