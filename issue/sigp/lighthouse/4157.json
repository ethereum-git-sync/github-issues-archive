{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/4157",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/4157/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/4157/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/4157/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/4157",
  "id": 1651217804,
  "node_id": "I_kwDOCFeAzc5ia5WM",
  "number": 4157,
  "title": "Reduce bandwidth over the VC<>BN API using dependant roots",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1999784343,
      "node_id": "MDU6TGFiZWwxOTk5Nzg0MzQz",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/optimization",
      "name": "optimization",
      "color": "f9de40",
      "default": false,
      "description": "Something to make Lighthouse run more efficiently."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "jimmygchen",
    "id": 742762,
    "node_id": "MDQ6VXNlcjc0Mjc2Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/742762?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimmygchen",
    "html_url": "https://github.com/jimmygchen",
    "followers_url": "https://api.github.com/users/jimmygchen/followers",
    "following_url": "https://api.github.com/users/jimmygchen/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimmygchen/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimmygchen/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimmygchen/subscriptions",
    "organizations_url": "https://api.github.com/users/jimmygchen/orgs",
    "repos_url": "https://api.github.com/users/jimmygchen/repos",
    "events_url": "https://api.github.com/users/jimmygchen/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimmygchen/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "jimmygchen",
      "id": 742762,
      "node_id": "MDQ6VXNlcjc0Mjc2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/742762?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmygchen",
      "html_url": "https://github.com/jimmygchen",
      "followers_url": "https://api.github.com/users/jimmygchen/followers",
      "following_url": "https://api.github.com/users/jimmygchen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmygchen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmygchen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmygchen/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmygchen/orgs",
      "repos_url": "https://api.github.com/users/jimmygchen/repos",
      "events_url": "https://api.github.com/users/jimmygchen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmygchen/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-04-03T02:16:22Z",
  "updated_at": "2023-04-06T08:35:10Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nPresently the VC will poll for attestation duties each slot. Our polling achieves:\r\n\r\n- On the first poll after the VC starts, we always learn the current- and next-epoch duties.\r\n- On the first poll of the epoch, we always learn the next-epoch duties.\r\n- Occasionally, during any poll, we might learn of a re-org than changes either the next- or current-epoch duties. Such epochs are very uncommon on mainnet.\r\n\r\nLooking at the [`/eth/v1/validator/duties/attester/{epoch}`](https://ethereum.github.io/beacon-APIs/#/Validator/getAttesterDuties) endpoint, we see that its structure is:\r\n\r\n\r\n#### Request Body: An array of the validator indices for which to obtain the duties. \r\n```json\r\n[\r\n  \"1\"\r\n]\r\n```\r\n\r\n*Note: we also included the `epoch` in the URL.*\r\n\r\n#### Response Body\r\n\r\n```json\r\n{\r\n  \"dependent_root\": \"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\",\r\n  \"execution_optimistic\": false,\r\n  \"data\": [\r\n    {\r\n      \"pubkey\": \"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a\",\r\n      \"validator_index\": \"1\",\r\n      \"committee_index\": \"1\",\r\n      \"committee_length\": \"1\",\r\n      \"committees_at_slot\": \"1\",\r\n      \"validator_committee_index\": \"1\",\r\n      \"slot\": \"1\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nIn our current implementation, the request will contain all validators managed by the VC. I claim that, in the best case, we could only send a request for *one* validator and know whether or not all the other validators need updating.\r\n\r\nI claim this because a set of shuffling is uniquely identified by `(epoch, dependent_root)` (see \"Background Info\" below if this isn't clear to you). We already use this assumption in the VC:\r\n\r\nhttps://github.com/sigp/lighthouse/blob/a53830fd60a119bf3f659b253360af8027128e83/validator_client/src/duties_service.rs#L740-L749\r\n\r\nWith the above statement we're filtering out any duties that are already have the same `(epoch, dependent_root)` signature. So, our current flow goes like:\r\n\r\n- Download all`duties/attester` for all validators.\r\n- Filter out any duties with a known `(epoch, dependent_root)`.\r\n- Update the `duties_service.attesters` with any new duties ([reference](https://github.com/sigp/lighthouse/blob/a53830fd60a119bf3f659b253360af8027128e83/validator_client/src/duties_service.rs#L762-L787)).\r\n\r\nI propose that we should instead:\r\n\r\n- Download `duties/attester` for `INITIAL_DUTIES_QUERY_SIZE = 1` validators.\r\n- Find any validators which have conflicting `(epoch, dependent_root)` values.\r\n- If there are any conflicting validators, send a second `duties/attester` request for those validators.\r\n- Update the `duties_service.attesters` with any new duties which resulted from the *first or second* request.\r\n\r\nIn the case where we don't expect the duties to change (i.e., it's not the first request after VC boot, it's not the first request of an epoch and there wasn't a re-org) then we should reduce the bandwidth by a factor of the number of validators in that VC (e.g., if the VC has 100 validators then they request/response should be ~100x smaller).\r\n\r\n## Additional Details\r\n\r\nThere's some extra detail regarding the first request of `INITIAL_DUTIES_QUERY_SIZE`. I propose that we should *actually* make this query of size `max(INITIAL_DUTIES_QUERY_SIZE, num_uninitialized_validators)` where `num_uninitialized_validators` is the count of validators for which we don't already know their duties for that epoch. This will be *all validators* when booting for the first time or querying for the \"next epoch\". It'll avoid us doing the second request when we know we need the duties for all validators.\r\n\r\n## Background Info\r\n\r\nWhilst the term \"dependent root\" doesn't appear in the specification, it exists as a concept in [`get_beacon_committee`](https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#beacon-state-accessors). We use `dependant_root` to refer to the block root at the same slot as `get_seed` uses to load the `randao_mix` as used as the input to `compute_committee`.\r\n\r\nThe argument is that any chain which has `dependant_root` in its history will always return the same result for `get_beacon_committee` given the same `epoch.`\r\n\r\nHere's a scrappy diagram that might help:\r\n\r\n![IMG_1651](https://user-images.githubusercontent.com/6660660/229396488-545c17de-b36c-48d2-bfe2-632de9d4ecb4.png)\r\n\r\n\r\nThe term \"dependent root\" was introduced to the API some time after we'd implemented the concept in Lighthouse for keying our internal shuffling caches. Internally, we will sometimes refer to it as the \"shuffling decision\" root ([example](https://github.com/sigp/lighthouse/blob/3a24ca5f14c6e6d6612fd43eca82aa0c1e6aba16/consensus/types/src/shuffling_id.rs#L20)).",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/4157/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/4157/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1493547520",
    "html_url": "https://github.com/sigp/lighthouse/issues/4157#issuecomment-1493547520",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4157",
    "id": 1493547520,
    "node_id": "IC_kwDOCFeAzc5ZBboA",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-03T02:24:43Z",
    "updated_at": "2023-04-03T02:24:43Z",
    "author_association": "MEMBER",
    "body": "Something that Teku does which we could also consider is subscribing to the SSE event stream and using that to infer a change of dependent root. I guess the `head` event is sufficient, as it includes the previous and current dependent roots: https://ethereum.github.io/beacon-APIs/?urls.primaryName=dev#/Events/eventstream\r\n\r\nThis would be more of a major architectural change though, and may come with other complications (handling stream reconnects, etc). Perhaps the reduced polling approach is more pragmatic",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1493547520/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1496889411",
    "html_url": "https://github.com/sigp/lighthouse/issues/4157#issuecomment-1496889411",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4157",
    "id": 1496889411,
    "node_id": "IC_kwDOCFeAzc5ZOLhD",
    "user": {
      "login": "jimmygchen",
      "id": 742762,
      "node_id": "MDQ6VXNlcjc0Mjc2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/742762?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmygchen",
      "html_url": "https://github.com/jimmygchen",
      "followers_url": "https://api.github.com/users/jimmygchen/followers",
      "following_url": "https://api.github.com/users/jimmygchen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmygchen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmygchen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmygchen/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmygchen/orgs",
      "repos_url": "https://api.github.com/users/jimmygchen/repos",
      "events_url": "https://api.github.com/users/jimmygchen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmygchen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-05T04:04:18Z",
    "updated_at": "2023-04-05T04:04:18Z",
    "author_association": "MEMBER",
    "body": "@paulhauner thanks a lot for the nice write up! I'd like to look into this.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1496889411/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1498690395",
    "html_url": "https://github.com/sigp/lighthouse/issues/4157#issuecomment-1498690395",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4157",
    "id": 1498690395,
    "node_id": "IC_kwDOCFeAzc5ZVDNb",
    "user": {
      "login": "jimmygchen",
      "id": 742762,
      "node_id": "MDQ6VXNlcjc0Mjc2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/742762?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmygchen",
      "html_url": "https://github.com/jimmygchen",
      "followers_url": "https://api.github.com/users/jimmygchen/followers",
      "following_url": "https://api.github.com/users/jimmygchen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmygchen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmygchen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmygchen/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmygchen/orgs",
      "repos_url": "https://api.github.com/users/jimmygchen/repos",
      "events_url": "https://api.github.com/users/jimmygchen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmygchen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-06T08:35:10Z",
    "updated_at": "2023-04-06T08:35:10Z",
    "author_association": "MEMBER",
    "body": "PR created here #4170 ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1498690395/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
