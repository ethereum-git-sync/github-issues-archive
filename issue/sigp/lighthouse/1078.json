{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/1078",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/1078/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/1078/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/1078/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/1078",
  "id": 608218652,
  "node_id": "MDU6SXNzdWU2MDgyMTg2NTI=",
  "number": 1078,
  "title": "Design questions regarding PubkeyCache",
  "user": {
    "login": "JustinDrake",
    "id": 731743,
    "node_id": "MDQ6VXNlcjczMTc0Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JustinDrake",
    "html_url": "https://github.com/JustinDrake",
    "followers_url": "https://api.github.com/users/JustinDrake/followers",
    "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
    "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
    "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
    "repos_url": "https://api.github.com/users/JustinDrake/repos",
    "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-04-28T10:48:41Z",
  "updated_at": "2020-05-01T05:22:15Z",
  "closed_at": "2020-04-28T11:46:01Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I have questions regarding the design of `PubkeyCache` :)\r\n\r\n1) **Reads**â€”When reading the `PubkeyCache` (specifically calling `.get()`) it is important in some situations that the pubkey cache be up to date. There's a bunch of code (e.g. 8 calls to `update_pubkey_cache`, the `PubkeyCacheIncomplete` error in `get_validator_index`) to deal with that. This feels a bit unnecessarily complicated and error prone. For example, what if you forgot to call `update_pubkey_cache` somewhere? Why not do something simpler, e.g. call `update_pubkey_cache` in the only two places where `.get()` is called?\r\n2) **Writes**â€”When writing to the `PubkeyCache` (specifically calling `.insert()`, which is done only in `update_pubkey_cache`) there seems to be unnecessary checks. Specifically, it seems the `PubkeyCacheInconsistent` error is impossible to trigger. Is that correct?\r\n3) **Timeouts**â€”The `validator_pubkey` function has a `try_read_for(VALIDATOR_PUBKEY_CACHE_LOCK_TIMEOUT)`. Why doesn't `get_validator_index` have similar timeout logic? Why is there no timeout when doing writes?",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/1078/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/1078/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620555373",
    "html_url": "https://github.com/sigp/lighthouse/issues/1078#issuecomment-620555373",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1078",
    "id": 620555373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDU1NTM3Mw==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T11:46:01Z",
    "updated_at": "2020-04-28T11:46:01Z",
    "author_association": "MEMBER",
    "body": "> Why not do something simpler, e.g. call update_pubkey_cache in the only two places where .get() is called?\r\n\r\nYep this make sense. I can only put this down to an oversight on my behalf.\r\n\r\n> Specifically, it seems the PubkeyCacheInconsistent error is impossible to trigger. Is that correct?\r\n\r\nSo it might be impossible to trigger this in the broad context of the code-base, however in the specific context of the `PubkeyCache` it has no guarantee that it is fed monotonically increasing indices. I recall adding this a defensive programming feature and given then small overhead of the checks I'm inclined to leave it as-is.\r\n\r\n> Why doesn't get_validator_index have similar timeout logic? Why is there no timeout when doing writes?\r\n\r\nThis timeouts were born out of a time when we were troubleshooting a deadlock. That deadlock turned out to be caused by how we were using our scheduler, not from mutex ordering.\r\n\r\nPerhaps we should remove them, but that will require effort that probably provides no performance gains and potentially robs us of some debugging info if we actually do lock something. If I had unlimited time I would probably remove them all, but I'm not sure that's the best use of our time at the moment. Open to a counter argument of course :)\r\n\r\nClosing this in favor of #1080. Feel free to re-open if you disagree with anything :)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/620555373/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/621024441",
    "html_url": "https://github.com/sigp/lighthouse/issues/1078#issuecomment-621024441",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1078",
    "id": 621024441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTAyNDQ0MQ==",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "node_id": "MDQ6VXNlcjczMTc0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinDrake",
      "html_url": "https://github.com/JustinDrake",
      "followers_url": "https://api.github.com/users/JustinDrake/followers",
      "following_url": "https://api.github.com/users/JustinDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinDrake/orgs",
      "repos_url": "https://api.github.com/users/JustinDrake/repos",
      "events_url": "https://api.github.com/users/JustinDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-29T06:59:01Z",
    "updated_at": "2020-04-29T06:59:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Open to a counter argument of course :)\r\n\r\nFor a purist like me having consensus critical code be subject to hardware timing assumptions (even if minimalâ€”1 second is a lot) through timeouts feels dirty ðŸ˜‚\r\n\r\n> If I had unlimited time I would probably remove them all\r\n\r\nI agree with that aspiration :) What about a \"good first issue\" for this? (I may even try to tackle it myself for fun and bugs.)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/621024441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/622253941",
    "html_url": "https://github.com/sigp/lighthouse/issues/1078#issuecomment-622253941",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1078",
    "id": 622253941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjI1Mzk0MQ==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-01T05:22:15Z",
    "updated_at": "2020-05-01T05:22:15Z",
    "author_association": "MEMBER",
    "body": "@JustinDrake see #1096 :)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/622253941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
