{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/1551",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/1551/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/1551/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/1551/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/1551",
  "id": 681826581,
  "node_id": "MDU6SXNzdWU2ODE4MjY1ODE=",
  "number": 1551,
  "title": "Optimistic rapid head sync",
  "user": {
    "login": "AgeManning",
    "id": 7454587,
    "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AgeManning",
    "html_url": "https://github.com/AgeManning",
    "followers_url": "https://api.github.com/users/AgeManning/followers",
    "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
    "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
    "organizations_url": "https://api.github.com/users/AgeManning/orgs",
    "repos_url": "https://api.github.com/users/AgeManning/repos",
    "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AgeManning/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1141293876,
      "node_id": "MDU6TGFiZWwxMTQxMjkzODc2",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/work-started",
      "name": "work-started",
      "color": "e072ab",
      "default": false,
      "description": ""
    },
    {
      "id": 2336800125,
      "node_id": "MDU6TGFiZWwyMzM2ODAwMTI1",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/t%20Networking",
      "name": "t Networking",
      "color": "40E0D0",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "divagant-martian",
    "id": 26765164,
    "node_id": "MDQ6VXNlcjI2NzY1MTY0",
    "avatar_url": "https://avatars.githubusercontent.com/u/26765164?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/divagant-martian",
    "html_url": "https://github.com/divagant-martian",
    "followers_url": "https://api.github.com/users/divagant-martian/followers",
    "following_url": "https://api.github.com/users/divagant-martian/following{/other_user}",
    "gists_url": "https://api.github.com/users/divagant-martian/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/divagant-martian/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/divagant-martian/subscriptions",
    "organizations_url": "https://api.github.com/users/divagant-martian/orgs",
    "repos_url": "https://api.github.com/users/divagant-martian/repos",
    "events_url": "https://api.github.com/users/divagant-martian/events{/privacy}",
    "received_events_url": "https://api.github.com/users/divagant-martian/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "divagant-martian",
      "id": 26765164,
      "node_id": "MDQ6VXNlcjI2NzY1MTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/26765164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/divagant-martian",
      "html_url": "https://github.com/divagant-martian",
      "followers_url": "https://api.github.com/users/divagant-martian/followers",
      "following_url": "https://api.github.com/users/divagant-martian/following{/other_user}",
      "gists_url": "https://api.github.com/users/divagant-martian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/divagant-martian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/divagant-martian/subscriptions",
      "organizations_url": "https://api.github.com/users/divagant-martian/orgs",
      "repos_url": "https://api.github.com/users/divagant-martian/repos",
      "events_url": "https://api.github.com/users/divagant-martian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/divagant-martian/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-08-19T13:08:44Z",
  "updated_at": "2020-09-22T07:36:24Z",
  "closed_at": "2020-09-22T07:36:24Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nOnce synced to the highest known finalized epoch, we start performing a head sync. Typically, the epoch we consider finalized, will be at least 2 epochs behind what our peers consider finalized (as we don't knowledge of the tip of the chain). We then look at the tips of all of our peers and construct \"head\" syncing chains from our last known finalized epoch to their head. This often involves duplicates however we can always be sure that we are never missing a fork that could happen sometime between our last finalized epoch and our current head. \r\n\r\nThis strategy is fine, however there becomes a race condition if the chain does not finalize in a very long time. At the point of status'ing a peer, we find its current head. We begin a sync from our last finalized epoch up to their current head. Once complete, we restatus the peer and if the peer's head is within some [tolerance](https://github.com/sigp/lighthouse/blob/master/beacon_node/network/src/sync/manager.rs#L60) of our head we consider that peer synced with us. If not within that tolerance, the peer is considered advanced and we re-sync a head chain with that peer. \r\n\r\nTherefore, if the time it takes us to sync a head chain from a peer exceeds the time it takes for that peer to advance beyond the slot tolerance, we may not reach the head of the chain and constantly perform head searches. \r\n\r\n## Proposed Solution\r\n\r\nWe can add some further complexity to the sync algorithm to address this. This added complexity seems worth it as it will not only address the race condition but potentially improve the sync efficiency. \r\n\r\nWhen performing a head sync, we should optimistically assume the chain is apart of our current canonical chain. We should request a single batch that extends on our current head. If that batch can be processed, then we can start a \"head\" syncing chain from our current head tip (not from last finalized). If the first block processed returns a \"ParentUnknown\" then we revert to the old strategy of syncing from last finalized. \r\n\r\nWe would need to be careful to add the fault tolerance in the initial batch requesting (i.e a peer may not respond or timeout on the first batch. Also if the first batch is empty (lazy peer, or all skip slots, we should revert to the old robust method). \r\n\r\n## Practical implementation\r\n\r\nThere are a few ways to implement this. We could add a flag to the `SyncingChain` type which indicates it's optimistically starting from our current head and fallback appropriately on failure (we'd have to prevent filling the batch buffer etc). We could also create a new type of chain all-together in the `ChainCollection`. Have an `optimistic_chain` and if it fails, it creates a `head_chain` in the `ChainCollection`. ",
  "closed_by": {
    "login": "AgeManning",
    "id": 7454587,
    "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AgeManning",
    "html_url": "https://github.com/AgeManning",
    "followers_url": "https://api.github.com/users/AgeManning/followers",
    "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
    "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
    "organizations_url": "https://api.github.com/users/AgeManning/orgs",
    "repos_url": "https://api.github.com/users/AgeManning/repos",
    "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AgeManning/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/1551/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/1551/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/696558948",
    "html_url": "https://github.com/sigp/lighthouse/issues/1551#issuecomment-696558948",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/1551",
    "id": 696558948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjU1ODk0OA==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-22T07:36:24Z",
    "updated_at": "2020-09-22T07:36:24Z",
    "author_association": "MEMBER",
    "body": "Resolved in #1628",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/696558948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
