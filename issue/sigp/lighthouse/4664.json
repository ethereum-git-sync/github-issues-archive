{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/4664",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/4664/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/4664/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/4664/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/4664",
  "id": 1866887018,
  "node_id": "I_kwDOCFeAzc5vRm9q",
  "number": 4664,
  "title": "Add Ephemery support",
  "user": {
    "login": "T-ess",
    "id": 40072706,
    "node_id": "MDQ6VXNlcjQwMDcyNzA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/40072706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-ess",
    "html_url": "https://github.com/T-ess",
    "followers_url": "https://api.github.com/users/T-ess/followers",
    "following_url": "https://api.github.com/users/T-ess/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-ess/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-ess/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-ess/subscriptions",
    "organizations_url": "https://api.github.com/users/T-ess/orgs",
    "repos_url": "https://api.github.com/users/T-ess/repos",
    "events_url": "https://api.github.com/users/T-ess/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-ess/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647284,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODQ=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/enhancement",
      "name": "enhancement",
      "color": "a2eeef",
      "default": true,
      "description": "New feature or request"
    },
    {
      "id": 2034355093,
      "node_id": "MDU6TGFiZWwyMDM0MzU1MDkz",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/consensus",
      "name": "consensus",
      "color": "5e59bf",
      "default": false,
      "description": "An issue/PR that touches consensus code, such as state_processing or block verification."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-08-25T11:40:23Z",
  "updated_at": "2023-11-11T11:26:21Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nI am creating this issue to track the tasks and the progress in my effort to integrate Ephemery testnet into the Lighhouse client. \r\n\r\nDescription of Ephemery, its behaviour and the integration plans by @taxmeifyoucan :\r\n\r\n[Ephemery](https://ephemery.dev/) is a new kind of testnet which is intended for short term testing use cases. It automatically resets back to genesis after every given period which enables reclaiming faucet funds, clearing validator set and keeping small state.\r\n\r\n## Present Behaviour\r\n\r\nEphemery runs since December 2022 but is mostly run by external tooling. This is effort to implement specs also within clients, not only externally. All resources for using the testnet are here https://github.com/ephemery-testnet/ephemery-resources\r\n\r\n## Expected Behaviour\r\n\r\nFor the best user experience, it would be best to have a CLI flag which automatically connects the clients to the latest iteration of Ephemery. Compared to a traditional testnet, adding Ephemery support requires extra feature for generating the current genesis. Current specs for this feature required in clients can be found in [its draft EIP](https://github.com/ethereum/EIPs/blob/04369cb50ee6c1894dec868141e8a32e66dc4f16/EIPS/eip-testnet-draft.md). (specs feedback is welcomed!)\r\n\r\n## Steps to resolve\r\n### Add Ephemery to the network options - manual network setup would no longer be needed\r\n- [x] Add Ephemery to the options.\r\n- [x] Include required files from the latest genesis release (until the genesis function is implemented).\r\n### Implement the genesis function - automatically create new genesis.\r\n- [x] Include hardcoded genesis 0.\r\n- [x] Add check for the existence of genesis and its timestamp.\r\n- [x] Implement value changes in _config.yaml_.\r\n- [x] Figure out how to best include all changes into the Lighthouse code.\r\n- [ ] Utilize the existing tools for the genesis state download.\r\n- [ ] Examine how to further ensure successful genesis state download based on new EIP additions.\r\n- [ ] Run tests and fix those which were changed by the config change behaviour.\r\n- [ ] Create new testing scenarios.\r\n- [ ] Discuss changes with Lighthouse team.\r\n### Implement the reset function - automatically remove the old data.\r\n- [ ] Research phase.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/4664/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/4664/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1693234237",
    "html_url": "https://github.com/sigp/lighthouse/issues/4664#issuecomment-1693234237",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4664",
    "id": 1693234237,
    "node_id": "IC_kwDOCFeAzc5k7LQ9",
    "user": {
      "login": "T-ess",
      "id": 40072706,
      "node_id": "MDQ6VXNlcjQwMDcyNzA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/40072706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/T-ess",
      "html_url": "https://github.com/T-ess",
      "followers_url": "https://api.github.com/users/T-ess/followers",
      "following_url": "https://api.github.com/users/T-ess/following{/other_user}",
      "gists_url": "https://api.github.com/users/T-ess/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/T-ess/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/T-ess/subscriptions",
      "organizations_url": "https://api.github.com/users/T-ess/orgs",
      "repos_url": "https://api.github.com/users/T-ess/repos",
      "events_url": "https://api.github.com/users/T-ess/events{/privacy}",
      "received_events_url": "https://api.github.com/users/T-ess/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T11:49:08Z",
    "updated_at": "2023-08-25T11:49:08Z",
    "author_association": "NONE",
    "body": "The main goal for now is to have a working genesis implementation in a pair of clients - Lighthouse (CL) and Reth (EL). There is another issue to track the EL progress, for anyone interested: https://github.com/paradigmxyz/reth/issues/4340",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1693234237/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1693367879",
    "html_url": "https://github.com/sigp/lighthouse/issues/4664#issuecomment-1693367879",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4664",
    "id": 1693367879,
    "node_id": "IC_kwDOCFeAzc5k7r5H",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-25T13:31:50Z",
    "updated_at": "2023-08-25T13:31:58Z",
    "author_association": "MEMBER",
    "body": "Sounds good! We are about to add support for loading genesis from a URL (including a checkpointz server). That could be a good way to handle the genesis regeneration\r\n\r\nhttps://github.com/sigp/lighthouse/pull/4653",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1693367879/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1695138663",
    "html_url": "https://github.com/sigp/lighthouse/issues/4664#issuecomment-1695138663",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4664",
    "id": 1695138663,
    "node_id": "IC_kwDOCFeAzc5lCcNn",
    "user": {
      "login": "T-ess",
      "id": 40072706,
      "node_id": "MDQ6VXNlcjQwMDcyNzA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/40072706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/T-ess",
      "html_url": "https://github.com/T-ess",
      "followers_url": "https://api.github.com/users/T-ess/followers",
      "following_url": "https://api.github.com/users/T-ess/following{/other_user}",
      "gists_url": "https://api.github.com/users/T-ess/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/T-ess/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/T-ess/subscriptions",
      "organizations_url": "https://api.github.com/users/T-ess/orgs",
      "repos_url": "https://api.github.com/users/T-ess/repos",
      "events_url": "https://api.github.com/users/T-ess/events{/privacy}",
      "received_events_url": "https://api.github.com/users/T-ess/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-28T06:59:05Z",
    "updated_at": "2023-08-28T06:59:05Z",
    "author_association": "NONE",
    "body": "> Sounds good! We are about to add support for loading genesis from a URL (including a checkpointz server). That could be a good way to handle the genesis regeneration\r\n> \r\n> #4653\r\n\r\nThanks for the info, I'll look into it!",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1695138663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
