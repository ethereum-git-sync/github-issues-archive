{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/482",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/482/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/482/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/482/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/482",
  "id": 475958892,
  "node_id": "MDU6SXNzdWU0NzU5NTg4OTI=",
  "number": 482,
  "title": "Problems with BeaconChain::current_state(..)",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647281,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODE=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 1141293876,
      "node_id": "MDU6TGFiZWwxMTQxMjkzODc2",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/work-started",
      "name": "work-started",
      "color": "e072ab",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2019-08-02T01:49:12Z",
  "updated_at": "2019-09-26T04:02:02Z",
  "closed_at": "2019-09-26T04:02:02Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nPresently we keep a [`state`](https://github.com/sigp/lighthouse/blob/89cb01cc93c637ca489a01e5867c80690eb4ed9a/beacon_node/beacon_chain/src/beacon_chain.rs#L76-L79) field on the `BeaconState`. Each time the slot-clock ticks, we advance it to ensure it's up-to-date with the current slot (we call this process a \"catch up\").\r\n\r\nThis was originally added as a sort-of cache to ensure we can produce blocks at the current slot quickly (i.e., without doing lots of `per_slot_processing`). It serves this purpose well, except it has two issues:\r\n\r\n1. When the distance between the current slot (i.e., wall-clock slot) and the latest state we have is large (e.g., when first booting a node) a lot of time (seconds, minutes, hours) can be spent updating this state. This frequently happens when booting a fresh node some time after genesis.\r\n1. The state in question is exposed via `BeaconChain::current_state(..)`. This state has an interesting problem that neither it or all of it's ancestors are stored in the database (see #481). Considering that the difference between `beacon_chain.head().beacon_state` and `beacon_chain.current_state()` is not intuitive, it seems that users are likely to make mistakes (I have) and therefore allowing public access to this state is error prone.\r\n\r\n## Steps to resolve\r\n\r\nFirstly, I propose that we ensure that `beacon_chain.state` is not publicly accessible (i.e., remove the `BeaconChain::current_state(..)` method). If any caller decides that they want a state _later_ than the state of the head block, then they can explicitly do the state advancement themselves (it's not difficult, just call `state_processing::per_slot_processing(..)` a bunch of times).\r\n\r\nSecondly, I propose that we re-purpose the `state` field to be exclusively for block (and maybe attestation) production and we add a `MAX_CATCHUP` value whereby we don't try to catch-up the state beyond that. For example, when we boot up a new beacon node, it runs `BeaconState::catchup_state(..)` from genesis through to the current slot -- this can take a very long time. The `MAX_CATCHUP` value will limit the time this takes, however it will have the downside that _if_ the node is used for block production then it will be necessary to do a full catchup (beyond `MAX_CATCHUP`). This is good in some ways, because it means that we only do a big catchup when necessary. However, there is the downside that if this catch-up takes several minutes a validator client connected via HTTP will probably time-out and give up. Such a case would only exist when there is a massive number of skipped slots -- this _should_ never happen on the production chain but may be encountered during testing. I think this is a bit of a structural issue with the spec and something that we need to accept for now.  ",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/482/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/482/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/517866107",
    "html_url": "https://github.com/sigp/lighthouse/issues/482#issuecomment-517866107",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/482",
    "id": 517866107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzg2NjEwNw==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-02T22:53:54Z",
    "updated_at": "2019-08-02T23:25:14Z",
    "author_association": "MEMBER",
    "body": "Upon second thoughts, I'm not sure that making `beacon_chain.state` private is the best solution. This will result in duplication of work at run-time and duplication of code (calling `per_slot_processing`). I think the best solution might be to provide a method on `BeaconChain` that has a similar function signature to:\r\n\r\n  ```rust\r\nfn get_cached_current_state(&self, max_skip_distance: usize) -> Option<BeaconState>\r\n```\r\n\r\nThis way we obtain the following properties:\r\n\r\n- It becomes clear to the caller that this function is doing more work than just returning the head state.\r\n- Allows for rejecting an unreasonable skip distance (via returning `None`). This is loosely related to #485, except that issue is talking about block _processing_ and `beacon_chain.state` is used for block _production_ and committee information.\r\n- Allows the `BeaconChain` to cache the returned `BeaconState`, potentially making future calls much faster.\r\n\r\nEDIT: this [comment](https://github.com/sigp/lighthouse/issues/485#issuecomment-517870705) is also valid here.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/517866107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/518052840",
    "html_url": "https://github.com/sigp/lighthouse/issues/482#issuecomment-518052840",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/482",
    "id": 518052840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODA1Mjg0MA==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-05T01:07:40Z",
    "updated_at": "2019-08-05T01:07:40Z",
    "author_association": "MEMBER",
    "body": "I'm going to start implementing the solution directly above this ^^\r\n\r\nThese works will also address #485\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/518052840/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
