{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/5032",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/5032/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/5032/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/5032/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/5032",
  "id": 2064301469,
  "node_id": "I_kwDOCFeAzc57Cr2d",
  "number": 5032,
  "title": "what happens if an execution endpoint is shared by two beacon nodes?",
  "user": {
    "login": "zhiqiangxu",
    "id": 1265027,
    "node_id": "MDQ6VXNlcjEyNjUwMjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1265027?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zhiqiangxu",
    "html_url": "https://github.com/zhiqiangxu",
    "followers_url": "https://api.github.com/users/zhiqiangxu/followers",
    "following_url": "https://api.github.com/users/zhiqiangxu/following{/other_user}",
    "gists_url": "https://api.github.com/users/zhiqiangxu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zhiqiangxu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zhiqiangxu/subscriptions",
    "organizations_url": "https://api.github.com/users/zhiqiangxu/orgs",
    "repos_url": "https://api.github.com/users/zhiqiangxu/repos",
    "events_url": "https://api.github.com/users/zhiqiangxu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zhiqiangxu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647288,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODg=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/question",
      "name": "question",
      "color": "d876e3",
      "default": true,
      "description": "Further information is requested"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2024-01-03T16:18:02Z",
  "updated_at": "2024-01-04T12:11:24Z",
  "closed_at": "2024-01-04T12:11:24Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "> Secondly, there is a strict one-to-one relationship between Lighthouse and the execution engine; only one Lighthouse node can connect to one execution engine.\r\n\r\nI can understand the possible mis-behavior if one beacon node connects to two execution endpoints(like new_payload calls one, but get_payload calls the other), but what will happen if two beacon nodes connect to the same execution endpoint?\r\n\r\nIs there any particular reason or just to be precautious?",
  "closed_by": {
    "login": "zhiqiangxu",
    "id": 1265027,
    "node_id": "MDQ6VXNlcjEyNjUwMjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1265027?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zhiqiangxu",
    "html_url": "https://github.com/zhiqiangxu",
    "followers_url": "https://api.github.com/users/zhiqiangxu/followers",
    "following_url": "https://api.github.com/users/zhiqiangxu/following{/other_user}",
    "gists_url": "https://api.github.com/users/zhiqiangxu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zhiqiangxu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zhiqiangxu/subscriptions",
    "organizations_url": "https://api.github.com/users/zhiqiangxu/orgs",
    "repos_url": "https://api.github.com/users/zhiqiangxu/repos",
    "events_url": "https://api.github.com/users/zhiqiangxu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zhiqiangxu/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/5032/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/5032/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1876382903",
    "html_url": "https://github.com/sigp/lighthouse/issues/5032#issuecomment-1876382903",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/5032",
    "id": 1876382903,
    "node_id": "IC_kwDOCFeAzc5v11S3",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-04T05:45:41Z",
    "updated_at": "2024-01-04T05:45:41Z",
    "author_association": "MEMBER",
    "body": "If the beacon nodes agree it's fine, but if they choose different heads for any reason then the execution node will flip flop between them, which causes expensive unwinding.\r\n\r\nWe have a solution for multiple BNs sharing one EL in `eleel`: https://github.com/sigp/eleel",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1876382903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1876460548",
    "html_url": "https://github.com/sigp/lighthouse/issues/5032#issuecomment-1876460548",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/5032",
    "id": 1876460548,
    "node_id": "IC_kwDOCFeAzc5v2IQE",
    "user": {
      "login": "zhiqiangxu",
      "id": 1265027,
      "node_id": "MDQ6VXNlcjEyNjUwMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1265027?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhiqiangxu",
      "html_url": "https://github.com/zhiqiangxu",
      "followers_url": "https://api.github.com/users/zhiqiangxu/followers",
      "following_url": "https://api.github.com/users/zhiqiangxu/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhiqiangxu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhiqiangxu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhiqiangxu/subscriptions",
      "organizations_url": "https://api.github.com/users/zhiqiangxu/orgs",
      "repos_url": "https://api.github.com/users/zhiqiangxu/repos",
      "events_url": "https://api.github.com/users/zhiqiangxu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhiqiangxu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-04T06:25:27Z",
    "updated_at": "2024-01-04T06:25:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "> If the beacon nodes agree it's fine, but if they choose different heads for any reason then the execution node will flip flop between them, which causes expensive unwinding.\r\n> \r\n> We have a solution for multiple BNs sharing one EL in `eleel`: https://github.com/sigp/eleel\r\n\r\nThanks for the reply!\r\n\r\nGood to know that there's a solution for this situation, wonder how does `eleel` avoid the flip flop when shared by multiple BNs ?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1876460548/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1876659210",
    "html_url": "https://github.com/sigp/lighthouse/issues/5032#issuecomment-1876659210",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/5032",
    "id": 1876659210,
    "node_id": "IC_kwDOCFeAzc5v24wK",
    "user": {
      "login": "chong-he",
      "id": 44791194,
      "node_id": "MDQ6VXNlcjQ0NzkxMTk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/44791194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chong-he",
      "html_url": "https://github.com/chong-he",
      "followers_url": "https://api.github.com/users/chong-he/followers",
      "following_url": "https://api.github.com/users/chong-he/following{/other_user}",
      "gists_url": "https://api.github.com/users/chong-he/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chong-he/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chong-he/subscriptions",
      "organizations_url": "https://api.github.com/users/chong-he/orgs",
      "repos_url": "https://api.github.com/users/chong-he/repos",
      "events_url": "https://api.github.com/users/chong-he/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chong-he/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-04T07:54:23Z",
    "updated_at": "2024-01-04T07:54:23Z",
    "author_association": "MEMBER",
    "body": "> > If the beacon nodes agree it's fine, but if they choose different heads for any reason then the execution node will flip flop between them, which causes expensive unwinding.\r\n> > We have a solution for multiple BNs sharing one EL in `eleel`: https://github.com/sigp/eleel\r\n> \r\n> Thanks for the reply!\r\n> \r\n> Good to know that there's a solution for this situation, wonder how does `eleel` avoid the flip flop when shared by multiple BNs ?\r\n\r\n`eleel` acts as the \"middleman\" between the EL and CL, like below:\r\n\r\nWithout eleel:  CL < -- > EL (directly)\r\nWith eleel: CL < -- > `eleel` < -- > EL\r\n\r\nThere is one controlling beacon node is `eleel` that drives the node to sync, and then multiple beacon nodes can be connected to it. ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1876659210/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1876669437",
    "html_url": "https://github.com/sigp/lighthouse/issues/5032#issuecomment-1876669437",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/5032",
    "id": 1876669437,
    "node_id": "IC_kwDOCFeAzc5v27P9",
    "user": {
      "login": "zhiqiangxu",
      "id": 1265027,
      "node_id": "MDQ6VXNlcjEyNjUwMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1265027?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhiqiangxu",
      "html_url": "https://github.com/zhiqiangxu",
      "followers_url": "https://api.github.com/users/zhiqiangxu/followers",
      "following_url": "https://api.github.com/users/zhiqiangxu/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhiqiangxu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhiqiangxu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhiqiangxu/subscriptions",
      "organizations_url": "https://api.github.com/users/zhiqiangxu/orgs",
      "repos_url": "https://api.github.com/users/zhiqiangxu/repos",
      "events_url": "https://api.github.com/users/zhiqiangxu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhiqiangxu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-04T08:01:13Z",
    "updated_at": "2024-01-04T08:01:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "> > > If the beacon nodes agree it's fine, but if they choose different heads for any reason then the execution node will flip flop between them, which causes expensive unwinding.\r\n> > > We have a solution for multiple BNs sharing one EL in `eleel`: https://github.com/sigp/eleel\r\n> > \r\n> > \r\n> > Thanks for the reply!\r\n> > Good to know that there's a solution for this situation, wonder how does `eleel` avoid the flip flop when shared by multiple BNs ?\r\n> \r\n> `eleel` acts as the \"middleman\" between the EL and CL, like below:\r\n> \r\n> Without eleel: CL < -- > EL (directly) With eleel: CL < -- > `eleel` < -- > EL\r\n> \r\n> There is one controlling beacon node is `eleel` that drives the node to sync, and then multiple beacon nodes can be connected to it.\r\n\r\n@chong-he Thanks for the reply, let's clarify this with an example:\r\n\r\nLet's suppose there're two beacon nodes that don't agree, after they request `eleel`, how does `eleel` avoid the flip flop?\r\nIt seems unavoidable if there's only one `EL` node.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1876669437/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1876929129",
    "html_url": "https://github.com/sigp/lighthouse/issues/5032#issuecomment-1876929129",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/5032",
    "id": 1876929129,
    "node_id": "IC_kwDOCFeAzc5v36pp",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-04T11:19:16Z",
    "updated_at": "2024-01-04T11:19:16Z",
    "author_association": "MEMBER",
    "body": "> Let's suppose there're two beacon nodes that don't agree, after they request eleel, how does eleel avoid the flip flop?\r\nIt seems unavoidable if there's only one EL node.\r\n\r\nEleel always uses the fork choice updates of the BN that's nominated as the _controller_. So in case of a conflict, the controller's fork choice update wins, and gets passed to the EL. The fork choice updates from _follower_ nodes are never sent to the EL. The followers will receive a `VALID` responses _if_ their fork choice update agrees with the controller, otherwise if they're on a different chain they'll get a  `SYNCING` response and go into optimistic sync.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1876929129/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
