{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/970",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/970/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/970/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/970/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/970",
  "id": 589535768,
  "node_id": "MDU6SXNzdWU1ODk1MzU3Njg=",
  "number": 970,
  "title": "Improve range sync invalid batch handling",
  "user": {
    "login": "AgeManning",
    "id": 7454587,
    "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AgeManning",
    "html_url": "https://github.com/AgeManning",
    "followers_url": "https://api.github.com/users/AgeManning/followers",
    "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
    "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
    "organizations_url": "https://api.github.com/users/AgeManning/orgs",
    "repos_url": "https://api.github.com/users/AgeManning/repos",
    "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AgeManning/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647284,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODQ=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/enhancement",
      "name": "enhancement",
      "color": "a2eeef",
      "default": true,
      "description": "New feature or request"
    },
    {
      "id": 1802005347,
      "node_id": "MDU6TGFiZWwxODAyMDA1MzQ3",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/syncing",
      "name": "syncing",
      "color": "ff5b2d",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2020-03-28T08:46:37Z",
  "updated_at": "2020-04-14T05:02:52Z",
  "closed_at": "2020-04-14T05:02:52Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nThe range sync downloads batches of blocks from a pool of peers. A previously completed batch is cached until a newer batch can be successfully processed. This is because a successfully processed batch may contain no-blocks or the end of the batch may-contain all skip slots. Alternatively a lazy-peer may only return half a batch. We can identify this, by ensuring that at least one block in the following batch succeeds. \r\n\r\nCurrently, due the to the block processor design, we return a boolean as to whether the entire batch succeeds. We therefore do not know if a single block succeeded, in which case we could be sure all previous batches are valid and we only need to download the current failed batch. \r\n\r\nThe current version re-downloads previous cached batches as we have not verified them and this is potentially unnecessary. \r\n\r\nIf we update the block processor to return extra information indicating if at least the first block was successfully downloaded, we could verify previous cached batches and only download the current;y failed batch.",
  "closed_by": {
    "login": "AgeManning",
    "id": 7454587,
    "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AgeManning",
    "html_url": "https://github.com/AgeManning",
    "followers_url": "https://api.github.com/users/AgeManning/followers",
    "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
    "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
    "organizations_url": "https://api.github.com/users/AgeManning/orgs",
    "repos_url": "https://api.github.com/users/AgeManning/repos",
    "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AgeManning/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/970/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/970/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/605712940",
    "html_url": "https://github.com/sigp/lighthouse/issues/970#issuecomment-605712940",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/970",
    "id": 605712940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTcxMjk0MA==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-29T22:37:47Z",
    "updated_at": "2020-03-29T22:37:47Z",
    "author_association": "MEMBER",
    "body": "> If we update the block processor to return extra information indicating if at least the first block was successfully downloaded, we could verify previous cached batches and only download the current;y failed batch.\r\n\r\nWe'll have to pass this information down from [`BeaconChain::process_chain_segment`](https://github.com/sigp/lighthouse/blob/93da74e7d630602efc6ccbf731128b90e28ae3a1/beacon_node/beacon_chain/src/beacon_chain.rs#L1148) too. Perhaps we need to return something odd like `(Vec<Hash256>, Result<(), BlockError>)` so that we can detect if any blocks were imported... We can think more about this once someone picks up the issue :)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/605712940/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/605746534",
    "html_url": "https://github.com/sigp/lighthouse/issues/970#issuecomment-605746534",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/970",
    "id": 605746534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTc0NjUzNA==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-30T02:17:05Z",
    "updated_at": "2020-03-30T02:17:05Z",
    "author_association": "MEMBER",
    "body": "Agreed. I think @divagant-martian was picking up sync-related issues like this. So potentially she's interested in this also. ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/605746534/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/609484195",
    "html_url": "https://github.com/sigp/lighthouse/issues/970#issuecomment-609484195",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/970",
    "id": 609484195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTQ4NDE5NQ==",
    "user": {
      "login": "divagant-martian",
      "id": 26765164,
      "node_id": "MDQ6VXNlcjI2NzY1MTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/26765164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/divagant-martian",
      "html_url": "https://github.com/divagant-martian",
      "followers_url": "https://api.github.com/users/divagant-martian/followers",
      "following_url": "https://api.github.com/users/divagant-martian/following{/other_user}",
      "gists_url": "https://api.github.com/users/divagant-martian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/divagant-martian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/divagant-martian/subscriptions",
      "organizations_url": "https://api.github.com/users/divagant-martian/orgs",
      "repos_url": "https://api.github.com/users/divagant-martian/repos",
      "events_url": "https://api.github.com/users/divagant-martian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/divagant-martian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-05T21:13:03Z",
    "updated_at": "2020-04-05T21:13:03Z",
    "author_association": "COLLABORATOR",
    "body": "I'll take it. Thanks :)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/609484195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/610106279",
    "html_url": "https://github.com/sigp/lighthouse/issues/970#issuecomment-610106279",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/970",
    "id": 610106279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDEwNjI3OQ==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-07T00:29:47Z",
    "updated_at": "2020-04-07T00:31:04Z",
    "author_association": "MEMBER",
    "body": "So, AUIU the problem is that `BeaconChain::process_chain_segement` returns a `Result` which only gives you two pieces of information:\r\n\r\n1. `Ok(roots)`: `roots.len()` blocks were valid and successfully imported.\r\n2. `Err(..)`: one or more of the blocks were invalid and zero or more blocks were imported.\r\n\r\nAIUI, you need a third piece of information that indicates: \"one or more of the blocks were valid and successfully imported\".\r\n\r\nI think that the best solution here would be to define this struct:\r\n\r\n```rust\r\npub struct ChainSegmentError {\r\n  blocks_imported: Vec<Hash256>,\r\n  error: BlockError\r\n}\r\n```\r\n\r\nThen, we change the `process_chain_segment` signature to:\r\n\r\n```rust\r\n   pub fn process_chain_segment(\r\n        &self,\r\n        chain_segment: Vec<SignedBeaconBlock<T::EthSpec>>,\r\n    ) -> Result<Vec<Hash256>, ChainSegmentError>\r\n```\r\n\r\nThen you could have the following logic:\r\n\r\n```rust\r\nmatch chain.process_chain_segment(..) {\r\n  Ok(roots) if roots.is_empty() => // We didn't validate or import any blocks.\r\n  Ok(roots) => // We imported some blocks.\r\n  Err(e) if e.roots.is_empty() => // No blocks were imported to to invalid block or error.\r\n  Err(e) => //  Some blocks were imported, but not all due to an invalid block or error.\r\n}\r\n```\r\nThis will make returning errors in `process_chain_segment` a little weird, but it's the most ergonomic solution I can think of. It'll also mean some re-jigging of the tests, but it should be straight-forward. \r\n\r\nOpen to suggestions ofc :)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/610106279/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/610496780",
    "html_url": "https://github.com/sigp/lighthouse/issues/970#issuecomment-610496780",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/970",
    "id": 610496780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDQ5Njc4MA==",
    "user": {
      "login": "divagant-martian",
      "id": 26765164,
      "node_id": "MDQ6VXNlcjI2NzY1MTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/26765164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/divagant-martian",
      "html_url": "https://github.com/divagant-martian",
      "followers_url": "https://api.github.com/users/divagant-martian/followers",
      "following_url": "https://api.github.com/users/divagant-martian/following{/other_user}",
      "gists_url": "https://api.github.com/users/divagant-martian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/divagant-martian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/divagant-martian/subscriptions",
      "organizations_url": "https://api.github.com/users/divagant-martian/orgs",
      "repos_url": "https://api.github.com/users/divagant-martian/repos",
      "events_url": "https://api.github.com/users/divagant-martian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/divagant-martian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-07T16:43:58Z",
    "updated_at": "2020-04-07T16:43:58Z",
    "author_association": "COLLABORATOR",
    "body": "From @paulhauner's comment I take this belongs to v0.2.0 but from @AgeManning's it would seem to belong to master?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/610496780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/610645667",
    "html_url": "https://github.com/sigp/lighthouse/issues/970#issuecomment-610645667",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/970",
    "id": 610645667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDY0NTY2Nw==",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-07T22:11:19Z",
    "updated_at": "2020-04-07T22:11:19Z",
    "author_association": "MEMBER",
    "body": "> From @paulhauner's comment I take this belongs to v0.2.0 but from @AgeManning's it would seem to belong to master?\r\n\r\n@AgeManning is the authority here, I'll let him respond :)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/610645667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/610672884",
    "html_url": "https://github.com/sigp/lighthouse/issues/970#issuecomment-610672884",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/970",
    "id": 610672884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDY3Mjg4NA==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-07T23:41:53Z",
    "updated_at": "2020-04-07T23:41:53Z",
    "author_association": "MEMBER",
    "body": "I'm merging master into v0.2.0 today, so it will be one and the same :)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/610672884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/613227449",
    "html_url": "https://github.com/sigp/lighthouse/issues/970#issuecomment-613227449",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/970",
    "id": 613227449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzIyNzQ0OQ==",
    "user": {
      "login": "AgeManning",
      "id": 7454587,
      "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AgeManning",
      "html_url": "https://github.com/AgeManning",
      "followers_url": "https://api.github.com/users/AgeManning/followers",
      "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
      "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
      "organizations_url": "https://api.github.com/users/AgeManning/orgs",
      "repos_url": "https://api.github.com/users/AgeManning/repos",
      "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AgeManning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-14T05:02:52Z",
    "updated_at": "2020-04-14T05:02:52Z",
    "author_association": "MEMBER",
    "body": "Resolved in #996 ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/613227449/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
