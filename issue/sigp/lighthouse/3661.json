{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/3661",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/3661/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/3661/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/3661/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/3661",
  "id": 1423554201,
  "node_id": "I_kwDOCFeAzc5U2baZ",
  "number": 3661,
  "title": "Implement per-validator reward APIs",
  "user": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647284,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODQ=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/enhancement",
      "name": "enhancement",
      "color": "a2eeef",
      "default": true,
      "description": "New feature or request"
    },
    {
      "id": 985647285,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODU=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/help%20wanted",
      "name": "help wanted",
      "color": "008672",
      "default": true,
      "description": "Extra attention is needed"
    },
    {
      "id": 2034355093,
      "node_id": "MDU6TGFiZWwyMDM0MzU1MDkz",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/consensus",
      "name": "consensus",
      "color": "5e59bf",
      "default": false,
      "description": "An issue/PR that touches consensus code, such as state_processing or block verification."
    },
    {
      "id": 2336800343,
      "node_id": "MDU6TGFiZWwyMzM2ODAwMzQz",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/HTTP-API",
      "name": "HTTP-API",
      "color": "5A63A2",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-10-26T07:20:40Z",
  "updated_at": "2022-11-07T03:49:40Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nFor the protocol fellowship I've proposed a project to add reward calculation APIs to the beacon-APIs standard (https://github.com/eth-protocol-fellows/cohort-three/pull/51). This issue contemplates the design and implementation on the Lighthouse side.\r\n\r\n## Present Behaviour\r\n\r\nCurrently we have a few APIs for doing things with rewards, but none are fully satisfactory:\r\n\r\n- There's [`/lighthouse/validator_inclusion/{epoch}/{validator_id}`](https://lighthouse-book.sigmaprime.io/validator-inclusion.html#individual), which includes whether or not the target/head votes matched, but nothing about the source vote, nor the rewards.\r\n- There's the undocumented `/lighthouse/analysis/attestation_performance/{validator_id}` endpoint that we created for beacon.watch (a quasi block explorer, see [#3362](https://github.com/sigp/lighthouse/pull/3362)). It has all relevant attestation information including source matching, but lacks inclusion distance and reward information.\r\n- There's the [`/lighthouse/analysis/block_rewards`](https://lighthouse-book.sigmaprime.io/api-lighthouse.html#lighthouseanalysisblock_rewards) API for block rewards that is used by blockprint. However it has several limitations: it considers only attestations and sync committee rewards (no slashings) _and_ it is liable to return slightly incorrect results when validators make slashable attestations.\r\n\r\n## Design Questions\r\n\r\nSome main design questions (DQs) that I think we should iterate on are:\r\n\r\n### DQ1: Bulk or single block/epoch\r\n\r\nShould the new reward APIs operate on a single block/epoch or a range? Most of our existing APIs operate on a range because that's substantially more efficient with Lighthouse's database design. However most of the standard beacon-APIs operate only on a single block or epoch at a time, so perhaps we should keep things consistent.\r\n\r\nAnother point in favour of the single block/single epoch APIs is that we can likely optimise behind the scenes to make them efficient. The ongoing `tree-states` work will help with this by drastically reducing the size of archive nodes (4TB -> 250GB) and enabling caching of more states in memory (see: https://github.com/sigp/lighthouse/pull/3206).\r\n\r\n### DQ2: Reward granularity\r\n\r\nThere's a trade-off between implementation complexity and detail when it comes to the granularity of reward data:\r\n\r\n- Should attestation rewards include a breakdown by head/target/source (probably yes)\r\n- Should block rewards include a breakdown by included attestations, sync aggregate, slashings (maybe?)\r\n\r\nWe should also be mindful of the fact that rewards for attestations and sync committee messages can be negative. We should specify the rewards as signed integers.\r\n\r\n## Implementation Considerations\r\n\r\nAll of the reward APIs should probably use the `BlockReplayer`, like the existing reward APIs do.\r\n\r\n### Block Rewards\r\n\r\nOne way to calculate a coarse block reward is:\r\n\r\n- Replay the relevant block(s)\r\n- Record the balance diff for the proposer index using `BlockReplayer` hooks\r\n- Subtract any attestation or sync committee reward paid to the proposer in the same slot from the balance diff.\r\n\r\nAlternatively we can calculate fine-grained rewards:\r\n\r\n- Replay the relevant block(s)\r\n- Compute the fine-grained rewards for each attestation/sync aggregate/slashing processed. The current approach for sync aggregates used by the `block_rewards` API should suffice. For attestations we could improve on the current `block_rewards` by diffing the `ParticipationFlags` to accurately track included attestations (see below). Slashings require more thought.\r\n\r\n### Attestation Rewards\r\n\r\nI think attestation rewards are a little easier than block rewards. We can compute them for a given epoch by diffing the `current_epoch_participation` which contains a `ParticipationFlags` bitfield for each validator. For each bit set (or not set) we can then apply the appropriate reward/penalty based on `get_base_reward` and the inactivity penalty. See:\r\n\r\nhttps://github.com/sigp/lighthouse/blob/fcfd02aeec435203269b03865e3ccc23e5f51e6d/consensus/state_processing/src/per_epoch_processing/altair/rewards_and_penalties.rs#L75-L90\r\n\r\nWe may not even want a block replayer for this, we might just want to load the state at the start of epoch `n + 1` and diff it against the state at epoch `n`.\r\n\r\n### Sync Committee Rewards\r\n\r\nRequire more thought, TODO.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/3661/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/3661/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1291608364",
    "html_url": "https://github.com/sigp/lighthouse/issues/3661#issuecomment-1291608364",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3661",
    "id": 1291608364,
    "node_id": "IC_kwDOCFeAzc5M_GEs",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-26T07:22:53Z",
    "updated_at": "2022-10-26T07:22:53Z",
    "author_association": "MEMBER",
    "body": "CC @kevinbogner who is interested in working on this. Feel free to post questions/findings on this issue. Or hit me up on Discord.\r\n\r\nSome related reading which might be useful:\r\n\r\n- The spec: https://github.com/ethereum/consensus-specs/blob/dev/specs/altair/beacon-chain.md\r\n- Ben Edginton's book: https://eth2book.info/\r\n- Pintail's guide to post-Altair rewards: https://pintail.xyz/posts/modelling-the-impact-of-altair/",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1291608364/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1304482857",
    "html_url": "https://github.com/sigp/lighthouse/issues/3661#issuecomment-1304482857",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3661",
    "id": 1304482857,
    "node_id": "IC_kwDOCFeAzc5NwNQp",
    "user": {
      "login": "naviechan",
      "id": 17676176,
      "node_id": "MDQ6VXNlcjE3Njc2MTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/17676176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naviechan",
      "html_url": "https://github.com/naviechan",
      "followers_url": "https://api.github.com/users/naviechan/followers",
      "following_url": "https://api.github.com/users/naviechan/following{/other_user}",
      "gists_url": "https://api.github.com/users/naviechan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naviechan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naviechan/subscriptions",
      "organizations_url": "https://api.github.com/users/naviechan/orgs",
      "repos_url": "https://api.github.com/users/naviechan/repos",
      "events_url": "https://api.github.com/users/naviechan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naviechan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-05T10:21:40Z",
    "updated_at": "2022-11-05T10:21:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "After getting inputs from @michaelsproul and @potuz, @kevinbogner and I are attempting to answer some of the design questions so we can push forward the discussion:\r\nDQ1: I think the reward API should operate on a single block/epoch for the sake of consistency with the rest of the Beacon API. Operating on a range may be more efficient on Lighthouse side but it might not be the case for other clients.\r\nDQ2.1: \r\nFor granularity of the data returned from the api, I think a breakdown of source/target/head vote reward is a yes. And I believe the technical difficulty to implement each of the three should be similar. \r\nDQ2.2:\r\nFor block reward data (ie. sync committee and proposer) it is desirable to provide such breakdown. From Beacon API’s perspective, I think including the block reward is ideal for the sake of completeness. However if we believe such data is not too useful that it’s not worth the development effort we can forget about it",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1304482857/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1305043445",
    "html_url": "https://github.com/sigp/lighthouse/issues/3661#issuecomment-1305043445",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/3661",
    "id": 1305043445,
    "node_id": "IC_kwDOCFeAzc5NyWH1",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-07T03:49:40Z",
    "updated_at": "2022-11-07T03:49:40Z",
    "author_association": "MEMBER",
    "body": "Perfect, I agree with those decisions. If you (@naviechan) and @kevinbogner can put together a draft PR to the [`beacon-APIs`](https://github.com/ethereum/beacon-APIs) repo then I can review it and we can start implementing! Let me know if you need any assistance.\r\n\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1305043445/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
