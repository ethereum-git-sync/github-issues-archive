{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/4258",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/4258/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/4258/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/4258/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/4258",
  "id": 1693277281,
  "node_id": "I_kwDOCFeAzc5k7Vxh",
  "number": 4258,
  "title": "Resubscribing to core topics",
  "user": {
    "login": "AgeManning",
    "id": 7454587,
    "node_id": "MDQ6VXNlcjc0NTQ1ODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7454587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AgeManning",
    "html_url": "https://github.com/AgeManning",
    "followers_url": "https://api.github.com/users/AgeManning/followers",
    "following_url": "https://api.github.com/users/AgeManning/following{/other_user}",
    "gists_url": "https://api.github.com/users/AgeManning/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AgeManning/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AgeManning/subscriptions",
    "organizations_url": "https://api.github.com/users/AgeManning/orgs",
    "repos_url": "https://api.github.com/users/AgeManning/repos",
    "events_url": "https://api.github.com/users/AgeManning/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AgeManning/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-05-03T01:13:35Z",
  "updated_at": "2023-05-29T20:22:20Z",
  "closed_at": "2023-05-29T20:22:19Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nI've noticed that when a node starts and has a poor connection its peer count can fluctuate around a handful of peers and back to zero. In this case, I've noticed we emit logs about re-subscribing to the core topics. We should only subscribe once to the core topics. \r\n\r\n### Background Info\r\n\r\nCore topics are ones that all nodes subscribe to. Such as a `beacon_block` and `aggregate_attestations`. We do not subscribe to these topics until a node has synced. This is because when a node is subscribed it must verify the messages on the topic and then forward them on. A node that doesn't have a sync'ed chain cannot verify the messages and therefore should not forward them, nor should it participate in the gossipsub topic. \r\n\r\nTherefore lighthouse only subscribes to these topics once it has synced. It should never again need to re-subscribe or unsubscribe from these. \r\n\r\nThe subscription happens here: https://github.com/sigp/lighthouse/blob/stable/beacon_node/network/src/service.rs#L673\r\nAnd it emits an info log: https://github.com/sigp/lighthouse/blob/stable/beacon_node/network/src/service.rs#L762\r\n\r\nI've seen this info log occur a few times. Although its entirely harmless, we should not be subscribing again. I think the cause of this is because the sync status goes out of sync when we have no peers. When we have no peers our sync status changes to `Stalled`: https://github.com/sigp/lighthouse/blob/stable/beacon_node/lighthouse_network/src/types/sync_state.rs#L26\r\n\r\nWhen we get more peers, we become syned again, and I think we re-call the subscribe to core topics. The message is being sent to the network task from sync. See here: https://github.com/sigp/lighthouse/blob/stable/beacon_node/network/src/sync/manager.rs#L461\r\n\r\nFrom the last link, its seems a new client could be backfilling in the background and have their peers count fluctuate to 0 and back and this function could be called multiple times. \r\n\r\n### Resolution\r\n\r\nWe could try and prevent the function from being called mutliple times in the sync manager. The difficulty there would be that there are quite a few edge cases in how the sync state changes. We don't want to be in a state where a node never subscribes to the core topics (because of an edge case) as this would be catastrophic for the node. \r\n\r\nI think a more defensive solution would be to handle it in the network service. When it gets called, it should just check to see if its already subscribed to the core topics and if so, just do nothing.\r\n\r\n",
  "closed_by": {
    "login": "divagant-martian",
    "id": 26765164,
    "node_id": "MDQ6VXNlcjI2NzY1MTY0",
    "avatar_url": "https://avatars.githubusercontent.com/u/26765164?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/divagant-martian",
    "html_url": "https://github.com/divagant-martian",
    "followers_url": "https://api.github.com/users/divagant-martian/followers",
    "following_url": "https://api.github.com/users/divagant-martian/following{/other_user}",
    "gists_url": "https://api.github.com/users/divagant-martian/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/divagant-martian/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/divagant-martian/subscriptions",
    "organizations_url": "https://api.github.com/users/divagant-martian/orgs",
    "repos_url": "https://api.github.com/users/divagant-martian/repos",
    "events_url": "https://api.github.com/users/divagant-martian/events{/privacy}",
    "received_events_url": "https://api.github.com/users/divagant-martian/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/4258/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/4258/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1567487408",
    "html_url": "https://github.com/sigp/lighthouse/issues/4258#issuecomment-1567487408",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4258",
    "id": 1567487408,
    "node_id": "IC_kwDOCFeAzc5dbfWw",
    "user": {
      "login": "divagant-martian",
      "id": 26765164,
      "node_id": "MDQ6VXNlcjI2NzY1MTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/26765164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/divagant-martian",
      "html_url": "https://github.com/divagant-martian",
      "followers_url": "https://api.github.com/users/divagant-martian/followers",
      "following_url": "https://api.github.com/users/divagant-martian/following{/other_user}",
      "gists_url": "https://api.github.com/users/divagant-martian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/divagant-martian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/divagant-martian/subscriptions",
      "organizations_url": "https://api.github.com/users/divagant-martian/orgs",
      "repos_url": "https://api.github.com/users/divagant-martian/repos",
      "events_url": "https://api.github.com/users/divagant-martian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/divagant-martian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-29T20:22:19Z",
    "updated_at": "2023-05-29T20:22:19Z",
    "author_association": "COLLABORATOR",
    "body": "Closed by #4271 ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1567487408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
