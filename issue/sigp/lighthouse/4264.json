{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/4264",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/4264/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/4264/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/4264/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/4264",
  "id": 1695441631,
  "node_id": "I_kwDOCFeAzc5lDmLf",
  "number": 4264,
  "title": "No gossip validation before block broadcast",
  "user": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647281,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODE=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 1232620456,
      "node_id": "MDU6TGFiZWwxMjMyNjIwNDU2",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/RFC",
      "name": "RFC",
      "color": "4aaa19",
      "default": false,
      "description": "Request for comment"
    },
    {
      "id": 2034355093,
      "node_id": "MDU6TGFiZWwyMDM0MzU1MDkz",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/consensus",
      "name": "consensus",
      "color": "5e59bf",
      "default": false,
      "description": "An issue/PR that touches consensus code, such as state_processing or block verification."
    },
    {
      "id": 2336800343,
      "node_id": "MDU6TGFiZWwyMzM2ODAwMzQz",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/HTTP-API",
      "name": "HTTP-API",
      "color": "5A63A2",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-05-04T07:39:28Z",
  "updated_at": "2023-07-05T08:00:10Z",
  "closed_at": "2023-07-05T08:00:09Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nWhile working on the spec for `broadcast_validation` (https://github.com/ethereum/beacon-APIs/pull/317) I realised that Lighthouse is in violation of the current spec:\r\n\r\n> Instructs the beacon node to broadcast a newly signed beacon block to the beacon network, to be included in the beacon chain. A success response (20x) indicates that **the block passed gossip validation** and was successfully broadcast onto the network. **[emphasis mine]**\r\n\r\nPresently we don't do any verification of blocks before broadcast :eyes: :\r\n\r\nhttps://github.com/sigp/lighthouse/blob/693886b94176faa4cb450f024696cb69cda2fe58/beacon_node/http_api/src/publish_blocks.rs#L50-L54\r\n\r\nArguably this isn't so bad, as the gossip validation would mostly protect the proposer from publishing junk to the network which would reduce their peer score. Given that the beacon node HTTP API is assumed private, an attacker would need access in order to trick the BN into publishing junk. I don't think this poses a significant risk beyond the risk already posed by unfettered access to a beacon node's API.\r\n\r\n## Steps to resolve\r\n\r\nWe could do nothing, or we could add gossip validation in the process of implementing `broadcast_validation`.\r\n\r\nThere are potentially interactions with the gossip seen cache which could be beneficial. The handling of duplicates and slashable blocks would require special consideration.\r\n\r\n## Version\r\n\r\nLighthouse v4.1.0\r\n",
  "closed_by": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/4264/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/4264/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1537358177",
    "html_url": "https://github.com/sigp/lighthouse/issues/4264#issuecomment-1537358177",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4264",
    "id": 1537358177,
    "node_id": "IC_kwDOCFeAzc5bojlh",
    "user": {
      "login": "eserilev",
      "id": 7217615,
      "node_id": "MDQ6VXNlcjcyMTc2MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eserilev",
      "html_url": "https://github.com/eserilev",
      "followers_url": "https://api.github.com/users/eserilev/followers",
      "following_url": "https://api.github.com/users/eserilev/following{/other_user}",
      "gists_url": "https://api.github.com/users/eserilev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eserilev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eserilev/subscriptions",
      "organizations_url": "https://api.github.com/users/eserilev/orgs",
      "repos_url": "https://api.github.com/users/eserilev/repos",
      "events_url": "https://api.github.com/users/eserilev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eserilev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-07T08:32:15Z",
    "updated_at": "2023-05-07T08:32:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "would it be enough to check if `is_optimistic_or_invalid_block` returns false before broadcasting the block to the network?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1537358177/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1553865134",
    "html_url": "https://github.com/sigp/lighthouse/issues/4264#issuecomment-1553865134",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4264",
    "id": 1553865134,
    "node_id": "IC_kwDOCFeAzc5cnhmu",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-19T01:02:40Z",
    "updated_at": "2023-05-19T01:02:40Z",
    "author_association": "MEMBER",
    "body": "@eserilev No because that will only return a result for blocks that are already imported, and we need to check the block prior to it being imported\r\n\r\nI think we'd need to form a `GossipVerifiedBlock` for the block before broadcasting it, and then import this after broadcast.\r\n\r\n@jmcph4 is working on `broadcast_validation` currently, so might make sense to handle it in his PR",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1553865134/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1621238571",
    "html_url": "https://github.com/sigp/lighthouse/issues/4264#issuecomment-1621238571",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4264",
    "id": 1621238571,
    "node_id": "IC_kwDOCFeAzc5goiMr",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-05T08:00:09Z",
    "updated_at": "2023-07-05T08:00:09Z",
    "author_association": "MEMBER",
    "body": "Closed by #4316 ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1621238571/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
