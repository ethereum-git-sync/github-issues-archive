{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/4238",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/4238/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/4238/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/4238/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/4238",
  "id": 1684430135,
  "node_id": "I_kwDOCFeAzc5kZl03",
  "number": 4238,
  "title": "Attestation verification uses head state fork",
  "user": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4615284981,
      "node_id": "LA_kwDOCFeAzc8AAAABExeo9Q",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/deneb",
      "name": "deneb",
      "color": "B7BBEC",
      "default": false,
      "description": ""
    },
    {
      "id": 5383189287,
      "node_id": "LA_kwDOCFeAzc8AAAABQNzzJw",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/v4.2.0",
      "name": "v4.2.0",
      "color": "337948",
      "default": false,
      "description": "Q2 2023"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "jimmygchen",
    "id": 742762,
    "node_id": "MDQ6VXNlcjc0Mjc2Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/742762?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jimmygchen",
    "html_url": "https://github.com/jimmygchen",
    "followers_url": "https://api.github.com/users/jimmygchen/followers",
    "following_url": "https://api.github.com/users/jimmygchen/following{/other_user}",
    "gists_url": "https://api.github.com/users/jimmygchen/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jimmygchen/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jimmygchen/subscriptions",
    "organizations_url": "https://api.github.com/users/jimmygchen/orgs",
    "repos_url": "https://api.github.com/users/jimmygchen/repos",
    "events_url": "https://api.github.com/users/jimmygchen/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jimmygchen/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "jimmygchen",
      "id": 742762,
      "node_id": "MDQ6VXNlcjc0Mjc2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/742762?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmygchen",
      "html_url": "https://github.com/jimmygchen",
      "followers_url": "https://api.github.com/users/jimmygchen/followers",
      "following_url": "https://api.github.com/users/jimmygchen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmygchen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmygchen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmygchen/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmygchen/orgs",
      "repos_url": "https://api.github.com/users/jimmygchen/repos",
      "events_url": "https://api.github.com/users/jimmygchen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmygchen/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2023-04-26T07:23:14Z",
  "updated_at": "2023-05-15T04:27:21Z",
  "closed_at": "2023-05-15T04:27:21Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nIn the epoch after the Capella epoch DSRV (as a Lido operator) had an invalid block produced by Lighthouse.\r\n\r\n### Missed Block Details\r\n\r\n- Slot: `6209557`\r\n- Epoch: `194048` (This is the Capella fork epoch ðŸ‘€)\r\n- Block hash: `0xa009b1b9d1de0edcb14db82d098ba6e2d902e6b13424062a6ac3933e59a0c15e`\r\n- Proposer index: `211576`\r\n\r\n### Missed Block Logs\r\n\r\nThe we have a variety of logs. Those from Lighthouse and Nimbus showed a block which failed batch signature verification, meaning *one of* the signatures in the block is invalid. Prysm had more useful logs which showed that three attestations had invalid signatures:\r\n\r\n```\r\nbeacon-chain[284213]: time=\"2023-04-13 06:31:50\" level=debug msg=\"Received block\" blockSlot=6209557 graffiti=\"Lighthouse/v4.0.1-a53830f\r\nbeacon-chain[284213]: \" prefix=sync proposerIndex=211576 sinceSlotStartTime=3.41225891s\r\nbeacon-chain[284213]: time=\"2023-04-13 06:31:50\" level=debug msg=\"Inserting in invalid block cache\" prefix=sync root=0xa009b1b9d1de0edcb14db82d098ba6e2d902e6b13424062a6ac3933e59a0c15e\r\nbeacon-chain[284213]: time=\"2023-04-13 06:31:50\" level=error msg=\"Could not handle p2p pubsub\" error=\"could not process block: could not batch verify signature: some signatures are invalid. details:\r\nbeacon-chain[284213]: signature 'attestation signature' is invalid. signature: 0x8b9f6a72fe819f4d9e9c02a7c7b9d0fcc72236c5af54d2d31f1b427507a170017d154d16804346b8b8a4e1f8a3ac4a2d03fa109a71bbaf27ea5799db59d855159f7acb721dcd8da3b6daa43be6455a641eaa3058b7c856c829a66067d84ebd84, public key: 0xab6f91513b1d8118a5786a17f051d9664e0abf8e68e770fe67f1eef0c2da8f342349bbb856c12e3e3685da1285449832, message: 0x42d167388f1f3aefb7cd367817d2bf4c77f43a059b4314d3423d7632221c3dce\r\nbeacon-chain[284213]: signature 'attestation signature' is invalid. signature: 0x850287d27342e9e5ddba46d2a173061c9b5ae85203cd36f7677dbbed6e3c80d4151085165218be1772414d54cfe59f1b0213ee2ab721bf0e9f4481b57ad1907ede79bdc9947a87d7d4d37d3c15860892f7e1049c84d4a6f16eaa1a6a9f9f069c, public key: 0x83b8b961d70960af358ce221a1389e797f45f109e479c3ca4ea01cc2e176e87ab326ddfc305bf758c8feab1a689e3103, message: 0xdbbe100ff936d0d119eed1832a9aabbf90308a0cafe4e753d0ad6a60a3e4e8ef\r\nbeacon-chain[284213]: signature 'attestation signature' is invalid. signature: 0xa4715668f83b2973954aef35b4ff6aa505b65c679992522339b130524d93fce50d65f9eda1858bef055cee3b24f3be2719a55d7beba1e85139e9e2b6cd60c5f669e04b68912ecf7c59469c6ada65f5140dd83fa698e5be5c7704564132bdb0f8, public key: 0xae916e59115029ff5225b8cec6b331411c252b7ffe8d82bb8dd0d62b175ed1c2cea41d65aa7576fb66c356da64033129, message: 0xa82b2131661bcb773b13d2f80c4b5cb8532f82354b71f02629138dd1718f64a7\" prefix=sync topic=\"/eth2/bba4da96/beacon_block/ssz_snappy\"\r\n```\r\n\r\nUnfortunately we don't have the actual block (hence #4194) so we're limited in the information that we know.\r\n\r\nWhilst investigating I found an issue that I *think* caused this. Even if it didn't we need to fix it anyway.\r\n\r\n## Batch Attestation Signature Verification Issue\r\n\r\nThere are two places in batch attestation verification (*only* batch verification, not individual verification) where we use the `Fork` of the block at the head of the chain for signature verification:\r\n\r\nhttps://github.com/sigp/lighthouse/blob/693886b94176faa4cb450f024696cb69cda2fe58/beacon_node/beacon_chain/src/attestation_verification/batch.rs#L68\r\n\r\nhttps://github.com/sigp/lighthouse/blob/693886b94176faa4cb450f024696cb69cda2fe58/beacon_node/beacon_chain/src/attestation_verification/batch.rs#L172\r\n\r\nConsider the following scenario:\r\n\r\n1. The Capella fork happens at epoch 194048.\r\n1. We are at the fourth second of the first slot of epoch 194048.\r\n1. We haven't yet received the first block of epoch 194048, so our head is the last block in the epoch of 194047. This mean our \"head fork\" has `current_version: bellatrix` and `previous_version: altair`\r\n1. We start receiving valid attestations that were created in the first slot of epoch 194048. They will be signed using a fork with `current_version: capella` and `previous_version: bellatrix` (because they will have advanced their beacon state into the current epoch and therefore run [`upgrade_to_capella`](https://github.com/ethereum/consensus-specs/blob/dev/specs/capella/fork.md) before creating the attestation).\r\n\r\nIn this scenario, we will reject those valid attestations (this is bad). Additionally, anyone that forgot to update their node will be signing attestations using `current_version: bellatrix` and `previous_version: altair`. We will accept those attestations as invalid and put them in the op pool.\r\n\r\nThen, when we're packing a block we'll use those invalid attestations (because anything in the op pool should be valid) and therefore produce an invalid block (just like the one DSRV made).\r\n\r\n## Potential Solution\r\n\r\nThe naive solution would be to always clone the beacon state and run the state transition function to bring it up to the same slot as the attestation. However that clone and state processing is way too expensive so this would be impractical.\r\n\r\nSince we only need to `state.fork` structure upgraded, a much simpler and cheaper method would be to check to see if there is an \"upgrade\" function (e.g., `upgrade_to_capella`) in the slots between the slot of the head state and the slot of the attestation. If so, just update the `Fork` and use that. I think this would be quite easy to implement and very cheap at runtime.\r\n\r\nWe should also add some tests so that we prevent any regressions.\r\n\r\nIt's also worth noting that this is only a problem at fork boundaries. This issue will not demonstrate itself again until our next upgrade (Deneb). However, I think we should fix it quickly so that (a) we don't forget about it and (b) we don't do invalid stuff on the Deneb testnets.\r\n",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/4238/reactions",
    "total_count": 2,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/4238/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1530854663",
    "html_url": "https://github.com/sigp/lighthouse/issues/4238#issuecomment-1530854663",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4238",
    "id": 1530854663,
    "node_id": "IC_kwDOCFeAzc5bPv0H",
    "user": {
      "login": "jimmygchen",
      "id": 742762,
      "node_id": "MDQ6VXNlcjc0Mjc2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/742762?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmygchen",
      "html_url": "https://github.com/jimmygchen",
      "followers_url": "https://api.github.com/users/jimmygchen/followers",
      "following_url": "https://api.github.com/users/jimmygchen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmygchen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmygchen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmygchen/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmygchen/orgs",
      "repos_url": "https://api.github.com/users/jimmygchen/repos",
      "events_url": "https://api.github.com/users/jimmygchen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmygchen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-02T04:21:30Z",
    "updated_at": "2023-05-02T04:21:30Z",
    "author_association": "MEMBER",
    "body": "Hi @paulhauner I'd like to look into this one!",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1530854663/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1531001555",
    "html_url": "https://github.com/sigp/lighthouse/issues/4238#issuecomment-1531001555",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4238",
    "id": 1531001555,
    "node_id": "IC_kwDOCFeAzc5bQTrT",
    "user": {
      "login": "jimmygchen",
      "id": 742762,
      "node_id": "MDQ6VXNlcjc0Mjc2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/742762?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmygchen",
      "html_url": "https://github.com/jimmygchen",
      "followers_url": "https://api.github.com/users/jimmygchen/followers",
      "following_url": "https://api.github.com/users/jimmygchen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmygchen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmygchen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmygchen/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmygchen/orgs",
      "repos_url": "https://api.github.com/users/jimmygchen/repos",
      "events_url": "https://api.github.com/users/jimmygchen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmygchen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-02T07:20:08Z",
    "updated_at": "2023-05-03T06:23:48Z",
    "author_association": "MEMBER",
    "body": "Just to add to the above - slot `6209557` is slot 21 of the Capella epoch, and not one of the earlier slots in the epoch, but the scenario described by @paulhauner could still happen because the proposer of slot 21 may already had the invalid attestation added to the op pool early in the epoch, however it wasn't included in any of the earlier 20 slots (7 out of 20 were missed proposals, and others could potentially be other CL clients)  and remained in its op pool, hence when the validator gets a chance to propose a block, it included the invalid attestation, resulting in an invalid block. (diagnosis from @michaelsproul)\r\n\r\nI'm thinking to add the following test cases:\r\n\r\n1. an attestation with `data.slot` >= first capella slot signed with the pre-Capella fork should be REJECTED (currently ACCEPTED if our head is not up to date)\r\n2. an attestation with `data.slot` >= first capella slot signed with the Capella fork should be ACCEPTED (currently REJECTED if our head is not up to date)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1531001555/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1534127730",
    "html_url": "https://github.com/sigp/lighthouse/issues/4238#issuecomment-1534127730",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4238",
    "id": 1534127730,
    "node_id": "IC_kwDOCFeAzc5bcO5y",
    "user": {
      "login": "jimmygchen",
      "id": 742762,
      "node_id": "MDQ6VXNlcjc0Mjc2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/742762?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmygchen",
      "html_url": "https://github.com/jimmygchen",
      "followers_url": "https://api.github.com/users/jimmygchen/followers",
      "following_url": "https://api.github.com/users/jimmygchen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmygchen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmygchen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmygchen/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmygchen/orgs",
      "repos_url": "https://api.github.com/users/jimmygchen/repos",
      "events_url": "https://api.github.com/users/jimmygchen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmygchen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-04T05:51:01Z",
    "updated_at": "2023-05-04T05:51:01Z",
    "author_association": "MEMBER",
    "body": "I've managed to write tests for the above cases (thanks to @michaelsproul's help!), and interestingly only the 1st scenario fails. \r\n\r\nWith the 1st scenario (other node isn't aware of the fork and signed using `bellatrix`), our head fork (`bellatrix`) is used for _batch_ verification so the attestation signed using `bellatrix` passes, and the attestation is ACCEPTED. This needs to be fixed.\r\n\r\nIn the 2nd scenario (attestation signed with capella fork), the head fork (`bellatrix`) is used for _batch_ verification so the attestation signed using `capella` fails, and after this we do _individual_ verification, where the target epoch fork (`capella`) is used, and this passes the verification, hence the attestation is accepted, which is the right result, but costs the extra verification. \r\n\r\nIf we update the fork used with the proposed solution, it should fix the issue with the 1st scenario, and also eliminate the need for individual verification in the 2nd scenario.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1534127730/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1534131899",
    "html_url": "https://github.com/sigp/lighthouse/issues/4238#issuecomment-1534131899",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4238",
    "id": 1534131899,
    "node_id": "IC_kwDOCFeAzc5bcP67",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-04T05:58:01Z",
    "updated_at": "2023-05-04T05:58:01Z",
    "author_association": "MEMBER",
    "body": "Great progress @jimmygchen, interesting that only the first case fails! I think that's still consistent with the invalid block we saw: the invalid attestation from the 1st case would end up in the op pool and get packed in a block.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1534131899/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1541183825",
    "html_url": "https://github.com/sigp/lighthouse/issues/4238#issuecomment-1541183825",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4238",
    "id": 1541183825,
    "node_id": "IC_kwDOCFeAzc5b3JlR",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-10T02:02:35Z",
    "updated_at": "2023-05-10T02:02:35Z",
    "author_association": "MEMBER",
    "body": "Stumbled upon this old write-up from 2 years ago where Teku had essentially the same bug: https://hackmd.io/@ajsutton/rJmzlJyfY",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1541183825/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1547175902",
    "html_url": "https://github.com/sigp/lighthouse/issues/4238#issuecomment-1547175902",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/4238",
    "id": 1547175902,
    "node_id": "IC_kwDOCFeAzc5cOAfe",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-15T04:27:21Z",
    "updated_at": "2023-05-15T04:27:21Z",
    "author_association": "MEMBER",
    "body": "Resolved via #4263 ðŸŽ‰ ",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1547175902/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
