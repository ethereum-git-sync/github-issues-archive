{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/922",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/922/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/922/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/922/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/922",
  "id": 582686785,
  "node_id": "MDU6SXNzdWU1ODI2ODY3ODU=",
  "number": 922,
  "title": "BeaconState::get_active_validator_indices should check epoch",
  "user": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647286,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODY=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "7057ff",
      "default": true,
      "description": "Good for newcomers"
    },
    {
      "id": 1690958121,
      "node_id": "MDU6TGFiZWwxNjkwOTU4MTIx",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/code-quality",
      "name": "code-quality",
      "color": "77a7ff",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2020-03-17T01:12:12Z",
  "updated_at": "2020-07-07T00:52:28Z",
  "closed_at": "2020-07-07T00:52:28Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Description\r\n\r\nThe function `BeaconState::get_active_validator_indices` takes an arbitrary epoch and attempts to compute (without the committee cache) the active validators at that epoch. The problem is, we only have limited lookahead because of new validators activating and old validators leaving.\r\n\r\n## Steps to resolve\r\n\r\n1. Work out the minimum lookahead on the active validator set by reasoning about the activation queue, finalization, and the exit queue. Probably the most relevant part of the spec is [`process_registry_updates`](https://github.com/ethereum/eth2.0-specs/blob/v0.10.1/specs/phase0/beacon-chain.md#registry-updates). Based on some back of the envelope math it looks like maybe the safe lookahead is 2 epochs, i.e. 3 epoch transitions from when a deposit is made: 1st adds validator to the activation queue with eligibility in the next epoch, 2nd justifies the eligible epoch (best case), 3rd finalizes the eligible epoch (best case) thus activating the validator.\r\n2. Add a check on the epoch to `get_active_validator_indices`, returning an error when it is too high (or indeed too low).\r\n\r\nAlternatively, look into whether `get_active_validator_indices` actually needs to be accessible from the `BeaconState`. It's used by `get_beacon_proposer_index` which requires a sorted list of validator indices, and therefore can't use the active indices from the committee cache.",
  "closed_by": {
    "login": "michaelsproul",
    "id": 4452260,
    "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelsproul",
    "html_url": "https://github.com/michaelsproul",
    "followers_url": "https://api.github.com/users/michaelsproul/followers",
    "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
    "repos_url": "https://api.github.com/users/michaelsproul/repos",
    "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/922/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/922/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/640270872",
    "html_url": "https://github.com/sigp/lighthouse/issues/922#issuecomment-640270872",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/922",
    "id": 640270872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDI3MDg3Mg==",
    "user": {
      "login": "ethDreamer",
      "id": 37123614,
      "node_id": "MDQ6VXNlcjM3MTIzNjE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/37123614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ethDreamer",
      "html_url": "https://github.com/ethDreamer",
      "followers_url": "https://api.github.com/users/ethDreamer/followers",
      "following_url": "https://api.github.com/users/ethDreamer/following{/other_user}",
      "gists_url": "https://api.github.com/users/ethDreamer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ethDreamer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ethDreamer/subscriptions",
      "organizations_url": "https://api.github.com/users/ethDreamer/orgs",
      "repos_url": "https://api.github.com/users/ethDreamer/repos",
      "events_url": "https://api.github.com/users/ethDreamer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ethDreamer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-07T19:54:22Z",
    "updated_at": "2020-06-07T19:54:22Z",
    "author_association": "COLLABORATOR",
    "body": "I will take a look at this.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/640270872/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/649130744",
    "html_url": "https://github.com/sigp/lighthouse/issues/922#issuecomment-649130744",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/922",
    "id": 649130744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTEzMDc0NA==",
    "user": {
      "login": "ethDreamer",
      "id": 37123614,
      "node_id": "MDQ6VXNlcjM3MTIzNjE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/37123614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ethDreamer",
      "html_url": "https://github.com/ethDreamer",
      "followers_url": "https://api.github.com/users/ethDreamer/followers",
      "following_url": "https://api.github.com/users/ethDreamer/following{/other_user}",
      "gists_url": "https://api.github.com/users/ethDreamer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ethDreamer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ethDreamer/subscriptions",
      "organizations_url": "https://api.github.com/users/ethDreamer/orgs",
      "repos_url": "https://api.github.com/users/ethDreamer/repos",
      "events_url": "https://api.github.com/users/ethDreamer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ethDreamer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-24T23:43:21Z",
    "updated_at": "2020-06-24T23:44:42Z",
    "author_association": "COLLABORATOR",
    "body": "@michaelsproul \r\nI'm a little confused about this question after looking into it for a while. You say:\r\n> work out the minimum lookahead\r\n> return an error [when epoch is] too low\r\n\r\nCorrect me if I'm wrong but the active validator set is known for the current epoch and every past epoch correct? So I'm not sure what you mean by minimum lookahead / too low (other than a negative number).\r\n\r\nI believe your maximum of 3 epoch transitions is correct at least as far as the activation queue goes but I still need to work out the exit queue. I should be done soon..",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/649130744/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/649411233",
    "html_url": "https://github.com/sigp/lighthouse/issues/922#issuecomment-649411233",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/922",
    "id": 649411233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTQxMTIzMw==",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-25T09:13:24Z",
    "updated_at": "2020-06-25T09:13:24Z",
    "author_association": "MEMBER",
    "body": "@ethDreamer You're right! There's no lower limit! Thanks for looking into this :)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/649411233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/649880305",
    "html_url": "https://github.com/sigp/lighthouse/issues/922#issuecomment-649880305",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/922",
    "id": 649880305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTg4MDMwNQ==",
    "user": {
      "login": "ethDreamer",
      "id": 37123614,
      "node_id": "MDQ6VXNlcjM3MTIzNjE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/37123614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ethDreamer",
      "html_url": "https://github.com/ethDreamer",
      "followers_url": "https://api.github.com/users/ethDreamer/followers",
      "following_url": "https://api.github.com/users/ethDreamer/following{/other_user}",
      "gists_url": "https://api.github.com/users/ethDreamer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ethDreamer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ethDreamer/subscriptions",
      "organizations_url": "https://api.github.com/users/ethDreamer/orgs",
      "repos_url": "https://api.github.com/users/ethDreamer/repos",
      "events_url": "https://api.github.com/users/ethDreamer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ethDreamer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-26T00:19:46Z",
    "updated_at": "2020-06-26T01:09:48Z",
    "author_association": "COLLABORATOR",
    "body": "Okay so I'll try to write this out in steps simplifying as I go:\r\n\r\nThere are 4 events that could change the active validator set:\r\n\r\n1. NEW DEPOSIT:\r\n```\r\nstate_transition():\r\n\tprocess_slots():\r\n\t\tprocess_epoch():  // once per epoch when (state.slot + 1) % SLOTS_PER_EPOCH == 0\r\n\tprocess_block():\r\n\t\tprocess_operations():\r\n\t\t\tprocess_deposit(): // leads to one of the following which can make validator eligible for activation queue\r\n\t\t\t\t1:\tget_validator_from_deposit()\r\n\t\t\t\t2:\tincrease_balance()\r\n```\r\n2. VALIDATOR SLASHED\r\n```\r\nstate_transition()\r\n\tprocess_slots():\r\n\t\tprocess_epoch():  // once per epoch when (state.slot + 1) % SLOTS_PER_EPOCH == 0\r\n\tprocess_block():\r\n\t\tprocess_operations():\r\n\t\t\tprocess_proposer_slashing() / process_attester_slashing():\r\n\t\t\t\tslash_validator():\r\n\t\t\t\t\tinitiate_validator_exit():\r\n\t\t\t\t\t\tvalidator.exit_epoch = compute_activation_exit_epoch(); // MINIMUM\r\n```\r\n3. VOLUNTARY EXIT\r\n```\r\nstate_transition()\r\n\tprocess_slots():\r\n\t\tprocess_epoch():  // once per epoch when (state.slot + 1) % SLOTS_PER_EPOCH == 0\r\n\tprocess_block():\r\n\t\tprocess_operations():\r\n\t\t\tprocess_voluntary_exit():\r\n\t\t\t\tinitiate_validator_exit():\r\n\t\t\t\t\tvalidator.exit_epoch = compute_activation_exit_epoch(); // MINIMUM\r\n```\r\n4. PENALTIES FORCE VALIDATOR TO EXIT\r\n```\r\nstate_transition():\r\n\tprocess_slots():\r\n\t\tprocess_epoch(): // once per epoch when (state.slot + 1) % SLOTS_PER_EPOCH == 0\r\n\t\t\t...\r\n\t\t\tprocess_rewards_and_penalties():\r\n\t\t\t// expanded below\r\n```\r\n\r\nI need to expand on process_epoch():\r\n```\r\nprocess_epoch(): // once per epoch when (state.slot + 1) % SLOTS_PER_EPOCH == 0\r\n\tprocess_justification_and_finalization()\r\n\t\t// skimming this code I *think* (don't quote me) the smallest epoch increments are:\r\n\t\tMIN_JUSTIFICATION_GAP = 1\r\n\t\tMIN_FINALIZATION_GAP = 2\r\n\tprocess_rewards_and_penalties()\r\n\tprocess_registry_updates()\r\n\t\tforeach validator:\r\n\t\t\tif eligible_for_activation_queue():\r\n\t\t\t\tvalidator.activation_eligibility_epoch = current_epoch+1\r\n\t\t\tif validator.effective_balance <= EJECTION_BALANCE\r\n\t\t\t\tinitiate_validator_exit():  // this is case 4\r\n\t\t\t\t\tvalidator.exit_epoch = compute_activation_exit_epoch(); // MINIMUM\r\n\t\tforeach validator in activation_queue < churn_limit:\r\n\t\t\tif validator.activation_eligibility_epoch <= state.finalized_checkpoint.epoch\r\n\t\t\t\tvalidator.activation_epoch = compute_activation_exit_epoch(); // MINIMUM\r\n```\r\n\r\nFor case 1, due to the order of process_slots() THEN process_block(), notice that if the current slot satisfies `(state.slot + 1) % SLOTS_PER_EPOCH == 0`, then we need to add one extra epoch to the answer.\r\n\r\nI will simplify by noting that:\r\n```\r\ncompute_activation_exit_epoch(epoch):\r\n\treturn epoch + 1 + MAX_SEED_LOOKAHEAD // = epoch + 1 + 4 = epoch + 5\r\n```\r\nTherefore:\r\n1. NEW DEPOSIT\r\n```\r\n// assume deposit was made and validator added this epoch\r\nvalidator.activation_epoch = compute_activation_exit_epoch(MIN_FINALIZATION_GAP + (current_epoch + 1))\r\n```\r\n2-4. VALIDATOR SLASHED / VOLUNTARY EXIT / PENALTIES FORCE VALIDATOR EXIT:\r\n```\r\nvalidator.exit_epoch = compute_activation_exit_epoch(current_epoch); // MINIMUM\t\r\n```\r\nsimplifies to:\r\n1. NEW DEPOSIT\r\n```\r\nvalidator.activation_epoch = current_epoch + MIN_FINALIZATION_GAP + 2 + MAX_SEED_LOOKAHEAD\r\n```\r\n2-4. VALIDATOR SLASHED / VOLUNTARY EXIT / PENALTIES FORCE VALIDATOR EXIT:\r\n```\r\nvalidator.exit_epoch = current_epoch + 1 + MAX_SEED_LOOKAHEAD\r\n```\r\n\r\nSince cases 2-4 have a minimum < case 1, I don't really need to precisely calculate FINALIZATION_GAP (or worry about that extra epoch when `(state.slot + 1) % SLOTS_PER_EPOCH == 0`.\r\n\r\nEDIT:\r\nAlso realized there is a faster instance of case 1 for validators leftover in the activation queue (aka with activation_eligibility_epoch <= state.finalized_checkpoint.epoch) but which have not had their activation_epoch set yet. In this case, the minimum shortens to the same as the other 3 cases `compute_activation_exit_epoch(current_epoch)` = current_epoch + 1 + MAX_SEED_LOOKAHEAD so the answer is the same.\r\n\r\ntl;dr\r\nThe save lookahead is MAX_SEED_LOOKAHEAD (aka 4 in current spec).\r\nI'll make a PR :)",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/649880305/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/654535709",
    "html_url": "https://github.com/sigp/lighthouse/issues/922#issuecomment-654535709",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/922",
    "id": 654535709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDUzNTcwOQ==",
    "user": {
      "login": "michaelsproul",
      "id": 4452260,
      "node_id": "MDQ6VXNlcjQ0NTIyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsproul",
      "html_url": "https://github.com/michaelsproul",
      "followers_url": "https://api.github.com/users/michaelsproul/followers",
      "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsproul/orgs",
      "repos_url": "https://api.github.com/users/michaelsproul/repos",
      "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsproul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-07T00:52:24Z",
    "updated_at": "2020-07-07T00:52:24Z",
    "author_association": "MEMBER",
    "body": "Closed by #1300",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/654535709/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
