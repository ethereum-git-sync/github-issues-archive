{
  "url": "https://api.github.com/repos/sigp/lighthouse/issues/2880",
  "repository_url": "https://api.github.com/repos/sigp/lighthouse",
  "labels_url": "https://api.github.com/repos/sigp/lighthouse/issues/2880/labels{/name}",
  "comments_url": "https://api.github.com/repos/sigp/lighthouse/issues/2880/comments",
  "events_url": "https://api.github.com/repos/sigp/lighthouse/issues/2880/events",
  "html_url": "https://github.com/sigp/lighthouse/issues/2880",
  "id": 1087481642,
  "node_id": "I_kwDOCFeAzc5A0acq",
  "number": 2880,
  "title": "Support Lookahead for the Next Epoch via `eth/v1/validator/duties/proposer`",
  "user": {
    "login": "jclapis",
    "id": 627896,
    "node_id": "MDQ6VXNlcjYyNzg5Ng==",
    "avatar_url": "https://avatars.githubusercontent.com/u/627896?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jclapis",
    "html_url": "https://github.com/jclapis",
    "followers_url": "https://api.github.com/users/jclapis/followers",
    "following_url": "https://api.github.com/users/jclapis/following{/other_user}",
    "gists_url": "https://api.github.com/users/jclapis/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jclapis/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jclapis/subscriptions",
    "organizations_url": "https://api.github.com/users/jclapis/orgs",
    "repos_url": "https://api.github.com/users/jclapis/repos",
    "events_url": "https://api.github.com/users/jclapis/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jclapis/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 985647284,
      "node_id": "MDU6TGFiZWw5ODU2NDcyODQ=",
      "url": "https://api.github.com/repos/sigp/lighthouse/labels/enhancement",
      "name": "enhancement",
      "color": "a2eeef",
      "default": true,
      "description": "New feature or request"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-12-23T08:16:42Z",
  "updated_at": "2022-03-15T02:17:51Z",
  "closed_at": "2022-03-15T02:17:51Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hello!\r\n\r\nWe're adding a new feature to the Rocket Pool node operator dashboard which notifies users when they have an upcoming block proposal or sync committee, so they know not to take their systems down for maintenance. We're using the standard Beacon REST API for this. For example, assuming the current Epoch is 61766:\r\n\r\n```\r\ncurl -X GET \"http://localhost:5052/eth/v1/validator/duties/proposer/61767\" -H \"accept: application/json\"\r\n```\r\n\r\nThis returns the following:\r\n\r\n```\r\n{\"code\":400,\"message\":\"BAD_REQUEST: request epoch 61767 is ahead of the current epoch 61766\",\"stacktraces\":[]}\r\n```\r\n\r\nNimbus and Teku allow us to look ahead a single Epoch like this, but Lighthouse and Prysm do not. We actually had [a lengthy discussion in Discord](https://discord.com/channels/605577013327167508/618981555985186827/923422432415608872) with representatives from all four client teams about this behavior including @macladson, and after some back and forth, the opinion seems to be that the volatility associated with proposer assignment is quite low (though non-zero) when looking at the next Epoch.\r\n\r\nFor our purposes, it's low enough that we would find this quite useful to have and false-positives won't do any harm other than disappointing the user. We've added [an issue](https://github.com/prysmaticlabs/prysm/issues/10035) to Prysm's Github page to request the behavior there as well if you'd like to track it. \r\n\r\nThank you!",
  "closed_by": {
    "login": "paulhauner",
    "id": 6660660,
    "node_id": "MDQ6VXNlcjY2NjA2NjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paulhauner",
    "html_url": "https://github.com/paulhauner",
    "followers_url": "https://api.github.com/users/paulhauner/followers",
    "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
    "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
    "organizations_url": "https://api.github.com/users/paulhauner/orgs",
    "repos_url": "https://api.github.com/users/paulhauner/repos",
    "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paulhauner/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/2880/reactions",
    "total_count": 5,
    "+1": 4,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/sigp/lighthouse/issues/2880/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1008443353",
    "html_url": "https://github.com/sigp/lighthouse/issues/2880#issuecomment-1008443353",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2880",
    "id": 1008443353,
    "node_id": "IC_kwDOCFeAzc48G5_Z",
    "user": {
      "login": "paulhauner",
      "id": 6660660,
      "node_id": "MDQ6VXNlcjY2NjA2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6660660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulhauner",
      "html_url": "https://github.com/paulhauner",
      "followers_url": "https://api.github.com/users/paulhauner/followers",
      "following_url": "https://api.github.com/users/paulhauner/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulhauner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulhauner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulhauner/subscriptions",
      "organizations_url": "https://api.github.com/users/paulhauner/orgs",
      "repos_url": "https://api.github.com/users/paulhauner/repos",
      "events_url": "https://api.github.com/users/paulhauner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulhauner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-09T23:14:26Z",
    "updated_at": "2022-01-09T23:14:26Z",
    "author_association": "MEMBER",
    "body": "Hey @jclapis, thanks for raising this!\r\n\r\nI agree that making the next-epoch proposer duties available is reasonable.\r\n\r\nIn implementation, we'll have to choose whether or not we cache the values in the [`BeaconProposerCache`](https://github.com/sigp/lighthouse/blob/stable/beacon_node/beacon_chain/src/beacon_proposer_cache.rs) during API requests. Here's the good and bad if we *do* cache the values:\r\n\r\n- Good: we avoid doing duplicate per-slot and per-epoch processing.\r\n- Bad: we can very easily \"wash-out\" the cache with speculative next-epoch values.\r\n\r\nPerhaps it would be sensible to increase the proposer cache [`CACHE_SIZE`](https://github.com/sigp/lighthouse/blob/fff01b24ddedcd54486e374460855ca20d3dd232/beacon_node/beacon_chain/src/beacon_proposer_cache.rs#L16) to something like 64. That should mean we can cache API request values and our cache can't get washed out even if someone calls the endpoint for every slot in an epoch.",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1008443353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1018790577",
    "html_url": "https://github.com/sigp/lighthouse/issues/2880#issuecomment-1018790577",
    "issue_url": "https://api.github.com/repos/sigp/lighthouse/issues/2880",
    "id": 1018790577,
    "node_id": "IC_kwDOCFeAzc48uYKx",
    "user": {
      "login": "eklm",
      "id": 206695,
      "node_id": "MDQ6VXNlcjIwNjY5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/206695?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eklm",
      "html_url": "https://github.com/eklm",
      "followers_url": "https://api.github.com/users/eklm/followers",
      "following_url": "https://api.github.com/users/eklm/following{/other_user}",
      "gists_url": "https://api.github.com/users/eklm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eklm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eklm/subscriptions",
      "organizations_url": "https://api.github.com/users/eklm/orgs",
      "repos_url": "https://api.github.com/users/eklm/repos",
      "events_url": "https://api.github.com/users/eklm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eklm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-21T19:18:08Z",
    "updated_at": "2022-01-21T19:18:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi, I'm interested in picking it up. \r\n\r\nI tried to change the condition in the endpoint and it works fine but the cache for the next epoch requests doesn't make much sense as block_root in (epoch, block_root) key is changing every slot (we look at the end of the current epoch). It only helps for the requests inside one slot. So I think of implementing it without cache unless request is done at the very end of epoch (the same like tolerant_current_epoch currently). @paulhauner what do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/sigp/lighthouse/issues/comments/1018790577/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
