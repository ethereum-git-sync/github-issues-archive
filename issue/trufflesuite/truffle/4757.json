{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/4757",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4757/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4757/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4757/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/4757",
  "id": 1144609849,
  "node_id": "I_kwDOAkfq-c5EOVw5",
  "number": 4757,
  "title": "How to prevent PollingBlockTracker from crashing my nodejs",
  "user": {
    "login": "stranger-games",
    "id": 7149867,
    "node_id": "MDQ6VXNlcjcxNDk4Njc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7149867?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stranger-games",
    "html_url": "https://github.com/stranger-games",
    "followers_url": "https://api.github.com/users/stranger-games/followers",
    "following_url": "https://api.github.com/users/stranger-games/following{/other_user}",
    "gists_url": "https://api.github.com/users/stranger-games/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stranger-games/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stranger-games/subscriptions",
    "organizations_url": "https://api.github.com/users/stranger-games/orgs",
    "repos_url": "https://api.github.com/users/stranger-games/repos",
    "events_url": "https://api.github.com/users/stranger-games/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stranger-games/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1403343142,
      "node_id": "MDU6TGFiZWwxNDAzMzQzMTQy",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/needs%20investigated",
      "name": "needs investigated",
      "color": "b7410e",
      "default": false,
      "description": ""
    },
    {
      "id": 1675041996,
      "node_id": "MDU6TGFiZWwxNjc1MDQxOTk2",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/priority4%20%F0%9F%93%8B",
      "name": "priority4 üìã",
      "color": "006b75",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-02-19T08:23:15Z",
  "updated_at": "2022-07-14T22:17:48Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "- I've opened a support ticket before filing this issue.\r\n\r\n---------------------------\r\n\r\n## Issue\r\n\r\nRPC endpoint errors causing nodejs process to crash.\r\nI am connecting to HDWalletProvider on a nodejs backend. It's typical to receive once in a while an error from RPC end point like time out or PollingBlockTracker. This is understandable and not the issue. The issue is that any RPC error cause my nodejs server to crash.\r\n\r\nIs there a way to catch RPC errors to prevent crashing and handle it by skipping the block or retrying or whatever.\r\n\r\nPlease note that this issue is not about the timeout error or polling block tracker error. This issue is about the process crashing when those errors occur.\r\n\r\n## Steps to Reproduce\r\n\r\nSimple initialization of web3 with RPC end point like this.\r\n`const web3_56 = new Web3(new HDWalletProvider(process.env.PRIVATE_PRODUCTION, `${process.env.BSC_MAINNET_NODE}`));//bscmainnet\r\n`\r\nThen initializing contracts like this. If the contract has some events the errors are more likely to occur.\r\n\r\n`var contract = new web3.eth.Contract(abi, address);`\r\n\r\nLeave the process even without activity until some kind of RPC end point error occurs (timeout or polling block tracker or whatever).\r\n\r\n## Expected Behavior\r\n\r\nI expect to have a way to catch those errors and decide in code what to do without having my nodejs process crash.\r\n\r\n## Actual Results\r\n\r\nMy nodejs process crash if any RPC error occurs.\r\n\r\n> C:\\prj\\server\\node_modules\\safe-event-emitter\\index.js:74\r\n>       throw err\r\n>       ^\r\n> \r\n> Error: PollingBlockTracker - encountered an error while attempting to update latest block:\r\n> undefined\r\n>     at PollingBlockTracker._performSync (C:\\prj\\server\\node_modules\\eth-block-tracker\\src\\p    at runMicrotasks (<anonymous>)\r\n> Emitted 'error' event on Web3ProviderEngine instance at:\r\n>     at safeApply (C:\\prj\\server\\node_modules\\safe-event-emitter\\index.js:70:5)\r\n>     at PollingBlockTracker.SafeEventEmitter.emit (C:\\prj\\server\\node_modules\\safe-event-emitter\\index.js:56:5)\r\n>     at PollingBlockTracker._performSync (C:\\prj\\server\\node_modules\\eth-block-tracker\\src\\polling.js:53:16)\r\n>     at runMicrotasks (<anonymous>)\r\n>     at processTicksAndRejections (internal/process/task_queues.js:95:5)\r\n\r\n## Environment\r\n\r\n* Operating System: \r\n* Windows\r\n* Ethereum client:\r\n* hdwallet-provider\r\n* Truffle version:\r\n* @truffle/hdwallet-provider\": \"^2.0.0\r\n* node version (`node --version`):\r\n* v14.18.2\r\n* npm version (`npm --version`): \r\n* 6.14.15\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/4757/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4757/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1049127072",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4757#issuecomment-1049127072",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4757",
    "id": 1049127072,
    "node_id": "IC_kwDOAkfq-c4-iGig",
    "user": {
      "login": "eggplantzzz",
      "id": 14827965,
      "node_id": "MDQ6VXNlcjE0ODI3OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggplantzzz",
      "html_url": "https://github.com/eggplantzzz",
      "followers_url": "https://api.github.com/users/eggplantzzz/followers",
      "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
      "repos_url": "https://api.github.com/users/eggplantzzz/repos",
      "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-23T19:18:02Z",
    "updated_at": "2022-02-23T19:18:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @stranger-games for raising this! I agree, we should definitely dig into this a bit to try and prevent this behavior. We'll have to do some investigating to try and figure out exactly what is going on. We'll put this in the backlog. Thanks again!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1049127072/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1061000362",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4757#issuecomment-1061000362",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4757",
    "id": 1061000362,
    "node_id": "IC_kwDOAkfq-c4_PZSq",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-07T18:32:04Z",
    "updated_at": "2022-03-07T18:32:04Z",
    "author_association": "MEMBER",
    "body": "Hm, so here's a thought on how to deal with this...\r\n\r\nFirstly, the na√Øve approach might be to add `.catch()` clauses around every use of `this.initialized` across the HDWallet code. Problem is: there's a race condition! Since `this.initialized = this.initialize()` gets invoked during the constructor, then awaited later, there's a slice of time where a rejection will be unhandled, which we all know that Node.js abhors. And we can't just put a `.catch()` in the constructor, since that's a synchronous context and the same sort of dragons exist.\r\n\r\nSo what's the alternative? We could change the behavior of `this.initialize()` so as never to reject for known failure modes. Instead, we make the promise returned by `this.initialize()` resolve to one of two kinds of values: one for success and one for error. Then, whenever we need to await `this.initialized` (like in `send()` or `sendAsync()`), we first check the resolved promise and handle the failure case with a proper in-line exception then and there. No unhandled rejections for Node.js to complain about!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1061000362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1063408150",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4757#issuecomment-1063408150",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4757",
    "id": 1063408150,
    "node_id": "IC_kwDOAkfq-c4_YlIW",
    "user": {
      "login": "eggplantzzz",
      "id": 14827965,
      "node_id": "MDQ6VXNlcjE0ODI3OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggplantzzz",
      "html_url": "https://github.com/eggplantzzz",
      "followers_url": "https://api.github.com/users/eggplantzzz/followers",
      "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
      "repos_url": "https://api.github.com/users/eggplantzzz/repos",
      "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-09T21:50:30Z",
    "updated_at": "2022-03-10T19:38:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "After more investigation I'm not sure that this is going to be easily solvable. Looks like during initialization of web3-provider-engine it automatically tries to fetch block info in the background. This then causes it to fail if there is a bad connection/url. Since we don't have access to the internals of web3-provider-engine it seems to be out of our reach. :(",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1063408150/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1184949361",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4757#issuecomment-1184949361",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4757",
    "id": 1184949361,
    "node_id": "IC_kwDOAkfq-c5GoORx",
    "user": {
      "login": "brandsimon",
      "id": 35434133,
      "node_id": "MDQ6VXNlcjM1NDM0MTMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/35434133?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brandsimon",
      "html_url": "https://github.com/brandsimon",
      "followers_url": "https://api.github.com/users/brandsimon/followers",
      "following_url": "https://api.github.com/users/brandsimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/brandsimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brandsimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brandsimon/subscriptions",
      "organizations_url": "https://api.github.com/users/brandsimon/orgs",
      "repos_url": "https://api.github.com/users/brandsimon/repos",
      "events_url": "https://api.github.com/users/brandsimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brandsimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-14T22:17:48Z",
    "updated_at": "2022-07-14T22:17:48Z",
    "author_association": "NONE",
    "body": "I encountered the same problem, when I tested how my project handles network errors. (I disabled the network before starting the project, so node exited because of the unhandled rejected promise).\r\nSince I need a solution now,  I \"fixed\" the problem with a dirty workaround: I overwrote the `initialize` to never reject.\r\nHere is an example, if someone has the same problem:\r\n\r\n```\r\nconst HDWalletProvider = require(\"@truffle/hdwallet-provider\");\r\n\r\nfunction sleep(millis) {\r\n\treturn new Promise(resolve => setTimeout(resolve, millis));\r\n}\r\n\r\nasync function run() {\r\n\tconst origInit = HDWalletProvider.prototype.initialize;\r\n\tHDWalletProvider.prototype.initialize = async function () {\r\n\t\twhile (true) {\r\n\t\t\ttry {\r\n\t\t\t\treturn await origInit.call(this);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(\"origInit failed\");\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t\tawait sleep(1000);\r\n\t\t}\r\n\t};\r\n\tconst provider = new HDWalletProvider({\r\n\t\t// private key is known in the web already\r\n\t\tprivateKeys: [\"8da4ef21b864d2cc526dbdb2a120bd2874c36c9d0a1fb7f8c63d7f7a8b41de8f\"],\r\n\t\tproviderOrUrl: \"http://10.0.2.2:8545\",\r\n\t\taddressIndex: 0,\r\n\t});\r\n\tprovider.engine._blockTracker.on('error', function (e) {\r\n\t\tconsole.log('BlockTracker error', e);\r\n\t\tconsole.log(e);\r\n\t});\r\n\tprovider.engine.on('error', function (e) {\r\n\t\tconsole.log('Web3ProviderEngine error');\r\n\t\tconsole.log(e);\r\n\t});\r\n\tawait sleep(60 * 60 * 1000);\r\n\tprovider.engine.stop();\r\n}\r\n\r\nrun().catch(console.log);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1184949361/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
