{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/936",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/936/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/936/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/936/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/936",
  "id": 320208712,
  "node_id": "MDU6SXNzdWUzMjAyMDg3MTI=",
  "number": 936,
  "title": "Truffle tests fail on Solidity 0.4.23 but work on Remix ",
  "user": {
    "login": "arnoudbevers",
    "id": 23448156,
    "node_id": "MDQ6VXNlcjIzNDQ4MTU2",
    "avatar_url": "https://avatars.githubusercontent.com/u/23448156?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/arnoudbevers",
    "html_url": "https://github.com/arnoudbevers",
    "followers_url": "https://api.github.com/users/arnoudbevers/followers",
    "following_url": "https://api.github.com/users/arnoudbevers/following{/other_user}",
    "gists_url": "https://api.github.com/users/arnoudbevers/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/arnoudbevers/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/arnoudbevers/subscriptions",
    "organizations_url": "https://api.github.com/users/arnoudbevers/orgs",
    "repos_url": "https://api.github.com/users/arnoudbevers/repos",
    "events_url": "https://api.github.com/users/arnoudbevers/events{/privacy}",
    "received_events_url": "https://api.github.com/users/arnoudbevers/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 12,
  "created_at": "2018-05-04T09:30:55Z",
  "updated_at": "2018-05-08T14:57:26Z",
  "closed_at": "2018-05-08T14:57:26Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "- [N] I've asked for help in the [Truffle Gitter](http://gitter.im/Consensys/truffle) before filing this issue. \r\n\r\n---------------------------\r\n\r\n## Issue\r\n\r\nMethods that worked in Solidity version 0.4.20 do not work in 0.4.23, while they do work in Remix.\r\nOnly thing that has been changed in a contract is constructor - rest stayed the same.\r\n\r\n## Steps to Reproduce\r\n\r\nRun the ./testRootPerson.js test with both 0.4.20 and 0.4.23 compiler (changing pragma's in contracts).\r\n\r\n## Expected Behavior\r\nCalling get functions on contracts work, all tests should run.\r\n\r\n## Actual Results\r\nTests fail, due to get methods returning 0x values instead of actual values.\r\n\r\n- When running the attached testRootPerson.js test, certain tests return null values when run with Solidity 0.4.23 compiler.\r\n- When running tests with 0.4.20 compiler (npm install solc@0.4.20 in truffle node_modules) they succeed.\r\n- Copying the contracts into Remix, selecting the 0.4.23 compiler, and calling the methods on the contracts, they work.\r\n- Truffle compiler gives a different bytecode output than Remix does using compiler 0.4.23+commit.124ca40d.Emscripten.clang\r\n_**Code supplied at bottom of issue**_\r\n\r\n0.4.20:\r\n![afbeelding](https://user-images.githubusercontent.com/23448156/39620990-647f2f58-4f8d-11e8-81a0-dfc33298599d.png)\r\n\r\n0.4.23:\r\n![afbeelding](https://user-images.githubusercontent.com/23448156/39619554-94e95074-4f88-11e8-95f0-335349c3eef0.png)\r\n\r\n## Environment\r\n\r\n* Operating System:  Windows 10 x64 - Ubuntu 16.04 on Virtual Machine\r\n* Ethereum client: Local 3 node Quorum network on VM\r\n* Truffle version (`truffle version`): Truffle v4.1.7 (core: 4.1.7) - Solidity v0.4.23 (solc-js)\r\n* node version (`node --version`): v8.9.4\r\n* npm version (`npm --version`): 5.6.0\r\n\r\n**Person.sol**\r\n```\r\npragma solidity ^0.4.23;\r\n\r\ncontract Person {\r\n\r\n    bytes32 public name;\r\n    struct ContactInformation {\r\n        bytes32 street;\r\n        uint number;\r\n        bytes32 postalCode;\r\n        bytes32 city;\r\n        bytes32 country;\r\n        bytes32 phoneNumber;\r\n    }\r\n\r\n    ContactInformation public contactInfo;\r\n\r\n    constructor(\r\n        bytes32 _name, bytes32 _street, uint _number, bytes32 _postalCode,\r\n        bytes32 _city, bytes32 _country, bytes32 _phoneNumber) public {\r\n        name = _name;\r\n        contactInfo = ContactInformation(_street, _number, _postalCode, _city, _country, _phoneNumber);\r\n    }\r\n\r\n    function getStreet() public view returns (bytes32) {\r\n        return contactInfo.street;\r\n    }\r\n\r\n    function getNumber() public view returns (uint) {\r\n        return contactInfo.number;\r\n    }\r\n\r\n    function getPostalCode() public view returns (bytes32) {\r\n        return contactInfo.postalCode;\r\n    }\r\n\r\n    function getCity() public view returns (bytes32) {\r\n        return contactInfo.city;\r\n    }\r\n\r\n    function getCountry() public view returns (bytes32) {\r\n        return contactInfo.country;\r\n    }\r\n\r\n    function getPhoneNumber() public view returns (bytes32) {\r\n        return contactInfo.phoneNumber;\r\n    }\r\n}\r\n```\r\n\r\n**Root.sol**\r\n```\r\npragma solidity ^0.4.23;\r\n\r\nimport \"./Person.sol\";\r\n\r\ncontract Root {\r\n    \r\n    Person[] public persons;\r\n    mapping(address => bytes32) public personAddressToName;\r\n    \r\n    \r\n    function addPerson(address _personAddress) public {\r\n        require(_personAddress != address(0));\r\n        Person person = Person(_personAddress);\r\n        persons.push(person);\r\n    }\r\n\r\n    function getPersonByAddress(address _personAddress) public view\r\n    returns(address personAddress, bytes32 personName, bytes32 street, uint number, bytes32 postalCode,\r\n    bytes32 city, bytes32 country, bytes32 phoneNumber) {\r\n        Person p = Person(_personAddress);\r\n        require(p != Person(0x0));\r\n        personName = p.name();\r\n        street = p.getStreet();\r\n        number = p.getNumber();\r\n        postalCode = p.getPostalCode();\r\n        city = p.getCity();\r\n        country = p.getCountry();\r\n        phoneNumber = p.getPhoneNumber();\r\n        return (_personAddress, personName, street, number, postalCode, city, country, phoneNumber);\r\n    }\r\n\r\n    function getAllPersons() public view returns (Person[]) {\r\n        return persons;\r\n    }\r\n\r\n    function getPersonAddressesAndNames() public view returns (Person[] addresses, bytes32[] memory names) {\r\n        names = new bytes32[](persons.length);\r\n        for (uint i = 0; i < persons.length; i++) {\r\n            Person p = Person(persons[i]);\r\n            names[i] = p.name();\r\n        }\r\n        return (persons, names);\r\n    }\r\n\r\n}\r\n```\r\n\r\n**testRootPerson.js**\r\n```\r\nconst Root = artifacts.require('Root');\r\nconst Person = artifacts.require('Person');\r\nconst Web3 = require('web3');\r\n\r\nconst develop = '/*address*/';\r\nconst web3 = new Web3();\r\nlet rootInstance;\r\nlet personInstance;\r\n\r\ncontract('Root + Person', () => {\r\n  it('should correctly add Person to root contract', () =>\r\n    // 1. Deploy new root contract\r\n    Root.deployed()\r\n      .then((deployedInstance) => {\r\n        // 2.1 Check if contract has been deployed\r\n        assert.notEqual(deployedInstance.contract.address, '0x0000000000000000000000000000000000000000', 'Root address should not be address(0) - incorrectly deployed');\r\n        // 2.2 Save root instance\r\n        rootInstance = deployedInstance.contract;\r\n        // 3. Deploy new Person contract\r\n        return Person.deployed();\r\n      })\r\n      .then((deployedInstance) => {\r\n        // 4.1 Check if contract has been deployed\r\n        assert.notEqual(deployedInstance.contract.address, '0x0000000000000000000000000000000000000000', 'Person address should not be address(0) - incorrectly deployed');\r\n        // 4.2 Save Person instance\r\n        personInstance = deployedInstance.contract;\r\n        // 5. Call addPerson()-function on root contract - transaction function!\r\n        return rootInstance.addPerson(personInstance.address, { from: develop });\r\n      })\r\n      // 6.1 Call getAllPerson()-function on root contract\r\n      .then(() => rootInstance.getAllPersons.call({ from: develop }))\r\n      .then((result) => {\r\n        console.log('allPersons', result);\r\n        // 6.2 Check if array length is 1 - only one Person has been added\r\n        assert.equal(result.length, 1, 'Person should be added to array');\r\n        // 6.3 Check if value in array is correct\r\n        assert.equal(result[0], personInstance.address, 'Correct address should be added to the array');\r\n        // 7. Call getPersonByAddress()\r\n        return rootInstance.getPersonByAddress.call(result[0], { from: develop });\r\n      })\r\n      .then((result) => {\r\n        console.log('getPersonByAddress', result);\r\n        // 7.1 Check if values are correct\r\n        assert.equal(result[0], personInstance.address, 'Person address should be correct');\r\n        assert.equal(web3.utils.hexToUtf8(result[1]), 'John Doe', 'Person name should be correct');\r\n        assert.equal(web3.utils.hexToUtf8(result[2]), 'Main Street', 'Person street should be correct');\r\n        assert.equal(result[3], 1, 'Person street number should be correct');\r\n        assert.equal(web3.utils.hexToUtf8(result[4]), '1234-56', 'Person postal code should be correct');\r\n        assert.equal(web3.utils.hexToUtf8(result[5]), 'New York', 'Person city should be correct');\r\n        assert.equal(web3.utils.hexToUtf8(result[6]), 'United States', 'Person country should be correct');\r\n        assert.equal(web3.utils.hexToUtf8(result[7]), '+12-34-5678-90', 'Person phone number should be correct');\r\n        return rootInstance.getPersonAddressesAndNames.call({ from: develop });\r\n      })\r\n      .then((result) => {\r\n        console.log('getPersonAddressesAndNames', result);\r\n        // 7. Check Person array, if filled and correct value\r\n        assert.equal(result[0].length, 1, 'Person should be added to array');\r\n        assert.equal(result[0][0], personInstance.address, 'Person address should be correct value');\r\n        // 8. Check names array, if filled and correct value\r\n        assert.equal(result[1].length, 1, 'Person should be added to array');\r\n        assert.equal(web3.utils.hexToUtf8(result[1][0]), 'John Doe', 'Person name should be correct value');\r\n      })\r\n      .catch(error => console.log(error)));\r\n});\r\n```",
  "closed_by": {
    "login": "cgewecke",
    "id": 7332026,
    "node_id": "MDQ6VXNlcjczMzIwMjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cgewecke",
    "html_url": "https://github.com/cgewecke",
    "followers_url": "https://api.github.com/users/cgewecke/followers",
    "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
    "organizations_url": "https://api.github.com/users/cgewecke/orgs",
    "repos_url": "https://api.github.com/users/cgewecke/repos",
    "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cgewecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/936/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/936/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386622264",
    "html_url": "https://github.com/trufflesuite/truffle/issues/936#issuecomment-386622264",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/936",
    "id": 386622264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjYyMjI2NA==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T14:39:02Z",
    "updated_at": "2018-05-04T14:39:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@arnoudbevers Could you show the code where you are instantiating a `Person` e.g. running its constructor? ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386622264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386628039",
    "html_url": "https://github.com/trufflesuite/truffle/issues/936#issuecomment-386628039",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/936",
    "id": 386628039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjYyODAzOQ==",
    "user": {
      "login": "arnoudbevers",
      "id": 23448156,
      "node_id": "MDQ6VXNlcjIzNDQ4MTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/23448156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnoudbevers",
      "html_url": "https://github.com/arnoudbevers",
      "followers_url": "https://api.github.com/users/arnoudbevers/followers",
      "following_url": "https://api.github.com/users/arnoudbevers/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnoudbevers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnoudbevers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnoudbevers/subscriptions",
      "organizations_url": "https://api.github.com/users/arnoudbevers/orgs",
      "repos_url": "https://api.github.com/users/arnoudbevers/repos",
      "events_url": "https://api.github.com/users/arnoudbevers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnoudbevers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T14:57:59Z",
    "updated_at": "2018-05-04T14:58:45Z",
    "author_association": "NONE",
    "body": "Truffle uses this to deploy a contract to run the tests, in my own project I have created a contract handler that uses the web3 methods, but this is not used in truffle. Is this what you mean?\r\n\r\n**2_person_migration.js**\r\n```\r\nconst Web3 = require('web3');\r\nconst Person= artifacts.require('./Person.sol');\r\nconst web3 = new Web3();\r\n\r\nmodule.exports = (deployer) => {\r\n  deployer.deploy(\r\n    Person, web3.utils.utf8ToHex('John Doe'), web3.utils.utf8ToHex('Main Street'), 1, web3.utils.utf8ToHex('1234-56'), web3.utils.utf8ToHex('New York'), web3.utils.utf8ToHex('United States'), web3.utils.utf8ToHex('+12-34-5678-90'));\r\n};\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386628039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386636599",
    "html_url": "https://github.com/trufflesuite/truffle/issues/936#issuecomment-386636599",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/936",
    "id": 386636599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjYzNjU5OQ==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T15:26:45Z",
    "updated_at": "2018-05-04T15:26:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@arnoudbevers Yes. Will investigate this - thanks for such a detailed and clear report! ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386636599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386664659",
    "html_url": "https://github.com/trufflesuite/truffle/issues/936#issuecomment-386664659",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/936",
    "id": 386664659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjY2NDY1OQ==",
    "user": {
      "login": "arnoudbevers",
      "id": 23448156,
      "node_id": "MDQ6VXNlcjIzNDQ4MTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/23448156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnoudbevers",
      "html_url": "https://github.com/arnoudbevers",
      "followers_url": "https://api.github.com/users/arnoudbevers/followers",
      "following_url": "https://api.github.com/users/arnoudbevers/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnoudbevers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnoudbevers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnoudbevers/subscriptions",
      "organizations_url": "https://api.github.com/users/arnoudbevers/orgs",
      "repos_url": "https://api.github.com/users/arnoudbevers/repos",
      "events_url": "https://api.github.com/users/arnoudbevers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnoudbevers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T17:02:53Z",
    "updated_at": "2018-05-04T17:02:53Z",
    "author_association": "NONE",
    "body": "@cgewecke Thank you! I've been scratching my head for the last two days... If you're not planning on doing so, I can maybe test it on a Ganache network? Or are you doing that as well?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386664659/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386691795",
    "html_url": "https://github.com/trufflesuite/truffle/issues/936#issuecomment-386691795",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/936",
    "id": 386691795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjY5MTc5NQ==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T18:23:37Z",
    "updated_at": "2018-05-04T18:23:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@arnoudbevers Yes I will test on ganache, and if the problem isn't present there I'll test on `geth dev` as well and see if I can reproduce. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386691795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386832269",
    "html_url": "https://github.com/trufflesuite/truffle/issues/936#issuecomment-386832269",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/936",
    "id": 386832269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjgzMjI2OQ==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-05T20:21:47Z",
    "updated_at": "2018-05-05T20:21:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@arnoudbevers Hi. I couldn't find any variance around compiler version and was able to get the tests passing on `geth dev`. (I added `deployer.deploy(Root)` to your migrations). \r\n\r\nIn the tests, you are assigning a `web3` contract instance to `rootInstance` and then calling its methods directly:\r\n```javascript\r\n// 2.2 Save root instance\r\nrootInstance = deployedInstance.contract; // <-- web3 instance, not TruffleContract instance\r\n...\r\n// 4.2 Save Person instance\r\npersonInstance = deployedInstance.contract; // <-- web3 instance, not TruffleContract instance\r\n...\r\n// 5. Call addPerson()-function on root contract - transaction function!\r\nreturn rootInstance.addPerson(personInstance.address, { from: develop });\r\n```\r\nThat's fine, but one thing `truffle-contract` does behind the scenes is wait for transactions to be mined and return a receipt. Web3 behaves differently, immediately returning a transaction hash.  The next steps in the test are being run before `addPerson` has had a chance to finish execution on the chain. Could you see if changing `2.2` and `4.2` to the following fixes the test for you? \r\n```javascript\r\nrootInstance = deployedInstance; \r\npersonInstance = deployedInstance; \r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386832269/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386979136",
    "html_url": "https://github.com/trufflesuite/truffle/issues/936#issuecomment-386979136",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/936",
    "id": 386979136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Njk3OTEzNg==",
    "user": {
      "login": "arnoudbevers",
      "id": 23448156,
      "node_id": "MDQ6VXNlcjIzNDQ4MTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/23448156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnoudbevers",
      "html_url": "https://github.com/arnoudbevers",
      "followers_url": "https://api.github.com/users/arnoudbevers/followers",
      "following_url": "https://api.github.com/users/arnoudbevers/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnoudbevers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnoudbevers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnoudbevers/subscriptions",
      "organizations_url": "https://api.github.com/users/arnoudbevers/orgs",
      "repos_url": "https://api.github.com/users/arnoudbevers/repos",
      "events_url": "https://api.github.com/users/arnoudbevers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnoudbevers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T07:15:11Z",
    "updated_at": "2018-05-07T07:15:11Z",
    "author_association": "NONE",
    "body": "@cgewecke I changed my migrations, and changed the two instances in my tests, but the methods still do not return values. What do you mean by `geth dev`? Did you use geth CLI? How would I go about testing this myself? Since this is the only thing that I can think of, updating my geth version on my machine.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386979136/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387005473",
    "html_url": "https://github.com/trufflesuite/truffle/issues/936#issuecomment-387005473",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/936",
    "id": 387005473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzAwNTQ3Mw==",
    "user": {
      "login": "arnoudbevers",
      "id": 23448156,
      "node_id": "MDQ6VXNlcjIzNDQ4MTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/23448156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnoudbevers",
      "html_url": "https://github.com/arnoudbevers",
      "followers_url": "https://api.github.com/users/arnoudbevers/followers",
      "following_url": "https://api.github.com/users/arnoudbevers/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnoudbevers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnoudbevers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnoudbevers/subscriptions",
      "organizations_url": "https://api.github.com/users/arnoudbevers/orgs",
      "repos_url": "https://api.github.com/users/arnoudbevers/repos",
      "events_url": "https://api.github.com/users/arnoudbevers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnoudbevers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T09:07:35Z",
    "updated_at": "2018-05-07T11:25:19Z",
    "author_association": "NONE",
    "body": "@cgewecke I've talked a bit with others, and we think the issue lies with Quorum. The network is running on Geth 1.7.2, but Quorum is not up to date with the latest geth version, so updating Geth is not an option I think - which is also the reason it works on Remix/Ganache, since that uses Ethereum instead of Quorum. Do you have any idea what I can do to remedy this?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387005473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387063281",
    "html_url": "https://github.com/trufflesuite/truffle/issues/936#issuecomment-387063281",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/936",
    "id": 387063281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzA2MzI4MQ==",
    "user": {
      "login": "arnoudbevers",
      "id": 23448156,
      "node_id": "MDQ6VXNlcjIzNDQ4MTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/23448156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnoudbevers",
      "html_url": "https://github.com/arnoudbevers",
      "followers_url": "https://api.github.com/users/arnoudbevers/followers",
      "following_url": "https://api.github.com/users/arnoudbevers/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnoudbevers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnoudbevers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnoudbevers/subscriptions",
      "organizations_url": "https://api.github.com/users/arnoudbevers/orgs",
      "repos_url": "https://api.github.com/users/arnoudbevers/repos",
      "events_url": "https://api.github.com/users/arnoudbevers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnoudbevers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T13:23:52Z",
    "updated_at": "2018-05-07T13:24:08Z",
    "author_association": "NONE",
    "body": "@cgewecke I have also tried it on the Ropsten network to eliminate another possibility, and it worked as expected, so I think the issue really lies with Quorum, and that it is not up to date with the latest geth version/Solidity version.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387063281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387104379",
    "html_url": "https://github.com/trufflesuite/truffle/issues/936#issuecomment-387104379",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/936",
    "id": 387104379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzEwNDM3OQ==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T15:33:26Z",
    "updated_at": "2018-05-07T15:33:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @arnoudbevers, unfortunately I don't know of a remedy. You might raise this at Quorum in case they know of a work around.  \r\n\r\nIs it ok if we close this issue since it's specific to an older Geth version? ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387104379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387246879",
    "html_url": "https://github.com/trufflesuite/truffle/issues/936#issuecomment-387246879",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/936",
    "id": 387246879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzI0Njg3OQ==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T00:28:39Z",
    "updated_at": "2018-05-08T00:28:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@arnoudbevers Just leaving a note here about `geth dev` since that wasn't clear. You can run a geth test client locally with very little setup by:\r\n```shell\r\n$ docker pull ethereum/client-go:latest  #`latest` is a version. See hub.docker for more.\r\n\r\n$ docker run -it -p 8545:8545 \\\r\n                 -p 30303:30303 \\\r\n                 ethereum/client-go:latest \\\r\n                 --rpc --rpcaddr \"0.0.0.0\" \\ \r\n                 --dev --dev.period 2\r\n```\r\nIt comes with a single funded unlocked account.  It's slower than `ganache` but can be quite helpful for debugging when you are getting different outcomes on different clients. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387246879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387319161",
    "html_url": "https://github.com/trufflesuite/truffle/issues/936#issuecomment-387319161",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/936",
    "id": 387319161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzMxOTE2MQ==",
    "user": {
      "login": "arnoudbevers",
      "id": 23448156,
      "node_id": "MDQ6VXNlcjIzNDQ4MTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/23448156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnoudbevers",
      "html_url": "https://github.com/arnoudbevers",
      "followers_url": "https://api.github.com/users/arnoudbevers/followers",
      "following_url": "https://api.github.com/users/arnoudbevers/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnoudbevers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnoudbevers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnoudbevers/subscriptions",
      "organizations_url": "https://api.github.com/users/arnoudbevers/orgs",
      "repos_url": "https://api.github.com/users/arnoudbevers/repos",
      "events_url": "https://api.github.com/users/arnoudbevers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnoudbevers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T08:01:38Z",
    "updated_at": "2018-05-08T08:02:02Z",
    "author_association": "NONE",
    "body": "@cgewecke \r\n\r\n> Is it ok if we close this issue since it's specific to an older Geth version?\r\n\r\nYes, this is fine. I will try to check with Quorum when support for newer versions is coming.\r\n\r\n> Just leaving a note here about geth dev since that wasn't clear. You can run a geth test client locally with very little setup by...\r\n\r\nThank you! I will keep this in mind, will be really useful in my development. \r\n\r\nThanks for your help!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387319161/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
