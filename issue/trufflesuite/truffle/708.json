{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/708",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/708/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/708/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/708/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/708",
  "id": 280865696,
  "node_id": "MDU6SXNzdWUyODA4NjU2OTY=",
  "number": 708,
  "title": "How to test modifiers or requires in Solidity tests? ",
  "user": {
    "login": "JohnAllen",
    "id": 2800641,
    "node_id": "MDQ6VXNlcjI4MDA2NDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2800641?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JohnAllen",
    "html_url": "https://github.com/JohnAllen",
    "followers_url": "https://api.github.com/users/JohnAllen/followers",
    "following_url": "https://api.github.com/users/JohnAllen/following{/other_user}",
    "gists_url": "https://api.github.com/users/JohnAllen/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JohnAllen/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JohnAllen/subscriptions",
    "organizations_url": "https://api.github.com/users/JohnAllen/orgs",
    "repos_url": "https://api.github.com/users/JohnAllen/repos",
    "events_url": "https://api.github.com/users/JohnAllen/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JohnAllen/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2017-12-11T01:01:39Z",
  "updated_at": "2018-01-27T02:03:32Z",
  "closed_at": "2018-01-27T02:03:32Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "- [x] I've asked for help in the [Truffle Gitter](http://gitter.im/Consensys/truffle) before filing this issue.\r\n\r\n---------------------------\r\n\r\n## Issue\r\n\r\nHow to test modifiers or requires in Solidity tests?  Otherwise things that throw -- how to catch errors in Solidity? \r\n\r\nLooked through this Assert library but didn't find anything.  \r\n\r\nhttps://github.com/trufflesuite/truffle/blob/beta/lib/testing/Assert.sol\r\n",
  "closed_by": {
    "login": "cgewecke",
    "id": 7332026,
    "node_id": "MDQ6VXNlcjczMzIwMjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cgewecke",
    "html_url": "https://github.com/cgewecke",
    "followers_url": "https://api.github.com/users/cgewecke/followers",
    "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
    "organizations_url": "https://api.github.com/users/cgewecke/orgs",
    "repos_url": "https://api.github.com/users/cgewecke/repos",
    "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cgewecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/708/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/708/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/360899833",
    "html_url": "https://github.com/trufflesuite/truffle/issues/708#issuecomment-360899833",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/708",
    "id": 360899833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDg5OTgzMw==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-26T20:46:35Z",
    "updated_at": "2018-01-26T21:20:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @JohnAllen - apologies for the delay in addressing this interesting issue. One way to do this is to write a small fixture which executes methods that throw conditionally within Solidity as a `call`. For example, if Truffle's MetaCoin example looked like this:\r\n\r\n```javascript\r\ncontract MetaCoin {\r\n\tuint maxSend = 5000;\r\n        ... etc ...\r\n\r\n       function sendCoin(address receiver, uint amount) public returns(bool sufficient) {\r\n\t\trequire(amount <= maxSend);\r\n                ... etc ...\r\n       }\r\n}\r\n``` \r\n\r\nYou could test that `sendCoin` errors when `amount > 5000` using mocks in `TestMetcoin` as below:\r\n```javascript\r\n// A little utility that runs a wrapped method invocation as an internal Solidity call\r\n// Returns true if the underlying call succeeds and false if it throws.\r\nfunction execute(string signature) internal returns (bool){\r\n    bytes4 sig = bytes4(keccak256(signature));\r\n    address self = address(this);\r\n    return self.call(sig);\r\n  }\r\n \r\n// Wrap the call to sendCoin. Wrapping lets you perform complex setups for arbitrarily \r\n// parameterized methods while keeping a simple function signature to pass to \r\n// `execute` above\r\nfunction sendsTooMuch() public {\r\n    MetaCoin meta = MetaCoin(DeployedAddresses.MetaCoin());\r\n    meta.sendCoin(address(0), 5500);\r\n}\r\n\r\n// Test the failure case\r\nfunction testSendLimitExceeded() public {\r\n   Assert.isFalse(execute('sendsTooMuch()'), \"Should fail over limit\");\r\n}\r\n```\r\n\r\nThere's a good discussion of `.call` at Ethereum StackExchange [here](https://ethereum.stackexchange.com/questions/8270/what-does-soliditys-call-function-mean). It might be helpful to add some notes about this topic to the advanced solidity testing documentation at Truffle. \r\n\r\n\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/360899833/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/360951332",
    "html_url": "https://github.com/trufflesuite/truffle/issues/708#issuecomment-360951332",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/708",
    "id": 360951332,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDk1MTMzMg==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-27T02:03:32Z",
    "updated_at": "2018-01-27T02:03:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "There's also a link to a great [blog post](http://truffleframework.com/tutorials/testing-for-throws-in-solidity-tests) about this topic by Simon De La Rouviere in the [advanced solidity testing](http://truffleframework.com/docs/getting_started/solidity-tests#testing-for-exceptions) section of the docs. His approach is slightly different and more elegant than the one above - well worth a read. \r\n\r\nClosing because it looks like the docs cover this question.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/360951332/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
