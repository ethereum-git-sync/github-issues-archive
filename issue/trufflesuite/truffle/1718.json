{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/1718",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1718/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1718/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1718/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/1718",
  "id": 410947559,
  "node_id": "MDU6SXNzdWU0MTA5NDc1NTk=",
  "number": 1718,
  "title": "Build a complete, flexible system for the querying and mutation of Truffle's smart contract records",
  "user": {
    "login": "gnidan",
    "id": 151065,
    "node_id": "MDQ6VXNlcjE1MTA2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gnidan",
    "html_url": "https://github.com/gnidan",
    "followers_url": "https://api.github.com/users/gnidan/followers",
    "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
    "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
    "organizations_url": "https://api.github.com/users/gnidan/orgs",
    "repos_url": "https://api.github.com/users/gnidan/repos",
    "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gnidan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 814266682,
      "node_id": "MDU6TGFiZWw4MTQyNjY2ODI=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/Epic",
      "name": "Epic",
      "color": "3E4B9E",
      "default": false,
      "description": null
    },
    {
      "id": 971535741,
      "node_id": "MDU6TGFiZWw5NzE1MzU3NDE=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/Artifacts",
      "name": "Artifacts",
      "color": "bfb8fc",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-02-15T21:16:29Z",
  "updated_at": "2021-01-06T07:31:40Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Issue\r\n\r\nThe artifacts format isn't cutting it. It's incomplete and doesn't support all use cases (#1087 #1595 #1236 #1832). Also, the files are too big to be natively useful to users in the front-end (#1269).\r\n\r\n## Solution\r\n\r\nBuild something better.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/1718/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1718/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/755127288",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1718#issuecomment-755127288",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1718",
    "id": 755127288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NTEyNzI4OA==",
    "user": {
      "login": "clouds56",
      "id": 730813,
      "node_id": "MDQ6VXNlcjczMDgxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/730813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clouds56",
      "html_url": "https://github.com/clouds56",
      "followers_url": "https://api.github.com/users/clouds56/followers",
      "following_url": "https://api.github.com/users/clouds56/following{/other_user}",
      "gists_url": "https://api.github.com/users/clouds56/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clouds56/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clouds56/subscriptions",
      "organizations_url": "https://api.github.com/users/clouds56/orgs",
      "repos_url": "https://api.github.com/users/clouds56/repos",
      "events_url": "https://api.github.com/users/clouds56/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clouds56/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-06T07:08:41Z",
    "updated_at": "2021-01-06T07:31:40Z",
    "author_association": "NONE",
    "body": "Shall we have qualified name for each contract\r\n```shell\r\ncontracts/\r\n  a/\r\n   a1.sol  # contract A, C\r\n  a.sol    # contract A\r\n  a-a1.sol # contract A (note `-` in path would be replace with `_`)\r\n  b.sol    # contract B\r\n```\r\nwould build to artifacts (note `-` is not valid identifier of contract name)\r\n```shell\r\nbuild/\r\n  a-a1-A.json # from a/a1.sol\r\n  a-a1-C.json # from a/a1.sol\r\n  a_a1-A.json # from a.a1.sol\r\n  a-A.json\r\n  b-B.json\r\n```\r\nwhen we query a artifacts, we could use both `contract_name` and `qualified_name`\r\n```ts\r\n// for an artifact a-a1-A.json\r\n// contract_name: A\r\n// qualified_name: a::a1::A\r\n// file_name: a-a1-A.json\r\n// file_basename: a-a1-A\r\nartifacts.require(\"a-a1-A\") // would raise a error, we could not use file_basename nor file_name\r\nartifacts.require(\"C\") // would load with simple name `a-a1-C.json`\r\nartifacts.require(\"a::a1::A\") // would load with qualified name `a-a1-A.json`\r\nartifacts.require(\"A\") // would raise a error for name conflict,\r\n                       // saying all `a::a1::A, a_a1::A, a::A` would provide `A`\r\n```\r\n\r\nPossible issues\r\n-------\r\n1. `a-b.sol` and `a_b.sol` would still conflict, we shall warn or make it a hard error when see filenames only differs in `-` and `_`\r\n2. In some case extreme case, the `build` dir and `contracts` dir may differs in case insensitive, which might caught a problem, if that is a issue, we may make filename normalized as `a-A-$(hash \"a::A\").json` and `A-A-$(hash \"A::A\").json`\r\n3. As introduce of new files, previously compiled migration/test file would raise an error (qualified name should be encouraged in first place)\r\n4. Could artifact be referred as file base name \"a-a1-A\" in command line?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/755127288/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
