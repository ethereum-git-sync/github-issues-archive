{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/1717",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1717/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1717/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1717/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/1717",
  "id": 410875751,
  "node_id": "MDU6SXNzdWU0MTA4NzU3NTE=",
  "number": 1717,
  "title": "SafeTransferFrom() failing in test ",
  "user": {
    "login": "LucasRodriguez",
    "id": 25467123,
    "node_id": "MDQ6VXNlcjI1NDY3MTIz",
    "avatar_url": "https://avatars.githubusercontent.com/u/25467123?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/LucasRodriguez",
    "html_url": "https://github.com/LucasRodriguez",
    "followers_url": "https://api.github.com/users/LucasRodriguez/followers",
    "following_url": "https://api.github.com/users/LucasRodriguez/following{/other_user}",
    "gists_url": "https://api.github.com/users/LucasRodriguez/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/LucasRodriguez/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/LucasRodriguez/subscriptions",
    "organizations_url": "https://api.github.com/users/LucasRodriguez/orgs",
    "repos_url": "https://api.github.com/users/LucasRodriguez/repos",
    "events_url": "https://api.github.com/users/LucasRodriguez/events{/privacy}",
    "received_events_url": "https://api.github.com/users/LucasRodriguez/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2019-02-15T17:43:59Z",
  "updated_at": "2019-02-25T16:57:21Z",
  "closed_at": "2019-02-25T16:57:21Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "\r\n\r\n## Issue\r\nI initialize a token contract and send over tokens to an address from which I try to run safeTransferFrom() which in turn returns a VM error like so: \r\n\r\n>      Error: Returned error: VM Exception while processing transaction: revert\r\n>       at Object.ErrorResponse (node_modules/truffle/build/webpack:/~/web3-eth/~/web3-core-helpers/src/errors.js:29:1)\r\n>       at node_modules/truffle/build/webpack:/~/web3-eth/~/web3-core-requestmanager/src/index.js:140:1\r\n>       at node_modules/truffle/build/webpack:/packages/truffle-provider/wrapper.js:112:1\r\n>       at XMLHttpRequest.request.onreadystatechange (node_modules/truffle/build/webpack:/~/web3/~/web3-providers-http/src/index.js:96:1)\r\n>       at XMLHttpRequestEventTarget.dispatchEvent (node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\r\n>       at XMLHttpRequest._setReadyState (node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:208:1)\r\n>       at XMLHttpRequest._onHttpResponseEnd (node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:318:1)\r\n>       at IncomingMessage.<anonymous> (node_modules/truffle/build/webpack:/~/xhr2-cookies/dist/xml-http-request.js:289:47)\r\n>       at endReadableNT (_stream_readable.js:1094:12)\r\n>       at process._tickCallback (internal/process/next_tick.js:63:19)\r\n\r\nUpon debugging the Tx I found its reverting when `transferFrom()` calls `sub()` from `safemath.sol` claiming that the sender has a balance of `0` this is provably wrong, given the execution of `transferFrom()`, when run individually, works perfectly well & that calling for the balance of the holder for that token returns the correct value. \r\n\r\n# # Steps to Reproduce\r\n1. Create a OCT.sol with the following text: \r\n\r\n```\r\n//Comments removed for conciseness of the bug\r\npragma solidity ^0.5.2;\r\n\r\nimport \"openzeppelin-solidity/contracts/utils/Address.sol\";\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\r\nimport \"./IOCTReceiver.sol\";\r\n\r\ncontract OCT is ERC20Detailed, ERC20 {\r\n  using Address for address;\r\n\r\n  bytes4 private constant _OCT_RECEIVED = 0x150b7a02;\r\n\r\n  constructor (string memory name, string memory symbol, uint8 decimals, address initialAccount, uint256 initialBalance)\r\n  ERC20Detailed(name, symbol, decimals) public {\r\n    _mint(initialAccount, initialBalance);\r\n  }\r\n\r\n  function safeTransferFrom(address from, address to, uint256 amount, bytes memory _data) public {\r\n    super.transferFrom(from, to, amount);\r\n    require(_checkOnOCTReceived(from, to, amount, _data));\r\n  }\r\n  \r\n  function _checkOnOCTReceived(address from, address to, uint256 amount, bytes memory _data)\r\n    internal returns (bool)\r\n  {\r\n    if (!to.isContract()) {\r\n      return true;\r\n    }\r\n\r\n    bytes4 retval = IOCTReceiver(to).onOCTReceived(msg.sender, from, amount, _data);\r\n    return (retval == _OCT_RECEIVED);\r\n  }\r\n\r\n  function mint(address account, uint256 amount) public {\r\n    _mint(account, amount);\r\n  }\r\n\r\n  function burn(address account, uint256 value) public {\r\n    super._burn(account, value);\r\n  }\r\n\r\n\r\n  function burnFrom(address account, uint256 value) public {\r\n    super._burnFrom(account, value);\r\n  }\r\n}\r\n\r\n```\r\n2. Continue to initialize the following, VERY simple test in a file called 'test.js', you will need to install `mocha` or this to run.\r\n```\r\nrequire('web3');\r\nconst {BN} = require('openzeppelin-test-helpers');\r\n\r\nconst OCT = artifacts.require('OCT');\r\nconst Swap = artifacts.require('Swap');\r\n\r\n\r\ncontract('Swap & OCT', function ([_, holder1, holder2, recipient, anotherAccount]) {\r\n    const initialSupply = new BN(100);\r\n    const transferAmount = new BN(10);\r\n\r\n    beforeEach(async function () {\r\n      this.token1 = await OCT.new(\"OpsCoin\", \"OCT\", 10000, holder1, initialSupply);\r\n      this.token2 = await OCT.new(\"OpsCoin\", \"OCT\", 10000, holder2, initialSupply);\r\n    });\r\n\r\n    describe('Atomic Swap', function () {\r\n        describe('Deploy two uERC20 Contracts that empty their amounts into their owners accounts', function () {\r\n            it('Return two contracts and their Supply', async function () {\r\n                (await this.token1.totalSupply()).should.be.bignumber.equal(initialSupply);\r\n                (await this.token2.totalSupply()).should.be.bignumber.equal(initialSupply);\r\n            });\r\n        });\r\n            it('Create an Atomic Swap by running safeTransferFrom()', async function () {\r\n                //Encode the data into a bytes var so the safeTransferFrom can pass it over to the Swap Contract\r\n                var _data = await web3.eth.abi.encodeParameters   (  \r\n                    ['uint256','address','uint256','address','address','uint256','address'], \r\n                    ['1', holder1, transferAmount.toString(), holder2, this.token1.address, transferAmount.toString(), this.token2.address]\r\n                );\r\n            \r\n                var data = await web3.eth.abi.encodeParameters   (  \r\n                    ['uint256','address','uint256','address','address','uint256','address'], \r\n                    ['1', holder2, transferAmount.toString(), holder1, this.token2.address, transferAmount.toString(), this.token1.address]\r\n                );\r\n\r\n                await this.token1.safeTransferFrom(holder1, holder2, transferAmount, _data);\r\n                await this.token2.safeTransferFrom(holder2, holder1, transferAmount, data);\r\n        });\r\n    });\r\n})\r\n```\r\n\r\n3. Now try running `truffle test` \r\n\r\n## Expected Behavior\r\nThe safe transfer from is executed  and `holder1` and `holder2` exchange their tokens\r\n\r\n## Actual Results\r\n\r\nVM error as stated above due to sub being called and the balance of the addresses being 0\r\n\r\n## Environment\r\n\r\n* Operating System: Ubuntu 18.04.1 LTS\r\n* Truffle version (`truffle version`): v5.0.4\r\n* node version (`node --version`): v10.15.0\r\n* npm version (`npm --version`): npm@6.6.0\r\n",
  "closed_by": {
    "login": "LucasRodriguez",
    "id": 25467123,
    "node_id": "MDQ6VXNlcjI1NDY3MTIz",
    "avatar_url": "https://avatars.githubusercontent.com/u/25467123?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/LucasRodriguez",
    "html_url": "https://github.com/LucasRodriguez",
    "followers_url": "https://api.github.com/users/LucasRodriguez/followers",
    "following_url": "https://api.github.com/users/LucasRodriguez/following{/other_user}",
    "gists_url": "https://api.github.com/users/LucasRodriguez/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/LucasRodriguez/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/LucasRodriguez/subscriptions",
    "organizations_url": "https://api.github.com/users/LucasRodriguez/orgs",
    "repos_url": "https://api.github.com/users/LucasRodriguez/repos",
    "events_url": "https://api.github.com/users/LucasRodriguez/events{/privacy}",
    "received_events_url": "https://api.github.com/users/LucasRodriguez/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/1717/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1717/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/466043706",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1717#issuecomment-466043706",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1717",
    "id": 466043706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjA0MzcwNg==",
    "user": {
      "login": "eggplantzzz",
      "id": 14827965,
      "node_id": "MDQ6VXNlcjE0ODI3OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggplantzzz",
      "html_url": "https://github.com/eggplantzzz",
      "followers_url": "https://api.github.com/users/eggplantzzz/followers",
      "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
      "repos_url": "https://api.github.com/users/eggplantzzz/repos",
      "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T15:31:46Z",
    "updated_at": "2019-02-21T15:31:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey Lucas, I haven't dug into your problem too deeply but I wonder about something...do your source files compile? I thought the open zeppelin stuff required version 4 of the Solidity compiler. You have the pragma specifying a version of 5. Is that not causing problems?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/466043706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/466458222",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1717#issuecomment-466458222",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1717",
    "id": 466458222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjQ1ODIyMg==",
    "user": {
      "login": "LucasRodriguez",
      "id": 25467123,
      "node_id": "MDQ6VXNlcjI1NDY3MTIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/25467123?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LucasRodriguez",
      "html_url": "https://github.com/LucasRodriguez",
      "followers_url": "https://api.github.com/users/LucasRodriguez/followers",
      "following_url": "https://api.github.com/users/LucasRodriguez/following{/other_user}",
      "gists_url": "https://api.github.com/users/LucasRodriguez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LucasRodriguez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LucasRodriguez/subscriptions",
      "organizations_url": "https://api.github.com/users/LucasRodriguez/orgs",
      "repos_url": "https://api.github.com/users/LucasRodriguez/repos",
      "events_url": "https://api.github.com/users/LucasRodriguez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LucasRodriguez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-22T16:31:24Z",
    "updated_at": "2019-02-22T16:31:24Z",
    "author_association": "NONE",
    "body": "Yes everything compiles, and works like a charm, I do believe I found the bug too. \r\n\r\nWhen calling the function `safeTransferFrom` from `Token1` he function is indeed called by `holder1`, how ever the subsequent functions are 100% being called by the token1 address.\r\n\r\nHere are the steps to prove the above statements.\r\n\r\n1. When deploying the `Token1` Smart Contract we generate 100 tokens and automatically deploy them to `holder1`\r\n\r\n2. We then print out holder1 balance to confirm we dont have indeed recieved them with `this.token.balanceOf(holder1)` which does return 100. \r\n\r\n3. However the function safeTransferFrom() when called by holder1 reverts on the `safemath.sol` `sub()` function. \r\n\r\n4. We know that the function does have balance because we checked above, \r\n-When we debug the transaction, we see the sender does not have enough balance. \r\n\r\n5. Make sure the Tokens contract has a balance before `safeTransferFrom` is called.\r\n\r\nWhen we do this the transaction goes through successfully, but nothing actually executes  because the contract does not have the permission to send tokens on behalf of the address. \r\n\r\nNow **surely**  this cannot be expected behavior?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/466458222/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/466511642",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1717#issuecomment-466511642",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1717",
    "id": 466511642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjUxMTY0Mg==",
    "user": {
      "login": "eggplantzzz",
      "id": 14827965,
      "node_id": "MDQ6VXNlcjE0ODI3OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggplantzzz",
      "html_url": "https://github.com/eggplantzzz",
      "followers_url": "https://api.github.com/users/eggplantzzz/followers",
      "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
      "repos_url": "https://api.github.com/users/eggplantzzz/repos",
      "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-22T19:10:40Z",
    "updated_at": "2019-02-22T19:10:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is your whole project's code available somewhere so I can check it out? What happens when you check the amount directly before the transfer in the same context?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/466511642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/467089150",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1717#issuecomment-467089150",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1717",
    "id": 467089150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzA4OTE1MA==",
    "user": {
      "login": "LucasRodriguez",
      "id": 25467123,
      "node_id": "MDQ6VXNlcjI1NDY3MTIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/25467123?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LucasRodriguez",
      "html_url": "https://github.com/LucasRodriguez",
      "followers_url": "https://api.github.com/users/LucasRodriguez/followers",
      "following_url": "https://api.github.com/users/LucasRodriguez/following{/other_user}",
      "gists_url": "https://api.github.com/users/LucasRodriguez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LucasRodriguez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LucasRodriguez/subscriptions",
      "organizations_url": "https://api.github.com/users/LucasRodriguez/orgs",
      "repos_url": "https://api.github.com/users/LucasRodriguez/repos",
      "events_url": "https://api.github.com/users/LucasRodriguez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LucasRodriguez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-25T16:56:22Z",
    "updated_at": "2019-02-25T16:56:22Z",
    "author_association": "NONE",
    "body": "So apparently this **is** expected behaviour. Which is unfortunate, but makes sense in the ERC20 implementation we get rid of token ID which is what works around the issue in the ERC721 implementation in any case this would be more of a solidity problem than a truffle one so I will close the issue. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/467089150/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
