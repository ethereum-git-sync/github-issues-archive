{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/3436",
  "id": 721972813,
  "node_id": "MDU6SXNzdWU3MjE5NzI4MTM=",
  "number": 3436,
  "title": "Allow artifacts loading from outside contracts and test folders",
  "user": {
    "login": "elenadimitrova",
    "id": 703848,
    "node_id": "MDQ6VXNlcjcwMzg0OA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/703848?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/elenadimitrova",
    "html_url": "https://github.com/elenadimitrova",
    "followers_url": "https://api.github.com/users/elenadimitrova/followers",
    "following_url": "https://api.github.com/users/elenadimitrova/following{/other_user}",
    "gists_url": "https://api.github.com/users/elenadimitrova/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/elenadimitrova/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/elenadimitrova/subscriptions",
    "organizations_url": "https://api.github.com/users/elenadimitrova/orgs",
    "repos_url": "https://api.github.com/users/elenadimitrova/repos",
    "events_url": "https://api.github.com/users/elenadimitrova/events{/privacy}",
    "received_events_url": "https://api.github.com/users/elenadimitrova/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 230393328,
      "node_id": "MDU6TGFiZWwyMzAzOTMzMjg=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/enhancement",
      "name": "enhancement",
      "color": "84b6eb",
      "default": true,
      "description": null
    },
    {
      "id": 1086852667,
      "node_id": "MDU6TGFiZWwxMDg2ODUyNjY3",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/needs%20requirements",
      "name": "needs requirements",
      "color": "d4c5f9",
      "default": false,
      "description": "feature request is unclear"
    },
    {
      "id": 1675041996,
      "node_id": "MDU6TGFiZWwxNjc1MDQxOTk2",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/priority4%20%F0%9F%93%8B",
      "name": "priority4 ðŸ“‹",
      "color": "006b75",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 17,
  "created_at": "2020-10-15T04:56:58Z",
  "updated_at": "2022-11-21T19:00:40Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Issue\r\n\r\nCurrent support for artifacts loading only extends to `contracts`, `test` and `node_modules` as Chris helpfully described in https://github.com/trufflesuite/truffle/issues/730#issuecomment-376914718 and more flexibility is required to load from other folders.  \r\n\r\n## Steps to Reproduce\r\nWe have the following folder structure \r\n```\r\ncontracts\r\ncontracts-legacy\r\ncontracts-test\r\nlib\r\n```\r\nwhere `contracts-legacy` contains duplicate contracts to `contracts` folder and cannot be compiled to the same `build` location. We are therefore compiling `contracts-legacy` contracts to `build-legacy` folder (instead of the default `build` folder where all remaining contract artifacts live). When trying to load from there for integration testing we get a `Could not find artifacts` error for either of the options below:\r\n\r\n`const LegacyTransferManager = artifacts.require(\"../contracts-legacy/v1.6.0/contracts/modules/TransferManager.sol\");`\r\nor\r\n`const LegacyTransferManager = artifacts.require(\"../build-legacy/v1.6.0/TransferManager\");`\r\n\r\n## Expected Behavior\r\n\r\nLoading contract artifacts from folders outside `contracts` to be successful. \r\n\r\n## Actual Results\r\n\r\n```\r\nCompiling your contracts...\r\n===========================\r\n> Compiling ./contracts/Migrations.sol\r\n> Artifacts written to /var/folders/06/dn1zc46956n6bjwv3ygdhs6h0000gn/T/test--4346-9fMGYXOP7j6H\r\n> Compiled successfully using:\r\n   - solc: 0.6.12+commit.27d51765.Linux.g++\r\n\r\n0x1a35526c\r\nError: Could not find artifacts for ../build-legacy/v1.6.0/TokenPriceProvider from any sources\r\n```\r\n\r\n## Environment\r\n\r\n* Operating System: OSX\r\n* Ethereum client: `ganache-cli`\r\n* Truffle version (`truffle version`): v5.1.36 (core: 5.1.36)\r\n* node version (`node --version`): v10.21.0\r\n* npm version (`npm --version`): 6.14.4\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/713742181",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3436#issuecomment-713742181",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
    "id": 713742181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzc0MjE4MQ==",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-21T17:41:39Z",
    "updated_at": "2020-10-21T17:41:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hm.  Can you perhaps link us the repo?  It would help in figuring out what we can do about this.  A possible workaround in the meantime might be to publish `contracts-legacy` as an NPM module and import it that way.  But we'll have to figure out what we want to do about this.  Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/713742181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/714264725",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3436#issuecomment-714264725",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
    "id": 714264725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDI2NDcyNQ==",
    "user": {
      "login": "elenadimitrova",
      "id": 703848,
      "node_id": "MDQ6VXNlcjcwMzg0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/703848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elenadimitrova",
      "html_url": "https://github.com/elenadimitrova",
      "followers_url": "https://api.github.com/users/elenadimitrova/followers",
      "following_url": "https://api.github.com/users/elenadimitrova/following{/other_user}",
      "gists_url": "https://api.github.com/users/elenadimitrova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elenadimitrova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elenadimitrova/subscriptions",
      "organizations_url": "https://api.github.com/users/elenadimitrova/orgs",
      "repos_url": "https://api.github.com/users/elenadimitrova/repos",
      "events_url": "https://api.github.com/users/elenadimitrova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elenadimitrova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-22T06:32:54Z",
    "updated_at": "2020-10-22T06:32:54Z",
    "author_association": "NONE",
    "body": "@haltman-at The repo is the Argent wallet here https://github.com/argentlabs/argent-contracts ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/714264725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718109587",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3436#issuecomment-718109587",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
    "id": 718109587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODEwOTU4Nw==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-28T17:59:58Z",
    "updated_at": "2020-10-28T17:59:58Z",
    "author_association": "MEMBER",
    "body": "Thanks @elenadimitrova! Getting this into our backlog.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718109587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718112308",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3436#issuecomment-718112308",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
    "id": 718112308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODExMjMwOA==",
    "user": {
      "login": "elenadimitrova",
      "id": 703848,
      "node_id": "MDQ6VXNlcjcwMzg0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/703848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elenadimitrova",
      "html_url": "https://github.com/elenadimitrova",
      "followers_url": "https://api.github.com/users/elenadimitrova/followers",
      "following_url": "https://api.github.com/users/elenadimitrova/following{/other_user}",
      "gists_url": "https://api.github.com/users/elenadimitrova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elenadimitrova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elenadimitrova/subscriptions",
      "organizations_url": "https://api.github.com/users/elenadimitrova/orgs",
      "repos_url": "https://api.github.com/users/elenadimitrova/repos",
      "events_url": "https://api.github.com/users/elenadimitrova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elenadimitrova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-28T18:04:47Z",
    "updated_at": "2020-10-28T18:05:01Z",
    "author_association": "NONE",
    "body": "Thanks @gnidan I really want to move the Argent repo to use `truffle` but this is blocking me atm. Any workaround you can suggest?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718112308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718823270",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3436#issuecomment-718823270",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
    "id": 718823270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODgyMzI3MA==",
    "user": {
      "login": "eggplantzzz",
      "id": 14827965,
      "node_id": "MDQ6VXNlcjE0ODI3OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggplantzzz",
      "html_url": "https://github.com/eggplantzzz",
      "followers_url": "https://api.github.com/users/eggplantzzz/followers",
      "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
      "repos_url": "https://api.github.com/users/eggplantzzz/repos",
      "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-29T15:18:34Z",
    "updated_at": "2020-10-29T15:18:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gnidan We could do something like provide a way for the user to provide extra source locations in the config perhaps? We could add another resolver source that would check in these directories - it would probably extend the `FS` source.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718823270/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718863050",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3436#issuecomment-718863050",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
    "id": 718863050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODg2MzA1MA==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-29T16:17:58Z",
    "updated_at": "2020-10-29T16:17:58Z",
    "author_association": "MEMBER",
    "body": "What causes this to fail right now @eggplantzzz? Like, what part of the code gets in the way?\r\n\r\nI'm into your idea for allowing extra locations. Seems like a reasonable stopgap, at least! Care to look into that?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718863050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718882758",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3436#issuecomment-718882758",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
    "id": 718882758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODg4Mjc1OA==",
    "user": {
      "login": "elenadimitrova",
      "id": 703848,
      "node_id": "MDQ6VXNlcjcwMzg0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/703848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elenadimitrova",
      "html_url": "https://github.com/elenadimitrova",
      "followers_url": "https://api.github.com/users/elenadimitrova/followers",
      "following_url": "https://api.github.com/users/elenadimitrova/following{/other_user}",
      "gists_url": "https://api.github.com/users/elenadimitrova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elenadimitrova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elenadimitrova/subscriptions",
      "organizations_url": "https://api.github.com/users/elenadimitrova/orgs",
      "repos_url": "https://api.github.com/users/elenadimitrova/repos",
      "events_url": "https://api.github.com/users/elenadimitrova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elenadimitrova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-29T16:50:01Z",
    "updated_at": "2020-10-29T16:50:01Z",
    "author_association": "NONE",
    "body": "Isn't the `contracts_build_directory` in config already that? Can you source artefacts from those build directories? We are compiling with 9 different truffle configs, see https://github.com/argentlabs/argent-contracts/pull/146 for details and using a handful of different `contracts_build_directory`s. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718882758/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718915096",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3436#issuecomment-718915096",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
    "id": 718915096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODkxNTA5Ng==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-29T17:43:58Z",
    "updated_at": "2020-10-29T17:43:58Z",
    "author_association": "MEMBER",
    "body": "@elenadimitrova the problem with `contracts_build_directory` is that Truffle expects `.json` files in that directory itself. So you might want to do `contracts_build_directory: <something-with-subdirs-with-artifacts>`, but Truffle won't look into those subdirectories to find the artifacts.\r\n\r\nI think what @eggplantzzz is getting at is to add some kind of field `contracts_build_directories`, maybe, that takes an array. This might get tricky, however, since there are likely places in the codebase where we expect a _single_ directory, and so we'd have to update that to handle the existence of multiple. Does not seem insurmountable, though.\r\n\r\nIn the meantime, the workaround would be to publish individual NPM packages, since Truffle already knows how to require artifacts that live in local node_modules. But definitely not ideal.\r\n\r\nNow, @elenadimitrova, question for you - why do you need 9 different truffle-configs in the first place? Is it just to handle different versions of solc? Or do these configs differ in other ways as well? I took a quick look and it seems like the only difference is in solc `version`. If that's the case, then we're planning to release #3417 next week, adding the configuration option `version: \"pragma\"`, which tells Truffle to detect solc version on a per-source basis and should obviate the need for separate configs altogether. (@eggplantzzz maybe we should publish a dist-tag of that branch ahead of release?)",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718915096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718974673",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3436#issuecomment-718974673",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
    "id": 718974673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODk3NDY3Mw==",
    "user": {
      "login": "elenadimitrova",
      "id": 703848,
      "node_id": "MDQ6VXNlcjcwMzg0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/703848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elenadimitrova",
      "html_url": "https://github.com/elenadimitrova",
      "followers_url": "https://api.github.com/users/elenadimitrova/followers",
      "following_url": "https://api.github.com/users/elenadimitrova/following{/other_user}",
      "gists_url": "https://api.github.com/users/elenadimitrova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elenadimitrova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elenadimitrova/subscriptions",
      "organizations_url": "https://api.github.com/users/elenadimitrova/orgs",
      "repos_url": "https://api.github.com/users/elenadimitrova/repos",
      "events_url": "https://api.github.com/users/elenadimitrova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elenadimitrova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-29T19:33:44Z",
    "updated_at": "2020-10-29T19:33:44Z",
    "author_association": "NONE",
    "body": "@gnidan are you saying that artefacts loading _already_  happens from the `contracts_build_directory`? If so are the multiple configs' `contracts_build_directory`s supported or just the default config?\r\n \r\nOn the 9 different configs topic which was previously discussed here https://github.com/trufflesuite/truffle/issues/2021#issuecomment-664883908 in addition to the solc version there are different optimizer settings as well as different target build directories (to avoid overwriting legacy versions of the same contract we use for regression testing). \r\nAlso what do you do with \"glue\" contracts that have pragma like `pragma solidity >=0.5.4 <0.7.0;`?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718974673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718979173",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3436#issuecomment-718979173",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
    "id": 718979173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODk3OTE3Mw==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-29T19:42:36Z",
    "updated_at": "2020-10-29T19:42:36Z",
    "author_association": "MEMBER",
    "body": "> @gnidan are you saying that artefacts loading already happens from the contracts_build_directory? If so are the multiple configs' contracts_build_directorys supported or just the default config?\r\n\r\nYep - when you do `artifacts.require()` it looks inside `contracts_build_directory`. Each config only supports one such directory, naturally, though. Does this make sense?\r\n\r\n\r\n\r\n> On the 9 different configs topic which was previously discussed here [#2021 (comment)](https://github.com/trufflesuite/truffle/issues/2021#issuecomment-664883908) in addition to the solc version there are different optimizer settings as well as different target build directories (to avoid overwriting legacy versions of the same contract we use for regression testing).\r\n\r\nAh, this will pose a slight problem, but maybe that's something we can look into as follow-on work to #3417.\r\n\r\n> Also what do you do with \"glue\" contracts that have pragma like `pragma solidity >=0.5.4 <0.7.0;`?\r\n\r\nThe new feature takes all sources in each \"import tree\" and finds a Solidity version to satisfy all pragmas. So glue contracts will get passed to solc multiple times as-needed.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718979173/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718983246",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3436#issuecomment-718983246",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
    "id": 718983246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODk4MzI0Ng==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-29T19:51:12Z",
    "updated_at": "2020-10-29T19:53:10Z",
    "author_association": "MEMBER",
    "body": "So it seems like there's definitely stuff actionable here - @eggplantzzz maybe we expand the resolver to support multiple `contracts_build_directory`s somehow. Seems like this would be fairly straightforward. Still needs requirements though.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/718983246/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/719538391",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3436#issuecomment-719538391",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
    "id": 719538391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTUzODM5MQ==",
    "user": {
      "login": "elenadimitrova",
      "id": 703848,
      "node_id": "MDQ6VXNlcjcwMzg0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/703848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elenadimitrova",
      "html_url": "https://github.com/elenadimitrova",
      "followers_url": "https://api.github.com/users/elenadimitrova/followers",
      "following_url": "https://api.github.com/users/elenadimitrova/following{/other_user}",
      "gists_url": "https://api.github.com/users/elenadimitrova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elenadimitrova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elenadimitrova/subscriptions",
      "organizations_url": "https://api.github.com/users/elenadimitrova/orgs",
      "repos_url": "https://api.github.com/users/elenadimitrova/repos",
      "events_url": "https://api.github.com/users/elenadimitrova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elenadimitrova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T13:01:05Z",
    "updated_at": "2020-10-30T13:07:51Z",
    "author_association": "NONE",
    "body": "Personally I'd prefer more control over compilation rather than automating decision making based on pragma set deductions. I imagine it will also be simpler to implement and maintain. In my ideal world I'd have only one truffle config which allows an array of contracts set objects (there's probably a better name for this) such as:\r\n```\r\ncontracts:\r\n   {\r\n       contracts_set: {\r\n            `contracts_set_id`,\r\n            `contracts_directory`, \r\n            `contracts_build_directory`,\r\n            ` compiler`\r\n       },\r\n       ....\r\n   },\r\n networks:\r\n  {\r\n        development: {\r\n                ...\r\n        },\r\n        ropsten: {\r\n                ....\r\n        },\r\n        ....\r\n  }\r\n```\r\nEach contracts set can be compiled for different networks such via `truffle compile --contracts_set  some-set-of-contracts --network development`, and not passing a contracts set compiles all sets.\r\n\r\nIn the Argent wallet case which runs out of the following contract structure and compilation requirements:\r\n```\r\ncontracts\r\n   infrastructure\r\n   infrastructure_0.5\r\n   modules\r\n   wallet\r\ncontracts-legacy\r\ncontracts-test\r\nlib\r\n```\r\nwhere `contracts\\infrastructure_0.5`, `contracts-legacy` and `lib` are compiled with `0.5.4` while the rest with `0.6.12` . Optimiser settings are `200` for `lib` and `contracts-test` and `999` for the rest of the contracts.\r\nWe'd have the following config:\r\n\r\n```\r\ncontracts: {\r\n    core_wallet: {\r\n      contracts_directory: [\"contracts/infrastructure\", \"contracts/modules\", \"contracts/wallet\"],\r\n      contracts_build_directory: \"build\",\r\n      compiler: {\r\n        solc: {\r\n          version: \"0.6.12\",\r\n          docker: true,\r\n          settings: {\r\n            optimizer: {\r\n              enabled: true,\r\n              runs: 999\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    contracts_infrastructure_0_5: {\r\n      contracts_directory: [\"contracts/infrastructure_0.5\"],\r\n      contracts_build_directory: \"build\",\r\n      compiler: {\r\n        solc: {\r\n          version: \"0.5.4\",\r\n          docker: true,\r\n          settings: {\r\n            optimizer: {\r\n              enabled: true,\r\n              runs: 999\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    contracts_lib: {\r\n      contracts_directory: [\"lib\"],\r\n      contracts_build_directory: \"build\",\r\n      compiler: {\r\n        solc: {\r\n          version: \"0.5.4\",\r\n          docker: true,\r\n          settings: {\r\n            optimizer: {\r\n              enabled: true,\r\n              runs: 200\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },    \r\n    contracts_legacy_1_3: {\r\n      contracts_directory: [\"contracts-legacy/v1.3.0\"],\r\n      contracts_build_directory: \"build-legacy/v1.3.0\",\r\n      compiler: {\r\n        solc: {\r\n          version: \"0.5.4\",\r\n          docker: true,\r\n          settings: {\r\n            optimizer: {\r\n              enabled: true,\r\n              runs: 999\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    contracts_legacy_1_6: {\r\n      contracts_directory: [\"contracts-legacy/v1.6.0\"],\r\n      contracts_build_directory: \"build-legacy/v1.6.0\",\r\n      compiler: {\r\n        solc: {\r\n          version: \"0.5.4\",\r\n          docker: true,\r\n          settings: {\r\n            optimizer: {\r\n              enabled: true,\r\n              runs: 999\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    contracts_test: {\r\n      contracts_directory: [\"contracts-test\"],\r\n      contracts_build_directory: \"build\",\r\n      compiler: {\r\n        solc: {\r\n          version: \"0.6.12\",\r\n          docker: true,\r\n          settings: {\r\n            optimizer: {\r\n              enabled: true,\r\n              runs: 200\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n  },\r\n\r\n  networks: {\r\n    development: {\r\n      ...\r\n    },\r\n```\r\n\r\nTo the above we need to be able to say where an `artifact.require` will source its json as there can be duplicates e.g `artifacts.require(\"contracts_legacy_1_3/WalletFactory\");` vs `artifacts.require(\"core_wallet/WalletFactory\");`",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/719538391/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/719834672",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3436#issuecomment-719834672",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
    "id": 719834672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTgzNDY3Mg==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T22:54:40Z",
    "updated_at": "2020-10-30T22:57:13Z",
    "author_association": "MEMBER",
    "body": "@elenadimitrova I _really like_ this idea, but I'm concerned that implementing this would introduce a lot of complexity in various places through Truffle.\r\n\r\nI see your point about the upcoming `version: \"pragma\"`. I'm not sure it's harder to maintain, but it's definitely intended as a convenience feature, rather than a catch-all for all use cases.\r\n\r\nAnyway, I want to propose an alternative approach to your suggestion that I think will be easier to get out the door quickly, while still covering your use case:\r\n\r\n- You keep using multiple truffle-configs (you can maybe import from a `truffle-config.base.js` somewhere for commonalities)\r\n\r\n- Truffle adds a configuration property `related_projects` so you can configure the connections between the configs\r\n\r\n- When you do `artifacts.require(\"<related-project>:<contract-name>\")`, Truffle looks at your configured `related_projects` to resolve the external artifact.\r\n\r\nTo get into some specifics, I currently favor this approach for the type of that config field:\r\n  ```typescript\r\n  interface RelatedProjects {\r\n    [projectName: string]: string; // relative (and/or absolute?) path to folder containing a truffle-config\r\n  }\r\n  ```\r\n\r\nThis way, you could name projects something unique and avoid relying on directory structure. For instance, one of your truffle-configs might look like:\r\n```javascript\r\nmodule.exports = {\r\n  // ... rest of truffle-config ...\r\n  related_projects: {\r\n    legacy: \"../legacy\",\r\n    test: \"../test\",\r\n    // ...\r\n  }\r\n}\r\n```\r\n\r\nAnd then in migrations/tests, you'd do:\r\n```javascript\r\nconst LegacyWalletFactory = artifacts.require(\"legacy:WalletFactory\");\r\n```\r\n\r\nI can think of a couple trade-offs with this approach. My main apprehension would be that this pushes Truffle into the domain of monorepos without due consideration, but my feeling right now is that this is outweighed by how easy this approach would be to implement.\r\n\r\nWhat do you think? How strongly do you prefer having only a single truffle-config? Do you agree with my reasoning that related projects should be listed by name? Are you, too, worried at all that this would forever be a wart on Truffle's requirements?\r\n\r\n**edit** definitely need to cc @eggplantzzz on this one because I bet you're gonna hate this buddy",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/719834672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/720270666",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3436#issuecomment-720270666",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
    "id": 720270666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDI3MDY2Ng==",
    "user": {
      "login": "elenadimitrova",
      "id": 703848,
      "node_id": "MDQ6VXNlcjcwMzg0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/703848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elenadimitrova",
      "html_url": "https://github.com/elenadimitrova",
      "followers_url": "https://api.github.com/users/elenadimitrova/followers",
      "following_url": "https://api.github.com/users/elenadimitrova/following{/other_user}",
      "gists_url": "https://api.github.com/users/elenadimitrova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elenadimitrova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elenadimitrova/subscriptions",
      "organizations_url": "https://api.github.com/users/elenadimitrova/orgs",
      "repos_url": "https://api.github.com/users/elenadimitrova/repos",
      "events_url": "https://api.github.com/users/elenadimitrova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elenadimitrova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-02T06:40:06Z",
    "updated_at": "2020-11-02T06:40:06Z",
    "author_association": "NONE",
    "body": "How are \"projects\" defined @gnidan , is that done in config? I'm okay with multiple configs, didn't know of `truffle-config.base.js` so will try to abstract most of the configuration there. \r\nAlso as a general note, since you allow `contracts_build_directory` to be specified, was a folder different from the default never supported for artifacts loading?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/720270666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/729689983",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3436#issuecomment-729689983",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
    "id": 729689983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTY4OTk4Mw==",
    "user": {
      "login": "elenadimitrova",
      "id": 703848,
      "node_id": "MDQ6VXNlcjcwMzg0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/703848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elenadimitrova",
      "html_url": "https://github.com/elenadimitrova",
      "followers_url": "https://api.github.com/users/elenadimitrova/followers",
      "following_url": "https://api.github.com/users/elenadimitrova/following{/other_user}",
      "gists_url": "https://api.github.com/users/elenadimitrova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elenadimitrova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elenadimitrova/subscriptions",
      "organizations_url": "https://api.github.com/users/elenadimitrova/orgs",
      "repos_url": "https://api.github.com/users/elenadimitrova/repos",
      "events_url": "https://api.github.com/users/elenadimitrova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elenadimitrova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-18T13:52:13Z",
    "updated_at": "2020-11-18T14:22:12Z",
    "author_association": "NONE",
    "body": "Meanwhile I am trying to work around this using `@truffle/contract` https://github.com/trufflesuite/truffle/issues/1735#issuecomment-729684884 ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/729689983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1322255788",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3436#issuecomment-1322255788",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
    "id": 1322255788,
    "node_id": "IC_kwDOAkfq-c5O0AWs",
    "user": {
      "login": "rsodre",
      "id": 229161,
      "node_id": "MDQ6VXNlcjIyOTE2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/229161?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsodre",
      "html_url": "https://github.com/rsodre",
      "followers_url": "https://api.github.com/users/rsodre/followers",
      "following_url": "https://api.github.com/users/rsodre/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsodre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsodre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsodre/subscriptions",
      "organizations_url": "https://api.github.com/users/rsodre/orgs",
      "repos_url": "https://api.github.com/users/rsodre/repos",
      "events_url": "https://api.github.com/users/rsodre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsodre/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-21T15:41:33Z",
    "updated_at": "2022-11-21T15:43:57Z",
    "author_association": "NONE",
    "body": "I up this request.\r\n\r\nMy use case is very simple, I have 2 distinct truffle projects.\r\nProject1 is deployed, and the new Project2 needs to access its contracts.\r\nI just need to read the other project deployed addresses.\r\n\r\n```\r\n// migration file\r\nconst Query = artifacts.require('Query');\r\nconst Minter = artifacts.require('../cards/Minter'); // does not work!\r\n\r\nmodule.exports = async function (deployer, network) {\r\n\tawait deployer.deploy(Query, Minter.address);\r\n};\r\n```\r\n\r\nI used to create symbolic links but it does not work sometimes.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1322255788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1322514089",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3436#issuecomment-1322514089",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3436",
    "id": 1322514089,
    "node_id": "IC_kwDOAkfq-c5O0_ap",
    "user": {
      "login": "rsodre",
      "id": 229161,
      "node_id": "MDQ6VXNlcjIyOTE2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/229161?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsodre",
      "html_url": "https://github.com/rsodre",
      "followers_url": "https://api.github.com/users/rsodre/followers",
      "following_url": "https://api.github.com/users/rsodre/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsodre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsodre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsodre/subscriptions",
      "organizations_url": "https://api.github.com/users/rsodre/orgs",
      "repos_url": "https://api.github.com/users/rsodre/repos",
      "events_url": "https://api.github.com/users/rsodre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsodre/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-21T19:00:40Z",
    "updated_at": "2022-11-21T19:00:40Z",
    "author_association": "NONE",
    "body": "I made a workaround for my use case...\r\n\r\n```\r\n// migration file\r\nconst Query = artifacts.require('Query');\r\nconst { resolveContract } = require('./resolver');\r\nconst Minter = resolveContract('Minter', '../cards/Minter');\r\n\r\nmodule.exports = async function (deployer, network) {\r\n\tconst _Minter = await Minter.deployed();\r\n\tawait deployer.deploy(Query, _Minter.address);\r\n};\r\n\r\n```\r\n\r\nUsing `build_directory` from the `truffle-config.js`...\r\n\r\n```\r\n// resolver.js\r\nconst contract = require(\"@truffle/contract\");\r\n\r\nfunction resolveContract(contractName, sourceName = null) {\r\n\tconst sourcePath = `${config.build_directory}/${sourceName ?? contractName}.json`;\r\n\tconst artifact = require(sourcePath);\r\n\tconst result = contract(artifact);\r\n\tresult.setProvider(config.provider);\r\n\tresult.detectNetwork();\r\n\treturn result;\r\n}\r\n\r\nmodule.exports = {\r\n\tresolveContract,\r\n};\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1322514089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
