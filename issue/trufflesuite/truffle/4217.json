{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/4217",
  "id": 958572161,
  "node_id": "MDU6SXNzdWU5NTg1NzIxNjE=",
  "number": 4217,
  "title": "Use `eth_getEstimate` to get the gas limit for Optimistic Ethereum",
  "user": {
    "login": "qbzzt",
    "id": 12722969,
    "node_id": "MDQ6VXNlcjEyNzIyOTY5",
    "avatar_url": "https://avatars.githubusercontent.com/u/12722969?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qbzzt",
    "html_url": "https://github.com/qbzzt",
    "followers_url": "https://api.github.com/users/qbzzt/followers",
    "following_url": "https://api.github.com/users/qbzzt/following{/other_user}",
    "gists_url": "https://api.github.com/users/qbzzt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qbzzt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qbzzt/subscriptions",
    "organizations_url": "https://api.github.com/users/qbzzt/orgs",
    "repos_url": "https://api.github.com/users/qbzzt/repos",
    "events_url": "https://api.github.com/users/qbzzt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qbzzt/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2959810160,
      "node_id": "MDU6TGFiZWwyOTU5ODEwMTYw",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/L2",
      "name": "L2",
      "color": "c5def5",
      "default": false,
      "description": "Issues Related to layer two support inside Truffle"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 25,
  "created_at": "2021-08-02T23:05:02Z",
  "updated_at": "2022-01-18T16:19:56Z",
  "closed_at": "2021-09-03T18:04:29Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Issue\r\n\r\nIn Optimistic Ethereum we use `eth_getEstimate` from the server to return an estimate of the cost of a transaction. We do this because the cost of a transaction is not primarily the cost of execution, but the cost of L1 storage. See https://community.optimism.io/docs/developers/fees.html#fees-for-sequencer-transactions.\r\n\r\nThis clashes with Truffle's standard algorithm of looking at the gas cost of a transaction internally and setting gasLimit to a multiple of that value. This causes a failure when attempting to deploy a contract or run a test on Optimistic Kovan (running with the internal development node is not an issue).\r\n\r\n## Steps to Reproduce\r\n\r\n1. In an empty directory, run\r\n   ```sh\r\n   truffle unbox optimism\r\n   ```\r\n\r\n2. Create a `.env` file with this content:\r\n   ```\r\n   KOVAN_MNEMONIC=   <mnemonic for an account that has enough Kovan ETH to deploy>\r\n   INFURA_KEY=   <your Infura key> \r\n   ```\r\n\r\n3. Test the sample dapp:\r\n   ```\r\n   truffle test --config truffle-config.ovm.js --network optimistic_kovan\r\n   ```\r\n\r\n### Results\r\n\r\n* Without anything else the migration fails with:\r\n\r\n   ```\r\n   Compiling your contracts...\r\n   ===========================\r\n   > Compiling ./contracts/optimism/SimpleStorage.sol\r\n   > Artifacts written to /tmp/test--1434-S5SAsFHe1W7m\r\n   > Compiled successfully using:\r\n      - solc: 0.7.6\r\n\r\n   Error: while migrating SimpleStorage: fee too high: 494550000000000, use less than 27300000000000 * 0.800000\r\n       at /usr/lib/node_modules/truffle/build/webpack:/packages/deployer/src/deployment.js:365:1\r\n       at processTicksAndRejections (internal/process/task_queues.js:97:5)\r\n       at Migration._deploy (/usr/lib/node_modules/truffle/build/webpack:/packages/migrate/Migration.js:75:1)\r\n       at Migration._load (/usr/lib/node_modules/truffle/build/webpack:/packages/migrate/Migration.js:61:1)\r\n       at Migration.run (/usr/lib/node_modules/truffle/build/webpack:/packages/migrate/Migration.js:218:1)  \r\n       at Object.runMigrations (/usr/lib/node_modules/truffle/build/webpack:/packages/migrate/index.js:150:1)\r\n       at Object.runFrom (/usr/lib/node_modules/truffle/build/webpack:/packages/migrate/index.js:110:1)\r\n       at Object.runAll (/usr/lib/node_modules/truffle/build/webpack:/packages/migrate/index.js:114:1)\r\n       at Object.run (/usr/lib/node_modules/truffle/build/webpack:/packages/migrate/index.js:79:1)\r\n       at Object.run (/usr/lib/node_modules/truffle/build/webpack:/packages/core/lib/testing/Test.js:109:1)\r\n       at Object.run (/usr/lib/node_modules/truffle/build/webpack:/packages/core/lib/commands/test/index.js:160:1)\r\n       at Command.run (/usr/lib/node_modules/truffle/build/webpack:/packages/core/lib/command.js:167:1)\r\n   Truffle v5.4.0 (core: 5.4.0)\r\n   Node v12.22.\r\n   ```\r\n\r\n* We can fix this problem by editing `migrations/1_deploy_contracts.js` to:\r\n\r\n   ```javascript\r\n   var SimpleStorage = artifacts.require(\"SimpleStorage\");\r\n\r\n   module.exports = function(deployer) {\r\n     deployer.deploy(SimpleStorage, { gasPrice: 15000000, gas: 1820000 });\r\n   };\r\n   ```\r\n\r\n   But then we get this error:\r\n\r\n   ```\r\n   Compiling your contracts...\r\n   ===========================\r\n   > Compiling ./contracts/optimism/SimpleStorage.sol\r\n   > Artifacts written to /tmp/test--1487-EURBlcvlxR0c\r\n   > Compiled successfully using:\r\n      - solc: 0.7.6\r\n\r\n\r\n\r\n     Contract: SimpleStorage\r\n       1) ...should store the value 89.\r\n       > No events were emitted\r\n\r\n\r\n     0 passing (1s)\r\n     1 failing\r\n\r\n     1) Contract: SimpleStorage\r\n          ...should store the value 89.:\r\n        fee too high: 494550000000000, use less than 12600000000000 * 0.800000\r\n \r\n   ```\r\n\r\n* We can also fix this error by modifying the code to specify a gas limit in `test/simplestorage.js`. However, manually \r\n   specifying a gas limit in every transaction in every test is bad user experience.",
  "closed_by": {
    "login": "gnidan",
    "id": 151065,
    "node_id": "MDQ6VXNlcjE1MTA2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gnidan",
    "html_url": "https://github.com/gnidan",
    "followers_url": "https://api.github.com/users/gnidan/followers",
    "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
    "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
    "organizations_url": "https://api.github.com/users/gnidan/orgs",
    "repos_url": "https://api.github.com/users/gnidan/repos",
    "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gnidan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/892867691",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-892867691",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 892867691,
    "node_id": "IC_kwDOAkfq-c41OBRr",
    "user": {
      "login": "fainashalts",
      "id": 8952139,
      "node_id": "MDQ6VXNlcjg5NTIxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8952139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fainashalts",
      "html_url": "https://github.com/fainashalts",
      "followers_url": "https://api.github.com/users/fainashalts/followers",
      "following_url": "https://api.github.com/users/fainashalts/following{/other_user}",
      "gists_url": "https://api.github.com/users/fainashalts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fainashalts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fainashalts/subscriptions",
      "organizations_url": "https://api.github.com/users/fainashalts/orgs",
      "repos_url": "https://api.github.com/users/fainashalts/repos",
      "events_url": "https://api.github.com/users/fainashalts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fainashalts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-04T18:12:57Z",
    "updated_at": "2021-08-04T18:12:57Z",
    "author_association": "MEMBER",
    "body": "Hi @qbzzt thanks for bringing this up! Truffle estimates gas and the default `gasMultiplier` is 1.25. I think this multiplier isn't sufficient for our needs here. \r\n\r\nWhat do you think about setting the gasMultiplier on a per-contract basis? This should address the issues in tests and anywhere else the contract is used. It would look something like this: \r\n\r\n```\r\nconst SimpleStorage = artifacts.require(\"SimpleStorage\");\r\nSimpleStorage.gasMultiplier = 1.5;\r\n\r\n```\r\nThis would override the default multiplier. If I remember right, MetaMask upped their multiplier to 1.5 and that was enough, though we could play around with the right number. \r\n\r\nWe don't have an easy way to set this at the configuration level though that might be something we can do in the future. \r\n\r\nLet me know what you think, thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/892867691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/892879772",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-892879772",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 892879772,
    "node_id": "IC_kwDOAkfq-c41OEOc",
    "user": {
      "login": "qbzzt",
      "id": 12722969,
      "node_id": "MDQ6VXNlcjEyNzIyOTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12722969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qbzzt",
      "html_url": "https://github.com/qbzzt",
      "followers_url": "https://api.github.com/users/qbzzt/followers",
      "following_url": "https://api.github.com/users/qbzzt/following{/other_user}",
      "gists_url": "https://api.github.com/users/qbzzt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qbzzt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qbzzt/subscriptions",
      "organizations_url": "https://api.github.com/users/qbzzt/orgs",
      "repos_url": "https://api.github.com/users/qbzzt/repos",
      "events_url": "https://api.github.com/users/qbzzt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qbzzt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-04T18:31:40Z",
    "updated_at": "2021-08-04T18:31:40Z",
    "author_association": "NONE",
    "body": "I think this is sufficient for deployments to Optimistic Kovan, where the gas is essentially free. Would you be OK if I documented this (after you do it, of course) and left a note that it would probably be best to use a different system for deploying for the production network when you get to it? We charge `gasLimit * gasPrice`, rather than `gasUsed * gasPrice`, so this isn't a good idea in production.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/892879772/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/892972735",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-892972735",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 892972735,
    "node_id": "IC_kwDOAkfq-c41Oa6_",
    "user": {
      "login": "fainashalts",
      "id": 8952139,
      "node_id": "MDQ6VXNlcjg5NTIxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8952139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fainashalts",
      "html_url": "https://github.com/fainashalts",
      "followers_url": "https://api.github.com/users/fainashalts/followers",
      "following_url": "https://api.github.com/users/fainashalts/following{/other_user}",
      "gists_url": "https://api.github.com/users/fainashalts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fainashalts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fainashalts/subscriptions",
      "organizations_url": "https://api.github.com/users/fainashalts/orgs",
      "repos_url": "https://api.github.com/users/fainashalts/repos",
      "events_url": "https://api.github.com/users/fainashalts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fainashalts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-04T21:04:21Z",
    "updated_at": "2021-08-04T21:04:21Z",
    "author_association": "MEMBER",
    "body": "Hi @qbzzt I'd really like to help make it feasible to deploy from Truffle to the production chain! Why do you charge `gasLimit * gasPrice` rather than `gasUsed * gasPrice` and do you have a suggestion for how we could do this better from the Truffle side? What would the ideal flow look like here?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/892972735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/892980812",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-892980812",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 892980812,
    "node_id": "IC_kwDOAkfq-c41Oc5M",
    "user": {
      "login": "qbzzt",
      "id": 12722969,
      "node_id": "MDQ6VXNlcjEyNzIyOTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12722969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qbzzt",
      "html_url": "https://github.com/qbzzt",
      "followers_url": "https://api.github.com/users/qbzzt/followers",
      "following_url": "https://api.github.com/users/qbzzt/following{/other_user}",
      "gists_url": "https://api.github.com/users/qbzzt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qbzzt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qbzzt/subscriptions",
      "organizations_url": "https://api.github.com/users/qbzzt/orgs",
      "repos_url": "https://api.github.com/users/qbzzt/repos",
      "events_url": "https://api.github.com/users/qbzzt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qbzzt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-04T21:17:35Z",
    "updated_at": "2021-08-04T21:17:35Z",
    "author_association": "NONE",
    "body": "`gasUsed` is a tiny portion of the cost of an Optimistic Ethereum transaction. The real cost is the storage on L1 (see https://community.optimism.io/docs/developers/fees.html). And just having a higher multiplier isn't going to do much good, because real gas costs real money.\r\n\r\nIf we can't do an automatic call to `eth_estimateGas` as part of the deployment, have two options, both requiring a somewhat more complicated deployment code:\r\n\r\n1. Call `eth_estimateGas` \"manually\" before the deployment transaction\r\n2. Call an L1 endpoint to get the current cost of gas, and estimate the cost ourselves based on code side and the L1 gas cost. \r\n\r\nEither is possible, but neither is great developer experience. It might be better to just create a web page where people can use a wallet to deploy their code.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/892980812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/895598527",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-895598527",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 895598527,
    "node_id": "IC_kwDOAkfq-c41Yb-_",
    "user": {
      "login": "fainashalts",
      "id": 8952139,
      "node_id": "MDQ6VXNlcjg5NTIxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8952139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fainashalts",
      "html_url": "https://github.com/fainashalts",
      "followers_url": "https://api.github.com/users/fainashalts/followers",
      "following_url": "https://api.github.com/users/fainashalts/following{/other_user}",
      "gists_url": "https://api.github.com/users/fainashalts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fainashalts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fainashalts/subscriptions",
      "organizations_url": "https://api.github.com/users/fainashalts/orgs",
      "repos_url": "https://api.github.com/users/fainashalts/repos",
      "events_url": "https://api.github.com/users/fainashalts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fainashalts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-09T22:41:19Z",
    "updated_at": "2021-08-09T22:41:19Z",
    "author_association": "MEMBER",
    "body": "Hi @qbzzt sorry for the delay! I will do a deeper dive into this issue this week to see what we can do on our side. \r\n\r\nWhen you say an automatic call to `eth_estimateGas`, what do you mean? Where would you want this call to happen? \r\n\r\nI think I'm a bit confused about how gas for a deployment to Optimistic L2 is calculated -- you say `gasUsed * gasPrice` but that is for the L2, and then we need to account for gas on L1 as well? Is there a clear chunk of code somewhere you could point me toward? I just want to be sure I'm seeing the whole picture here so we can support the flow in the best way possible. Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/895598527/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/895621896",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-895621896",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 895621896,
    "node_id": "IC_kwDOAkfq-c41YhsI",
    "user": {
      "login": "qbzzt",
      "id": 12722969,
      "node_id": "MDQ6VXNlcjEyNzIyOTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12722969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qbzzt",
      "html_url": "https://github.com/qbzzt",
      "followers_url": "https://api.github.com/users/qbzzt/followers",
      "following_url": "https://api.github.com/users/qbzzt/following{/other_user}",
      "gists_url": "https://api.github.com/users/qbzzt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qbzzt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qbzzt/subscriptions",
      "organizations_url": "https://api.github.com/users/qbzzt/orgs",
      "repos_url": "https://api.github.com/users/qbzzt/repos",
      "events_url": "https://api.github.com/users/qbzzt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qbzzt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-09T23:37:09Z",
    "updated_at": "2021-08-09T23:40:19Z",
    "author_association": "NONE",
    "body": "@fainashalts , no problem. I prefer late answers to hurried ones.\r\n\r\n`gasUsed * gasPrice` is in L1. In L2 it is documented here: https://community.optimism.io/docs/developers/fees.html#under-the-hood , except I need to change the formula to:\r\n\r\n```\r\ntotal_cost = (transaction_size_in_bytes * data_price) + (execution_gas_limit * execution_price)\r\n```\r\n\r\nWe need to account for gas cost of L1 for the storage. That is the main cost of the transaction, and contract creation transactions require a lot of storage (one byte for each byte of the code, at least).\r\n\r\nHere is what happens currently:\r\n\r\n1. My user code instantiates a new contract:\r\n   ```javascript\r\n   storage = await SimpleStorage.new()\r\n   ```\r\n\r\n2. Inside `SimpleStorage.new()` Truffle performs some steps:\r\n    a. Read the `SimpleStorage.json` file to get the contract's bytecode\r\n    b. Create a transaction to address 0 to create the contract\r\n    c. Send that transaction, and receive a Promise object\r\n    d. Return the Promise object.\r\n\r\n3. My user code decides what to do with that Promise. \r\n\r\n\r\nWhat I want is to have a step between b and c that runs `eth_estimateGas` on the transaction, and then modify the transaction's `gasLimit` to the amount returned by `eth_estimateGas`.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/895621896/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/900590505",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-900590505",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 900590505,
    "node_id": "IC_kwDOAkfq-c41reup",
    "user": {
      "login": "fainashalts",
      "id": 8952139,
      "node_id": "MDQ6VXNlcjg5NTIxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8952139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fainashalts",
      "html_url": "https://github.com/fainashalts",
      "followers_url": "https://api.github.com/users/fainashalts/followers",
      "following_url": "https://api.github.com/users/fainashalts/following{/other_user}",
      "gists_url": "https://api.github.com/users/fainashalts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fainashalts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fainashalts/subscriptions",
      "organizations_url": "https://api.github.com/users/fainashalts/orgs",
      "repos_url": "https://api.github.com/users/fainashalts/repos",
      "events_url": "https://api.github.com/users/fainashalts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fainashalts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-17T20:00:08Z",
    "updated_at": "2021-08-17T20:00:08Z",
    "author_association": "MEMBER",
    "body": "Hi @qbzzt, \r\n\r\nJust wanted to provide an update -- I discovered that we use a hard-coded default gas when one is not provided, which is definitely not ideal, regardless of the chain or layer involved. I am working to find the best way to change this that addresses all the places where this default is currently used.\r\n\r\nIn the meantime, I got to thinking -- when I deploy to the Optimistic L2 from Truffle, I am using web3 to get certain information from the chain. I think web3 basically assumes I'm just talking to the L1, but you all have a fork of the `@ethereumjs/vm` package, right? \r\n\r\nWhen I estimate gas on an optimistic chain, what exactly am I getting back? I am just wondering if I should be treating this gas estimate the same way as I do the Ethereum one or if I should be trying to inject the context of which chain I am on into this estimation (my initial impulse was not to inject context at this stage and just treat the estimate the same way). Would love to know your thoughts/findings on this!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/900590505/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/900606866",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-900606866",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 900606866,
    "node_id": "IC_kwDOAkfq-c41riuS",
    "user": {
      "login": "qbzzt",
      "id": 12722969,
      "node_id": "MDQ6VXNlcjEyNzIyOTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12722969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qbzzt",
      "html_url": "https://github.com/qbzzt",
      "followers_url": "https://api.github.com/users/qbzzt/followers",
      "following_url": "https://api.github.com/users/qbzzt/following{/other_user}",
      "gists_url": "https://api.github.com/users/qbzzt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qbzzt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qbzzt/subscriptions",
      "organizations_url": "https://api.github.com/users/qbzzt/orgs",
      "repos_url": "https://api.github.com/users/qbzzt/repos",
      "events_url": "https://api.github.com/users/qbzzt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qbzzt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-17T20:26:24Z",
    "updated_at": "2021-08-17T20:26:24Z",
    "author_association": "NONE",
    "body": "I don't think we use a fork of `@ethereumjs/vm`, because it won't help. It can give us the L2 gas required, but that value is just a small part of the story. The major cost is L1 storage, which depends on L1 gas cost. That's why we need to ask an actual node with `eth_estimateGas` (which returns an estimate of the overall cost when going to an Optimistic Ethereum node)",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/900606866/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/900703817",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-900703817",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 900703817,
    "node_id": "IC_kwDOAkfq-c41r6ZJ",
    "user": {
      "login": "fainashalts",
      "id": 8952139,
      "node_id": "MDQ6VXNlcjg5NTIxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8952139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fainashalts",
      "html_url": "https://github.com/fainashalts",
      "followers_url": "https://api.github.com/users/fainashalts/followers",
      "following_url": "https://api.github.com/users/fainashalts/following{/other_user}",
      "gists_url": "https://api.github.com/users/fainashalts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fainashalts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fainashalts/subscriptions",
      "organizations_url": "https://api.github.com/users/fainashalts/orgs",
      "repos_url": "https://api.github.com/users/fainashalts/repos",
      "events_url": "https://api.github.com/users/fainashalts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fainashalts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-17T23:46:29Z",
    "updated_at": "2021-08-17T23:47:43Z",
    "author_association": "MEMBER",
    "body": "Sorry @qbzzt, I am pretty sure I saw a fork of `@etherueumjs/vm` somewhere in your code but it was several months ago before the switch to a monorepo and I can't find it now. I could definitely be mistaken! \r\n\r\nI can ask the node I am connected to for the gas using `eth_estimateGas`, but my question from the previous comment stands: \r\n\r\n> When I estimate gas on an optimistic chain, what exactly am I getting back? I am just wondering if I should be treating this gas estimate the same way as I do the Ethereum one or if I should be trying to inject the context of which chain I am on into this estimation (my initial impulse was not to inject context at this stage and just treat the estimate the same way). Would love to know your thoughts/findings on this!\r\n\r\n\r\nThe reason I got to thinking about this is that when I hit the L2 node with an `estimateGas` request to set the gas, I get an `exceeds blockLimit` error and that does not happen when I test with the L1 Kovan node. Am I missing something? I see `@eth-optimism/core-utils` has a `TxGasLimit` that it exposes, should I incorporate it into the Truffle config file for Optimism? Or is there something else going on? Thanks for any clarification you can provide here!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/900703817/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/900743657",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-900743657",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 900743657,
    "node_id": "IC_kwDOAkfq-c41sEHp",
    "user": {
      "login": "qbzzt",
      "id": 12722969,
      "node_id": "MDQ6VXNlcjEyNzIyOTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12722969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qbzzt",
      "html_url": "https://github.com/qbzzt",
      "followers_url": "https://api.github.com/users/qbzzt/followers",
      "following_url": "https://api.github.com/users/qbzzt/following{/other_user}",
      "gists_url": "https://api.github.com/users/qbzzt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qbzzt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qbzzt/subscriptions",
      "organizations_url": "https://api.github.com/users/qbzzt/orgs",
      "repos_url": "https://api.github.com/users/qbzzt/repos",
      "events_url": "https://api.github.com/users/qbzzt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qbzzt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-18T01:29:26Z",
    "updated_at": "2021-08-18T01:29:26Z",
    "author_association": "NONE",
    "body": "> I can ask the node I am connected to for the gas using `eth_estimateGas`, but my question from the previous comment stands:\r\n> \r\n> > When I estimate gas on an optimistic chain, what exactly am I getting back? I am just wondering if I should be treating this gas estimate the same way as I do the Ethereum one or if I should be trying to inject the context of which chain I am on into this estimation (my initial impulse was not to inject context at this stage and just treat the estimate the same way). Would love to know your thoughts/findings on this!\r\n\r\nSorry I didn't answer it. When you ask for a gas estimate it gives you the equation in https://community.optimism.io/docs/developers/fees.html#encoding-sequencer-transaction-costs. It's fairly involved, which is why it's best to just rely on `eth_estimateGas`.\r\n\r\n> The reason I got to thinking about this is that when I hit the L2 node with an `estimateGas` request to set the gas, I get an `exceeds blockLimit` error and that does not happen when I test with the L1 Kovan node. Am I missing something? \r\n\r\nYou mean when you try to then send a transaction with that `gasLimit` to Optimistic Kovan? It might be related to https://github.com/ethereum-optimism/optimism/issues/1081. \r\n\r\n\r\n>I see `@eth-optimism/core-utils` has a `TxGasLimit` that it exposes, should I incorporate it into the Truffle config file for Optimism? Or is there something else going on? Thanks for any clarification you can provide here!\r\n\r\n`TxGasLimit` is a way to get the estimate without having to go through `eth_estimateGas`, but it requires a lot of information. It's a lot better to just use `eth_estimateGas` when possible. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/900743657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/902434554",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-902434554",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 902434554,
    "node_id": "IC_kwDOAkfq-c41yg76",
    "user": {
      "login": "fainashalts",
      "id": 8952139,
      "node_id": "MDQ6VXNlcjg5NTIxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8952139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fainashalts",
      "html_url": "https://github.com/fainashalts",
      "followers_url": "https://api.github.com/users/fainashalts/followers",
      "following_url": "https://api.github.com/users/fainashalts/following{/other_user}",
      "gists_url": "https://api.github.com/users/fainashalts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fainashalts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fainashalts/subscriptions",
      "organizations_url": "https://api.github.com/users/fainashalts/orgs",
      "repos_url": "https://api.github.com/users/fainashalts/repos",
      "events_url": "https://api.github.com/users/fainashalts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fainashalts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-20T05:08:09Z",
    "updated_at": "2021-08-20T05:08:09Z",
    "author_association": "MEMBER",
    "body": "Hi @qbzzt! My apologies, it looks like I originally misunderstood what you were asking for here. To be clear, you are requesting that we change the way we get the `gasLimit` for a transaction?\r\n\r\nFor the sake of absolute clarity, in Truffle land:\r\n\r\n`gas` is the most you are willing to pay for a transaction, and \r\n`gasLimit`/`blockLimit` is the most gas that can be spent in a block (not sure how that translates to Optimism, so herein may be the problem?)\r\n\r\nWe check for the `gasLimit` in the Truffle code when it is not provided within the config, [here](https://github.com/trufflesuite/truffle/blob/develop/packages/deployer/src/deployment.js#L313). We do this by getting the latest block from `web3`, which contains the `gasLimit`, [here](https://github.com/trufflesuite/truffle/blob/develop/packages/deployer/src/deployment.js#L313). \r\n\r\nRe-reading our correspondence I see you meant you'd like us to use the `estimate_gas` value to be the `gasLimit` you get back (I guess ethers.js calls `gasLimit` `gas` and that may have led to some of my confusion...). After digging through our code I see there are some inconsistencies in naming the gas variables that may be relevant here, so I'm going to spend some time working it out to find the best way to address this issue. I'll keep you posted!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/902434554/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/902664387",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-902664387",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 902664387,
    "node_id": "IC_kwDOAkfq-c41zZDD",
    "user": {
      "login": "qbzzt",
      "id": 12722969,
      "node_id": "MDQ6VXNlcjEyNzIyOTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12722969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qbzzt",
      "html_url": "https://github.com/qbzzt",
      "followers_url": "https://api.github.com/users/qbzzt/followers",
      "following_url": "https://api.github.com/users/qbzzt/following{/other_user}",
      "gists_url": "https://api.github.com/users/qbzzt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qbzzt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qbzzt/subscriptions",
      "organizations_url": "https://api.github.com/users/qbzzt/orgs",
      "repos_url": "https://api.github.com/users/qbzzt/repos",
      "events_url": "https://api.github.com/users/qbzzt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qbzzt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-20T12:43:34Z",
    "updated_at": "2021-08-20T12:44:16Z",
    "author_association": "NONE",
    "body": "IIRC in Optimism each transaction is its own block, so the two figures are really the same.\r\n\r\nSorry I wasn't clear on what I meant earlier.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/902664387/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/902747294",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-902747294",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 902747294,
    "node_id": "IC_kwDOAkfq-c41ztSe",
    "user": {
      "login": "qbzzt",
      "id": 12722969,
      "node_id": "MDQ6VXNlcjEyNzIyOTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12722969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qbzzt",
      "html_url": "https://github.com/qbzzt",
      "followers_url": "https://api.github.com/users/qbzzt/followers",
      "following_url": "https://api.github.com/users/qbzzt/following{/other_user}",
      "gists_url": "https://api.github.com/users/qbzzt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qbzzt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qbzzt/subscriptions",
      "organizations_url": "https://api.github.com/users/qbzzt/orgs",
      "repos_url": "https://api.github.com/users/qbzzt/repos",
      "events_url": "https://api.github.com/users/qbzzt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qbzzt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-20T14:48:04Z",
    "updated_at": "2021-08-20T14:48:04Z",
    "author_association": "NONE",
    "body": "Here's where I am now. I'm trying to use `<contract>.new.estimateGas()` and use a multiple of that, and it still fails:\r\n\r\n```\r\ntruffle(optimistic_kovan)> await SimpleStorage.new.estimateGas(0)\r\n3000045\r\ntruffle(optimistic_kovan)> x = await SimpleStorage.new(0, {gas: 3000045*2, gasLimit: 300045*3, gasPrice: 150000000})\r\nUncaught:\r\n{\r\n  code: -32000,\r\n  message: 'invalid transaction: exceeds block gas limit'\r\n}\r\n```\r\n\r\nWhen I try to run `estimateGas` on mainnet, it fails with an allowance error, even though it shouldn't cost anything as a read only transaction:\r\n```\r\ntruffle(optimistic_mainnet)> await SimpleStorage.new.estimateGas(0)\r\nUncaught { code: -32000, message: 'gas required exceeds allowance (6721975)' }\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/902747294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/902859139",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-902859139",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 902859139,
    "node_id": "IC_kwDOAkfq-c410ImD",
    "user": {
      "login": "fainashalts",
      "id": 8952139,
      "node_id": "MDQ6VXNlcjg5NTIxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8952139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fainashalts",
      "html_url": "https://github.com/fainashalts",
      "followers_url": "https://api.github.com/users/fainashalts/followers",
      "following_url": "https://api.github.com/users/fainashalts/following{/other_user}",
      "gists_url": "https://api.github.com/users/fainashalts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fainashalts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fainashalts/subscriptions",
      "organizations_url": "https://api.github.com/users/fainashalts/orgs",
      "repos_url": "https://api.github.com/users/fainashalts/repos",
      "events_url": "https://api.github.com/users/fainashalts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fainashalts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-20T17:53:26Z",
    "updated_at": "2021-08-20T17:53:26Z",
    "author_association": "MEMBER",
    "body": "Hi @qbzzt thanks for keeping me updated! Yes, I get the exceeds blockLimit error as well when setting `gas` to `<contract>.new.estimateGas()` in the deployment flow. That has been the main issue I've been trying to debug lately. \r\n\r\nI just tried it and I do see this error using `estimateGas` in optimistic mainnet as well. 6721975 is the default `gas` value that is hardcoded, as I mentioned. But you're right that shouldn't happen since it shouldn't cost anything to read that info. I tried increasing gas to an astronomical # and still got the error. A bit of searching around yielded that this error may actually just be obscuring the other error re: exceeding the blockLimit. \r\n\r\n_Neither of these errors happen when tested against regular Kovan and regular Ethereum mainnet, so my thought is that there is a mismatch somewhere in Truffle's communication with Optimism. Is this document up to date? https://community.optimism.io/docs/protocol/evm-comparison.html_\r\n\r\nI want to be sure that whatever changes we make are consistent with how things are done on Ethereum as well, since ideally devs shouldn't have to get in the weeds on this sort of thing when developing for either chain.\r\n\r\nA couple of us over at the Truffle team will be meeting about the entire gas/gasPrice/gasLimit/blockLimit flow next week, and we may be reworking it to be more straightforward. In that conversation, I'll be sure we consider the Optimism needs and try to address everything we've talked about here. Any additional info you'd like to provide for that in the meantime would be appreciated!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/902859139/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/902868263",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-902868263",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 902868263,
    "node_id": "IC_kwDOAkfq-c410K0n",
    "user": {
      "login": "qbzzt",
      "id": 12722969,
      "node_id": "MDQ6VXNlcjEyNzIyOTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12722969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qbzzt",
      "html_url": "https://github.com/qbzzt",
      "followers_url": "https://api.github.com/users/qbzzt/followers",
      "following_url": "https://api.github.com/users/qbzzt/following{/other_user}",
      "gists_url": "https://api.github.com/users/qbzzt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qbzzt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qbzzt/subscriptions",
      "organizations_url": "https://api.github.com/users/qbzzt/orgs",
      "repos_url": "https://api.github.com/users/qbzzt/repos",
      "events_url": "https://api.github.com/users/qbzzt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qbzzt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-20T18:10:11Z",
    "updated_at": "2021-08-20T18:18:28Z",
    "author_association": "NONE",
    "body": ">Neither of these errors happen when tested against regular Kovan and regular Ethereum mainnet, so my thought is that there is a mismatch somewhere in Truffle's communication with Optimism. Is this document up to date? https://community.optimism.io/docs/protocol/evm-comparison.html\r\n\r\nIt's accurate for right now. We are working on an upgrade that will change some things (https://community.optimism.io/docs/developers/l2/deploy.html#key-info), but I don't think it will affect the gas issue.\r\n\r\nPS\r\n--\r\nThank you for representing us. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/902868263/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/903998530",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-903998530",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 903998530,
    "node_id": "IC_kwDOAkfq-c414exC",
    "user": {
      "login": "qbzzt",
      "id": 12722969,
      "node_id": "MDQ6VXNlcjEyNzIyOTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12722969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qbzzt",
      "html_url": "https://github.com/qbzzt",
      "followers_url": "https://api.github.com/users/qbzzt/followers",
      "following_url": "https://api.github.com/users/qbzzt/following{/other_user}",
      "gists_url": "https://api.github.com/users/qbzzt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qbzzt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qbzzt/subscriptions",
      "organizations_url": "https://api.github.com/users/qbzzt/orgs",
      "repos_url": "https://api.github.com/users/qbzzt/repos",
      "events_url": "https://api.github.com/users/qbzzt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qbzzt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-23T18:11:43Z",
    "updated_at": "2021-08-23T18:11:43Z",
    "author_association": "NONE",
    "body": "It looks like our October update will remove this problem, so this is not a big priority for us.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/903998530/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/904132272",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-904132272",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 904132272,
    "node_id": "IC_kwDOAkfq-c414_aw",
    "user": {
      "login": "fainashalts",
      "id": 8952139,
      "node_id": "MDQ6VXNlcjg5NTIxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8952139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fainashalts",
      "html_url": "https://github.com/fainashalts",
      "followers_url": "https://api.github.com/users/fainashalts/followers",
      "following_url": "https://api.github.com/users/fainashalts/following{/other_user}",
      "gists_url": "https://api.github.com/users/fainashalts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fainashalts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fainashalts/subscriptions",
      "organizations_url": "https://api.github.com/users/fainashalts/orgs",
      "repos_url": "https://api.github.com/users/fainashalts/repos",
      "events_url": "https://api.github.com/users/fainashalts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fainashalts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-23T21:07:12Z",
    "updated_at": "2021-08-23T21:07:12Z",
    "author_association": "MEMBER",
    "body": "Oh, interesting @qbzzt! Would you mind telling/showing me what changes will be made that will address this? I want to be sure anything we change won't mess it up. :) ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/904132272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/904781793",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-904781793",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 904781793,
    "node_id": "IC_kwDOAkfq-c417d_h",
    "user": {
      "login": "qbzzt",
      "id": 12722969,
      "node_id": "MDQ6VXNlcjEyNzIyOTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12722969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qbzzt",
      "html_url": "https://github.com/qbzzt",
      "followers_url": "https://api.github.com/users/qbzzt/followers",
      "following_url": "https://api.github.com/users/qbzzt/following{/other_user}",
      "gists_url": "https://api.github.com/users/qbzzt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qbzzt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qbzzt/subscriptions",
      "organizations_url": "https://api.github.com/users/qbzzt/orgs",
      "repos_url": "https://api.github.com/users/qbzzt/repos",
      "events_url": "https://api.github.com/users/qbzzt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qbzzt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-24T16:14:29Z",
    "updated_at": "2021-08-24T16:14:29Z",
    "author_association": "NONE",
    "body": "Of course not. We're going to do two things:\r\n\r\n1. Report the real L2 `gasPrice` and `gasLimit`, and charge those amounts\r\n2. In the next line in the node code (which we control, because it's a mutated version of geth) also charge the L1 costs. \r\n\r\nThe disadvantage is that unless we can get wallets to change their UI they'll report a wrong gas price for the transaction. The advantage, though, is that we'll be back to using the normal Ethereum method so 3rd party tools, such as Truffle, will work without modification.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/904781793/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/906818016",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-906818016",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 906818016,
    "node_id": "IC_kwDOAkfq-c42DPHg",
    "user": {
      "login": "fainashalts",
      "id": 8952139,
      "node_id": "MDQ6VXNlcjg5NTIxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8952139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fainashalts",
      "html_url": "https://github.com/fainashalts",
      "followers_url": "https://api.github.com/users/fainashalts/followers",
      "following_url": "https://api.github.com/users/fainashalts/following{/other_user}",
      "gists_url": "https://api.github.com/users/fainashalts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fainashalts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fainashalts/subscriptions",
      "organizations_url": "https://api.github.com/users/fainashalts/orgs",
      "repos_url": "https://api.github.com/users/fainashalts/repos",
      "events_url": "https://api.github.com/users/fainashalts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fainashalts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-26T23:52:24Z",
    "updated_at": "2021-08-26T23:52:24Z",
    "author_association": "MEMBER",
    "body": "Hi @qbzzt I will be making some changes to the way we do gas estimation to ensure this sort of thing doesn't happen again. Thank you for pointing out the issue as it led to a deeper dive for me into Truffle's gas estimation flow that was really useful and informative. I will let you know when the changes are live.\r\n\r\nIn the meantime, I believe if you set `gas: 0` in the network configuration in `truffle-config.ovm.js` that will force Truffle to do the gas estimation we want. Let me know if that helps for now!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/906818016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/906822992",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-906822992",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 906822992,
    "node_id": "IC_kwDOAkfq-c42DQVQ",
    "user": {
      "login": "qbzzt",
      "id": 12722969,
      "node_id": "MDQ6VXNlcjEyNzIyOTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12722969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qbzzt",
      "html_url": "https://github.com/qbzzt",
      "followers_url": "https://api.github.com/users/qbzzt/followers",
      "following_url": "https://api.github.com/users/qbzzt/following{/other_user}",
      "gists_url": "https://api.github.com/users/qbzzt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qbzzt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qbzzt/subscriptions",
      "organizations_url": "https://api.github.com/users/qbzzt/orgs",
      "repos_url": "https://api.github.com/users/qbzzt/repos",
      "events_url": "https://api.github.com/users/qbzzt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qbzzt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-27T00:05:46Z",
    "updated_at": "2021-08-27T00:05:46Z",
    "author_association": "NONE",
    "body": "Thank you. I'll try it, probably tomorrow (it's 7pm here and I'm taking\nbabies to sleep)\n\nOn Thu, Aug 26, 2021 at 6:52 PM Faina Shalts ***@***.***>\nwrote:\n\n> Hi @qbzzt <https://github.com/qbzzt> I will be making some changes to the\n> way we do gas estimation to ensure this sort of thing doesn't happen again.\n> Thank you for pointing out the issue as it led to a deeper dive for me into\n> Truffle's gas estimation flow that was really useful and informative. I\n> will let you know when the changes are live.\n>\n> In the meantime, I believe if you set gas: 0 in the network configuration\n> in truffle-config.ovm.js that will force Truffle to do the gas estimation\n> we want. Let me know if that helps for now!\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/trufflesuite/truffle/issues/4217#issuecomment-906818016>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ADBCGGIKP43PHJ7SXWPEA3DT63HUHANCNFSM5BNU3RKQ>\n> .\n> Triage notifications on the go with GitHub Mobile for iOS\n> <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n> or Android\n> <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.\n>\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/906822992/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/907523546",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-907523546",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 907523546,
    "node_id": "IC_kwDOAkfq-c42F7Xa",
    "user": {
      "login": "qbzzt",
      "id": 12722969,
      "node_id": "MDQ6VXNlcjEyNzIyOTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12722969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qbzzt",
      "html_url": "https://github.com/qbzzt",
      "followers_url": "https://api.github.com/users/qbzzt/followers",
      "following_url": "https://api.github.com/users/qbzzt/following{/other_user}",
      "gists_url": "https://api.github.com/users/qbzzt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qbzzt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qbzzt/subscriptions",
      "organizations_url": "https://api.github.com/users/qbzzt/orgs",
      "repos_url": "https://api.github.com/users/qbzzt/repos",
      "events_url": "https://api.github.com/users/qbzzt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qbzzt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-27T23:23:35Z",
    "updated_at": "2021-08-27T23:24:13Z",
    "author_association": "NONE",
    "body": "> Hi @qbzzt I will be making some changes to the way we do gas estimation to ensure this sort of thing doesn't happen again. Thank you for pointing out the issue as it led to a deeper dive for me into Truffle's gas estimation flow that was really useful and informative. I will let you know when the changes are live.\r\n> \r\n> In the meantime, I believe if you set `gas: 0` in the network configuration in `truffle-config.ovm.js` that will force Truffle to do the gas estimation we want. Let me know if that helps for now!\r\n\r\nIt doesn't.\r\n\r\n```javascript\r\nori@Oris-MacBook-Pro dapp % truffle console --config truffle-config.ovm.js --network optimistic_kovan\r\ntruffle(optimistic_kovan)> x = await SimpleStorage.new()\r\nUncaught:\r\n{\r\n  code: -32000,\r\n  message: 'invalid transaction: exceeds block gas limit'\r\n}\r\ntruffle(optimistic_kovan)> \r\n```\r\n\r\nWhen my `optimistic_kovan` definition is:\r\n\r\n```javascript\r\n    optimistic_kovan: {\r\n      network_id: 69,\r\n      chain_id: 69,\r\n      gasPrice: 15000000,\r\n      gas: 0,\r\n      provider: function() {\r\n        return new HDWalletProvider(kovanMnemonic, \"https://optimism-kovan.infura.io/v3/\"+ infuraKey, 0, 1);\r\n      }\r\n    },\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/907523546/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/907526107",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-907526107",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 907526107,
    "node_id": "IC_kwDOAkfq-c42F7_b",
    "user": {
      "login": "fainashalts",
      "id": 8952139,
      "node_id": "MDQ6VXNlcjg5NTIxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8952139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fainashalts",
      "html_url": "https://github.com/fainashalts",
      "followers_url": "https://api.github.com/users/fainashalts/followers",
      "following_url": "https://api.github.com/users/fainashalts/following{/other_user}",
      "gists_url": "https://api.github.com/users/fainashalts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fainashalts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fainashalts/subscriptions",
      "organizations_url": "https://api.github.com/users/fainashalts/orgs",
      "repos_url": "https://api.github.com/users/fainashalts/repos",
      "events_url": "https://api.github.com/users/fainashalts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fainashalts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-27T23:35:34Z",
    "updated_at": "2021-08-27T23:35:34Z",
    "author_association": "MEMBER",
    "body": "Ah interesting! Setting `gas: 0` forces a gas estimation from the Truffle side the way the code currently is. This means there is an additional issue to sort out once that happens. I'll try to dig in further next week and see what this may be about. Thanks for checking!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/907526107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/907530356",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-907530356",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 907530356,
    "node_id": "IC_kwDOAkfq-c42F9B0",
    "user": {
      "login": "qbzzt",
      "id": 12722969,
      "node_id": "MDQ6VXNlcjEyNzIyOTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12722969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qbzzt",
      "html_url": "https://github.com/qbzzt",
      "followers_url": "https://api.github.com/users/qbzzt/followers",
      "following_url": "https://api.github.com/users/qbzzt/following{/other_user}",
      "gists_url": "https://api.github.com/users/qbzzt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qbzzt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qbzzt/subscriptions",
      "organizations_url": "https://api.github.com/users/qbzzt/orgs",
      "repos_url": "https://api.github.com/users/qbzzt/repos",
      "events_url": "https://api.github.com/users/qbzzt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qbzzt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-27T23:57:43Z",
    "updated_at": "2021-08-27T23:57:43Z",
    "author_association": "NONE",
    "body": "Thank you. Sorry this is turning into a time sink for you.\n\nOn Fri, Aug 27, 2021 at 6:35 PM Faina Shalts ***@***.***>\nwrote:\n\n> Ah interesting! Setting gas: 0 forces a gas estimation from the Truffle\n> side the way the code currently is. This means there is an additional issue\n> to sort out once that happens. I'll try to dig in further next week and see\n> what this may be about. Thanks for checking!\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/trufflesuite/truffle/issues/4217#issuecomment-907526107>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ADBCGGNPNGKBVP62CNEPNTDT7AONDANCNFSM5BNU3RKQ>\n> .\n> Triage notifications on the go with GitHub Mobile for iOS\n> <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n> or Android\n> <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.\n>\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/907530356/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/912716071",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-912716071",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 912716071,
    "node_id": "IC_kwDOAkfq-c42ZvEn",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-03T18:04:29Z",
    "updated_at": "2021-09-03T18:04:29Z",
    "author_association": "MEMBER",
    "body": "I think we can close this now as duplicate of https://github.com/trufflesuite/truffle/issues/3992, since that covers the general case beyond just Optimism.\r\n\r\nPlease follow PR #4296, which should resolve this issue altogether.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/912716071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1015574882",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4217#issuecomment-1015574882",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4217",
    "id": 1015574882,
    "node_id": "IC_kwDOAkfq-c48iHFi",
    "user": {
      "login": "scglenn",
      "id": 13244114,
      "node_id": "MDQ6VXNlcjEzMjQ0MTE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/13244114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scglenn",
      "html_url": "https://github.com/scglenn",
      "followers_url": "https://api.github.com/users/scglenn/followers",
      "following_url": "https://api.github.com/users/scglenn/following{/other_user}",
      "gists_url": "https://api.github.com/users/scglenn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scglenn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scglenn/subscriptions",
      "organizations_url": "https://api.github.com/users/scglenn/orgs",
      "repos_url": "https://api.github.com/users/scglenn/repos",
      "events_url": "https://api.github.com/users/scglenn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scglenn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-18T16:19:56Z",
    "updated_at": "2022-01-18T16:19:56Z",
    "author_association": "NONE",
    "body": "This isnt resolved",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1015574882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
