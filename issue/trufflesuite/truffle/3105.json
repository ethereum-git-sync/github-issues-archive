{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/3105",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3105/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3105/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3105/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/3105",
  "id": 638226825,
  "node_id": "MDU6SXNzdWU2MzgyMjY4MjU=",
  "number": 3105,
  "title": "Unable to get a revert reason when testing smart contract using Truffle against a GETH node.",
  "user": {
    "login": "Jaime-Iglesias",
    "id": 22358726,
    "node_id": "MDQ6VXNlcjIyMzU4NzI2",
    "avatar_url": "https://avatars.githubusercontent.com/u/22358726?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Jaime-Iglesias",
    "html_url": "https://github.com/Jaime-Iglesias",
    "followers_url": "https://api.github.com/users/Jaime-Iglesias/followers",
    "following_url": "https://api.github.com/users/Jaime-Iglesias/following{/other_user}",
    "gists_url": "https://api.github.com/users/Jaime-Iglesias/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Jaime-Iglesias/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Jaime-Iglesias/subscriptions",
    "organizations_url": "https://api.github.com/users/Jaime-Iglesias/orgs",
    "repos_url": "https://api.github.com/users/Jaime-Iglesias/repos",
    "events_url": "https://api.github.com/users/Jaime-Iglesias/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Jaime-Iglesias/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2020-06-13T20:26:45Z",
  "updated_at": "2020-06-16T17:26:04Z",
  "closed_at": "2020-06-15T16:12:34Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "- [ ] I've asked for help in the [Truffle Gitter](http://gitter.im/Consensys/truffle) before filing this issue.\r\n\r\n---------------------------\r\n\r\n## Issue\r\n\r\nUnable to get a revert reason when testing smart contract using Truffle against a GETH node.\r\n\r\nLet's say I have the following contract\r\n\r\n```Solidity\r\ncontract Foo { \r\n function foo(uint256 a, uint256 b) external pure returns (uint256) {\r\n        require(a < b, \"some message\");\r\n\r\n        return a + b;\r\n }\r\n}\r\n```\r\n\r\nWith the following test running on Truffle (using HDWalletProvider) :\r\n\r\n```js\r\nconst Foo = artifacts.require('Foo');\r\n\r\ncontract('Foo', function () {\r\n  beforeEach(async function () {\r\n        this.foo = await Foo.new();\r\n  });\r\n\r\n  describe('foo', function () {\r\n     context('when a is not lower than b', function () {\r\n       const a = new BN('1');\r\n       const b = new BN('0');\r\n\r\n       it('reverts', async function () {\r\n            const res = await this.calculator.foo(a, b);\r\n            // this returns  BN 8c379a00000000000000000000000000000000000\r\n            // for those who do not know, 8c379a is what Solidity prefixes an error reason with.\r\n            // but for truffle this is not reverting, it's just returning a result as if the transaction was a success\r\n            // interestingly enough, I have managed to retrieve revert reasons out of other unit tests against the same GETH node\r\n       });\r\n     });\r\n  });\r\n});\r\n```\r\n\r\nwith this alternative test running on Mocha:\r\n\r\n```js\r\nconst Web3 = require('web3');\r\n\r\nconst Foo = require('path/to/Foo');\r\n\r\nconst web3 = new Web3('localhost:port');\r\nweb3.eth.handleRevert = true;\r\n\r\ndescribe('Foo', function () {\r\n  beforeEach(async function () {\r\n        var contract = new web3.eth.Contract(Foo.abi);\r\n        this.foo = await contract.deploy({ data : contract.bytecode }).send({ gas: gas, from: accounts[0] });\r\n  });\r\n\r\n  describe('foo', function () {\r\n     context('when a is not lower than b', function () {\r\n       const a = new BN('1');\r\n       const b = new BN('0');\r\n\r\n       it('reverts', async function () {\r\n            try { \r\n               await this.calculator.methods.foo(a, b).send({ gas: gas, from: accounts[0] });\r\n            } catch (err) {\r\n                 console.log(err.reason);\r\n                  // this logs the expected revert message\r\n            }\r\n       });\r\n     });\r\n  });\r\n});\r\n```\r\n## Steps to Reproduce\r\n\r\n- Run the above test cases against a local GETH node\r\n- latest version of truffle you can get from npm.\r\n- latest version of web3 (on the pure web3 tests).\r\n\r\n## Expected Behavior\r\n\r\nThat truffle recognizes that the transaction is reverting and returns the revert message.\r\n\r\nI have to clarify that I have tried researching if this is a GETH problem (i.e if GETH actually supports revert reasons) and I have found contradicting answers (based on issues and PRs) what also makes it weirder is the fact that I have managed to get revert reasons out of other unit tests and that I can use pure web3 to retrieve the revert reason.\r\n\r\nAlso, it's worth noting that everything works as expected against a ganache-cli instance.\r\n## Actual Results\r\n\r\nit returns a BN value `8c379a00000000000000000000000000000000000` representing Solidity's encoding of a revert (not even a string message or something similar that makes it obvious)\r\n\r\n## Environment\r\n\r\n- Run the above test cases against a local GETH node\r\n- latest version of truffle you can get from npm.\r\n- latest version of web3 (on the pure web3 tests).\r\n- node v10.19.0\r\n",
  "closed_by": {
    "login": "Jaime-Iglesias",
    "id": 22358726,
    "node_id": "MDQ6VXNlcjIyMzU4NzI2",
    "avatar_url": "https://avatars.githubusercontent.com/u/22358726?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Jaime-Iglesias",
    "html_url": "https://github.com/Jaime-Iglesias",
    "followers_url": "https://api.github.com/users/Jaime-Iglesias/followers",
    "following_url": "https://api.github.com/users/Jaime-Iglesias/following{/other_user}",
    "gists_url": "https://api.github.com/users/Jaime-Iglesias/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Jaime-Iglesias/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Jaime-Iglesias/subscriptions",
    "organizations_url": "https://api.github.com/users/Jaime-Iglesias/orgs",
    "repos_url": "https://api.github.com/users/Jaime-Iglesias/repos",
    "events_url": "https://api.github.com/users/Jaime-Iglesias/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Jaime-Iglesias/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/3105/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3105/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/644229611",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3105#issuecomment-644229611",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3105",
    "id": 644229611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDIyOTYxMQ==",
    "user": {
      "login": "Jaime-Iglesias",
      "id": 22358726,
      "node_id": "MDQ6VXNlcjIyMzU4NzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22358726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jaime-Iglesias",
      "html_url": "https://github.com/Jaime-Iglesias",
      "followers_url": "https://api.github.com/users/Jaime-Iglesias/followers",
      "following_url": "https://api.github.com/users/Jaime-Iglesias/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaime-Iglesias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jaime-Iglesias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaime-Iglesias/subscriptions",
      "organizations_url": "https://api.github.com/users/Jaime-Iglesias/orgs",
      "repos_url": "https://api.github.com/users/Jaime-Iglesias/repos",
      "events_url": "https://api.github.com/users/Jaime-Iglesias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jaime-Iglesias/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-15T16:12:34Z",
    "updated_at": "2020-06-15T16:12:34Z",
    "author_association": "NONE",
    "body": "So, after some extra testing my conclusion is that this is due to GETH not suporting revert reasons yet - I might be wrong on this and it might be an issue on the Truffle side but I haven't been able to identify what's happening.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/644229611/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/644311706",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3105#issuecomment-644311706",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3105",
    "id": 644311706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDMxMTcwNg==",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-15T18:45:30Z",
    "updated_at": "2020-06-15T18:45:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can explain what's going on here.  I won't reopen this unless you think it should be reopened, but I can certainly explain what's going on here.\r\n\r\nSo, before I go on, I should say, there is a quick workaround for your problem.  Your problem is occurring because `foo` is a `pure` function, and therefore, by default, when you do `calculator.foo(a, b)`, Truffle defaults to performing a call rather than a transaction.  However, you can do `calculator.foo.sendTransaction(a, b)` in order to force it to make an actual transaction.  If you do this, you should get the exception you expect.\r\n\r\nNow then: Why is this happening?\r\n\r\nFirst, I should note that this doesn't really have to do with revert *reasons*.  Rather it has to do with, do reverts cause exceptions?  In web3, reverts cause exceptions, and Truffle (which uses web3) preserves this behavior.  But when we say \"reverts cause exceptions\", this really means \"reverting *transactions* cause exceptions\".  Reverting calls do not cause exceptions in web3... usually.  I'll talk about an exception to this in a bit.\r\n\r\nSo why don't reverting calls cause exceptions in web3?  Well, it comes down to the difference between transactions and calls.  The thing about calls is that they only return a value, not a status.  So, they actually do not contain sufficient information to determine whether they reverted.\r\n\r\nNow, *if* the call reverted with a message, then (notionally speaking) web3 could check for the presence of an encoded revert message (these are pretty distinctive) and throw an exception if present, though it doesn't actually do this.  And notionally speaking *we* could do this if we used web3 slightly differently, although I'm unsure if it's worth it for us to do this, or even correct for us to do this, when we're planning to rewrite Truffle Contract anyway.  But neither Truffle nor web3 could possibly detect a reverting call *in general*, because the information simply isn't there.  (Maybe there's no reason.  Or maybe they did some crazy assembly to provide a revert message outside of the standard format.  Etc.)\r\n\r\nSo why do reverting calls still cause exceptions in certain cases, given that I just said that they don't?  Well, if you use Ganache, and you don't turn on the `--noVMErrorsOnRPCResponse` option to force it to operate in a strictly standard way, then Ganache itself will return an error when a call reverts, rather than the result as expected, and so web3 will throw an exception.  But if your client is acting in a standard fashion, then, as mentioned, web3 won't do this.\r\n\r\nI think recent or upcoming versions of Geth may be adding some sort of thing like this, but I'm not too clear on the details, and I don't know whether it will be in a format that causes web3 to throw an exception.  Sorry, haven't kept up on this.\r\n\r\nIn any case, like I said, if you want a quick workaround, do it as a transaction rather than a call.  We possibly could do something about this on our end, but I'm not certain that we should.  If you reopen the issue then I guess we'll have to discuss it, but for now I'm leaving this alone.  Hope that's helpful!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/644311706/reactions",
      "total_count": 8,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 2,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/644321708",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3105#issuecomment-644321708",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3105",
    "id": 644321708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDMyMTcwOA==",
    "user": {
      "login": "Jaime-Iglesias",
      "id": 22358726,
      "node_id": "MDQ6VXNlcjIyMzU4NzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22358726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jaime-Iglesias",
      "html_url": "https://github.com/Jaime-Iglesias",
      "followers_url": "https://api.github.com/users/Jaime-Iglesias/followers",
      "following_url": "https://api.github.com/users/Jaime-Iglesias/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaime-Iglesias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jaime-Iglesias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaime-Iglesias/subscriptions",
      "organizations_url": "https://api.github.com/users/Jaime-Iglesias/orgs",
      "repos_url": "https://api.github.com/users/Jaime-Iglesias/repos",
      "events_url": "https://api.github.com/users/Jaime-Iglesias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jaime-Iglesias/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-15T19:05:06Z",
    "updated_at": "2020-06-15T19:05:06Z",
    "author_association": "NONE",
    "body": "> I can explain what's going on here. I won't reopen this unless you think it should be reopened, but I can certainly explain what's going on here.\r\n> \r\n> So, before I go on, I should say, there is a quick workaround for your problem. Your problem is occurring because `foo` is a `pure` function, and therefore, by default, when you do `calculator.foo(a, b)`, Truffle defaults to performing a call rather than a transaction. However, you can do `calculator.foo.sendTransaction(a, b)` in order to force it to make an actual transaction. If you do this, you should get the exception you expect.\r\n> \r\n> Now then: Why is this happening?\r\n> \r\n> First, I should note that this doesn't really have to do with revert _reasons_. Rather it has to do with, do reverts cause exceptions? In web3, reverts cause exceptions, and Truffle (which uses web3) preserves this behavior. But when we say \"reverts cause exceptions\", this really means \"reverting _transactions_ cause exceptions\". Reverting calls do not cause exceptions in web3... usually. I'll talk about an exception to this in a bit.\r\n> \r\n> So why don't reverting calls cause exceptions in web3? Well, it comes down to the difference between transactions and calls. The thing about calls is that they only return a value, not a status. So, they actually do not contain sufficient information to determine whether they reverted.\r\n> \r\n> Now, _if_ the call reverted with a message, then (notionally speaking) web3 could check for the presence of an encoded revert message (these are pretty distinctive) and throw an exception if present, though it doesn't actually do this. And notionally speaking _we_ could do this if we used web3 slightly differently, although I'm unsure if it's worth it for us to do this, or even correct for us to do this, when we're planning to rewrite Truffle Contract anyway. But neither Truffle nor web3 could possibly detect a reverting call _in general_, because the information simply isn't there. (Maybe there's no reason. Or maybe they did some crazy assembly to provide a revert message outside of the standard format. Etc.)\r\n> \r\n> So why do reverting calls still cause exceptions in certain cases, given that I just said that they don't? Well, if you use Ganache, and you don't turn on the `--noVMErrorsOnRPCResponse` option to force it to operate in a strictly standard way, then Ganache itself will return an error when a call reverts, rather than the result as expected, and so web3 will throw an exception. But if your client is acting in a standard fashion, then, as mentioned, web3 won't do this.\r\n> \r\n> I think recent or upcoming versions of Geth may be adding some sort of thing like this, but I'm not too clear on the details, and I don't know whether it will be in a format that causes web3 to throw an exception. Sorry, haven't kept up on this.\r\n> \r\n> In any case, like I said, if you want a quick workaround, do it as a transaction rather than a call. We possibly could do something about this on our end, but I'm not certain that we should. If you reopen the issue then I guess we'll have to discuss it, but for now I'm leaving this alone. Hope that's helpful!\r\n\r\n@haltman-at  That was actually VERY helpful - I never thought of thinking about it as in `send` vs `call`, I guess that the fact that I was getting and actual value returned with the Solidity encoding for a revert should have given that away.\r\n\r\nOne of the biggest sources of confusion in the whole thing was able to get some revert messages  from my local node (actually all but this particular test against a `pure` function) and all of them against Ganache (where everything works just fine) and that was making pointing-out where the \"error\" was very hard.\r\n\r\nNow with this explanation and the added knowledge of `--noVMErrorsOnRPCResponse` this makes much more sense and I will certainly try to specifically transform the `call` into a `send` for this particular test.\r\n\r\nThat was ver helpful - I really appreciate the thorough explanation.\r\n\r\nAs a side question, I've been getting a random error that comes and goes when testing against my local node, specifically:\r\n\r\n```\r\n     Error: Number can only safely store up to 53 bits\r\n     at PromiEvent (node_modules/@truffle/contract/lib/promievent.js:9:30)\r\n```\r\n\r\nThe error comes and goes (in different parts of my testes), so it's very hard for me to really tell what's going on.\r\n\r\nAgain, thank you for the explanation - I don't think there's a need for re-openning the issue. perhaps it could be helpful to mention this somewhere in the documentation for future reference (if that's not already the case) ?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/644321708/reactions",
      "total_count": 3,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 2,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/644642782",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3105#issuecomment-644642782",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3105",
    "id": 644642782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDY0Mjc4Mg==",
    "user": {
      "login": "Jaime-Iglesias",
      "id": 22358726,
      "node_id": "MDQ6VXNlcjIyMzU4NzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/22358726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jaime-Iglesias",
      "html_url": "https://github.com/Jaime-Iglesias",
      "followers_url": "https://api.github.com/users/Jaime-Iglesias/followers",
      "following_url": "https://api.github.com/users/Jaime-Iglesias/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaime-Iglesias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jaime-Iglesias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaime-Iglesias/subscriptions",
      "organizations_url": "https://api.github.com/users/Jaime-Iglesias/orgs",
      "repos_url": "https://api.github.com/users/Jaime-Iglesias/repos",
      "events_url": "https://api.github.com/users/Jaime-Iglesias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jaime-Iglesias/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-16T09:16:15Z",
    "updated_at": "2020-06-16T09:16:21Z",
    "author_association": "NONE",
    "body": "Actally, I solved the `53 bits` problem the same way too , so thx again.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/644642782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/644903356",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3105#issuecomment-644903356",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3105",
    "id": 644903356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDkwMzM1Ng==",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-16T17:26:04Z",
    "updated_at": "2020-06-16T17:26:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, OK!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/644903356/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
