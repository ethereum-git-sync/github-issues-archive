{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/1217",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1217/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1217/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1217/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/1217",
  "id": 353193124,
  "node_id": "MDU6SXNzdWUzNTMxOTMxMjQ=",
  "number": 1217,
  "title": "Cannot call once event handler multiple times for same event (v5)",
  "user": {
    "login": "Maushundb",
    "id": 4198511,
    "node_id": "MDQ6VXNlcjQxOTg1MTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4198511?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Maushundb",
    "html_url": "https://github.com/Maushundb",
    "followers_url": "https://api.github.com/users/Maushundb/followers",
    "following_url": "https://api.github.com/users/Maushundb/following{/other_user}",
    "gists_url": "https://api.github.com/users/Maushundb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Maushundb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Maushundb/subscriptions",
    "organizations_url": "https://api.github.com/users/Maushundb/orgs",
    "repos_url": "https://api.github.com/users/Maushundb/repos",
    "events_url": "https://api.github.com/users/Maushundb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Maushundb/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 230393326,
      "node_id": "MDU6TGFiZWwyMzAzOTMzMjY=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/bug",
      "name": "bug",
      "color": "fc2929",
      "default": true,
      "description": null
    },
    {
      "id": 644098328,
      "node_id": "MDU6TGFiZWw2NDQwOTgzMjg=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/needs%20reproduced",
      "name": "needs reproduced",
      "color": "fbca04",
      "default": false,
      "description": null
    },
    {
      "id": 990823235,
      "node_id": "MDU6TGFiZWw5OTA4MjMyMzU=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/Contract",
      "name": "Contract",
      "color": "a1ea8f",
      "default": false,
      "description": ""
    },
    {
      "id": 1403343142,
      "node_id": "MDU6TGFiZWwxNDAzMzQzMTQy",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/needs%20investigated",
      "name": "needs investigated",
      "color": "b7410e",
      "default": false,
      "description": ""
    },
    {
      "id": 1675042241,
      "node_id": "MDU6TGFiZWwxNjc1MDQyMjQx",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/priority5%20%F0%9F%8C%80",
      "name": "priority5 ðŸŒ€",
      "color": "006b75",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2018-08-23T02:09:18Z",
  "updated_at": "2020-12-16T19:12:18Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "- [X] I've asked for help in the [Truffle Gitter](http://gitter.im/Consensys/truffle) before filing this issue.\r\n\r\n---------------------------\r\n\r\n## Issue\r\nWhen trying to create a utility to wrap truffle contract events in a promise, it seems that adding consecutive  \"once\" listeners causes only the first callback to fire, and the second never triggers.\r\n\r\n## Steps to Reproduce\r\n\r\n```\r\nconst waitForEvent = async (contract, ...) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    contract.MyEvent().once('data', event => {\r\n      resolve(event.returnValues);\r\n    });\r\n    await contract.methodThatTriggersEvent(...);\r\n  });\r\n};\r\n...\r\nconst contractInstance = await artifacts.require('Contract').new()\r\nawait waitForEvent(contractInstance) // resolves\r\nawait waitForEvent(contractInstance) // hangs and never resolves\r\n```\r\n\r\nA workaround I've used is using the web3 event directly, which works fine:\r\n\r\n```\r\nconst waitForEvent = async (contract, ...) =>\r\n  new Promise(async (resolve, reject) => {\r\n    contract.contract.once('Transfer', (error, { returnValues }) => resolve(returnValues));\r\n    await contract.methodThatTriggersEvent(...);\r\n  });\r\n```\r\n\r\nThe similar behavior seems to be happening with `on / off` - on / addListener adds the listener, but off / removeListener never actually removes the callback as intended and the second callback never gets added. Thus, it calls the first callback twice. \r\n\r\n## Expected Behavior\r\n\r\nI expect the second promise to also resolve\r\n\r\n## Actual Results\r\n\r\nSecond call hangs\r\n\r\n## Environment\r\n\r\n* Operating System: Mac OSX\r\n* Ethereum client: ganache-cli 6.1.8\r\n* Truffle version (`truffle version`): Truffle v5.0.0-beta.0 (core: 5.0.0-beta.0)\r\n* node version (`node --version`): 10.6.0\r\n* npm version (`npm --version`): 6.3.0\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/1217/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1217/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/415472424",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1217#issuecomment-415472424",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1217",
    "id": 415472424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTQ3MjQyNA==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T16:04:08Z",
    "updated_at": "2018-08-23T16:04:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @Maushundb Looked into this and agree that its seems like there's a problem repeatedly registering listeners for `once` to the same event. Thanks for your workaround. Was also able to get the expected result using `on` after reworking `waitForEvent` slightly.   \r\n\r\nIt looks like the hanging you're seeing is caused by the way the promises are written in `waitForEvent`. . . on ganache at least, the event handler is firing/resolving before the promise to the event triggering transaction resolves. \r\n\r\n> The similar behavior seems to be happening with on / off - on / addListener adds the listener, but off / removeListener never actually removes the callback as intended and the second callback never gets added. Thus, it calls the first callback twice.\r\n\r\nI couldn't reproduce this - do you have an example?\r\n\r\nI'm going to edit title slightly - my take-away from this is \r\n+ `truffle-contract` doesn't implement the contract level (as opposed to event level) once handler\r\n+  re-registering event handlers for EventEmitter `once` isn't working. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/415472424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/415496597",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1217#issuecomment-415496597",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1217",
    "id": 415496597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTQ5NjU5Nw==",
    "user": {
      "login": "Maushundb",
      "id": 4198511,
      "node_id": "MDQ6VXNlcjQxOTg1MTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4198511?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Maushundb",
      "html_url": "https://github.com/Maushundb",
      "followers_url": "https://api.github.com/users/Maushundb/followers",
      "following_url": "https://api.github.com/users/Maushundb/following{/other_user}",
      "gists_url": "https://api.github.com/users/Maushundb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Maushundb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Maushundb/subscriptions",
      "organizations_url": "https://api.github.com/users/Maushundb/orgs",
      "repos_url": "https://api.github.com/users/Maushundb/repos",
      "events_url": "https://api.github.com/users/Maushundb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Maushundb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T17:11:20Z",
    "updated_at": "2018-08-23T17:11:39Z",
    "author_association": "NONE",
    "body": "> I couldn't reproduce this - do you have an example?\r\n\r\nSomething along the lines of:\r\n\r\n```\r\nconst waitForEvent = async (contract, ...) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    const id = Math.random();\r\n    const cb = event => {\r\n      console.log(id);\r\n      contract.MyEvent().off('data', cb);\r\n      resolve(event.returnValues);\r\n\r\n    }\r\n    contract.MyEvent().on('data', cb);\r\n    await contract.methodThatTriggersEvent(...);\r\n  });\r\n};\r\n...\r\nconst contractInstance = await artifacts.require('Contract').new()\r\nawait waitForEvent(contractInstance) // resolves, print random number\r\nawait waitForEvent(contractInstance) // hangs and never resolves, previous listener gets called twice, printing the same random number as above ^^\r\n```\r\n\r\nThanks for the quick turnaround @cgewecke ! ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/415496597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/415507478",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1217#issuecomment-415507478",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1217",
    "id": 415507478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTUwNzQ3OA==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T17:44:15Z",
    "updated_at": "2018-08-23T17:44:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Mmm. I think the promise construction in `waitForEvent` might be problematic. There's a mix of async and 'resolve in a callback' there that's not mapping to the sequence things occur in. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/415507478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/415546529",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1217#issuecomment-415546529",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1217",
    "id": 415546529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU0NjUyOQ==",
    "user": {
      "login": "Maushundb",
      "id": 4198511,
      "node_id": "MDQ6VXNlcjQxOTg1MTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4198511?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Maushundb",
      "html_url": "https://github.com/Maushundb",
      "followers_url": "https://api.github.com/users/Maushundb/followers",
      "following_url": "https://api.github.com/users/Maushundb/following{/other_user}",
      "gists_url": "https://api.github.com/users/Maushundb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Maushundb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Maushundb/subscriptions",
      "organizations_url": "https://api.github.com/users/Maushundb/orgs",
      "repos_url": "https://api.github.com/users/Maushundb/repos",
      "events_url": "https://api.github.com/users/Maushundb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Maushundb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T19:41:57Z",
    "updated_at": "2018-08-23T19:41:57Z",
    "author_association": "NONE",
    "body": "Yeah thats the idea of how to turn a callback into an async function - wrap it in a promise and return that to be `awaited` on. The idea is that I want to not await the method, but rather the event the method will eventually trigger. In that case, the sequence is `method` -> `event` -> `promise resolves`, which is what that is supposed to abstract. \r\n\r\nFor a little more context, the method is triggering an oraclize call, which will eventually call a callback in my contract, which then emits the event I'm listening for. Thus I can't await on the method to finish, since the entire flow is async with the additional of oraclize. Thus `await contract.methodThatTriggersEvent(...)` will always resolve before the event fires. Hopefully that helps!! ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/415546529/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/415549603",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1217#issuecomment-415549603",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1217",
    "id": 415549603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU0OTYwMw==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T19:51:36Z",
    "updated_at": "2018-08-23T19:51:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah yes I get the promisify event part - the oraclize part has been abstracted away in your example in a way that is not reproducible. . . could you show in more detail what that actually looks like? ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/415549603/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/415575993",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1217#issuecomment-415575993",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1217",
    "id": 415575993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU3NTk5Mw==",
    "user": {
      "login": "Maushundb",
      "id": 4198511,
      "node_id": "MDQ6VXNlcjQxOTg1MTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4198511?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Maushundb",
      "html_url": "https://github.com/Maushundb",
      "followers_url": "https://api.github.com/users/Maushundb/followers",
      "following_url": "https://api.github.com/users/Maushundb/following{/other_user}",
      "gists_url": "https://api.github.com/users/Maushundb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Maushundb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Maushundb/subscriptions",
      "organizations_url": "https://api.github.com/users/Maushundb/orgs",
      "repos_url": "https://api.github.com/users/Maushundb/repos",
      "events_url": "https://api.github.com/users/Maushundb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Maushundb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T21:25:07Z",
    "updated_at": "2018-08-23T21:25:07Z",
    "author_association": "NONE",
    "body": "Sure! The contract looks something like:\r\n```\r\nfunction methodThatTriggersEvent() public {\r\n  oraclize_query(\"URL\", \"http://my.url\");\r\n}\r\n\r\nfunction __callback(bytes id, string result, bytes proof) public {\r\n  emit MyEvent();\r\n}\r\n```\r\n\r\nSo I call `methodThatTriggersEvent`, which triggers oraclize to go fetch some stuff, then oraclize calls `__callback`, which eventually emits the event I'm listening for. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/415575993/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
