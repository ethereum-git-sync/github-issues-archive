{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/4187",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4187/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4187/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4187/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/4187",
  "id": 945335094,
  "node_id": "MDU6SXNzdWU5NDUzMzUwOTQ=",
  "number": 4187,
  "title": "Error \"sender account not recognized\" when sending a transaction from the zero address",
  "user": {
    "login": "Morinohtar",
    "id": 5765516,
    "node_id": "MDQ6VXNlcjU3NjU1MTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5765516?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Morinohtar",
    "html_url": "https://github.com/Morinohtar",
    "followers_url": "https://api.github.com/users/Morinohtar/followers",
    "following_url": "https://api.github.com/users/Morinohtar/following{/other_user}",
    "gists_url": "https://api.github.com/users/Morinohtar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Morinohtar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Morinohtar/subscriptions",
    "organizations_url": "https://api.github.com/users/Morinohtar/orgs",
    "repos_url": "https://api.github.com/users/Morinohtar/repos",
    "events_url": "https://api.github.com/users/Morinohtar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Morinohtar/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2021-07-15T12:37:06Z",
  "updated_at": "2022-02-09T19:25:23Z",
  "closed_at": "2022-02-09T19:25:22Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Issue\r\n\r\nI built a BEP20 contract.\r\n\r\nI'm doing a simple test to check that the sender is not the zero address when doing a transfer, and i'm getting this error in the console:\r\n\r\n**'Error: Returned error: sender account not recognized'**\r\n\r\nBut when testing for the recipient as a zero address it works fine as it should.\r\n\r\n## Environment\r\n\r\n* Operating System: MacOS\r\n* Truffle v5.4.0 (core: 5.4.0)\r\n* Solidity - 0.8.6 (solc-js)\r\n* Node v14.16.0\r\n* Web3.js v1.4.0\r\n\r\n## Expected Behavior\r\n\r\nIt should pass the test evaluating that the return msg of the revert is:\r\n\r\n**'BEP20: transfer from the zero address'**\r\n\r\n## Actual Results\r\n\r\nThe test fails and in the console it spits out this error:\r\n\r\n**'Error: Returned error: sender account not recognized'**\r\n\r\n![Error pic](https://ibb.co/rvbH6vc)\r\n\r\n\r\n## Code\r\n\r\nFunction triggered:\r\n\r\n```\r\nfunction _transfer(address sender, address recipient, uint256 amount) internal virtual {\r\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"BEP20: transfer amount exceeds balance\");\r\n        _balances[sender] = senderBalance - amount;\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n```\r\n\r\nTests:\r\n\r\n```\r\n            it('fails when the sender is a zero address', async () => {\r\n                const sender = constants.ZERO_ADDRESS;\r\n                const amount = new BN('1');\r\n\r\n                await expectRevert(\r\n                    token.transfer(johnDoe, amount, {from: sender}),\r\n                    'BEP20: transfer from the zero address'\r\n                );\r\n            });\r\n\r\n            it('fails when the recipient is a zero address', async () => {\r\n                await expectRevert(\r\n                    token.transfer(constants.ZERO_ADDRESS, new BN('1'), {from: deployer}),\r\n                    'BEP20: transfer to the zero address'\r\n                );\r\n            });\r\n```\r\n\r\nLike i said before, the `sender` test gives the error, and the `recipient` test works fine.\r\n\r\nThe zero address is correct: '0x0000000000000000000000000000000000000000'\r\n\r\nI also tried using '0x0' and got the same error.\r\n\r\nI tried calling the method using the normal web contract construction and not using the truffle contract, like:\r\n```\r\ntoken.methods.transfer(johnDoe, amount).send({from: sender});\r\n```\r\nand the result was the same.\r\n\r\nAlso tried executing in the `truffle console` using my local ganache and got the same error.\r\n\r\nAnd this happens with other functions, not just `transfer`, i get the same error when i use the zero address as the sender of a transaction.\r\n\r\nI'm out of ideas at the moment, could use some help understanding this... if i got a problem here in the code or eventually this is to be expected as it is some sort of new behaviour with web3js or whatever.\r\n\r\nThanks.\r\n",
  "closed_by": {
    "login": "haltman-at",
    "id": 35589221,
    "node_id": "MDQ6VXNlcjM1NTg5MjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/haltman-at",
    "html_url": "https://github.com/haltman-at",
    "followers_url": "https://api.github.com/users/haltman-at/followers",
    "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
    "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
    "organizations_url": "https://api.github.com/users/haltman-at/orgs",
    "repos_url": "https://api.github.com/users/haltman-at/repos",
    "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
    "received_events_url": "https://api.github.com/users/haltman-at/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/4187/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4187/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/884378783",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4187#issuecomment-884378783",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4187",
    "id": 884378783,
    "node_id": "IC_kwDOAkfq-c40toyf",
    "user": {
      "login": "eggplantzzz",
      "id": 14827965,
      "node_id": "MDQ6VXNlcjE0ODI3OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggplantzzz",
      "html_url": "https://github.com/eggplantzzz",
      "followers_url": "https://api.github.com/users/eggplantzzz/followers",
      "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
      "repos_url": "https://api.github.com/users/eggplantzzz/repos",
      "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-21T17:55:46Z",
    "updated_at": "2021-07-21T17:55:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @Morinohtar, can you clarify further what you expect to happen? You can't send transactions from addresses that you don't have credentials (private keys) for. You could do this if you use something like ganache-cli's `-u` or `--unlock` feature but normally you would not be able to do this. Here are [some docs](https://github.com/trufflesuite/ganache-cli#options).",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/884378783/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/884801682",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4187#issuecomment-884801682",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4187",
    "id": 884801682,
    "node_id": "IC_kwDOAkfq-c40vQCS",
    "user": {
      "login": "Morinohtar",
      "id": 5765516,
      "node_id": "MDQ6VXNlcjU3NjU1MTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5765516?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Morinohtar",
      "html_url": "https://github.com/Morinohtar",
      "followers_url": "https://api.github.com/users/Morinohtar/followers",
      "following_url": "https://api.github.com/users/Morinohtar/following{/other_user}",
      "gists_url": "https://api.github.com/users/Morinohtar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Morinohtar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Morinohtar/subscriptions",
      "organizations_url": "https://api.github.com/users/Morinohtar/orgs",
      "repos_url": "https://api.github.com/users/Morinohtar/repos",
      "events_url": "https://api.github.com/users/Morinohtar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Morinohtar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-22T10:14:54Z",
    "updated_at": "2021-07-22T10:14:54Z",
    "author_association": "NONE",
    "body": "I expect what i described, it should revert with the msg i said, i can't explain more than that, dont know how to be more clear than that, sorry.\r\n\r\nEven if i don't have the credentials of an account i can test it in some specific conditions.\r\n \r\nI used for example a random valid address i got from the web, for which i dont have the private key or whatever, and the test ran correctly, i.e., i replaced the zero address with it and the test did what it was supposed to do.\r\n\r\nExample:\r\n\r\nhttps://bscscan.com/address/0xea3136194afd10aff63ede6bb5aab839e3baa258\r\n\r\nI used this address for the test: 0xEA3136194afD10AfF63eDE6bB5aaB839e3Baa258\r\n\r\nTest code:\r\n\r\n```\r\ndescribe('When the minter is a zero address and tries to mint to himself', () => {\r\n    it('fails and it will not mint', async () => {\r\n        const amount = new BN('100');\r\n\r\n        await expectRevert(\r\n            token.methods['mint(uint256)'](amount, {from: '0xEA3136194afD10AfF63eDE6bB5aaB839e3Baa258'}),\r\n            'AccessControl: account 0xEA3136194afD10AfF63eDE6bB5aaB839e3Baa258 is missing role 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6'\r\n        );\r\n    });\r\n});\r\n```\r\n\r\nOutcome:\r\n\r\n```\r\nFailure Path\r\n          When the minter is a zero address and tries to mint to himself\r\n            ✓ fails and it will not mint (154ms)\r\n```\r\n\r\nIt was a success as you can see. And i used an accout for which i don't have the credentials. \r\nI just modified the expected error msg so that it would pass.\r\n\r\n\r\nAnd now the same test but with the zero address: \r\n\r\nTest code:\r\n\r\n```\r\ndescribe('When the minter is a zero address and tries to mint to himself', () => {\r\n    it('fails and it will not mint', async () => {\r\n        const amount = new BN('100');\r\n\r\n        await expectRevert(\r\n            token.methods['mint(uint256)'](amount, {from: '0x0000000000000000000000000000000000000000'}),\r\n            'BEP20: mint to the zero address'\r\n        );\r\n    });\r\n});\r\n```\r\n\r\nOutcome:\r\n`'Uncaught Error: Returned error: sender account not recognized'`\r\n\r\n\r\nSo, there is something special with the Zero Address when using it as the sender, and i still don't know what it is and couldnt find out. \r\nI saw ppl testing the zero address as the sender, so i assumed it would work... Don't know if it is something that in earlier versions of Solidity/Ethereum was working and now it does not, or if it never worked, or whatever.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/884801682/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/884822006",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4187#issuecomment-884822006",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4187",
    "id": 884822006,
    "node_id": "IC_kwDOAkfq-c40vU_2",
    "user": {
      "login": "Morinohtar",
      "id": 5765516,
      "node_id": "MDQ6VXNlcjU3NjU1MTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5765516?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Morinohtar",
      "html_url": "https://github.com/Morinohtar",
      "followers_url": "https://api.github.com/users/Morinohtar/followers",
      "following_url": "https://api.github.com/users/Morinohtar/following{/other_user}",
      "gists_url": "https://api.github.com/users/Morinohtar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Morinohtar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Morinohtar/subscriptions",
      "organizations_url": "https://api.github.com/users/Morinohtar/orgs",
      "repos_url": "https://api.github.com/users/Morinohtar/repos",
      "events_url": "https://api.github.com/users/Morinohtar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Morinohtar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-22T10:53:18Z",
    "updated_at": "2021-07-22T13:50:23Z",
    "author_association": "NONE",
    "body": "Simpler example i created for the sake of argument that also fails, just like the previous examples:\r\n\r\n**Zero Address:**\r\n\r\nFunction code:\r\n\r\n```\r\nfunction zeroAddress() public view returns (bool) {\r\n    require(msg.sender != address(0), 'Invalid address!');\r\n\r\n    return true;\r\n}\r\n```\r\n\r\nTest:\r\n\r\n```\r\ndescribe('When the sender is the zero address', () => {\r\n    it('fails and reverts', async () => {\r\n        await expectRevert(\r\n            token.zeroAddress({from: '0x0'}),\r\n            'Invalid address!'\r\n        );\r\n    });\r\n});\r\n``` \r\n\r\nThe test fails! \r\n\r\n\r\n**Valid address (don't have credentials):**\r\n\r\nFunction code:\r\n\r\n```\r\nfunction zeroAddress() public view returns (bool) {\r\n    require(msg.sender != address(0xEA3136194afD10AfF63eDE6bB5aaB839e3Baa258), 'Invalid address!');\r\n\r\n    return true;\r\n}\r\n```\r\n\r\nTest:\r\n\r\n```\r\ndescribe('When the sender is the zero address', () => {\r\n    it('fails and reverts', async () => {\r\n        await expectRevert(\r\n            token.zeroAddress({from: '0xEA3136194afD10AfF63eDE6bB5aaB839e3Baa258'}),\r\n            'Invalid address!'\r\n        );\r\n    });\r\n});\r\n``` \r\n\r\nThe test works!\r\n\r\n\r\nSo... if anyone knows what might be the issue here, whatever that might be, i would appreciate the insight.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/884822006/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/885185545",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4187#issuecomment-885185545",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4187",
    "id": 885185545,
    "node_id": "IC_kwDOAkfq-c40wtwJ",
    "user": {
      "login": "eggplantzzz",
      "id": 14827965,
      "node_id": "MDQ6VXNlcjE0ODI3OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggplantzzz",
      "html_url": "https://github.com/eggplantzzz",
      "followers_url": "https://api.github.com/users/eggplantzzz/followers",
      "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
      "repos_url": "https://api.github.com/users/eggplantzzz/repos",
      "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-22T19:44:51Z",
    "updated_at": "2021-07-22T19:45:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah ok, I misunderstood! Actually that message is a Ganache message. [For reference](https://github.com/trufflesuite/ganache-core/blob/5a347b3e66288cbc5b5249f6ce2401a4d66bfb9b/src/chains/ethereum/ethereum/src/api.ts#L1140-L1145). When Ganache doesn't recognize the account you are sending from or if it isn't unlocked, it errors. Actually I don't think you can even get that code to run (the Solidity) because there is some kind of validation step (checking that you have the private keys) somewhere in the flow. I'm not sure where it happens exactly, probably the node verifies that you can/cannot send the transaction before it gets to the EVM. @davidmurdoch or @MicaiahReid can probably enlighten us :) Like, why would we even attempt to run the Solidity unless the tx is valid to begin with?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/885185545/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/885200841",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4187#issuecomment-885200841",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4187",
    "id": 885200841,
    "node_id": "IC_kwDOAkfq-c40wxfJ",
    "user": {
      "login": "Morinohtar",
      "id": 5765516,
      "node_id": "MDQ6VXNlcjU3NjU1MTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5765516?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Morinohtar",
      "html_url": "https://github.com/Morinohtar",
      "followers_url": "https://api.github.com/users/Morinohtar/followers",
      "following_url": "https://api.github.com/users/Morinohtar/following{/other_user}",
      "gists_url": "https://api.github.com/users/Morinohtar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Morinohtar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Morinohtar/subscriptions",
      "organizations_url": "https://api.github.com/users/Morinohtar/orgs",
      "repos_url": "https://api.github.com/users/Morinohtar/repos",
      "events_url": "https://api.github.com/users/Morinohtar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Morinohtar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-22T20:11:10Z",
    "updated_at": "2021-07-22T20:11:27Z",
    "author_association": "NONE",
    "body": "Yeap, something else must flow differently when it's the zero address.\r\n\r\nWell, for now i have those zero address tests commented. \r\n\r\nBut since i saw some ppl using these tests i assumed they would work. The tests were using older versions of solidity, like v0.5, so maybe something changed meanwhile with the newer versions, and that's why now it's failing... go figure :) lol",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/885200841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/885216111",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4187#issuecomment-885216111",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4187",
    "id": 885216111,
    "node_id": "IC_kwDOAkfq-c40w1Nv",
    "user": {
      "login": "eggplantzzz",
      "id": 14827965,
      "node_id": "MDQ6VXNlcjE0ODI3OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggplantzzz",
      "html_url": "https://github.com/eggplantzzz",
      "followers_url": "https://api.github.com/users/eggplantzzz/followers",
      "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
      "repos_url": "https://api.github.com/users/eggplantzzz/repos",
      "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-22T20:36:54Z",
    "updated_at": "2021-07-22T20:38:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I mean, it should be the same for all random addresses. You should get the \"sender account not recognized\" for every address that Ganache doesn't know about. Can you link the tests you are talking about? I'd like to take a look. Do you have an example of sending from an account that is not unlocked that sends the tx successfully?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/885216111/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1034114190",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4187#issuecomment-1034114190",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4187",
    "id": 1034114190,
    "node_id": "IC_kwDOAkfq-c49o1SO",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-09T19:25:22Z",
    "updated_at": "2022-02-09T19:25:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing this for isssue maintenance.  Let us know if there's still a problem and we can reopen.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1034114190/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
