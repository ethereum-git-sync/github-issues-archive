{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/1907",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1907/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1907/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1907/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/1907",
  "id": 432649969,
  "node_id": "MDU6SXNzdWU0MzI2NDk5Njk=",
  "number": 1907,
  "title": "\"Truffle Compile\" buffers output instead of realtime listing",
  "user": {
    "login": "wbt",
    "id": 563406,
    "node_id": "MDQ6VXNlcjU2MzQwNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/563406?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wbt",
    "html_url": "https://github.com/wbt",
    "followers_url": "https://api.github.com/users/wbt/followers",
    "following_url": "https://api.github.com/users/wbt/following{/other_user}",
    "gists_url": "https://api.github.com/users/wbt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wbt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wbt/subscriptions",
    "organizations_url": "https://api.github.com/users/wbt/orgs",
    "repos_url": "https://api.github.com/users/wbt/repos",
    "events_url": "https://api.github.com/users/wbt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wbt/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 230393328,
      "node_id": "MDU6TGFiZWwyMzAzOTMzMjg=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/enhancement",
      "name": "enhancement",
      "color": "84b6eb",
      "default": true,
      "description": null
    },
    {
      "id": 971536096,
      "node_id": "MDU6TGFiZWw5NzE1MzYwOTY=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/Migrations",
      "name": "Migrations",
      "color": "b887db",
      "default": false,
      "description": ""
    },
    {
      "id": 1086852667,
      "node_id": "MDU6TGFiZWwxMDg2ODUyNjY3",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/needs%20requirements",
      "name": "needs requirements",
      "color": "d4c5f9",
      "default": false,
      "description": "feature request is unclear"
    },
    {
      "id": 1675042518,
      "node_id": "MDU6TGFiZWwxNjc1MDQyNTE4",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/priority6%20%F0%9F%92%AD",
      "name": "priority6 üí≠",
      "color": "006b75",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-04-12T16:34:01Z",
  "updated_at": "2020-11-18T19:05:58Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Issue\r\nWhen running `truffle compile`, the output which says which contract is being compiled gets buffered up and displayed all at once instead of showing realtime progress, which could help distinguish between a hung process likely to never complete and one that is progressing along as expected. \r\n\r\n## Steps to Reproduce\r\n1. Choose a truffle project with many and/or complex contracts.  `cd` to this directory.\r\n2. Run `truffle migrate`. \r\n3. Observe a short period of silence followed by some initial output lines: a blank line, \"Compiling your contracts...\" and a line of equals signs.  This appears to be from [`reportCompilationStarted`](https://github.com/trufflesuite/truffle/blob/b2a19dc576397cb41819737d2822f9f91ff836bb/packages/truffle-workflow-compile/index.js#L129).\r\n\r\n## Actual Results\r\n4. There is then a few moments where the output is quiet, while contracts are being compiled.  At times, there are some lines printed (which start with \"Fetching\") which disappear too fast to see what the message says.\r\n5. After all contracts have been compiled, several lines are printed all at once.  Most of these start with \"> Compiling \" followed by the .sol file location.  It appears this is being printed from [here]( https://github.com/trufflesuite/truffle/blob/455d8b8b660e504ed12e5e27a9d008ef7c1ef6b7/packages/truffle-compile-vyper/index.js#L66), in [compile.display]( https://github.com/trufflesuite/truffle/blob/455d8b8b660e504ed12e5e27a9d008ef7c1ef6b7/packages/truffle-compile-vyper/index.js#L55).\r\n6. A few moments more pass without output.\r\n7. An additional line is written explaining where the artifacts were written to.\r\n8. An additional two lines are written saying \"> Compiled successfully using:\" on the first and the compiler version on the last, followed by a blank line. This and the previous step appear to be from [`reportCompilationFinished`](https://github.com/trufflesuite/truffle/blob/b2a19dc576397cb41819737d2822f9f91ff836bb/packages/truffle-workflow-compile/index.js#L137).\r\n9. The process exits. \r\n\r\n## Expected Behavior\r\n4. There is then a few moments where **every several seconds**, a line is printed saying ‚Äú> Compiling‚Äù followed by the .sol file location.  \r\n5. At the end of this, the display looks the same as the end of step 5 above.\r\n\r\n## Intended idea\r\nInstead of any output buffering, print the compilation message for any specific file at the time the compilation is starting.  \r\n\r\n## Implementation direction\r\nInstead of any output buffering, print the compilation message for any specific file at the time the compilation is starting.  \r\n\r\n[`compileAll`](https://github.com/trufflesuite/truffle/blob/455d8b8b660e504ed12e5e27a9d008ef7c1ef6b7/packages/truffle-compile-vyper/index.js#L109) [calls]( https://github.com/trufflesuite/truffle/blob/455d8b8b660e504ed12e5e27a9d008ef7c1ef6b7/packages/truffle-compile-vyper/index.js#L112) [compile.display]( https://github.com/trufflesuite/truffle/blob/455d8b8b660e504ed12e5e27a9d008ef7c1ef6b7/packages/truffle-compile-vyper/index.js#L55). which displays the ‚ÄúCompiling‚Äù line for all the contracts, using a `forEach` over the set of `paths`, before starting to compile any of them. \r\nThe proposed fix would make the content of [this forEach loop]( https://github.com/trufflesuite/truffle/blob/455d8b8b660e504ed12e5e27a9d008ef7c1ef6b7/packages/truffle-compile-vyper/index.js#L61) and [this if wrapper]( https://github.com/trufflesuite/truffle/blob/455d8b8b660e504ed12e5e27a9d008ef7c1ef6b7/packages/truffle-compile-vyper/index.js#L56) into a new function, like `compile.displayOne` called at the beginning of compiling each contract, maybe between lines 116 and 117?  The array conversion in lines 57-59 could be done around line 111, or maybe dropped if options.paths is reliably an array coming in.  The conversion could create a new variable or if there would be no net negative consequences, modify the existing.\r\n\r\n\r\n## Environment\r\n* Operating System: Windows 10 Pro\r\n* Ethereum client: N/A\r\n* Truffle version (`truffle version`): 5.0.12 (core: 5.0.12)\r\n* Solidity version: ^0.5.0 (solc-js)\r\n* node version (`node --version`): 9.3.0\r\n* npm version (`npm --version`): 6.9.0\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/1907/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1907/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/488359517",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1907#issuecomment-488359517",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1907",
    "id": 488359517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODM1OTUxNw==",
    "user": {
      "login": "fainashalts",
      "id": 8952139,
      "node_id": "MDQ6VXNlcjg5NTIxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8952139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fainashalts",
      "html_url": "https://github.com/fainashalts",
      "followers_url": "https://api.github.com/users/fainashalts/followers",
      "following_url": "https://api.github.com/users/fainashalts/following{/other_user}",
      "gists_url": "https://api.github.com/users/fainashalts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fainashalts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fainashalts/subscriptions",
      "organizations_url": "https://api.github.com/users/fainashalts/orgs",
      "repos_url": "https://api.github.com/users/fainashalts/repos",
      "events_url": "https://api.github.com/users/fainashalts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fainashalts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-01T17:57:56Z",
    "updated_at": "2019-05-01T17:57:56Z",
    "author_association": "MEMBER",
    "body": "This is interesting @wbt, thanks for letting us know it's an issue. We'll take a look at it and examine the feasibility of your proposal. We'd be happy to review a PR if you want to take a stab at this yourself! Thanks again!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/488359517/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/721917148",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1907#issuecomment-721917148",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1907",
    "id": 721917148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTkxNzE0OA==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-04T19:05:04Z",
    "updated_at": "2020-11-04T19:05:04Z",
    "author_association": "MEMBER",
    "body": "Getting back into this, it's not clear to me what we can actually do here. Note that Truffle passes all sources to solc at the same time, so I don't think it's necessarily meaningful to log source files individually. There's likely some amount of buffering we can do for this, but the bulk of the time is going to be the single chunk of computation that is solc.\r\n\r\nAre you asking specifically for buffering the output for Truffle's source file collection and subsequence artifact generation? I would think that wouldn't make a material difference in timing for console output.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/721917148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/726160696",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1907#issuecomment-726160696",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1907",
    "id": 726160696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjE2MDY5Ng==",
    "user": {
      "login": "wbt",
      "id": 563406,
      "node_id": "MDQ6VXNlcjU2MzQwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/563406?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wbt",
      "html_url": "https://github.com/wbt",
      "followers_url": "https://api.github.com/users/wbt/followers",
      "following_url": "https://api.github.com/users/wbt/following{/other_user}",
      "gists_url": "https://api.github.com/users/wbt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wbt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wbt/subscriptions",
      "organizations_url": "https://api.github.com/users/wbt/orgs",
      "repos_url": "https://api.github.com/users/wbt/repos",
      "events_url": "https://api.github.com/users/wbt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wbt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-12T15:46:32Z",
    "updated_at": "2020-11-12T15:47:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the primary objective here would be to \r\n>help distinguish between a hung process likely to never complete and one that is progressing along as expected.\r\n\r\n\r\n>Note that Truffle passes all sources to solc at the same time,\r\n\r\nDoes that lead to a significant overall performance improvement compared to serial compilation?  Theoretically it makes sense especially if the machine can take advantage of a high number of processor cores, but the theoretical gain is implementation-dependent and I haven't looked into the implementation.  \r\n\r\n>There's likely some amount of buffering we can do for this, \r\n\r\nI think the request here is to remove buffering and provide more real-time reporting on what is happening.\r\n\r\n>but the bulk of the time is going to be the single chunk of computation that is solc.\r\n\r\nThe mental model given by the current CLI is that of fast serial compilation followed by a hang, but your comment + the code reviewed above indicates that what really happens is a bunch of output followed by a long period of parallel compilation.  In that case, the message shown to the user should be one line, built up so that instead of:\r\n> \\> Compiling alpha.sol\r\n> \\> Compiling bravo.sol\r\n> \\> Compiling charlie.sol\r\n> \\> Compiling delta.sol\r\n\r\nyou have something which shows the parallelism in compilation, e.g.\r\n> \\> Compiling alpha.sol, bravo.sol, charlie.sol, and delta.sol\r\n\r\nand then the user's mental model can better match what is actually happening.\r\n\r\nIf that's it, it's a fairly easy implementation change.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/726160696/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
