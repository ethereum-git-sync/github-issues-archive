{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/1607",
  "id": 395753272,
  "node_id": "MDU6SXNzdWUzOTU3NTMyNzI=",
  "number": 1607,
  "title": "compile/migrate with multiple solidity versions crashes ganache 2",
  "user": {
    "login": "WyseNynja",
    "id": 624221,
    "node_id": "MDQ6VXNlcjYyNDIyMQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/WyseNynja",
    "html_url": "https://github.com/WyseNynja",
    "followers_url": "https://api.github.com/users/WyseNynja/followers",
    "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
    "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
    "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
    "repos_url": "https://api.github.com/users/WyseNynja/repos",
    "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
    "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 15,
  "created_at": "2019-01-03T22:52:32Z",
  "updated_at": "2019-02-07T20:52:14Z",
  "closed_at": "2019-02-07T20:44:40Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "- [X] I've asked for help in the [Truffle Gitter](http://gitter.im/Consensys/truffle) before filing this issue.\r\n\r\n---------------------------\r\n\r\n## Issue\r\n\r\nI'm writing a contract with solidity 0.5 and wanting to call a contract written (and deployed by someone else on mainnet) with solidity 0.4 (and another with Vyper: #1623). How should I setup truffle+ganache in development to deploy the old contract with the old compiler and then deploy my new contracts? I don't want to update their contract to 0.5 because I want my tests to use the version they already have deployed on mainnet. I'm using an interface to interact with the old code as detailed at https://solidity.readthedocs.io/en/v0.5.0/050-breaking-changes.html#interoperability-with-older-contracts\r\n\r\nThe 0.4 contract (https://github.com/projectchicago/gastoken/blob/master/contract/GST2_ETH.sol) is using python tools for deployment. If it were using truffle, I could run `truffle migrate` from their directory and then run `truffle migrate` from mine, but then I'm not sure how I would use `artifacts`.\r\n\r\nIf I symlink their *.sols into my contracts directory, it fails with the expected \"ParserError: Source file requires different compiler version\"\r\n\r\nRight now I'm just hard coding the gastoken contract address so I can test the other parts of my migrations, but that won't work once I actually want to test using the gastoken contract from inside my own contract.\r\n\r\nIs there some way to deploy their .asm files directly? I feel like this should be a common need, but I'm not seeing any documentation about it.\r\n\r\nAnd when I do get to putting my contracts on mainnet, what is the best practice for linking to the already deployed gastoken contract instead of deploying it myself?",
  "closed_by": {
    "login": "WyseNynja",
    "id": 624221,
    "node_id": "MDQ6VXNlcjYyNDIyMQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/WyseNynja",
    "html_url": "https://github.com/WyseNynja",
    "followers_url": "https://api.github.com/users/WyseNynja/followers",
    "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
    "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
    "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
    "repos_url": "https://api.github.com/users/WyseNynja/repos",
    "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
    "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/451307396",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1607#issuecomment-451307396",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607",
    "id": 451307396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTMwNzM5Ng==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-03T23:10:51Z",
    "updated_at": "2019-01-03T23:10:51Z",
    "author_association": "MEMBER",
    "body": "Thanks for raising this concern! It's on the roadmap to support multiple solc versions natively, but there are some technical limitations that make this not immediately feasible.\r\n\r\nThe component you are missing is that you need proper Truffle artifact files (`build/contracts/` JSON files) for each contract. You can't deploy ASM directly, but if you get the bytecode, you can wrap the bytecode in an artifact file and deploy that.\r\n\r\nYou might be able to achieve a workaround by way of using Truffle's new [external compiler](https://truffleframework.com/docs/truffle/reference/configuration#external-compilers) configuration. It should be flexible enough for this use case, but let me know.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/451307396/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/451312012",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1607#issuecomment-451312012",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607",
    "id": 451312012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTMxMjAxMg==",
    "user": {
      "login": "WyseNynja",
      "id": 624221,
      "node_id": "MDQ6VXNlcjYyNDIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WyseNynja",
      "html_url": "https://github.com/WyseNynja",
      "followers_url": "https://api.github.com/users/WyseNynja/followers",
      "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
      "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
      "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
      "repos_url": "https://api.github.com/users/WyseNynja/repos",
      "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-03T23:33:25Z",
    "updated_at": "2019-01-08T06:20:26Z",
    "author_association": "NONE",
    "body": "Thanks!\r\n\r\nI added https://github.com/projectchicago/gastoken as a git submodule at `./external/gastoken`. That repo includes *.sol, *.abi, and *.asm files that I think are relevant.\r\n\r\nThen I added this to my truffle-config.json:\r\n```\r\nmodule.exports = {\r\n    ...\r\n    external: {\r\n      command: \"true\",\r\n      targets: [{\r\n        properties: {\r\n          contractName: \"GST2\",\r\n        },\r\n        fileProperties: {\r\n          abi: \"./external/gastoken/contract/GST.abi\",\r\n          bytecode: \"./external/gastoken/contract/GST2_ETH.asm\",\r\n        },\r\n      }]\r\n    }\r\n  },\r\n```\r\n\r\nAnd now `truffle compile` places a GST2.json file into my contracts directory. So I think this is good progress, but it isn't right yet (deploying runs out of gas). You said \"you can't deploy ASM directly, but if you get the bytecode, you can wrap the bytecode.\" How do I do that? Do I need to set command to \"solc --something\"? I was hoping that I could use the .abi and .asm files that came with the git clone rather than compiling.\r\n\r\n```\r\nStarting migrations...\r\n======================\r\n> Network name:    'development'\r\n> Network id:      1546548964821\r\n> Block gas limit: 6721975\r\n\r\n\r\n2_deploy_contracts.js\r\n=====================\r\n\r\n   Deploying 'GST2'\r\n   ----------------\r\nError:  *** Deployment Failed ***\r\n\r\n\"GST2\" ran out of gas. Something in the constructor (ex: infinite loop) caused gas estimation to fail. Try:\r\n   * Making your contract constructor more efficient\r\n   * Setting the gas manually in your config or as a deployment parameter\r\n   * Using the solc optimizer settings in 'truffle.js'\r\n   * Setting a higher network block limit if you are on a\r\n     private network or test client (like ganache).\r\n\r\n    at /contracts/node_modules/truffle/build/webpack:/packages/truffle-deployer/src/deployment.js:364:1\r\n    at process._tickCallback (internal/process/next_tick.js:68:7)\r\nTruffle v5.0.1 (core: 5.0.1)\r\nNode v10.14.2\r\nerror Command failed with exit code 1.\r\n```\r\n\r\nI tried compiling myself with solidity 0.4.10, but I get the same deployment failed message:\r\n```\r\n    external: {\r\n      command: \"./old_solidity/node_modules/.bin/solcjs -o build --abi --bin external/gastoken/contract/GST2_ETH.sol external/gastoken/contract/rlp.sol \",\r\n      targets: [{\r\n        properties: {\r\n          contractName: \"GST2\",\r\n        },\r\n        fileProperties: {\r\n          abi: \"build/external_gastoken_contract_GST2_ETH_sol_GasToken2.abi\",\r\n          bytecode: \"build/external_gastoken_contract_GST2_ETH_sol_GasToken2.bin\",\r\n        },\r\n      }]\r\n    }\r\n  },\r\n```\r\n\r\nIncreasing the gas limit doesn't help.\r\n\r\n```\r\n   Deploying 'GST2'\r\n   ----------------\r\nError:  *** Deployment Failed ***\r\n\r\n\"GST2\" ran out of gas (using a value you set in your network config or deployment parameters.)\r\n   * Block limit:  6721975\r\n   * Gas sent:     6000000\r\n\r\n    at /contracts/node_modules/truffle/build/webpack:/packages/truffle-deployer/src/deployment.js:364:1\r\n    at process._tickCallback (internal/process/next_tick.js:68:7)\r\nTruffle v5.0.1 (core: 5.0.1)\r\nNode v10.14.2\r\n```\r\n\r\n Is \"bytecode\" different than what I get with --bin? This contract deployed successfully on mainnet with 1396556 gas limit: https://etherscan.io/tx/0x5de8a3c310eb8e1bd90fcbf1bde073efc2ed3750e60f207d75a993ac40a0dda6",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/451312012/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/452053170",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1607#issuecomment-452053170",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607",
    "id": 452053170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjA1MzE3MA==",
    "user": {
      "login": "WyseNynja",
      "id": 624221,
      "node_id": "MDQ6VXNlcjYyNDIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WyseNynja",
      "html_url": "https://github.com/WyseNynja",
      "followers_url": "https://api.github.com/users/WyseNynja/followers",
      "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
      "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
      "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
      "repos_url": "https://api.github.com/users/WyseNynja/repos",
      "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T19:30:28Z",
    "updated_at": "2019-01-08T06:33:25Z",
    "author_association": "NONE",
    "body": "It appears that `bytecode` is different than what `solc --bin` gives.  **EDIT:** Nope. This was only because I had the optimzer enabled with --standard-json, but had forgotten to turn it on when I was calling solc.\r\n\r\n`solc --help` does not show any flags for outputting bytecode, so I'm guessing that --bin is what I want.\r\n\r\nI've got something working, but I'm not sure how correct it is.\r\n\r\nI ended up making an input json which does allow the necessary output selection options:\r\n```\r\n{\r\n  \"language\": \"Solidity\",\r\n  \"sources\":\r\n  {\r\n    \"GST2_ETH.sol\":\r\n    {\r\n      \"urls\":\r\n      [\r\n        \"./GST2_ETH.sol\"\r\n      ]\r\n    }\r\n  },\r\n  \"settings\":\r\n  {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [ \"*\" ]\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThen I made a compile script:\r\n```\r\n#!/bin/bash -eu\r\n\r\necho \"Building external contracts...\"\r\n\r\nscript_dir=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\r\n\r\nroot_dir=\"$(realpath \"${script_dir}/../\")\"\r\n\r\nbuild_dir=\"${root_dir}/build\"\r\n\r\nexternal_dir=\"${root_dir}/external\"\r\n\r\nmkdir -p \"$build_dir/tmp\"\r\n\r\n# pull bytecode and abi out of solc --standard-json output\r\nfunction extract_abi_and_bytecode {\r\n    build_json=$1\r\n    output_dir=$2\r\n    sol_filename=$3\r\n    contract_name=$4\r\n\r\n    jq \".contracts[\\\"$sol_filename\\\"][\\\"$contract_name\\\"].abi\" \\\r\n        < \"$build_json\" \\\r\n        > \"${output_dir}/${contract_name}.abi\"\r\n\r\n    echo \"Created \\\"${output_dir}/${contract_name}.abi\\\"\"\r\n\r\n    # prefix bytecode with 0x\r\n    jq -j \"\\\"0x\\\"+.contracts[\\\"$sol_filename\\\"][\\\"$contract_name\\\"].evm.bytecode.object\" \\\r\n        < \"$build_json\" \\\r\n        > \"${output_dir}/${contract_name}.bytecode\"\r\n\r\n    echo \"Created \\\"${output_dir}/${contract_name}.bytecode\\\"\"\r\n}\r\n\r\n# gastoken\r\ncd \"$external_dir/gastoken/contract\"\r\n\r\ncat \"$external_dir/solc-gastoken.json\"\r\nsolc-0.4.25 \\\r\n    --allow-paths \"$(pwd)\" \\\r\n    --standard-json \\\r\n    < \"$external_dir/solc-gastoken.json\" \\\r\n    > \"$build_dir/tmp/gastoken.json\"\r\n\r\nextract_abi_and_bytecode \"$build_dir/tmp/gastoken.json\" \"$build_dir/gastoken\" \"GST2_ETH.sol\" \"GasToken2\"\r\n\r\necho \"Success building external contracts\"\r\n```\r\n\r\nAnd then I added this script to my `truffle-config.js`\r\n```\r\nmodule.exports = {\r\n  compilers: {\r\n    // TODO: only run if they are outdated\r\n    ...\r\n    external: {\r\n      command: \"./scripts/build-external.sh\",\r\n      targets: [\r\n        {\r\n          properties: {\r\n            contractName: \"GasToken2\",\r\n          },\r\n          fileProperties: {\r\n            abi: \"build/gastoken/GasToken2.abi\",\r\n            bytecode: \"build/gastoken/GasToken2.bytecode\",\r\n          },\r\n        },\r\n        // TODO: lots more contracts here\r\n      ],\r\n    },\r\n  },\r\n  ...\r\n};\r\n```\r\n\r\nAnd now my migrations work!\r\n\r\nI think this would be a lot simpler if truffle could use the output of --bin.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/452053170/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/452159899",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1607#issuecomment-452159899",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607",
    "id": 452159899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjE1OTg5OQ==",
    "user": {
      "login": "WyseNynja",
      "id": 624221,
      "node_id": "MDQ6VXNlcjYyNDIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WyseNynja",
      "html_url": "https://github.com/WyseNynja",
      "followers_url": "https://api.github.com/users/WyseNynja/followers",
      "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
      "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
      "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
      "repos_url": "https://api.github.com/users/WyseNynja/repos",
      "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T03:09:12Z",
    "updated_at": "2019-01-08T19:29:01Z",
    "author_association": "NONE",
    "body": "I was able to simplify my external compile script:\r\n```\r\n#!/bin/bash -eux\r\n\r\necho \"Building external contracts...\"\r\n\r\nscript_dir=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\r\n\r\nroot_dir=\"$(realpath \"${script_dir}/../\")\"\r\n\r\nbuild_dir=\"${root_dir}/build\"\r\n\r\nexternal_dir=\"${root_dir}/external\"\r\n\r\n# gastoken\r\ngastoken_contract_dir=\"${external_dir}/gastoken/contract\"\r\nsolc-0.4.25 \\\r\n    --allow-paths \"${gastoken_contract_dir}\" \\\r\n    --optimize \\\r\n    --output-dir \"${build_dir}/gastoken\" \\\r\n    --overwrite \\\r\n    --abi --ast-json --bin \\\r\n    \"=${gastoken_contract_dir}/\" \\\r\n    \"${gastoken_contract_dir}/GST2_ETH.sol\"\r\n\r\n# bin output needs to be prefixed with 0x for truffle to like it # TODO: do this for ALL $build_dir/*/*.bin\r\n(echo -n \"0x\"; cat \"${build_dir}/gastoken/GasToken2.bin\") > \"${build_dir}/gastoken/GasToken2.bytecode\"\r\n\r\necho \"Success building external contracts\"\r\n```\r\n\r\nThis would be simpler if truffle didn't require that bytecode started with \"0x\". Why does it require that? solc doesn't output it that way, so I'm having to modify its output.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/452159899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/453781275",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1607#issuecomment-453781275",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607",
    "id": 453781275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mzc4MTI3NQ==",
    "user": {
      "login": "WyseNynja",
      "id": 624221,
      "node_id": "MDQ6VXNlcjYyNDIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WyseNynja",
      "html_url": "https://github.com/WyseNynja",
      "followers_url": "https://api.github.com/users/WyseNynja/followers",
      "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
      "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
      "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
      "repos_url": "https://api.github.com/users/WyseNynja/repos",
      "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-12T21:11:04Z",
    "updated_at": "2019-01-12T21:15:09Z",
    "author_association": "NONE",
    "body": "Where are the available \"fileProperties\" documented? I needed to add `ast` to it to get slither working. I don't think the way I added it is working with ganache 2.0.0-beta.2 though.\r\n\r\ntruffle-config.js:\r\n```\r\n    external: {\r\n      command: \"./scripts/build-external.sh\",\r\n      targets: [\r\n        {\r\n          properties: {\r\n            contractName: \"GasToken2\",\r\n          },\r\n          fileProperties: {\r\n            abi: \"build/external/gastoken/GasToken2.abi\",\r\n            ast: \"build/external/gastoken/GST2_ETH.sol_json.ast\",\r\n            bytecode: \"build/external/gastoken/GasToken2.truffle-bin\",\r\n          },\r\n        },\r\n        {\r\n          properties: {\r\n            contractName: \"rlp\",\r\n          },\r\n          fileProperties: {\r\n            abi: \"build/external/gastoken/Rlp.abi\",\r\n            ast: \"build/external/gastoken/rlp.sol_json.ast\",\r\n            bytecode: \"build/external/gastoken/Rlp.truffle-bin\",\r\n          },\r\n        },\r\n```\r\n\r\n`trufle compile/migrate` then outputs this GasToken2.json: https://gist.github.com/WyseNynja/e54064191465abc3c662b3b2df1e4280\r\n\r\nWhile `truffle test` works, when I look at the contract in Ganache it tries to load for a few seconds and then crashes with this error:\r\n```\r\nTypeError: Cannot read property 'ast' of undefined\r\n    at Object.getContractNode (/node_modules/truffle-decoder/dist/interface/contract-decoder.js:37:33)\r\n    at getStateVariables (/node_modules/truffle-decoder/dist/allocate/references.js:187:45)\r\n    at Object.getContractStateVariables (/node_modules/truffle-decoder/dist/allocate/references.js:209:27)\r\n    at TruffleContractDecoder.<anonymous> (/node_modules/truffle-decoder/dist/interface/contract-decoder.js:78:55)\r\n    at Generator.next (<anonymous>)\r\n    at /node_modules/truffle-decoder/dist/interface/contract-decoder.js:7:71\r\n    at Promise (<anonymous>)\r\n    at __awaiter (/node_modules/truffle-decoder/dist/interface/contract-decoder.js:3:12)\r\n    at TruffleContractDecoder.init (/node_modules/truffle-decoder/dist/interface/contract-decoder.js:69:16)\r\n    at Object.getContractState (/src/truffle-integration/decode.js:9:11)\r\n    at process.<anonymous> (/src/truffle-integration/index.js:78:52)\r\n    at emitTwo (events.js:125:13)\r\n    at process.emit (events.js:213:7)\r\n    at emit (internal/child_process.js:768:12)\r\n    at _combinedTickCallback (internal/process/next_tick.js:141:11)\r\n    at process._tickCallback (internal/process/next_tick.js:180:9)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/453781275/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/455465144",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1607#issuecomment-455465144",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607",
    "id": 455465144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTQ2NTE0NA==",
    "user": {
      "login": "WyseNynja",
      "id": 624221,
      "node_id": "MDQ6VXNlcjYyNDIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WyseNynja",
      "html_url": "https://github.com/WyseNynja",
      "followers_url": "https://api.github.com/users/WyseNynja/followers",
      "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
      "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
      "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
      "repos_url": "https://api.github.com/users/WyseNynja/repos",
      "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T08:27:39Z",
    "updated_at": "2019-01-18T08:27:39Z",
    "author_association": "NONE",
    "body": "I'm thinking of using https://sol-compiler.com/ instead of manually calling solc. They have support for compiling contracts with different versions of solidity. I don't see any clear way to convert from solc's combined json output to a truffle artifact though. Is there any existing tooling for that? I'd like to be able to keep using `truffle migrate` for managing all the contracts even if truffle isn't the one compiling them.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/455465144/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/455677499",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1607#issuecomment-455677499",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607",
    "id": 455677499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTY3NzQ5OQ==",
    "user": {
      "login": "eggplantzzz",
      "id": 14827965,
      "node_id": "MDQ6VXNlcjE0ODI3OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggplantzzz",
      "html_url": "https://github.com/eggplantzzz",
      "followers_url": "https://api.github.com/users/eggplantzzz/followers",
      "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
      "repos_url": "https://api.github.com/users/eggplantzzz/repos",
      "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T20:28:04Z",
    "updated_at": "2019-01-18T20:29:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WyseNynja Let me see if I can locate some helpful material for you. From what I understand you are trying to build a truffle contract from scratch and want guidance, sound about right? Sorry for the delay in responding to you by the way.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/455677499/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/455679588",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1607#issuecomment-455679588",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607",
    "id": 455679588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTY3OTU4OA==",
    "user": {
      "login": "eggplantzzz",
      "id": 14827965,
      "node_id": "MDQ6VXNlcjE0ODI3OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggplantzzz",
      "html_url": "https://github.com/eggplantzzz",
      "followers_url": "https://api.github.com/users/eggplantzzz/followers",
      "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
      "repos_url": "https://api.github.com/users/eggplantzzz/repos",
      "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T20:36:11Z",
    "updated_at": "2019-01-18T20:36:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the schema for those artifacts can be found here --> https://github.com/trufflesuite/truffle/tree/develop/packages/truffle-contract-schema\r\n\r\nAlso `require(\"truffle-contract-schema\").validate(obj)` can help you validate the contract object.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/455679588/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/457881827",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1607#issuecomment-457881827",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607",
    "id": 457881827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzg4MTgyNw==",
    "user": {
      "login": "WyseNynja",
      "id": 624221,
      "node_id": "MDQ6VXNlcjYyNDIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WyseNynja",
      "html_url": "https://github.com/WyseNynja",
      "followers_url": "https://api.github.com/users/WyseNynja/followers",
      "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
      "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
      "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
      "repos_url": "https://api.github.com/users/WyseNynja/repos",
      "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-27T01:52:12Z",
    "updated_at": "2019-01-27T01:54:38Z",
    "author_association": "NONE",
    "body": "@eggplantzzz Thanks for the reply. I'm trying to let truffle build the truffle contract during the external compile step. I'm wanting to know the best way to convert solc's output to a truffle contract. I can see a couple ways of doing it. I thought using a truffle-config.js like this would put everything in the right place, but it only seems to setup the abi and bytecode:\r\n\r\n```\r\n    external: {\r\n      command: \"./scripts/build-external.sh\",\r\n      targets: [\r\n        {\r\n          properties: {\r\n            contractName: \"GasToken2\",\r\n            sourcePath: \"external/gastoken/contract/GST2_ETH.sol\",\r\n          },\r\n          fileProperties: {\r\n            abi: \"build/external/gastoken/GasToken2.abi\",\r\n            ast: \"build/external/gastoken/GST2_ETH.sol_json.ast\",\r\n            bytecode: \"build/external/gastoken/GasToken2.truffle-bin\",\r\n            deployedBytecode: \"build/external/gastoken/GasToken2.truffle-bin-runtime\",\r\n            devdoc: \"build/external/gastoken/GasToken2.docdev\",\r\n            userdoc: \"build/external/gastoken/GasToken2.docuser\",\r\n            source: \"external/gastoken/contract/GST2_ETH.sol\",\r\n          },\r\n        },\r\n```\r\n\r\nI would much prefer to be able to use the combined json from solc instead of having to configure all those properties manually for each contract. To do that, it sounds like I need a script that reads solc's combined output json and builds something that `require(\"truffle-contract-schema\").validate(obj)` is happy with. This script would place the artifacts itself instead of having targets in truffle-config.\r\n\r\nRather than an external script, I think it would be better for this code (both supporting more properties and reading solc's combined json) to be a part of the truffle external compiler step. Where in truffle's code is the abi and bytecode passed through? It seems like adding support for source maps and the others should be relatively simple. Loading the combined json would be more of a change, but it would certainly be helpful.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/457881827/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/458261010",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1607#issuecomment-458261010",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607",
    "id": 458261010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODI2MTAxMA==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T19:09:10Z",
    "updated_at": "2019-01-28T19:09:10Z",
    "author_association": "MEMBER",
    "body": "@WyseNynja just a drive-by response: you might be interested to look at the [integration tests for this feature](https://github.com/trufflesuite/truffle/blob/develop/packages/truffle/test/scenarios/external_compilers/truffle-compile.js). They use `truffle compile` itself as an external compiler.\r\n\r\nRight now, the translation between Solidity standard JSON and a Truffle artifact is done by `truffle-compile`, and it relies on Truffle tightly controlling the input. It's not entirely straightforward to take any solc output and convert it to artifacts, at least not enough to provide out of the box.\r\n\r\nI would recommend maybe looking at the `path` version of `targets` and maybe building a `truffle run` plugin? Something like:\r\n\r\n```javascript\r\nmodule.exports = {\r\n  /* ... */\r\n  compilers: {\r\n    external: {\r\n      command: \"...\",\r\n      targets: [{\r\n        path: \".../path/to/solc-outputs/*.solc.json\"\r\n        command: \"truffle run solc-standard-json-to-artifact\"\r\n      }]\r\n    }\r\n  }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/458261010/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/458271161",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1607#issuecomment-458271161",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607",
    "id": 458271161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODI3MTE2MQ==",
    "user": {
      "login": "eggplantzzz",
      "id": 14827965,
      "node_id": "MDQ6VXNlcjE0ODI3OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggplantzzz",
      "html_url": "https://github.com/eggplantzzz",
      "followers_url": "https://api.github.com/users/eggplantzzz/followers",
      "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
      "repos_url": "https://api.github.com/users/eggplantzzz/repos",
      "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T19:37:06Z",
    "updated_at": "2019-01-28T19:37:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/trufflesuite/truffle/blob/develop/packages/truffle-compile/index.js#L194\r\nThis is the line where the code puts together the contract.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/458271161/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/460113441",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1607#issuecomment-460113441",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607",
    "id": 460113441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDExMzQ0MQ==",
    "user": {
      "login": "WyseNynja",
      "id": 624221,
      "node_id": "MDQ6VXNlcjYyNDIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WyseNynja",
      "html_url": "https://github.com/WyseNynja",
      "followers_url": "https://api.github.com/users/WyseNynja/followers",
      "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
      "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
      "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
      "repos_url": "https://api.github.com/users/WyseNynja/repos",
      "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-04T02:19:19Z",
    "updated_at": "2019-02-04T02:28:46Z",
    "author_association": "NONE",
    "body": "I'm trying out @gnidan's suggestion and I think I am getting closer to what I need.\r\n\r\nHere is my truffle-config.js's external section:\r\n```\r\n    external: {\r\n      command: \"sol-compiler\",\r\n      targets: [\r\n        {\r\n          path: \"build/external/sol-compiler/*.json\",\r\n          command: \"node sol-compiler-json-to-truffle.js\",\r\n          stdin: false,\r\n        },\r\n      ],\r\n    },\r\n```\r\n\r\nHere is what I've come up with for an external compile target script so far:\r\n```\r\n#!/usr/bin/env node\r\nconst fs = require('fs');\r\nconst semver = require('semver');\r\n\r\n// node sol-compiler-json-to-truffle.js inputFilename\r\nconst inputFilename = process.argv[2];\r\n\r\nconst inputObj = JSON.parse(fs.readFileSync(inputFilename, 'utf8'));\r\n\r\nif (!semver.satisfies(inputObj[\"schemaVersion\"], '^2.0.0')) {\r\n  throw \"incompatible schemaVersion\";\r\n}\r\n\r\nvar truffleObject = {\r\n  \"contractName\": inputObj[\"contractName\"],\r\n  \"abi\": inputObj[\"compilerOutput\"][\"abi\"],\r\n  \"bytecode\": inputObj[\"compilerOutput\"][\"evm\"][\"bytecode\"][\"object\"],\r\n  \"deployedBytecode\": inputObj[\"compilerOutput\"][\"evm\"][\"deployedBytecode\"][\"object\"],\r\n  \"sourceMap\": inputObj[\"compilerOutput\"][\"evm\"][\"bytecode\"][\"sourceMap\"],\r\n  \"deployedSourceMap\": inputObj[\"compilerOutput\"][\"evm\"][\"deployedBytecode\"][\"sourceMap\"],\r\n  // TODO: \"source\": inputObj[\"sources\"][inputObj[\"contractName\"] + \".sol\"],\r\n  // TODO: \"sourcePath\": \"\",\r\n  // TODO: \"ast\": {},\r\n  // TODO: \"lagacyAST\": {},\r\n  \"compiler\": {\r\n    \"name\": inputObj[\"compiler\"][\"name\"],\r\n    \"version\": inputObj[\"compiler\"][\"version\"],\r\n  },\r\n  \"networks\": {},\r\n  \"schemaVersion\": \"3.0.1\",\r\n  \"updatedAt\": \"2019-01-27T03:25:52.161Z\",  // TODO: dynamic\r\n  \"devdoc\": inputObj[\"compilerOutput\"][\"devdoc\"],\r\n  \"userdoc\": inputObj[\"compilerOutput\"][\"userdoc\"],\r\n};\r\n\r\n// TODO: check somewhere for mainnet contract addresses\r\n\r\n// TODO: validate truffleObject here? I think truffle will do it for us after this\r\n\r\n// console.error(truffleObject);\r\n\r\n// give truffle the contract artifact formatted like it expects\r\nconsole.log(JSON.stringify(truffleObject));\r\n```\r\n\r\nSomething is wrong about the abi though. Running `truffle compile` gives this error along with a bunch of others:\r\n\r\n```\r\nError: Schema validation failed. Errors:\r\n\r\nshould NOT have additional properties (additionalProperties):\r\n{ dataPath: '.abi[3]',\r\n  schemaPath: '#/additionalProperties',\r\n  params: { additionalProperty: 'constant' },\r\n  data:\r\n   { constant: true,\r\n     inputs:\r\n      [ { name: '_addresses', type: 'address[]' },\r\n        { name: '_calldatas', type: 'bytes[]' } ],\r\n     name: 'encodeContractCalls',\r\n     outputs: [ { name: 'script', type: 'bytes' } ],\r\n     payable: false,\r\n     stateMutability: 'pure',\r\n     type: 'function' },\r\n  parentSchema:\r\n   { type: 'object',\r\n     properties:\r\n      { type: { type: 'string', enum: [ 'event' ] },\r\n        name: { '$ref': '#/definitions/Name' },\r\n        inputs:\r\n         { type: 'array',\r\n           items: { '$ref': '#/definitions/EventParameter' } },\r\n        anonymous: { type: 'boolean' } },\r\n     required: [ 'type', 'name', 'inputs', 'anonymous' ],\r\n     additionalProperties: false } }\r\n```\r\n\r\nI don't understand why it thinks that \"constant\" is an additional property. Looking at the truffle artifact that truffle generated itself, the abi sections look pretty much the same to me. The order is different between them, but all the keys are the same. What sort of modifications do I need to make to abi? Is sharing my complete repo needed to debug this?\r\n\r\nIf I set abi to `[]` it gets further, so I think this is the right track.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/460113441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/460116251",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1607#issuecomment-460116251",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607",
    "id": 460116251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDExNjI1MQ==",
    "user": {
      "login": "WyseNynja",
      "id": 624221,
      "node_id": "MDQ6VXNlcjYyNDIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WyseNynja",
      "html_url": "https://github.com/WyseNynja",
      "followers_url": "https://api.github.com/users/WyseNynja/followers",
      "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
      "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
      "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
      "repos_url": "https://api.github.com/users/WyseNynja/repos",
      "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-04T02:44:59Z",
    "updated_at": "2019-02-04T03:04:49Z",
    "author_association": "NONE",
    "body": "Here is the full output I get when I try to include the abi as sol-compiler gives it to me: https://gist.github.com/WyseNynja/d1536bf19ff754c2bbc0f3d6aa0508e2\r\n\r\nThe good news is that I think fixing why the abi won't validate is the last step. If I set abi to `[]` I am able to migrate the contracts with `truffle migrate`.\r\n\r\nThanks for the help so far, everyone!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/460116251/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/461586064",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1607#issuecomment-461586064",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607",
    "id": 461586064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTU4NjA2NA==",
    "user": {
      "login": "WyseNynja",
      "id": 624221,
      "node_id": "MDQ6VXNlcjYyNDIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WyseNynja",
      "html_url": "https://github.com/WyseNynja",
      "followers_url": "https://api.github.com/users/WyseNynja/followers",
      "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
      "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
      "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
      "repos_url": "https://api.github.com/users/WyseNynja/repos",
      "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T20:36:10Z",
    "updated_at": "2019-02-07T20:36:10Z",
    "author_association": "NONE",
    "body": "The problem with https://gist.github.com/WyseNynja/d1536bf19ff754c2bbc0f3d6aa0508e2 was using `pragma experimental ABIEncoderV2;` and `bytes[]`\r\n\r\nAfter commenting out the method that was doing that, the abi validates. I guess I can work without that for now, but it was nice to have.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/461586064/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/461591160",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1607#issuecomment-461591160",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1607",
    "id": 461591160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTU5MTE2MA==",
    "user": {
      "login": "WyseNynja",
      "id": 624221,
      "node_id": "MDQ6VXNlcjYyNDIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/624221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WyseNynja",
      "html_url": "https://github.com/WyseNynja",
      "followers_url": "https://api.github.com/users/WyseNynja/followers",
      "following_url": "https://api.github.com/users/WyseNynja/following{/other_user}",
      "gists_url": "https://api.github.com/users/WyseNynja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WyseNynja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WyseNynja/subscriptions",
      "organizations_url": "https://api.github.com/users/WyseNynja/orgs",
      "repos_url": "https://api.github.com/users/WyseNynja/repos",
      "events_url": "https://api.github.com/users/WyseNynja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WyseNynja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T20:52:14Z",
    "updated_at": "2019-02-07T20:52:14Z",
    "author_association": "NONE",
    "body": "Given that the rest of my issues seem to be in ganache, I'm going to continue this at https://github.com/trufflesuite/ganache/issues/1117",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/461591160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
