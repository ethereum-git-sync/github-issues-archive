{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/2868",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2868/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2868/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2868/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/2868",
  "id": 574320320,
  "node_id": "MDU6SXNzdWU1NzQzMjAzMjA=",
  "number": 2868,
  "title": "Truffle test throws error when specify web3 options on overloaded function",
  "user": {
    "login": "r0qs",
    "id": 457348,
    "node_id": "MDQ6VXNlcjQ1NzM0OA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/457348?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/r0qs",
    "html_url": "https://github.com/r0qs",
    "followers_url": "https://api.github.com/users/r0qs/followers",
    "following_url": "https://api.github.com/users/r0qs/following{/other_user}",
    "gists_url": "https://api.github.com/users/r0qs/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/r0qs/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/r0qs/subscriptions",
    "organizations_url": "https://api.github.com/users/r0qs/orgs",
    "repos_url": "https://api.github.com/users/r0qs/repos",
    "events_url": "https://api.github.com/users/r0qs/events{/privacy}",
    "received_events_url": "https://api.github.com/users/r0qs/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 230393326,
      "node_id": "MDU6TGFiZWwyMzAzOTMzMjY=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/bug",
      "name": "bug",
      "color": "fc2929",
      "default": true,
      "description": null
    },
    {
      "id": 1675042241,
      "node_id": "MDU6TGFiZWwxNjc1MDQyMjQx",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/priority5%20%F0%9F%8C%80",
      "name": "priority5 ðŸŒ€",
      "color": "006b75",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2020-03-02T23:43:30Z",
  "updated_at": "2020-03-04T18:45:54Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "- [ ] I've asked for help in the [Truffle Gitter](http://gitter.im/Consensys/truffle) before filing this issue.\r\n---------------------------\r\n\r\n## Issue\r\n\r\nI don't know if this is a bug of Truffle or web3, or if I'm doing something wrong. But when I try to specify some options parameter (e.g. {from: some_address}) on an overloaded function the truffle test throws the following error:\r\n```\r\nError: invalid number value (arg=\"number\", coderType=\"uint256\", value=\"One\")\r\n  at PromiEvent (node_modules/truffle/build/webpack:/packages/contract/lib/promievent.js:9:1)\r\n  at TruffleContract.write (node_modules/truffle/build/webpack:/packages/contract/lib/execute.js:169:1)\r\n  at Context.it (test/TestC.js:10:15)\r\n  at processTicksAndRejections (internal/process/task_queues.js:86:5)\r\n```\r\nIf I remove the option parameter (e.g. {from: some_address}) the test works. So it seems that truffle or web3 are getting the wrong function signature. Or I'm declaring it in the wrong way.\r\n\r\n```javascript\r\nconst c = await C.deployed();\r\nawait c.write(\"One\", { from: account }); // this doesn't work\r\nawait c.write(\"One\"); // this work\r\n```\r\nThe code is:\r\n```solidity\r\npragma solidity >=0.5.13 <0.7.0;\r\n\r\ninterface I {\r\n    function write(string calldata str) external;\r\n    function read() external view returns (string memory);\r\n}\r\n\r\nabstract contract A is I {\r\n\r\n    string _str;\r\n    \r\n    constructor() public {}\r\n\r\n    function write(string memory str)\r\n        public\r\n        override\r\n    {\r\n        _str = str;\r\n    }\r\n\r\n    function read() public view override returns (string memory){\r\n        return _str;\r\n    }\r\n}\r\n\r\nabstract contract B is A {\r\n\r\n    uint256 _number;\r\n\r\n    constructor() public A() {}\r\n\r\n    function write(uint256 number, string memory str)\r\n        public\r\n    {\r\n        _number = number;\r\n        _str = str;\r\n    }\r\n}\r\n\r\ncontract C is B {\r\n    constructor() public B() {}\r\n}\r\n```\r\n\r\n## Steps to Reproduce\r\n\r\nI created a repository to test this code and reproduce the problem. Just clone [this repo](https://github.com/r0qs/test-func-overload.git) and run \"npm install\" to install the dependencies, and run the ethereum client in one terminal:\r\n```\r\n$ npm run ganache-cli\r\n```\r\n\r\nThen, to see the test passing without the options parameter, run in another terminal:\r\n```\r\n$ npm run test\r\n```\r\n\r\nTo see the error when the options parameter is informed, run:\r\n```\r\n$ npm run test:bug\r\n```\r\n\r\n## Expected Behavior\r\n\r\nThe test should succeed passing the web3 options parameter.\r\n\r\n## Actual Results\r\n\r\nTruffle test throws the error: \"invalid number value (arg=\"number\", coderType=\"uint256\", valu e=\"One\")\"\r\n\r\n## Environment\r\n\r\n* Operating System: Arch Linux x86_64 Linux 5.5.7-arch1-1\r\n* Ethereum client: ganache-cli verison 6.9.1\r\n* Solc version: solc: 0.6.3+commit.8dda9521\r\n* Truffle version (`truffle version`): 5.1.15\r\n* node version (`node --version`): v11.15.0\r\n* npm version (`npm --version`): 6.14.1\r\n\r\n\r\nAm I missing something? Even though if I make the \"write\" function virtual on the A contract and override it on the B contract, like the following:\r\n```solidity\r\nabstract contract A is I {\r\n...\r\nfunction write(string memory str)\r\n        public\r\n        override\r\n        virtual\r\n    {\r\n        _str = str;\r\n    }\r\n...\r\n}\r\nabstract contract B is A {\r\n....\r\nfunction write(string memory str)\r\n        public\r\n        override\r\n    {\r\n        super.write(str);\r\n    }\r\n...\r\n}\r\n```\r\nI still get the same error.\r\n\r\nAnd if I inspect the contract C abi the two method signatures are there:\r\n```\r\nabi:\r\n   [...\r\n     { inputs: [Array],\r\n       name: 'write',\r\n       outputs: [],\r\n       stateMutability: 'nonpayable',\r\n       type: 'function',\r\n       constant: undefined,\r\n       payable: undefined,\r\n       signature: '0x216a3382' },\r\n     { inputs: [Array],\r\n       name: 'write',\r\n       outputs: [],\r\n       stateMutability: 'nonpayable',\r\n       type: 'function',\r\n       constant: undefined,\r\n       payable: undefined,\r\n       signature: '0xebaac771' } ],\r\n```\r\nAlso in the contract object:\r\n```\r\nmethods:\r\n      { read: [Function: bound _createTxObject],\r\n        '0x57de26a4': [Function: bound _createTxObject],\r\n        'read()': [Function: bound _createTxObject],\r\n        write: [Function: bound _createTxObject],\r\n        '0x216a3382': [Function: bound _createTxObject],\r\n        'write(uint256,string)': [Function: bound _createTxObject],\r\n        '0xebaac771': [Function: bound _createTxObject],\r\n        'write(string)': [Function: bound _createTxObject] },\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/2868/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2868/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/593694224",
    "html_url": "https://github.com/trufflesuite/truffle/issues/2868#issuecomment-593694224",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2868",
    "id": 593694224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzY5NDIyNA==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-03T00:07:52Z",
    "updated_at": "2020-03-03T00:07:52Z",
    "author_association": "MEMBER",
    "body": "Ah, thanks for reporting this! Congrats, you've successfully confused Truffle! :)\r\n\r\nSounds like your hunch is correct: because you define more than one `write()` method (`write(string memory)` and `write(uint256, string memory)`), and because your C contract inherits B, which has both of those methods, Truffle sees the second argument in `c.write(\"...\", { from: \"...\" })` and assumes you mean to use `write(uint256, string memory)`. Thus, it tries to interpret `\"One\"` as a `uint256`.\r\n\r\n(You had me for a second there with that error message... I thought you were making a joke, saying `\"One`\" is supposed to be a `uint` ;)\r\n\r\nAnyway, Truffle provides a way for you to get around this incorrect method discernment... and it's that `c.methods` object you found! Unfortunately this isn't in our docs, but see the [original release notes for this feature](https://github.com/trufflesuite/truffle/releases/tag/v5.0.0#user-content-what-s-new-in-truffle-v5-interacting-with-your-contracts-overloaded-solidity-functions). Roughly, you should just do this:\r\n\r\n```javascript\r\nawait c.methods[\"write(uint256,string)\"](\"One\", { from: account });\r\n```\r\n\r\nHope this helps!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/593694224/reactions",
      "total_count": 6,
      "+1": 5,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/593706563",
    "html_url": "https://github.com/trufflesuite/truffle/issues/2868#issuecomment-593706563",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2868",
    "id": 593706563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzcwNjU2Mw==",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-03T00:41:20Z",
    "updated_at": "2020-03-03T00:41:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Btw, I want to pop in here that better overload resolution is planned for the future to make resorting to `methods` less necessary!  (But it's going to take a while and `methods` is the current way to handle this.)",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/593706563/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/593714760",
    "html_url": "https://github.com/trufflesuite/truffle/issues/2868#issuecomment-593714760",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2868",
    "id": 593714760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzcxNDc2MA==",
    "user": {
      "login": "r0qs",
      "id": 457348,
      "node_id": "MDQ6VXNlcjQ1NzM0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/457348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r0qs",
      "html_url": "https://github.com/r0qs",
      "followers_url": "https://api.github.com/users/r0qs/followers",
      "following_url": "https://api.github.com/users/r0qs/following{/other_user}",
      "gists_url": "https://api.github.com/users/r0qs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r0qs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r0qs/subscriptions",
      "organizations_url": "https://api.github.com/users/r0qs/orgs",
      "repos_url": "https://api.github.com/users/r0qs/repos",
      "events_url": "https://api.github.com/users/r0qs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r0qs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-03T01:12:50Z",
    "updated_at": "2020-03-03T01:14:52Z",
    "author_association": "NONE",
    "body": "Hahaha, thanks @gnidan! It works indeed, but the correct method is:\r\n```javascript\r\nawait c.methods[\"write(string)\"](\"One\", { from: account });\r\n```\r\nSince is the method with signature \"write(string)\" that looks to be hidden for truffle, but can be accessed explicitly as you recommended, and not the most derived method write(uint256,string).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/593714760/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/593723438",
    "html_url": "https://github.com/trufflesuite/truffle/issues/2868#issuecomment-593723438",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2868",
    "id": 593723438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzcyMzQzOA==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-03T01:47:40Z",
    "updated_at": "2020-03-03T01:47:40Z",
    "author_association": "MEMBER",
    "body": "> It works indeed, but the correct method is:\r\n\r\nOh of course; I wrote the wrong one, oops :)\r\n\r\nAnyway, glad I could help! Besides the docs change, anything else actionable here? Is this a case where Truffle can error better? Can we feasibly detect the ambiguity here / is it worth it to add this before @haltman-at's teased changes?\r\n\r\nFeel free to close if you're satisfied, or I'll follow-up after some team discussion in our weekly ticket processing on Wednesday. Thanks again!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/593723438/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/594742996",
    "html_url": "https://github.com/trufflesuite/truffle/issues/2868#issuecomment-594742996",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2868",
    "id": 594742996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDc0Mjk5Ng==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-04T18:45:13Z",
    "updated_at": "2020-03-04T18:45:13Z",
    "author_association": "MEMBER",
    "body": "@haltman-at brings up a good point that we should be able to detect when the last argument is an options and thus not conformant to one of the overloads. Calling this a bug, then!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/594742996/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
