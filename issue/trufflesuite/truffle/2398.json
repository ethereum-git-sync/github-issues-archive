{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/2398",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2398/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2398/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2398/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/2398",
  "id": 495810290,
  "node_id": "MDU6SXNzdWU0OTU4MTAyOTA=",
  "number": 2398,
  "title": "`selfdestruct` in constructor gives \"The contract code couldn't be stored, please check your gas limit\"",
  "user": {
    "login": "xavierlepretre",
    "id": 5309374,
    "node_id": "MDQ6VXNlcjUzMDkzNzQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5309374?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/xavierlepretre",
    "html_url": "https://github.com/xavierlepretre",
    "followers_url": "https://api.github.com/users/xavierlepretre/followers",
    "following_url": "https://api.github.com/users/xavierlepretre/following{/other_user}",
    "gists_url": "https://api.github.com/users/xavierlepretre/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/xavierlepretre/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/xavierlepretre/subscriptions",
    "organizations_url": "https://api.github.com/users/xavierlepretre/orgs",
    "repos_url": "https://api.github.com/users/xavierlepretre/repos",
    "events_url": "https://api.github.com/users/xavierlepretre/events{/privacy}",
    "received_events_url": "https://api.github.com/users/xavierlepretre/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-09-19T13:45:55Z",
  "updated_at": "2019-09-25T17:48:25Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "- [ ] I've asked for help in the [Truffle Gitter](http://gitter.im/Consensys/truffle) before filing this issue.\r\n\r\n---------------------------\r\n\r\n## Issue\r\n\r\nWhen your contract `selfdestruct`s in its constructor, and you deploy it, the transaction receipt has `status: true`, but Truffle is unable to understand this as a successful transaction.\r\n\r\n## Steps to Reproduce\r\n\r\nCreate this contract:\r\n\r\n```solidity\r\npragma solidity 0.5.8;\r\n\r\ncontract BackDoor {\r\n    constructor() public payable {\r\n        selfdestruct(msg.sender);\r\n    }\r\n}\r\n```\r\nThen, run `ganache-cli`, and in a Truffle test, do:\r\n\r\n```javascript\r\nit(\"should deploy a BackDoor\", async function() {\r\n    const backDoor = await BackDoor.new({ from: accounts[0], value: 30, gas: 3000000});\r\n});\r\n```\r\nWhat you get is:\r\n\r\n```\r\n  1) Contract: BackDoor\r\n       should deploy a BackDoor:\r\n     Error: The contract code couldn't be stored, please check your gas limit.\r\n     at PromiEvent (node_modules/truffle/build/webpack:/packages/contract/lib/promievent.js:6:1)\r\n      at /home/vagrant/DAPPS/b9internal/capture_flag/node_modules/truffle/build/webpack:/packages/contract/lib/execute.js:211:1\r\n      at Function.new (node_modules/truffle/build/webpack:/packages/contract/lib/contract/constructorMethods.js:33:1)\r\n      at Context.<anonymous> (test/backDoor.js:14:27)\r\n      at web3.eth.getBlockNumber.then.result (node_modules/truffle/build/webpack:/packages/core/lib/testing/testrunner.js:153:1)\r\n      at process._tickCallback (internal/process/next_tick.js:68:7)\r\n```\r\nNow, in `ganache-cli`, you see:\r\n\r\n```\r\neth_sendTransaction\r\n\r\n  Transaction: 0x59d9dd797cd1b31a4cb0d7615cb9ee394effffc177a4651407632d307be8005b\r\n  Contract created: 0xd833c6d1b86aa11b0f07c3d89f9f3ee387f23ceb\r\n  Gas usage: 36066\r\n  Block Number: 100\r\n  Block Time: Thu Sep 19 2019 13:34:02 GMT+0000 (Coordinated Universal Time)\r\n\r\neth_getTransactionReceipt\r\neth_getCode\r\n```\r\nAnd if, in `truffle console`, you do \r\n\r\n```javascript\r\nweb3.eth.getTransactionReceipt(\"0x59d9dd797cd1b31a4cb0d7615cb9ee394effffc177a4651407632d307be8005b\")\r\n```\r\nYou get:\r\n\r\n```\r\n{\r\n    ...\r\n    gasUsed: 36066,\r\n    contractAddress: '0xd833C6D1B86aA11b0F07C3D89f9f3ee387F23CEb',\r\n    status: true,\r\n    ...\r\n}\r\n```\r\n\r\n## Expected Behavior\r\n\r\nThe `await BackDoor.new({ from: accounts[0], value: 30, gas: 3000000});` line should return a `truffle-contract` instance of `BackDoor`. **Even though it has no code at the address**.\r\n\r\nNote that Truffle v4.1.13 has the expected behaviour.\r\n\r\n## Actual Results\r\n\r\nActually, Truffle is fooled by the absence of code at the address as seen in the \"Steps to Reproduce\".\r\n\r\n## Environment\r\n\r\n* Operating System: Ubuntu 16.04.6 LTS\r\n* Ethereum client: `ganache-cli`\r\n* Truffle version (`truffle version`): v5.0.36 (core: 5.0.36)\r\n* Solidity version: v0.5.8 (solc-js)\r\n* node version (`node --version`): v10.16.3\r\n* npm version (`npm --version`): 6.9.0",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/2398/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2398/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/533141058",
    "html_url": "https://github.com/trufflesuite/truffle/issues/2398#issuecomment-533141058",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2398",
    "id": 533141058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzE0MTA1OA==",
    "user": {
      "login": "xavierlepretre",
      "id": 5309374,
      "node_id": "MDQ6VXNlcjUzMDkzNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5309374?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xavierlepretre",
      "html_url": "https://github.com/xavierlepretre",
      "followers_url": "https://api.github.com/users/xavierlepretre/followers",
      "following_url": "https://api.github.com/users/xavierlepretre/following{/other_user}",
      "gists_url": "https://api.github.com/users/xavierlepretre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xavierlepretre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xavierlepretre/subscriptions",
      "organizations_url": "https://api.github.com/users/xavierlepretre/orgs",
      "repos_url": "https://api.github.com/users/xavierlepretre/repos",
      "events_url": "https://api.github.com/users/xavierlepretre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xavierlepretre/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-19T13:53:21Z",
    "updated_at": "2019-09-19T13:53:35Z",
    "author_association": "NONE",
    "body": "Here is my workaround:\r\n\r\n```javascript\r\nlet txHash;\r\nawait BackDoor.new({ from: accounts[0], value: 30, gas: 3000000})\r\n    .on(\"transactionHash\", hash => txHash = hash)\r\n    .catch(e => {});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/533141058/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/533221671",
    "html_url": "https://github.com/trufflesuite/truffle/issues/2398#issuecomment-533221671",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2398",
    "id": 533221671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzIyMTY3MQ==",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-19T17:02:45Z",
    "updated_at": "2019-09-19T17:02:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure this is an issue with Truffle per se; I think this is an issue with web3 (I've noticed the same thing happening when I have a selfdestruct during deployment while using web3 directly).  Fixing this may have to wait until we're less reliant on web3.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/533221671/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/535135078",
    "html_url": "https://github.com/trufflesuite/truffle/issues/2398#issuecomment-535135078",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2398",
    "id": 535135078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNTEzNTA3OA==",
    "user": {
      "login": "eggplantzzz",
      "id": 14827965,
      "node_id": "MDQ6VXNlcjE0ODI3OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggplantzzz",
      "html_url": "https://github.com/eggplantzzz",
      "followers_url": "https://api.github.com/users/eggplantzzz/followers",
      "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
      "repos_url": "https://api.github.com/users/eggplantzzz/repos",
      "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-25T17:48:25Z",
    "updated_at": "2019-09-25T17:48:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "We can consider checking for this specific error and handling it for a nice user experience. Note that this exception occurs when a transaction reverts as well so we could check for multiple conditions.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/535135078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
