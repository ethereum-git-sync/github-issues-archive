{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/5155",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5155/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5155/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5155/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/5155",
  "id": 1253379294,
  "node_id": "I_kwDOAkfq-c5KtQze",
  "number": 5155,
  "title": "Update documentation to explain how Clean-room environment works",
  "user": {
    "login": "sargue",
    "id": 333808,
    "node_id": "MDQ6VXNlcjMzMzgwOA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/333808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sargue",
    "html_url": "https://github.com/sargue",
    "followers_url": "https://api.github.com/users/sargue/followers",
    "following_url": "https://api.github.com/users/sargue/following{/other_user}",
    "gists_url": "https://api.github.com/users/sargue/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sargue/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sargue/subscriptions",
    "organizations_url": "https://api.github.com/users/sargue/orgs",
    "repos_url": "https://api.github.com/users/sargue/repos",
    "events_url": "https://api.github.com/users/sargue/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sargue/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 990819613,
      "node_id": "MDU6TGFiZWw5OTA4MTk2MTM=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/Docs",
      "name": "Docs",
      "color": "c5def5",
      "default": false,
      "description": ""
    },
    {
      "id": 1426368764,
      "node_id": "MDU6TGFiZWwxNDI2MzY4NzY0",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/good%20first%20issue",
      "name": "good first issue",
      "color": "006b75",
      "default": true,
      "description": ""
    },
    {
      "id": 1675041996,
      "node_id": "MDU6TGFiZWwxNjc1MDQxOTk2",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/priority4%20%F0%9F%93%8B",
      "name": "priority4 ðŸ“‹",
      "color": "006b75",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-05-31T06:14:04Z",
  "updated_at": "2022-06-02T17:57:44Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "- [ ] I've [opened a support ticket](https://trufflesuite.zendesk.com/hc/en-us/requests/new) before filing this issue.\r\n\r\n---------------------------\r\n\r\n## Issue\r\n\r\nTests are not isolated from each other. I reproduced it using the metacoin box tutorial, adding a new test at the end that checks again the balance. As per the \"clean-room\" the first account should have all 10000 tokens. It's not.\r\n\r\n## Steps to Reproduce\r\n\r\nStarting from the freshly unboxed metacoin repeat the first test as the last one, adding this to the end of `metacoin.js`\r\n\r\n```\r\n  it('should still have 10000 MetaCoin in the first account as per clean room test env', async () => {\r\n    const metaCoinInstance = await MetaCoin.deployed();\r\n    const balance = await metaCoinInstance.getBalance.call(accounts[0]);\r\n\r\n    assert.equal(balance.valueOf(), 10000, \"10000 wasn't in the first account\");\r\n  });\r\n```\r\n\r\nRun `truffle test`.\r\n\r\n## Expected Behavior\r\n\r\nAll those tests should pass.\r\n\r\n## Actual Results\r\n\r\n```\r\nCompiling your contracts...\r\n===========================\r\n> Compiling ./contracts/ConvertLib.sol\r\n> Compiling ./contracts/MetaCoin.sol\r\n> Compiling ./contracts/Migrations.sol\r\n> Compiling ./test/TestMetaCoin.sol\r\n> Artifacts written to /tmp/test--190-ETkHgONXcoEN\r\n> Compiled successfully using:\r\n   - solc: 0.5.16+commit.9c3226ce.Emscripten.clang\r\n\r\n\r\n  TestMetaCoin\r\n    âœ” testInitialBalanceUsingDeployedContract (1036ms)\r\n    âœ” testInitialBalanceWithNewMetaCoin (1022ms)\r\n\r\n  Contract: MetaCoin\r\n    âœ” should put 10000 MetaCoin in the first account\r\n    âœ” should call a function that depends on a linked library\r\n    âœ” should send coin correctly (1049ms)\r\n    1) should still have 10000 MetaCoin in the first account as per clean room test env\r\n    > No events were emitted\r\n\r\n\r\n  5 passing (20s)\r\n  1 failing\r\n\r\n  1) Contract: MetaCoin\r\n       should still have 10000 MetaCoin in the first account as per clean room test env:\r\n     AssertionError: 10000 wasn't in the first account: expected <BN: 2706> to equal 10000\r\n      at Context.<anonymous> (test/metacoin.js:44:12)\r\n      at runMicrotasks (<anonymous>)\r\n      at processTicksAndRejections (node:internal/process/task_queues:96:5)\r\n```\r\n\r\n## Environment\r\n\r\n* Operating System: Debian GNU/Linux 11 (bullseye)\r\n* Ethereum client: N/A\r\n* Truffle version (`truffle version`):\r\nTruffle v5.5.14 (core: 5.5.14)\r\nGanache v^7.1.0\r\nSolidity v0.5.16 (solc-js)\r\nNode v16.15.0\r\nWeb3.js v1.5.3\r\n* node version (`node --version`): v16.15.0\r\n* npm version (`npm --version`): 8.5.5\r\n",
  "closed_by": {
    "login": "sargue",
    "id": 333808,
    "node_id": "MDQ6VXNlcjMzMzgwOA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/333808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sargue",
    "html_url": "https://github.com/sargue",
    "followers_url": "https://api.github.com/users/sargue/followers",
    "following_url": "https://api.github.com/users/sargue/following{/other_user}",
    "gists_url": "https://api.github.com/users/sargue/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sargue/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sargue/subscriptions",
    "organizations_url": "https://api.github.com/users/sargue/orgs",
    "repos_url": "https://api.github.com/users/sargue/repos",
    "events_url": "https://api.github.com/users/sargue/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sargue/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/5155/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5155/timeline",
  "performed_via_github_app": null,
  "state_reason": "reopened"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1141832549",
    "html_url": "https://github.com/trufflesuite/truffle/issues/5155#issuecomment-1141832549",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5155",
    "id": 1141832549,
    "node_id": "IC_kwDOAkfq-c5EDvtl",
    "user": {
      "login": "cds-amal",
      "id": 2529600,
      "node_id": "MDQ6VXNlcjI1Mjk2MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2529600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cds-amal",
      "html_url": "https://github.com/cds-amal",
      "followers_url": "https://api.github.com/users/cds-amal/followers",
      "following_url": "https://api.github.com/users/cds-amal/following{/other_user}",
      "gists_url": "https://api.github.com/users/cds-amal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cds-amal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cds-amal/subscriptions",
      "organizations_url": "https://api.github.com/users/cds-amal/orgs",
      "repos_url": "https://api.github.com/users/cds-amal/repos",
      "events_url": "https://api.github.com/users/cds-amal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cds-amal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-31T08:28:00Z",
    "updated_at": "2022-05-31T08:28:00Z",
    "author_association": "MEMBER",
    "body": "Hi @sargue,\r\n\r\nA \"clean room\" is triggered when a new `Contract` test-block is encountered. \r\n\r\n\r\n<details><summary>Try this test file</summary>\r\n\r\n```javascript\r\nconst MetaCoin = artifacts.require(\"MetaCoin\");\r\n\r\ncontract('MetaCoin - Room 1', (accounts) => {\r\n  before (async () => {\r\n    const bal = await web3.eth.getBalance(accounts[0]);\r\n    console.log(accounts[0], bal);\r\n  });\r\n\r\n  it('should put 10000 MetaCoin in the first account', async () => {\r\n    const metaCoinInstance = await MetaCoin.deployed();\r\n    const balance = await metaCoinInstance.getBalance.call(accounts[0]);\r\n\r\n    assert.equal(balance.valueOf(), 10000, \"10000 wasn't in the first account\");\r\n  });\r\n\r\n  it('should call a function that depends on a linked library', async () => {\r\n    const metaCoinInstance = await MetaCoin.deployed();\r\n    const metaCoinBalance = (await metaCoinInstance.getBalance.call(accounts[0])).toNumber();\r\n    const metaCoinEthBalance = (await metaCoinInstance.getBalanceInEth.call(accounts[0])).toNumber();\r\n\r\n    assert.equal(metaCoinEthBalance, 2 * metaCoinBalance, 'Library function returned unexpected function, linkage may be broken');\r\n  });\r\n  it('should send coin correctly', async () => {\r\n    const metaCoinInstance = await MetaCoin.deployed();\r\n\r\n    // Setup 2 accounts.\r\n    const accountOne = accounts[0];\r\n    const accountTwo = accounts[1];\r\n\r\n    // Get initial balances of first and second account.\r\n    const accountOneStartingBalance = (await metaCoinInstance.getBalance.call(accountOne)).toNumber();\r\n    const accountTwoStartingBalance = (await metaCoinInstance.getBalance.call(accountTwo)).toNumber();\r\n\r\n    // Make transaction from first account to second.\r\n    const amount = 10;\r\n    await metaCoinInstance.sendCoin(accountTwo, amount, { from: accountOne });\r\n\r\n    // Get balances of first and second account after the transactions.\r\n    const accountOneEndingBalance = (await metaCoinInstance.getBalance.call(accountOne)).toNumber();\r\n    const accountTwoEndingBalance = (await metaCoinInstance.getBalance.call(accountTwo)).toNumber();\r\n\r\n\r\n    assert.equal(accountOneEndingBalance, accountOneStartingBalance - amount, \"Amount wasn't correctly taken from the sender\");\r\n    assert.equal(accountTwoEndingBalance, accountTwoStartingBalance + amount, \"Amount wasn't correctly sent to the receiver\");\r\n  });\r\n});\r\n\r\n\r\ncontract('MetaCoin - Room 2', (accounts) => {\r\n  before (async () => {\r\n    const bal = await web3.eth.getBalance(accounts[0]);\r\n    console.log(accounts[0], bal);\r\n  });\r\n\r\n  it('should still have 10000 MetaCoin in the first account as per clean room test env', async () => {\r\n    const metaCoinInstance = await MetaCoin.deployed();\r\n    const balance = await metaCoinInstance.getBalance.call(accounts[0]);\r\n\r\n    assert.equal(balance.valueOf(), 10000, \"10000 wasn't in the first account\");\r\n  });\r\n\r\n});\r\n\r\n\r\n```\r\n</details>\r\n\r\nI got the following results:\r\n\r\n```console\r\n$ truffle test test/metacoin.js\r\n\r\nCompiling your contracts...\r\n===========================\r\n> Compiling ./contracts/ConvertLib.sol\r\n> Compiling ./contracts/MetaCoin.sol\r\n> Compiling ./contracts/Migrations.sol\r\n> Artifacts written to /tmp/test--303975-nwrJqCgyL0Jq\r\n> Compiled successfully using:\r\n   - solc: 0.5.16+commit.9c3226ce.Emscripten.clang\r\n\r\n\r\n  Contract: MetaCoin - Room 1\r\n0x627306090abaB3A6e1400e9345bC60c78a8BEf57 99998008940690133243\r\n    âœ” should put 10000 MetaCoin in the first account\r\n    âœ” should call a function that depends on a linked library\r\n    âœ” should send coin correctly (1066ms)\r\n\r\n  Contract: MetaCoin - Room 2\r\n0x627306090abaB3A6e1400e9345bC60c78a8BEf57 99998008940690133243\r\n    âœ” should still have 10000 MetaCoin in the first account as per clean room test env\r\n\r\n\r\n  4 passing (1s)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1141832549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1141948105",
    "html_url": "https://github.com/trufflesuite/truffle/issues/5155#issuecomment-1141948105",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5155",
    "id": 1141948105,
    "node_id": "IC_kwDOAkfq-c5EEL7J",
    "user": {
      "login": "sargue",
      "id": 333808,
      "node_id": "MDQ6VXNlcjMzMzgwOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/333808?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sargue",
      "html_url": "https://github.com/sargue",
      "followers_url": "https://api.github.com/users/sargue/followers",
      "following_url": "https://api.github.com/users/sargue/following{/other_user}",
      "gists_url": "https://api.github.com/users/sargue/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sargue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sargue/subscriptions",
      "organizations_url": "https://api.github.com/users/sargue/orgs",
      "repos_url": "https://api.github.com/users/sargue/repos",
      "events_url": "https://api.github.com/users/sargue/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sargue/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-31T10:19:29Z",
    "updated_at": "2022-05-31T10:19:29Z",
    "author_association": "NONE",
    "body": "I see, I understood it wrong. Thanks for the explanation.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1141948105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1142095941",
    "html_url": "https://github.com/trufflesuite/truffle/issues/5155#issuecomment-1142095941",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5155",
    "id": 1142095941,
    "node_id": "IC_kwDOAkfq-c5EEwBF",
    "user": {
      "login": "cds-amal",
      "id": 2529600,
      "node_id": "MDQ6VXNlcjI1Mjk2MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2529600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cds-amal",
      "html_url": "https://github.com/cds-amal",
      "followers_url": "https://api.github.com/users/cds-amal/followers",
      "following_url": "https://api.github.com/users/cds-amal/following{/other_user}",
      "gists_url": "https://api.github.com/users/cds-amal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cds-amal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cds-amal/subscriptions",
      "organizations_url": "https://api.github.com/users/cds-amal/orgs",
      "repos_url": "https://api.github.com/users/cds-amal/repos",
      "events_url": "https://api.github.com/users/cds-amal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cds-amal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-31T12:51:48Z",
    "updated_at": "2022-05-31T13:05:17Z",
    "author_association": "MEMBER",
    "body": "> I see, I understood it wrong. Thanks for the explanation.\r\n\r\nThanks for raising this @sargue, our documentation should explain how this works.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1142095941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
