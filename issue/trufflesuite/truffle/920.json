{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/920",
  "id": 317869822,
  "node_id": "MDU6SXNzdWUzMTc4Njk4MjI=",
  "number": 920,
  "title": "Async/await tests throwing `revert` error randomly ",
  "user": {
    "login": "kermankohli",
    "id": 2050929,
    "node_id": "MDQ6VXNlcjIwNTA5Mjk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2050929?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kermankohli",
    "html_url": "https://github.com/kermankohli",
    "followers_url": "https://api.github.com/users/kermankohli/followers",
    "following_url": "https://api.github.com/users/kermankohli/following{/other_user}",
    "gists_url": "https://api.github.com/users/kermankohli/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kermankohli/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kermankohli/subscriptions",
    "organizations_url": "https://api.github.com/users/kermankohli/orgs",
    "repos_url": "https://api.github.com/users/kermankohli/repos",
    "events_url": "https://api.github.com/users/kermankohli/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kermankohli/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 30,
  "created_at": "2018-04-26T04:02:32Z",
  "updated_at": "2018-05-10T05:58:16Z",
  "closed_at": "2018-05-08T00:16:40Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "- [Y] I've asked for help in the [Truffle Gitter](http://gitter.im/Consensys/truffle) before filing this issue.\r\n\r\n---------------------------\r\n\r\n## Issue\r\nThe following error causes tests to fail randomly.\r\nError: VM Exception while processing transaction: revert\r\n\r\n## Steps to Reproduce\r\n\r\nIt's hard to reproduce although here's a link to the repo:\r\nhttps://github.com/kermankohli/ethme\r\n\r\n## Expected Behavior\r\n\r\nTests should consistently pass all the time.\r\n\r\n## Actual Results\r\n\r\nThe same test will fail, and then pass when rerun again. It seems to be some kind of caching issue or race condition.\r\n\r\n## Environment\r\n\r\n* Operating System: Mac OSX\r\n* Ethereum client: Gananche\r\n* Truffle version (`truffle version`): 4.1.7\r\n* node version (`node --version`): 9.10.1\r\n* npm version (`npm --version`): 5.6.0\r\n",
  "closed_by": {
    "login": "cgewecke",
    "id": 7332026,
    "node_id": "MDQ6VXNlcjczMzIwMjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cgewecke",
    "html_url": "https://github.com/cgewecke",
    "followers_url": "https://api.github.com/users/cgewecke/followers",
    "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
    "organizations_url": "https://api.github.com/users/cgewecke/orgs",
    "repos_url": "https://api.github.com/users/cgewecke/repos",
    "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cgewecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/920/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384521240",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-384521240",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 384521240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDUyMTI0MA==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T05:49:51Z",
    "updated_at": "2018-04-26T05:51:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kermankohli Hi, just peeked at one of your test files and found [this](https://github.com/kermankohli/ethme/blob/master/test/authorizable.js#L57). It's a `describe` block whose callback is `async`. This [isn't compatible](https://github.com/mochajs/mocha/issues/2975#issuecomment-326162912) with mocha and is a really common source of non-deterministic test behavior. When you're writing using the `await` pattern it's super easy to do this by accident. \r\n\r\nYou might comb through the code and make sure everything async/await is as it should be. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384521240/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384531164",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-384531164",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 384531164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDUzMTE2NA==",
    "user": {
      "login": "kermankohli",
      "id": 2050929,
      "node_id": "MDQ6VXNlcjIwNTA5Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2050929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kermankohli",
      "html_url": "https://github.com/kermankohli",
      "followers_url": "https://api.github.com/users/kermankohli/followers",
      "following_url": "https://api.github.com/users/kermankohli/following{/other_user}",
      "gists_url": "https://api.github.com/users/kermankohli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kermankohli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kermankohli/subscriptions",
      "organizations_url": "https://api.github.com/users/kermankohli/orgs",
      "repos_url": "https://api.github.com/users/kermankohli/repos",
      "events_url": "https://api.github.com/users/kermankohli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kermankohli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T06:44:01Z",
    "updated_at": "2018-04-26T06:44:01Z",
    "author_association": "NONE",
    "body": "Thanks for pointing that out! I removed it (checked for other references) and reran the tests although the same issue still persists:\r\n\r\n```\r\nethme master ✗ 21h39m ▲ △ ◒ ➜ truffle test\r\nUsing network 'development'.\r\n\r\nCompiling ./contracts/Authorizable.sol...\r\nCompiling ./contracts/Collectable.sol...\r\nCompiling ./contracts/EightExToken.sol...\r\nCompiling ./contracts/Executor.sol...\r\nCompiling ./contracts/TransferProxy.sol...\r\nCompiling ./contracts/VolumeSubscription.sol...\r\nCompiling ./contracts/base/math/Math.sol...\r\nCompiling ./contracts/base/math/SafeMath.sol...\r\nCompiling ./contracts/base/ownership/Ownable.sol...\r\nCompiling ./contracts/base/token/BasicToken.sol...\r\nCompiling ./contracts/base/token/ERC20.sol...\r\nCompiling ./contracts/base/token/ERC20Basic.sol...\r\nCompiling ./contracts/base/token/StandardToken.sol...\r\n\r\nCompilation warnings encountered:\r\n\r\n/Users/kermankohli/crypto/ethme/contracts/base/ownership/Ownable.sol:19:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\r\n    function Ownable() public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\r\n,/Users/kermankohli/crypto/ethme/contracts/Collectable.sol:22:5: Warning: Modifiers of functions without implementation are ignored.\r\n    function subscriptionOwnerDoesntHaveEnoughFunds(bytes32 _subscription) onlyAuthorized public;\r\n    ^-------------------------------------------------------------------------------------------^\r\n,/Users/kermankohli/crypto/ethme/contracts/EightExToken.sol:15:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\r\n    function EightExToken() public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\r\n,/Users/kermankohli/crypto/ethme/contracts/EightExToken.sol:40:13: Warning: Invoking events without \"emit\" prefix is deprecated.\r\n            Transfer(_from, _to, _value);\r\n            ^--------------------------^\r\n\r\n\r\n\r\n  Contract: TransferProxy\r\n    ✓ should throw if an unauthorized address tries to transfer tokens (113ms)\r\n    ✓ should allow an authorized address to transfer tokens (329ms)\r\n\r\n  Contract: VolumeSubscription\r\n    ✓ should be able to intialise the plan contract correctly (46ms)\r\n    ✓ should have the correct computed plan hash (133ms)\r\n    1) should have the correct computed subscription hash\r\n    > No events were emitted\r\n    when collecting money from the contract\r\n      2) should be able to terminate as an authorized address\r\n\r\n    Events emitted during test:\r\n    ---------------------------\r\n\r\n    CreatedPlan(identifier: 0x10da531567bebf1fcb02b8f726c730b789279cd0e337402343f0a6f69903eb30)\r\n    CreatedSubscription(identifier: 0x0482a2203bdfb9455f174311fc04f67ec2c768dc71a12ceba9ed4806c8eeaa29)\r\n    LogAuthorizedAddressAdded(target: <indexed>, caller: <indexed>)\r\n    TerminatedSubscription(identifier: 0x0482a2203bdfb9455f174311fc04f67ec2c768dc71a12ceba9ed4806c8eeaa29, terminationDate: 1524724896)\r\n\r\n    ---------------------------\r\n      ✓ should be not be able to terminate as an unauthorized address (164ms)\r\n      ✓ should be able to determine a valid subscription (243ms)\r\n      ✓ should be able to determine an invalid subscription (403ms)\r\n      3) should be able to get the correct amount\r\n\r\n    Events emitted during test:\r\n    ---------------------------\r\n\r\n    CreatedPlan(identifier: 0x35481ef21398e15e1d6ca5f49401cb5a8a84df62305f7f478da6742402c97f8a)\r\n\r\n    ---------------------------\r\n    when creating a new plan\r\n      ✓ should be able to create a new plan correctly (104ms)\r\n      ✓ should not be able to create a plan without required details (195ms)\r\n      ✓ should not be able to create a plan with the same identifier (128ms)\r\n    when updating the owner of a plan\r\n      ✓ should be able to update as the owner (307ms)\r\n      ✓ should be not be able to update the owner as another user (84ms)\r\n    when updating the name of a plan\r\n      ✓ should be able to update as the owner (290ms)\r\n      ✓ should be not be able to update as another user (153ms)\r\n    when updating the description of a plan\r\n      ✓ should be able to update as the owner (197ms)\r\n      ✓ should be not be able to update as another user (165ms)\r\n    when updating the data of a plan\r\n      ✓ should be able to update as the owner (189ms)\r\n      ✓ should be not be able to update as another user (92ms)\r\n    when terminating a plan\r\n      ✓ should be able to terminate as the owner (258ms)\r\n      ✓ should not be able to terminate multiple times (199ms)\r\n      ✓ should not be able to terminate from a date in the past (155ms)\r\n      ✓ should not be able to terminate as another user (169ms)\r\n    when updating the data of a subscription\r\n      ✓ should be able to update as the owner (321ms)\r\n      ✓ should be not be able to update as another user (280ms)\r\n    when terminating a subscription\r\n      ✓ should be able to terminate as the owner (320ms)\r\n      ✓ should not be able to terminate multiple times (288ms)\r\n      ✓ should not be able to terminate from a date in the past (201ms)\r\n      ✓ should not be able to terminate as another user (214ms)\r\n\r\n  Contract: Authorizable\r\n    when adding an authorized address\r\n      ✓ should throw if not called by the owner (64ms)\r\n      ✓ should allow the owner to add an authorized address (203ms)\r\n      ✓ should not allow an authorized address to add a duplicate address\r\n    when removing an authorized address\r\n      ✓ should throw if not called by the owner (61ms)\r\n      ✓ should allow the owner to remove an authorized address (151ms)\r\n      ✓ should now allow the owner to remove a non-authorized address\r\n    when getting authorized addresses\r\n      ✓ should be able to return all the authorized addresses (250ms)\r\n\r\n\r\n  35 passing (8s)\r\n  3 failing\r\n\r\n  1) Contract: VolumeSubscription should have the correct computed subscription hash:\r\n     Error: VM Exception while processing transaction: revert\r\n      at Object.InvalidResponse (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/errors.js:38:1)\r\n      at /usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/requestmanager.js:86:1\r\n      at /usr/local/lib/node_modules/truffle/build/webpack:/~/truffle-provider/wrapper.js:134:1\r\n      at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/httpprovider.js:128:1)\r\n      at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:64:1)\r\n      at XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:354:1)\r\n      at XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:509:1)\r\n      at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:469:1)\r\n      at endReadableNT (_stream_readable.js:1106:12)\r\n      at process._tickCallback (internal/process/next_tick.js:114:19)\r\n\r\n  2) Contract: VolumeSubscription when collecting money from the contract should be able to terminate as an authorized address:\r\n     AssertionError: expected { Object (s, e, ...) } to equal 1524724895\r\n      at Context._callee3$ (test/volume_subscription.js:44:20)\r\n      at tryCatch (node_modules/regenerator-runtime/runtime.js:65:40)\r\n      at Generator.invoke [as _invoke] (node_modules/regenerator-runtime/runtime.js:303:22)\r\n      at Generator.prototype.(anonymous function) [as next] (node_modules/regenerator-runtime/runtime.js:117:21)\r\n      at step (test/volume_subscription.js:15:191)\r\n      at test/volume_subscription.js:15:361\r\n      at <anonymous>\r\n      at process._tickCallback (internal/process/next_tick.js:118:7)\r\n\r\n  3) Contract: VolumeSubscription when collecting money from the contract should be able to get the correct amount:\r\n     Error: VM Exception while processing transaction: revert\r\n      at Object.InvalidResponse (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/errors.js:38:1)\r\n      at /usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/requestmanager.js:86:1\r\n      at /usr/local/lib/node_modules/truffle/build/webpack:/~/truffle-provider/wrapper.js:134:1\r\n      at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/httpprovider.js:128:1)\r\n      at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:64:1)\r\n      at XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:354:1)\r\n      at XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:509:1)\r\n      at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:469:1)\r\n      at endReadableNT (_stream_readable.js:1106:12)\r\n      at process._tickCallback (internal/process/next_tick.js:114:19)\r\n\r\n\r\n\r\nethme master ✗ 21h39m ▲ △ ◒ ⍉ ➜ truffle test\r\nUsing network 'development'.\r\n\r\nCompiling ./contracts/Authorizable.sol...\r\nCompiling ./contracts/Collectable.sol...\r\nCompiling ./contracts/EightExToken.sol...\r\nCompiling ./contracts/Executor.sol...\r\nCompiling ./contracts/TransferProxy.sol...\r\nCompiling ./contracts/VolumeSubscription.sol...\r\nCompiling ./contracts/base/math/Math.sol...\r\nCompiling ./contracts/base/math/SafeMath.sol...\r\nCompiling ./contracts/base/ownership/Ownable.sol...\r\nCompiling ./contracts/base/token/BasicToken.sol...\r\nCompiling ./contracts/base/token/ERC20.sol...\r\nCompiling ./contracts/base/token/ERC20Basic.sol...\r\nCompiling ./contracts/base/token/StandardToken.sol...\r\n\r\nCompilation warnings encountered:\r\n\r\n/Users/kermankohli/crypto/ethme/contracts/base/ownership/Ownable.sol:19:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\r\n    function Ownable() public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\r\n,/Users/kermankohli/crypto/ethme/contracts/Collectable.sol:22:5: Warning: Modifiers of functions without implementation are ignored.\r\n    function subscriptionOwnerDoesntHaveEnoughFunds(bytes32 _subscription) onlyAuthorized public;\r\n    ^-------------------------------------------------------------------------------------------^\r\n,/Users/kermankohli/crypto/ethme/contracts/EightExToken.sol:15:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\r\n    function EightExToken() public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\r\n,/Users/kermankohli/crypto/ethme/contracts/EightExToken.sol:40:13: Warning: Invoking events without \"emit\" prefix is deprecated.\r\n            Transfer(_from, _to, _value);\r\n            ^--------------------------^\r\n\r\n\r\n\r\n  Contract: Authorizable\r\n    when adding an authorized address\r\n      ✓ should throw if not called by the owner\r\n      ✓ should allow the owner to add an authorized address (94ms)\r\n      ✓ should not allow an authorized address to add a duplicate address\r\n    when removing an authorized address\r\n      ✓ should throw if not called by the owner\r\n      ✓ should allow the owner to remove an authorized address (97ms)\r\n      ✓ should now allow the owner to remove a non-authorized address (59ms)\r\n    when getting authorized addresses\r\n      ✓ should be able to return all the authorized addresses (246ms)\r\n\r\n  Contract: TransferProxy\r\n    ✓ should throw if an unauthorized address tries to transfer tokens (121ms)\r\n    ✓ should allow an authorized address to transfer tokens (407ms)\r\n\r\n  Contract: VolumeSubscription\r\n    ✓ should be able to intialise the plan contract correctly\r\n    ✓ should have the correct computed plan hash (92ms)\r\n    1) should have the correct computed subscription hash\r\n    > No events were emitted\r\n    when collecting money from the contract\r\n      2) should be able to terminate as an authorized address\r\n\r\n    Events emitted during test:\r\n    ---------------------------\r\n\r\n    CreatedPlan(identifier: 0x10da531567bebf1fcb02b8f726c730b789279cd0e337402343f0a6f69903eb30)\r\n\r\n    ---------------------------\r\n      ✓ should be not be able to terminate as an unauthorized address (210ms)\r\n      ✓ should be able to determine a valid subscription (241ms)\r\n      ✓ should be able to determine an invalid subscription (405ms)\r\n      ✓ should be able to get the correct amount (216ms)\r\n    when creating a new plan\r\n      ✓ should be able to create a new plan correctly (98ms)\r\n      ✓ should not be able to create a plan without required details (197ms)\r\n      ✓ should not be able to create a plan with the same identifier (158ms)\r\n    when updating the owner of a plan\r\n      ✓ should be able to update as the owner (274ms)\r\n      ✓ should be not be able to update the owner as another user (96ms)\r\n    when updating the name of a plan\r\n      ✓ should be able to update as the owner (258ms)\r\n      ✓ should be not be able to update as another user (83ms)\r\n    when updating the description of a plan\r\n      ✓ should be able to update as the owner (260ms)\r\n      ✓ should be not be able to update as another user (89ms)\r\n    when updating the data of a plan\r\n      ✓ should be able to update as the owner (277ms)\r\n      ✓ should be not be able to update as another user (124ms)\r\n    when terminating a plan\r\n      ✓ should be able to terminate as the owner (191ms)\r\n      ✓ should not be able to terminate multiple times (208ms)\r\n      ✓ should not be able to terminate from a date in the past (123ms)\r\n      ✓ should not be able to terminate as another user (151ms)\r\n    when updating the data of a subscription\r\n      ✓ should be able to update as the owner (308ms)\r\n      ✓ should be not be able to update as another user (219ms)\r\n    when terminating a subscription\r\n      ✓ should be able to terminate as the owner (310ms)\r\n      3) should not be able to terminate multiple times\r\n\r\n    Events emitted during test:\r\n    ---------------------------\r\n\r\n    CreatedPlan(identifier: 0x5e5508da6762220619aeda638dcb0b33546297cc03cd1fb9fcb81167bf3183bd)\r\n\r\n    ---------------------------\r\n      ✓ should not be able to terminate from a date in the past (223ms)\r\n      ✓ should not be able to terminate as another user (211ms)\r\n\r\n\r\n  35 passing (8s)\r\n  3 failing\r\n\r\n  1) Contract: VolumeSubscription should have the correct computed subscription hash:\r\n     Error: VM Exception while processing transaction: revert\r\n      at Object.InvalidResponse (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/errors.js:38:1)\r\n      at /usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/requestmanager.js:86:1\r\n      at /usr/local/lib/node_modules/truffle/build/webpack:/~/truffle-provider/wrapper.js:134:1\r\n      at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/httpprovider.js:128:1)\r\n      at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:64:1)\r\n      at XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:354:1)\r\n      at XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:509:1)\r\n      at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:469:1)\r\n      at endReadableNT (_stream_readable.js:1106:12)\r\n      at process._tickCallback (internal/process/next_tick.js:114:19)\r\n\r\n  2) Contract: VolumeSubscription when collecting money from the contract should be able to terminate as an authorized address:\r\n     Error: VM Exception while processing transaction: revert\r\n      at Object.InvalidResponse (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/errors.js:38:1)\r\n      at /usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/requestmanager.js:86:1\r\n      at /usr/local/lib/node_modules/truffle/build/webpack:/~/truffle-provider/wrapper.js:134:1\r\n      at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/httpprovider.js:128:1)\r\n      at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:64:1)\r\n      at XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:354:1)\r\n      at XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:509:1)\r\n      at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:469:1)\r\n      at endReadableNT (_stream_readable.js:1106:12)\r\n      at process._tickCallback (internal/process/next_tick.js:114:19)\r\n\r\n  3) Contract: VolumeSubscription when terminating a subscription should not be able to terminate multiple times:\r\n     Error: VM Exception while processing transaction: revert\r\n      at Object.InvalidResponse (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/errors.js:38:1)\r\n      at /usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/requestmanager.js:86:1\r\n      at /usr/local/lib/node_modules/truffle/build/webpack:/~/truffle-provider/wrapper.js:134:1\r\n      at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/httpprovider.js:128:1)\r\n      at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:64:1)\r\n      at XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:354:1)\r\n      at XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:509:1)\r\n      at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:469:1)\r\n      at endReadableNT (_stream_readable.js:1106:12)\r\n      at process._tickCallback (internal/process/next_tick.js:114:19)\r\n\r\n\r\n\r\nethme master ✗ 21h39m ▲ △ ◒ ⍉ ➜ truffle test\r\nUsing network 'development'.\r\n\r\nCompiling ./contracts/Authorizable.sol...\r\nCompiling ./contracts/Collectable.sol...\r\nCompiling ./contracts/EightExToken.sol...\r\nCompiling ./contracts/Executor.sol...\r\nCompiling ./contracts/TransferProxy.sol...\r\nCompiling ./contracts/VolumeSubscription.sol...\r\nCompiling ./contracts/base/math/Math.sol...\r\nCompiling ./contracts/base/math/SafeMath.sol...\r\nCompiling ./contracts/base/ownership/Ownable.sol...\r\nCompiling ./contracts/base/token/BasicToken.sol...\r\nCompiling ./contracts/base/token/ERC20.sol...\r\nCompiling ./contracts/base/token/ERC20Basic.sol...\r\nCompiling ./contracts/base/token/StandardToken.sol...\r\n\r\nCompilation warnings encountered:\r\n\r\n/Users/kermankohli/crypto/ethme/contracts/base/ownership/Ownable.sol:19:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\r\n    function Ownable() public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\r\n,/Users/kermankohli/crypto/ethme/contracts/Collectable.sol:22:5: Warning: Modifiers of functions without implementation are ignored.\r\n    function subscriptionOwnerDoesntHaveEnoughFunds(bytes32 _subscription) onlyAuthorized public;\r\n    ^-------------------------------------------------------------------------------------------^\r\n,/Users/kermankohli/crypto/ethme/contracts/EightExToken.sol:15:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\r\n    function EightExToken() public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\r\n,/Users/kermankohli/crypto/ethme/contracts/EightExToken.sol:40:13: Warning: Invoking events without \"emit\" prefix is deprecated.\r\n            Transfer(_from, _to, _value);\r\n            ^--------------------------^\r\n\r\n\r\n\r\n  Contract: Authorizable\r\n    when adding an authorized address\r\n      ✓ should throw if not called by the owner\r\n      ✓ should allow the owner to add an authorized address (127ms)\r\n      ✓ should not allow an authorized address to add a duplicate address\r\n    when removing an authorized address\r\n      ✓ should throw if not called by the owner\r\n      ✓ should allow the owner to remove an authorized address (94ms)\r\n      ✓ should now allow the owner to remove a non-authorized address\r\n    when getting authorized addresses\r\n      ✓ should be able to return all the authorized addresses (188ms)\r\n\r\n  Contract: TransferProxy\r\n    ✓ should throw if an unauthorized address tries to transfer tokens (123ms)\r\n    ✓ should allow an authorized address to transfer tokens (364ms)\r\n\r\n  Contract: VolumeSubscription\r\n    ✓ should be able to intialise the plan contract correctly\r\n    ✓ should have the correct computed plan hash (89ms)\r\n    1) should have the correct computed subscription hash\r\n    > No events were emitted\r\n    when collecting money from the contract\r\n      ✓ should be able to terminate as an authorized address (426ms)\r\n      ✓ should be not be able to terminate as an unauthorized address (223ms)\r\n      ✓ should be able to determine a valid subscription (205ms)\r\n      ✓ should be able to determine an invalid subscription (290ms)\r\n      ✓ should be able to get the correct amount (203ms)\r\n    when creating a new plan\r\n      ✓ should be able to create a new plan correctly (108ms)\r\n      ✓ should not be able to create a plan without required details (188ms)\r\n      ✓ should not be able to create a plan with the same identifier (186ms)\r\n    when updating the owner of a plan\r\n      ✓ should be able to update as the owner (284ms)\r\n      ✓ should be not be able to update the owner as another user (159ms)\r\n    when updating the name of a plan\r\n      ✓ should be able to update as the owner (243ms)\r\n      ✓ should be not be able to update as another user (127ms)\r\n    when updating the description of a plan\r\n      ✓ should be able to update as the owner (185ms)\r\n      ✓ should be not be able to update as another user (119ms)\r\n    when updating the data of a plan\r\n      ✓ should be able to update as the owner (193ms)\r\n      ✓ should be not be able to update as another user (87ms)\r\n    when terminating a plan\r\n      ✓ should be able to terminate as the owner (203ms)\r\n      ✓ should not be able to terminate multiple times (201ms)\r\n      ✓ should not be able to terminate from a date in the past (236ms)\r\n      ✓ should not be able to terminate as another user (182ms)\r\n    when updating the data of a subscription\r\n      ✓ should be able to update as the owner (286ms)\r\n      ✓ should be not be able to update as another user (212ms)\r\n    when terminating a subscription\r\n      ✓ should be able to terminate as the owner (312ms)\r\n      2) should not be able to terminate multiple times\r\n\r\n    Events emitted during test:\r\n    ---------------------------\r\n\r\n    CreatedPlan(identifier: 0x5e5508da6762220619aeda638dcb0b33546297cc03cd1fb9fcb81167bf3183bd)\r\n\r\n    ---------------------------\r\n      ✓ should not be able to terminate from a date in the past (212ms)\r\n      ✓ should not be able to terminate as another user (209ms)\r\n\r\n\r\n  36 passing (8s)\r\n  2 failing\r\n\r\n  1) Contract: VolumeSubscription should have the correct computed subscription hash:\r\n     Error: VM Exception while processing transaction: revert\r\n      at Object.InvalidResponse (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/errors.js:38:1)\r\n      at /usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/requestmanager.js:86:1\r\n      at /usr/local/lib/node_modules/truffle/build/webpack:/~/truffle-provider/wrapper.js:134:1\r\n      at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/httpprovider.js:128:1)\r\n      at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:64:1)\r\n      at XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:354:1)\r\n      at XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:509:1)\r\n      at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:469:1)\r\n      at endReadableNT (_stream_readable.js:1106:12)\r\n      at process._tickCallback (internal/process/next_tick.js:114:19)\r\n\r\n  2) Contract: VolumeSubscription when terminating a subscription should not be able to terminate multiple times:\r\n     Error: VM Exception while processing transaction: revert\r\n      at Object.InvalidResponse (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/errors.js:38:1)\r\n      at /usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/requestmanager.js:86:1\r\n      at /usr/local/lib/node_modules/truffle/build/webpack:/~/truffle-provider/wrapper.js:134:1\r\n      at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/httpprovider.js:128:1)\r\n      at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:64:1)\r\n      at XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:354:1)\r\n      at XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:509:1)\r\n      at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:469:1)\r\n      at endReadableNT (_stream_readable.js:1106:12)\r\n      at process._tickCallback (internal/process/next_tick.js:114:19)\r\n\r\n\r\n\r\nethme master ✗ 21h40m ▲ △ ◒ ⍉ ➜ \r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384531164/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384531350",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-384531350",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 384531350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDUzMTM1MA==",
    "user": {
      "login": "kermankohli",
      "id": 2050929,
      "node_id": "MDQ6VXNlcjIwNTA5Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2050929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kermankohli",
      "html_url": "https://github.com/kermankohli",
      "followers_url": "https://api.github.com/users/kermankohli/followers",
      "following_url": "https://api.github.com/users/kermankohli/following{/other_user}",
      "gists_url": "https://api.github.com/users/kermankohli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kermankohli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kermankohli/subscriptions",
      "organizations_url": "https://api.github.com/users/kermankohli/orgs",
      "repos_url": "https://api.github.com/users/kermankohli/repos",
      "events_url": "https://api.github.com/users/kermankohli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kermankohli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T06:44:58Z",
    "updated_at": "2018-04-26T06:44:58Z",
    "author_association": "NONE",
    "body": "All those 3 tests were run straight after each other. Only the computed subscription hash test consistently fails.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384531350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384657108",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-384657108",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 384657108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY1NzEwOA==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T14:16:46Z",
    "updated_at": "2018-04-26T14:16:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kermankohli I wonder if it's related to the mix of `it` and `describe` blocks in that suite. `should have correct computed hash` sits in it's own async `it`, while the tests around it are encapsulated in sync describe blocks. The `contract` is being created once at the top of the file in a `before`, so the tests all share that object and its state is changed over the course of the `VolumeSubscription` suite. \r\n\r\nIf you change `before` to `beforeEach` (not sure that's feasible in your case) does that normalize the run? If so wrapping singleton `its'` in a `describe` might also help.  ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384657108/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384660790",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-384660790",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 384660790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY2MDc5MA==",
    "user": {
      "login": "kermankohli",
      "id": 2050929,
      "node_id": "MDQ6VXNlcjIwNTA5Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2050929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kermankohli",
      "html_url": "https://github.com/kermankohli",
      "followers_url": "https://api.github.com/users/kermankohli/followers",
      "following_url": "https://api.github.com/users/kermankohli/following{/other_user}",
      "gists_url": "https://api.github.com/users/kermankohli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kermankohli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kermankohli/subscriptions",
      "organizations_url": "https://api.github.com/users/kermankohli/orgs",
      "repos_url": "https://api.github.com/users/kermankohli/repos",
      "events_url": "https://api.github.com/users/kermankohli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kermankohli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T14:27:34Z",
    "updated_at": "2018-04-26T14:27:34Z",
    "author_association": "NONE",
    "body": "So I just tried getting rid of single `it` blocks and wrapping them in `describe`s. Also changed before to beforeEach. Both of these still yield the same results of the tests randomly failing...",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384660790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384666343",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-384666343",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 384666343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY2NjM0Mw==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T14:43:03Z",
    "updated_at": "2018-04-26T14:43:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kermankohli Mmmm. Maybe something about the way the times are being computed? What if you slow those tests way down by inserting at the top of each?\r\n```javascript\r\nawait setTimeout(() => new Promise((accept) => accept()), 1000)  // Or something like this . . .\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384666343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384669431",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-384669431",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 384669431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY2OTQzMQ==",
    "user": {
      "login": "kermankohli",
      "id": 2050929,
      "node_id": "MDQ6VXNlcjIwNTA5Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2050929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kermankohli",
      "html_url": "https://github.com/kermankohli",
      "followers_url": "https://api.github.com/users/kermankohli/followers",
      "following_url": "https://api.github.com/users/kermankohli/following{/other_user}",
      "gists_url": "https://api.github.com/users/kermankohli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kermankohli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kermankohli/subscriptions",
      "organizations_url": "https://api.github.com/users/kermankohli/orgs",
      "repos_url": "https://api.github.com/users/kermankohli/repos",
      "events_url": "https://api.github.com/users/kermankohli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kermankohli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T14:51:49Z",
    "updated_at": "2018-04-26T14:52:14Z",
    "author_association": "NONE",
    "body": "Okay so gave that a go and the same 12 tests fail which is good since at leas there's consistency in what's not working. Although still not sure what exactly is going on here.\r\n\r\n` await new Promise(resolve => setTimeout(resolve, 1000));` worked instead ;) ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384669431/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384679326",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-384679326",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 384679326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY3OTMyNg==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T15:17:02Z",
    "updated_at": "2018-04-26T15:17:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Lol ok great!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384679326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384679816",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-384679816",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 384679816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY3OTgxNg==",
    "user": {
      "login": "kermankohli",
      "id": 2050929,
      "node_id": "MDQ6VXNlcjIwNTA5Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2050929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kermankohli",
      "html_url": "https://github.com/kermankohli",
      "followers_url": "https://api.github.com/users/kermankohli/followers",
      "following_url": "https://api.github.com/users/kermankohli/following{/other_user}",
      "gists_url": "https://api.github.com/users/kermankohli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kermankohli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kermankohli/subscriptions",
      "organizations_url": "https://api.github.com/users/kermankohli/orgs",
      "repos_url": "https://api.github.com/users/kermankohli/repos",
      "events_url": "https://api.github.com/users/kermankohli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kermankohli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T15:18:12Z",
    "updated_at": "2018-04-26T15:18:12Z",
    "author_association": "NONE",
    "body": "Kind of - although why do you think the tests are failing randomly unless I have the delay? Can't see what's causing the race condition in this case. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384679816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384680815",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-384680815",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 384680815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY4MDgxNQ==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T15:20:36Z",
    "updated_at": "2018-04-26T15:20:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kermankohli I don't know - it must be something about the time values as they execute. Maybe the resolution is too low? If you put logging statements in to see what they are, the bug would probably go away too because those introduce their own delay. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384680815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384681617",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-384681617",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 384681617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY4MTYxNw==",
    "user": {
      "login": "kermankohli",
      "id": 2050929,
      "node_id": "MDQ6VXNlcjIwNTA5Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2050929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kermankohli",
      "html_url": "https://github.com/kermankohli",
      "followers_url": "https://api.github.com/users/kermankohli/followers",
      "following_url": "https://api.github.com/users/kermankohli/following{/other_user}",
      "gists_url": "https://api.github.com/users/kermankohli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kermankohli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kermankohli/subscriptions",
      "organizations_url": "https://api.github.com/users/kermankohli/orgs",
      "repos_url": "https://api.github.com/users/kermankohli/repos",
      "events_url": "https://api.github.com/users/kermankohli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kermankohli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T15:22:36Z",
    "updated_at": "2018-04-26T15:22:36Z",
    "author_association": "NONE",
    "body": "The time values for when the subscription is being created or you mean something else? Apart from logging is there any cleaner way of doing this? Although throughout my program, all the time logic is to check a date in the past so I'm not sure how it's caused a race condition to occur.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384681617/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384684037",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-384684037",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 384684037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY4NDAzNw==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T15:28:55Z",
    "updated_at": "2018-04-26T15:28:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kermankohli Does the contract rely on the block timestamp or `now` to evaluate past and future? ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384684037/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384684477",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-384684477",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 384684477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY4NDQ3Nw==",
    "user": {
      "login": "kermankohli",
      "id": 2050929,
      "node_id": "MDQ6VXNlcjIwNTA5Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2050929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kermankohli",
      "html_url": "https://github.com/kermankohli",
      "followers_url": "https://api.github.com/users/kermankohli/followers",
      "following_url": "https://api.github.com/users/kermankohli/following{/other_user}",
      "gists_url": "https://api.github.com/users/kermankohli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kermankohli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kermankohli/subscriptions",
      "organizations_url": "https://api.github.com/users/kermankohli/orgs",
      "repos_url": "https://api.github.com/users/kermankohli/repos",
      "events_url": "https://api.github.com/users/kermankohli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kermankohli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T15:29:57Z",
    "updated_at": "2018-04-26T15:29:57Z",
    "author_association": "NONE",
    "body": "Yup. In VolumeSubscription there's statements such as:\r\n```subscriptions[_subscription].terminationDate = block.timestamp;```\r\nand ```require(_terminationDate >= block.timestamp);```",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384684477/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384686751",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-384686751",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 384686751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY4Njc1MQ==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T15:35:45Z",
    "updated_at": "2018-04-26T15:35:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kermankohli Yes - this is a big issue. Effective resolution for block.timestamp is the amount of time it takes to mine a block. On mainnet  'many' seconds, on the test client, milliseconds. Ultimately the contract's idea of what time it is determines whether or not that require statement is true or not. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384686751/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384687400",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-384687400",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 384687400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY4NzQwMA==",
    "user": {
      "login": "kermankohli",
      "id": 2050929,
      "node_id": "MDQ6VXNlcjIwNTA5Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2050929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kermankohli",
      "html_url": "https://github.com/kermankohli",
      "followers_url": "https://api.github.com/users/kermankohli/followers",
      "following_url": "https://api.github.com/users/kermankohli/following{/other_user}",
      "gists_url": "https://api.github.com/users/kermankohli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kermankohli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kermankohli/subscriptions",
      "organizations_url": "https://api.github.com/users/kermankohli/orgs",
      "repos_url": "https://api.github.com/users/kermankohli/repos",
      "events_url": "https://api.github.com/users/kermankohli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kermankohli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T15:37:21Z",
    "updated_at": "2018-04-26T15:37:21Z",
    "author_association": "NONE",
    "body": "So essentially the time taken to mine the block may be greater than the existing time captured in Javascript?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384687400/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384711780",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-384711780",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 384711780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDcxMTc4MA==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T16:50:09Z",
    "updated_at": "2018-04-28T15:27:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "There's some information about on how Solidity thinks block.timestamp should be understood. It also looks like the expected precision is 1 second and believe that ganache respects that so suggestion above about `ms` is just wrong. \r\n\r\nThe safest thing might be to fetch the current block, read the timestamp, and generate a timestamp that is **definitely** earlier (or later) than what ganache thinks the time is. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384711780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384731514",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-384731514",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 384731514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDczMTUxNA==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T17:55:14Z",
    "updated_at": "2018-04-26T17:55:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kermankohli This is a very interesting topic today - more in depth discussion at #921 as well. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/384731514/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/385022886",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-385022886",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 385022886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTAyMjg4Ng==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-27T16:28:45Z",
    "updated_at": "2018-04-27T16:28:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kermankohli Should we keep this open? ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/385022886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/385167620",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-385167620",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 385167620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTE2NzYyMA==",
    "user": {
      "login": "kermankohli",
      "id": 2050929,
      "node_id": "MDQ6VXNlcjIwNTA5Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2050929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kermankohli",
      "html_url": "https://github.com/kermankohli",
      "followers_url": "https://api.github.com/users/kermankohli/followers",
      "following_url": "https://api.github.com/users/kermankohli/following{/other_user}",
      "gists_url": "https://api.github.com/users/kermankohli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kermankohli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kermankohli/subscriptions",
      "organizations_url": "https://api.github.com/users/kermankohli/orgs",
      "repos_url": "https://api.github.com/users/kermankohli/repos",
      "events_url": "https://api.github.com/users/kermankohli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kermankohli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-28T11:23:30Z",
    "updated_at": "2018-04-28T11:23:30Z",
    "author_association": "NONE",
    "body": "@cgewecke Not sure to be honest. Theoretically the only test that should be failing are the ones that are ones that rely on time logic. However there's tests which simply read data and fail due to `revert`. The only explanation I can see for it is that the `revert` is being called at an incorrect place in the test execution hence giving a \"random\" error variance.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/385167620/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/385184346",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-385184346",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 385184346,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTE4NDM0Ng==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-28T15:31:01Z",
    "updated_at": "2018-04-28T15:31:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kermankohli Ok, I'm going to rename this issue a little to narrow its scope. Please ping or close if you discover something. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/385184346/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387115495",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-387115495",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 387115495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzExNTQ5NQ==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T16:06:57Z",
    "updated_at": "2018-05-07T16:06:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kermankohli Did you ever get to the bottom of this? ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387115495/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387209913",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-387209913",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 387209913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzIwOTkxMw==",
    "user": {
      "login": "kermankohli",
      "id": 2050929,
      "node_id": "MDQ6VXNlcjIwNTA5Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2050929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kermankohli",
      "html_url": "https://github.com/kermankohli",
      "followers_url": "https://api.github.com/users/kermankohli/followers",
      "following_url": "https://api.github.com/users/kermankohli/following{/other_user}",
      "gists_url": "https://api.github.com/users/kermankohli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kermankohli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kermankohli/subscriptions",
      "organizations_url": "https://api.github.com/users/kermankohli/orgs",
      "repos_url": "https://api.github.com/users/kermankohli/repos",
      "events_url": "https://api.github.com/users/kermankohli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kermankohli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T21:18:55Z",
    "updated_at": "2018-05-07T21:18:55Z",
    "author_association": "NONE",
    "body": "@cgewecke yup finally did 3 days ago! so essentially when require statements are dependent on time they can cause failures at places which seem random. the way i solved this was create a mock contract that inherited from the actual contract and overrides a `currentTimestamp()` function of the actual contract to change the time to whatever I want. you can check it out at: https://github.com/8x-protocol/8x-protocol :)",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387209913/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387245019",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-387245019",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 387245019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzI0NTAxOQ==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T00:16:40Z",
    "updated_at": "2018-05-08T00:16:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, well thanks for opening - I'm sure this will be helpful to others. Closing since you found a way out. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387245019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387290254",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-387290254",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 387290254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzI5MDI1NA==",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T05:37:50Z",
    "updated_at": "2018-05-08T06:16:31Z",
    "author_association": "NONE",
    "body": "@kermankohli - side note:\r\n\r\nI believe that you have a logical error in file https://github.com/8x-protocol/8x-protocol/blob/master/test/helpers/assert_revert.js.\r\n\r\nIf `promise` is completed successfully, then you throw an exception with an error message containing `\"revert\"`.\r\n\r\nYou then catch this error, and since its message contains `\"revert\"`, you determine that the test has completed successfully.\r\n\r\nInstead, I suggest that you `throw null`, and then first thing inside the `catch`, you do:\r\n\r\n    assert(error, 'Expected an error containing \"revert\" but did not get any');",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387290254/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387384358",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-387384358",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 387384358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzM4NDM1OA==",
    "user": {
      "login": "kermankohli",
      "id": 2050929,
      "node_id": "MDQ6VXNlcjIwNTA5Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2050929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kermankohli",
      "html_url": "https://github.com/kermankohli",
      "followers_url": "https://api.github.com/users/kermankohli/followers",
      "following_url": "https://api.github.com/users/kermankohli/following{/other_user}",
      "gists_url": "https://api.github.com/users/kermankohli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kermankohli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kermankohli/subscriptions",
      "organizations_url": "https://api.github.com/users/kermankohli/orgs",
      "repos_url": "https://api.github.com/users/kermankohli/repos",
      "events_url": "https://api.github.com/users/kermankohli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kermankohli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T12:23:16Z",
    "updated_at": "2018-05-08T12:23:16Z",
    "author_association": "NONE",
    "body": "@barakman thanks for that although not sure what you mean. the function is meant to throw an exception if the promise executes since we didn't want it to execute in the first place. feel free to correct me if i'm wrong/misunderstanding you though :)",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387384358/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387508775",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-387508775",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 387508775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzUwODc3NQ==",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T19:04:45Z",
    "updated_at": "2018-05-08T19:33:49Z",
    "author_association": "NONE",
    "body": "@kermankohli:\r\nExactly, but this exception is thrown in the `try` part and caught in the `catch` part.\r\nThen, in the `catch` part, you throw another exception, and that exception is the one that will eventually indicate whether the test has succeeded or failed.\r\nNow, take a look at that exception (the one thrown from inside the `catch` part) - it is thrown only if the error message **does not** contain `\"revert\"`.\r\n\r\nSo, let's analyze a scenario in which the `promise` completes successfully, hence the test **should fail**:\r\n\r\n- In the `try` part, the `promise` completes successfully\r\n- In the `try` part, you throw an exception with `\"revert\"` in its error message\r\n- In the `catch` part, you detect `\"revert\"` in the error message and do not throw an exception\r\n- No exception is thrown, and the test **completes successfully**\r\n\r\nIn order to understand the logical confusion, keep in mind that there are two different failure scenarios which you need to detect and handle:\r\n\r\n1. No error has occurred (the `promise` has completed successfully)\r\n2. An error without `\"revert\"` has occurred (the `promise` has failed but not because of `require`)\r\n\r\nIn your code, I believe that you detect the first scenario correctly, but you handle it incorrectly.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387508775/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387537090",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-387537090",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 387537090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzUzNzA5MA==",
    "user": {
      "login": "kermankohli",
      "id": 2050929,
      "node_id": "MDQ6VXNlcjIwNTA5Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2050929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kermankohli",
      "html_url": "https://github.com/kermankohli",
      "followers_url": "https://api.github.com/users/kermankohli/followers",
      "following_url": "https://api.github.com/users/kermankohli/following{/other_user}",
      "gists_url": "https://api.github.com/users/kermankohli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kermankohli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kermankohli/subscriptions",
      "organizations_url": "https://api.github.com/users/kermankohli/orgs",
      "repos_url": "https://api.github.com/users/kermankohli/repos",
      "events_url": "https://api.github.com/users/kermankohli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kermankohli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T20:46:32Z",
    "updated_at": "2018-05-08T20:46:32Z",
    "author_association": "NONE",
    "body": "@barakman ah - i get what you're saying although the \"assert.throw\" shows in the console and fails the tests so it doesn't matter if the catch block marks it as a success since it's already failed. i've manually tested out the code by providing it passing and failing conditions and it works as expected. also, the code is actually from OpenZepelin so might be worth discussing it with them however you should create a demo project and test it out for yourself first https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/test/helpers/assertRevert.js.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387537090/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387635172",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-387635172",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 387635172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzYzNTE3Mg==",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T06:34:58Z",
    "updated_at": "2018-05-09T07:20:51Z",
    "author_association": "NONE",
    "body": "@kermankohli:\r\n\r\nOK, perhaps I am missing something.\r\n\r\nThe thing to understand is that the Mocha framework reports a failure only when your test (`it`) throws an exception.\r\nWhen that happens, the Mocha framework catches this exception and reports failure on the specific test at hand.\r\nWhen you throw an exception and immediately catch it, the Mocha framework is not even aware of it.\r\n\r\nThat said, here is my analysis of your code and why I think it handles a specific scenario incorrectly:\r\n```\r\ntry { // an exception will be thrown from inside this 'try' clause for sure\r\n  await promise; // either here (if the promise has failed)\r\n  assert.fail('Expected revert not received'); // or here (if the promise has succeeded)\r\n} catch (error) { // but this exception will be immediately caught inside this 'catch' clause\r\n  const revertFound = error.message.search('revert') >= 0;\r\n  assert(revertFound, `Expected \"revert\", got ${error} instead`);\r\n}\r\n```\r\nNow, let's analyze the `catch` clause:\r\n\r\n- An exception will be thrown by the `assert` only if `'revert'` is not found in the error message.\r\n- If no exception is thrown, then the Mocha framework will report success on the given test.\r\n- When the promise succeeds, the error message is `'Expected revert not received'`, hence contains `'revert'`.\r\n - Hence no exception is thrown and the test will succeed although it should fail because the `promise` succeeded.\r\n\r\nIn any case, I have posted it on Zeppelin GIT as well ([here](https://github.com/OpenZeppelin/openzeppelin-solidity/issues/938)).",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387635172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387764671",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-387764671",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 387764671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Nzc2NDY3MQ==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T14:48:41Z",
    "updated_at": "2018-05-09T14:48:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@barakman Nice catch!!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387764671/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387960104",
    "html_url": "https://github.com/trufflesuite/truffle/issues/920#issuecomment-387960104",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/920",
    "id": 387960104,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Nzk2MDEwNA==",
    "user": {
      "login": "barakman",
      "id": 7003246,
      "node_id": "MDQ6VXNlcjcwMDMyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7003246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barakman",
      "html_url": "https://github.com/barakman",
      "followers_url": "https://api.github.com/users/barakman/followers",
      "following_url": "https://api.github.com/users/barakman/following{/other_user}",
      "gists_url": "https://api.github.com/users/barakman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barakman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barakman/subscriptions",
      "organizations_url": "https://api.github.com/users/barakman/orgs",
      "repos_url": "https://api.github.com/users/barakman/repos",
      "events_url": "https://api.github.com/users/barakman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barakman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-10T05:58:15Z",
    "updated_at": "2018-05-10T05:58:15Z",
    "author_association": "NONE",
    "body": "@cgewecke: Thank you, but keep in mind that the `catch` is where the actual problem hides in this case.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/387960104/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
