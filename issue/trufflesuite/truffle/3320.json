{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/3320",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3320/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3320/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3320/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/3320",
  "id": 686900587,
  "node_id": "MDU6SXNzdWU2ODY5MDA1ODc=",
  "number": 3320,
  "title": "Question: Getting internal details of delegatecall function call",
  "user": {
    "login": "rstormsf",
    "id": 9360827,
    "node_id": "MDQ6VXNlcjkzNjA4Mjc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9360827?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rstormsf",
    "html_url": "https://github.com/rstormsf",
    "followers_url": "https://api.github.com/users/rstormsf/followers",
    "following_url": "https://api.github.com/users/rstormsf/following{/other_user}",
    "gists_url": "https://api.github.com/users/rstormsf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rstormsf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rstormsf/subscriptions",
    "organizations_url": "https://api.github.com/users/rstormsf/orgs",
    "repos_url": "https://api.github.com/users/rstormsf/repos",
    "events_url": "https://api.github.com/users/rstormsf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rstormsf/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 230393331,
      "node_id": "MDU6TGFiZWwyMzAzOTMzMzE=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/question",
      "name": "question",
      "color": "cc317c",
      "default": true,
      "description": null
    },
    {
      "id": 1403343142,
      "node_id": "MDU6TGFiZWwxNDAzMzQzMTQy",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/needs%20investigated",
      "name": "needs investigated",
      "color": "b7410e",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2020-08-27T03:03:28Z",
  "updated_at": "2020-09-23T18:01:21Z",
  "closed_at": "2020-09-23T18:01:20Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Lets say I have this contract: \r\n```js\r\ncontract Primary {\r\n  function execute(address target) public returns(bytes) {\r\n        (bool success, bytes memory returnedDataFromDelegateCall) = target.delegatecall(\r\n            abi.encodeWithSignature(\"execute()\")\r\n        );\r\n        if (!success) {\r\n            if (data.length > 0) {\r\n                revert(string(data));\r\n            } else {\r\n                revert(\"delegatecall failed\");\r\n            }\r\n        }\r\n        return returnedDataFromDelegateCall;\r\n    }\r\n}\r\n```\r\n\r\nthen we deploy Target contract\r\n\r\n```js\r\n\r\ncontract Proposal {\r\n    event Debug(address x);\r\n\r\n    function executeProposal() public returns(address) {\r\n        Dummy dummyInstance = new Dummy();\r\n        dummyInstance.initialize();\r\n        emit Debug(address(dummyInstance));\r\n        return address(dummyInstance);\r\n    }\r\n}\r\n```\r\n\r\nTest.js\r\n```js\r\nconst target = await Target.new()\r\nconst primary = await Primary.new()\r\nconst receipt = await primary.execute(target.address)\r\nconsole.log('???', receipt)\r\n```\r\n\r\nQuestions:\r\n1. How to capture Debug event?\r\n2. How to read `returnedDataFromDelegateCall` \r\n3. How to read internal tx to see that the tx deployed a new contract? ",
  "closed_by": {
    "login": "eggplantzzz",
    "id": 14827965,
    "node_id": "MDQ6VXNlcjE0ODI3OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/eggplantzzz",
    "html_url": "https://github.com/eggplantzzz",
    "followers_url": "https://api.github.com/users/eggplantzzz/followers",
    "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
    "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
    "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
    "repos_url": "https://api.github.com/users/eggplantzzz/repos",
    "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/3320/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3320/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/681344326",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3320#issuecomment-681344326",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3320",
    "id": 681344326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTM0NDMyNg==",
    "user": {
      "login": "rstormsf",
      "id": 9360827,
      "node_id": "MDQ6VXNlcjkzNjA4Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9360827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rstormsf",
      "html_url": "https://github.com/rstormsf",
      "followers_url": "https://api.github.com/users/rstormsf/followers",
      "following_url": "https://api.github.com/users/rstormsf/following{/other_user}",
      "gists_url": "https://api.github.com/users/rstormsf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rstormsf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rstormsf/subscriptions",
      "organizations_url": "https://api.github.com/users/rstormsf/orgs",
      "repos_url": "https://api.github.com/users/rstormsf/repos",
      "events_url": "https://api.github.com/users/rstormsf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rstormsf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-27T03:53:38Z",
    "updated_at": "2020-08-27T03:54:09Z",
    "author_association": "NONE",
    "body": "Solution for 1.\r\n```js\r\nconst receipt = await primary.execute(target.address)\r\nconst debugLog = receipt.receipt.rawLogs[0]\r\nconst decodedLog = web3.eth.abi.decodeLog([{\r\n   type: 'address',\r\n   name: 'x'\r\n}], debugLog.data, debugLog.topics[0])\r\nconsole.log(decodedLog)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/681344326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/682161303",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3320#issuecomment-682161303",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3320",
    "id": 682161303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjE2MTMwMw==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-27T20:00:28Z",
    "updated_at": "2020-08-27T20:01:11Z",
    "author_association": "MEMBER",
    "body": "(In addition to the questions) So looks like there's a bug in @truffle/decoder.\r\n\r\n@rstormsf I put together your example in a repo: https://github.com/gnidan-finds-bugs/missing-decoding\r\n\r\nNote this failing test: https://github.com/gnidan-finds-bugs/missing-decoding/blob/master/test/decode.js#L7-L17",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/682161303/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/682285569",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3320#issuecomment-682285569",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3320",
    "id": 682285569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjI4NTU2OQ==",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-28T02:14:07Z",
    "updated_at": "2020-08-28T02:14:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hm, so, this is troublesome.  The reason the decoder is failing here so much a *bug* so much this case falling outside its design.\r\n\r\nBasically, the decoder assumes that only libraries will get delegatecalled.  What's happening in this case is that the decoder sees an log originating from `Primary` and says, well, `Primary` doesn't define any events; it has no ancestors to inherit events from; and there are no libraries it could have delegatecalled that could emit an event on its behalf.  Therefore, I can't decode this.  It doesn't consider the possibility that `Proposal` could have been delegatecalled, and is emitting the event on behalf of `Primary`, because `Proposal` isn't a library.\r\n\r\nI'm not entirely sure what the best way for us to handle this is.  Like in order for this to work, the decoder would have to always consider *any* event as a possibility, regardless of where it's defined, but this could junk up the output with spurious decodings in some cases; there's a reason I didn't write the decoder that way initially.\r\n\r\nThat said, perhaps we could organize the output so that this isn't so much a problem.  @gnidan has also suggested that perhaps this could be handled with some sort of option on `decodeLog`.  I'm not sure what the right approach is here; we'll have to figure it out...",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/682285569/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/685893484",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3320#issuecomment-685893484",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3320",
    "id": 685893484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTg5MzQ4NA==",
    "user": {
      "login": "fainashalts",
      "id": 8952139,
      "node_id": "MDQ6VXNlcjg5NTIxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8952139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fainashalts",
      "html_url": "https://github.com/fainashalts",
      "followers_url": "https://api.github.com/users/fainashalts/followers",
      "following_url": "https://api.github.com/users/fainashalts/following{/other_user}",
      "gists_url": "https://api.github.com/users/fainashalts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fainashalts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fainashalts/subscriptions",
      "organizations_url": "https://api.github.com/users/fainashalts/orgs",
      "repos_url": "https://api.github.com/users/fainashalts/repos",
      "events_url": "https://api.github.com/users/fainashalts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fainashalts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-02T17:42:30Z",
    "updated_at": "2020-09-02T17:42:30Z",
    "author_association": "MEMBER",
    "body": "We should make a new separate issue for the decoder stuff to figure out how that should work. Leaving this issue open for now as well to look into all the open questions here. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/685893484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/697801237",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3320#issuecomment-697801237",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3320",
    "id": 697801237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NzgwMTIzNw==",
    "user": {
      "login": "eggplantzzz",
      "id": 14827965,
      "node_id": "MDQ6VXNlcjE0ODI3OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggplantzzz",
      "html_url": "https://github.com/eggplantzzz",
      "followers_url": "https://api.github.com/users/eggplantzzz/followers",
      "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
      "repos_url": "https://api.github.com/users/eggplantzzz/repos",
      "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-23T18:01:20Z",
    "updated_at": "2020-09-23T18:01:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "We opened issues #3387 and #3388 to keep track of some problems raised here. Closing this in favor of those. Thanks @rstormsf!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/697801237/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
