{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/2025",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2025/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2025/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2025/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/2025",
  "id": 444861142,
  "node_id": "MDU6SXNzdWU0NDQ4NjExNDI=",
  "number": 2025,
  "title": "Debugger doesn't cope with imports not from files",
  "user": {
    "login": "gilesbradshaw",
    "id": 597115,
    "node_id": "MDQ6VXNlcjU5NzExNQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/597115?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gilesbradshaw",
    "html_url": "https://github.com/gilesbradshaw",
    "followers_url": "https://api.github.com/users/gilesbradshaw/followers",
    "following_url": "https://api.github.com/users/gilesbradshaw/following{/other_user}",
    "gists_url": "https://api.github.com/users/gilesbradshaw/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gilesbradshaw/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gilesbradshaw/subscriptions",
    "organizations_url": "https://api.github.com/users/gilesbradshaw/orgs",
    "repos_url": "https://api.github.com/users/gilesbradshaw/repos",
    "events_url": "https://api.github.com/users/gilesbradshaw/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gilesbradshaw/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 971535002,
      "node_id": "MDU6TGFiZWw5NzE1MzUwMDI=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/Debugger",
      "name": "Debugger",
      "color": "7911ad",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "gnidan",
    "id": 151065,
    "node_id": "MDQ6VXNlcjE1MTA2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gnidan",
    "html_url": "https://github.com/gnidan",
    "followers_url": "https://api.github.com/users/gnidan/followers",
    "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
    "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
    "organizations_url": "https://api.github.com/users/gnidan/orgs",
    "repos_url": "https://api.github.com/users/gnidan/repos",
    "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gnidan/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-05-16T09:53:26Z",
  "updated_at": "2020-07-22T18:19:17Z",
  "closed_at": "2020-07-22T18:19:17Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "- [x ] I've asked for help in the [Truffle Gitter](http://gitter.im/Consensys/truffle) before filing this issue.\r\n\r\n---------------------------\r\n\r\n## Issue\r\n\r\nDebugger doesn't cope with imports not from files.\r\n\r\nI hope this makes sense - I am new to all this!\r\n\r\nSo the app whose contracts I am trying to debug compiles its solidity code with the solc compiler - but it's generating the solidity from templates so they are never files.\r\n\r\nfor example this is how it is compiling solidity code:\r\n\r\n````\r\nimport _truffleCompile from 'truffle-compile'\r\n\r\nconst truffleCompile = solidity =>\r\n  new Promise(\r\n    (resolve, reject) =>\r\n      _truffleCompile(\r\n        solidity,\r\n        {\r\n          contracts_directory: 'i do not care',\r\n          compilers: {\r\n            solc: {\r\n              settings: {\r\n                \"optimizer\": {\r\n                  \"enabled\": false,\r\n                  \"runs\": 200\r\n                },\r\n                \"evmVersion\": \"byzantium\",      \r\n                outputSelection: {\r\n                  '*': {\r\n                    '*': ['*']\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        (err, result) => err ? reject(err) : resolve(result))\r\n      )\r\n\r\nconst contracts = await truffleCompile({\r\n    ...sources,\r\n    [model.id]: model.solidity,\r\n  })  \r\n  \r\n````\r\n\r\nThis means the imports in the solidity looks like this:\r\n\r\n````\r\nimport \"AbstractRegistry\";\r\n\r\n````\r\n\r\nhowever I can't get your debugger to compile these contracts by just passing it a directory with the contracts in as the imports aren't from .sol files.  It gives me the error:\r\n\r\n````\r\nStarting Truffle Debugger...\r\nâ ¹ Compiling your contracts...Error: Error: Could not find AbstractRegistry from any sources; imported from /home/giles/ipbm/ipbm/src/truffle/contracts/AbstractProcess.sol\r\n    at async.whilst.error (/usr/lib/node_modules/truffle/build/webpack:/packages/truffle-compile/profiler.js:381:1)\r\n    at /usr/lib/node_modules/truffle/build/webpack:/packages/truffle-compile/~/async/dist/async.js:969:1\r\n    at next (/usr/lib/node_modules/truffle/build/webpack:/packages/truffle-compile/~/async/dist/async.js:5222:1)\r\nTruffle v5.0.17 (core: 5.0.16)\r\nNode v11.14.0\r\n\r\n````\r\n\r\nI can make them compile by changing the import to:\r\n\r\n````\r\nimport \"AbstractRegistry.sol\";\r\n````\r\n\r\nhowever now I can't debug them as any change to the source code changes the byte code and they won't be recognised.\r\n\r\nI 'fixed' this by hacking your code (truffle/packages/truffle-core/lib/commands/debug.js)\r\n\r\n````\r\nlet compilePromise = new Promise(function(resolve, reject) {\r\n          \r\n          compileSpinner = ora(\"Compiling your contracts...\").start();\r\n\r\n          fs.readdir(process.cwd() + '/contracts', function(err, filePaths) {\r\n            if (err) {\r\n              reject(err);\r\n              return;\r\n            }\r\n            resolve(filePaths);\r\n          });\r\n        })\r\n          .then(\r\n            files => Promise.all(\r\n              files\r\n                .map(\r\n                  (file) => new Promise(\r\n                    (resolve, reject) =>\r\n                      fs.readFile(\r\n                        `${process.cwd()}/contracts/${file}`,\r\n                         (err, text) => {\r\n                           if (err) {\r\n                             return reject(err);\r\n                           }\r\n                           resolve(text);\r\n                         }\r\n                      )\r\n                  )\r\n                  .then(\r\n                    text => ({\r\n                      file,\r\n                      text,\r\n                    })\r\n                  )\r\n                )\r\n            )\r\n          )\r\n            .then(\r\n              files => files\r\n                .reduce(\r\n                  (\r\n                    acc,\r\n                    {\r\n                      file,\r\n                      text\r\n                    }\r\n                  ) => {\r\n                      acc[file.substring( 0, file.indexOf( \".sol\" ) )] = text.toString()\r\n                      return acc;\r\n                  },\r\n                  {},\r\n                )\r\n            )\r\n            .then(\r\n              files => new Promise(function(accept, reject) {\r\n                //we need to set up a config object for the compiler.\r\n                //it's the same as the existing config, but we turn on quiet.\r\n                //unfortunately, we don't have Babel here, so cloning is annoying.\r\n                let compileConfig = Object.assign(\r\n                  {},\r\n                  ...Object.entries(config).map(([key, value]) => ({ [key]: value }))\r\n                ); //clone\r\n                compileConfig.quiet = true;\r\n\r\n                compile(files, compileConfig, function(err, contracts, files) {\r\n                  if (err) {\r\n                    return reject(err);\r\n                  }\r\n        \r\n                  return accept({\r\n                    contracts: contracts,\r\n                    files: files\r\n                  });\r\n                });\r\n              })\r\n            );\r\n        \r\n````\r\n(lack of babel means I had to do that nasty mutate in the reduce...)\r\n\r\nhowever now it won't work with .sol style imports\r\n\r\nAm I missing something here?  Is there another way to make it cope with this use case?  \r\n \r\n## Steps to Reproduce\r\n\r\nI can provide my source files if you'd like..\r\n\r\n## Expected Behavior\r\n\r\nIt to work with non .sol style imports\r\n\r\n## Actual Results\r\n\r\nIt won't\r\n\r\n## Environment\r\n\r\n* Operating System: ubuntu\r\n* Ethereum client: ganache-cli\r\n* Truffle version Truffle v5.0.17 (core: 5.0.16)\r\n* node version Node v11.14.0\r\n* npm version 6.7.0 \r\n",
  "closed_by": {
    "login": "eggplantzzz",
    "id": 14827965,
    "node_id": "MDQ6VXNlcjE0ODI3OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/eggplantzzz",
    "html_url": "https://github.com/eggplantzzz",
    "followers_url": "https://api.github.com/users/eggplantzzz/followers",
    "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
    "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
    "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
    "repos_url": "https://api.github.com/users/eggplantzzz/repos",
    "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/2025/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2025/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/493332871",
    "html_url": "https://github.com/trufflesuite/truffle/issues/2025#issuecomment-493332871",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2025",
    "id": 493332871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzMzMjg3MQ==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-17T06:09:02Z",
    "updated_at": "2019-05-17T06:09:02Z",
    "author_association": "MEMBER",
    "body": "Hm, I think I concur with the problem, but it's hard to see what the implications of your changes are. It seems like the root of the problem is the mismatch between the use of JSON artifacts vs. the debug compilation step?\r\n\r\nI could go into more detail (and I had started to), but lib/commands/debug is too much of a mess, making it difficult to communicate about. This was the last straw, and I just opened #2030 attempting to fix that. Could you perhaps take a look at the new [CLIDebugger](https://github.com/trufflesuite/truffle/blob/await-debug/packages/truffle-core/lib/debug/index.js) class that I put together, which will hopefully make it easier for you to see what's going on?\r\n\r\nI'm not certain, but I believe you've identified something with a tractable fix, but I don't believe there's any hope of us fixing it until that PR is merged to untangle the spaghetti. If you could rewrite your hack to conform to how it's done on that `await-debug` branch (or even open a draft PR so we can look at diffs!), that would help tremendously in being able to talk about this limitation you've identified.\r\n\r\nThank you for raising this issue!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/493332871/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/493511596",
    "html_url": "https://github.com/trufflesuite/truffle/issues/2025#issuecomment-493511596",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2025",
    "id": 493511596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzUxMTU5Ng==",
    "user": {
      "login": "gilesbradshaw",
      "id": 597115,
      "node_id": "MDQ6VXNlcjU5NzExNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/597115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gilesbradshaw",
      "html_url": "https://github.com/gilesbradshaw",
      "followers_url": "https://api.github.com/users/gilesbradshaw/followers",
      "following_url": "https://api.github.com/users/gilesbradshaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/gilesbradshaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gilesbradshaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gilesbradshaw/subscriptions",
      "organizations_url": "https://api.github.com/users/gilesbradshaw/orgs",
      "repos_url": "https://api.github.com/users/gilesbradshaw/repos",
      "events_url": "https://api.github.com/users/gilesbradshaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gilesbradshaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-17T16:14:56Z",
    "updated_at": "2019-05-17T16:14:56Z",
    "author_association": "NONE",
    "body": "Hi I've done just that!  best wishes (sorry to be the last straw :D)",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/493511596/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/662609673",
    "html_url": "https://github.com/trufflesuite/truffle/issues/2025#issuecomment-662609673",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2025",
    "id": 662609673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjYwOTY3Mw==",
    "user": {
      "login": "eggplantzzz",
      "id": 14827965,
      "node_id": "MDQ6VXNlcjE0ODI3OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggplantzzz",
      "html_url": "https://github.com/eggplantzzz",
      "followers_url": "https://api.github.com/users/eggplantzzz/followers",
      "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
      "repos_url": "https://api.github.com/users/eggplantzzz/repos",
      "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-22T18:19:17Z",
    "updated_at": "2020-07-22T18:19:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing this for issue maintenance. @gilesbradshaw we'll be happy to re-open this if you think we still want to create some sort of solution for this!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/662609673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
