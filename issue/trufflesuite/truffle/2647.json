{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/2647",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2647/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2647/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2647/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/2647",
  "id": 529307890,
  "node_id": "MDU6SXNzdWU1MjkzMDc4OTA=",
  "number": 2647,
  "title": "Please add helper methods to test contract failures",
  "user": {
    "login": "digulla",
    "id": 159306,
    "node_id": "MDQ6VXNlcjE1OTMwNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/159306?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/digulla",
    "html_url": "https://github.com/digulla",
    "followers_url": "https://api.github.com/users/digulla/followers",
    "following_url": "https://api.github.com/users/digulla/following{/other_user}",
    "gists_url": "https://api.github.com/users/digulla/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/digulla/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/digulla/subscriptions",
    "organizations_url": "https://api.github.com/users/digulla/orgs",
    "repos_url": "https://api.github.com/users/digulla/repos",
    "events_url": "https://api.github.com/users/digulla/events{/privacy}",
    "received_events_url": "https://api.github.com/users/digulla/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 230393328,
      "node_id": "MDU6TGFiZWwyMzAzOTMzMjg=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/enhancement",
      "name": "enhancement",
      "color": "84b6eb",
      "default": true,
      "description": null
    },
    {
      "id": 1041903922,
      "node_id": "MDU6TGFiZWwxMDQxOTAzOTIy",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/truffle%20test",
      "name": "truffle test",
      "color": "bfdadc",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2019-11-27T12:11:17Z",
  "updated_at": "2019-11-28T15:30:57Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "- [ ] I've asked for help in the [Truffle Gitter](http://gitter.im/Consensys/truffle) before filing this issue.\r\n\r\n---------------------------\r\n\r\nI'd like to make sure contracts contain the necessary `require()` calls and that they trigger under the correct circumstances.\r\n\r\nThis is especially important when using modifiers and inheritance between contracts.\r\n```solidity\r\n    contract Foo {\r\n        address owner;\r\n\r\n        constructor() public {\r\n            owner = msg.sender;\r\n        }\r\n\r\n        function transferOwnership(address newOwner) public {\r\n            require(owner == msg.sender, 'Only the current owner can transfer ownership');\r\n        }\r\n    }\r\n```\r\nProposed syntax:\r\n```javascript\r\n    contract('Foo Tests', (accounts) => {\r\n        const deployer = accounts[0]\r\n        const someoneElse = accounts[1]\r\n\r\n        it('should be possible to test require()', async () => {\r\n            const foo = Foo.new() // implicit: from: deployer\r\n\r\n            // Try to steal foo\r\n            expect(() => \r\n                foo.transferOwnership(someoneElse, {from: someoneElse})\r\n            ).to.require('Only the current owner can transfer ownership')\r\n        })\r\n    })\r\n```\r\nI tried to make this work with this code:\r\n```javascript\r\n    // Based on https://stackoverflow.com/a/56104568/34088\r\n    const getErrorTypeName = (errorType) => {\r\n        let result = type(errorType);\r\n        if (result === 'function') {\r\n            result = errorType.name;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const expectThrowsAsync = async (method, errorType, errorMessage) => {\r\n        let error = null;\r\n        try {\r\n            await method();\r\n        } catch (err) {\r\n            error = err\r\n        }\r\n        if (error) {\r\n            if (typeof(errorType) === 'string') {\r\n                expect(getErrorTypeName(error)).to.equal(errorType);\r\n            } else {\r\n                expect(error).to.be.an.instanceof(errorType);\r\n            }\r\n        } else {\r\n            const typeName = getErrorTypeName(errorType);\r\n            assert.fail(`Missing exception of type \"${typeName}\"`);\r\n        }\r\n        if (errorMessage) {\r\n            expect(error.message).to.equal(errorMessage);\r\n        }\r\n    }\r\n```\r\nbut this **sometimes** fails when there are more `contract()`s in a single test. If I use this in a method of the first `contract()`, then I'll get weird exceptions (\"Returned values aren't valid, did it run Out of Gas?\" or \"Uncaught Error: abort({}). Build with -s ASSERTIONS=1 for more info.\" or the tests pass when they shouldn't. I don't know enough about mocha/chai/truffle to understand why this happens.\r\n\r\nHere is the full code for `foo_test.ts`:\r\n\r\n```javascript\r\nconst Foo = artifacts.require(\"Foo\");\r\n\r\nvar type = require('type-detect');\r\n\r\n// Based on https://stackoverflow.com/a/56104568/34088\r\nconst getErrorTypeName = (errorType) => {\r\n    let result = type(errorType);\r\n    if (result === 'function') {\r\n        result = errorType.name;\r\n    }\r\n    return result;\r\n}\r\n\r\nconst expectThrowsAsync = async (method, errorType, errorMessage) => {\r\n    let error = null;\r\n    try {\r\n        await method();\r\n    } catch (err) {\r\n        error = err\r\n    }\r\n    if (error) {\r\n        if (typeof(errorType) === 'string') {\r\n            expect(getErrorTypeName(error)).to.equal(errorType);\r\n        } else {\r\n            expect(error).to.be.an.instanceof(errorType);\r\n        }\r\n    } else {\r\n        const typeName = getErrorTypeName(errorType);\r\n        assert.fail(`Missing exception of type \"${typeName}\"`);\r\n    }\r\n    if (errorMessage) {\r\n        expect(error.message).to.equal(errorMessage);\r\n    }\r\n}\r\n\r\ncontract('Foo Tests', (accounts) => {\r\n    const deployer = accounts[0]\r\n    const newOwner = accounts[1]\r\n    const someoneElse = accounts[2]\r\n\r\n    it('should work', async () => {\r\n        const foo = await Foo.new()\r\n\r\n        await foo.transferOwnership(newOwner)\r\n    })\r\n\r\n    it('stealing should not work', async () => {\r\n        const foo = await Foo.new()\r\n\r\n        expectThrowsAsync(() =>\r\n            foo.transferOwnership(someoneElse, {from: someoneElse}),\r\n            Error,\r\n            'xxx' // Should fail because of mismatch\r\n        )\r\n    })\r\n})\r\n\r\ncontract('Second Test', (accounts) => {\r\n    it('should always pass', () => {\r\n        expect(true).to.be.true\r\n    })\r\n})\r\n```\r\n\r\nMy `package.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"ballot\",\r\n    \"version\": \"0.0.1\",\r\n    \"dependencies\": {\r\n        \"truffle\": \"^5.1.1\"\r\n    },\r\n    \"devDependencies\": {\r\n        \"chai\": \"^4.2.0\",\r\n        \"solidity-coverage\": \"^0.6.7\",\r\n        \"ts-node\": \"^8.5.2\",\r\n        \"typescript\": \"^3.7.2\"\r\n    }\r\n}\r\n```\r\n\r\n## Environment\r\n\r\n* Operating System: linux\r\n* Ethereum client: Whatever `truffle init` gave me\r\n* node version (`node --version`): v11.15.0\r\n* npm version (`npm --version`): 6.10.2\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/2647/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2647/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/559097020",
    "html_url": "https://github.com/trufflesuite/truffle/issues/2647#issuecomment-559097020",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2647",
    "id": 559097020,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTA5NzAyMA==",
    "user": {
      "login": "digulla",
      "id": 159306,
      "node_id": "MDQ6VXNlcjE1OTMwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/159306?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/digulla",
      "html_url": "https://github.com/digulla",
      "followers_url": "https://api.github.com/users/digulla/followers",
      "following_url": "https://api.github.com/users/digulla/following{/other_user}",
      "gists_url": "https://api.github.com/users/digulla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/digulla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/digulla/subscriptions",
      "organizations_url": "https://api.github.com/users/digulla/orgs",
      "repos_url": "https://api.github.com/users/digulla/repos",
      "events_url": "https://api.github.com/users/digulla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/digulla/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-27T13:55:02Z",
    "updated_at": "2019-11-27T13:55:14Z",
    "author_association": "NONE",
    "body": "Related to #2497 \r\n\r\nNote: The tests above will only start to pass after adding\r\n\r\n    if (typeof(err) === 'string') {\r\n      err = Error(err);\r\n    }\r\n\r\nafter the line\r\n\r\n    Runner.prototype.uncaught = function(err) {\r\n\r\nof `./node_modules/truffle/node_modules/mocha/lib/runner.js` (around line 730).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/559097020/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/559210598",
    "html_url": "https://github.com/trufflesuite/truffle/issues/2647#issuecomment-559210598",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2647",
    "id": 559210598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTIxMDU5OA==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-27T18:52:05Z",
    "updated_at": "2019-11-27T18:52:05Z",
    "author_association": "MEMBER",
    "body": "This is a neat idea, thanks for suggesting it!\r\n\r\nYou might be interested to take a look at @rkalis's https://github.com/rkalis/truffle-assertions library.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/559210598/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/559401430",
    "html_url": "https://github.com/trufflesuite/truffle/issues/2647#issuecomment-559401430",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2647",
    "id": 559401430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTQwMTQzMA==",
    "user": {
      "login": "digulla",
      "id": 159306,
      "node_id": "MDQ6VXNlcjE1OTMwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/159306?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/digulla",
      "html_url": "https://github.com/digulla",
      "followers_url": "https://api.github.com/users/digulla/followers",
      "following_url": "https://api.github.com/users/digulla/following{/other_user}",
      "gists_url": "https://api.github.com/users/digulla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/digulla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/digulla/subscriptions",
      "organizations_url": "https://api.github.com/users/digulla/orgs",
      "repos_url": "https://api.github.com/users/digulla/repos",
      "events_url": "https://api.github.com/users/digulla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/digulla/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-28T08:58:42Z",
    "updated_at": "2019-11-28T08:58:42Z",
    "author_association": "NONE",
    "body": "I just found `truffle-assertions`. It also supports testing events. It would be great if you could integrate both features into the core testing framework.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/559401430/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/559408755",
    "html_url": "https://github.com/trufflesuite/truffle/issues/2647#issuecomment-559408755",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2647",
    "id": 559408755,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTQwODc1NQ==",
    "user": {
      "login": "rkalis",
      "id": 9142187,
      "node_id": "MDQ6VXNlcjkxNDIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9142187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkalis",
      "html_url": "https://github.com/rkalis",
      "followers_url": "https://api.github.com/users/rkalis/followers",
      "following_url": "https://api.github.com/users/rkalis/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkalis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkalis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkalis/subscriptions",
      "organizations_url": "https://api.github.com/users/rkalis/orgs",
      "repos_url": "https://api.github.com/users/rkalis/repos",
      "events_url": "https://api.github.com/users/rkalis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkalis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-28T09:19:03Z",
    "updated_at": "2019-11-28T09:19:03Z",
    "author_association": "MEMBER",
    "body": "I'm not opposed to contributing the truffle-assertions functionality into the Truffle codebase some time down the line. Can't really make it a priority though, as I think the current workflow (`npm i -D truffle-assertions` and import it in the test files) is good enough for most people, and reduces the maintenance burden on the core Truffle team.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/559408755/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/559535165",
    "html_url": "https://github.com/trufflesuite/truffle/issues/2647#issuecomment-559535165",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/2647",
    "id": 559535165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTUzNTE2NQ==",
    "user": {
      "login": "digulla",
      "id": 159306,
      "node_id": "MDQ6VXNlcjE1OTMwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/159306?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/digulla",
      "html_url": "https://github.com/digulla",
      "followers_url": "https://api.github.com/users/digulla/followers",
      "following_url": "https://api.github.com/users/digulla/following{/other_user}",
      "gists_url": "https://api.github.com/users/digulla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/digulla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/digulla/subscriptions",
      "organizations_url": "https://api.github.com/users/digulla/orgs",
      "repos_url": "https://api.github.com/users/digulla/repos",
      "events_url": "https://api.github.com/users/digulla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/digulla/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-28T15:30:57Z",
    "updated_at": "2019-11-28T15:30:57Z",
    "author_association": "NONE",
    "body": "Agreed. `truffle-assertions` works me so I'd vote for priority \"low\" / \"minor\". Thanks :-)",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/559535165/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
