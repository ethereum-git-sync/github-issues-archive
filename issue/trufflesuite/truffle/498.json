{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/498",
  "id": 243171970,
  "node_id": "MDU6SXNzdWUyNDMxNzE5NzA=",
  "number": 498,
  "title": "Testing contracts raising exceptions in Truffle",
  "user": {
    "login": "Qqwy",
    "id": 5345745,
    "node_id": "MDQ6VXNlcjUzNDU3NDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5345745?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Qqwy",
    "html_url": "https://github.com/Qqwy",
    "followers_url": "https://api.github.com/users/Qqwy/followers",
    "following_url": "https://api.github.com/users/Qqwy/following{/other_user}",
    "gists_url": "https://api.github.com/users/Qqwy/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Qqwy/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Qqwy/subscriptions",
    "organizations_url": "https://api.github.com/users/Qqwy/orgs",
    "repos_url": "https://api.github.com/users/Qqwy/repos",
    "events_url": "https://api.github.com/users/Qqwy/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Qqwy/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 20,
  "created_at": "2017-07-15T12:17:52Z",
  "updated_at": "2019-05-28T23:16:28Z",
  "closed_at": "2017-09-18T19:05:13Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "- [x] I've asked for help in the [Truffle Gitter](http://gitter.im/Consensys/truffle) before filing this issue.\r\n\r\n---------------------------\r\n\r\n## Issue\r\n\r\nIt is very common for a contract call to contain `assert(...);`, `require(...);` or (on older contracts) `if (...) throw;`, which make sure that the contract's state can only be altered if the requirements are met.\r\n\r\nIt is very important to be able to test if improper input thus makes a contract call fail.\r\nHowever, I have been unable to find any way to assert that a failure has happened.\r\n\r\nInstead, the truffle testing process crashes during testing:\r\n\r\n```\r\n\r\n     Uncaught Error: VM Exception while processing transaction: invalid opcode\r\n      at Object.InvalidResponse (/home/qqwy/.asdf/installs/nodejs/7.8.0/.npm/lib/node_modules/truffle/build/cli.bundled.js:37022:16)\r\n      at /home/qqwy/.asdf/installs/nodejs/7.8.0/.npm/lib/node_modules/truffle/build/cli.bundled.js:209743:36\r\n      at XMLHttpRequest.request.onreadystatechange (/home/qqwy/.asdf/installs/nodejs/7.8.0/.npm/lib/node_modules/truffle/build/cli.bundled.js:208522:13)\r\n      at XMLHttpRequestEventTarget.dispatchEvent (/home/qqwy/.asdf/installs/nodejs/7.8.0/.npm/lib/node_modules/truffle/build/cli.bundled.js:210395:18)\r\n      at XMLHttpRequest._setReadyState (/home/qqwy/.asdf/installs/nodejs/7.8.0/.npm/lib/node_modules/truffle/build/cli.bundled.js:210685:12)\r\n      at XMLHttpRequest._onHttpResponseEnd (/home/qqwy/.asdf/installs/nodejs/7.8.0/.npm/lib/node_modules/truffle/build/cli.bundled.js:210840:12)\r\n      at IncomingMessage.<anonymous> (/home/qqwy/.asdf/installs/nodejs/7.8.0/.npm/lib/node_modules/truffle/build/cli.bundled.js:210800:24)\r\n      at endReadableNT (_stream_readable.js:975:12)\r\n\r\n```\r\n\r\n## Steps to Reproduce\r\n\r\nSay you have this contract:\r\n\r\n```solidity\r\npragma solidity ^0.4.11;\r\ncontract NumberContract {\r\n    uint public number;\r\n    address public owner;\r\n\r\n    function NumberContract(){\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function set(uint new_number) {\r\n        assert (owner == msg.sender);\r\n        number = new_number;\r\n    }\r\n}\r\n\r\n```\r\n\r\nNow I'd want to test it like this:\r\n\r\n```javascript\r\nvar NumberContract = artifacts.require(\"./NumberContract.sol\");\r\n\r\ncontract(\"NumberContract, setting\", function(accounts){\r\n    it(\"Allows setting the number to a different value by owner\", function(){\r\n        return NumberContract.deployed().then(function(instance){\r\n            instance.set(42);\r\n            return instance;\r\n        }).then(function(instance){\r\n            return instance.number();\r\n        }).then(function(num){\r\n            assert.equal(num.toString(), '42', \"Number not properly set\");\r\n        });\r\n    });\r\n\r\n    it(\"Rejects setting the number to a different value by non-owner\", function(){\r\n        return NumberContract.deployed().then(function(instance){\r\n            instance.set(55, {from: accounts[1]});\r\n            return instance;\r\n            // Obviously, here we'd need to use some different assertion technique\r\n            // to handle the failure. But what?\r\n        }).then(function(instance){\r\n            return instance.number();\r\n        }).then(function(num){\r\n            assert.equal(num.toString(), '42', \"Number could be set by non-owner\");\r\n        });\r\n    });\r\n});\r\n\r\n```\r\n\r\n\r\n## Expected Behavior\r\n\r\nI'd expect the tests to run, and give a meaningful error, and I'd expect there to be a way to assert that a contract call failed. \r\n\r\n\r\n## Actual Results\r\n\r\nInstead, we get an uncaught VM exception:\r\n\r\n```\r\n$ truffle test\r\nUsing network 'development'.\r\n\r\nCompiling ./contracts/ConvertLib.sol...\r\nCompiling ./contracts/MetaCoin.sol...\r\nCompiling ./test/TestMetacoin.sol...\r\nCompiling truffle/Assert.sol...\r\nCompiling truffle/DeployedAddresses.sol...\r\n\r\n\r\n  TestMetacoin\r\n    ✓ testInitialBalanceUsingDeployedContract (66ms)\r\n    ✓ testInitialBalanceWithNewMetaCoin (45ms)\r\n\r\n  Contract: NumberContract, setting\r\n    ✓ Allows setting the number to a different value by owner\r\n    1) Rejects setting the number to a different value by non-owner\r\n    ✓ Rejects setting the number to a different value by non-owner (40ms)\r\n\r\n  Contract: MetaCoin\r\n    > No events were emitted\r\n\r\n\r\n  4 passing (475ms)\r\n  1 failing\r\n\r\n  1) Contract: NumberContract, setting Rejects setting the number to a different value by non-owner:\r\n     Uncaught Error: VM Exception while processing transaction: invalid opcode\r\n      at Object.InvalidResponse (/home/qqwy/.asdf/installs/nodejs/7.8.0/.npm/lib/node_modules/truffle/build/cli.bundled.js:37022:16)\r\n      at /home/qqwy/.asdf/installs/nodejs/7.8.0/.npm/lib/node_modules/truffle/build/cli.bundled.js:209743:36\r\n      at XMLHttpRequest.request.onreadystatechange (/home/qqwy/.asdf/installs/nodejs/7.8.0/.npm/lib/node_modules/truffle/build/cli.bundled.js:208522:13)\r\n      at XMLHttpRequestEventTarget.dispatchEvent (/home/qqwy/.asdf/installs/nodejs/7.8.0/.npm/lib/node_modules/truffle/build/cli.bundled.js:210395:18)\r\n      at XMLHttpRequest._setReadyState (/home/qqwy/.asdf/installs/nodejs/7.8.0/.npm/lib/node_modules/truffle/build/cli.bundled.js:210685:12)\r\n      at XMLHttpRequest._onHttpResponseEnd (/home/qqwy/.asdf/installs/nodejs/7.8.0/.npm/lib/node_modules/truffle/build/cli.bundled.js:210840:12)\r\n      at IncomingMessage.<anonymous> (/home/qqwy/.asdf/installs/nodejs/7.8.0/.npm/lib/node_modules/truffle/build/cli.bundled.js:210800:24)\r\n      at endReadableNT (_stream_readable.js:975:12)\r\n\r\n```\r\n\r\n## Environment\r\n\r\n* Operating System: Linux Mint Serena.\r\n* Truffle version:\r\n  * Truffle v3.4.3 (core: 3.4.1)\r\n  * Solidity v0.4.11 (solc-js)\r\n\r\n* Ethereum client: testrpc\r\n* node version: 7.8.0\r\n* npm version: 4.2.0 (yarn version 0.24.5)\r\n",
  "closed_by": {
    "login": "tcoulter",
    "id": 92629,
    "node_id": "MDQ6VXNlcjkyNjI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/92629?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tcoulter",
    "html_url": "https://github.com/tcoulter",
    "followers_url": "https://api.github.com/users/tcoulter/followers",
    "following_url": "https://api.github.com/users/tcoulter/following{/other_user}",
    "gists_url": "https://api.github.com/users/tcoulter/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tcoulter/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tcoulter/subscriptions",
    "organizations_url": "https://api.github.com/users/tcoulter/orgs",
    "repos_url": "https://api.github.com/users/tcoulter/repos",
    "events_url": "https://api.github.com/users/tcoulter/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tcoulter/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/498/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/318836381",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-318836381",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 318836381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODgzNjM4MQ==",
    "user": {
      "login": "batjko",
      "id": 7287076,
      "node_id": "MDQ6VXNlcjcyODcwNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7287076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/batjko",
      "html_url": "https://github.com/batjko",
      "followers_url": "https://api.github.com/users/batjko/followers",
      "following_url": "https://api.github.com/users/batjko/following{/other_user}",
      "gists_url": "https://api.github.com/users/batjko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/batjko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/batjko/subscriptions",
      "organizations_url": "https://api.github.com/users/batjko/orgs",
      "repos_url": "https://api.github.com/users/batjko/repos",
      "events_url": "https://api.github.com/users/batjko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/batjko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-29T14:57:21Z",
    "updated_at": "2017-07-29T14:58:56Z",
    "author_association": "NONE",
    "body": "I'm getting the same error for one of the tests in the pet-shop tutorial:\r\n\r\n```cpp\r\n  function testUserCanAdoptPet() {\r\n    uint returnedId = adoption.adopt(8);\r\n    uint expected = 8;\r\n\r\n    Assert.equal(returnedId, expected, \"Adoption of petId should be recorded\");\r\n  }\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/7287076/28745748-56ac9d68-7476-11e7-905b-f6f7acce20a7.png)\r\n\r\nThe Adoption contract being tested is exactly as instructed by the tutorial:\r\n\r\n```cpp\r\npragma solidity ^0.4.4;\r\n\r\ncontract Adoption {\r\n  address[16] public adopters;\r\n\r\n  function adopt(uint petId) public returns (uint) {\r\n    require(petId < 0 || petId > 15);\r\n\r\n    adopters[petId] = msg.sender;\r\n\r\n    return petId;\r\n  }\r\n\r\n  // [...]\r\n}\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/318836381/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/318882895",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-318882895",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 318882895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODg4Mjg5NQ==",
    "user": {
      "login": "raid5",
      "id": 15592,
      "node_id": "MDQ6VXNlcjE1NTky",
      "avatar_url": "https://avatars.githubusercontent.com/u/15592?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raid5",
      "html_url": "https://github.com/raid5",
      "followers_url": "https://api.github.com/users/raid5/followers",
      "following_url": "https://api.github.com/users/raid5/following{/other_user}",
      "gists_url": "https://api.github.com/users/raid5/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raid5/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raid5/subscriptions",
      "organizations_url": "https://api.github.com/users/raid5/orgs",
      "repos_url": "https://api.github.com/users/raid5/repos",
      "events_url": "https://api.github.com/users/raid5/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raid5/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-30T06:54:04Z",
    "updated_at": "2017-07-30T06:54:04Z",
    "author_association": "NONE",
    "body": "I'm getting the same error as @batjko. I've been able to get around it by comment out the `require(petId < 0 || petId > 15);` line, but obviously this isn't ideal.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/318882895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/318885428",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-318885428",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 318885428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODg4NTQyOA==",
    "user": {
      "login": "batjko",
      "id": 7287076,
      "node_id": "MDQ6VXNlcjcyODcwNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7287076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/batjko",
      "html_url": "https://github.com/batjko",
      "followers_url": "https://api.github.com/users/batjko/followers",
      "following_url": "https://api.github.com/users/batjko/following{/other_user}",
      "gists_url": "https://api.github.com/users/batjko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/batjko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/batjko/subscriptions",
      "organizations_url": "https://api.github.com/users/batjko/orgs",
      "repos_url": "https://api.github.com/users/batjko/repos",
      "events_url": "https://api.github.com/users/batjko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/batjko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-30T07:55:27Z",
    "updated_at": "2017-07-30T08:03:31Z",
    "author_association": "NONE",
    "body": "Actually, that brought me to a solution, @raid5 .\r\n\r\nThat require statement never made any sense to me. It seems to require that the petId must be less than 0 or more than 15, which is the exact opposite of what the objective was supposed to be.\r\n\r\nSo I've changed it so that petId is between 0 and 15, and tests now pass:\r\n![image](https://user-images.githubusercontent.com/7287076/28751625-a0f43f32-7504-11e7-9610-65533d0e5594.png)\r\n\r\nIf this was a logical error, a test should not throw a weird, unintuitive exception like that.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/318885428/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/319600846",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-319600846",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 319600846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTYwMDg0Ng==",
    "user": {
      "login": "moritz-botconnect",
      "id": 29707096,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjI5NzA3MDk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/29707096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moritz-botconnect",
      "html_url": "https://github.com/moritz-botconnect",
      "followers_url": "https://api.github.com/users/moritz-botconnect/followers",
      "following_url": "https://api.github.com/users/moritz-botconnect/following{/other_user}",
      "gists_url": "https://api.github.com/users/moritz-botconnect/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moritz-botconnect/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moritz-botconnect/subscriptions",
      "organizations_url": "https://api.github.com/users/moritz-botconnect/orgs",
      "repos_url": "https://api.github.com/users/moritz-botconnect/repos",
      "events_url": "https://api.github.com/users/moritz-botconnect/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moritz-botconnect/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2017-08-02T08:11:03Z",
    "updated_at": "2017-08-02T08:11:03Z",
    "author_association": "NONE",
    "body": "@batjko, Thank you! That solved the problem :-) It's obvious if you think to look there :-D",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/319600846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/330324584",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-330324584",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 330324584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDMyNDU4NA==",
    "user": {
      "login": "tcoulter",
      "id": 92629,
      "node_id": "MDQ6VXNlcjkyNjI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/92629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tcoulter",
      "html_url": "https://github.com/tcoulter",
      "followers_url": "https://api.github.com/users/tcoulter/followers",
      "following_url": "https://api.github.com/users/tcoulter/following{/other_user}",
      "gists_url": "https://api.github.com/users/tcoulter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tcoulter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tcoulter/subscriptions",
      "organizations_url": "https://api.github.com/users/tcoulter/orgs",
      "repos_url": "https://api.github.com/users/tcoulter/repos",
      "events_url": "https://api.github.com/users/tcoulter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tcoulter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T19:05:13Z",
    "updated_at": "2017-09-18T19:05:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi there.\n\nI believe we've fixed this issue with the Pet Shop tutorial. I'm going to close for housekeeping reasons, but please open a new ticket if you run into more issues.\n\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/330324584/reactions",
      "total_count": 4,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/333665047",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-333665047",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 333665047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzY2NTA0Nw==",
    "user": {
      "login": "awgneo",
      "id": 3988798,
      "node_id": "MDQ6VXNlcjM5ODg3OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3988798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/awgneo",
      "html_url": "https://github.com/awgneo",
      "followers_url": "https://api.github.com/users/awgneo/followers",
      "following_url": "https://api.github.com/users/awgneo/following{/other_user}",
      "gists_url": "https://api.github.com/users/awgneo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/awgneo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/awgneo/subscriptions",
      "organizations_url": "https://api.github.com/users/awgneo/orgs",
      "repos_url": "https://api.github.com/users/awgneo/repos",
      "events_url": "https://api.github.com/users/awgneo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/awgneo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-02T21:05:47Z",
    "updated_at": "2017-10-02T21:05:47Z",
    "author_association": "NONE",
    "body": "Hello all. I don't think anyone here solved the original problem. Is there a way to check for require and assert exceptions that we expect from invalid input?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/333665047/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/333702639",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-333702639",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 333702639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzcwMjYzOQ==",
    "user": {
      "login": "awgneo",
      "id": 3988798,
      "node_id": "MDQ6VXNlcjM5ODg3OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3988798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/awgneo",
      "html_url": "https://github.com/awgneo",
      "followers_url": "https://api.github.com/users/awgneo/followers",
      "following_url": "https://api.github.com/users/awgneo/following{/other_user}",
      "gists_url": "https://api.github.com/users/awgneo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/awgneo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/awgneo/subscriptions",
      "organizations_url": "https://api.github.com/users/awgneo/orgs",
      "repos_url": "https://api.github.com/users/awgneo/repos",
      "events_url": "https://api.github.com/users/awgneo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/awgneo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T00:23:16Z",
    "updated_at": "2017-10-03T00:23:16Z",
    "author_association": "NONE",
    "body": "I may have found a decent workaround until Truffle officially supports this. The open-zeppelin project provides an assertJump function for this purpose. Check out this example. https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/test/Ownable.js",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/333702639/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/339240629",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-339240629",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 339240629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTI0MDYyOQ==",
    "user": {
      "login": "benvoi",
      "id": 15175888,
      "node_id": "MDQ6VXNlcjE1MTc1ODg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/15175888?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benvoi",
      "html_url": "https://github.com/benvoi",
      "followers_url": "https://api.github.com/users/benvoi/followers",
      "following_url": "https://api.github.com/users/benvoi/following{/other_user}",
      "gists_url": "https://api.github.com/users/benvoi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benvoi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benvoi/subscriptions",
      "organizations_url": "https://api.github.com/users/benvoi/orgs",
      "repos_url": "https://api.github.com/users/benvoi/repos",
      "events_url": "https://api.github.com/users/benvoi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benvoi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-25T07:30:32Z",
    "updated_at": "2017-10-25T07:30:32Z",
    "author_association": "NONE",
    "body": "I have the same issue as @batjko with the following require statement\r\n\r\n~~~~\r\nfunction adopt(uint petId) public returns (uint) {\r\n    require(petId >= 0 && petId <= 15);\r\n~~~~\r\n\r\n~~~~\r\n~/C/2/0/pet-shop-tutorial ❯❯❯ truffle test\r\nUsing network 'development'.\r\n\r\nCompiling ./contracts/Adoption.sol...\r\nCompiling ./test/TestAdoption.sol...\r\nCompiling truffle/Assert.sol...\r\nCompiling truffle/DeployedAddresses.sol...\r\n\r\n...\r\n\r\n  TestAdoption\r\n    1) \"before all\" hook: prepare suite\r\n\r\n\r\n  0 passing (436ms)\r\n  1 failing\r\n\r\n  1) TestAdoption \"before all\" hook: prepare suite:\r\n     Error: VM Exception while processing transaction: invalid opcode\r\n      at Object.InvalidResponse (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:37312:16)\r\n      at /usr/local/lib/node_modules/truffle/build/cli.bundled.js:220420:36\r\n      at /usr/local/lib/node_modules/truffle/build/cli.bundled.js:204149:9\r\n      at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:205574:13)\r\n      at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:73069:18)\r\n      at XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:73359:12)\r\n      at XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:73514:12)\r\n      at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:73474:24)\r\n~~~~\r\n\r\nAny idea what could go wrong?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/339240629/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/339512839",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-339512839",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 339512839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTUxMjgzOQ==",
    "user": {
      "login": "escoffon",
      "id": 20325449,
      "node_id": "MDQ6VXNlcjIwMzI1NDQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/20325449?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/escoffon",
      "html_url": "https://github.com/escoffon",
      "followers_url": "https://api.github.com/users/escoffon/followers",
      "following_url": "https://api.github.com/users/escoffon/following{/other_user}",
      "gists_url": "https://api.github.com/users/escoffon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/escoffon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/escoffon/subscriptions",
      "organizations_url": "https://api.github.com/users/escoffon/orgs",
      "repos_url": "https://api.github.com/users/escoffon/repos",
      "events_url": "https://api.github.com/users/escoffon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/escoffon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-26T00:21:40Z",
    "updated_at": "2017-10-26T00:21:40Z",
    "author_association": "NONE",
    "body": "Regarding the original problem, I use the error function in the promise, which is triggered by an EVM exception. For example a snippet of a test for a token contract:\r\n```\r\n  it(\"should reject transfers with insufficient funds\", function() {\r\n\t var account_two = accounts[2];\r\n\t var account_three = accounts[3];\r\n\r\n\t var amount = 120000;\r\n\t var tok;\r\n\r\n\t return MyToken.deployed()\r\n\t     .then(function(instance) {\r\n\t\t       tok = instance;\r\n\t\t       return tok.transfer(account_two, amount, { from: account_three });\r\n\t\t   })\r\n\t     .then(function(r) {\r\n\t\t       assert(false, 'transfer (1) of insufficient funds should have failed');\r\n\t\t       return true;\r\n\t\t   },\r\n\t\t   function(e) {\r\n\t\t       assert.match(e, /VM Exception[a-zA-Z0-9 ]+: invalid opcode/, \"transfer (1) of insufficient funds should have raised VM exception\");\r\n\t\t   });\r\n     });\r\n```\r\nSince I expect the transfer call to fail, I put an assert(false) in the success function, to make the test fail. And in the failure function, I assert that the error looks like it was generated by a EVM exception. The regexp works for tests running against testrpc; it may need to be tweaked for a more general use. It might also be possible to encapsulate the two functions for reuse; currently the tests as written would require a bit of cut and paste.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/339512839/reactions",
      "total_count": 5,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/351644158",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-351644158",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 351644158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTY0NDE1OA==",
    "user": {
      "login": "mritzco",
      "id": 4988324,
      "node_id": "MDQ6VXNlcjQ5ODgzMjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4988324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mritzco",
      "html_url": "https://github.com/mritzco",
      "followers_url": "https://api.github.com/users/mritzco/followers",
      "following_url": "https://api.github.com/users/mritzco/following{/other_user}",
      "gists_url": "https://api.github.com/users/mritzco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mritzco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mritzco/subscriptions",
      "organizations_url": "https://api.github.com/users/mritzco/orgs",
      "repos_url": "https://api.github.com/users/mritzco/repos",
      "events_url": "https://api.github.com/users/mritzco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mritzco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-14T08:39:36Z",
    "updated_at": "2017-12-14T08:39:36Z",
    "author_association": "NONE",
    "body": "Is there any way to test this in solidity? Every solution I found is on JS.\r\n\r\nI feel that in this context (Ethereum/solidity) testing for edge cases and failure is even more important that testing for working cases. \r\n\r\nIn the case of the pet shop I'd like to:\r\n- assert that if pet > 15 it fails,\r\n- assert it fails if no pet id \r\n- every edge case I could imagine...\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/351644158/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/352359195",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-352359195",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 352359195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjM1OTE5NQ==",
    "user": {
      "login": "mritzco",
      "id": 4988324,
      "node_id": "MDQ6VXNlcjQ5ODgzMjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4988324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mritzco",
      "html_url": "https://github.com/mritzco",
      "followers_url": "https://api.github.com/users/mritzco/followers",
      "following_url": "https://api.github.com/users/mritzco/following{/other_user}",
      "gists_url": "https://api.github.com/users/mritzco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mritzco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mritzco/subscriptions",
      "organizations_url": "https://api.github.com/users/mritzco/orgs",
      "repos_url": "https://api.github.com/users/mritzco/repos",
      "events_url": "https://api.github.com/users/mritzco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mritzco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T08:37:18Z",
    "updated_at": "2017-12-18T08:37:18Z",
    "author_association": "NONE",
    "body": "Any updates? Is there any way to test in solidity? Every solution I found is for JS.\r\n\r\nI feel that in the context of (Ethereum/solidity) testing for edge cases and failure is as important as testing for working cases. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/352359195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/353691774",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-353691774",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 353691774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzY5MTc3NA==",
    "user": {
      "login": "lrascao",
      "id": 639415,
      "node_id": "MDQ6VXNlcjYzOTQxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/639415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrascao",
      "html_url": "https://github.com/lrascao",
      "followers_url": "https://api.github.com/users/lrascao/followers",
      "following_url": "https://api.github.com/users/lrascao/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrascao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrascao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrascao/subscriptions",
      "organizations_url": "https://api.github.com/users/lrascao/orgs",
      "repos_url": "https://api.github.com/users/lrascao/repos",
      "events_url": "https://api.github.com/users/lrascao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrascao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-22T23:48:49Z",
    "updated_at": "2017-12-22T23:48:49Z",
    "author_association": "NONE",
    "body": "@mritzco,  +1,  i would also like to see progress on this",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/353691774/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/359502968",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-359502968",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 359502968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTUwMjk2OA==",
    "user": {
      "login": "rickbatka",
      "id": 6570118,
      "node_id": "MDQ6VXNlcjY1NzAxMTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6570118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rickbatka",
      "html_url": "https://github.com/rickbatka",
      "followers_url": "https://api.github.com/users/rickbatka/followers",
      "following_url": "https://api.github.com/users/rickbatka/following{/other_user}",
      "gists_url": "https://api.github.com/users/rickbatka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rickbatka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rickbatka/subscriptions",
      "organizations_url": "https://api.github.com/users/rickbatka/orgs",
      "repos_url": "https://api.github.com/users/rickbatka/repos",
      "events_url": "https://api.github.com/users/rickbatka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rickbatka/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T17:35:35Z",
    "updated_at": "2018-01-22T17:35:35Z",
    "author_association": "NONE",
    "body": "+1, I would also like to test this in solidity - not javascript. For now, workaround seems to be to test from JS and assert something in the promise error - is that still the only way to accomplish this?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/359502968/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/360196237",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-360196237",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 360196237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDE5NjIzNw==",
    "user": {
      "login": "fdouglis",
      "id": 4999923,
      "node_id": "MDQ6VXNlcjQ5OTk5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4999923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fdouglis",
      "html_url": "https://github.com/fdouglis",
      "followers_url": "https://api.github.com/users/fdouglis/followers",
      "following_url": "https://api.github.com/users/fdouglis/following{/other_user}",
      "gists_url": "https://api.github.com/users/fdouglis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fdouglis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fdouglis/subscriptions",
      "organizations_url": "https://api.github.com/users/fdouglis/orgs",
      "repos_url": "https://api.github.com/users/fdouglis/repos",
      "events_url": "https://api.github.com/users/fdouglis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fdouglis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-24T16:43:32Z",
    "updated_at": "2018-01-24T16:43:32Z",
    "author_association": "NONE",
    "body": "+1 for solidity.  ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/360196237/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/360240548",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-360240548",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 360240548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDI0MDU0OA==",
    "user": {
      "login": "tcoulter",
      "id": 92629,
      "node_id": "MDQ6VXNlcjkyNjI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/92629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tcoulter",
      "html_url": "https://github.com/tcoulter",
      "followers_url": "https://api.github.com/users/tcoulter/followers",
      "following_url": "https://api.github.com/users/tcoulter/following{/other_user}",
      "gists_url": "https://api.github.com/users/tcoulter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tcoulter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tcoulter/subscriptions",
      "organizations_url": "https://api.github.com/users/tcoulter/orgs",
      "repos_url": "https://api.github.com/users/tcoulter/repos",
      "events_url": "https://api.github.com/users/tcoulter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tcoulter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-24T19:09:02Z",
    "updated_at": "2018-01-24T19:09:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "You all can test for exceptions within Solidity tests using the following tutorial: http://truffleframework.com/tutorials/testing-for-throws-in-solidity-tests\r\n\r\nThe tutorial is out of date, and is written to test for `throw` (a predecessor to `revert()`, `assert()`, etc.)\r\n\r\nHowever, the important bit is this part: \r\n\r\n```\r\nbool r = throwProxy.execute.gas(200000)();\r\n\r\nAssert.isFalse(r, “Should be false, as it should throw”);\r\n```\r\n\r\nNote that instead of throwing, a `bool` is returned with the status of the `execute()` function. You can use Solidity tests to test for these error cases in a similar way.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/360240548/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/365952361",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-365952361",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 365952361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTk1MjM2MQ==",
    "user": {
      "login": "fdouglis",
      "id": 4999923,
      "node_id": "MDQ6VXNlcjQ5OTk5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4999923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fdouglis",
      "html_url": "https://github.com/fdouglis",
      "followers_url": "https://api.github.com/users/fdouglis/followers",
      "following_url": "https://api.github.com/users/fdouglis/following{/other_user}",
      "gists_url": "https://api.github.com/users/fdouglis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fdouglis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fdouglis/subscriptions",
      "organizations_url": "https://api.github.com/users/fdouglis/orgs",
      "repos_url": "https://api.github.com/users/fdouglis/repos",
      "events_url": "https://api.github.com/users/fdouglis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fdouglis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-15T14:59:17Z",
    "updated_at": "2018-02-15T14:59:17Z",
    "author_association": "NONE",
    "body": "Thanks, @tcoulter, for the pointer to the proxy approach.  I used that and it works.  It's good that if we expect a revert() we can use that to confirm it happens, and fail the test only if it doesn't.  \r\n\r\nNow if only we could see events emitted during Solidity tests without raising a test failure. My only workaround there has been to do Assert.fail() if I want to see events, but then it counts as a unit test failure.  ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/365952361/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/369328884",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-369328884",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 369328884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTMyODg4NA==",
    "user": {
      "login": "AdityaNawandar",
      "id": 35577103,
      "node_id": "MDQ6VXNlcjM1NTc3MTAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/35577103?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AdityaNawandar",
      "html_url": "https://github.com/AdityaNawandar",
      "followers_url": "https://api.github.com/users/AdityaNawandar/followers",
      "following_url": "https://api.github.com/users/AdityaNawandar/following{/other_user}",
      "gists_url": "https://api.github.com/users/AdityaNawandar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AdityaNawandar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AdityaNawandar/subscriptions",
      "organizations_url": "https://api.github.com/users/AdityaNawandar/orgs",
      "repos_url": "https://api.github.com/users/AdityaNawandar/repos",
      "events_url": "https://api.github.com/users/AdityaNawandar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AdityaNawandar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-28T18:06:45Z",
    "updated_at": "2018-02-28T18:09:34Z",
    "author_association": "NONE",
    "body": "Changing  <= to '<' and  '>=' to '>' works.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/369328884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386774046",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-386774046",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 386774046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Njc3NDA0Ng==",
    "user": {
      "login": "jackwzp",
      "id": 10872138,
      "node_id": "MDQ6VXNlcjEwODcyMTM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/10872138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jackwzp",
      "html_url": "https://github.com/jackwzp",
      "followers_url": "https://api.github.com/users/jackwzp/followers",
      "following_url": "https://api.github.com/users/jackwzp/following{/other_user}",
      "gists_url": "https://api.github.com/users/jackwzp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jackwzp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jackwzp/subscriptions",
      "organizations_url": "https://api.github.com/users/jackwzp/orgs",
      "repos_url": "https://api.github.com/users/jackwzp/repos",
      "events_url": "https://api.github.com/users/jackwzp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jackwzp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-05T02:51:23Z",
    "updated_at": "2018-05-05T02:51:23Z",
    "author_association": "NONE",
    "body": "I worked around this by catching the error in a try-catch block. However, is there a simpler/cleaner way to do it? Something like `expect(tx).to.throw()`.\r\n\r\nWorkaround:\r\n```javascript\r\nit('expect a revert in smart contract', async () => {\r\n   let contract = await MyContract.deployed();\r\n   try {\r\n        let tx = await contract.someFunc(inputParam, {from: accounts[0]});\r\n   } catch(err) {\r\n        assert(true); // expected the throw\r\n   }\r\n})\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386774046/reactions",
      "total_count": 6,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386777359",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-386777359",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 386777359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Njc3NzM1OQ==",
    "user": {
      "login": "jackwzp",
      "id": 10872138,
      "node_id": "MDQ6VXNlcjEwODcyMTM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/10872138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jackwzp",
      "html_url": "https://github.com/jackwzp",
      "followers_url": "https://api.github.com/users/jackwzp/followers",
      "following_url": "https://api.github.com/users/jackwzp/following{/other_user}",
      "gists_url": "https://api.github.com/users/jackwzp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jackwzp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jackwzp/subscriptions",
      "organizations_url": "https://api.github.com/users/jackwzp/orgs",
      "repos_url": "https://api.github.com/users/jackwzp/repos",
      "events_url": "https://api.github.com/users/jackwzp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jackwzp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-05T04:08:38Z",
    "updated_at": "2018-05-05T04:08:38Z",
    "author_association": "NONE",
    "body": "Actually I found a solution to this problem to write cleaner tests. In a helper.js file under test/ folder, I created a helper function that wraps all the try-catch stuff. Then in my actualTest.js file under test/, I can just write a simple one line statement.\r\n\r\nhelper.js\r\n```javascript\r\nmodule.exports =  async (promise) => {\r\n    try {\r\n        await promise;\r\n    } catch (err) {\r\n        return;\r\n    }\r\n    assert(false, 'Expected throw not received');\r\n}\r\n```\r\n\r\nactualTest.js\r\n```javascript\r\n// at the top of the file\r\nvar expectThrow = require('./helper.js');\r\n\r\n// further down in test file inside a contract()\r\nit('expect a revert in smart contract', async () => {\r\n   let contract = await MyContract.deployed();\r\n   // note there is no await keyword for tx as in my previous comment\r\n   let tx = contract.someFunc(inputParam, {from: accounts[0]}); \r\n   await expectThrow(tx);\r\n})\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/386777359/reactions",
      "total_count": 12,
      "+1": 10,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/496724521",
    "html_url": "https://github.com/trufflesuite/truffle/issues/498#issuecomment-496724521",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/498",
    "id": 496724521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjcyNDUyMQ==",
    "user": {
      "login": "OliveIT",
      "id": 42824831,
      "node_id": "MDQ6VXNlcjQyODI0ODMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/42824831?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OliveIT",
      "html_url": "https://github.com/OliveIT",
      "followers_url": "https://api.github.com/users/OliveIT/followers",
      "following_url": "https://api.github.com/users/OliveIT/following{/other_user}",
      "gists_url": "https://api.github.com/users/OliveIT/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OliveIT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OliveIT/subscriptions",
      "organizations_url": "https://api.github.com/users/OliveIT/orgs",
      "repos_url": "https://api.github.com/users/OliveIT/repos",
      "events_url": "https://api.github.com/users/OliveIT/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OliveIT/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-28T23:16:28Z",
    "updated_at": "2019-05-28T23:16:28Z",
    "author_association": "NONE",
    "body": "I found @rkalis has done awesome job regarding this topic.\r\nhttps://ethereum.stackexchange.com/a/60574/41404\r\nhttps://kalis.me/assert-reverts-solidity-smart-contract-test-truffle/",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/496724521/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
