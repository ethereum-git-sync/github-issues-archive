{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/67",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/67/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/67/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/67/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/67",
  "id": 123717110,
  "node_id": "MDU6SXNzdWUxMjM3MTcxMTA=",
  "number": 67,
  "title": "Add ethereumjs-testrpc integration",
  "user": {
    "login": "danfinlay",
    "id": 542863,
    "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/danfinlay",
    "html_url": "https://github.com/danfinlay",
    "followers_url": "https://api.github.com/users/danfinlay/followers",
    "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
    "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
    "organizations_url": "https://api.github.com/users/danfinlay/orgs",
    "repos_url": "https://api.github.com/users/danfinlay/repos",
    "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
    "received_events_url": "https://api.github.com/users/danfinlay/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 230393328,
      "node_id": "MDU6TGFiZWwyMzAzOTMzMjg=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/enhancement",
      "name": "enhancement",
      "color": "84b6eb",
      "default": true,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2015-12-23T20:14:04Z",
  "updated_at": "2017-07-11T20:51:05Z",
  "closed_at": "2017-07-11T20:51:05Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "For `development` and `test` environments, it's unlikely anyone wants to run their code on the real Ethereum blockchain, so they're either going to set up their own private Ether blockchain, or they're going to use a tool like [EtherSim](https://github.com/tcoulter/EtherSim).\n\nSince EtherSim can be passed as a provider to `web3.setProvider()`, it seems like it would be easy to swap in instead of `new Web3.providers.HttpProvider(env_defined_address)` based on an environment or command.\n\nThis could either be defined in the `app.json` file, or maybe (as @tcoulter suggested) as an alternate command to `serve`, like \"`develop`\".\n\nLet's talk about how we might expose this functionality, so that it's easily available for all new Ether apps!\n",
  "closed_by": {
    "login": "tcoulter",
    "id": 92629,
    "node_id": "MDQ6VXNlcjkyNjI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/92629?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tcoulter",
    "html_url": "https://github.com/tcoulter",
    "followers_url": "https://api.github.com/users/tcoulter/followers",
    "following_url": "https://api.github.com/users/tcoulter/following{/other_user}",
    "gists_url": "https://api.github.com/users/tcoulter/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tcoulter/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tcoulter/subscriptions",
    "organizations_url": "https://api.github.com/users/tcoulter/orgs",
    "repos_url": "https://api.github.com/users/tcoulter/repos",
    "events_url": "https://api.github.com/users/tcoulter/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tcoulter/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/67/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/67/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/166985064",
    "html_url": "https://github.com/trufflesuite/truffle/issues/67#issuecomment-166985064",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/67",
    "id": 166985064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Njk4NTA2NA==",
    "user": {
      "login": "tcoulter",
      "id": 92629,
      "node_id": "MDQ6VXNlcjkyNjI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/92629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tcoulter",
      "html_url": "https://github.com/tcoulter",
      "followers_url": "https://api.github.com/users/tcoulter/followers",
      "following_url": "https://api.github.com/users/tcoulter/following{/other_user}",
      "gists_url": "https://api.github.com/users/tcoulter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tcoulter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tcoulter/subscriptions",
      "organizations_url": "https://api.github.com/users/tcoulter/orgs",
      "repos_url": "https://api.github.com/users/tcoulter/repos",
      "events_url": "https://api.github.com/users/tcoulter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tcoulter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-23T20:29:41Z",
    "updated_at": "2015-12-23T20:29:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Technically speaking, EtherSim _itself_ as a provider won't work as there's no way to connect the provider in node to the provider that'd run in the browser (aside: I think that feature of EtherSim is lofty and not thought through). That said, having one command that runs EtherSim in the background and takes care of the provider configuration is a really nice feature.\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/166985064/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/166986315",
    "html_url": "https://github.com/trufflesuite/truffle/issues/67#issuecomment-166986315",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/67",
    "id": 166986315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Njk4NjMxNQ==",
    "user": {
      "login": "danfinlay",
      "id": 542863,
      "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danfinlay",
      "html_url": "https://github.com/danfinlay",
      "followers_url": "https://api.github.com/users/danfinlay/followers",
      "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
      "organizations_url": "https://api.github.com/users/danfinlay/orgs",
      "repos_url": "https://api.github.com/users/danfinlay/repos",
      "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danfinlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-23T20:39:03Z",
    "updated_at": "2015-12-23T20:39:03Z",
    "author_association": "NONE",
    "body": "Yeah, just running it in the background (assuming it's installed, or even including it as a dev dependency of truffle) should be pretty simple.\n\nOn that side note, wary of getting too far off track, why is EtherSim as a provider not well thought out? It seems like that would be fairly simple, and should be isomorphic, so shouldn't _require_ the node environment.  But I guess that's an issue for EtherSim.\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/166986315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/166988990",
    "html_url": "https://github.com/trufflesuite/truffle/issues/67#issuecomment-166988990",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/67",
    "id": 166988990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Njk4ODk5MA==",
    "user": {
      "login": "danfinlay",
      "id": 542863,
      "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danfinlay",
      "html_url": "https://github.com/danfinlay",
      "followers_url": "https://api.github.com/users/danfinlay/followers",
      "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
      "organizations_url": "https://api.github.com/users/danfinlay/orgs",
      "repos_url": "https://api.github.com/users/danfinlay/repos",
      "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danfinlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-23T20:59:10Z",
    "updated_at": "2015-12-23T20:59:10Z",
    "author_association": "NONE",
    "body": "So let's say we add a `truffle develop` keyword. Would it automatically pass the current `rpc.port` value to `EtherSim` as its port, or would we add a new `EtherSim` config hash to the `app.json`?\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/166988990/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/166989686",
    "html_url": "https://github.com/trufflesuite/truffle/issues/67#issuecomment-166989686",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/67",
    "id": 166989686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Njk4OTY4Ng==",
    "user": {
      "login": "tcoulter",
      "id": 92629,
      "node_id": "MDQ6VXNlcjkyNjI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/92629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tcoulter",
      "html_url": "https://github.com/tcoulter",
      "followers_url": "https://api.github.com/users/tcoulter/followers",
      "following_url": "https://api.github.com/users/tcoulter/following{/other_user}",
      "gists_url": "https://api.github.com/users/tcoulter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tcoulter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tcoulter/subscriptions",
      "organizations_url": "https://api.github.com/users/tcoulter/orgs",
      "repos_url": "https://api.github.com/users/tcoulter/repos",
      "events_url": "https://api.github.com/users/tcoulter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tcoulter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-23T21:04:42Z",
    "updated_at": "2015-12-23T21:09:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "> why is EtherSim as a provider not well thought out?\n\nYour dapp and Truffle run in two different execution contexts: The first in the browser, the second in Node. Since EtherSim is basically a blockchain in memory, there's no way to share an instance of EtherSim between the two contexts. Instead, you would just load up EtherSim as its own entity and have both Truffle and your dapp communicate with EtherSim over HTTP, just like any other HttpProvider. Note that because EtherSim is a blockchain in memory, we _need_ to share one instance as deploying to one instance of EtherSim won't share state with another. \n\nAnswering the question more generally, this means that EtherSim as a provider (or, \"as a library\") is only useful within the execution context that instantiates it. And in that case it's effectively a nice-to-have that makes a few things easier, like not having to deal with port numbers, but otherwise doesn't provide a whole lot of added value. For instance:\n\nAs a web server (pseudo-code):\n\n```\nvar Server = require(\"ethersim/server\");\nServer.startServer(8545);\nweb3.setProvider(new web3.providers.HttpProvider(\"http://localhost:8545\"));\n```\n\nvs., as a library (pseudo-code):\n\n```\nvar provider = require(\"ethersim/provider\");\nweb3.setProvider(provider);\n```\n\nI can imagine some cases where it's important to not have a port number, but I think those cases are very few, not to mention solely applicable to Node. Also, Iuri's implementation of it here https://github.com/iurimatias/EtherSim/commit/0d17f6d5bbcb032272417a41d8e688f28023474d (i.e., directly accessing methods through the Manager object, and wanting to support not needing to provide a callback) is bad code and can be done in much better ways without opening up the possibility for new error cases (for instance, this line is fundamentally broken and **requires** a callback, if you want EtherSim to act like any other Ethereum client: https://github.com/iurimatias/EtherSim/commit/0d17f6d5bbcb032272417a41d8e688f28023474d#diff-b840698050e033004db3ac04392b9ea1L81).\n\nSo, in short, I can see the value, but there's not much value. And in my opinion the value's not worth the mess that's happening in Iuri's code.\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/166989686/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/166990812",
    "html_url": "https://github.com/trufflesuite/truffle/issues/67#issuecomment-166990812",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/67",
    "id": 166990812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Njk5MDgxMg==",
    "user": {
      "login": "tcoulter",
      "id": 92629,
      "node_id": "MDQ6VXNlcjkyNjI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/92629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tcoulter",
      "html_url": "https://github.com/tcoulter",
      "followers_url": "https://api.github.com/users/tcoulter/followers",
      "following_url": "https://api.github.com/users/tcoulter/following{/other_user}",
      "gists_url": "https://api.github.com/users/tcoulter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tcoulter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tcoulter/subscriptions",
      "organizations_url": "https://api.github.com/users/tcoulter/orgs",
      "repos_url": "https://api.github.com/users/tcoulter/repos",
      "events_url": "https://api.github.com/users/tcoulter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tcoulter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-23T21:13:28Z",
    "updated_at": "2015-12-23T21:14:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "> So let's say we add a truffle develop keyword. Would it automatically pass the current rpc.port value to EtherSim as its port, or would we add a new EtherSim config hash to the app.json\n\nWell, we'd make it do that, ya. But to do so, truffle would have to do things in this order:\n1. Start Ethersim on some port\n2. Deploy contracts to EtherSim (optionally recompile at this step, or compile if they're not compiled yet)\n3. Change the `config` value to point to the Ethersim we loaded up\n4. Rebuild the app with that `config` (will happen automatically if we run the equivalent of `truffle serve`) \n5. Viola! The Truffle bootstrapping that happens within your dapp will take care of the rest (i.e., pointing at the host and port of the EtherSim we started in step (1), since it was in the config)\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/166990812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/167003129",
    "html_url": "https://github.com/trufflesuite/truffle/issues/67#issuecomment-167003129",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/67",
    "id": 167003129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzAwMzEyOQ==",
    "user": {
      "login": "danfinlay",
      "id": 542863,
      "node_id": "MDQ6VXNlcjU0Mjg2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/542863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danfinlay",
      "html_url": "https://github.com/danfinlay",
      "followers_url": "https://api.github.com/users/danfinlay/followers",
      "following_url": "https://api.github.com/users/danfinlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/danfinlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danfinlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danfinlay/subscriptions",
      "organizations_url": "https://api.github.com/users/danfinlay/orgs",
      "repos_url": "https://api.github.com/users/danfinlay/repos",
      "events_url": "https://api.github.com/users/danfinlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danfinlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-23T22:35:39Z",
    "updated_at": "2015-12-23T22:35:39Z",
    "author_association": "NONE",
    "body": "That sounds good! I'll take this opportunity to graze over the Truffle internals to familiarize myself with where these things happen.\n- Dan\n\n> On Dec 23, 2015, at 1:13 PM, Tim Coulter notifications@github.com wrote:\n> \n> So let's say we add a truffle develop keyword. Would it automatically pass the current rpc.port value to EtherSim as its port, or would we add a new EtherSim config hash to the app.json\n> \n> Well, we'd make it do that, ya. But to do so, truffle would have to do things in this order:\n> \n> Start Ethersim on some port\n> Deploy contracts to EtherSim (optionally recompile compile at this step, or compile if they're not yet)\n> Change the config value to point to the Ethersim we loaded up\n> Rebuild the app with that config (will happen automatically if we run truffle serve)\n> Viola! The Truffle bootstrapping that happens within your dapp will take care of the rest (i.e., pointing at the host and port of the EtherSim we started in step (1), since it was in the config)\n> —\n> Reply to this email directly or view it on GitHub.\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/167003129/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/249631763",
    "html_url": "https://github.com/trufflesuite/truffle/issues/67#issuecomment-249631763",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/67",
    "id": 249631763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTYzMTc2Mw==",
    "user": {
      "login": "tcoulter",
      "id": 92629,
      "node_id": "MDQ6VXNlcjkyNjI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/92629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tcoulter",
      "html_url": "https://github.com/tcoulter",
      "followers_url": "https://api.github.com/users/tcoulter/followers",
      "following_url": "https://api.github.com/users/tcoulter/following{/other_user}",
      "gists_url": "https://api.github.com/users/tcoulter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tcoulter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tcoulter/subscriptions",
      "organizations_url": "https://api.github.com/users/tcoulter/orgs",
      "repos_url": "https://api.github.com/users/tcoulter/repos",
      "events_url": "https://api.github.com/users/tcoulter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tcoulter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-26T17:04:33Z",
    "updated_at": "2016-09-26T17:04:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm, I'm not sure I agree with my statements above. I didn't do a full reread, but looks like I was plain wrong. That said, I'm now thinking this:\n\n---\n\nI’m thinking of integrating the testrpc into Truffle. So you could do something like this:\n\n```\n$ truffle migrate —dry-run http://localhost:8545\n```\n\nWhere you point it to the main chain and it migrates off a fork. Similarly, you wouldn't have to set up your own testrpc for `truffle test`. \n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/249631763/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/258599909",
    "html_url": "https://github.com/trufflesuite/truffle/issues/67#issuecomment-258599909",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/67",
    "id": 258599909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODU5OTkwOQ==",
    "user": {
      "login": "jvah",
      "id": 1647766,
      "node_id": "MDQ6VXNlcjE2NDc3NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1647766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jvah",
      "html_url": "https://github.com/jvah",
      "followers_url": "https://api.github.com/users/jvah/followers",
      "following_url": "https://api.github.com/users/jvah/following{/other_user}",
      "gists_url": "https://api.github.com/users/jvah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jvah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jvah/subscriptions",
      "organizations_url": "https://api.github.com/users/jvah/orgs",
      "repos_url": "https://api.github.com/users/jvah/repos",
      "events_url": "https://api.github.com/users/jvah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jvah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-05T09:09:37Z",
    "updated_at": "2016-11-05T09:09:37Z",
    "author_association": "NONE",
    "body": "Just in case this is helpful, I'm using my own package.json and a script like this to run tests:\n\n```\n    \"test\": \"testrpc & truffle test ; RETVAL=$? ; JOBS=`jobs -p` ; if [ -n \\\"$JOBS\\\" ]; then kill $JOBS; fi ; exit $RETVAL\"\n```\n\nIt attempts to start testrpc (which will fail in case there already is a client listening to the same port), then run the tests and finally kill testrpc in case it is still running, before returning the mocha return code.\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/258599909/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/314567608",
    "html_url": "https://github.com/trufflesuite/truffle/issues/67#issuecomment-314567608",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/67",
    "id": 314567608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDU2NzYwOA==",
    "user": {
      "login": "tcoulter",
      "id": 92629,
      "node_id": "MDQ6VXNlcjkyNjI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/92629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tcoulter",
      "html_url": "https://github.com/tcoulter",
      "followers_url": "https://api.github.com/users/tcoulter/followers",
      "following_url": "https://api.github.com/users/tcoulter/following{/other_user}",
      "gists_url": "https://api.github.com/users/tcoulter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tcoulter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tcoulter/subscriptions",
      "organizations_url": "https://api.github.com/users/tcoulter/orgs",
      "repos_url": "https://api.github.com/users/tcoulter/repos",
      "events_url": "https://api.github.com/users/tcoulter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tcoulter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-11T20:51:05Z",
    "updated_at": "2017-07-11T20:51:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "This ticket is old. We're tracking this in #490. Still a good idea now more than ever though. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/314567608/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
