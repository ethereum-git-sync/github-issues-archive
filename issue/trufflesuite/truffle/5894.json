{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/5894",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5894/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5894/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5894/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/5894",
  "id": 1584726442,
  "node_id": "I_kwDOAkfq-c5edQGq",
  "number": 5894,
  "title": "truffle develop mistakes test variable as running truffle test",
  "user": {
    "login": "emilyJLin95",
    "id": 17280653,
    "node_id": "MDQ6VXNlcjE3MjgwNjUz",
    "avatar_url": "https://avatars.githubusercontent.com/u/17280653?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/emilyJLin95",
    "html_url": "https://github.com/emilyJLin95",
    "followers_url": "https://api.github.com/users/emilyJLin95/followers",
    "following_url": "https://api.github.com/users/emilyJLin95/following{/other_user}",
    "gists_url": "https://api.github.com/users/emilyJLin95/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/emilyJLin95/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/emilyJLin95/subscriptions",
    "organizations_url": "https://api.github.com/users/emilyJLin95/orgs",
    "repos_url": "https://api.github.com/users/emilyJLin95/repos",
    "events_url": "https://api.github.com/users/emilyJLin95/events{/privacy}",
    "received_events_url": "https://api.github.com/users/emilyJLin95/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1675041996,
      "node_id": "MDU6TGFiZWwxNjc1MDQxOTk2",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/priority4%20%F0%9F%93%8B",
      "name": "priority4 ðŸ“‹",
      "color": "006b75",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "cds-amal",
    "id": 2529600,
    "node_id": "MDQ6VXNlcjI1Mjk2MDA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2529600?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cds-amal",
    "html_url": "https://github.com/cds-amal",
    "followers_url": "https://api.github.com/users/cds-amal/followers",
    "following_url": "https://api.github.com/users/cds-amal/following{/other_user}",
    "gists_url": "https://api.github.com/users/cds-amal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cds-amal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cds-amal/subscriptions",
    "organizations_url": "https://api.github.com/users/cds-amal/orgs",
    "repos_url": "https://api.github.com/users/cds-amal/repos",
    "events_url": "https://api.github.com/users/cds-amal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cds-amal/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "cds-amal",
      "id": 2529600,
      "node_id": "MDQ6VXNlcjI1Mjk2MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2529600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cds-amal",
      "html_url": "https://github.com/cds-amal",
      "followers_url": "https://api.github.com/users/cds-amal/followers",
      "following_url": "https://api.github.com/users/cds-amal/following{/other_user}",
      "gists_url": "https://api.github.com/users/cds-amal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cds-amal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cds-amal/subscriptions",
      "organizations_url": "https://api.github.com/users/cds-amal/orgs",
      "repos_url": "https://api.github.com/users/cds-amal/repos",
      "events_url": "https://api.github.com/users/cds-amal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cds-amal/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-02-14T19:42:59Z",
  "updated_at": "2023-02-16T18:56:30Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "when reassigning a variable called `test` in the console, truffle mistakenly runs `truffle test`\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/5894/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5894/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1430302774",
    "html_url": "https://github.com/trufflesuite/truffle/issues/5894#issuecomment-1430302774",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5894",
    "id": 1430302774,
    "node_id": "IC_kwDOAkfq-c5VQLA2",
    "user": {
      "login": "cds-amal",
      "id": 2529600,
      "node_id": "MDQ6VXNlcjI1Mjk2MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2529600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cds-amal",
      "html_url": "https://github.com/cds-amal",
      "followers_url": "https://api.github.com/users/cds-amal/followers",
      "following_url": "https://api.github.com/users/cds-amal/following{/other_user}",
      "gists_url": "https://api.github.com/users/cds-amal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cds-amal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cds-amal/subscriptions",
      "organizations_url": "https://api.github.com/users/cds-amal/orgs",
      "repos_url": "https://api.github.com/users/cds-amal/repos",
      "events_url": "https://api.github.com/users/cds-amal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cds-amal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-14T20:00:28Z",
    "updated_at": "2023-02-14T20:00:28Z",
    "author_association": "MEMBER",
    "body": "Nice find @emilyJLin95. This would fail with any expression that assigns to a variable that matches an allowed truffle command. So, for example: `build = MetaCoin.deployed()` ... would try to kick off a build. :facepalm: Oh well. The least we can do is add logic to consider an assignment statement, whose target (LHS) matches an allowed truffle command.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1430302774/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1430375900",
    "html_url": "https://github.com/trufflesuite/truffle/issues/5894#issuecomment-1430375900",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5894",
    "id": 1430375900,
    "node_id": "IC_kwDOAkfq-c5VQc3c",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-14T21:04:26Z",
    "updated_at": "2023-02-14T21:04:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think just handling assignment statements would work very well.  What happens if I do `test  = await TestContract.deployed();` followed by `test . run ( )`?  :-/  I don't know if it makes sense to handle it without some more general way...\r\n\r\nBut, I think that more general way might exist!  What if we used `vm.compileFunction()`?  I think we could use `vm.compileFunction` as a way to check if the input is valid JS, in that it'll throw an exception if it isn't. :)\r\n\r\n...of course, even that doesn't totally solve the problem, because you could have it be the case that a given input is valid JS, but *also* valid as a (reasonable) Truffle command, and then we're left figuring out what to do in that case.  E.g., if someone *just* types `test`, they could want to print out the value of their variable `test`, or they could want to run `truffle test`; I think we kind of have to assume the latter in that case.\r\n\r\nSo, there's definitely some tricky logic to be figured out here in order to get something that is correct most of the time.  Maybe something like:\r\n\r\n1. If it's valid JS, and also not a single Truffle command on its own, treat as JS\r\n2. If it's a single Truffle command on its own, or is a Truffle command in a way that is not valid JS, treat as a Truffle command\r\n3. If neither (1) nor (2) hold, produce an error that assumes it was meant to be JS\r\n\r\n...this might require a call from @gnidan, IDK.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1430375900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1430424577",
    "html_url": "https://github.com/trufflesuite/truffle/issues/5894#issuecomment-1430424577",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5894",
    "id": 1430424577,
    "node_id": "IC_kwDOAkfq-c5VQowB",
    "user": {
      "login": "cds-amal",
      "id": 2529600,
      "node_id": "MDQ6VXNlcjI1Mjk2MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2529600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cds-amal",
      "html_url": "https://github.com/cds-amal",
      "followers_url": "https://api.github.com/users/cds-amal/followers",
      "following_url": "https://api.github.com/users/cds-amal/following{/other_user}",
      "gists_url": "https://api.github.com/users/cds-amal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cds-amal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cds-amal/subscriptions",
      "organizations_url": "https://api.github.com/users/cds-amal/orgs",
      "repos_url": "https://api.github.com/users/cds-amal/repos",
      "events_url": "https://api.github.com/users/cds-amal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cds-amal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-14T21:52:55Z",
    "updated_at": "2023-02-14T21:52:55Z",
    "author_association": "MEMBER",
    "body": "Yes, the REPL can't easily disambiguate a truffle command and a valid JavaScript expression here. I think the best solution is to treat JavaScript like JavaScript and introduce a DSL to invoke truffle commands, like `:test`, `:truffle_cmd`.\n\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1430424577/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1430524177",
    "html_url": "https://github.com/trufflesuite/truffle/issues/5894#issuecomment-1430524177",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5894",
    "id": 1430524177,
    "node_id": "IC_kwDOAkfq-c5VRBER",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-14T23:24:32Z",
    "updated_at": "2023-02-14T23:26:44Z",
    "author_association": "MEMBER",
    "body": "> 1. If it's valid JS, and also not a single Truffle command on its own, treat as JS\r\n> 2. If it's a single Truffle command on its own, or is a Truffle command in a way that is not valid JS, treat as a Truffle command\r\n> 3. If neither (1) nor (2) hold, produce an error that assumes it was meant to be JS\r\n\r\nI concur that this is probably the right path, with one added point: if you assign to an identifier that clobbers a Truffle command, then subsequently that identifier should be treated as the variable and not treated as a command invocation (so `test = ...` followed by `test` should show the value of `test`)\r\n\r\nWe'll of course need `truffle test` to continue working in this case, so you can still run the command... and we might even want syntactic sugar (@cds-amal you suggested `:test` to mean explicitly \"run the `test` command\", and I like this as an additional thing, not as a global replacement to the way we run commands)",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1430524177/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
