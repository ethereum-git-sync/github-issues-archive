{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/569",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/569/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/569/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/569/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/569",
  "id": 257671454,
  "node_id": "MDU6SXNzdWUyNTc2NzE0NTQ=",
  "number": 569,
  "title": "Validating the arguments of an overloaded function fails due to having a different number of parameters than the base function",
  "user": {
    "login": "GreenFomo",
    "id": 6143342,
    "node_id": "MDQ6VXNlcjYxNDMzNDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6143342?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/GreenFomo",
    "html_url": "https://github.com/GreenFomo",
    "followers_url": "https://api.github.com/users/GreenFomo/followers",
    "following_url": "https://api.github.com/users/GreenFomo/following{/other_user}",
    "gists_url": "https://api.github.com/users/GreenFomo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/GreenFomo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/GreenFomo/subscriptions",
    "organizations_url": "https://api.github.com/users/GreenFomo/orgs",
    "repos_url": "https://api.github.com/users/GreenFomo/repos",
    "events_url": "https://api.github.com/users/GreenFomo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/GreenFomo/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 230393326,
      "node_id": "MDU6TGFiZWwyMzAzOTMzMjY=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/bug",
      "name": "bug",
      "color": "fc2929",
      "default": true,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2017-09-14T10:32:45Z",
  "updated_at": "2019-01-09T18:54:26Z",
  "closed_at": "2019-01-09T18:54:25Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "- [X] I've asked for help in the [Truffle Gitter](http://gitter.im/Consensys/truffle) before filing this issue.\r\n\r\n---------------------------\r\n\r\n## Issue\r\n\r\nAs the title says, attempting to call an overloaded function from e.g. a JS test fails, since the validation for the number of function parameters fails, not taking into account that there might be 2 functions with the same name.\r\n\r\n## Steps to Reproduce\r\nIn a contract:\r\n\r\n```\r\nfunction theFn(string p1) {}\r\n\r\nfunction theFn(string p1, string p2) {}\r\n```\r\n\r\nIn a test:\r\n`\r\ninstance.theFn.call('first param', 'second param')\r\n`\r\n\r\nwill fail, since the validator in `cli.bundled.js` (see full stacktrace below) doesn't take into account that there could be multiple functions with the same name, but different number of parameters.\r\n\r\nIt's important to call the function that is defined last, that's the one ignored by the validator (calling the first version of the function, with only 1 param, works fine).\r\n\r\n## Expected Behavior\r\n\r\nI would expect to be able to call an overloaded function from js tests, since it's valid Solidity. \r\n\r\n## Actual Results\r\n\r\n```\r\n Error: Invalid number of arguments to Solidity function\r\n      at Object.InvalidNumberOfSolidityArgs (/usr/lib/node_modules/truffle/build/cli.bundled.js:37282:16)\r\n      at SolidityFunction.validateArgs (/usr/lib/node_modules/truffle/build/cli.bundled.js:223127:22)\r\n      at SolidityFunction.toPayload (/usr/lib/node_modules/truffle/build/cli.bundled.js:223143:10)\r\n      at SolidityFunction.call (/usr/lib/node_modules/truffle/build/cli.bundled.js:223184:24)\r\n      at /usr/lib/node_modules/truffle/build/cli.bundled.js:212184:16\r\n      at Promise (<anonymous>)\r\n      at /usr/lib/node_modules/truffle/build/cli.bundled.js:212175:18\r\n      at <anonymous>\r\n      at process._tickCallback (internal/process/next_tick.js:188:7)\r\n```\r\n\r\n## Environment\r\n\r\n* Operating System: CentOS 7\r\n* Truffle version: v3.4.9\r\n* Ethereum client: EthereumJS TestRPC v4.1.1 (ganache-core: 1.1.2)\r\n* node version: v8.4.0\r\n* npm version: 5.3.0\r\n",
  "closed_by": {
    "login": "gnidan",
    "id": 151065,
    "node_id": "MDQ6VXNlcjE1MTA2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gnidan",
    "html_url": "https://github.com/gnidan",
    "followers_url": "https://api.github.com/users/gnidan/followers",
    "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
    "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
    "organizations_url": "https://api.github.com/users/gnidan/orgs",
    "repos_url": "https://api.github.com/users/gnidan/repos",
    "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gnidan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/569/reactions",
    "total_count": 14,
    "+1": 13,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 1,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/569/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/332700093",
    "html_url": "https://github.com/trufflesuite/truffle/issues/569#issuecomment-332700093",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/569",
    "id": 332700093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjcwMDA5Mw==",
    "user": {
      "login": "wphan",
      "id": 6348407,
      "node_id": "MDQ6VXNlcjYzNDg0MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6348407?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wphan",
      "html_url": "https://github.com/wphan",
      "followers_url": "https://api.github.com/users/wphan/followers",
      "following_url": "https://api.github.com/users/wphan/following{/other_user}",
      "gists_url": "https://api.github.com/users/wphan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wphan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wphan/subscriptions",
      "organizations_url": "https://api.github.com/users/wphan/orgs",
      "repos_url": "https://api.github.com/users/wphan/repos",
      "events_url": "https://api.github.com/users/wphan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wphan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-28T01:22:24Z",
    "updated_at": "2017-09-28T01:22:24Z",
    "author_association": "NONE",
    "body": "Ran into this issue while testing an implementation of [ERC223](https://github.com/ethereum/EIPs/issues/223) which overloads `transfer()` from ERC20.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/332700093/reactions",
      "total_count": 7,
      "+1": 7,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/332882359",
    "html_url": "https://github.com/trufflesuite/truffle/issues/569#issuecomment-332882359",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/569",
    "id": 332882359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjg4MjM1OQ==",
    "user": {
      "login": "rudolfix",
      "id": 17202864,
      "node_id": "MDQ6VXNlcjE3MjAyODY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/17202864?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rudolfix",
      "html_url": "https://github.com/rudolfix",
      "followers_url": "https://api.github.com/users/rudolfix/followers",
      "following_url": "https://api.github.com/users/rudolfix/following{/other_user}",
      "gists_url": "https://api.github.com/users/rudolfix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rudolfix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rudolfix/subscriptions",
      "organizations_url": "https://api.github.com/users/rudolfix/orgs",
      "repos_url": "https://api.github.com/users/rudolfix/repos",
      "events_url": "https://api.github.com/users/rudolfix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rudolfix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-28T15:58:03Z",
    "updated_at": "2017-09-28T15:58:03Z",
    "author_association": "NONE",
    "body": "I fixed this in our truffle fork here\r\nhttps://github.com/Neufund/truffle-contract/commit/ecae09942db60039f2dc4768ceeb88776226f0ca\r\nYou call overloaded functions web3 style\r\n```\r\nconst tx = await token.transfer[\"address,uint256,bytes\"](address, initialBalance, data, { from: fromAddr });\r\n```\r\nI can provide PR to `truffle-contract` if maintainers are interested",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/332882359/reactions",
      "total_count": 12,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 8,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/345441870",
    "html_url": "https://github.com/trufflesuite/truffle/issues/569#issuecomment-345441870",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/569",
    "id": 345441870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ0MTg3MA==",
    "user": {
      "login": "elenadimitrova",
      "id": 703848,
      "node_id": "MDQ6VXNlcjcwMzg0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/703848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elenadimitrova",
      "html_url": "https://github.com/elenadimitrova",
      "followers_url": "https://api.github.com/users/elenadimitrova/followers",
      "following_url": "https://api.github.com/users/elenadimitrova/following{/other_user}",
      "gists_url": "https://api.github.com/users/elenadimitrova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elenadimitrova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elenadimitrova/subscriptions",
      "organizations_url": "https://api.github.com/users/elenadimitrova/orgs",
      "repos_url": "https://api.github.com/users/elenadimitrova/repos",
      "events_url": "https://api.github.com/users/elenadimitrova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elenadimitrova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-18T13:19:16Z",
    "updated_at": "2017-11-18T13:19:16Z",
    "author_association": "NONE",
    "body": "I'm sure maintainers @tcoulter and @gnidan would be interested in a PR @rudolfix :)",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/345441870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/345461862",
    "html_url": "https://github.com/trufflesuite/truffle/issues/569#issuecomment-345461862",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/569",
    "id": 345461862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ2MTg2Mg==",
    "user": {
      "login": "rudolfix",
      "id": 17202864,
      "node_id": "MDQ6VXNlcjE3MjAyODY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/17202864?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rudolfix",
      "html_url": "https://github.com/rudolfix",
      "followers_url": "https://api.github.com/users/rudolfix/followers",
      "following_url": "https://api.github.com/users/rudolfix/following{/other_user}",
      "gists_url": "https://api.github.com/users/rudolfix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rudolfix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rudolfix/subscriptions",
      "organizations_url": "https://api.github.com/users/rudolfix/orgs",
      "repos_url": "https://api.github.com/users/rudolfix/repos",
      "events_url": "https://api.github.com/users/rudolfix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rudolfix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-18T18:38:26Z",
    "updated_at": "2017-11-18T18:38:41Z",
    "author_association": "NONE",
    "body": "Here it is: https://github.com/trufflesuite/truffle-contract/pull/75 @elenadimitrova ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/345461862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/352852159",
    "html_url": "https://github.com/trufflesuite/truffle/issues/569#issuecomment-352852159",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/569",
    "id": 352852159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjg1MjE1OQ==",
    "user": {
      "login": "DeRain",
      "id": 3999180,
      "node_id": "MDQ6VXNlcjM5OTkxODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3999180?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DeRain",
      "html_url": "https://github.com/DeRain",
      "followers_url": "https://api.github.com/users/DeRain/followers",
      "following_url": "https://api.github.com/users/DeRain/following{/other_user}",
      "gists_url": "https://api.github.com/users/DeRain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DeRain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DeRain/subscriptions",
      "organizations_url": "https://api.github.com/users/DeRain/orgs",
      "repos_url": "https://api.github.com/users/DeRain/repos",
      "events_url": "https://api.github.com/users/DeRain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DeRain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T18:53:59Z",
    "updated_at": "2017-12-19T18:53:59Z",
    "author_association": "NONE",
    "body": "As an option, we could call overloaded methods via web3 directly, i've created an article with details https://beresnev.pro/test-overloaded-solidity-functions-via-truffle/",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/352852159/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/363817154",
    "html_url": "https://github.com/trufflesuite/truffle/issues/569#issuecomment-363817154",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/569",
    "id": 363817154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzgxNzE1NA==",
    "user": {
      "login": "MidnightLightning",
      "id": 250250,
      "node_id": "MDQ6VXNlcjI1MDI1MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MidnightLightning",
      "html_url": "https://github.com/MidnightLightning",
      "followers_url": "https://api.github.com/users/MidnightLightning/followers",
      "following_url": "https://api.github.com/users/MidnightLightning/following{/other_user}",
      "gists_url": "https://api.github.com/users/MidnightLightning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MidnightLightning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MidnightLightning/subscriptions",
      "organizations_url": "https://api.github.com/users/MidnightLightning/orgs",
      "repos_url": "https://api.github.com/users/MidnightLightning/repos",
      "events_url": "https://api.github.com/users/MidnightLightning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MidnightLightning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T16:03:24Z",
    "updated_at": "2018-02-07T16:15:21Z",
    "author_association": "NONE",
    "body": "> It's important to call the function that is defined last\r\n\r\nNo, that's not how the function \"overloading\" works in Solidity; it's not that the last-defined function with that name is the \"real\" one, but rather ***all*** functions with the same name are valid, if they have different input parameters.\r\n\r\nFrom the example in the original post, if a contract has the functions:\r\n\r\n```\r\nfunction theFn(string p1);\r\nfunction theFn(string p1, string p2);\r\n```\r\n\r\nThe ABI would include something like:\r\n```\r\n[\r\n  {\r\n    name: 'theFn',\r\n    type: 'function',\r\n    inputs: [\r\n      { \"name\": \"p1\", \"type\": \"string\" }\r\n    ]\r\n  },\r\n  {\r\n    name: 'theFn',\r\n    type: 'function',\r\n    inputs: [\r\n      { \"name\": \"p1\", \"type\": \"string\" },\r\n      { \"name\": \"p2\", \"type\": \"string\" }\r\n    ]\r\n  }\r\n]\r\n```\r\n\r\nIt would be valid to call either function, since the signature for the two is different (`theFn(string)` vs. `theFn(string,string)`, which when hashed to get a ).\r\n\r\nIn this case, the Truffle testing infrastructure needs to know how to parse out:\r\n\r\n```js\r\ninstance.theFn.call('first param', 'second param'); // call theFn(string,string)\r\ninstance.theFn.call('first param'); // call theFn(string)\r\ninstance.theFn.call('first param', { from: accounts[3] }); // call theFn(string), using account[3]\r\ninstance.theFn.call('first param', 'second param', { from: accounts[3] }); // call theFn(string,string), using account[3]\r\n```\r\nDone this way, it would need to do some introspection on the last argument given, to see if it's an options object or some other type of input.\r\n\r\nLooks like pull requests [75](https://github.com/trufflesuite/truffle-contract/pull/75) and [94](https://github.com/trufflesuite/truffle-contract/pull/94) do account for this need with two separate (but compatible options), so looks like they are correct, even though this original issue's requested resolution is not the way Solidity handles the situation.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/363817154/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/372134760",
    "html_url": "https://github.com/trufflesuite/truffle/issues/569#issuecomment-372134760",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/569",
    "id": 372134760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjEzNDc2MA==",
    "user": {
      "login": "MartinKral",
      "id": 4499530,
      "node_id": "MDQ6VXNlcjQ0OTk1MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4499530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MartinKral",
      "html_url": "https://github.com/MartinKral",
      "followers_url": "https://api.github.com/users/MartinKral/followers",
      "following_url": "https://api.github.com/users/MartinKral/following{/other_user}",
      "gists_url": "https://api.github.com/users/MartinKral/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MartinKral/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MartinKral/subscriptions",
      "organizations_url": "https://api.github.com/users/MartinKral/orgs",
      "repos_url": "https://api.github.com/users/MartinKral/repos",
      "events_url": "https://api.github.com/users/MartinKral/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MartinKral/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-11T17:54:54Z",
    "updated_at": "2018-03-11T17:54:54Z",
    "author_association": "NONE",
    "body": "> instance.theFn.call('first param', 'second param'); // call theFn(string,string)\r\n> instance.theFn.call('first param'); // call theFn(string)\r\n\r\nHow would I call a function overload with the same number of parameters, but different types (string and uint)?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/372134760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/452813775",
    "html_url": "https://github.com/trufflesuite/truffle/issues/569#issuecomment-452813775",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/569",
    "id": 452813775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjgxMzc3NQ==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T18:54:25Z",
    "updated_at": "2019-01-09T18:54:25Z",
    "author_association": "MEMBER",
    "body": "Closing this, as Truffle v4 basically had no support for overloaded functions. This is now resolved in Truffle v5. Please see the v5 release notes about [overloaded functions](https://github.com/trufflesuite/truffle/releases/tag/v5.0.0#user-content-what-s-new-in-truffle-v5-interacting-with-your-contracts-overloaded-solidity-functions). Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/452813775/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
