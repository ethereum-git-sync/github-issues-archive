{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/3941",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3941/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3941/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3941/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/3941",
  "id": 838033170,
  "node_id": "MDU6SXNzdWU4MzgwMzMxNzA=",
  "number": 3941,
  "title": "Recognition of proxy contracts in codec and fetch-and-compile",
  "user": {
    "login": "haltman-at",
    "id": 35589221,
    "node_id": "MDQ6VXNlcjM1NTg5MjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/haltman-at",
    "html_url": "https://github.com/haltman-at",
    "followers_url": "https://api.github.com/users/haltman-at/followers",
    "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
    "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
    "organizations_url": "https://api.github.com/users/haltman-at/orgs",
    "repos_url": "https://api.github.com/users/haltman-at/repos",
    "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
    "received_events_url": "https://api.github.com/users/haltman-at/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1675041996,
      "node_id": "MDU6TGFiZWwxNjc1MDQxOTk2",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/priority4%20%F0%9F%93%8B",
      "name": "priority4 ðŸ“‹",
      "color": "006b75",
      "default": false,
      "description": ""
    },
    {
      "id": 3628476601,
      "node_id": "LA_kwDOAkfq-c7YRii5",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/decoder",
      "name": "decoder",
      "color": "D3249C",
      "default": false,
      "description": ""
    },
    {
      "id": 3628493077,
      "node_id": "LA_kwDOAkfq-c7YRmkV",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/fetch-and-compile",
      "name": "fetch-and-compile",
      "color": "19EC49",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-03-22T19:16:59Z",
  "updated_at": "2023-05-09T20:28:17Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Issue\r\n\r\nTruffle Debugger, Truffle Decoder, and the source-fetcher (or at least our uses of it) run into significant problems with proxy contracts.  Ideally:\r\n\r\n1. Truffle Codec would recognize proxy contracts as the thing they're proxying (presumably with a flag to indicate that it's a proxy).  (Or maybe more than a flag -- we could indicate how many times it's proxied. :P  Or what type of proxy specifically, but that's harder...)  (Specifically, this would mean altering the `findContext` function and/or its use.)  There are some complications worth noting here:\r\n\r\n* We don't want to copy over *all* the fields from the proxied contract... like, we don't want to copy over, e.g., the source map!  So the result would be sort of a hybrid.\r\n* There's also the question of the context hash.  Do we use the same hash as the proxied contract?  I think we can't, but we also need to have the hash of the proxied contract for allocation purposes, because that's the point!  So what's currently one field, the context hash, would need to split in two; the actual hash, and the effective hash.\r\n* We can't *just* alter `findContext`, as performing this resolution might require making network requests.  This might mean performing the handling outside of `findContext`, or it might mean turning `findContext` into a generator function which has to be driven.  Or perhaps we could replace our current uses of `findContext` in the debugger and decoder with `decodeBytecode`?  That's already a generator that serves as a wrapper around `findContext`!  (Although I don't remember offhand whether I wrote `decodeBytecode` so that it could handle *constructor* bytecode, since that was only really meant for *deployed* bytecode.)  Also, using `decodeBytecode` has the disadavantage that it would mean that, once upgradeable proxies are supported, `decodeBytecode` could make storage requests, which I'm not sure I want it to do.\r\n\r\n2. `source-fetcher` (or, perhaps just our uses of source-fetcher -- perhaps a wrapper could be created for this and other purposes), on fetching a proxy contract, would recognize that it's a proxy contract and fetch the sources for the contract being proxied.\r\n\r\nNote that doing this in general is hard, particularly for upgradeable proxies.  But we could start by just doing this for [EIP-1167](https://eips.ethereum.org/EIPS/eip-1167) proxies, which would be much simpler, and other types of proxies could come later.\r\n\r\nAlso note: Supporting upgradeable proxies might require making it so that the debugger can handle an address having its associated context change over the course of the transaction!  ( mean, that can already happen via self-destruct and contract creation, but *without* that... this might mean contexts would now be computed in a selector rather than stored in the state.\r\n\r\n## Environment\r\n\r\n* Truffle version (`truffle version`): 5.2.5",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/3941/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3941/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/866415281",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3941#issuecomment-866415281",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3941",
    "id": 866415281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjQxNTI4MQ==",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-23T00:02:56Z",
    "updated_at": "2021-06-23T00:02:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note: @gnidan notes that in the future we should in particular support the [diamond standard](https://eips.ethereum.org/EIPS/eip-2535).  (This should possibly become a separate issue in the future.)",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/866415281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1540847015",
    "html_url": "https://github.com/trufflesuite/truffle/issues/3941#issuecomment-1540847015",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/3941",
    "id": 1540847015,
    "node_id": "IC_kwDOAkfq-c5b13Wn",
    "user": {
      "login": "haltman-at",
      "id": 35589221,
      "node_id": "MDQ6VXNlcjM1NTg5MjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35589221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltman-at",
      "html_url": "https://github.com/haltman-at",
      "followers_url": "https://api.github.com/users/haltman-at/followers",
      "following_url": "https://api.github.com/users/haltman-at/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltman-at/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltman-at/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltman-at/subscriptions",
      "organizations_url": "https://api.github.com/users/haltman-at/orgs",
      "repos_url": "https://api.github.com/users/haltman-at/repos",
      "events_url": "https://api.github.com/users/haltman-at/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltman-at/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T20:28:00Z",
    "updated_at": "2023-05-09T20:28:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note: The wrapper around source-fetcher now exists and is called `fetch-and-compile`.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1540847015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
