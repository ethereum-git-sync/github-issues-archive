{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/1244",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1244/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1244/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1244/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/1244",
  "id": 355569091,
  "node_id": "MDU6SXNzdWUzNTU1NjkwOTE=",
  "number": 1244,
  "title": "Truffle Compile Forgets Booleans in ABI",
  "user": {
    "login": "360disrupt",
    "id": 7427903,
    "node_id": "MDQ6VXNlcjc0Mjc5MDM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7427903?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/360disrupt",
    "html_url": "https://github.com/360disrupt",
    "followers_url": "https://api.github.com/users/360disrupt/followers",
    "following_url": "https://api.github.com/users/360disrupt/following{/other_user}",
    "gists_url": "https://api.github.com/users/360disrupt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/360disrupt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/360disrupt/subscriptions",
    "organizations_url": "https://api.github.com/users/360disrupt/orgs",
    "repos_url": "https://api.github.com/users/360disrupt/repos",
    "events_url": "https://api.github.com/users/360disrupt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/360disrupt/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-08-30T12:46:29Z",
  "updated_at": "2018-08-30T14:22:38Z",
  "closed_at": "2018-08-30T14:22:38Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "- [ x ] I've asked for help in the [Truffle Gitter](http://gitter.im/Consensys/truffle) before filing this issue.\r\n\r\n---------------------------\r\n\r\n## Issue\r\n\r\nBooleans are not included into the ABI.\r\n\r\n## Steps to Reproduce\r\n\r\nCompile the example code of the [ethereum homepage](https://www.ethereum.org/crowdsale) (changed constructor naming => constructor):\r\n\r\n```\r\npragma solidity ^0.4.18;\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount) external;\r\n}\r\n\r\ncontract Crowdsale {\r\n    address public beneficiary;\r\n    uint public fundingGoal;\r\n    uint public amountRaised;\r\n    uint public deadline;\r\n    uint public price;\r\n    token public tokenReward;\r\n    mapping(address => uint256) public balanceOf;\r\n    bool fundingGoalReached = false;\r\n    bool crowdsaleClosed = false;\r\n\r\n    event GoalReached(address recipient, uint totalAmountRaised);\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n    /**\r\n     * Constructor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    constructor (\r\n        address ifSuccessfulSendTo,\r\n        uint fundingGoalInEthers,\r\n        uint durationInMinutes,\r\n        uint etherCostOfEachToken,\r\n        address addressOfTokenUsedAsReward\r\n    ) public {\r\n        beneficiary = ifSuccessfulSendTo;\r\n        fundingGoal = fundingGoalInEthers * 1 ether;\r\n        deadline = now + durationInMinutes * 1 minutes;\r\n        price = etherCostOfEachToken * 1 ether;\r\n        tokenReward = token(addressOfTokenUsedAsReward);\r\n    }\r\n\r\n    /**\r\n     * Fallback function\r\n     *\r\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n     */\r\n    function () payable public {\r\n        require(!crowdsaleClosed);\r\n        uint amount = msg.value;\r\n        balanceOf[msg.sender] += amount;\r\n        amountRaised += amount;\r\n        tokenReward.transfer(msg.sender, amount / price);\r\n       emit FundTransfer(msg.sender, amount, true);\r\n    }\r\n\r\n    modifier afterDeadline() { if (now >= deadline) _; }\r\n\r\n    /**\r\n     * Check if goal was reached\r\n     *\r\n     * Checks if the goal or time limit has been reached and ends the campaign\r\n     */\r\n    function checkGoalReached() public afterDeadline {\r\n        if (amountRaised >= fundingGoal){\r\n            fundingGoalReached = true;\r\n            emit GoalReached(beneficiary, amountRaised);\r\n        }\r\n        crowdsaleClosed = true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Withdraw the funds\r\n     *\r\n     * Checks to see if goal or time limit has been reached, and if so, and the funding goal was reached,\r\n     * sends the entire amount to the beneficiary. If goal was not reached, each contributor can withdraw\r\n     * the amount they contributed.\r\n     */\r\n    function safeWithdrawal() public afterDeadline {\r\n        if (!fundingGoalReached) {\r\n            uint amount = balanceOf[msg.sender];\r\n            balanceOf[msg.sender] = 0;\r\n            if (amount > 0) {\r\n                if (msg.sender.send(amount)) {\r\n                   emit FundTransfer(msg.sender, amount, false);\r\n                } else {\r\n                    balanceOf[msg.sender] = amount;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (fundingGoalReached && beneficiary == msg.sender) {\r\n            if (beneficiary.send(amountRaised)) {\r\n               emit FundTransfer(beneficiary, amountRaised, false);\r\n            } else {\r\n                //If we fail to send the funds to beneficiary, unlock funders balance\r\n                fundingGoalReached = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n## Expected Behavior\r\n\r\nBooleans included into the ABI\r\n\r\n## Actual Results\r\n\r\nBooleans not  included into the ABI.\r\n\r\n```\r\n\"abi\": [\r\n    {\r\n      \"constant\": true,\r\n      \"inputs\": [],\r\n      \"name\": \"deadline\",\r\n      \"outputs\": [\r\n        {\r\n          \"name\": \"\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"constant\": true,\r\n      \"inputs\": [],\r\n      \"name\": \"beneficiary\",\r\n      \"outputs\": [\r\n        {\r\n          \"name\": \"\",\r\n          \"type\": \"address\"\r\n        }\r\n      ],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"constant\": true,\r\n      \"inputs\": [],\r\n      \"name\": \"tokenReward\",\r\n      \"outputs\": [\r\n        {\r\n          \"name\": \"\",\r\n          \"type\": \"address\"\r\n        }\r\n      ],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"constant\": true,\r\n      \"inputs\": [\r\n        {\r\n          \"name\": \"\",\r\n          \"type\": \"address\"\r\n        }\r\n      ],\r\n      \"name\": \"balanceOf\",\r\n      \"outputs\": [\r\n        {\r\n          \"name\": \"\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"constant\": true,\r\n      \"inputs\": [],\r\n      \"name\": \"fundingGoal\",\r\n      \"outputs\": [\r\n        {\r\n          \"name\": \"\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"constant\": true,\r\n      \"inputs\": [],\r\n      \"name\": \"amountRaised\",\r\n      \"outputs\": [\r\n        {\r\n          \"name\": \"\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"constant\": true,\r\n      \"inputs\": [],\r\n      \"name\": \"price\",\r\n      \"outputs\": [\r\n        {\r\n          \"name\": \"\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"inputs\": [\r\n        {\r\n          \"name\": \"ifSuccessfulSendTo\",\r\n          \"type\": \"address\"\r\n        },\r\n        {\r\n          \"name\": \"fundingGoalInEthers\",\r\n          \"type\": \"uint256\"\r\n        },\r\n        {\r\n          \"name\": \"durationInMinutes\",\r\n          \"type\": \"uint256\"\r\n        },\r\n        {\r\n          \"name\": \"etherCostOfEachToken\",\r\n          \"type\": \"uint256\"\r\n        },\r\n        {\r\n          \"name\": \"addressOfTokenUsedAsReward\",\r\n          \"type\": \"address\"\r\n        }\r\n      ],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"nonpayable\",\r\n      \"type\": \"constructor\"\r\n    },\r\n    {\r\n      \"payable\": true,\r\n      \"stateMutability\": \"payable\",\r\n      \"type\": \"fallback\"\r\n    },\r\n    {\r\n      \"anonymous\": false,\r\n      \"inputs\": [\r\n        {\r\n          \"indexed\": false,\r\n          \"name\": \"recipient\",\r\n          \"type\": \"address\"\r\n        },\r\n        {\r\n          \"indexed\": false,\r\n          \"name\": \"totalAmountRaised\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"name\": \"GoalReached\",\r\n      \"type\": \"event\"\r\n    },\r\n    {\r\n      \"anonymous\": false,\r\n      \"inputs\": [\r\n        {\r\n          \"indexed\": false,\r\n          \"name\": \"backer\",\r\n          \"type\": \"address\"\r\n        },\r\n        {\r\n          \"indexed\": false,\r\n          \"name\": \"amount\",\r\n          \"type\": \"uint256\"\r\n        },\r\n        {\r\n          \"indexed\": false,\r\n          \"name\": \"isContribution\",\r\n          \"type\": \"bool\"\r\n        }\r\n      ],\r\n      \"name\": \"FundTransfer\",\r\n      \"type\": \"event\"\r\n    },\r\n    {\r\n      \"constant\": false,\r\n      \"inputs\": [],\r\n      \"name\": \"checkGoalReached\",\r\n      \"outputs\": [],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"nonpayable\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"constant\": false,\r\n      \"inputs\": [],\r\n      \"name\": \"safeWithdrawal\",\r\n      \"outputs\": [],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"nonpayable\",\r\n      \"type\": \"function\"\r\n    }\r\n  ]\r\n```\r\n\r\n## Environment\r\n\r\n* Operating System: MAC OS\r\n* Ethereum client: Ganache\r\n* Truffle version (`truffle version`): v4.1.14\r\n* node version (`node --version`): v8.1.2\r\n* npm version (`npm --version`): 6.1.0\r\n",
  "closed_by": {
    "login": "360disrupt",
    "id": 7427903,
    "node_id": "MDQ6VXNlcjc0Mjc5MDM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7427903?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/360disrupt",
    "html_url": "https://github.com/360disrupt",
    "followers_url": "https://api.github.com/users/360disrupt/followers",
    "following_url": "https://api.github.com/users/360disrupt/following{/other_user}",
    "gists_url": "https://api.github.com/users/360disrupt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/360disrupt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/360disrupt/subscriptions",
    "organizations_url": "https://api.github.com/users/360disrupt/orgs",
    "repos_url": "https://api.github.com/users/360disrupt/repos",
    "events_url": "https://api.github.com/users/360disrupt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/360disrupt/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/1244/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1244/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/417325378",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1244#issuecomment-417325378",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1244",
    "id": 417325378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzMyNTM3OA==",
    "user": {
      "login": "roderik",
      "id": 16780,
      "node_id": "MDQ6VXNlcjE2Nzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16780?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roderik",
      "html_url": "https://github.com/roderik",
      "followers_url": "https://api.github.com/users/roderik/followers",
      "following_url": "https://api.github.com/users/roderik/following{/other_user}",
      "gists_url": "https://api.github.com/users/roderik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roderik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roderik/subscriptions",
      "organizations_url": "https://api.github.com/users/roderik/orgs",
      "repos_url": "https://api.github.com/users/roderik/repos",
      "events_url": "https://api.github.com/users/roderik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roderik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-30T13:47:15Z",
    "updated_at": "2018-08-30T13:47:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you need to make them public before they go into the ABI",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/417325378/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/417337541",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1244#issuecomment-417337541",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1244",
    "id": 417337541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzMzNzU0MQ==",
    "user": {
      "login": "360disrupt",
      "id": 7427903,
      "node_id": "MDQ6VXNlcjc0Mjc5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7427903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/360disrupt",
      "html_url": "https://github.com/360disrupt",
      "followers_url": "https://api.github.com/users/360disrupt/followers",
      "following_url": "https://api.github.com/users/360disrupt/following{/other_user}",
      "gists_url": "https://api.github.com/users/360disrupt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/360disrupt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/360disrupt/subscriptions",
      "organizations_url": "https://api.github.com/users/360disrupt/orgs",
      "repos_url": "https://api.github.com/users/360disrupt/repos",
      "events_url": "https://api.github.com/users/360disrupt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/360disrupt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-30T14:22:38Z",
    "updated_at": "2018-08-30T14:22:38Z",
    "author_association": "NONE",
    "body": "Sorry, did look at that, you are totally right. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/417337541/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
