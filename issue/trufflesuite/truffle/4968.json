{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/4968",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4968/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4968/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4968/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/4968",
  "id": 1189232728,
  "node_id": "I_kwDOAkfq-c5G4kBY",
  "number": 4968,
  "title": "More declarative testing ",
  "user": {
    "login": "jbrower95",
    "id": 2030176,
    "node_id": "MDQ6VXNlcjIwMzAxNzY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2030176?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbrower95",
    "html_url": "https://github.com/jbrower95",
    "followers_url": "https://api.github.com/users/jbrower95/followers",
    "following_url": "https://api.github.com/users/jbrower95/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbrower95/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbrower95/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbrower95/subscriptions",
    "organizations_url": "https://api.github.com/users/jbrower95/orgs",
    "repos_url": "https://api.github.com/users/jbrower95/repos",
    "events_url": "https://api.github.com/users/jbrower95/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbrower95/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1403343142,
      "node_id": "MDU6TGFiZWwxNDAzMzQzMTQy",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/needs%20investigated",
      "name": "needs investigated",
      "color": "b7410e",
      "default": false,
      "description": ""
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2022-04-01T04:52:36Z",
  "updated_at": "2022-05-18T23:16:01Z",
  "closed_at": "2022-05-18T23:16:01Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "[bsan Github](https://github.com/jbrower95/bsan)\r\n\r\nI made a more declarative testing framework for truffle called `bsan`, where you declare pieces of on-chain state you want to monitor. After every transaction (and each test), BSAN automatically checks if any unwanted state changes occur and fails mocha if needed.\r\n\r\nHaving bsan around when using truffle has made my testing story way more complete, and I think something like this would be a good upstream feature to offer in truffle directly. I can think about how to repackage this as a truffle module when I have some time.\r\n\r\nJust wanted to flag to see if folks were interested in the idea. :D \r\n",
  "closed_by": {
    "login": "lsqproduction",
    "id": 12772017,
    "node_id": "MDQ6VXNlcjEyNzcyMDE3",
    "avatar_url": "https://avatars.githubusercontent.com/u/12772017?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lsqproduction",
    "html_url": "https://github.com/lsqproduction",
    "followers_url": "https://api.github.com/users/lsqproduction/followers",
    "following_url": "https://api.github.com/users/lsqproduction/following{/other_user}",
    "gists_url": "https://api.github.com/users/lsqproduction/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lsqproduction/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lsqproduction/subscriptions",
    "organizations_url": "https://api.github.com/users/lsqproduction/orgs",
    "repos_url": "https://api.github.com/users/lsqproduction/repos",
    "events_url": "https://api.github.com/users/lsqproduction/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lsqproduction/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/4968/reactions",
    "total_count": 3,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 2,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4968/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1091051948",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4968#issuecomment-1091051948",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4968",
    "id": 1091051948,
    "node_id": "IC_kwDOAkfq-c5BCCGs",
    "user": {
      "login": "fainashalts",
      "id": 8952139,
      "node_id": "MDQ6VXNlcjg5NTIxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8952139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fainashalts",
      "html_url": "https://github.com/fainashalts",
      "followers_url": "https://api.github.com/users/fainashalts/followers",
      "following_url": "https://api.github.com/users/fainashalts/following{/other_user}",
      "gists_url": "https://api.github.com/users/fainashalts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fainashalts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fainashalts/subscriptions",
      "organizations_url": "https://api.github.com/users/fainashalts/orgs",
      "repos_url": "https://api.github.com/users/fainashalts/repos",
      "events_url": "https://api.github.com/users/fainashalts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fainashalts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-07T03:54:58Z",
    "updated_at": "2022-04-07T03:54:58Z",
    "author_association": "MEMBER",
    "body": "Thanks for bringing this to our attention @jbrower95! At first glance it seems like a very interesting project. I'm going to add this idea to the agenda for discussion at our team meeting so we can consider this and get back to you!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1091051948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1091054588",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4968#issuecomment-1091054588",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4968",
    "id": 1091054588,
    "node_id": "IC_kwDOAkfq-c5BCCv8",
    "user": {
      "login": "jbrower95",
      "id": 2030176,
      "node_id": "MDQ6VXNlcjIwMzAxNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2030176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrower95",
      "html_url": "https://github.com/jbrower95",
      "followers_url": "https://api.github.com/users/jbrower95/followers",
      "following_url": "https://api.github.com/users/jbrower95/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrower95/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrower95/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrower95/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrower95/orgs",
      "repos_url": "https://api.github.com/users/jbrower95/repos",
      "events_url": "https://api.github.com/users/jbrower95/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrower95/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-07T04:01:03Z",
    "updated_at": "2022-04-07T04:01:03Z",
    "author_association": "NONE",
    "body": "Sounds good! The API in my PR is rough but in the draft PR I have against truffle, the plan looks like;\r\n\r\n- offer a new `contract.stateful(....)` test declaration\r\n- integrate the bsan DappState declaration into that decl\r\n- right now i'm initializing all my contracts in a `before(..)` block, and then declaring my tests after this. I would move the actual test declarations around to allow the `before` to function as it normally does in mocha.\r\n\r\nBut yeah if you did this, everyone could monitor changes to on-chain state during test execution. It's really helpful IMO\r\n\r\nTaking this further, if you had insights into what state was changing from the transactions themselves, you could maybe take away the declarations in the beginning altogether and infer them from the code. That's probably a 10x better way of doing this IMO",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1091054588/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1091078760",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4968#issuecomment-1091078760",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4968",
    "id": 1091078760,
    "node_id": "IC_kwDOAkfq-c5BCIpo",
    "user": {
      "login": "jbrower95",
      "id": 2030176,
      "node_id": "MDQ6VXNlcjIwMzAxNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2030176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrower95",
      "html_url": "https://github.com/jbrower95",
      "followers_url": "https://api.github.com/users/jbrower95/followers",
      "following_url": "https://api.github.com/users/jbrower95/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrower95/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrower95/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrower95/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrower95/orgs",
      "repos_url": "https://api.github.com/users/jbrower95/repos",
      "events_url": "https://api.github.com/users/jbrower95/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrower95/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-07T04:54:39Z",
    "updated_at": "2022-04-07T04:54:39Z",
    "author_association": "NONE",
    "body": "a sample of this is here: https://github.com/trufflesuite/truffle/pull/5000\r\n\r\nneeds testing but that's the general idea",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1091078760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1092081125",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4968#issuecomment-1092081125",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4968",
    "id": 1092081125,
    "node_id": "IC_kwDOAkfq-c5BF9Xl",
    "user": {
      "login": "leeftk",
      "id": 40748420,
      "node_id": "MDQ6VXNlcjQwNzQ4NDIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/40748420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leeftk",
      "html_url": "https://github.com/leeftk",
      "followers_url": "https://api.github.com/users/leeftk/followers",
      "following_url": "https://api.github.com/users/leeftk/following{/other_user}",
      "gists_url": "https://api.github.com/users/leeftk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leeftk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leeftk/subscriptions",
      "organizations_url": "https://api.github.com/users/leeftk/orgs",
      "repos_url": "https://api.github.com/users/leeftk/repos",
      "events_url": "https://api.github.com/users/leeftk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leeftk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-07T18:40:09Z",
    "updated_at": "2022-04-07T18:40:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @jbrower95 could you give us a scenario or example of how you would use this framework and how it improves the developer experience? Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1092081125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1092367321",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4968#issuecomment-1092367321",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4968",
    "id": 1092367321,
    "node_id": "IC_kwDOAkfq-c5BHDPZ",
    "user": {
      "login": "jbrower95",
      "id": 2030176,
      "node_id": "MDQ6VXNlcjIwMzAxNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2030176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrower95",
      "html_url": "https://github.com/jbrower95",
      "followers_url": "https://api.github.com/users/jbrower95/followers",
      "following_url": "https://api.github.com/users/jbrower95/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrower95/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrower95/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrower95/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrower95/orgs",
      "repos_url": "https://api.github.com/users/jbrower95/repos",
      "events_url": "https://api.github.com/users/jbrower95/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrower95/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-08T02:00:32Z",
    "updated_at": "2022-04-08T02:00:32Z",
    "author_association": "NONE",
    "body": "Sure I can show some examples of code using it. My project isn't open source but here are some snippets from my tests\r\n\r\n```\r\ndescribeDapp(\r\n      \"Purchase Tokens\",\r\n      new DappState(\r\n        wallets={\r\n          account0: new ETHWalletMonitor(accounts[0]),\r\n          account1: new ETHWalletMonitor(accounts[1]),\r\n          account2: new ETHWalletMonitor(accounts[2])\r\n        },\r\n        erc20={\r\n          dao: new ERC20Monitor(token, dao.address),\r\n          account0: new ERC20Monitor(token, accounts[0]),\r\n          account1: new ERC20Monitor(token, accounts[1]),\r\n          account2: new ERC20Monitor(token, accounts[2])\r\n        },\r\n        contract={\r\n          daoOwner: new ContractMonitor(dao, dao.tokenContract),\r\n          dapp0SlashCount: new ContractMonitor(dao, dao.dapps, [accounts[0]], keypath=\"proposedSlashCount\"),\r\n          dapp1SlashCount: new ContractMonitor(dao, dao.dapps, [accounts[1]], keypath=\"proposedSlashCount\"),\r\n        },\r\n      ),\r\n      (S) => {\r\n        it(\"Normal Purchase\", async function () {\r\n          await S.wallets.account0.call(S, dao.purchaseTokens, {value: eth2wei(0.2).toString()});\r\n          await S.erc20.account0.expectRisesBy(100, \"Bought tokens 1000->1100\");\r\n          await S.erc20.dao.expectFallsBy(100, \"Dao sends 100 tokens away.\");\r\n          await S.wallets.account0.expectFallsBy(\r\n            eth2wei(0.2),\r\n            \"Buying tokens costs 0.2, user pays this amount\"\r\n          );\r\n        });\r\n\r\n```\r\n\r\nIn this example, i'm tracking the ETH balances of several accounts. I'm also tracking their balances in an erc20 contract, and i'm tracking a few variables on my dao. Notice `dapp1SlashCount` includes a keypath since i'm \"indexing\" into a struct stored on-chain.\r\n\r\nIn my tests, if i were to add code into my smart contract sending additional tokens, the test would fail as the balances would not be what i expect. If any of the ETH accounts changed except for the one I explicitly say will fall by 0.2 ETH, that will fail the test. The idea is that any on-chain state that you care about should be asserted if it changes.\r\n\r\nSo generally your tests should look like;\r\n\r\n<declare the stuff you care about>\r\n<imperative logic>\r\n<assert everything that changes>\r\n<more imperative logic>\r\n<assert everything that changes>\r\n...\r\n\r\nWith this model, refactoring my contract is easy, since if I change amounts (or send to the wrong address by accident) all of my balances are automatically checked for all the accounts I care about. The framework also automates gas estimation for calls by using the txn receipt, so I can say \"falls by 0.2 eth\" even though the account is falling by (gas cost + 0.2eth). Since I don't particularly care about gas cost in this test, this is helpful to hide. \r\n\r\nIf your account doesn't do anything except make a call (i.e doesn't send value{} to a contract), you can just use\r\n`await S.wallets.account0.expectOnlyConsumedGas(msg)` to declare that the account value should only fall by the amount of gas recorded.\r\n\r\nThat's the general idea at least - track state, have your tests run logic, validate that your state only changes in ways you expect. It's a great way to write tests.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1092367321/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1092367937",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4968#issuecomment-1092367937",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4968",
    "id": 1092367937,
    "node_id": "IC_kwDOAkfq-c5BHDZB",
    "user": {
      "login": "jbrower95",
      "id": 2030176,
      "node_id": "MDQ6VXNlcjIwMzAxNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2030176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrower95",
      "html_url": "https://github.com/jbrower95",
      "followers_url": "https://api.github.com/users/jbrower95/followers",
      "following_url": "https://api.github.com/users/jbrower95/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrower95/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrower95/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrower95/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrower95/orgs",
      "repos_url": "https://api.github.com/users/jbrower95/repos",
      "events_url": "https://api.github.com/users/jbrower95/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrower95/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-08T02:01:54Z",
    "updated_at": "2022-04-08T02:01:54Z",
    "author_association": "NONE",
    "body": "This needs a slight facelift (the S in the `.call(..)` is definitely redundant), and it's very verbose overall, but with some aesthetic work this could be really useful to folks writing tests.\r\n\r\nAlso would need to overhaul how I'm doing logging/stdout to be compatible with truffle, and clean some stuff up. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1092367937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1098340355",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4968#issuecomment-1098340355",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4968",
    "id": 1098340355,
    "node_id": "IC_kwDOAkfq-c5Bd1gD",
    "user": {
      "login": "cds-amal",
      "id": 2529600,
      "node_id": "MDQ6VXNlcjI1Mjk2MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2529600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cds-amal",
      "html_url": "https://github.com/cds-amal",
      "followers_url": "https://api.github.com/users/cds-amal/followers",
      "following_url": "https://api.github.com/users/cds-amal/following{/other_user}",
      "gists_url": "https://api.github.com/users/cds-amal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cds-amal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cds-amal/subscriptions",
      "organizations_url": "https://api.github.com/users/cds-amal/orgs",
      "repos_url": "https://api.github.com/users/cds-amal/repos",
      "events_url": "https://api.github.com/users/cds-amal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cds-amal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-04-13T18:08:57Z",
    "updated_at": "2022-04-13T18:08:57Z",
    "author_association": "MEMBER",
    "body": "Thanks @jbrower95, We'll review and discuss before commenting. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1098340355/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1118897148",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4968#issuecomment-1118897148",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4968",
    "id": 1118897148,
    "node_id": "IC_kwDOAkfq-c5CsQP8",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-05T18:10:38Z",
    "updated_at": "2022-05-05T18:10:38Z",
    "author_association": "MEMBER",
    "body": "Cool idea, but I'm not sure this belongs as part of Truffle itself. To be clear, you can currently use your testing framework with Truffle, and with this issue you're only looking for deeper integration?\r\n\r\nIf that's the case, sadly we're taking the position now that we must remove Truffle's strong opinions, and it seems that this would be better suited to a future plugin system enhancement. If you'd like, please open a [GitHub Discussion](https://github.com/trufflesuite/truffle/discussions) about what this kind of plugin might look like!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1118897148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1130709093",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4968#issuecomment-1130709093",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4968",
    "id": 1130709093,
    "node_id": "IC_kwDOAkfq-c5DZUBl",
    "user": {
      "login": "lsqproduction",
      "id": 12772017,
      "node_id": "MDQ6VXNlcjEyNzcyMDE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12772017?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsqproduction",
      "html_url": "https://github.com/lsqproduction",
      "followers_url": "https://api.github.com/users/lsqproduction/followers",
      "following_url": "https://api.github.com/users/lsqproduction/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsqproduction/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsqproduction/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsqproduction/subscriptions",
      "organizations_url": "https://api.github.com/users/lsqproduction/orgs",
      "repos_url": "https://api.github.com/users/lsqproduction/repos",
      "events_url": "https://api.github.com/users/lsqproduction/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsqproduction/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-18T23:16:01Z",
    "updated_at": "2022-05-18T23:16:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Close for issue maintenance. Please open a new issue if needed. ",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1130709093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
