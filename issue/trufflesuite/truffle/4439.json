{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/4439",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4439/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4439/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4439/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/4439",
  "id": 1055585901,
  "node_id": "I_kwDOAkfq-c4-6vZt",
  "number": 4439,
  "title": "Allow `version: \"pragma\"` to let you import across incompatible Solidity versions",
  "user": {
    "login": "gnidan",
    "id": 151065,
    "node_id": "MDQ6VXNlcjE1MTA2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gnidan",
    "html_url": "https://github.com/gnidan",
    "followers_url": "https://api.github.com/users/gnidan/followers",
    "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
    "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
    "organizations_url": "https://api.github.com/users/gnidan/orgs",
    "repos_url": "https://api.github.com/users/gnidan/repos",
    "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gnidan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 230393328,
      "node_id": "MDU6TGFiZWwyMzAzOTMzMjg=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/enhancement",
      "name": "enhancement",
      "color": "84b6eb",
      "default": true,
      "description": null
    },
    {
      "id": 971681714,
      "node_id": "MDU6TGFiZWw5NzE2ODE3MTQ=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/Compiler",
      "name": "Compiler",
      "color": "b60205",
      "default": false,
      "description": ""
    },
    {
      "id": 1675042241,
      "node_id": "MDU6TGFiZWwxNjc1MDQyMjQx",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/priority5%20%F0%9F%8C%80",
      "name": "priority5 ðŸŒ€",
      "color": "006b75",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-11-17T00:46:00Z",
  "updated_at": "2023-09-27T23:05:30Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Issue\r\n\r\nTruffle's `version: \"pragma\"` feature is awesome! It lets you compile your contracts even if they are written for differing Solidity versions.\r\n\r\nProblem is, if you import a file with an incompatible version, Truffle just throws an error. In many situations (e.g. importing a `library`), there's nothing we can do about that...\r\n\r\nBut there is a common situation that we _can_ handle completely! If the importing file uses the imported file only to reference its contracts externally, then we can ensure this import works perfectly by doing these steps:\r\n- Compile the imported file, capturing its resulting ABI\r\n- Pass this ABI into abi-to-sol or into @truffle/resolver's abi-to-sol functionality, specifying to produce Solidity matching the version of the importing file (note: this is blocked by #4365, which upgrades abi-to-sol to a version that produces version-specific output)\r\n- Compile the importing file, having `resolver.resolve` produce this generated (and version-compatible!) Solidity instead of reading the incompatible imported file from disk.\r\n\r\nDoing this would remove a lot of friction for use cases that involve writing contracts to interface externally with other on-chain contracts.\r\n\r\n## Steps to Reproduce\r\n\r\nCreate the following Solidity files:\r\n\r\n- <details>\r\n  <summary><code>A.sol</code></summary>\r\n\r\n  ```solidity\r\n  // SPDX-License-Identifier: UNLICENSED\r\n  pragma solidity 0.8.10;\r\n  \r\n  import \"./B.sol\";\r\n  \r\n  contract A {\r\n    B b;\r\n  \r\n    constructor(\r\n      address bAddress\r\n    ) {\r\n      b = B(bAddress);\r\n    }\r\n  \r\n    function run()\r\n      public\r\n      view\r\n      returns (bool)\r\n    {\r\n      Output memory output = b.run(Input({\r\n        a: 44,\r\n        b: \"hello\"\r\n      }));\r\n  \r\n      return output.result;\r\n    }\r\n  }\r\n  ```\r\n  </details>\r\n\r\n- <details>\r\n  <summary><code>B.sol</code></summary>\r\n  \r\n  ```solidity\r\n  // SPDX-License-Identifier: UNLICENSED\r\n  pragma solidity 0.7.6;\r\n  pragma abicoder v2;\r\n  \r\n  struct Input {\r\n    uint256 a;\r\n    string b;\r\n  }\r\n  \r\n  struct Output {\r\n    bool result;\r\n  }\r\n  \r\n  contract B {\r\n    function run(Input calldata input)\r\n      external\r\n      pure\r\n      returns (Output memory)\r\n    {\r\n      return Output({\r\n        result: input.a > 0\r\n      });\r\n    }\r\n  }\r\n  ```\r\n  </details>\r\n\r\nThen, set `version: \"pragma\"` in the solc truffle-config and compile.\r\n\r\n## Desired behavior\r\n\r\nTruffle should observe the incompatible versions and regenerate `B.sol` on the fly (likely using the abi-to-sol functionality provided by @truffle/resolver). Compilation should just work.\r\n\r\n**Note** that this should work even if `B.sol` defines a contract with a name other than `B`; Truffle should look inside `B.sol` to determine what `interface` name to produce. This may not be feasible[^1], however, so perhaps we can treat \"source file must match contract name\" as an okay initial constraint? Blech.\r\n\r\n[^1]: \r\n    It might not be feasible because we'd be forced to run abi-to-sol multiple times (once for each ABI produced when compiling a given source), and doing this has high risk of name collisions that would cause compilation to fail. \r\n    \r\n    The open abi-to-sol issue https://github.com/gnidan/abi-to-sol/issues/41 describes this problem a bit further.\r\n\r\n## Actual Results\r\n\r\nRight now, the `version: \"pragma\"` feature detects the incompatible versions and throws a friendly error about it.\r\n\r\n## Environment\r\n\r\n* Operating System: \r\n* Ethereum client:\r\n* Truffle version (`truffle version`): v5.4.19\r\n* node version (`node --version`):\r\n* npm version (`npm --version`): \r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/4439/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4439/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1055609642",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4439#issuecomment-1055609642",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4439",
    "id": 1055609642,
    "node_id": "IC_kwDOAkfq-c4-61Mq",
    "user": {
      "login": "RatanRSur",
      "id": 4733314,
      "node_id": "MDQ6VXNlcjQ3MzMzMTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4733314?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RatanRSur",
      "html_url": "https://github.com/RatanRSur",
      "followers_url": "https://api.github.com/users/RatanRSur/followers",
      "following_url": "https://api.github.com/users/RatanRSur/following{/other_user}",
      "gists_url": "https://api.github.com/users/RatanRSur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RatanRSur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RatanRSur/subscriptions",
      "organizations_url": "https://api.github.com/users/RatanRSur/orgs",
      "repos_url": "https://api.github.com/users/RatanRSur/repos",
      "events_url": "https://api.github.com/users/RatanRSur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RatanRSur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-01T16:13:20Z",
    "updated_at": "2022-03-01T16:13:20Z",
    "author_association": "NONE",
    "body": "I see that #4420 made some progess on this. Any idea when it could be in at least an experimental version?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1055609642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1186423829",
    "html_url": "https://github.com/trufflesuite/truffle/issues/4439#issuecomment-1186423829",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/4439",
    "id": 1186423829,
    "node_id": "IC_kwDOAkfq-c5Gt2QV",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-17T07:00:28Z",
    "updated_at": "2022-07-17T07:00:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I see that #4420 made some progess on this. Any idea when it could be in at least an experimental version?\r\n\r\n@RatanRSur sorry I missed this. Our plans for implementing this fix rely on producing ABI JSON for the imported contract and generating Solidity `interface`s for the importer to use. Since Truffle currently uses the [my personal other] library [abi-to-sol](https://github.com/gnidan/abi-to-sol) for this purpose elsewhere in an experimental capacity (in Truffle, you can import `.abi.json` files directly!), but that library has a nasty limitation in the way I implemented it, and thus this stays open for now. See the original issue writeup above for a bit more on why this issue is blocked.\r\n\r\nSorry about that, but glad to hear you're interested in this feature! Hopefully I'll make some headway the next time I try to refactor abi-to-sol to address the underlying limitation.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1186423829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
