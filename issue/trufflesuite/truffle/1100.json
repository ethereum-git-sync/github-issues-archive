{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/1100",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1100/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1100/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1100/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/1100",
  "id": 340635486,
  "node_id": "MDU6SXNzdWUzNDA2MzU0ODY=",
  "number": 1100,
  "title": "Contracts factory unit test with javascript tests is not working as expected",
  "user": {
    "login": "moshebeeri",
    "id": 574405,
    "node_id": "MDQ6VXNlcjU3NDQwNQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/574405?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/moshebeeri",
    "html_url": "https://github.com/moshebeeri",
    "followers_url": "https://api.github.com/users/moshebeeri/followers",
    "following_url": "https://api.github.com/users/moshebeeri/following{/other_user}",
    "gists_url": "https://api.github.com/users/moshebeeri/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/moshebeeri/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/moshebeeri/subscriptions",
    "organizations_url": "https://api.github.com/users/moshebeeri/orgs",
    "repos_url": "https://api.github.com/users/moshebeeri/repos",
    "events_url": "https://api.github.com/users/moshebeeri/events{/privacy}",
    "received_events_url": "https://api.github.com/users/moshebeeri/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2018-07-12T13:21:55Z",
  "updated_at": "2018-07-12T21:50:03Z",
  "closed_at": "2018-07-12T16:25:51Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "\r\n\r\nI am trying to unit test contract factory in javascript\r\n```\r\nit('should create dog and get its name', async () => {\r\n   let dogAddress = await contractFactory.createDog.call('Doggy')\r\n   let dog = Dog.at(dogAddress)\r\n   let name = await dog.getName()\r\n   assert.equal(name, 'Doggy', `Name should be Doggy`)\r\n})\r\n\r\n```\r\nwhile createDog looks like:\r\n```\r\nfunction createDog( bytes32 _name ) public onlyOwner returns(address) {\r\n   require(_name.length != 0);\r\n   Dog newDog = new Dog(_name);\r\n   dogs[_name] = newDog;\r\n   return address(newDog);\r\n}\r\n\r\n```\r\nI am getting:\r\n```\r\nContract: Dog\r\nshould create Dog contract:\r\nError: Attempting to run transaction which calls a contract function, but recipient address 0x633baefc98220497eb7ee323480c87ce51a44955 is not a contract address\r\n\r\n```\r\nany idea whats wrong? is it a bug?\r\n\r\n\r\n* Operating System: mac \r\n* Ethereum client:unit test\r\n* Truffle version (`truffle version`):Truffle v4.1.13 (core: 4.1.13) Solidity v0.4.24 (solc-js)\r\n* node version (`node --version`):v8.11.1\r\n* npm version (`npm --version`): 6.0.1",
  "closed_by": {
    "login": "cgewecke",
    "id": 7332026,
    "node_id": "MDQ6VXNlcjczMzIwMjY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cgewecke",
    "html_url": "https://github.com/cgewecke",
    "followers_url": "https://api.github.com/users/cgewecke/followers",
    "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
    "organizations_url": "https://api.github.com/users/cgewecke/orgs",
    "repos_url": "https://api.github.com/users/cgewecke/repos",
    "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cgewecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/1100/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1100/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/404570490",
    "html_url": "https://github.com/trufflesuite/truffle/issues/1100#issuecomment-404570490",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/1100",
    "id": 404570490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDU3MDQ5MA==",
    "user": {
      "login": "cgewecke",
      "id": 7332026,
      "node_id": "MDQ6VXNlcjczMzIwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7332026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgewecke",
      "html_url": "https://github.com/cgewecke",
      "followers_url": "https://api.github.com/users/cgewecke/followers",
      "following_url": "https://api.github.com/users/cgewecke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgewecke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgewecke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgewecke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgewecke/orgs",
      "repos_url": "https://api.github.com/users/cgewecke/repos",
      "events_url": "https://api.github.com/users/cgewecke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgewecke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T16:25:12Z",
    "updated_at": "2018-07-12T16:25:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@moshebeeri \r\n\r\nThere are several issues here. You are post-fixing `.call` on methods you actually want to 'send' as transactions to the network, writing state to the chain. `.call` runs the transaction locally without persisting state and is useful for retrieving data from a client, or for testing out a transaction before broadcasting it. \r\n\r\nMore info about this difference  [here](https://ethereum.stackexchange.com/questions/765/what-is-the-difference-between-a-transaction-and-a-call).\r\n\r\n`truffle` will automatically figure out whether to call or send your function based on the contract ABI which is generated during Solidity compilation. So you can just write:\r\n```javascript\r\nawait contractFactory.createDog('doggy'); // send fn\r\nawait dog.getName();  // call fn\r\n```\r\nand they should both work as expected. \r\n\r\nAdditionally, the return value of `createDog` in JS will be a transaction receipt, not an address. To retrieve the address you should `.call` your public storage mapping `dogs` with the appropriate key and *then* instantiate the created address using `Dog.at`. \r\n\r\nYou might want to  look through the Solidity [documentation](https://solidity.readthedocs.io/en/v0.4.24/) and read the [web3 wiki](https://github.com/ethereum/wiki/wiki/JavaScript-API) to get a good sense of how these languages/libraries work. Truffle wraps these but there are critical concepts that are important to understand in those docs. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/404570490/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
