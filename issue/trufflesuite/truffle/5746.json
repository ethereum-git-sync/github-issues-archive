{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/5746",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5746/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5746/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5746/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/5746",
  "id": 1469771098,
  "node_id": "I_kwDOAkfq-c5Xmu1a",
  "number": 5746,
  "title": "TS compilation errors in contract-schema",
  "user": {
    "login": "wbt",
    "id": 563406,
    "node_id": "MDQ6VXNlcjU2MzQwNg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/563406?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wbt",
    "html_url": "https://github.com/wbt",
    "followers_url": "https://api.github.com/users/wbt/followers",
    "following_url": "https://api.github.com/users/wbt/following{/other_user}",
    "gists_url": "https://api.github.com/users/wbt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wbt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wbt/subscriptions",
    "organizations_url": "https://api.github.com/users/wbt/orgs",
    "repos_url": "https://api.github.com/users/wbt/repos",
    "events_url": "https://api.github.com/users/wbt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wbt/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1675041996,
      "node_id": "MDU6TGFiZWwxNjc1MDQxOTk2",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/priority4%20%F0%9F%93%8B",
      "name": "priority4 ðŸ“‹",
      "color": "006b75",
      "default": false,
      "description": ""
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2022-11-30T14:55:04Z",
  "updated_at": "2023-01-25T16:46:19Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "In addition to issues duplicating #4825 (closed & I can't reopen, but for a different package) about types being messed up, in @truffle/contract-schema the [index.d.ts](https://npm.runkit.com/@truffle/contract-schema/spec/index.d.ts?t=1669818862275) file triggers 21 errors on compilation, related to possibly-undefined values not being assignable to a definitely-defined index type: \r\n\r\n```\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:79:3 - error TS2411: Property 'contractName' of type 'string | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n79   contractName?: string;\r\n     ~~~~~~~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:81:3 - error TS2411: Property 'metadata' of type 'string | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n81   metadata?: Metadata;\r\n     ~~~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:85:3 - error TS2411: Property 'bytecode' of type 'string | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n85   bytecode?: string;\r\n     ~~~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:89:3 - error TS2411: Property 'deployedBytecode' of type 'string | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n89   deployedBytecode?: string;\r\n     ~~~~~~~~~~~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:93:3 - error TS2411: Property 'sourceMap' of type 'string | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n93   sourceMap?: string;\r\n     ~~~~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:97:3 - error TS2411: Property 'deployedSourceMap' of type 'string | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n97   deployedSourceMap?: string;\r\n     ~~~~~~~~~~~~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:98:3 - error TS2411: Property 'source' of type 'string | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n98   source?: Source;\r\n     ~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:99:3 - error TS2411: Property 'sourcePath' of type 'string | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n99   sourcePath?: SourcePath;\r\n     ~~~~~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:100:3 - error TS2411: Property 'ast' of type 'Ast | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n100   ast?: Ast;\r\n      ~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:101:3 - error TS2411: Property 'legacyAST' of type 'LegacyAst | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n101   legacyAST?: LegacyAst;\r\n      ~~~~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:102:3 - error TS2411: Property 'compiler' of type '{ [k: string]: any; name?: string | undefined; version?: string | undefined; } | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n102   compiler?: {\r\n      ~~~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:107:3 - error TS2411: Property 'networks' of type '{ [k: string]: NetworkObject; } | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n107   networks?: {\r\n      ~~~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:110:3 - error TS2411: Property 'schemaVersion' of type 'string | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n110   schemaVersion?: SchemaVersion;\r\n      ~~~~~~~~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:111:3 - error TS2411: Property 'updatedAt' of type 'string | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n111   updatedAt?: string;\r\n      ~~~~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:112:3 - error TS2411: Property 'networkType' of type 'string | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n112   networkType?: string;\r\n      ~~~~~~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:113:3 - error TS2411: Property 'devdoc' of type 'NatSpec | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n113   devdoc?: NatSpec;\r\n      ~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:114:3 - error TS2411: Property 'userdoc' of type 'NatSpec | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n114   userdoc?: NatSpec;\r\n      ~~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:115:3 - error TS2411: Property 'immutableReferences' of type 'ImmutableReferences | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n115   immutableReferences?: ImmutableReferences;\r\n      ~~~~~~~~~~~~~~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:116:3 - error TS2411: Property 'generatedSources' of type 'GeneratedSources | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n116   generatedSources?: GeneratedSources;\r\n      ~~~~~~~~~~~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:117:3 - error TS2411: Property 'deployedGeneratedSources' of type 'GeneratedSources | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n117   deployedGeneratedSources?: GeneratedSources;\r\n      ~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nnode_modules/@truffle/contract-schema/spec/index.d.ts:118:3 - error TS2411: Property 'db' of type '{ [k: string]: { [k: string]: any; id?: string | undefined; }; } | undefined' is not assignable to 'string' index type 'string | number | boolean | any[] | { [k: string]: any; }'.\r\n\r\n118   db?: {\r\n      ~~\r\n```\r\n\r\nI don't think that simply removing this file (as in #5142), especially on a patch-level bump, is the right solution, as having *some* type in there, even if it has errors, gives the compiler more to work with.  Adding `| undefined` after line 137 takes care of the errors (not all the issues, but at least the TS compilation errors) in a way that wouldn't break any existing code (as far as I can tell). Changing that in the generated file would require changing the generation script.  There is a comment just above that index type definition that *This interface was referenced by `ContractObject`'s JSON-Schema definition via the `patternProperty` \"^x-\".* Maybe the change should happen in the JSON-Schema definition, maybe it's in the patternProperty, or maybe it's in the script that parses both, but this is at least a hint. ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/5746/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5746/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1334215045",
    "html_url": "https://github.com/trufflesuite/truffle/issues/5746#issuecomment-1334215045",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5746",
    "id": 1334215045,
    "node_id": "IC_kwDOAkfq-c5PhoGF",
    "user": {
      "login": "eggplantzzz",
      "id": 14827965,
      "node_id": "MDQ6VXNlcjE0ODI3OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggplantzzz",
      "html_url": "https://github.com/eggplantzzz",
      "followers_url": "https://api.github.com/users/eggplantzzz/followers",
      "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
      "repos_url": "https://api.github.com/users/eggplantzzz/repos",
      "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-01T19:01:50Z",
    "updated_at": "2022-12-01T19:02:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for reporting this @wbt! Yeah it looks like our types are messed up in contract-schema. In the meantime, enabling the `skipLibCheck` in your `tsconfig.json` might be a valid workaround. Hopefully we can figure out a solution to this eventually. Currently we don't plan on removing those types.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1334215045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1334525939",
    "html_url": "https://github.com/trufflesuite/truffle/issues/5746#issuecomment-1334525939",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5746",
    "id": 1334525939,
    "node_id": "IC_kwDOAkfq-c5Piz_z",
    "user": {
      "login": "wbt",
      "id": 563406,
      "node_id": "MDQ6VXNlcjU2MzQwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/563406?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wbt",
      "html_url": "https://github.com/wbt",
      "followers_url": "https://api.github.com/users/wbt/followers",
      "following_url": "https://api.github.com/users/wbt/following{/other_user}",
      "gists_url": "https://api.github.com/users/wbt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wbt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wbt/subscriptions",
      "organizations_url": "https://api.github.com/users/wbt/orgs",
      "repos_url": "https://api.github.com/users/wbt/repos",
      "events_url": "https://api.github.com/users/wbt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wbt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-01T22:25:16Z",
    "updated_at": "2022-12-01T22:27:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the note! \r\nUnfortunately, `skipLibCheck` seems to be a rather blunt instrument that suppresses all errors in .d.ts files.  For several months I was using a tsconfig that extended a standard one where that option was set to true, and it made for a lot of very hard-to-debug errors showing up in .ts files ultimately traceable back to errors in project-specific .d.ts files that set up libraries of types for use in the project.  We determined it was way better to enable typechecking on those files and any issues that crop up get flagged right away with high visibility in the IDE, so they get fixed at the source instead of propagating to places where the error messages do not provide any information that is helpful in diagnosing and fixing the issue.\r\n\r\nUltimately, I expect this will be best fixed in the json-schema-to-typescript library, but in the interim we are considering running a little script that goes into the node-modules folder and modifies the definition to add that one `|undefined` on the index type.  Having that run in the Truffle repository between the json-schema-to-typescript and the publication of a package on npm would fix it for more than just my colleagues and I - would Truffle folks appreciate re-contribution of this band-aid?\r\n\r\nHardcoding type definitions in Truffle (starting with the autogenerated version) is another option and could address the other issues like what's called out in #4825, but would reduce maintainability by requiring that any changes to the JSON spec also be manually reflected in the types.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1334525939/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1339927577",
    "html_url": "https://github.com/trufflesuite/truffle/issues/5746#issuecomment-1339927577",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5746",
    "id": 1339927577,
    "node_id": "IC_kwDOAkfq-c5P3awZ",
    "user": {
      "login": "eggplantzzz",
      "id": 14827965,
      "node_id": "MDQ6VXNlcjE0ODI3OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/14827965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eggplantzzz",
      "html_url": "https://github.com/eggplantzzz",
      "followers_url": "https://api.github.com/users/eggplantzzz/followers",
      "following_url": "https://api.github.com/users/eggplantzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/eggplantzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eggplantzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eggplantzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/eggplantzzz/orgs",
      "repos_url": "https://api.github.com/users/eggplantzzz/repos",
      "events_url": "https://api.github.com/users/eggplantzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eggplantzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-06T19:52:58Z",
    "updated_at": "2022-12-06T19:52:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for https://github.com/trufflesuite/truffle/pull/5747 @wbt! To be honest this part of the codebase is not my specialty. Do you have anything helpful to add about this @gnidan?",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1339927577/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1403857200",
    "html_url": "https://github.com/trufflesuite/truffle/issues/5746#issuecomment-1403857200",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/5746",
    "id": 1403857200,
    "node_id": "IC_kwDOAkfq-c5TrSkw",
    "user": {
      "login": "wbt",
      "id": 563406,
      "node_id": "MDQ6VXNlcjU2MzQwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/563406?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wbt",
      "html_url": "https://github.com/wbt",
      "followers_url": "https://api.github.com/users/wbt/followers",
      "following_url": "https://api.github.com/users/wbt/following{/other_user}",
      "gists_url": "https://api.github.com/users/wbt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wbt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wbt/subscriptions",
      "organizations_url": "https://api.github.com/users/wbt/orgs",
      "repos_url": "https://api.github.com/users/wbt/repos",
      "events_url": "https://api.github.com/users/wbt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wbt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-25T16:09:09Z",
    "updated_at": "2023-01-25T16:46:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Checking in on this, as it's still a script we're running and may still be a blocking issue for others.",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/1403857200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
