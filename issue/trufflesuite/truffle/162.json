{
  "url": "https://api.github.com/repos/trufflesuite/truffle/issues/162",
  "repository_url": "https://api.github.com/repos/trufflesuite/truffle",
  "labels_url": "https://api.github.com/repos/trufflesuite/truffle/issues/162/labels{/name}",
  "comments_url": "https://api.github.com/repos/trufflesuite/truffle/issues/162/comments",
  "events_url": "https://api.github.com/repos/trufflesuite/truffle/issues/162/events",
  "html_url": "https://github.com/trufflesuite/truffle/issues/162",
  "id": 155851939,
  "node_id": "MDU6SXNzdWUxNTU4NTE5Mzk=",
  "number": 162,
  "title": "Contract blocks make for verbose test output",
  "user": {
    "login": "raineorshine",
    "id": 750276,
    "node_id": "MDQ6VXNlcjc1MDI3Ng==",
    "avatar_url": "https://avatars.githubusercontent.com/u/750276?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/raineorshine",
    "html_url": "https://github.com/raineorshine",
    "followers_url": "https://api.github.com/users/raineorshine/followers",
    "following_url": "https://api.github.com/users/raineorshine/following{/other_user}",
    "gists_url": "https://api.github.com/users/raineorshine/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/raineorshine/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/raineorshine/subscriptions",
    "organizations_url": "https://api.github.com/users/raineorshine/orgs",
    "repos_url": "https://api.github.com/users/raineorshine/repos",
    "events_url": "https://api.github.com/users/raineorshine/events{/privacy}",
    "received_events_url": "https://api.github.com/users/raineorshine/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 230393328,
      "node_id": "MDU6TGFiZWwyMzAzOTMzMjg=",
      "url": "https://api.github.com/repos/trufflesuite/truffle/labels/enhancement",
      "name": "enhancement",
      "color": "84b6eb",
      "default": true,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2016-05-19T22:44:04Z",
  "updated_at": "2019-06-12T17:56:14Z",
  "closed_at": "2019-06-12T17:56:14Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "Calling `contract('MyContract', ...)` deploys a new contract for my unit test and outputs a line to the reporter that says `Contract: MyContract`. In most cases I want to do this for each assertion, as I need to test on a fresh contract. This creates lots of redundancy in the mocha output:\n\n```\ndescribe('MyFunction', () => {\n  contract('MyContract', accounts => {\n    it('should do X', () => {\n      ...\n    })\n  contract('MyContract', accounts => {\n    it('should do Y', () => {\n      ...\n    })\n  contract('MyContract', accounts => {\n    it('should do Z', () => {\n      ...\n    })\n  })\n```\n\n```\n  MyFunction\n    Contract: MyContract\n      ✓ should do X\n    Contract: MyContract\n      ✓ should do Y\n    Contract: MyContract\n      ✓ should do Z\n```\n\nPerhaps the output should be squelched and let users use `describe`? Or perhaps it should function as an `it` block? Let me know what you think! Thanks!\n",
  "closed_by": {
    "login": "gnidan",
    "id": 151065,
    "node_id": "MDQ6VXNlcjE1MTA2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gnidan",
    "html_url": "https://github.com/gnidan",
    "followers_url": "https://api.github.com/users/gnidan/followers",
    "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
    "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
    "organizations_url": "https://api.github.com/users/gnidan/orgs",
    "repos_url": "https://api.github.com/users/gnidan/repos",
    "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gnidan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/162/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/trufflesuite/truffle/issues/162/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/220850119",
    "html_url": "https://github.com/trufflesuite/truffle/issues/162#issuecomment-220850119",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/162",
    "id": 220850119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDg1MDExOQ==",
    "user": {
      "login": "raineorshine",
      "id": 750276,
      "node_id": "MDQ6VXNlcjc1MDI3Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/750276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raineorshine",
      "html_url": "https://github.com/raineorshine",
      "followers_url": "https://api.github.com/users/raineorshine/followers",
      "following_url": "https://api.github.com/users/raineorshine/following{/other_user}",
      "gists_url": "https://api.github.com/users/raineorshine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raineorshine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raineorshine/subscriptions",
      "organizations_url": "https://api.github.com/users/raineorshine/orgs",
      "repos_url": "https://api.github.com/users/raineorshine/repos",
      "events_url": "https://api.github.com/users/raineorshine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raineorshine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-22T19:11:01Z",
    "updated_at": "2016-05-22T19:11:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI, as a temporary solution I overrode the mocha reporter to expunge the `Contract: ...` statements from the output.\n\ntruffle.js:\n\n```\n  mocha: {\n    reporter: __dirname + '/spec-custom.js'\n  }\n```\n\nspec-custom.js:\n\n``` js\n/* A custom reporter based on the built-in spec.js from mocha. The only difference is that it hides messages that start with \"Contract: \" which truffle unnecessarily adds. */\n\n/**\n * Module dependencies.\n */\n\nvar mochaRoot = './node_modules/mocha'\n\nvar Base = require(mochaRoot + '/lib/reporters/base');\nvar inherits = require(mochaRoot + '/lib/utils').inherits;\nvar color = Base.color;\nvar cursor = Base.cursor;\n\nfunction ignoreSuite(suite) {\n  return suite.title.slice(0, 10) === 'Contract: ';\n}\n\n/**\n * Expose `Spec`.\n */\n\nexports = module.exports = Spec;\n\n/**\n * Initialize a new `Spec` test reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction Spec(runner) {\n  Base.call(this, runner);\n\n  var self = this;\n  var indents = 0;\n  var n = 0;\n\n  function indent() {\n    return Array(indents).join('  ');\n  }\n\n  runner.on('start', function() {\n    console.log();\n  });\n\n  runner.on('suite', function(suite) {\n    //-- MODIFIED -----------------------------------------------------\n    if(!ignoreSuite(suite)) {\n      ++indents;\n      console.log(color('suite', '%s%s'), indent(), suite.title);\n    }\n    //-----------------------------------------------------------------\n  });\n\n  runner.on('suite end', function(suite) {\n    //-- MODIFIED -----------------------------------------------------\n    if(!suite || !ignoreSuite(suite)) {\n      --indents;\n      if (indents === 1) {\n        console.log();\n      }\n    }\n    //-----------------------------------------------------------------\n  });\n\n  runner.on('pending', function(test) {\n    var fmt = indent() + color('pending', '  - %s');\n    console.log(fmt, test.title);\n  });\n\n  runner.on('pass', function(test) {\n    var fmt;\n    if (test.speed === 'fast') {\n      fmt = indent()\n        + color('checkmark', '  ' + Base.symbols.ok)\n        + color('pass', ' %s');\n      cursor.CR();\n      console.log(fmt, test.title);\n    } else {\n      fmt = indent()\n        + color('checkmark', '  ' + Base.symbols.ok)\n        + color('pass', ' %s')\n        + color(test.speed, ' (%dms)');\n      cursor.CR();\n      console.log(fmt, test.title, test.duration);\n    }\n  });\n\n  runner.on('fail', function(test) {\n    cursor.CR();\n    console.log(indent() + color('fail', '  %d) %s'), ++n, test.title);\n  });\n\n  runner.on('end', self.epilogue.bind(self));\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(Spec, Base);\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/220850119/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/242466750",
    "html_url": "https://github.com/trufflesuite/truffle/issues/162#issuecomment-242466750",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/162",
    "id": 242466750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjQ2Njc1MA==",
    "user": {
      "login": "tcoulter",
      "id": 92629,
      "node_id": "MDQ6VXNlcjkyNjI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/92629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tcoulter",
      "html_url": "https://github.com/tcoulter",
      "followers_url": "https://api.github.com/users/tcoulter/followers",
      "following_url": "https://api.github.com/users/tcoulter/following{/other_user}",
      "gists_url": "https://api.github.com/users/tcoulter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tcoulter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tcoulter/subscriptions",
      "organizations_url": "https://api.github.com/users/tcoulter/orgs",
      "repos_url": "https://api.github.com/users/tcoulter/repos",
      "events_url": "https://api.github.com/users/tcoulter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tcoulter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T17:08:09Z",
    "updated_at": "2016-08-25T17:08:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Interesting @raineorshine. I'm seeing this issue for the first time today. \n\nI like the reporter. Can you give me an example of what the output looks like now? \n\nPerhaps there's a way to tell when a contract block exists within a describe block. Either way, we can't completely get rid of `contract` (or override `describe`) because you may want to use a `describe` when you don't want the features of `contract`\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/242466750/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/245634887",
    "html_url": "https://github.com/trufflesuite/truffle/issues/162#issuecomment-245634887",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/162",
    "id": 245634887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTYzNDg4Nw==",
    "user": {
      "login": "markspanbroek",
      "id": 1766771,
      "node_id": "MDQ6VXNlcjE3NjY3NzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1766771?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markspanbroek",
      "html_url": "https://github.com/markspanbroek",
      "followers_url": "https://api.github.com/users/markspanbroek/followers",
      "following_url": "https://api.github.com/users/markspanbroek/following{/other_user}",
      "gists_url": "https://api.github.com/users/markspanbroek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markspanbroek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markspanbroek/subscriptions",
      "organizations_url": "https://api.github.com/users/markspanbroek/orgs",
      "repos_url": "https://api.github.com/users/markspanbroek/repos",
      "events_url": "https://api.github.com/users/markspanbroek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markspanbroek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-08T15:24:56Z",
    "updated_at": "2016-09-08T15:24:56Z",
    "author_association": "NONE",
    "body": "@raineorshine: If you just want a fresh contract for each test, you can create it in the beforeEach function:\n\n``` javascript\ncontract('MyContract', function(accounts) {\n\n    var myContract\n\n    beforeEach(function() {\n        return MyContract.new().then(function(instance){\n            myContract = instance\n        })\n    })\n\n    it('should do X'...\n\n    it('should do Y'...\n\n})\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/245634887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/245713777",
    "html_url": "https://github.com/trufflesuite/truffle/issues/162#issuecomment-245713777",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/162",
    "id": 245713777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTcxMzc3Nw==",
    "user": {
      "login": "raineorshine",
      "id": 750276,
      "node_id": "MDQ6VXNlcjc1MDI3Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/750276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raineorshine",
      "html_url": "https://github.com/raineorshine",
      "followers_url": "https://api.github.com/users/raineorshine/followers",
      "following_url": "https://api.github.com/users/raineorshine/following{/other_user}",
      "gists_url": "https://api.github.com/users/raineorshine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raineorshine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raineorshine/subscriptions",
      "organizations_url": "https://api.github.com/users/raineorshine/orgs",
      "repos_url": "https://api.github.com/users/raineorshine/repos",
      "events_url": "https://api.github.com/users/raineorshine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raineorshine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-08T19:33:42Z",
    "updated_at": "2016-09-08T19:33:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tcoulter: The output looks the same as the original, just without any of the \"Contract:\" lines. \n\nI wouldn't suggest removing the contract block completely, just the reporter output. Although, I suppose @markspanbroek's suggestion could work without a special construct. \n",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/245713777/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/432766412",
    "html_url": "https://github.com/trufflesuite/truffle/issues/162#issuecomment-432766412",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/162",
    "id": 432766412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjc2NjQxMg==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-24T18:02:50Z",
    "updated_at": "2018-10-24T18:02:50Z",
    "author_association": "MEMBER",
    "body": "Is this still something you want @raineorshine? Let us know or please close the issue. Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/432766412/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/501386813",
    "html_url": "https://github.com/trufflesuite/truffle/issues/162#issuecomment-501386813",
    "issue_url": "https://api.github.com/repos/trufflesuite/truffle/issues/162",
    "id": 501386813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTM4NjgxMw==",
    "user": {
      "login": "gnidan",
      "id": 151065,
      "node_id": "MDQ6VXNlcjE1MTA2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnidan",
      "html_url": "https://github.com/gnidan",
      "followers_url": "https://api.github.com/users/gnidan/followers",
      "following_url": "https://api.github.com/users/gnidan/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnidan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnidan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnidan/subscriptions",
      "organizations_url": "https://api.github.com/users/gnidan/orgs",
      "repos_url": "https://api.github.com/users/gnidan/repos",
      "events_url": "https://api.github.com/users/gnidan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnidan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-12T17:56:14Z",
    "updated_at": "2019-06-12T17:56:14Z",
    "author_association": "MEMBER",
    "body": "Wow an old issue! I'm gonna close this... but looks cool. Let us know if you want us to look into it some more and we can re-open. Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/trufflesuite/truffle/issues/comments/501386813/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
