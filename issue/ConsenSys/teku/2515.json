{
  "url": "https://api.github.com/repos/ConsenSys/teku/issues/2515",
  "repository_url": "https://api.github.com/repos/ConsenSys/teku",
  "labels_url": "https://api.github.com/repos/ConsenSys/teku/issues/2515/labels{/name}",
  "comments_url": "https://api.github.com/repos/ConsenSys/teku/issues/2515/comments",
  "events_url": "https://api.github.com/repos/ConsenSys/teku/issues/2515/events",
  "html_url": "https://github.com/ConsenSys/teku/issues/2515",
  "id": 673851971,
  "node_id": "MDU6SXNzdWU2NzM4NTE5NzE=",
  "number": 2515,
  "title": "Limit number of connections per IP",
  "user": {
    "login": "jrhea",
    "id": 5555162,
    "node_id": "MDQ6VXNlcjU1NTUxNjI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5555162?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jrhea",
    "html_url": "https://github.com/jrhea",
    "followers_url": "https://api.github.com/users/jrhea/followers",
    "following_url": "https://api.github.com/users/jrhea/following{/other_user}",
    "gists_url": "https://api.github.com/users/jrhea/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jrhea/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jrhea/subscriptions",
    "organizations_url": "https://api.github.com/users/jrhea/orgs",
    "repos_url": "https://api.github.com/users/jrhea/repos",
    "events_url": "https://api.github.com/users/jrhea/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jrhea/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-08-05T21:15:08Z",
  "updated_at": "2022-12-02T01:11:26Z",
  "closed_at": "2022-12-02T01:11:26Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "<!-- Have you done the following? -->\r\n<!--   * read the Code of Conduct? By filing an Issue, you are expected to -->  \r\n<!--     comply with it, including treating everyone with respect: -->\r\n<!--     https://github.com/PegasysEng/teku/blob/master/CODE-OF-CONDUCT.md -->\r\n<!--   * Reproduced the issue in the latest version of the software -->\r\n<!--   * Read the debugging wiki: https://github.com/PegasysEng/teku/wiki/debugging -->\r\n<!--   * Duplicate Issue check:  https://github.com/search?q=+is%3Aissue+repo%3APegasysEng/Teku -->\r\n<!-- Note:  Not all sections will apply to all issue types. -->\r\n\r\n### Description\r\nI can open thousands of connections to Teku from a single IP using the following code:\r\n\r\n```python\r\n#!/usr/bin/python3\r\nimport os\r\nimport threading\r\nimport socket\r\nimport time\r\n\r\ndef main():\r\n    threads = []\r\n    for i in range(150):\r\n        thread = threading.Thread(target=worker, args=(i,))\r\n        threads.append(thread)\r\n        thread.start()\r\n\r\ndef worker(worker_id):\r\n    pid = os.getpid()\r\n    while True:\r\n      sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\n      sock.connect((\"192.168.1.212\", 13001))\r\n      print(\"Worker {} connected\".format(worker_id))\r\n      time.sleep(20)\r\n      sock.close()\r\n\r\nif name == \"__main__\":\r\n    main()\r\n\r\n```\r\n\r\nI can spawn multiple instances of it and potentially overload Teku with open connections.  The following command shows my teku instance using 2300+ file descriptors\r\n\r\n```\r\n$ lsof | awk '{print $1}' | uniq -c | grep \"java\"\r\n2330 java\r\n\r\n```\r\n\r\n\r\n",
  "closed_by": {
    "login": "ajsutton",
    "id": 72675,
    "node_id": "MDQ6VXNlcjcyNjc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ajsutton",
    "html_url": "https://github.com/ajsutton",
    "followers_url": "https://api.github.com/users/ajsutton/followers",
    "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
    "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
    "organizations_url": "https://api.github.com/users/ajsutton/orgs",
    "repos_url": "https://api.github.com/users/ajsutton/repos",
    "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ajsutton/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/2515/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ConsenSys/teku/issues/2515/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/671130801",
    "html_url": "https://github.com/ConsenSys/teku/issues/2515#issuecomment-671130801",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/2515",
    "id": 671130801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTEzMDgwMQ==",
    "user": {
      "login": "rolfyone",
      "id": 2967240,
      "node_id": "MDQ6VXNlcjI5NjcyNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2967240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rolfyone",
      "html_url": "https://github.com/rolfyone",
      "followers_url": "https://api.github.com/users/rolfyone/followers",
      "following_url": "https://api.github.com/users/rolfyone/following{/other_user}",
      "gists_url": "https://api.github.com/users/rolfyone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rolfyone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rolfyone/subscriptions",
      "organizations_url": "https://api.github.com/users/rolfyone/orgs",
      "repos_url": "https://api.github.com/users/rolfyone/repos",
      "events_url": "https://api.github.com/users/rolfyone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rolfyone/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-10T01:36:11Z",
    "updated_at": "2020-08-10T01:36:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "to accomplish this, the plan seems to be \n - update libp2p to have a handshake timeout, terminating connections that fail to conform within a given time\n - update libp2p to limit new incoming connections so there's only a certain pool size for incoming streams.\n\nTo prevent DOS, there should be still room for us to start outgoing connections without causing issues.\n\nI've played around a bit with teku to try to get some of this happening, but by the time the PeerManager gets involved, all the handshaking is completed, so we can't really terminate non compliant incoming connections at that layer.\n\nI've updated the script a little to print + NUM when connecting, and - NUM when it detects a disconnection, but the disconnection is not currently shown, because we don't terminate the connections. It might be helpful when actually making the change, so i've included here.\n\n```\n#!/usr/bin/python3\nimport os\nimport threading\nimport socket\nimport time\n\ndef main():\n    threads = []\n    for i in range(10):\n        thread = threading.Thread(target=worker, args=(i,))\n        threads.append(thread)\n        thread.start()\n\ndef worker(worker_id):\n    pid = os.getpid()\n    while True:\n        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        sock.connect((\"127.0.0.1\", 9000))\n        print(\"+ {}\".format(worker_id))\n\n        for counter in range(20):\n            if is_socket_closed(sock):\n                print(\"- {}\".format(worker_id))\n                break\n            time.sleep(1)\n\n        sock.close()\n\ndef is_socket_closed(sock: socket.socket) -> bool:\n    try:\n        # this will try to read bytes without blocking and also without removing them from buffer (peek only)\n        data = sock.recv(16, socket.MSG_DONTWAIT | socket.MSG_PEEK)\n        if len(data) == 0:\n            return True\n    except BlockingIOError:\n        return False  # socket is open and reading from it would block\n    except ConnectionResetError:\n        print(\"  => connection reset\")\n        return True  # socket was closed for some other reason\n    except Exception as e:\n        print(e)\n        print(\"  => unexpected exception when checking if a socket is closed\")\n        return False\n    return False\n\nif __name__ == \"__main__\":\n    main()\n\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/671130801/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1334642452",
    "html_url": "https://github.com/ConsenSys/teku/issues/2515#issuecomment-1334642452",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/2515",
    "id": 1334642452,
    "node_id": "IC_kwDOCM9I9M5PjQcU",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-12-02T01:11:26Z",
    "updated_at": "2022-12-02T01:11:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing this one - there may be some value in limiting by IP but Anton has shown it's actually quite easy to just use a lot of different IPs and teku can handle the number of open connections fine given libp2p closes them out fairly quickly.  Java also ups the file descriptor limit as far as it's allowed when it first starts so users have to specifically set tight restrictions to have issues (and then leveldb and java's file handle usage are likely to cause them more problems than network connections).",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1334642452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
