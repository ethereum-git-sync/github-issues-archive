{
  "url": "https://api.github.com/repos/ConsenSys/teku/issues/234",
  "repository_url": "https://api.github.com/repos/ConsenSys/teku",
  "labels_url": "https://api.github.com/repos/ConsenSys/teku/issues/234/labels{/name}",
  "comments_url": "https://api.github.com/repos/ConsenSys/teku/issues/234/comments",
  "events_url": "https://api.github.com/repos/ConsenSys/teku/issues/234/events",
  "html_url": "https://github.com/ConsenSys/teku/issues/234",
  "id": 406148860,
  "node_id": "MDU6SXNzdWU0MDYxNDg4NjA=",
  "number": 234,
  "title": "Standardize how Lists are passed to SSZWriter for serialization in toBytes method",
  "user": {
    "login": "schroedingerscode",
    "id": 25290629,
    "node_id": "MDQ6VXNlcjI1MjkwNjI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/25290629?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/schroedingerscode",
    "html_url": "https://github.com/schroedingerscode",
    "followers_url": "https://api.github.com/users/schroedingerscode/followers",
    "following_url": "https://api.github.com/users/schroedingerscode/following{/other_user}",
    "gists_url": "https://api.github.com/users/schroedingerscode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/schroedingerscode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/schroedingerscode/subscriptions",
    "organizations_url": "https://api.github.com/users/schroedingerscode/orgs",
    "repos_url": "https://api.github.com/users/schroedingerscode/repos",
    "events_url": "https://api.github.com/users/schroedingerscode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/schroedingerscode/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1168122557,
      "node_id": "MDU6TGFiZWwxMTY4MTIyNTU3",
      "url": "https://api.github.com/repos/ConsenSys/teku/labels/code%20style%20%F0%9F%92%85",
      "name": "code style ðŸ’…",
      "color": "9cdfed",
      "default": false,
      "description": "This issue or pull request makes our code prettier"
    },
    {
      "id": 1170684912,
      "node_id": "MDU6TGFiZWwxMTcwNjg0OTEy",
      "url": "https://api.github.com/repos/ConsenSys/teku/labels/good%20first%20issue%20:raising_hand:",
      "name": "good first issue :raising_hand:",
      "color": "006b75",
      "default": false,
      "description": "This is a good first issue for a new contributor to work on"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "schroedingerscode",
    "id": 25290629,
    "node_id": "MDQ6VXNlcjI1MjkwNjI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/25290629?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/schroedingerscode",
    "html_url": "https://github.com/schroedingerscode",
    "followers_url": "https://api.github.com/users/schroedingerscode/followers",
    "following_url": "https://api.github.com/users/schroedingerscode/following{/other_user}",
    "gists_url": "https://api.github.com/users/schroedingerscode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/schroedingerscode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/schroedingerscode/subscriptions",
    "organizations_url": "https://api.github.com/users/schroedingerscode/orgs",
    "repos_url": "https://api.github.com/users/schroedingerscode/repos",
    "events_url": "https://api.github.com/users/schroedingerscode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/schroedingerscode/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "schroedingerscode",
      "id": 25290629,
      "node_id": "MDQ6VXNlcjI1MjkwNjI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/25290629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/schroedingerscode",
      "html_url": "https://github.com/schroedingerscode",
      "followers_url": "https://api.github.com/users/schroedingerscode/followers",
      "following_url": "https://api.github.com/users/schroedingerscode/following{/other_user}",
      "gists_url": "https://api.github.com/users/schroedingerscode/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/schroedingerscode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/schroedingerscode/subscriptions",
      "organizations_url": "https://api.github.com/users/schroedingerscode/orgs",
      "repos_url": "https://api.github.com/users/schroedingerscode/repos",
      "events_url": "https://api.github.com/users/schroedingerscode/events{/privacy}",
      "received_events_url": "https://api.github.com/users/schroedingerscode/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2019-02-04T00:18:24Z",
  "updated_at": "2019-02-09T00:48:28Z",
  "closed_at": "2019-02-09T00:48:28Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\nStandardize how `java.util.List` objects are passed to `SSZWriter` for serialization in the `toBytes` method of the following `tech.pegasys.artemis.datastructures`:\r\n- `tech.pegasys.artemis.datastructures.operations.Exit`\r\n- `tech.pegasys.artemis.datastructures.operations.Attestation`\r\n- `tech.pegasys.artemis.datastructures.operations.Deposit`\r\n- `tech.pegasys.artemis.datastructures.operations.SlashableVoteData`\r\n- `tech.pegasys.artemis.datastructures.blocks.BeaconBlock`\r\n- `tech.pegasys.artemis.datastructures.blocks.BeaconBlockBody`\r\n- `tech.pegasys.artemis.datastructures.operations.DepositInput`\r\n- `tech.pegasys.artemis.datastructures.operations.ProposerSlashing`\r\n\r\n**NOTE: The above classes were all of the classes that serialize a List type in one form or another as of the writing of this Issue. The developer which picks up this Issue should do their own search to double check this.**\r\n\r\n### Acceptance Criteria\r\n* A standard way to passing java.util.List must be decided upon an implemented. \r\n_The current approach is to convert a List to a primitive array, which is done in all of the above classes with `BeaconBlockBody` excepted._\r\n* Preference is for [Cava's SSZWriter](https://github.com/ConsenSys/cava/blob/master/ssz/src/main/java/net/consensys/cava/ssz/SSZWriter.java) to natively support `java.util.List`, and to simply pass the List type. \r\n\r\n### Additional Information\r\nAn issue has been opened in Cava to track this feature. Please see https://github.com/ConsenSys/cava/issues/142 for updates.\r\n",
  "closed_by": {
    "login": "schroedingerscode",
    "id": 25290629,
    "node_id": "MDQ6VXNlcjI1MjkwNjI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/25290629?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/schroedingerscode",
    "html_url": "https://github.com/schroedingerscode",
    "followers_url": "https://api.github.com/users/schroedingerscode/followers",
    "following_url": "https://api.github.com/users/schroedingerscode/following{/other_user}",
    "gists_url": "https://api.github.com/users/schroedingerscode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/schroedingerscode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/schroedingerscode/subscriptions",
    "organizations_url": "https://api.github.com/users/schroedingerscode/orgs",
    "repos_url": "https://api.github.com/users/schroedingerscode/repos",
    "events_url": "https://api.github.com/users/schroedingerscode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/schroedingerscode/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/234/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ConsenSys/teku/issues/234/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
